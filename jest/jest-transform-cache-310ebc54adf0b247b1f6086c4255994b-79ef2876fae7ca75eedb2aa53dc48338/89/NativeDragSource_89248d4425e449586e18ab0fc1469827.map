{"version":3,"sources":["../../src/NativeDragSources/NativeDragSource.ts"],"sourcesContent":["import type { DragDropMonitor } from 'dnd-core'\n\nimport type { NativeItemConfig } from './nativeTypesConfig.js'\n\nexport class NativeDragSource {\n\tpublic item: any\n\tprivate config: NativeItemConfig\n\n\tpublic constructor(config: NativeItemConfig) {\n\t\tthis.config = config\n\t\tthis.item = {}\n\t\tthis.initializeExposedProperties()\n\t}\n\n\tprivate initializeExposedProperties() {\n\t\tObject.keys(this.config.exposeProperties).forEach((property) => {\n\t\t\tObject.defineProperty(this.item, property, {\n\t\t\t\tconfigurable: true, // This is needed to allow redefining it later\n\t\t\t\tenumerable: true,\n\t\t\t\tget() {\n\t\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t`Browser doesn't allow reading \"${property}\" until the drop event.`,\n\t\t\t\t\t)\n\t\t\t\t\treturn null\n\t\t\t\t},\n\t\t\t})\n\t\t})\n\t}\n\n\tpublic loadDataTransfer(dataTransfer: DataTransfer | null | undefined): void {\n\t\tif (dataTransfer) {\n\t\t\tconst newProperties: PropertyDescriptorMap = {}\n\t\t\tObject.keys(this.config.exposeProperties).forEach((property) => {\n\t\t\t\tconst propertyFn = this.config.exposeProperties[property]\n\t\t\t\tif (propertyFn != null) {\n\t\t\t\t\tnewProperties[property] = {\n\t\t\t\t\t\tvalue: propertyFn(dataTransfer, this.config.matchesTypes),\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tObject.defineProperties(this.item, newProperties)\n\t\t}\n\t}\n\n\tpublic canDrag(): boolean {\n\t\treturn true\n\t}\n\n\tpublic beginDrag(): any {\n\t\treturn this.item\n\t}\n\n\tpublic isDragging(monitor: DragDropMonitor, handle: string): boolean {\n\t\treturn handle === monitor.getSourceId()\n\t}\n\n\tpublic endDrag(): void {\n\t\t// empty\n\t}\n}\n"],"names":["NativeDragSource","initializeExposedProperties","Object","keys","config","exposeProperties","forEach","property","defineProperty","item","configurable","enumerable","get","console","warn","loadDataTransfer","dataTransfer","newProperties","propertyFn","value","matchesTypes","defineProperties","canDrag","beginDrag","isDragging","monitor","handle","getSourceId","endDrag","constructor"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAIaA;;;eAAAA;;;AAAN,MAAMA;IAUZC,8BAAsC;QACrCC,OAAOC,IAAI,CAAC,IAAI,CAACC,MAAM,CAACC,gBAAgB,EAAEC,OAAO,CAAC,CAACC;YAClDL,OAAOM,cAAc,CAAC,IAAI,CAACC,IAAI,EAAEF,UAAU;gBAC1CG,cAAc;gBACdC,YAAY;gBACZC;oBACC,sCAAsC;oBACtCC,QAAQC,IAAI,CACX,CAAC,+BAA+B,EAAEP,SAAS,uBAAuB,CAAC;oBAEpE,OAAO;;;;;IAMXQ,iBAAwBC,YAA6C,EAAQ;QAC5E,IAAIA,cAAc;YACjB,MAAMC,gBAAuC,CAAA;YAC7Cf,OAAOC,IAAI,CAAC,IAAI,CAACC,MAAM,CAACC,gBAAgB,EAAEC,OAAO,CAAC,CAACC;gBAClD,MAAMW,aAAa,IAAI,CAACd,MAAM,CAACC,gBAAgB,CAACE,SAAS;gBACzD,IAAIW,cAAc,MAAM;oBACvBD,aAAa,CAACV,SAAS,GAAG;wBACzBY,OAAOD,WAAWF,cAAc,IAAI,CAACZ,MAAM,CAACgB,YAAY;wBACxDV,cAAc;wBACdC,YAAY;;;;YAIfT,OAAOmB,gBAAgB,CAAC,IAAI,CAACZ,IAAI,EAAEQ;;;IAIrCK,UAA0B;QACzB,OAAO;;IAGRC,YAAwB;QACvB,OAAO,IAAI,CAACd,IAAI;;IAGjBe,WAAkBC,OAAwB,EAAEC,MAAc,EAAW;QACpE,OAAOA,WAAWD,QAAQE,WAAW;;IAGtCC,UAAuB;IACtB,QAAQ;;IApDTC,YAAmBzB,MAAwB,CAAE;QAC5C,IAAI,CAACA,MAAM,GAAGA;QACd,IAAI,CAACK,IAAI,GAAG,CAAA;QACZ,IAAI,CAACR,2BAA2B"}