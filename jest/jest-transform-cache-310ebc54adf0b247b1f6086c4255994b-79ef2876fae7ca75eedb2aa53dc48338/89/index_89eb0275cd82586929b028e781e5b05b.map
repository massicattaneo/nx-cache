{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/node_modules/mdast-util-gfm-task-list-item/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {ok as assert} from 'devlop'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM task\n * list items in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemFromMarkdown() {\n  return {\n    exit: {\n      taskListCheckValueChecked: exitCheck,\n      taskListCheckValueUnchecked: exitCheck,\n      paragraph: exitParagraphWithTaskListItem\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM task list\n * items in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemToMarkdown() {\n  return {\n    unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n    handlers: {listItem: listItemWithTaskListItem}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCheck(token) {\n  // Weâ€™re always in a paragraph, in a list item.\n  const node = this.stack[this.stack.length - 2]\n  assert(node.type === 'listItem')\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = this.stack[this.stack.length - 2]\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean'\n  ) {\n    const node = this.stack[this.stack.length - 1]\n    assert(node.type === 'paragraph')\n    const head = node.children[0]\n\n    if (head && head.type === 'text') {\n      const siblings = parent.children\n      let index = -1\n      /** @type {Paragraph | undefined} */\n      let firstParaghraph\n\n      while (++index < siblings.length) {\n        const sibling = siblings[index]\n        if (sibling.type === 'paragraph') {\n          firstParaghraph = sibling\n          break\n        }\n      }\n\n      if (firstParaghraph === node) {\n        // Must start with a space or a tab.\n        head.value = head.value.slice(1)\n\n        if (head.value.length === 0) {\n          node.children.shift()\n        } else if (\n          node.position &&\n          head.position &&\n          typeof head.position.start.offset === 'number'\n        ) {\n          head.position.start.column++\n          head.position.start.offset++\n          node.position.start = Object.assign({}, head.position.start)\n        }\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, state, info) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = state.createTracker(info)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = defaultHandlers.listItem(node, parent, state, {\n    ...info,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n"],"names":["gfmTaskListItemFromMarkdown","gfmTaskListItemToMarkdown","exit","taskListCheckValueChecked","exitCheck","taskListCheckValueUnchecked","paragraph","exitParagraphWithTaskListItem","unsafe","atBreak","character","after","handlers","listItem","listItemWithTaskListItem","token","node","stack","length","assert","type","checked","parent","head","children","siblings","index","firstParaghraph","sibling","value","slice","shift","position","start","offset","column","Object","assign","state","info","checkable","checkbox","tracker","createTracker","move","defaultHandlers","current","replace","check","$0"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA;;;;;;;;CAQC;;;;;;;;;;;IAYeA,2BAA2B;eAA3BA;;IAiBAC,yBAAyB;eAAzBA;;;wBA3BW;qCACG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASvB,SAASD;IACd,OAAO;QACLE,MAAM;YACJC,2BAA2BC;YAC3BC,6BAA6BD;YAC7BE,WAAWC;QACb;IACF;AACF;AASO,SAASN;IACd,OAAO;QACLO,QAAQ;YAAC;gBAACC,SAAS;gBAAMC,WAAW;gBAAKC,OAAO;YAAO;SAAE;QACzDC,UAAU;YAACC,UAAUC;QAAwB;IAC/C;AACF;AAEA;;;CAGC,GACD,SAASV,UAAUW,KAAK;IACtB,+CAA+C;IAC/C,MAAMC,OAAO,IAAI,CAACC,KAAK,CAAC,IAAI,CAACA,KAAK,CAACC,MAAM,GAAG,EAAE;IAC9CC,IAAAA,UAAM,EAACH,KAAKI,IAAI,KAAK;IACrBJ,KAAKK,OAAO,GAAGN,MAAMK,IAAI,KAAK;AAChC;AAEA;;;CAGC,GACD,SAASb,8BAA8BQ,KAAK;IAC1C,MAAMO,SAAS,IAAI,CAACL,KAAK,CAAC,IAAI,CAACA,KAAK,CAACC,MAAM,GAAG,EAAE;IAEhD,IACEI,UACAA,OAAOF,IAAI,KAAK,cAChB,OAAOE,OAAOD,OAAO,KAAK,WAC1B;QACA,MAAML,OAAO,IAAI,CAACC,KAAK,CAAC,IAAI,CAACA,KAAK,CAACC,MAAM,GAAG,EAAE;QAC9CC,IAAAA,UAAM,EAACH,KAAKI,IAAI,KAAK;QACrB,MAAMG,OAAOP,KAAKQ,QAAQ,CAAC,EAAE;QAE7B,IAAID,QAAQA,KAAKH,IAAI,KAAK,QAAQ;YAChC,MAAMK,WAAWH,OAAOE,QAAQ;YAChC,IAAIE,QAAQ,CAAC;YACb,kCAAkC,GAClC,IAAIC;YAEJ,MAAO,EAAED,QAAQD,SAASP,MAAM,CAAE;gBAChC,MAAMU,UAAUH,QAAQ,CAACC,MAAM;gBAC/B,IAAIE,QAAQR,IAAI,KAAK,aAAa;oBAChCO,kBAAkBC;oBAClB;gBACF;YACF;YAEA,IAAID,oBAAoBX,MAAM;gBAC5B,oCAAoC;gBACpCO,KAAKM,KAAK,GAAGN,KAAKM,KAAK,CAACC,KAAK,CAAC;gBAE9B,IAAIP,KAAKM,KAAK,CAACX,MAAM,KAAK,GAAG;oBAC3BF,KAAKQ,QAAQ,CAACO,KAAK;gBACrB,OAAO,IACLf,KAAKgB,QAAQ,IACbT,KAAKS,QAAQ,IACb,OAAOT,KAAKS,QAAQ,CAACC,KAAK,CAACC,MAAM,KAAK,UACtC;oBACAX,KAAKS,QAAQ,CAACC,KAAK,CAACE,MAAM;oBAC1BZ,KAAKS,QAAQ,CAACC,KAAK,CAACC,MAAM;oBAC1BlB,KAAKgB,QAAQ,CAACC,KAAK,GAAGG,OAAOC,MAAM,CAAC,CAAC,GAAGd,KAAKS,QAAQ,CAACC,KAAK;gBAC7D;YACF;QACF;IACF;IAEA,IAAI,CAAC/B,IAAI,CAACa;AACZ;AAEA;;;CAGC,GACD,SAASD,yBAAyBE,IAAI,EAAEM,MAAM,EAAEgB,KAAK,EAAEC,IAAI;IACzD,MAAMhB,OAAOP,KAAKQ,QAAQ,CAAC,EAAE;IAC7B,MAAMgB,YACJ,OAAOxB,KAAKK,OAAO,KAAK,aAAaE,QAAQA,KAAKH,IAAI,KAAK;IAC7D,MAAMqB,WAAW,MAAOzB,CAAAA,KAAKK,OAAO,GAAG,MAAM,GAAE,IAAK;IACpD,MAAMqB,UAAUJ,MAAMK,aAAa,CAACJ;IAEpC,IAAIC,WAAW;QACbE,QAAQE,IAAI,CAACH;IACf;IAEA,IAAIZ,QAAQgB,oCAAe,CAAChC,QAAQ,CAACG,MAAMM,QAAQgB,OAAO,mBACrDC,MACAG,QAAQI,OAAO;IAGpB,IAAIN,WAAW;QACbX,QAAQA,MAAMkB,OAAO,CAAC,mCAAmCC;IAC3D;IAEA,OAAOnB;IAEP;;;GAGC,GACD,SAASmB,MAAMC,EAAE;QACf,OAAOA,KAAKR;IACd;AACF"}