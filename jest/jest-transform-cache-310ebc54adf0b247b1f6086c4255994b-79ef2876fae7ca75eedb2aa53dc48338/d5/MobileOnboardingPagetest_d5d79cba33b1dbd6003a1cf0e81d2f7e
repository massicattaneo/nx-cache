210910e244f0265a16b9b7a3b020bb3a
"use strict";
jest.mock("@rp/react/web/common/hooks", ()=>_object_spread_props(_object_spread({}, jest.requireActual("@rp/react/web/common/hooks")), {
        useDeviceInfo: jest.fn()
    }));
jest.mock("react-i18next", ()=>_object_spread_props(_object_spread({}, jest.requireActual("react-i18next")), {
        useTranslation: jest.fn()
    }));
jest.mock("@rp/react/common/assets", ()=>({
        BigdataLogoWhite: ()=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                "data-testid": "logo",
                children: "Logo"
            })
    }));
jest.mock("./assets/grid.svg", ()=>({
        __esModule: true,
        default: ()=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                "data-testid": "grid-svg",
                children: "Grid"
            })
    }));
jest.mock("./assets/iconsGrid.svg", ()=>({
        __esModule: true,
        default: ()=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                "data-testid": "icons-grid-svg",
                children: "Icons Grid"
            })
    }));
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _jsxruntime = require("react/jsx-runtime");
const _reacti18next = require("react-i18next");
const _hooks = require("@rp/react/web/common/hooks");
const _core = require("@rp/react/web/mui/core");
const _react = require("@testing-library/react");
const _MobileOnboardingPage = require("./MobileOnboardingPage");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
// Mock the dependencies
const useMockDeviceInfo = _hooks.useDeviceInfo;
const useMockTranslation = _reacti18next.useTranslation;
describe("MobileOnboardingPage", ()=>{
    const mockTheme = (0, _core.createTheme)({
        palette: {
            surface: {
                background: "#000000"
            },
            text: {
                primary: "#ffffff"
            },
            textColor: {
                700: "#777777"
            }
        }
    });
    const defaultProps = {
        onPressContinueWeb: jest.fn(),
        deepLinkURL: "https://example.com/app"
    };
    const mockTranslation = {
        t: jest.fn((key, options)=>{
            const translations = {
                "mobileOnboardingPage.android": "Android",
                "mobileOnboardingPage.ios": "iOS",
                "mobileOnboardingPage.title": `Download on ${options === null || options === void 0 ? void 0 : options.SO}`,
                "mobileOnboardingPage.getAppButton": `Get ${options === null || options === void 0 ? void 0 : options.SO} App`,
                "mobileOnboardingPage.continueWebVersionButton": "Continue to web version"
            };
            return translations[key] || key;
        })
    };
    beforeEach(()=>{
        jest.clearAllMocks();
        useMockTranslation.mockReturnValue(mockTranslation);
        // Mock window.open
        global.open = jest.fn();
    });
    describe("Android device rendering", ()=>{
        beforeEach(()=>{
            useMockDeviceInfo.mockReturnValue({
                isAndroid: true,
                isIOS: false
            });
        });
        it("renders Android-specific content correctly", ()=>{
            (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_core.ThemeProvider, {
                theme: mockTheme,
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_MobileOnboardingPage.MobileOnboardingPage, _object_spread({}, defaultProps))
            }));
            expect(_react.screen.getByText("Download on Android")).toBeInTheDocument();
            expect(_react.screen.getByText("Get Android App")).toBeInTheDocument();
            expect(_react.screen.getByTestId("logo")).toBeInTheDocument();
        });
        it("handles app store link click", ()=>{
            (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_core.ThemeProvider, {
                theme: mockTheme,
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_MobileOnboardingPage.MobileOnboardingPage, _object_spread({}, defaultProps))
            }));
            const storeButton = _react.screen.getByText("Get Android App");
            _react.fireEvent.click(storeButton);
            expect(global.open).toHaveBeenCalledWith("https://example.com/app", "_blank", "noopener,noreferrer");
        });
    });
    describe("iOS device rendering", ()=>{
        beforeEach(()=>{
            useMockDeviceInfo.mockReturnValue({
                isAndroid: false,
                isIOS: true
            });
        });
        it("renders iOS-specific content correctly", ()=>{
            (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_core.ThemeProvider, {
                theme: mockTheme,
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_MobileOnboardingPage.MobileOnboardingPage, _object_spread({}, defaultProps))
            }));
            expect(_react.screen.getByText("Download on iOS")).toBeInTheDocument();
            expect(_react.screen.getByText("Get iOS App")).toBeInTheDocument();
        });
        it("handles app store link click", ()=>{
            (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_core.ThemeProvider, {
                theme: mockTheme,
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_MobileOnboardingPage.MobileOnboardingPage, _object_spread({}, defaultProps))
            }));
            const storeButton = _react.screen.getByText("Get iOS App");
            _react.fireEvent.click(storeButton);
            expect(global.open).toHaveBeenCalledWith("https://example.com/app", "_blank", "noopener,noreferrer");
        });
    });
    describe("Web version continuation", ()=>{
        beforeEach(()=>{
            jest.useFakeTimers();
        });
        afterEach(()=>{
            jest.useRealTimers();
        });
        it("handles continue to web version with animation", async ()=>{
            (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_core.ThemeProvider, {
                theme: mockTheme,
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_MobileOnboardingPage.MobileOnboardingPage, _object_spread({}, defaultProps))
            }));
            const webButton = _react.screen.getByText("Continue to web version");
            _react.fireEvent.click(webButton);
            // Wait for animation timeout
            (0, _react.act)(()=>{
                jest.advanceTimersByTime(500);
            });
            expect(defaultProps.onPressContinueWeb).toHaveBeenCalledTimes(1);
        });
    });
    describe("Layout and styling", ()=>{
        it("applies correct styling to buttons", ()=>{
            (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_core.ThemeProvider, {
                theme: mockTheme,
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_MobileOnboardingPage.MobileOnboardingPage, _object_spread({}, defaultProps))
            }));
            const appStoreButton = _react.screen.getByText(/Get (Android|iOS) App/);
            const webButton = _react.screen.getByText("Continue to web version");
            expect(appStoreButton).toHaveStyle({
                backgroundColor: mockTheme.palette.text.primary
            });
            expect(webButton).toHaveStyle({
                color: mockTheme.palette.textColor[700]
            });
        });
    });
});

//# sourceMappingURL=data:application/json;base64,