{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/composite-components/src/DocumentIcon/DocumentIcon.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport { useAtom } from \"jotai\"\nimport { CqsScope } from \"@rp/common/api-types\"\nimport { parseMetadata2, parseMetadata3 } from \"@rp/common/utils\"\nimport { useCqsByIdsContext } from \"@rp/react/tanstack-api/cqs-by-ids\"\nimport { FileIcon, TranscriptIcon } from \"@rp/react/web/icons\"\nimport { CircularProgress, SvgIcon, Typography } from \"@rp/react/web/mui/core\"\nimport { Public } from \"@rp/react/web/mui/icons\"\nimport { EllipsisTooltip } from \"../EllipsisTooltip\"\nimport { FaviconContainer, StoryCardStyled } from \"./DocumentIcon.styles\"\nimport { _atomImageUrls, getImage } from \"./documentIconUtils\"\n\nexport type DocumentIconProps = {\n  documentScope: CqsScope\n  text?: string | null\n  contentType?: string\n  srcKey?: string\n  isFetching?: boolean\n}\n\nconst DocumentIcon = ({\n  documentScope,\n  text,\n  contentType,\n  srcKey,\n  isFetching,\n}: DocumentIconProps) => {\n  const { ids, addByIds } = useCqsByIdsContext()\n  const { data, isLoading = true } = ids[srcKey || \"\"] ?? {}\n  const url3 = parseMetadata3(data?.metadata3)\n  const url2 = parseMetadata2(data?.metadata2)\n  const [imageUrls, setImageUrls] = useAtom(_atomImageUrls)\n  const [error, setError] = useState(false)\n  const [isLoaded, setIsLoaded] = useState(false)\n  const [url, setUrl] = useState(\"\")\n\n  useEffect(() => {\n    if (srcKey) {\n      addByIds([{ key: srcKey, queryType: \"source\" }])\n    }\n  }, [srcKey, addByIds, ids])\n\n  useEffect(() => {\n    if (isLoading) return\n    if (imageUrls.includes(url3 ?? \"\")) {\n      setUrl(url3 ?? \"\")\n      setIsLoaded(true)\n    } else if (imageUrls.includes(url2 ?? \"\")) {\n      setUrl(url2 ?? \"\")\n      setIsLoaded(true)\n    } else {\n      getImage(url3)\n        .catch(() => getImage(url2))\n        .then(url => {\n          setImageUrls(prev => prev.concat(url))\n          setUrl(url)\n          setIsLoaded(true)\n        })\n        .catch(() => {\n          setIsLoaded(true)\n          setError(true)\n        })\n    }\n  }, [isLoading, imageUrls, setImageUrls, url2, url3])\n\n  const documentScopeIcons = (documentScope: CqsScope) => {\n    switch (documentScope) {\n      case \"news\":\n        return <Public />\n      case \"transcripts\":\n        return (\n          <SvgIcon>\n            <TranscriptIcon />\n          </SvgIcon>\n        )\n      case \"files\":\n        return <FileIcon extension={contentType} />\n      default:\n        return null\n    }\n  }\n\n  let displayText = text\n  let tooltipText = text\n\n  if (documentScope === \"files\") {\n    if (!text) displayText = \"My Files\"\n    tooltipText = \"Internal document\"\n  }\n\n  const showGenericIcon = !isLoaded || error\n\n  return (\n    <StoryCardStyled documentScope={documentScope}>\n      <EllipsisTooltip\n        // forceShowTooltip={true}\n        forceShowTooltip={documentScope === \"files\"}\n        tooltipPlacement=\"right\"\n        tooltipText={tooltipText || \"\"}\n        typographyProps={{ style: { lineHeight: 1, display: \"flex\" } }}\n      >\n        {isFetching ? (\n          <CircularProgress size={14} sx={{ mr: \"2px\" }} />\n        ) : (\n          <FaviconContainer data-testid=\"source-icon\">\n            {showGenericIcon ? documentScopeIcons(documentScope) : null}\n            {url && (\n              <img\n                src={url}\n                alt={url}\n                height={16}\n                width={16}\n                style={{ display: showGenericIcon ? \"none\" : \"block\", borderRadius: \"2px\" }}\n              />\n            )}\n          </FaviconContainer>\n        )}\n        {displayText && tooltipText && (\n          <Typography\n            sx={{ overflow: \"hidden\", textOverflow: \"ellipsis\" }}\n            fontSize={12}\n            ml=\"4px\"\n            component=\"span\"\n            data-testid=\"source-name\"\n          >\n            {displayText}\n          </Typography>\n        )}\n      </EllipsisTooltip>\n    </StoryCardStyled>\n  )\n}\n\nexport { DocumentIcon }\n"],"names":["DocumentIcon","documentScope","text","contentType","srcKey","isFetching","ids","addByIds","useCqsByIdsContext","data","isLoading","url3","parseMetadata3","metadata3","url2","parseMetadata2","metadata2","imageUrls","setImageUrls","useAtom","_atomImageUrls","error","setError","useState","isLoaded","setIsLoaded","url","setUrl","useEffect","key","queryType","includes","getImage","catch","then","prev","concat","documentScopeIcons","Public","SvgIcon","TranscriptIcon","FileIcon","extension","displayText","tooltipText","showGenericIcon","StoryCardStyled","EllipsisTooltip","forceShowTooltip","tooltipPlacement","typographyProps","style","lineHeight","display","CircularProgress","size","sx","mr","FaviconContainer","data-testid","img","src","alt","height","width","borderRadius","Typography","overflow","textOverflow","fontSize","ml","component"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}