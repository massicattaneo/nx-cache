140534c8c2afb373e898b47d20db8a84
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "useSlackConnectOnRedirect", {
    enumerable: true,
    get: function() {
        return useSlackConnectOnRedirect;
    }
});
const _react = require("react");
const _notifications = require("@rp/react/tanstack-api/notifications");
const _hooks = require("@rp/react/web/common/hooks");
const _Snackbar = require("./Snackbar");
const useSlackConnectOnRedirect = ()=>{
    const { enqueueError } = (0, _Snackbar.useSnackbar)();
    const replace = (0, _hooks.useReplaceSearchParam)("slackTemporaryCode");
    const params = (0, _hooks.useQueryParams)();
    const temporaryCode = params.get("slackTemporaryCode");
    const { mutateAsync, isPending, isError } = (0, _notifications.useSlackConnect)({
        enqueueError
    });
    const connecting = (0, _react.useRef)(false);
    (0, _react.useEffect)(()=>{
        if (temporaryCode && !connecting.current) {
            connecting.current = true;
            mutateAsync({
                temporaryCode,
                redirectUri: (0, _notifications.getSlackStatelessRedirectUri)()
            }).finally(()=>{
                replace();
                connecting.current = false;
            });
        }
    }, [
        temporaryCode,
        mutateAsync,
        replace,
        enqueueError
    ]);
    return {
        isPending,
        isError
    };
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9wcm92aWRlcnMvc3JjL3VzZVNsYWNrQ29ubmVjdE9uUmVkaXJlY3QudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VSZWYgfSBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IHsgZ2V0U2xhY2tTdGF0ZWxlc3NSZWRpcmVjdFVyaSwgdXNlU2xhY2tDb25uZWN0IH0gZnJvbSBcIkBycC9yZWFjdC90YW5zdGFjay1hcGkvbm90aWZpY2F0aW9uc1wiXG5pbXBvcnQgeyB1c2VRdWVyeVBhcmFtcywgdXNlUmVwbGFjZVNlYXJjaFBhcmFtIH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvY29tbW9uL2hvb2tzXCJcbmltcG9ydCB7IHVzZVNuYWNrYmFyIH0gZnJvbSBcIi4vU25hY2tiYXJcIlxuXG5leHBvcnQgY29uc3QgdXNlU2xhY2tDb25uZWN0T25SZWRpcmVjdCA9ICgpID0+IHtcbiAgY29uc3QgeyBlbnF1ZXVlRXJyb3IgfSA9IHVzZVNuYWNrYmFyKClcbiAgY29uc3QgcmVwbGFjZSA9IHVzZVJlcGxhY2VTZWFyY2hQYXJhbShcInNsYWNrVGVtcG9yYXJ5Q29kZVwiKVxuICBjb25zdCBwYXJhbXMgPSB1c2VRdWVyeVBhcmFtcygpXG4gIGNvbnN0IHRlbXBvcmFyeUNvZGUgPSBwYXJhbXMuZ2V0KFwic2xhY2tUZW1wb3JhcnlDb2RlXCIpXG4gIGNvbnN0IHsgbXV0YXRlQXN5bmMsIGlzUGVuZGluZywgaXNFcnJvciB9ID0gdXNlU2xhY2tDb25uZWN0KHsgZW5xdWV1ZUVycm9yIH0pXG4gIGNvbnN0IGNvbm5lY3RpbmcgPSB1c2VSZWYoZmFsc2UpXG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAodGVtcG9yYXJ5Q29kZSAmJiAhY29ubmVjdGluZy5jdXJyZW50KSB7XG4gICAgICBjb25uZWN0aW5nLmN1cnJlbnQgPSB0cnVlXG4gICAgICBtdXRhdGVBc3luYyh7XG4gICAgICAgIHRlbXBvcmFyeUNvZGUsXG4gICAgICAgIHJlZGlyZWN0VXJpOiBnZXRTbGFja1N0YXRlbGVzc1JlZGlyZWN0VXJpKCksXG4gICAgICB9KS5maW5hbGx5KCgpID0+IHtcbiAgICAgICAgcmVwbGFjZSgpXG4gICAgICAgIGNvbm5lY3RpbmcuY3VycmVudCA9IGZhbHNlXG4gICAgICB9KVxuICAgIH1cbiAgfSwgW3RlbXBvcmFyeUNvZGUsIG11dGF0ZUFzeW5jLCByZXBsYWNlLCBlbnF1ZXVlRXJyb3JdKVxuICByZXR1cm4geyBpc1BlbmRpbmcsIGlzRXJyb3IgfVxufVxuIl0sIm5hbWVzIjpbInVzZVNsYWNrQ29ubmVjdE9uUmVkaXJlY3QiLCJlbnF1ZXVlRXJyb3IiLCJ1c2VTbmFja2JhciIsInJlcGxhY2UiLCJ1c2VSZXBsYWNlU2VhcmNoUGFyYW0iLCJwYXJhbXMiLCJ1c2VRdWVyeVBhcmFtcyIsInRlbXBvcmFyeUNvZGUiLCJnZXQiLCJtdXRhdGVBc3luYyIsImlzUGVuZGluZyIsImlzRXJyb3IiLCJ1c2VTbGFja0Nvbm5lY3QiLCJjb25uZWN0aW5nIiwidXNlUmVmIiwidXNlRWZmZWN0IiwiY3VycmVudCIsInJlZGlyZWN0VXJpIiwiZ2V0U2xhY2tTdGF0ZWxlc3NSZWRpcmVjdFVyaSIsImZpbmFsbHkiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBS2FBOzs7ZUFBQUE7Ozt1QkFMcUI7K0JBQzRCO3VCQUNSOzBCQUMxQjtBQUVyQixNQUFNQSw0QkFBNEI7SUFDdkMsTUFBTSxFQUFFQyxZQUFZLEVBQUUsR0FBR0MsSUFBQUEscUJBQVc7SUFDcEMsTUFBTUMsVUFBVUMsSUFBQUEsNEJBQXFCLEVBQUM7SUFDdEMsTUFBTUMsU0FBU0MsSUFBQUEscUJBQWM7SUFDN0IsTUFBTUMsZ0JBQWdCRixPQUFPRyxHQUFHLENBQUM7SUFDakMsTUFBTSxFQUFFQyxXQUFXLEVBQUVDLFNBQVMsRUFBRUMsT0FBTyxFQUFFLEdBQUdDLElBQUFBLDhCQUFlLEVBQUM7UUFBRVg7SUFBYTtJQUMzRSxNQUFNWSxhQUFhQyxJQUFBQSxhQUFNLEVBQUM7SUFFMUJDLElBQUFBLGdCQUFTLEVBQUM7UUFDUixJQUFJUixpQkFBaUIsQ0FBQ00sV0FBV0csT0FBTyxFQUFFO1lBQ3hDSCxXQUFXRyxPQUFPLEdBQUc7WUFDckJQLFlBQVk7Z0JBQ1ZGO2dCQUNBVSxhQUFhQyxJQUFBQSwyQ0FBNEI7WUFDM0MsR0FBR0MsT0FBTyxDQUFDO2dCQUNUaEI7Z0JBQ0FVLFdBQVdHLE9BQU8sR0FBRztZQUN2QjtRQUNGO0lBQ0YsR0FBRztRQUFDVDtRQUFlRTtRQUFhTjtRQUFTRjtLQUFhO0lBQ3RELE9BQU87UUFBRVM7UUFBV0M7SUFBUTtBQUM5QiJ9