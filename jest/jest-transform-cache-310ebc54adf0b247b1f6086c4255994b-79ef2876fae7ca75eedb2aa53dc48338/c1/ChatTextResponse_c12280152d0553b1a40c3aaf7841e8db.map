{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/chat/src/lib/Chat/Chat/ChatResponse/ChatTextResponse/ChatTextResponse.tsx"],"sourcesContent":["import { SwiperSlide } from \"swiper/react\"\nimport { BIG_SUMMARY_SOURCE_HEIGHT } from \"@rp/common/settings\"\nimport { getTimestampFromAudit } from \"@rp/common/utils\"\nimport { StoredAuditTrace } from \"@rp/react/tanstack-api/chat\"\nimport {\n  LlmDocumentSource,\n  LlmExternalSource,\n  LlmMetadata,\n} from \"@rp/react/tanstack-api/llm-summary\"\nimport { SwiperWithFadingArrows } from \"@rp/react/web/common/composite-components\"\nimport { useDeviceInfo } from \"@rp/react/web/common/hooks\"\nimport { Typography } from \"@rp/react/web/mui/core\"\nimport { ExternalSourceDisplay } from \"../ExternalSourceDisplay\"\nimport { SourceChatDisplay } from \"../SourceChatDisplay\"\nimport { getChunksFromAudit } from \"../getChunksFromAudit\"\n\ntype Props = {\n  sources: Array<LlmExternalSource | LlmDocumentSource>\n  questions: Array<StoredAuditTrace>\n  onSourceClick: (source: LlmDocumentSource | LlmExternalSource, index: number) => void\n  getMetadata: (id: string) => LlmMetadata | undefined\n}\n\nexport const ChatTextResponseSources = ({\n  sources,\n  questions,\n  onSourceClick,\n  getMetadata,\n}: Props) => {\n  const { isMobile } = useDeviceInfo()\n\n  return (\n    <>\n      <Typography variant=\"body2\" color=\"grey.300\" sx={{ ml: isMobile ? 2 : 0 }}>\n        Sources\n      </Typography>\n      <SwiperWithFadingArrows\n        spaceBetween={16}\n        sx={{\n          mt: 2,\n          \"& .swiper\": { zIndex: 0 },\n          \"& .swiper-arrow-wrapper\": { zIndex: 1 },\n        }}\n        slidesPerGroup={1}\n        height={BIG_SUMMARY_SOURCE_HEIGHT}\n        centeredSlides={isMobile}\n        centeredSlidesBounds={isMobile}\n      >\n        {sources.map((source, index) => {\n          switch (source.type) {\n            case \"DOCUMENT\":\n              return (\n                <SwiperSlide key={`${source.name}-${index}`} data-testid={`source-${index}`}>\n                  <SourceChatDisplay\n                    source={{\n                      ...source,\n                      imageUrls: getMetadata(source.id)?.imageUrls,\n                    }}\n                    relatedChunks={getChunksFromAudit(source.id, questions)}\n                    ts={getTimestampFromAudit(source.id, questions)}\n                    onClick={() => onSourceClick(source, index)}\n                  />\n                </SwiperSlide>\n              )\n            case \"EXTERNAL\":\n              return (\n                <SwiperSlide key={`${source.name}-${index}`} data-testid={`source-${index}`}>\n                  <ExternalSourceDisplay\n                    source={source}\n                    onClick={() => onSourceClick(source, index)}\n                  />\n                </SwiperSlide>\n              )\n            default:\n              source[\"type\"] satisfies never\n              return null\n          }\n        })}\n      </SwiperWithFadingArrows>\n    </>\n  )\n}\n"],"names":["ChatTextResponseSources","sources","questions","onSourceClick","getMetadata","isMobile","useDeviceInfo","Typography","variant","color","sx","ml","SwiperWithFadingArrows","spaceBetween","mt","zIndex","slidesPerGroup","height","BIG_SUMMARY_SOURCE_HEIGHT","centeredSlides","centeredSlidesBounds","map","source","index","type","SwiperSlide","data-testid","SourceChatDisplay","imageUrls","id","relatedChunks","getChunksFromAudit","ts","getTimestampFromAudit","onClick","name","ExternalSourceDisplay"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAuBaA;;;eAAAA;;;;uBAvBe;0BACc;uBACJ;qCAOC;uBACT;sBACH;uCACW;mCACJ;oCACC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAS5B,MAAMA,0BAA0B,CAAC,EACtCC,OAAO,EACPC,SAAS,EACTC,aAAa,EACbC,WAAW,EACL;IACN,MAAM,EAAEC,QAAQ,EAAE,GAAGC,IAAAA,oBAAa;IAElC,qBACE;;0BACE,qBAACC,gBAAU;gBAACC,SAAQ;gBAAQC,OAAM;gBAAWC,IAAI;oBAAEC,IAAIN,WAAW,IAAI;gBAAE;0BAAG;;0BAG3E,qBAACO,2CAAsB;gBACrBC,cAAc;gBACdH,IAAI;oBACFI,IAAI;oBACJ,aAAa;wBAAEC,QAAQ;oBAAE;oBACzB,2BAA2B;wBAAEA,QAAQ;oBAAE;gBACzC;gBACAC,gBAAgB;gBAChBC,QAAQC,mCAAyB;gBACjCC,gBAAgBd;gBAChBe,sBAAsBf;0BAErBJ,QAAQoB,GAAG,CAAC,CAACC,QAAQC;oBACpB,OAAQD,OAAOE,IAAI;wBACjB,KAAK;gCAMgBpB;4BALnB,qBACE,qBAACqB,kBAAW;gCAAiCC,eAAa,CAAC,OAAO,EAAEH,MAAM,CAAC;0CACzE,cAAA,qBAACI,oCAAiB;oCAChBL,QAAQ,wCACHA;wCACHM,SAAS,GAAExB,eAAAA,YAAYkB,OAAOO,EAAE,eAArBzB,mCAAAA,aAAwBwB,SAAS;;oCAE9CE,eAAeC,IAAAA,sCAAkB,EAACT,OAAOO,EAAE,EAAE3B;oCAC7C8B,IAAIC,IAAAA,4BAAqB,EAACX,OAAOO,EAAE,EAAE3B;oCACrCgC,SAAS,IAAM/B,cAAcmB,QAAQC;;+BARvB,CAAC,EAAED,OAAOa,IAAI,CAAC,CAAC,EAAEZ,MAAM,CAAC;wBAY/C,KAAK;4BACH,qBACE,qBAACE,kBAAW;gCAAiCC,eAAa,CAAC,OAAO,EAAEH,MAAM,CAAC;0CACzE,cAAA,qBAACa,4CAAqB;oCACpBd,QAAQA;oCACRY,SAAS,IAAM/B,cAAcmB,QAAQC;;+BAHvB,CAAC,EAAED,OAAOa,IAAI,CAAC,CAAC,EAAEZ,MAAM,CAAC;wBAO/C;4BACED,MAAM,CAAC,OAAO;4BACd,OAAO;oBACX;gBACF;;;;AAIR"}