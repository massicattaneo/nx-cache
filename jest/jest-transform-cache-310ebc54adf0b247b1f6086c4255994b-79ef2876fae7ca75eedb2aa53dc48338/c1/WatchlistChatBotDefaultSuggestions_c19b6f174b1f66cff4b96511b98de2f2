46a2f098ecdc651ca9fb08bfa4c6e822
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "WatchlistChatBotDefaultSuggestions", {
    enumerable: true,
    get: function() {
        return WatchlistChatBotDefaultSuggestions;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _assets = require("@rp/react/common/assets");
const _watchlists = require("@rp/react/common/watchlists");
const _core = require("@rp/react/web/mui/core");
const _WatchlistChatBotSuggestion = require("./WatchlistChatBotSuggestion");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
const SHOW_MORE_LIMIT = 5;
const WatchlistChatBotDefaultSuggestions = ({ workflows, displayName, onSuggestionClick, showAllPrompts, setShowAllPrompts, offsetY = 0, selectedEntity })=>{
    const raw = (0, _react.useMemo)(()=>{
        if (!selectedEntity) {
            return _watchlists.watchlistSuggestedPrompts.filter((suggestion)=>suggestion.disjunctiveFacets === null);
        }
        return _watchlists.watchlistSuggestedPrompts.filter((suggestion)=>{
            var _suggestion_disjunctiveFacets;
            return (_suggestion_disjunctiveFacets = suggestion.disjunctiveFacets) === null || _suggestion_disjunctiveFacets === void 0 ? void 0 : _suggestion_disjunctiveFacets.some((inner)=>{
                const sameCategory = selectedEntity.category === inner.category;
                const sameGroup1 = selectedEntity.group1 === inner.group1;
                return !inner.group1 && sameCategory || sameCategory && sameGroup1;
            });
        }).concat(workflows.map((wf)=>({
                id: `workflow-${wf.id}`,
                label: wf.flowName,
                prompt: ()=>"",
                workflow: {
                    id: wf.id
                },
                disjunctiveFacets: null,
                iconName: "FlashOn"
            })));
    }, [
        selectedEntity,
        workflows
    ]);
    const list = raw.sort((first, second)=>{
        if (first.workflow && second.workflow) return first.workflow.id.localeCompare(second.workflow.id);
        if (first.workflow) return -1;
        if (second.workflow) return 1;
        return first.label.localeCompare(second.label);
    }).slice(0, showAllPrompts ? 100000 : SHOW_MORE_LIMIT);
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
        sx: {
            pt: 2,
            px: 2,
            width: "100%",
            maxWidth: 700,
            mx: "auto"
        },
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                sx: {
                    display: "flex",
                    alignItems: "center",
                    gap: 1
                },
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_assets.BigdataChatAvatar, {
                        height: 28,
                        width: 28
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                        variant: "body2",
                        color: "text.secondary",
                        children: "Bigdata"
                    })
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Typography, {
                sx: {
                    fontSize: 18,
                    mt: 2
                },
                children: [
                    "What would you like to know about ",
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("strong", {
                        children: displayName
                    }),
                    "?"
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                sx: (theme)=>_object_spread({
                        backgroundColor: "elevation.dp06",
                        borderRadius: 2,
                        p: 2,
                        mt: 2,
                        maxHeight: `calc(100dvh - ${offsetY + 240}px)`,
                        overflowY: "auto"
                    }, theme.scrollbarStyles),
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                        variant: "body2",
                        color: "text.secondary",
                        sx: {
                            mb: 2
                        },
                        children: "Suggestions:"
                    }),
                    list.map((suggestion)=>{
                        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_WatchlistChatBotSuggestion.WatchlistChatBotSuggestion, {
                            suggestion: suggestion,
                            onSuggestionClick: onSuggestionClick
                        }, suggestion.id);
                    }),
                    raw.length > SHOW_MORE_LIMIT ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                        sx: {
                            mt: 2,
                            cursor: "pointer",
                            color: "text.secondary",
                            "&:hover": {
                                textDecoration: "underline"
                            }
                        },
                        variant: "body2",
                        onClick: ()=>setShowAllPrompts === null || setShowAllPrompts === void 0 ? void 0 : setShowAllPrompts(!showAllPrompts),
                        children: showAllPrompts ? "Show less" : "Show more"
                    }) : null
                ]
            })
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL3dhdGNobGlzdHMvc3JjL2xpYi9XYXRjaGxpc3RDaGF0L1dhdGNobGlzdENoYXRCb3QvV2F0Y2hsaXN0Q2hhdEJvdERlZmF1bHRTdWdnZXN0aW9ucy50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlzcGF0Y2gsIFNldFN0YXRlQWN0aW9uLCB1c2VNZW1vIH0gZnJvbSBcInJlYWN0XCJcbmltcG9ydCB7IENxc0l0ZW0gfSBmcm9tIFwiQHJwL2NvbW1vbi9hcGktdHlwZXNcIlxuaW1wb3J0IHsgQmlnZGF0YUNoYXRBdmF0YXIgfSBmcm9tIFwiQHJwL3JlYWN0L2NvbW1vbi9hc3NldHNcIlxuaW1wb3J0IHsgV2F0Y2hsaXN0U3VnZ2VzdGlvbiwgd2F0Y2hsaXN0U3VnZ2VzdGVkUHJvbXB0cyB9IGZyb20gXCJAcnAvcmVhY3QvY29tbW9uL3dhdGNobGlzdHNcIlxuaW1wb3J0IHsgV29ya2Zsb3dEZXNjcmlwdGlvblJlc3VsdCB9IGZyb20gXCJAcnAvcmVhY3QvdGFuc3RhY2stYXBpL3dvcmtmbG93XCJcbmltcG9ydCB7IEJveCwgVHlwb2dyYXBoeSB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL211aS9jb3JlXCJcbmltcG9ydCB7IFdhdGNobGlzdENoYXRCb3RTdWdnZXN0aW9uIH0gZnJvbSBcIi4vV2F0Y2hsaXN0Q2hhdEJvdFN1Z2dlc3Rpb25cIlxuXG50eXBlIFByb3BzID0ge1xuICB3b3JrZmxvd3M6IEFycmF5PFdvcmtmbG93RGVzY3JpcHRpb25SZXN1bHQ+XG4gIGRpc3BsYXlOYW1lOiBzdHJpbmdcbiAgb25TdWdnZXN0aW9uQ2xpY2s6IChzdWdnZXN0aW9uOiBXYXRjaGxpc3RTdWdnZXN0aW9uKSA9PiB2b2lkXG4gIHNob3dBbGxQcm9tcHRzPzogYm9vbGVhblxuICBzZXRTaG93QWxsUHJvbXB0cz86IERpc3BhdGNoPFNldFN0YXRlQWN0aW9uPGJvb2xlYW4+PlxuICBzZWxlY3RlZEVudGl0eTogQ3FzSXRlbSB8IG51bGxcbiAgb2Zmc2V0WT86IG51bWJlclxufVxuXG5jb25zdCBTSE9XX01PUkVfTElNSVQgPSA1XG5cbmV4cG9ydCBjb25zdCBXYXRjaGxpc3RDaGF0Qm90RGVmYXVsdFN1Z2dlc3Rpb25zID0gKHtcbiAgd29ya2Zsb3dzLFxuICBkaXNwbGF5TmFtZSxcbiAgb25TdWdnZXN0aW9uQ2xpY2ssXG4gIHNob3dBbGxQcm9tcHRzLFxuICBzZXRTaG93QWxsUHJvbXB0cyxcbiAgb2Zmc2V0WSA9IDAsXG4gIHNlbGVjdGVkRW50aXR5LFxufTogUHJvcHMpID0+IHtcbiAgY29uc3QgcmF3ID0gdXNlTWVtbygoKSA9PiB7XG4gICAgaWYgKCFzZWxlY3RlZEVudGl0eSkge1xuICAgICAgcmV0dXJuIHdhdGNobGlzdFN1Z2dlc3RlZFByb21wdHMuZmlsdGVyKHN1Z2dlc3Rpb24gPT4gc3VnZ2VzdGlvbi5kaXNqdW5jdGl2ZUZhY2V0cyA9PT0gbnVsbClcbiAgICB9XG4gICAgcmV0dXJuIHdhdGNobGlzdFN1Z2dlc3RlZFByb21wdHNcbiAgICAgIC5maWx0ZXIoc3VnZ2VzdGlvbiA9PiB7XG4gICAgICAgIHJldHVybiBzdWdnZXN0aW9uLmRpc2p1bmN0aXZlRmFjZXRzPy5zb21lKGlubmVyID0+IHtcbiAgICAgICAgICBjb25zdCBzYW1lQ2F0ZWdvcnkgPSBzZWxlY3RlZEVudGl0eS5jYXRlZ29yeSA9PT0gaW5uZXIuY2F0ZWdvcnlcbiAgICAgICAgICBjb25zdCBzYW1lR3JvdXAxID0gc2VsZWN0ZWRFbnRpdHkuZ3JvdXAxID09PSBpbm5lci5ncm91cDFcbiAgICAgICAgICByZXR1cm4gKCFpbm5lci5ncm91cDEgJiYgc2FtZUNhdGVnb3J5KSB8fCAoc2FtZUNhdGVnb3J5ICYmIHNhbWVHcm91cDEpXG4gICAgICAgIH0pXG4gICAgICB9KVxuICAgICAgLmNvbmNhdChcbiAgICAgICAgd29ya2Zsb3dzLm1hcCh3ZiA9PiAoe1xuICAgICAgICAgIGlkOiBgd29ya2Zsb3ctJHt3Zi5pZH1gLFxuICAgICAgICAgIGxhYmVsOiB3Zi5mbG93TmFtZSxcbiAgICAgICAgICBwcm9tcHQ6ICgpID0+IFwiXCIsXG4gICAgICAgICAgd29ya2Zsb3c6IHsgaWQ6IHdmLmlkIH0sXG4gICAgICAgICAgZGlzanVuY3RpdmVGYWNldHM6IG51bGwsXG4gICAgICAgICAgaWNvbk5hbWU6IFwiRmxhc2hPblwiLFxuICAgICAgICB9KSksXG4gICAgICApXG4gIH0sIFtzZWxlY3RlZEVudGl0eSwgd29ya2Zsb3dzXSlcbiAgY29uc3QgbGlzdCA9IHJhd1xuICAgIC5zb3J0KChmaXJzdCwgc2Vjb25kKSA9PiB7XG4gICAgICBpZiAoZmlyc3Qud29ya2Zsb3cgJiYgc2Vjb25kLndvcmtmbG93KVxuICAgICAgICByZXR1cm4gZmlyc3Qud29ya2Zsb3cuaWQubG9jYWxlQ29tcGFyZShzZWNvbmQud29ya2Zsb3cuaWQpXG4gICAgICBpZiAoZmlyc3Qud29ya2Zsb3cpIHJldHVybiAtMVxuICAgICAgaWYgKHNlY29uZC53b3JrZmxvdykgcmV0dXJuIDFcbiAgICAgIHJldHVybiBmaXJzdC5sYWJlbC5sb2NhbGVDb21wYXJlKHNlY29uZC5sYWJlbClcbiAgICB9KVxuICAgIC5zbGljZSgwLCBzaG93QWxsUHJvbXB0cyA/IDEwMDAwMCA6IFNIT1dfTU9SRV9MSU1JVClcblxuICByZXR1cm4gKFxuICAgIDxCb3hcbiAgICAgIHN4PXt7XG4gICAgICAgIHB0OiAyLFxuICAgICAgICBweDogMixcbiAgICAgICAgd2lkdGg6IFwiMTAwJVwiLFxuICAgICAgICBtYXhXaWR0aDogNzAwLFxuICAgICAgICBteDogXCJhdXRvXCIsXG4gICAgICB9fVxuICAgID5cbiAgICAgIDxCb3ggc3g9e3sgZGlzcGxheTogXCJmbGV4XCIsIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsIGdhcDogMSB9fT5cbiAgICAgICAgPEJpZ2RhdGFDaGF0QXZhdGFyIGhlaWdodD17Mjh9IHdpZHRoPXsyOH0gLz5cbiAgICAgICAgPFR5cG9ncmFwaHkgdmFyaWFudD1cImJvZHkyXCIgY29sb3I9XCJ0ZXh0LnNlY29uZGFyeVwiPlxuICAgICAgICAgIEJpZ2RhdGFcbiAgICAgICAgPC9UeXBvZ3JhcGh5PlxuICAgICAgPC9Cb3g+XG4gICAgICA8VHlwb2dyYXBoeSBzeD17eyBmb250U2l6ZTogMTgsIG10OiAyIH19PlxuICAgICAgICBXaGF0IHdvdWxkIHlvdSBsaWtlIHRvIGtub3cgYWJvdXQgPHN0cm9uZz57ZGlzcGxheU5hbWV9PC9zdHJvbmc+P1xuICAgICAgPC9UeXBvZ3JhcGh5PlxuICAgICAgPEJveFxuICAgICAgICBzeD17dGhlbWUgPT4gKHtcbiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwiZWxldmF0aW9uLmRwMDZcIixcbiAgICAgICAgICBib3JkZXJSYWRpdXM6IDIsXG4gICAgICAgICAgcDogMixcbiAgICAgICAgICBtdDogMixcbiAgICAgICAgICBtYXhIZWlnaHQ6IGBjYWxjKDEwMGR2aCAtICR7b2Zmc2V0WSArIDI0MH1weClgLFxuICAgICAgICAgIG92ZXJmbG93WTogXCJhdXRvXCIsXG4gICAgICAgICAgLi4udGhlbWUuc2Nyb2xsYmFyU3R5bGVzLFxuICAgICAgICB9KX1cbiAgICAgID5cbiAgICAgICAgPFR5cG9ncmFwaHkgdmFyaWFudD1cImJvZHkyXCIgY29sb3I9XCJ0ZXh0LnNlY29uZGFyeVwiIHN4PXt7IG1iOiAyIH19PlxuICAgICAgICAgIFN1Z2dlc3Rpb25zOlxuICAgICAgICA8L1R5cG9ncmFwaHk+XG4gICAgICAgIHtsaXN0Lm1hcChzdWdnZXN0aW9uID0+IHtcbiAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPFdhdGNobGlzdENoYXRCb3RTdWdnZXN0aW9uXG4gICAgICAgICAgICAgIGtleT17c3VnZ2VzdGlvbi5pZH1cbiAgICAgICAgICAgICAgc3VnZ2VzdGlvbj17c3VnZ2VzdGlvbn1cbiAgICAgICAgICAgICAgb25TdWdnZXN0aW9uQ2xpY2s9e29uU3VnZ2VzdGlvbkNsaWNrfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICApXG4gICAgICAgIH0pfVxuICAgICAgICB7cmF3Lmxlbmd0aCA+IFNIT1dfTU9SRV9MSU1JVCA/IChcbiAgICAgICAgICA8VHlwb2dyYXBoeVxuICAgICAgICAgICAgc3g9e3tcbiAgICAgICAgICAgICAgbXQ6IDIsXG4gICAgICAgICAgICAgIGN1cnNvcjogXCJwb2ludGVyXCIsXG4gICAgICAgICAgICAgIGNvbG9yOiBcInRleHQuc2Vjb25kYXJ5XCIsXG4gICAgICAgICAgICAgIFwiJjpob3ZlclwiOiB7IHRleHREZWNvcmF0aW9uOiBcInVuZGVybGluZVwiIH0sXG4gICAgICAgICAgICB9fVxuICAgICAgICAgICAgdmFyaWFudD1cImJvZHkyXCJcbiAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHNldFNob3dBbGxQcm9tcHRzPy4oIXNob3dBbGxQcm9tcHRzKX1cbiAgICAgICAgICA+XG4gICAgICAgICAgICB7c2hvd0FsbFByb21wdHMgPyBcIlNob3cgbGVzc1wiIDogXCJTaG93IG1vcmVcIn1cbiAgICAgICAgICA8L1R5cG9ncmFwaHk+XG4gICAgICAgICkgOiBudWxsfVxuICAgICAgPC9Cb3g+XG4gICAgPC9Cb3g+XG4gIClcbn1cbiJdLCJuYW1lcyI6WyJXYXRjaGxpc3RDaGF0Qm90RGVmYXVsdFN1Z2dlc3Rpb25zIiwiU0hPV19NT1JFX0xJTUlUIiwid29ya2Zsb3dzIiwiZGlzcGxheU5hbWUiLCJvblN1Z2dlc3Rpb25DbGljayIsInNob3dBbGxQcm9tcHRzIiwic2V0U2hvd0FsbFByb21wdHMiLCJvZmZzZXRZIiwic2VsZWN0ZWRFbnRpdHkiLCJyYXciLCJ1c2VNZW1vIiwid2F0Y2hsaXN0U3VnZ2VzdGVkUHJvbXB0cyIsImZpbHRlciIsInN1Z2dlc3Rpb24iLCJkaXNqdW5jdGl2ZUZhY2V0cyIsInNvbWUiLCJpbm5lciIsInNhbWVDYXRlZ29yeSIsImNhdGVnb3J5Iiwic2FtZUdyb3VwMSIsImdyb3VwMSIsImNvbmNhdCIsIm1hcCIsIndmIiwiaWQiLCJsYWJlbCIsImZsb3dOYW1lIiwicHJvbXB0Iiwid29ya2Zsb3ciLCJpY29uTmFtZSIsImxpc3QiLCJzb3J0IiwiZmlyc3QiLCJzZWNvbmQiLCJsb2NhbGVDb21wYXJlIiwic2xpY2UiLCJCb3giLCJzeCIsInB0IiwicHgiLCJ3aWR0aCIsIm1heFdpZHRoIiwibXgiLCJkaXNwbGF5IiwiYWxpZ25JdGVtcyIsImdhcCIsIkJpZ2RhdGFDaGF0QXZhdGFyIiwiaGVpZ2h0IiwiVHlwb2dyYXBoeSIsInZhcmlhbnQiLCJjb2xvciIsImZvbnRTaXplIiwibXQiLCJzdHJvbmciLCJ0aGVtZSIsImJhY2tncm91bmRDb2xvciIsImJvcmRlclJhZGl1cyIsInAiLCJtYXhIZWlnaHQiLCJvdmVyZmxvd1kiLCJzY3JvbGxiYXJTdHlsZXMiLCJtYiIsIldhdGNobGlzdENoYXRCb3RTdWdnZXN0aW9uIiwibGVuZ3RoIiwiY3Vyc29yIiwidGV4dERlY29yYXRpb24iLCJvbkNsaWNrIl0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQW9CYUE7OztlQUFBQTs7Ozt1QkFwQnFDO3dCQUVoQjs0QkFDNkI7c0JBRS9COzRDQUNXOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQVkzQyxNQUFNQyxrQkFBa0I7QUFFakIsTUFBTUQscUNBQXFDLENBQUMsRUFDakRFLFNBQVMsRUFDVEMsV0FBVyxFQUNYQyxpQkFBaUIsRUFDakJDLGNBQWMsRUFDZEMsaUJBQWlCLEVBQ2pCQyxVQUFVLENBQUMsRUFDWEMsY0FBYyxFQUNSO0lBQ04sTUFBTUMsTUFBTUMsSUFBQUEsY0FBTyxFQUFDO1FBQ2xCLElB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