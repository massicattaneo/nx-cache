{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/node_modules/mdast-util-to-hast/lib/handlers/link.js"],"sourcesContent":["/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n"],"names":["link","state","node","properties","href","normalizeUri","url","title","undefined","result","type","tagName","children","all","patch","applyData"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA;;;;;CAKC;;;;+BAceA;;;eAAAA;;;0CAZW;AAYpB,SAASA,KAAKC,KAAK,EAAEC,IAAI;IAC9B,uBAAuB,GACvB,MAAMC,aAAa;QAACC,MAAMC,IAAAA,sCAAY,EAACH,KAAKI,GAAG;IAAC;IAEhD,IAAIJ,KAAKK,KAAK,KAAK,QAAQL,KAAKK,KAAK,KAAKC,WAAW;QACnDL,WAAWI,KAAK,GAAGL,KAAKK,KAAK;IAC/B;IAEA,oBAAoB,GACpB,MAAME,SAAS;QACbC,MAAM;QACNC,SAAS;QACTR;QACAS,UAAUX,MAAMY,GAAG,CAACX;IACtB;IACAD,MAAMa,KAAK,CAACZ,MAAMO;IAClB,OAAOR,MAAMc,SAAS,CAACb,MAAMO;AAC/B"}