ce4bc0875283cd054bdb3cd5c64967ac
// This code is copied from this npm package:
// https://www.npmjs.com/package/remark-gfm-no-autolink?activeTab=code
// The goal is to have the gfm plugin without auto-links
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "remarkGfmNoAutoLink", {
    enumerable: true,
    get: function() {
        return remarkGfmNoAutoLink;
    }
});
const _mdastutilgfmfootnote = require("mdast-util-gfm-footnote");
const _mdastutilgfmstrikethrough = require("mdast-util-gfm-strikethrough");
const _mdastutilgfmtable = require("mdast-util-gfm-table");
const _mdastutilgfmtasklistitem = require("mdast-util-gfm-task-list-item");
const _micromarkextensiongfmfootnote = require("micromark-extension-gfm-footnote");
const _micromarkextensiongfmstrikethrough = require("micromark-extension-gfm-strikethrough");
const _micromarkextensiongfmtable = require("micromark-extension-gfm-table");
const _micromarkextensiongfmtasklistitem = require("micromark-extension-gfm-task-list-item");
const _micromarkutilcombineextensions = require("micromark-util-combine-extensions");
function gfm(options) {
    return (0, _micromarkutilcombineextensions.combineExtensions)([
        (0, _micromarkextensiongfmfootnote.gfmFootnote)(),
        (0, _micromarkextensiongfmstrikethrough.gfmStrikethrough)(options),
        (0, _micromarkextensiongfmtable.gfmTable)(),
        (0, _micromarkextensiongfmtasklistitem.gfmTaskListItem)()
    ]);
}
function gfmFromMarkdown() {
    return [
        (0, _mdastutilgfmfootnote.gfmFootnoteFromMarkdown)(),
        (0, _mdastutilgfmstrikethrough.gfmStrikethroughFromMarkdown)(),
        (0, _mdastutilgfmtable.gfmTableFromMarkdown)(),
        (0, _mdastutilgfmtasklistitem.gfmTaskListItemFromMarkdown)()
    ];
}
function gfmToMarkdown(options) {
    return {
        extensions: [
            (0, _mdastutilgfmfootnote.gfmFootnoteToMarkdown)(),
            (0, _mdastutilgfmstrikethrough.gfmStrikethroughToMarkdown)(),
            (0, _mdastutilgfmtable.gfmTableToMarkdown)(options),
            (0, _mdastutilgfmtasklistitem.gfmTaskListItemToMarkdown)()
        ]
    };
}
const emptyOptions = {};
function remarkGfmNoAutoLink(options) {
    // @ts-expect-error: TS is wrong about `this`.
    // eslint-disable-next-line @typescript-eslint/no-this-alias
    const self = /** @type {Processor} */ this;
    const settings = options || emptyOptions;
    const data = self.data();
    const micromarkExtensions = data.micromarkExtensions || (data.micromarkExtensions = []);
    const fromMarkdownExtensions = data.fromMarkdownExtensions || (data.fromMarkdownExtensions = []);
    const toMarkdownExtensions = data.toMarkdownExtensions || (data.toMarkdownExtensions = []);
    micromarkExtensions.push(gfm(settings));
    fromMarkdownExtensions.push(gfmFromMarkdown());
    toMarkdownExtensions.push(gfmToMarkdown(settings));
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvd2ViL3V0aWxzL3NyYy9saWIvcmVtYXJrLXdpdGhvdXQtYXV0b2xpbmtzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRoaXMgY29kZSBpcyBjb3BpZWQgZnJvbSB0aGlzIG5wbSBwYWNrYWdlOlxuLy8gaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvcmVtYXJrLWdmbS1uby1hdXRvbGluaz9hY3RpdmVUYWI9Y29kZVxuLy8gVGhlIGdvYWwgaXMgdG8gaGF2ZSB0aGUgZ2ZtIHBsdWdpbiB3aXRob3V0IGF1dG8tbGlua3NcbmltcG9ydCB7IGdmbUZvb3Rub3RlRnJvbU1hcmtkb3duLCBnZm1Gb290bm90ZVRvTWFya2Rvd24gfSBmcm9tIFwibWRhc3QtdXRpbC1nZm0tZm9vdG5vdGVcIlxuaW1wb3J0IHtcbiAgZ2ZtU3RyaWtldGhyb3VnaEZyb21NYXJrZG93bixcbiAgZ2ZtU3RyaWtldGhyb3VnaFRvTWFya2Rvd24sXG59IGZyb20gXCJtZGFzdC11dGlsLWdmbS1zdHJpa2V0aHJvdWdoXCJcbmltcG9ydCB7IGdmbVRhYmxlRnJvbU1hcmtkb3duLCBnZm1UYWJsZVRvTWFya2Rvd24gfSBmcm9tIFwibWRhc3QtdXRpbC1nZm0tdGFibGVcIlxuaW1wb3J0IHtcbiAgZ2ZtVGFza0xpc3RJdGVtRnJvbU1hcmtkb3duLFxuICBnZm1UYXNrTGlzdEl0ZW1Ub01hcmtkb3duLFxufSBmcm9tIFwibWRhc3QtdXRpbC1nZm0tdGFzay1saXN0LWl0ZW1cIlxuaW1wb3J0IHsgZ2ZtRm9vdG5vdGUgfSBmcm9tIFwibWljcm9tYXJrLWV4dGVuc2lvbi1nZm0tZm9vdG5vdGVcIlxuaW1wb3J0IHsgZ2ZtU3RyaWtldGhyb3VnaCB9IGZyb20gXCJtaWNyb21hcmstZXh0ZW5zaW9uLWdmbS1zdHJpa2V0aHJvdWdoXCJcbmltcG9ydCB7IGdmbVRhYmxlIH0gZnJvbSBcIm1pY3JvbWFyay1leHRlbnNpb24tZ2ZtLXRhYmxlXCJcbmltcG9ydCB7IGdmbVRhc2tMaXN0SXRlbSB9IGZyb20gXCJtaWNyb21hcmstZXh0ZW5zaW9uLWdmbS10YXNrLWxpc3QtaXRlbVwiXG5pbXBvcnQgeyBjb21iaW5lRXh0ZW5zaW9ucyB9IGZyb20gXCJtaWNyb21hcmstdXRpbC1jb21iaW5lLWV4dGVuc2lvbnNcIlxuaW1wb3J0IHsgT3B0aW9ucyB9IGZyb20gXCJyZW1hcmstZ2ZtXCJcblxuZnVuY3Rpb24gZ2ZtKG9wdGlvbnM6IE9wdGlvbnMpIHtcbiAgcmV0dXJuIGNvbWJpbmVFeHRlbnNpb25zKFtcbiAgICBnZm1Gb290bm90ZSgpLFxuICAgIGdmbVN0cmlrZXRocm91Z2gob3B0aW9ucyksXG4gICAgZ2ZtVGFibGUoKSxcbiAgICBnZm1UYXNrTGlzdEl0ZW0oKSxcbiAgXSlcbn1cblxuZnVuY3Rpb24gZ2ZtRnJvbU1hcmtkb3duKCkge1xuICByZXR1cm4gW1xuICAgIGdmbUZvb3Rub3RlRnJvbU1hcmtkb3duKCksXG4gICAgZ2ZtU3RyaWtldGhyb3VnaEZyb21NYXJrZG93bigpLFxuICAgIGdmbVRhYmxlRnJvbU1hcmtkb3duKCksXG4gICAgZ2ZtVGFza0xpc3RJdGVtRnJvbU1hcmtkb3duKCksXG4gIF1cbn1cblxuZnVuY3Rpb24gZ2ZtVG9NYXJrZG93bihvcHRpb25zOiBPcHRpb25zKSB7XG4gIHJldHVybiB7XG4gICAgZXh0ZW5zaW9uczogW1xuICAgICAgZ2ZtRm9vdG5vdGVUb01hcmtkb3duKCksXG4gICAgICBnZm1TdHJpa2V0aHJvdWdoVG9NYXJrZG93bigpLFxuICAgICAgZ2ZtVGFibGVUb01hcmtkb3duKG9wdGlvbnMpLFxuICAgICAgZ2ZtVGFza0xpc3RJdGVtVG9NYXJrZG93bigpLFxuICAgIF0sXG4gIH1cbn1cblxuY29uc3QgZW1wdHlPcHRpb25zID0ge31cblxuZnVuY3Rpb24gcmVtYXJrR2ZtTm9BdXRvTGluayhvcHRpb25zOiBPcHRpb25zKSB7XG4gIC8vIEB0cy1leHBlY3QtZXJyb3I6IFRTIGlzIHdyb25nIGFib3V0IGB0aGlzYC5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby10aGlzLWFsaWFzXG4gIGNvbnN0IHNlbGYgPSAvKiogQHR5cGUge1Byb2Nlc3Nvcn0gKi8gdGhpc1xuICBjb25zdCBzZXR0aW5ncyA9IG9wdGlvbnMgfHwgZW1wdHlPcHRpb25zXG4gIGNvbnN0IGRhdGEgPSBzZWxmLmRhdGEoKVxuXG4gIGNvbnN0IG1pY3JvbWFya0V4dGVuc2lvbnMgPSBkYXRhLm1pY3JvbWFya0V4dGVuc2lvbnMgfHwgKGRhdGEubWljcm9tYXJrRXh0ZW5zaW9ucyA9IFtdKVxuICBjb25zdCBmcm9tTWFya2Rvd25FeHRlbnNpb25zID0gZGF0YS5mcm9tTWFya2Rvd25FeHRlbnNpb25zIHx8IChkYXRhLmZyb21NYXJrZG93bkV4dGVuc2lvbnMgPSBbXSlcbiAgY29uc3QgdG9NYXJrZG93bkV4dGVuc2lvbnMgPSBkYXRhLnRvTWFya2Rvd25FeHRlbnNpb25zIHx8IChkYXRhLnRvTWFya2Rvd25FeHRlbnNpb25zID0gW10pXG5cbiAgbWljcm9tYXJrRXh0ZW5zaW9ucy5wdXNoKGdmbShzZXR0aW5ncykpXG4gIGZyb21NYXJrZG93bkV4dGVuc2lvbnMucHVzaChnZm1Gcm9tTWFya2Rvd24oKSlcbiAgdG9NYXJrZG93bkV4dGVuc2lvbnMucHVzaChnZm1Ub01hcmtkb3duKHNldHRpbmdzKSlcbn1cblxuZXhwb3J0IHsgcmVtYXJrR2ZtTm9BdXRvTGluayB9XG4iXSwibmFtZXMiOlsicmVtYXJrR2ZtTm9BdXRvTGluayIsImdmbSIsIm9wdGlvbnMiLCJjb21iaW5lRXh0ZW5zaW9ucyIsImdmbUZvb3Rub3RlIiwiZ2ZtU3RyaWtldGhyb3VnaCIsImdmbVRhYmxlIiwiZ2ZtVGFza0xpc3RJdGVtIiwiZ2ZtRnJvbU1hcmtkb3duIiwiZ2ZtRm9vdG5vdGVGcm9tTWFya2Rvd24iLCJnZm1TdHJpa2V0aHJvdWdoRnJvbU1hcmtkb3duIiwiZ2ZtVGFibGVGcm9tTWFya2Rvd24iLCJnZm1UYXNrTGlzdEl0ZW1Gcm9tTWFya2Rvd24iLCJnZm1Ub01hcmtkb3duIiwiZXh0ZW5zaW9ucyIsImdmbUZvb3Rub3RlVG9NYXJrZG93biIsImdmbVN0cmlrZXRocm91Z2hUb01hcmtkb3duIiwiZ2ZtVGFibGVUb01hcmtkb3duIiwiZ2ZtVGFza0xpc3RJdGVtVG9NYXJrZG93biIsImVtcHR5T3B0aW9ucyIsInNlbGYiLCJzZXR0aW5ncyIsImRhdGEiLCJtaWNyb21hcmtFeHRlbnNpb25zIiwiZnJvbU1hcmtkb3duRXh0ZW5zaW9ucyIsInRvTWFya2Rvd25FeHRlbnNpb25zIiwicHVzaCJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiQUFBQSw2Q0FBNkM7QUFDN0Msc0VBQXNFO0FBQ3RFLHdEQUF3RDs7Ozs7K0JBaUUvQ0E7OztlQUFBQTs7O3NDQWhFc0Q7MkNBSXhEO21DQUNrRDswQ0FJbEQ7K0NBQ3FCO29EQUNLOzRDQUNSO21EQUNPO2dEQUNFO0FBR2xDLFNBQVNDLElBQUlDLE9BQWdCO0lBQzNCLE9BQU9DLElBQUFBLGlEQUFpQixFQUFDO1FBQ3ZCQyxJQUFBQSwwQ0FBVztRQUNYQyxJQUFBQSxvREFBZ0IsRUFBQ0g7UUFDakJJLElBQUFBLG9DQUFRO1FBQ1JDLElBQUFBLGtEQUFlO0tBQ2hCO0FBQ0g7QUFFQSxTQUFTQztJQUNQLE9BQU87UUFDTEMsSUFBQUEsNkNBQXVCO1FBQ3ZCQyxJQUFBQSx1REFBNEI7UUFDNUJDLElBQUFBLHVDQUFvQjtRQUNwQkMsSUFBQUEscURBQTJCO0tBQzVCO0FBQ0g7QUFFQSxTQUFTQyxjQUFjWCxPQUFnQjtJQUNyQyxPQUFPO1FBQ0xZLFlBQVk7WUFDVkMsSUFBQUEsMkNBQXFCO1lBQ3JCQyxJQUFBQSxxREFBMEI7WUFDMUJDLElBQUFBLHFDQUFrQixFQUFDZjtZQUNuQmdCLElBQUFBLG1EQUF5QjtTQUMxQjtJQUNIO0FBQ0Y7QUFFQSxNQUFNQyxlQUFlLENBQUM7QUFFdEIsU0FBU25CLG9CQUFvQkUsT0FBZ0I7SUFDM0MsOENBQThDO0lBQzlDLDREQUE0RDtJQUM1RCxNQUFNa0IsT0FBTyxzQkFBc0IsR0FBRyxJQUFJO0lBQzFDLE1BQU1DLFdBQVduQixXQUFXaUI7SUFDNUIsTUFBTUcsT0FBT0YsS0FBS0UsSUFBSTtJQUV0QixNQUFNQyxzQkFBc0JELEtBQUtDLG1CQUFtQixJQUFLRCxDQUFBQSxLQUFLQyxtQkFBbUIsR0FBRyxFQUFFLEFBQUQ7SUFDckYsTUFBTUMseUJBQXlCRixLQUFLRSxzQkFBc0IsSUFBS0YsQ0FBQUEsS0FBS0Usc0JBQXNCLEdBQUcsRUFBRSxBQUFEO0lBQzlGLE1BQU1DLHVCQUF1QkgsS0FBS0csb0JBQW9CLElBQUtILENBQUFBLEtBQUtHLG9CQUFvQixHQUFHLEVBQUUsQUFBRDtJQUV4RkYsb0JBQW9CRyxJQUFJLENBQUN6QixJQUFJb0I7SUFDN0JHLHVCQUF1QkUsSUFBSSxDQUFDbEI7SUFDNUJpQixxQkFBcUJDLElBQUksQ0FBQ2IsY0FBY1E7QUFDMUMifQ==