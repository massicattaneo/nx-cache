8872f8c9a79ff0fb3508521cd04b129d
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return updateSize;
    }
});
const _utils = require("../../shared/utils.js");
function updateSize() {
    const swiper = this;
    let width;
    let height;
    const el = swiper.el;
    if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {
        width = swiper.params.width;
    } else {
        width = el.clientWidth;
    }
    if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {
        height = swiper.params.height;
    } else {
        height = el.clientHeight;
    }
    if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {
        return;
    }
    // Subtract paddings
    width = width - parseInt((0, _utils.elementStyle)(el, 'padding-left') || 0, 10) - parseInt((0, _utils.elementStyle)(el, 'padding-right') || 0, 10);
    height = height - parseInt((0, _utils.elementStyle)(el, 'padding-top') || 0, 10) - parseInt((0, _utils.elementStyle)(el, 'padding-bottom') || 0, 10);
    if (Number.isNaN(width)) width = 0;
    if (Number.isNaN(height)) height = 0;
    Object.assign(swiper, {
        width,
        height,
        size: swiper.isHorizontal() ? width : height
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9zd2lwZXIvY29yZS91cGRhdGUvdXBkYXRlU2l6ZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBlbGVtZW50U3R5bGUgfSBmcm9tICcuLi8uLi9zaGFyZWQvdXRpbHMuanMnO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdXBkYXRlU2l6ZSgpIHtcbiAgY29uc3Qgc3dpcGVyID0gdGhpcztcbiAgbGV0IHdpZHRoO1xuICBsZXQgaGVpZ2h0O1xuICBjb25zdCBlbCA9IHN3aXBlci5lbDtcbiAgaWYgKHR5cGVvZiBzd2lwZXIucGFyYW1zLndpZHRoICE9PSAndW5kZWZpbmVkJyAmJiBzd2lwZXIucGFyYW1zLndpZHRoICE9PSBudWxsKSB7XG4gICAgd2lkdGggPSBzd2lwZXIucGFyYW1zLndpZHRoO1xuICB9IGVsc2Uge1xuICAgIHdpZHRoID0gZWwuY2xpZW50V2lkdGg7XG4gIH1cbiAgaWYgKHR5cGVvZiBzd2lwZXIucGFyYW1zLmhlaWdodCAhPT0gJ3VuZGVmaW5lZCcgJiYgc3dpcGVyLnBhcmFtcy5oZWlnaHQgIT09IG51bGwpIHtcbiAgICBoZWlnaHQgPSBzd2lwZXIucGFyYW1zLmhlaWdodDtcbiAgfSBlbHNlIHtcbiAgICBoZWlnaHQgPSBlbC5jbGllbnRIZWlnaHQ7XG4gIH1cbiAgaWYgKHdpZHRoID09PSAwICYmIHN3aXBlci5pc0hvcml6b250YWwoKSB8fCBoZWlnaHQgPT09IDAgJiYgc3dpcGVyLmlzVmVydGljYWwoKSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8vIFN1YnRyYWN0IHBhZGRpbmdzXG4gIHdpZHRoID0gd2lkdGggLSBwYXJzZUludChlbGVtZW50U3R5bGUoZWwsICdwYWRkaW5nLWxlZnQnKSB8fCAwLCAxMCkgLSBwYXJzZUludChlbGVtZW50U3R5bGUoZWwsICdwYWRkaW5nLXJpZ2h0JykgfHwgMCwgMTApO1xuICBoZWlnaHQgPSBoZWlnaHQgLSBwYXJzZUludChlbGVtZW50U3R5bGUoZWwsICdwYWRkaW5nLXRvcCcpIHx8IDAsIDEwKSAtIHBhcnNlSW50KGVsZW1lbnRTdHlsZShlbCwgJ3BhZGRpbmctYm90dG9tJykgfHwgMCwgMTApO1xuICBpZiAoTnVtYmVyLmlzTmFOKHdpZHRoKSkgd2lkdGggPSAwO1xuICBpZiAoTnVtYmVyLmlzTmFOKGhlaWdodCkpIGhlaWdodCA9IDA7XG4gIE9iamVjdC5hc3NpZ24oc3dpcGVyLCB7XG4gICAgd2lkdGgsXG4gICAgaGVpZ2h0LFxuICAgIHNpemU6IHN3aXBlci5pc0hvcml6b250YWwoKSA/IHdpZHRoIDogaGVpZ2h0XG4gIH0pO1xufSJdLCJuYW1lcyI6WyJ1cGRhdGVTaXplIiwic3dpcGVyIiwid2lkdGgiLCJoZWlnaHQiLCJlbCIsInBhcmFtcyIsImNsaWVudFdpZHRoIiwiY2xpZW50SGVpZ2h0IiwiaXNIb3Jpem9udGFsIiwiaXNWZXJ0aWNhbCIsInBhcnNlSW50IiwiZWxlbWVudFN0eWxlIiwiTnVtYmVyIiwiaXNOYU4iLCJPYmplY3QiLCJhc3NpZ24iLCJzaXplIl0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkFDQTs7O2VBQXdCQTs7O3VCQURLO0FBQ2QsU0FBU0E7SUFDdEIsTUFBTUMsU0FBUyxJQUFJO0lBQ25CLElBQUlDO0lBQ0osSUFBSUM7SUFDSixNQUFNQyxLQUFLSCxPQUFPRyxFQUFFO0lBQ3BCLElBQUksT0FBT0gsT0FBT0ksTUFBTSxDQUFDSCxLQUFLLEtBQUssZUFBZUQsT0FBT0ksTUFBTSxDQUFDSCxLQUFLLEtBQUssTUFBTTtRQUM5RUEsUUFBUUQsT0FBT0ksTUFBTSxDQUFDSCxLQUFLO0lBQzdCLE9BQU87UUFDTEEsUUFBUUUsR0FBR0UsV0FBVztJQUN4QjtJQUNBLElBQUksT0FBT0wsT0FBT0ksTUFBTSxDQUFDRixNQUFNLEtBQUssZUFBZUYsT0FBT0ksTUFBTSxDQUFDRixNQUFNLEtBQUssTUFBTTtRQUNoRkEsU0FBU0YsT0FBT0ksTUFBTSxDQUFDRixNQUFNO0lBQy9CLE9BQU87UUFDTEEsU0FBU0MsR0FBR0csWUFBWTtJQUMxQjtJQUNBLElBQUlMLFVBQVUsS0FBS0QsT0FBT08sWUFBWSxNQUFNTCxXQUFXLEtBQUtGLE9BQU9RLFVBQVUsSUFBSTtRQUMvRTtJQUNGO0lBRUEsb0JBQW9CO0lBQ3BCUCxRQUFRQSxRQUFRUSxTQUFTQyxJQUFBQSxtQkFBWSxFQUFDUCxJQUFJLG1CQUFtQixHQUFHLE1BQU1NLFNBQVNDLElBQUFBLG1CQUFZLEVBQUNQLElBQUksb0JBQW9CLEdBQUc7SUFDdkhELFNBQVNBLFNBQVNPLFNBQVNDLElBQUFBLG1CQUFZLEVBQUNQLElBQUksa0JBQWtCLEdBQUcsTUFBTU0sU0FBU0MsSUFBQUEsbUJBQVksRUFBQ1AsSUFBSSxxQkFBcUIsR0FBRztJQUN6SCxJQUFJUSxPQUFPQyxLQUFLLENBQUNYLFFBQVFBLFFBQVE7SUFDakMsSUFBSVUsT0FBT0MsS0FBSyxDQUFDVixTQUFTQSxTQUFTO0lBQ25DVyxPQUFPQyxNQUFNLENBQUNkLFFBQVE7UUFDcEJDO1FBQ0FDO1FBQ0FhLE1BQU1mLE9BQU9PLFlBQVksS0FBS04sUUFBUUM7SUFDeEM7QUFDRiJ9