e6fe74c85d3622c54dd16ce523b88feb
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    WATCHLIST_ADD_COLUMNS_TUTORIAL_VISITED_STORAGE_KEY: function() {
        return WATCHLIST_ADD_COLUMNS_TUTORIAL_VISITED_STORAGE_KEY;
    },
    WatchlistDataTabsAddColumnsTutorial: function() {
        return WatchlistDataTabsAddColumnsTutorial;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _compositecomponents = require("@rp/react/web/common/composite-components");
const _hooks = require("@rp/react/web/common/hooks");
const _core = require("@rp/react/web/mui/core");
const _WatchlistDataTabsColumnsMenu = require("./WatchlistDataTabsColumnsMenu");
const _WatchlistTutorialTooltip = require("./WatchlistTutorialTooltip");
const WATCHLIST_ADD_COLUMNS_TUTORIAL_VISITED_STORAGE_KEY = "watchlists.visitedAddColumnsTutorial";
function WatchlistDataTabsAddColumnsTutorial({ onAddColumn }) {
    const [visitedAddColumnsTutorial, setVisitedAddColumnsTutorial] = (0, _hooks.useLocalStorage)(WATCHLIST_ADD_COLUMNS_TUTORIAL_VISITED_STORAGE_KEY, false);
    const [open, setOpen] = (0, _react.useState)(false);
    (0, _react.useEffect)(()=>{
        setTimeout(()=>setOpen(!visitedAddColumnsTutorial), 300);
    }, [
        visitedAddColumnsTutorial
    ]);
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Backdrop, {
        sx: {
            color: "#fff",
            zIndex: (theme)=>theme.zIndex.drawer + 1,
            "& a, & button": {
                cursor: "default"
            }
        },
        open: !visitedAddColumnsTutorial,
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_WatchlistTutorialTooltip.WatchlistTutorialTooltip, {
            offsetX: -130,
            onDone: ()=>{
                setVisitedAddColumnsTutorial(true);
                setOpen(false);
                onAddColumn();
            },
            onClose: ()=>{
                setVisitedAddColumnsTutorial(true);
                setOpen(false);
            },
            title: "Welcome to Watchlists!",
            description: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                sx: {
                    fontSize: 14,
                    color: "text.secondary"
                },
                children: "Click the '+' button to add or reorder columns and customize your view."
            }),
            open: open,
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.CloneElement, {
                selector: `#${_WatchlistDataTabsColumnsMenu.WATCHLIST_DATA_TABS_ADD_COLUMNS_BUTTON_ID}`,
                onClick: ()=>{
                    setVisitedAddColumnsTutorial(true);
                    setOpen(false);
                    onAddColumn();
                }
            })
        })
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL3dhdGNobGlzdHMvc3JjL2xpYi9XYXRjaGxpc3REYXRhVGFicy9XYXRjaGxpc3REYXRhVGFic0FkZENvbHVtbnNUdXRvcmlhbC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgeyBDbG9uZUVsZW1lbnQgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9jb21tb24vY29tcG9zaXRlLWNvbXBvbmVudHNcIlxuaW1wb3J0IHsgdXNlTG9jYWxTdG9yYWdlIH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvY29tbW9uL2hvb2tzXCJcbmltcG9ydCB7IEJhY2tkcm9wLCBUeXBvZ3JhcGh5IH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvbXVpL2NvcmVcIlxuaW1wb3J0IHsgV0FUQ0hMSVNUX0RBVEFfVEFCU19BRERfQ09MVU1OU19CVVRUT05fSUQgfSBmcm9tIFwiLi9XYXRjaGxpc3REYXRhVGFic0NvbHVtbnNNZW51XCJcbmltcG9ydCB7IFdhdGNobGlzdFR1dG9yaWFsVG9vbHRpcCB9IGZyb20gXCIuL1dhdGNobGlzdFR1dG9yaWFsVG9vbHRpcFwiXG5cbmNvbnN0IFdBVENITElTVF9BRERfQ09MVU1OU19UVVRPUklBTF9WSVNJVEVEX1NUT1JBR0VfS0VZID0gXCJ3YXRjaGxpc3RzLnZpc2l0ZWRBZGRDb2x1bW5zVHV0b3JpYWxcIlxuXG50eXBlIFByb3BzID0ge1xuICBvbkFkZENvbHVtbjogKCkgPT4gdm9pZFxufVxuXG5mdW5jdGlvbiBXYXRjaGxpc3REYXRhVGFic0FkZENvbHVtbnNUdXRvcmlhbCh7IG9uQWRkQ29sdW1uIH06IFByb3BzKSB7XG4gIGNvbnN0IFt2aXNpdGVkQWRkQ29sdW1uc1R1dG9yaWFsLCBzZXRWaXNpdGVkQWRkQ29sdW1uc1R1dG9yaWFsXSA9IHVzZUxvY2FsU3RvcmFnZTxib29sZWFuPihcbiAgICBXQVRDSExJU1RfQUREX0NPTFVNTlNfVFVUT1JJQUxfVklTSVRFRF9TVE9SQUdFX0tFWSxcbiAgICBmYWxzZSxcbiAgKVxuICBjb25zdCBbb3Blbiwgc2V0T3Blbl0gPSB1c2VTdGF0ZTxib29sZWFuPihmYWxzZSlcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIHNldFRpbWVvdXQoKCkgPT4gc2V0T3BlbighdmlzaXRlZEFkZENvbHVtbnNUdXRvcmlhbCksIDMwMClcbiAgfSwgW3Zpc2l0ZWRBZGRDb2x1bW5zVHV0b3JpYWxdKVxuXG4gIHJldHVybiAoXG4gICAgPEJhY2tkcm9wXG4gICAgICBzeD17e1xuICAgICAgICBjb2xvcjogXCIjZmZmXCIsXG4gICAgICAgIHpJbmRleDogdGhlbWUgPT4gdGhlbWUuekluZGV4LmRyYXdlciArIDEsXG4gICAgICAgIFwiJiBhLCAmIGJ1dHRvblwiOiB7IGN1cnNvcjogXCJkZWZhdWx0XCIgfSxcbiAgICAgIH19XG4gICAgICBvcGVuPXshdmlzaXRlZEFkZENvbHVtbnNUdXRvcmlhbH1cbiAgICA+XG4gICAgICA8V2F0Y2hsaXN0VHV0b3JpYWxUb29sdGlwXG4gICAgICAgIG9mZnNldFg9ey0xMzB9XG4gICAgICAgIG9uRG9uZT17KCkgPT4ge1xuICAgICAgICAgIHNldFZpc2l0ZWRBZGRDb2x1bW5zVHV0b3JpYWwodHJ1ZSlcbiAgICAgICAgICBzZXRPcGVuKGZhbHNlKVxuICAgICAgICAgIG9uQWRkQ29sdW1uKClcbiAgICAgICAgfX1cbiAgICAgICAgb25DbG9zZT17KCkgPT4ge1xuICAgICAgICAgIHNldFZpc2l0ZWRBZGRDb2x1bW5zVHV0b3JpYWwodHJ1ZSlcbiAgICAgICAgICBzZXRPcGVuKGZhbHNlKVxuICAgICAgICB9fVxuICAgICAgICB0aXRsZT1cIldlbGNvbWUgdG8gV2F0Y2hsaXN0cyFcIlxuICAgICAgICBkZXNjcmlwdGlvbj17XG4gICAgICAgICAgPFR5cG9ncmFwaHkgc3g9e3sgZm9udFNpemU6IDE0LCBjb2xvcjogXCJ0ZXh0LnNlY29uZGFyeVwiIH19PlxuICAgICAgICAgICAgQ2xpY2sgdGhlICcrJyBidXR0b24gdG8gYWRkIG9yIHJlb3JkZXIgY29sdW1ucyBhbmQgY3VzdG9taXplIHlvdXIgdmlldy5cbiAgICAgICAgICA8L1R5cG9ncmFwaHk+XG4gICAgICAgIH1cbiAgICAgICAgb3Blbj17b3Blbn1cbiAgICAgID5cbiAgICAgICAgPENsb25lRWxlbWVudFxuICAgICAgICAgIHNlbGVjdG9yPXtgIyR7V0FUQ0hMSVNUX0RBVEFfVEFCU19BRERfQ09MVU1OU19CVVRUT05fSUR9YH1cbiAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICBzZXRWaXNpdGVkQWRkQ29sdW1uc1R1dG9yaWFsKHRydWUpXG4gICAgICAgICAgICBzZXRPcGVuKGZhbHNlKVxuICAgICAgICAgICAgb25BZGRDb2x1bW4oKVxuICAgICAgICAgIH19XG4gICAgICAgIC8+XG4gICAgICA8L1dhdGNobGlzdFR1dG9yaWFsVG9vbHRpcD5cbiAgICA8L0JhY2tkcm9wPlxuICApXG59XG5cbmV4cG9ydCB7IFdhdGNobGlzdERhdGFUYWJzQWRkQ29sdW1uc1R1dG9yaWFsLCBXQVRDSExJU1RfQUREX0NPTFVNTlNfVFVUT1JJQUxfVklTSVRFRF9TVE9SQUdFX0tFWSB9XG4iXSwibmFtZXMiOlsiV0FUQ0hMSVNUX0FERF9DT0xVTU5TX1RVVE9SSUFMX1ZJU0lURURfU1RPUkFHRV9LRVkiLCJXYXRjaGxpc3REYXRhVGFic0FkZENvbHVtbnNUdXRvcmlhbCIsIm9uQWRkQ29sdW1uIiwidmlzaXRlZEFkZENvbHVtbnNUdXRvcmlhbCIsInNldFZpc2l0ZWRBZGRDb2x1bW5zVHV0b3JpYWwiLCJ1c2VMb2NhbFN0b3JhZ2UiLCJvcGVuIiwic2V0T3BlbiIsInVzZVN0YXRlIiwidXNlRWZmZWN0Iiwic2V0VGltZW91dCIsIkJhY2tkcm9wIiwic3giLCJjb2xvciIsInpJbmRleCIsInRoZW1lIiwiZHJhd2VyIiwiY3Vyc29yIiwiV2F0Y2hsaXN0VHV0b3JpYWxUb29sdGlwIiwib2Zmc2V0WCIsIm9uRG9uZSIsIm9uQ2xvc2UiLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwiVHlwb2dyYXBoeSIsImZvbnRTaXplIiwiQ2xvbmVFbGVtZW50Iiwic2VsZWN0b3IiLCJXQVRDSExJU1RfREFUQV9UQUJTX0FERF9DT0xVTU5TX0JVVFRPTl9JRCIsIm9uQ2xpY2siXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7SUFpRThDQSxrREFBa0Q7ZUFBbERBOztJQUFyQ0MsbUNBQW1DO2VBQW5DQTs7Ozt1QkFqRTJCO3FDQUNQO3VCQUNHO3NCQUNLOzhDQUNxQjswQ0FDakI7QUFFekMsTUFBTUQscURBQXFEO0FBTTNELFNBQVNDLG9DQUFvQyxFQUFFQyxXQUFXLEVBQVM7SUFDakUsTUFBTSxDQUFDQywyQkFBMkJDLDZCQUE2QixHQUFHQyxJQUFBQSxzQkFBZSxFQUMvRUwsb0RBQ0E7SUFFRixNQUFNLENBQUNNLE1BQU1DLFFBQVEsR0FBR0MsSUFBQUEsZUFBUSxFQUFVO0lBRTFDQyxJQUFBQSxnQkFBUyxFQUFDO1FBQ1JDLFdBQVcsSUFBTUgsUUFBUSxDQUFDSiw0QkFBNEI7SUFDeEQsR0FBRztRQUFDQTtLQUEwQjtJQUU5QixxQkFDRSxxQkFBQ1EsY0FBUTtRQUNQQyxJQUFJO1lBQ0ZDLE9BQU87WUFDUEMsUUFBUUMsQ0FBQUEsUUFBU0EsTUFBTUQsTUFBTSxDQUFDRSxNQUFNLEdBQUc7WUFDdkMsaUJBQWlCO2dCQUFFQyxRQUFRO1lBQVU7UUFDdkM7UUFDQVgsTUFBTSxDQUFDSDtrQkFFUCxjQUFBLHFCQUFDZSxrREFBd0I7WUFDdkJDLFNBQVMsQ0FBQztZQUNWQyxRQUFRO2dCQUNOaEIsNkJBQTZCO2dCQUM3QkcsUUFBUTtnQkFDUkw7WUFDRjtZQUNBbUIsU0FBUztnQkFDUGpCLDZCQUE2QjtnQkFDN0JHLFFBQVE7WUFDVjtZQUNBZSxPQUFNO1lBQ05DLDJCQUNFLHFCQUFDQyxnQkFBVTtnQkFBQ1osSUFBSTtvQkFBRWEsVUFBVTtvQkFBSVosT0FBTztnQkFBaUI7MEJBQUc7O1lBSTdEUCxNQUFNQTtzQkFFTixjQUFBLHFCQUFDb0IsaUNBQVk7Z0JBQ1hDLFVBQVUsQ0FBQyxDQUFDLEVBQUVDLHVFQUF5QyxDQUFDLENBQUM7Z0JBQ3pEQyxTQUFTO29CQUNQekIsNkJBQTZCO29CQUM3QkcsUUFBUTtvQkFDUkw7Z0JBQ0Y7Ozs7QUFLViJ9