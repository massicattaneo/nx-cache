{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/base-components/src/UploadInput/UploadInput.tsx"],"sourcesContent":["import React, { forwardRef, useEffect, useImperativeHandle, useState } from \"react\"\n\ntype Props = {\n  multiple?: boolean\n  onSubmit?: (files: Array<File>) => void\n  accept?: string\n}\n\nexport type UploadInputRef = {\n  open: () => Promise<Array<File>>\n}\n\nexport const UploadInput = forwardRef<UploadInputRef, Props>(\n  ({ multiple, onSubmit, accept }, ref) => {\n    const [callbacks, setCallbacks] = useState<Array<(list: Array<File>) => void>>([])\n    const [inputRef, setInputRef] = useState<HTMLInputElement | null>(null)\n\n    useImperativeHandle(\n      ref,\n      () => {\n        return {\n          open: async () => {\n            inputRef?.click()\n            return new Promise<Array<File>>(resolve => {\n              setCallbacks(prev => [...prev, resolve])\n            })\n          },\n        }\n      },\n      [inputRef],\n    )\n\n    const submitFiles = async (event: React.ChangeEvent<HTMLInputElement>) => {\n      const { files }: { files: FileList | null } = event.target\n      const fileArray = Array.from(files || [])\n      if (files) {\n        onSubmit?.(fileArray)\n        callbacks.forEach(callback => callback(fileArray))\n        setCallbacks([])\n        Object.assign(event.target, { value: \"\" })\n      }\n    }\n\n    useEffect(() => {\n      const listener = () => {\n        setCallbacks(callbacks => {\n          callbacks.forEach(callback => callback([]))\n          return []\n        })\n      }\n      const fileUploader = document.getElementById(\"fileUploader\")\n      fileUploader?.addEventListener(\"cancel\", listener)\n      return () => {\n        fileUploader?.removeEventListener(\"cancel\", listener)\n      }\n    }, [])\n\n    return (\n      <input\n        type=\"file\"\n        id=\"fileUploader\"\n        data-testid=\"fileUploader\"\n        ref={setInputRef}\n        multiple={multiple}\n        accept={accept}\n        style={{ display: \"none\" }}\n        onChange={submitFiles}\n      />\n    )\n  },\n)\n"],"names":["UploadInput","forwardRef","multiple","onSubmit","accept","ref","callbacks","setCallbacks","useState","inputRef","setInputRef","useImperativeHandle","open","click","Promise","resolve","prev","submitFiles","event","files","target","fileArray","Array","from","forEach","callback","Object","assign","value","useEffect","listener","fileUploader","document","getElementById","addEventListener","removeEventListener","input","type","id","data-testid","style","display","onChange"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAYaA;;;eAAAA;;;;+DAZ+D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYrE,MAAMA,4BAAcC,IAAAA,iBAAU,EACnC,CAAC,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,MAAM,EAAE,EAAEC;IAC/B,MAAM,CAACC,WAAWC,aAAa,GAAGC,IAAAA,eAAQ,EAAqC,EAAE;IACjF,MAAM,CAACC,UAAUC,YAAY,GAAGF,IAAAA,eAAQ,EAA0B;IAElEG,IAAAA,0BAAmB,EACjBN,KACA;QACE,OAAO;YACLO,MAAM;gBACJH,qBAAAA,+BAAAA,SAAUI,KAAK;gBACf,OAAO,IAAIC,QAAqBC,CAAAA;oBAC9BR,aAAaS,CAAAA,OAAQ;+BAAIA;4BAAMD;yBAAQ;gBACzC;YACF;QACF;IACF,GACA;QAACN;KAAS;IAGZ,MAAMQ,cAAc,OAAOC;QACzB,MAAM,EAAEC,KAAK,EAAE,GAA+BD,MAAME,MAAM;QAC1D,MAAMC,YAAYC,MAAMC,IAAI,CAACJ,SAAS,EAAE;QACxC,IAAIA,OAAO;YACThB,qBAAAA,+BAAAA,SAAWkB;YACXf,UAAUkB,OAAO,CAACC,CAAAA,WAAYA,SAASJ;YACvCd,aAAa,EAAE;YACfmB,OAAOC,MAAM,CAACT,MAAME,MAAM,EAAE;gBAAEQ,OAAO;YAAG;QAC1C;IACF;IAEAC,IAAAA,gBAAS,EAAC;QACR,MAAMC,WAAW;YACfvB,aAAaD,CAAAA;gBACXA,UAAUkB,OAAO,CAACC,CAAAA,WAAYA,SAAS,EAAE;gBACzC,OAAO,EAAE;YACX;QACF;QACA,MAAMM,eAAeC,SAASC,cAAc,CAAC;QAC7CF,yBAAAA,mCAAAA,aAAcG,gBAAgB,CAAC,UAAUJ;QACzC,OAAO;YACLC,yBAAAA,mCAAAA,aAAcI,mBAAmB,CAAC,UAAUL;QAC9C;IACF,GAAG,EAAE;IAEL,qBACE,qBAACM;QACCC,MAAK;QACLC,IAAG;QACHC,eAAY;QACZlC,KAAKK;QACLR,UAAUA;QACVE,QAAQA;QACRoC,OAAO;YAAEC,SAAS;QAAO;QACzBC,UAAUzB;;AAGhB"}