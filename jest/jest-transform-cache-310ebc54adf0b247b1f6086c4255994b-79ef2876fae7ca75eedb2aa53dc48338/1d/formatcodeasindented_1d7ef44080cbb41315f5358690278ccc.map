{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/node_modules/mdast-util-to-markdown/lib/util/format-code-as-indented.js"],"sourcesContent":["/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Code} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatCodeAsIndented(node, state) {\n  return Boolean(\n    state.options.fences === false &&\n      node.value &&\n      // If there’s no info…\n      !node.lang &&\n      // And there’s a non-whitespace character…\n      /[^ \\r\\n]/.test(node.value) &&\n      // And the value doesn’t start or end in a blank…\n      !/^[\\t ]*(?:[\\r\\n]|$)|(?:^|[\\r\\n])[\\t ]*$/.test(node.value)\n  )\n}\n"],"names":["formatCodeAsIndented","node","state","Boolean","options","fences","value","lang","test"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA;;;CAGC,GAED;;;;CAIC;;;;+BACeA;;;eAAAA;;;AAAT,SAASA,qBAAqBC,IAAI,EAAEC,KAAK;IAC9C,OAAOC,QACLD,MAAME,OAAO,CAACC,MAAM,KAAK,SACvBJ,KAAKK,KAAK,IACV,sBAAsB;IACtB,CAACL,KAAKM,IAAI,IACV,0CAA0C;IAC1C,WAAWC,IAAI,CAACP,KAAKK,KAAK,KAC1B,iDAAiD;IACjD,CAAC,0CAA0CE,IAAI,CAACP,KAAKK,KAAK;AAEhE"}