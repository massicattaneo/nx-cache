{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/providers/src/useCopySearch.tsx"],"sourcesContent":["import { useCallback } from \"react\"\nimport { Typography } from \"@mui/material\"\nimport { adapters } from \"@rp/adapters\"\nimport { getSavedQuery, useCreateSavedQuery } from \"@rp/react/tanstack-api/user-data-queries\"\nimport { SEARCH_ROUTE } from \"@rp/react/web/router\"\nimport { useQueryClient } from \"@tanstack/react-query\"\nimport { useSnackbar } from \"./Snackbar\"\nimport { useCopyResource } from \"./useCopyResource\"\nimport { SUCCESS_MESSAGE_QUERY_PARAM } from \"./useShowSuccessMessage\"\n\nconst baseRoute = () => {\n  const base = (adapters.location.getRelativeBaseUrl() ?? \"\").slice(0, -1)\n  const ROUTE = `${base}${SEARCH_ROUTE}`\n  return ROUTE\n}\n\nconst useCopySearch = () => {\n  const { mutateAsync, isPending } = useCreateSavedQuery()\n\n  const onCopySuccess = useCallback(({ id }: { id: string }) => {\n    const message = encodeURIComponent(\"You made a copy of the search.\")\n    window.open(\n      `${baseRoute()}/${id}?${SUCCESS_MESSAGE_QUERY_PARAM}=${message}`,\n      \"_blank\",\n      \"noreferrer\",\n    )\n  }, [])\n\n  return { mutateAsync, onCopySuccess, isPending }\n}\n\nconst useCopySearchById = (id: string) => {\n  const queryClient = useQueryClient()\n  const { mutateAsync, onCopySuccess, isPending: isCopying } = useCopySearch()\n  const { enqueueSuccess, enqueueError } = useSnackbar()\n  const copy = useCallback(async () => {\n    const data = await getSavedQuery(queryClient, id ?? \"\")\n    return mutateAsync({\n      name: `Copy of ${data?.name}`,\n      query: data?.query,\n      saveStatus: data?.saveStatus,\n      promptProperties: data?.promptProperties,\n    })\n      .then(data => {\n        enqueueSuccess(\n          <Typography>\n            The search <strong>{data.name}</strong> has been created\n          </Typography>,\n        )\n      })\n      .catch(() => {\n        enqueueError(\"There was an error copying the search\")\n      })\n  }, [enqueueError, enqueueSuccess, id, mutateAsync, queryClient])\n\n  const copyInANewTab = useCallback(async () => {\n    const data = await getSavedQuery(queryClient, id ?? \"\")\n    return mutateAsync({\n      name: `Copy of ${data?.name}`,\n      query: data?.query,\n      saveStatus: data?.saveStatus,\n      promptProperties: data?.promptProperties,\n    }).then(onCopySuccess)\n  }, [id, mutateAsync, onCopySuccess, queryClient])\n\n  return { copy, copyInANewTab, isCopying }\n}\n\nconst useCopySearchSnackbar = () => {\n  const { mutateAsync, onCopySuccess } = useCopySearch()\n\n  const { showSnackbar, isCopying } = useCopyResource({\n    mutateAsync,\n    infoMessage: \"You can't make changes to a Public Search.\",\n    onSuccess: onCopySuccess,\n  })\n  return { showSnackbar, isCopying }\n}\n\nexport { useCopySearchSnackbar, useCopySearchById }\n"],"names":["useCopySearchById","useCopySearchSnackbar","baseRoute","adapters","base","location","getRelativeBaseUrl","slice","ROUTE","SEARCH_ROUTE","useCopySearch","mutateAsync","isPending","useCreateSavedQuery","onCopySuccess","useCallback","id","message","encodeURIComponent","window","open","SUCCESS_MESSAGE_QUERY_PARAM","queryClient","useQueryClient","isCopying","enqueueSuccess","enqueueError","useSnackbar","copy","data","getSavedQuery","name","query","saveStatus","promptProperties","then","Typography","strong","catch","copyInANewTab","showSnackbar","useCopyResource","infoMessage","onSuccess"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;;;;;;;;IA+EgCA,iBAAiB;eAAjBA;;IAAvBC,qBAAqB;eAArBA;;;;uBA/EmB;0BACD;0BACF;iCAC0B;wBACtB;4BACE;0BACH;iCACI;uCACY;AAE5C,MAAMC,YAAY;QACFC;IAAd,MAAMC,OAAO,AAACD,CAAAA,CAAAA,wCAAAA,kBAAQ,CAACE,QAAQ,CAACC,kBAAkB,gBAApCH,mDAAAA,wCAA0C,EAAC,EAAGI,KAAK,CAAC,GAAG,CAAC;IACtE,MAAMC,QAAQ,CAAC,EAAEJ,KAAK,EAAEK,oBAAY,CAAC,CAAC;IACtC,OAAOD;AACT;AAEA,MAAME,gBAAgB;IACpB,MAAM,EAAEC,WAAW,EAAEC,SAAS,EAAE,GAAGC,IAAAA,oCAAmB;IAEtD,MAAMC,gBAAgBC,IAAAA,kBAAW,EAAC,CAAC,EAAEC,EAAE,EAAkB;QACvD,MAAMC,UAAUC,mBAAmB;QACnCC,OAAOC,IAAI,CACT,CAAC,EAAElB,YAAY,CAAC,EAAEc,GAAG,CAAC,EAAEK,kDAA2B,CAAC,CAAC,EAAEJ,QAAQ,CAAC,EAChE,UACA;IAEJ,GAAG,EAAE;IAEL,OAAO;QAAEN;QAAaG;QAAeF;IAAU;AACjD;AAEA,MAAMZ,oBAAoB,CAACgB;IACzB,MAAMM,cAAcC,IAAAA,0BAAc;IAClC,MAAM,EAAEZ,WAAW,EAAEG,aAAa,EAAEF,WAAWY,SAAS,EAAE,GAAGd;IAC7D,MAAM,EAAEe,cAAc,EAAEC,YAAY,EAAE,GAAGC,IAAAA,qBAAW;IACpD,MAAMC,OAAOb,IAAAA,kBAAW,EAAC;QACvB,MAAMc,OAAO,MAAMC,IAAAA,8BAAa,EAACR,aAAaN,eAAAA,gBAAAA,KAAM;QACpD,OAAOL,YAAY;YACjBoB,MAAM,CAAC,QAAQ,EAAEF,iBAAAA,2BAAAA,KAAME,IAAI,CAAC,CAAC;YAC7BC,KAAK,EAAEH,iBAAAA,2BAAAA,KAAMG,KAAK;YAClBC,UAAU,EAAEJ,iBAAAA,2BAAAA,KAAMI,UAAU;YAC5BC,gBAAgB,EAAEL,iBAAAA,2BAAAA,KAAMK,gBAAgB;QAC1C,GACGC,IAAI,CAACN,CAAAA;YACJJ,6BACE,sBAACW,oBAAU;;oBAAC;kCACC,qBAACC;kCAAQR,KAAKE,IAAI;;oBAAU;;;QAG7C,GACCO,KAAK,CAAC;YACLZ,aAAa;QACf;IACJ,GAAG;QAACA;QAAcD;QAAgBT;QAAIL;QAAaW;KAAY;IAE/D,MAAMiB,gBAAgBxB,IAAAA,kBAAW,EAAC;QAChC,MAAMc,OAAO,MAAMC,IAAAA,8BAAa,EAACR,aAAaN,eAAAA,gBAAAA,KAAM;QACpD,OAAOL,YAAY;YACjBoB,MAAM,CAAC,QAAQ,EAAEF,iBAAAA,2BAAAA,KAAME,IAAI,CAAC,CAAC;YAC7BC,KAAK,EAAEH,iBAAAA,2BAAAA,KAAMG,KAAK;YAClBC,UAAU,EAAEJ,iBAAAA,2BAAAA,KAAMI,UAAU;YAC5BC,gBAAgB,EAAEL,iBAAAA,2BAAAA,KAAMK,gBAAgB;QAC1C,GAAGC,IAAI,CAACrB;IACV,GAAG;QAACE;QAAIL;QAAaG;QAAeQ;KAAY;IAEhD,OAAO;QAAEM;QAAMW;QAAef;IAAU;AAC1C;AAEA,MAAMvB,wBAAwB;IAC5B,MAAM,EAAEU,WAAW,EAAEG,aAAa,EAAE,GAAGJ;IAEvC,MAAM,EAAE8B,YAAY,EAAEhB,SAAS,EAAE,GAAGiB,IAAAA,gCAAe,EAAC;QAClD9B;QACA+B,aAAa;QACbC,WAAW7B;IACb;IACA,OAAO;QAAE0B;QAAchB;IAAU;AACnC"}