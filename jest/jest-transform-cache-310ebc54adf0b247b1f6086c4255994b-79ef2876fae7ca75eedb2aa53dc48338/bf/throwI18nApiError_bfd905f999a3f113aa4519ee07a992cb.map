{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/common/internationalization/src/lib/throwI18nApiError.ts"],"sourcesContent":["import axios from \"axios\"\nimport { t } from \"i18next\"\nimport { resources } from \"./resources\"\n\ntype Api = keyof typeof resources[\"en\"][\"translation\"][\"apiErrors\"]\n\nconst isWatchlistBatchUploadCode = (\n  code: string,\n): code is keyof typeof resources[\"en\"][\"translation\"][\"apiErrors\"][\"watchlistBatchUpload\"] =>\n  code in resources.en.translation.apiErrors.watchlistBatchUpload\n\nconst isErrorCode = (data: unknown): data is { errorCode: string } =>\n  !!data && typeof data === \"object\" && \"errorCode\" in data\n\nexport function throwI18nApiError(page: Api, error: unknown, params?: Record<string, unknown>) {\n  if (axios.isAxiosError(error) && isErrorCode(error.response?.data)) {\n    const { errorCode = \"\" } = error.response.data\n    if (page === \"watchlistBatchUpload\" && isWatchlistBatchUploadCode(errorCode)) {\n      throw new Error(t(`apiErrors.${page}.${errorCode}`, params))\n    }\n  }\n  throw new Error(t(\"apiErrors.genericServerApiError\"))\n}\n"],"names":["throwI18nApiError","isWatchlistBatchUploadCode","code","resources","en","translation","apiErrors","watchlistBatchUpload","isErrorCode","data","page","error","params","axios","isAxiosError","response","errorCode","Error","t"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAcgBA;;;eAAAA;;;8DAdE;yBACA;2BACQ;;;;;;AAI1B,MAAMC,6BAA6B,CACjCC,OAEAA,QAAQC,oBAAS,CAACC,EAAE,CAACC,WAAW,CAACC,SAAS,CAACC,oBAAoB;AAEjE,MAAMC,cAAc,CAACC,OACnB,CAAC,CAACA,QAAQ,OAAOA,SAAS,YAAY,eAAeA;AAEhD,SAAST,kBAAkBU,IAAS,EAAEC,KAAc,EAAEC,MAAgC;QAC9CD;IAA7C,IAAIE,cAAK,CAACC,YAAY,CAACH,UAAUH,aAAYG,kBAAAA,MAAMI,QAAQ,cAAdJ,sCAAAA,gBAAgBF,IAAI,GAAG;QAClE,MAAM,EAAEO,YAAY,EAAE,EAAE,GAAGL,MAAMI,QAAQ,CAACN,IAAI;QAC9C,IAAIC,SAAS,0BAA0BT,2BAA2Be,YAAY;YAC5E,MAAM,IAAIC,MAAMC,IAAAA,UAAC,EAAC,CAAC,UAAU,EAAER,KAAK,CAAC,EAAEM,UAAU,CAAC,EAAEJ;QACtD;IACF;IACA,MAAM,IAAIK,MAAMC,IAAAA,UAAC,EAAC;AACpB"}