bdd9191170eaf2150bb2b9b8523ce89a
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "FullScreenSuggestions", {
    enumerable: true,
    get: function() {
        return FullScreenSuggestions;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _hooks = require("@rp/react/common/hooks");
const _watchlists = require("@rp/react/common/watchlists");
const _suggestion = require("@rp/react/tanstack-api/suggestion");
const _compositecomponents = require("@rp/react/web/common/composite-components");
const _hooks1 = require("@rp/react/web/common/hooks");
const _core = require("@rp/react/web/mui/core");
const _icons = require("@rp/react/web/mui/icons");
const _WatchlistCategoryFilter = require("./WatchlistCategoryFilter");
const _WatchlistSuggestionListmobile = require("./WatchlistSuggestionList.mobile");
const FullScreenSuggestions = ({ onClose, included, onAddSuggestions, categories, isPatching, watchlist })=>{
    const [filter, setFilter] = (0, _react.useState)(undefined);
    const [searchTerm, setSearchTerm, currentSearchTerm] = (0, _hooks.useDebouncedState)("");
    const { data, isLoading: areSuggestionsLoading, hasNextPage: hasMore, fetchNextPage } = (0, _suggestion.useWatchlistSuggestions)({
        query: searchTerm,
        category: filter ? [
            filter
        ] : (0, _watchlists.getAllWatchlistCategories)(searchTerm, categories)
    });
    const { safeArea } = (0, _hooks1.useDeviceInfo)();
    var _data_pages;
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                sx: {
                    position: "fixed",
                    width: "100vw",
                    height: "100vh",
                    top: 0,
                    backgroundColor: "surface.main",
                    zIndex: 3
                }
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                sx: {
                    minHeight: `calc(100vh - ${_compositecomponents.BOTTOM_NAV_HEIGHT}px - ${safeArea.bottom})`,
                    display: "flex",
                    flexDirection: "column",
                    width: "100%",
                    paddingBottom: `${_compositecomponents.BOTTOM_NAV_HEIGHT}px`,
                    zIndex: 3,
                    backgroundColor: "surface.main"
                },
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                        sx: {
                            position: "sticky",
                            top: 0,
                            display: "flex",
                            flexDirection: "column",
                            gap: 1,
                            zIndex: 10,
                            backgroundColor: "surface.main",
                            pb: 2
                        },
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.TextField, {
                                variant: "filled",
                                value: currentSearchTerm,
                                onChange: (ev)=>setSearchTerm(ev.target.value),
                                fullWidth: true,
                                placeholder: "Search for entities",
                                autoFocus: true,
                                InputProps: {
                                    disableUnderline: true,
                                    startAdornment: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.IconButton, {
                                        onClick: onClose,
                                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.ArrowBack, {})
                                    }),
                                    endAdornment: currentSearchTerm ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.IconButton, {
                                        onClick: ()=>setSearchTerm(""),
                                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.Close, {})
                                    }) : undefined,
                                    sx: {
                                        pl: 1,
                                        borderRadius: 0
                                    }
                                },
                                sx: {
                                    "& input": {
                                        py: 2
                                    }
                                }
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_WatchlistCategoryFilter.WatchlistCategoryFilter, {
                                categories: categories,
                                counts: {},
                                onChange: (category)=>setFilter(category)
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                        sx: {
                            flexGrow: 1,
                            display: "flex",
                            // The FAB will change to the other style, replace the pb with the constant when update it.
                            pb: 2
                        },
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_WatchlistSuggestionListmobile.WatchlistSuggestionListMobile, {
                            watchlist: watchlist,
                            hasFilter: Boolean(filter),
                            hasMore: hasMore,
                            fetchNextPage: fetchNextPage,
                            pages: (_data_pages = data === null || data === void 0 ? void 0 : data.pages) !== null && _data_pages !== void 0 ? _data_pages : [],
                            included: included,
                            isLoading: areSuggestionsLoading,
                            onAddSuggestions: onAddSuggestions,
                            isPatching: isPatching
                        })
                    })
                ]
            })
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,