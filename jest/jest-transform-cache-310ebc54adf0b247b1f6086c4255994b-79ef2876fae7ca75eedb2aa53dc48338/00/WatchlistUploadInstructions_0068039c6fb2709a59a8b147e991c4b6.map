{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/watchlists/src/lib/WatchlistUploadModal/WatchlistUploadInstructions.tsx"],"sourcesContent":["import { WATCHLIST_ITEMS_MAXIMUM_COUNT } from \"@rp/common/settings\"\nimport { formatNumber } from \"@rp/common/utils\"\nimport { LinkStyled, UploadBoxIcon } from \"@rp/react/web/common/base-components\"\nimport { Box, Link, Typography } from \"@rp/react/web/mui/core\"\nimport { WatchlistUploadExampleTable } from \"./WatchlistUploadExampleTable\"\nimport { generateCSV } from \"./watchlistExample\"\n\ntype Props = {\n  onBrowse: () => void\n}\n\nexport const WatchlistUploadInstructions = ({ onBrowse }: Props) => {\n  const csv = generateCSV()\n  return (\n    <Box\n      sx={{\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        display: \"flex\",\n        flexDirection: \"column\",\n      }}\n    >\n      <UploadBoxIcon />\n      <Typography\n        sx={{\n          mt: 1,\n          fontSize: 24,\n          lineHeight: \"32px\",\n          fontWeight: 700,\n        }}\n      >\n        Drag and drop to upload\n      </Typography>\n      <Typography sx={{ fontSize: 18, lineHeight: \"24px\" }}>\n        or{\" \"}\n        <LinkStyled\n          to=\"/\"\n          onClick={ev => {\n            ev.preventDefault()\n            onBrowse()\n          }}\n        >\n          browse\n        </LinkStyled>{\" \"}\n        to choose your file\n      </Typography>\n      <Typography\n        sx={{ mt: 2, fontSize: 16, lineHeight: \"24px\", color: \"grey.300\", textAlign: \"center\" }}\n      >\n        Upload a .csv file containing the list of company and ETF names, tickers\n        <br /> ISIN, CUSIP, SEDOL, or Listings that you wish to add to your watchlist.\n        <br />\n        <br />\n        You can upload up to {formatNumber(WATCHLIST_ITEMS_MAXIMUM_COUNT)} entities!\n      </Typography>\n      <WatchlistUploadExampleTable />\n      <Typography\n        sx={{ mt: 2, fontSize: 16, lineHeight: \"24px\", color: \"grey.300\", textAlign: \"center\" }}\n      >\n        Click{\" \"}\n        <Link\n          target=\"_blank\"\n          download=\"csv-sample.csv\"\n          href={window.URL.createObjectURL(new Blob([csv], { type: \"text/csv\" }))}\n        >\n          here\n        </Link>{\" \"}\n        to download a sample file.\n      </Typography>\n    </Box>\n  )\n}\n"],"names":["WatchlistUploadInstructions","onBrowse","csv","generateCSV","Box","sx","justifyContent","alignItems","display","flexDirection","UploadBoxIcon","Typography","mt","fontSize","lineHeight","fontWeight","LinkStyled","to","onClick","ev","preventDefault","color","textAlign","br","formatNumber","WATCHLIST_ITEMS_MAXIMUM_COUNT","WatchlistUploadExampleTable","Link","target","download","href","window","URL","createObjectURL","Blob","type"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAWaA;;;eAAAA;;;;0BAXiC;uBACjB;gCACa;sBACJ;6CACM;kCAChB;AAMrB,MAAMA,8BAA8B,CAAC,EAAEC,QAAQ,EAAS;IAC7D,MAAMC,MAAMC,IAAAA,6BAAW;IACvB,qBACE,sBAACC,SAAG;QACFC,IAAI;YACFC,gBAAgB;YAChBC,YAAY;YACZC,SAAS;YACTC,eAAe;QACjB;;0BAEA,qBAACC,6BAAa;0BACd,qBAACC,gBAAU;gBACTN,IAAI;oBACFO,IAAI;oBACJC,UAAU;oBACVC,YAAY;oBACZC,YAAY;gBACd;0BACD;;0BAGD,sBAACJ,gBAAU;gBAACN,IAAI;oBAAEQ,UAAU;oBAAIC,YAAY;gBAAO;;oBAAG;oBACjD;kCACH,qBAACE,0BAAU;wBACTC,IAAG;wBACHC,SAASC,CAAAA;4BACPA,GAAGC,cAAc;4BACjBnB;wBACF;kCACD;;oBAEa;oBAAI;;;0BAGpB,sBAACU,gBAAU;gBACTN,IAAI;oBAAEO,IAAI;oBAAGC,UAAU;oBAAIC,YAAY;oBAAQO,OAAO;oBAAYC,WAAW;gBAAS;;oBACvF;kCAEC,qBAACC;oBAAK;kCACN,qBAACA;kCACD,qBAACA;oBAAK;oBACgBC,IAAAA,mBAAY,EAACC,uCAA6B;oBAAE;;;0BAEpE,qBAACC,wDAA2B;0BAC5B,sBAACf,gBAAU;gBACTN,IAAI;oBAAEO,IAAI;oBAAGC,UAAU;oBAAIC,YAAY;oBAAQO,OAAO;oBAAYC,WAAW;gBAAS;;oBACvF;oBACO;kCACN,qBAACK,UAAI;wBACHC,QAAO;wBACPC,UAAS;wBACTC,MAAMC,OAAOC,GAAG,CAACC,eAAe,CAAC,IAAIC,KAAK;4BAAChC;yBAAI,EAAE;4BAAEiC,MAAM;wBAAW;kCACrE;;oBAEO;oBAAI;;;;;AAKpB"}