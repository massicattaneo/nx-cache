4bbc8bc23c96abcd2c317e6d4f77b009
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "RpJsonToolBarAdornment", {
    enumerable: true,
    get: function() {
        return RpJsonToolBarAdornment;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _icons = require("@rp/react/web/mui/icons");
const RpJsonToolBarAdornment = ({ foundCount, onArrowsClick, onClose, textRef, arrowIndex, hasText })=>{
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
        children: [
            hasText ? /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                        style: {
                            fontSize: 12
                        },
                        children: foundCount ? `${arrowIndex}/${foundCount.toLocaleString()}` : "0/0"
                    }),
                    Boolean(foundCount) && /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.KeyboardArrowUp, {
                        "data-testid": "arrowPrevious",
                        sx: {
                            cursor: "pointer"
                        },
                        onClick: ()=>{
                            onArrowsClick(-1);
                        }
                    }),
                    Boolean(foundCount) && /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.KeyboardArrowDown, {
                        "data-testid": "arrowNext",
                        sx: {
                            cursor: "pointer"
                        },
                        onClick: ()=>{
                            onArrowsClick(1);
                        }
                    })
                ]
            }) : null,
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.Close, {
                sx: {
                    cursor: "pointer"
                },
                role: "button",
                "aria-label": "Close find in document",
                "aria-hidden": "false",
                onClick: ()=>{
                    onClose();
                    if (textRef.current) {
                        textRef.current.focus();
                    }
                }
            })
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL3JwanNvbi9zcmMvbGliL2NvbXBvbmVudHMvUnBKc29uVG9vbGJhci9ScEpzb25Ub29sYmFyQWRvcm5tZW50LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDbG9zZSwgS2V5Ym9hcmRBcnJvd0Rvd24sIEtleWJvYXJkQXJyb3dVcCB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL211aS9pY29uc1wiXG5cbnR5cGUgUnBKc29uVG9vbEJhckFkb3JubWVudFByb3BzID0ge1xuICBmb3VuZENvdW50OiBudW1iZXJcbiAgb25BcnJvd3NDbGljazogKHZhbHVlOiBudW1iZXIpID0+IHZvaWRcbiAgb25DbG9zZTogKCkgPT4gdm9pZFxuICB0ZXh0UmVmOiBSZWFjdC5SZWZPYmplY3Q8SFRNTElucHV0RWxlbWVudCB8IG51bGw+XG4gIGFycm93SW5kZXg6IG51bWJlclxuICBoYXNUZXh0PzogYm9vbGVhblxufVxuXG5leHBvcnQgY29uc3QgUnBKc29uVG9vbEJhckFkb3JubWVudCA9ICh7XG4gIGZvdW5kQ291bnQsXG4gIG9uQXJyb3dzQ2xpY2ssXG4gIG9uQ2xvc2UsXG4gIHRleHRSZWYsXG4gIGFycm93SW5kZXgsXG4gIGhhc1RleHQsXG59OiBScEpzb25Ub29sQmFyQWRvcm5tZW50UHJvcHMpID0+IHtcbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAge2hhc1RleHQgPyAoXG4gICAgICAgIDw+XG4gICAgICAgICAgPHNwYW4gc3R5bGU9e3sgZm9udFNpemU6IDEyIH19PlxuICAgICAgICAgICAge2ZvdW5kQ291bnQgPyBgJHthcnJvd0luZGV4fS8ke2ZvdW5kQ291bnQudG9Mb2NhbGVTdHJpbmcoKX1gIDogXCIwLzBcIn1cbiAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAge0Jvb2xlYW4oZm91bmRDb3VudCkgJiYgKFxuICAgICAgICAgICAgPEtleWJvYXJkQXJyb3dVcFxuICAgICAgICAgICAgICBkYXRhLXRlc3RpZD1cImFycm93UHJldmlvdXNcIlxuICAgICAgICAgICAgICBzeD17eyBjdXJzb3I6IFwicG9pbnRlclwiIH19XG4gICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgICAgICBvbkFycm93c0NsaWNrKC0xKVxuICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICApfVxuICAgICAgICAgIHtCb29sZWFuKGZvdW5kQ291bnQpICYmIChcbiAgICAgICAgICAgIDxLZXlib2FyZEFycm93RG93blxuICAgICAgICAgICAgICBkYXRhLXRlc3RpZD1cImFycm93TmV4dFwiXG4gICAgICAgICAgICAgIHN4PXt7IGN1cnNvcjogXCJwb2ludGVyXCIgfX1cbiAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4ge1xuICAgICAgICAgICAgICAgIG9uQXJyb3dzQ2xpY2soMSlcbiAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgKX1cbiAgICAgICAgPC8+XG4gICAgICApIDogbnVsbH1cblxuICAgICAgPENsb3NlXG4gICAgICAgIHN4PXt7IGN1cnNvcjogXCJwb2ludGVyXCIgfX1cbiAgICAgICAgcm9sZT1cImJ1dHRvblwiXG4gICAgICAgIGFyaWEtbGFiZWw9XCJDbG9zZSBmaW5kIGluIGRvY3VtZW50XCJcbiAgICAgICAgYXJpYS1oaWRkZW49XCJmYWxzZVwiXG4gICAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICBvbkNsb3NlKClcbiAgICAgICAgICBpZiAodGV4dFJlZi5jdXJyZW50KSB7XG4gICAgICAgICAgICB0ZXh0UmVmLmN1cnJlbnQuZm9jdXMoKVxuICAgICAgICAgIH1cbiAgICAgICAgfX1cbiAgICAgIC8+XG4gICAgPC8+XG4gIClcbn1cbiJdLCJuYW1lcyI6WyJScEpzb25Ub29sQmFyQWRvcm5tZW50IiwiZm91bmRDb3VudCIsIm9uQXJyb3dzQ2xpY2siLCJvbkNsb3NlIiwidGV4dFJlZiIsImFycm93SW5kZXgiLCJoYXNUZXh0Iiwic3BhbiIsInN0eWxlIiwiZm9udFNpemUiLCJ0b0xvY2FsZVN0cmluZyIsIkJvb2xlYW4iLCJLZXlib2FyZEFycm93VXAiLCJkYXRhLXRlc3RpZCIsInN4IiwiY3Vyc29yIiwib25DbGljayIsIktleWJvYXJkQXJyb3dEb3duIiwiQ2xvc2UiLCJyb2xlIiwiYXJpYS1sYWJlbCIsImFyaWEtaGlkZGVuIiwiY3VycmVudCIsImZvY3VzIl0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQVdhQTs7O2VBQUFBOzs7O3VCQVg2QztBQVduRCxNQUFNQSx5QkFBeUIsQ0FBQyxFQUNyQ0MsVUFBVSxFQUNWQyxhQUFhLEVBQ2JDLE9BQU8sRUFDUEMsT0FBTyxFQUNQQyxVQUFVLEVBQ1ZDLE9BQU8sRUFDcUI7SUFDNUIscUJBQ0U7O1lBQ0dBLHdCQUNDOztrQ0FDRSxxQkFBQ0M7d0JBQUtDLE9BQU87NEJBQUVDLFVBQVU7d0JBQUc7a0NBQ3pCUixhQUFhLENBQUMsRUFBRUksV0FBVyxDQUFDLEVBQUVKLFdBQVdTLGNBQWMsR0FBRyxDQUFDLEdBQUc7O29CQUVoRUMsUUFBUVYsNkJBQ1AscUJBQUNXLHNCQUFlO3dCQUNkQyxlQUFZO3dCQUNaQyxJQUFJOzRCQUFFQyxRQUFRO3dCQUFVO3dCQUN4QkMsU0FBUzs0QkFDUGQsY0FBYyxDQUFDO3dCQUNqQjs7b0JBR0hTLFFBQVFWLDZCQUNQLHFCQUFDZ0Isd0JBQWlCO3dCQUNoQkosZUFBWTt3QkFDWkMsSUFBSTs0QkFBRUMsUUFBUTt3QkFBVTt3QkFDeEJDLFNBQVM7NEJBQ1BkLGNBQWM7d0JBQ2hCOzs7aUJBSUo7MEJBRUoscUJBQUNnQixZQUFLO2dCQUNKSixJQUFJO29CQUFFQyxRQUFRO2dCQUFVO2dCQUN4QkksTUFBSztnQkFDTEMsY0FBVztnQkFDWEMsZUFBWTtnQkFDWkwsU0FBUztvQkFDUGI7b0JBQ0EsSUFBSUMsUUFBUWtCLE9BQU8sRUFBRTt3QkFDbkJsQixRQUFRa0IsT0FBTyxDQUFDQyxLQUFLO29CQUN2QjtnQkFDRjs7OztBQUlSIn0=