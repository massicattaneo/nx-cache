f0654e918ce5d9c9c4a08a79db8519b6
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "MacroSearchesDropdown", {
    enumerable: true,
    get: function() {
        return MacroSearchesDropdown;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _utils = require("@rp/common/utils");
const _basecomponents = require("@rp/react/web/common/base-components");
const _core = require("@rp/react/web/mui/core");
const _icons = require("@rp/react/web/mui/icons");
const _NameDisplay = require("../NameDisplay");
const _CqsDropdownstyles = require("./CqsDropdown.styles");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function MacroSearchesDropdown({ filter, onRemove }) {
    const initialValue = {};
    const groups = filter.reduce((acc, item)=>{
        var _acc_item_group;
        return _object_spread_props(_object_spread({}, acc), {
            [item.group]: ((_acc_item_group = acc[item.group]) !== null && _acc_item_group !== void 0 ? _acc_item_group : []).concat(item)
        });
    }, initialValue);
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_CqsDropdownstyles.DropdownContainer, {
        role: "menu",
        "aria-label": "Pill menu",
        children: Object.entries(groups).map(([group, array])=>{
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_react.Fragment, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_CqsDropdownstyles.DropdownScroll, {
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_CqsDropdownstyles.DropdownTitle, {
                            sx: {
                                pt: "10px"
                            },
                            children: `${group} (${array.length})`
                        }),
                        array.map((subFilter)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_CqsDropdownstyles.DropdownItemContainer, {
                                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_NameDisplay.NameDisplay, {
                                            data: {
                                                data: {
                                                    name: subFilter.value === group ? "All" : (0, _utils.capitalizeAllWordsBySeparator)(subFilter.value, "-")
                                                },
                                                isLoading: false
                                            }
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.RPTooltip, {
                                            placement: "top",
                                            title: "Remove",
                                            enterDelay: 500,
                                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.IconButton, {
                                                "data-testid": `${subFilter}-remove`,
                                                onClick: ()=>onRemove(subFilter.id, {
                                                        id: subFilter.id,
                                                        type: subFilter.type,
                                                        value: [
                                                            subFilter.value
                                                        ],
                                                        operation: "in"
                                                    }),
                                                size: "small",
                                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.Close, {
                                                    sx: {
                                                        fontSize: 20
                                                    }
                                                })
                                            })
                                        })
                                    ]
                                })
                            }, subFilter.value))
                    ]
                })
            }, group);
        })
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2Nxcy1xdWVyeS1iYXIvc3JjL2xpYi9kcm9wZG93bnMvTWFjcm9TZWFyY2hlc0Ryb3Bkb3duLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBGcmFnbWVudCB9IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgeyBScHFsRmxhdEFycmF5RmlsdGVyIH0gZnJvbSBcIkBycC9jb21tb24vYXBpLXR5cGVzXCJcbmltcG9ydCB7IGNhcGl0YWxpemVBbGxXb3Jkc0J5U2VwYXJhdG9yIH0gZnJvbSBcIkBycC9jb21tb24vdXRpbHNcIlxuaW1wb3J0IHsgUlBUb29sdGlwIH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvY29tbW9uL2Jhc2UtY29tcG9uZW50c1wiXG5pbXBvcnQgeyBJY29uQnV0dG9uIH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvbXVpL2NvcmVcIlxuaW1wb3J0IHsgQ2xvc2UgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9tdWkvaWNvbnNcIlxuaW1wb3J0IHsgTmFtZURpc3BsYXkgfSBmcm9tIFwiLi4vTmFtZURpc3BsYXlcIlxuaW1wb3J0IHtcbiAgRHJvcGRvd25Db250YWluZXIsXG4gIERyb3Bkb3duSXRlbUNvbnRhaW5lcixcbiAgRHJvcGRvd25TY3JvbGwsXG4gIERyb3Bkb3duVGl0bGUsXG59IGZyb20gXCIuL0Nxc0Ryb3Bkb3duLnN0eWxlc1wiXG5cbnR5cGUgRmxhdHRlbkZpbHRlciA9IHsgaWQ6IHN0cmluZzsgdmFsdWU6IHN0cmluZzsgZ3JvdXA6IHN0cmluZzsgdHlwZTogc3RyaW5nIH1cblxudHlwZSBNYWNyb1NlYXJjaGVzRHJvcGRvd25Qcm9wcyA9IHtcbiAgZmlsdGVyOiBBcnJheTxGbGF0dGVuRmlsdGVyPlxuICBvblJlbW92ZTogKGlkOiBzdHJpbmcsIGdyb3VwOiBScHFsRmxhdEFycmF5RmlsdGVyKSA9PiB2b2lkXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBNYWNyb1NlYXJjaGVzRHJvcGRvd24oeyBmaWx0ZXIsIG9uUmVtb3ZlIH06IE1hY3JvU2VhcmNoZXNEcm9wZG93blByb3BzKSB7XG4gIGNvbnN0IGluaXRpYWxWYWx1ZTogUmVjb3JkPHN0cmluZywgQXJyYXk8RmxhdHRlbkZpbHRlcj4+ID0ge31cbiAgY29uc3QgZ3JvdXBzID0gZmlsdGVyLnJlZHVjZShcbiAgICAoYWNjLCBpdGVtKSA9PiAoeyAuLi5hY2MsIFtpdGVtLmdyb3VwXTogKGFjY1tpdGVtLmdyb3VwXSA/PyBbXSkuY29uY2F0KGl0ZW0pIH0pLFxuICAgIGluaXRpYWxWYWx1ZSxcbiAgKVxuXG4gIHJldHVybiAoXG4gICAgPERyb3Bkb3duQ29udGFpbmVyIHJvbGU9XCJtZW51XCIgYXJpYS1sYWJlbD1cIlBpbGwgbWVudVwiPlxuICAgICAge09iamVjdC5lbnRyaWVzKGdyb3VwcykubWFwKChbZ3JvdXAsIGFycmF5XSkgPT4ge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgIDxGcmFnbWVudCBrZXk9e2dyb3VwfT5cbiAgICAgICAgICAgIDxEcm9wZG93blNjcm9sbD5cbiAgICAgICAgICAgICAgPERyb3Bkb3duVGl0bGUgc3g9e3sgcHQ6IFwiMTBweFwiIH19PntgJHtncm91cH0gKCR7YXJyYXkubGVuZ3RofSlgfTwvRHJvcGRvd25UaXRsZT5cbiAgICAgICAgICAgICAge2FycmF5Lm1hcChzdWJGaWx0ZXIgPT4gKFxuICAgICAgICAgICAgICAgIDxEcm9wZG93bkl0ZW1Db250YWluZXIga2V5PXtzdWJGaWx0ZXIudmFsdWV9PlxuICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgPE5hbWVEaXNwbGF5XG4gICAgICAgICAgICAgICAgICAgICAgZGF0YT17e1xuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1YkZpbHRlci52YWx1ZSA9PT0gZ3JvdXBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gXCJBbGxcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBjYXBpdGFsaXplQWxsV29yZHNCeVNlcGFyYXRvcihzdWJGaWx0ZXIudmFsdWUsIFwiLVwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBpc0xvYWRpbmc6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgIDxSUFRvb2x0aXAgcGxhY2VtZW50PVwidG9wXCIgdGl0bGU9XCJSZW1vdmVcIiBlbnRlckRlbGF5PXs1MDB9PlxuICAgICAgICAgICAgICAgICAgICAgIDxJY29uQnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhLXRlc3RpZD17YCR7c3ViRmlsdGVyfS1yZW1vdmVgfVxuICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgb25SZW1vdmUoc3ViRmlsdGVyLmlkLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ6IHN1YkZpbHRlci5pZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBzdWJGaWx0ZXIudHlwZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogW3N1YkZpbHRlci52YWx1ZV0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3BlcmF0aW9uOiBcImluXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBzaXplPVwic21hbGxcIlxuICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxDbG9zZSBzeD17eyBmb250U2l6ZTogMjAgfX0gLz5cbiAgICAgICAgICAgICAgICAgICAgICA8L0ljb25CdXR0b24+XG4gICAgICAgICAgICAgICAgICAgIDwvUlBUb29sdGlwPlxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9Ecm9wZG93bkl0ZW1Db250YWluZXI+XG4gICAgICAgICAgICAgICkpfVxuICAgICAgICAgICAgPC9Ecm9wZG93blNjcm9sbD5cbiAgICAgICAgICA8L0ZyYWdtZW50PlxuICAgICAgICApXG4gICAgICB9KX1cbiAgICA8L0Ryb3Bkb3duQ29udGFpbmVyPlxuICApXG59XG4iXSwibmFtZXMiOlsiTWFjcm9TZWFyY2hlc0Ryb3Bkb3duIiwiZmlsdGVyIiwib25SZW1vdmUiLCJpbml0aWFsVmFsdWUiLCJncm91cHMiLCJyZWR1Y2UiLCJhY2MiLCJpdGVtIiwiZ3JvdXAiLCJjb25jYXQiLCJEcm9wZG93bkNvbnRhaW5lciIsInJvbGUiLCJhcmlhLWxhYmVsIiwiT2JqZWN0IiwiZW50cmllcyIsIm1hcCIsImFycmF5IiwiRnJhZ21lbnQiLCJEcm9wZG93blNjcm9sbCIsIkRyb3Bkb3duVGl0bGUiLCJzeCIsInB0IiwibGVuZ3RoIiwic3ViRmlsdGVyIiwiRHJvcGRvd25JdGVtQ29udGFpbmVyIiwiZGl2IiwiTmFtZURpc3BsYXkiLCJkYXRhIiwibmFtZSIsInZhbHVlIiwiY2FwaXRhbGl6ZUFsbFdvcmRzQnlTZXBhcmF0b3IiLCJpc0xvYWRpbmciLCJSUFRvb2x0aXAiLCJwbGFjZW1lbnQiLCJ0aXRsZSIsImVudGVyRGVsYXkiLCJJY29uQnV0dG9uIiwiZGF0YS10ZXN0aWQiLCJvbkNsaWNrIiwiaWQiLCJ0eXBlIiwib3BlcmF0aW9uIiwic2l6ZSIsIkNsb3NlIiwiZm9udFNpemUiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQXFCZ0JBOzs7ZUFBQUE7Ozs7dUJBckJTO3VCQUVxQjtnQ0FDcEI7c0JBQ0M7dUJBQ0w7NkJBQ007bUNBTXJCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQVNBLFNBQVNBLHNCQUFzQixFQUFFQyxNQUFNLEVBQUVDLFFBQVEsRUFBOEI7SUFDcEYsTUFBTUMsZUFBcUQsQ0FBQztJQUM1RCxNQUFNQyxTQUFTSCxPQUFPSSxNQUFNLENBQzFCLENBQUNDLEtBQUtDO1lBQW1DRDtlQUF6Qix3Q0FBS0E7WUFBSyxDQUFDQyxLQUFLQyxLQUFLLENBQUMsRUFBRSxBQUFDRixDQUFBQSxDQUFBQSxrQkFBQUEsR0FBRyxDQUFDQyxLQUFLQyxLQUFLLENBQUMsY0FBZkYsNkJBQUFBLGtCQUFtQixFQUFFLEFBQUQsRUFBR0csTUFBTSxDQUFDRjs7SUFBTSxHQUM3RUo7SUFHRixxQkFDRSxxQkFBQ08sb0NBQWlCO1FBQUNDLE1BQUs7UUFBT0MsY0FBVztrQkFDdkNDLE9BQU9DLE9BQU8sQ0FBQ1YsUUFBUVcsR0FBRyxDQUFDLENBQUMsQ0FBQ1AsT0FBT1EsTUFBTTtZQUN6QyxxQkFDRSxxQkFBQ0MsZUFBUTswQkFDUCxjQUFBLHNCQUFDQyxpQ0FBYzs7c0NBQ2IscUJBQUNDLGdDQUFhOzRCQUFDQyxJQUFJO2dDQUFFQyxJQUFJOzRCQUFPO3NDQUFJLENBQUMsRUFBRWIsTUFBTSxFQUFFLEVBQUVRLE1BQU1NLE1BQU0sQ0FBQyxDQUFDLENBQUM7O3dCQUMvRE4sTUFBTUQsR0FBRyxDQUFDUSxDQUFBQSwwQkFDVCxxQkFBQ0Msd0NBQXFCOzBDQUNwQixjQUFBLHNCQUFDQzs7c0RBQ0MscUJBQUNDLHdCQUFXOzRDQUNWQyxNQUFNO2dEQUNKQSxNQUFNO29EQUNKQyxNQUNFTCxVQUFVTSxLQUFLLEtBQUtyQixRQUNoQixRQUNBc0IsSUFBQUEsb0NBQTZCLEVBQUNQLFVBQVVNLEtBQUssRUFBRTtnREFDdkQ7Z0RBQ0FFLFdBQVc7NENBQ2I7O3NEQUVGLHFCQUFDQyx5QkFBUzs0Q0FBQ0MsV0FBVTs0Q0FBTUMsT0FBTTs0Q0FBU0MsWUFBWTtzREFDcEQsY0FBQSxxQkFBQ0MsZ0JBQVU7Z0RBQ1RDLGVBQWEsQ0FBQyxFQUFFZCxVQUFVLE9BQU8sQ0FBQztnREFDbENlLFNBQVMsSUFDUHBDLFNBQVNxQixVQUFVZ0IsRUFBRSxFQUFFO3dEQUNyQkEsSUFBSWhCLFVBQVVnQixFQUFFO3dEQUNoQkMsTUFBTWpCLFVBQVVpQixJQUFJO3dEQUNwQlgsT0FBTzs0REFBQ04sVUFBVU0sS0FBSzt5REFBQzt3REFDeEJZLFdBQVc7b0RBQ2I7Z0RBRUZDLE1BQUs7MERBRUwsY0FBQSxxQkFBQ0MsWUFBSztvREFBQ3ZCLElBQUk7d0RBQUV3QixVQUFVO29EQUFHOzs7Ozs7K0JBMUJOckIsVUFBVU0sS0FBSzs7O2VBSmxDckI7UUF1Q25COztBQUdOIn0=