{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/rpjson/src/lib/create-react-elements/collect-markups.ts"],"sourcesContent":["/* eslint-disable no-param-reassign */\nimport { EnhancedEntity, EnhancedTextBlock } from \"@rp/react/rpjson/types\"\nimport { CLASS_NAMES } from \"../constants\"\nimport { TYPES } from \"../constants\"\nimport { Markup, ReactDocumentOptions, RpJsonBlockDetections } from \"./create-react-elements.types\"\n\nconst mapRpJsonEntity = (\n  array: Array<EnhancedEntity> = [],\n  { textStartAt = 0 } = {},\n): Array<Markup> => {\n  return array.map(item => {\n    return {\n      rpJsonType: item.queryType,\n      rpJsonId: item.key,\n      id: item.id,\n      start: item.start - textStartAt,\n      end: item.end - textStartAt,\n    }\n  })\n}\n\nconst mapFind = (block: EnhancedTextBlock, options: ReactDocumentOptions = {}) => {\n  const { finds = [], findsCounter = {} } = options\n  if (!finds.length) return []\n  const accumulator: Array<Markup> = []\n  return finds\n    .filter(find => find)\n    .reduce((acc, find, findId) => {\n      const regExp =\n        find instanceof RegExp\n          ? find\n          : new RegExp(find.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\"), \"gi\") // Escape special character\n      const source = find instanceof RegExp ? find.source : find\n      const item = Array.from(block.text.matchAll(regExp))\n      findsCounter[findId] = findsCounter[findId] || 0\n      const findsMarkups: Array<Markup> = item.map(sub => {\n        const count = findsCounter[findId]++\n        return {\n          rpJsonId: `${CLASS_NAMES.FIND_PREFIX}${findId}-${count}`,\n          id: `find-${source}-${findId}-${count}`,\n          rpJsonType: `${TYPES.FIND}-${findId}`,\n          start: sub.index || 0,\n          end: sub.index ? sub.index + sub[0].length : sub[0].length,\n        }\n      })\n      return acc.concat(findsMarkups)\n    }, accumulator)\n}\n\nconst mapNewLines = (\n  block: EnhancedTextBlock,\n  options: ReactDocumentOptions = {},\n): Array<Markup> => {\n  const { idIterator = () => \"\" } = options\n  return Array.from(block.text.matchAll(/\\n/g)).map(match => ({\n    isBreakLine: true,\n    start: match.index || 0,\n    end: match.index || 0,\n    index: match.index,\n    id: idIterator(),\n  }))\n}\n\nexport const collectMarkups = (\n  block: EnhancedTextBlock,\n  rpJsonDetections: RpJsonBlockDetections,\n  options: ReactDocumentOptions = {},\n): { text: string; markups: Array<Markup> } => {\n  const markups = []\n  const { performance = {} } = options\n  if (performance.markupDetections && Array.isArray(performance.markupDetections)) {\n    const all = rpJsonDetections.entities.filter(i =>\n      Array.isArray(performance.markupDetections)\n        ? performance.markupDetections?.includes(i.key)\n        : false,\n    )\n    markups.push(...mapRpJsonEntity(all, block))\n  } else if (performance.markupDetections) {\n    markups.push(...mapRpJsonEntity(rpJsonDetections.entities, block))\n  }\n  markups.push(...mapFind(block, options))\n  if (performance.markupNewLines) {\n    markups.push(...mapNewLines(block, options))\n  }\n  return {\n    text: block.text,\n    markups: markups.sort((first, second) => first.start - second.start),\n  }\n}\n"],"names":["collectMarkups","mapRpJsonEntity","array","textStartAt","map","item","rpJsonType","queryType","rpJsonId","key","id","start","end","mapFind","block","options","finds","findsCounter","length","accumulator","filter","find","reduce","acc","findId","regExp","RegExp","replace","source","Array","from","text","matchAll","findsMarkups","sub","count","CLASS_NAMES","FIND_PREFIX","TYPES","FIND","index","concat","mapNewLines","idIterator","match","isBreakLine","rpJsonDetections","markups","performance","markupDetections","isArray","all","entities","i","includes","push","markupNewLines","sort","first","second"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA,oCAAoC;;;;+BA+DvBA;;;eAAAA;;;2BA7De;AAI5B,MAAMC,kBAAkB,CACtBC,QAA+B,EAAE,EACjC,EAAEC,cAAc,CAAC,EAAE,GAAG,CAAC,CAAC;IAExB,OAAOD,MAAME,GAAG,CAACC,CAAAA;QACf,OAAO;YACLC,YAAYD,KAAKE,SAAS;YAC1BC,UAAUH,KAAKI,GAAG;YAClBC,IAAIL,KAAKK,EAAE;YACXC,OAAON,KAAKM,KAAK,GAAGR;YACpBS,KAAKP,KAAKO,GAAG,GAAGT;QAClB;IACF;AACF;AAEA,MAAMU,UAAU,CAACC,OAA0BC,UAAgC,CAAC,CAAC;IAC3E,MAAM,EAAEC,QAAQ,EAAE,EAAEC,eAAe,CAAC,CAAC,EAAE,GAAGF;IAC1C,IAAI,CAACC,MAAME,MAAM,EAAE,OAAO,EAAE;IAC5B,MAAMC,cAA6B,EAAE;IACrC,OAAOH,MACJI,MAAM,CAACC,CAAAA,OAAQA,MACfC,MAAM,CAAC,CAACC,KAAKF,MAAMG;QAClB,MAAMC,SACJJ,gBAAgBK,SACZL,OACA,IAAIK,OAAOL,KAAKM,OAAO,CAAC,yBAAyB,SAAS,MAAM,2BAA2B;;QACjG,MAAMC,SAASP,gBAAgBK,SAASL,KAAKO,MAAM,GAAGP;QACtD,MAAMhB,OAAOwB,MAAMC,IAAI,CAAChB,MAAMiB,IAAI,CAACC,QAAQ,CAACP;QAC5CR,YAAY,CAACO,OAAO,GAAGP,YAAY,CAACO,OAAO,IAAI;QAC/C,MAAMS,eAA8B5B,KAAKD,GAAG,CAAC8B,CAAAA;YAC3C,MAAMC,QAAQlB,YAAY,CAACO,OAAO;YAClC,OAAO;gBACLhB,UAAU,CAAC,EAAE4B,sBAAW,CAACC,WAAW,CAAC,EAAEb,OAAO,CAAC,EAAEW,MAAM,CAAC;gBACxDzB,IAAI,CAAC,KAAK,EAAEkB,OAAO,CAAC,EAAEJ,OAAO,CAAC,EAAEW,MAAM,CAAC;gBACvC7B,YAAY,CAAC,EAAEgC,gBAAK,CAACC,IAAI,CAAC,CAAC,EAAEf,OAAO,CAAC;gBACrCb,OAAOuB,IAAIM,KAAK,IAAI;gBACpB5B,KAAKsB,IAAIM,KAAK,GAAGN,IAAIM,KAAK,GAAGN,GAAG,CAAC,EAAE,CAAChB,MAAM,GAAGgB,GAAG,CAAC,EAAE,CAAChB,MAAM;YAC5D;QACF;QACA,OAAOK,IAAIkB,MAAM,CAACR;IACpB,GAAGd;AACP;AAEA,MAAMuB,cAAc,CAClB5B,OACAC,UAAgC,CAAC,CAAC;IAElC,MAAM,EAAE4B,aAAa,IAAM,EAAE,EAAE,GAAG5B;IAClC,OAAOc,MAAMC,IAAI,CAAChB,MAAMiB,IAAI,CAACC,QAAQ,CAAC,QAAQ5B,GAAG,CAACwC,CAAAA,QAAU,CAAA;YAC1DC,aAAa;YACblC,OAAOiC,MAAMJ,KAAK,IAAI;YACtB5B,KAAKgC,MAAMJ,KAAK,IAAI;YACpBA,OAAOI,MAAMJ,KAAK;YAClB9B,IAAIiC;QACN,CAAA;AACF;AAEO,MAAM3C,iBAAiB,CAC5Bc,OACAgC,kBACA/B,UAAgC,CAAC,CAAC;IAElC,MAAMgC,UAAU,EAAE;IAClB,MAAM,EAAEC,cAAc,CAAC,CAAC,EAAE,GAAGjC;IAC7B,IAAIiC,YAAYC,gBAAgB,IAAIpB,MAAMqB,OAAO,CAACF,YAAYC,gBAAgB,GAAG;QAC/E,MAAME,MAAML,iBAAiBM,QAAQ,CAAChC,MAAM,CAACiC,CAAAA;gBAEvCL;mBADJnB,MAAMqB,OAAO,CAACF,YAAYC,gBAAgB,KACtCD,gCAAAA,YAAYC,gBAAgB,cAA5BD,oDAAAA,8BAA8BM,QAAQ,CAACD,EAAE5C,GAAG,IAC5C;;QAENsC,QAAQQ,IAAI,IAAItD,gBAAgBkD,KAAKrC;IACvC,OAAO,IAAIkC,YAAYC,gBAAgB,EAAE;QACvCF,QAAQQ,IAAI,IAAItD,gBAAgB6C,iBAAiBM,QAAQ,EAAEtC;IAC7D;IACAiC,QAAQQ,IAAI,IAAI1C,QAAQC,OAAOC;IAC/B,IAAIiC,YAAYQ,cAAc,EAAE;QAC9BT,QAAQQ,IAAI,IAAIb,YAAY5B,OAAOC;IACrC;IACA,OAAO;QACLgB,MAAMjB,MAAMiB,IAAI;QAChBgB,SAASA,QAAQU,IAAI,CAAC,CAACC,OAAOC,SAAWD,MAAM/C,KAAK,GAAGgD,OAAOhD,KAAK;IACrE;AACF"}