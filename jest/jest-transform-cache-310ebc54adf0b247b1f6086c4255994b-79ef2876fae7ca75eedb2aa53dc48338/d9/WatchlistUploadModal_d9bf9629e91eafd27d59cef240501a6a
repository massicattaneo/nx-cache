5689ee0f900b41f4b76d92a330042530
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "WatchlistUploadModal", {
    enumerable: true,
    get: function() {
        return WatchlistUploadModal;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _customerio = require("@rp/react/common/customer-io");
const _providers = require("@rp/react/web/common/providers");
const _core = require("@rp/react/web/mui/core");
const _WatchlistUploadModalContainer = require("./WatchlistUploadModalContainer");
const WatchlistUploadModal = ({ onAdd, open, setOpen, watchlist, buttonRef, isUploading, onDropFiles, uploadedData, error })=>{
    const { enqueueSuccess } = (0, _providers.useSnackbar)();
    if (!open) return null;
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_WatchlistUploadModalContainer.WatchlistUploadModalContainer, {
        onSubmit: async (entities, stats)=>{
            const ids = entities.map((entity)=>{
                var _entity_key;
                return (_entity_key = entity === null || entity === void 0 ? void 0 : entity.key) !== null && _entity_key !== void 0 ? _entity_key : "";
            });
            setOpen(false);
            const updatedWatchlist = await onAdd(entities);
            if (ids.length > 0) {
                enqueueSuccess(/*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                    children: [
                        ids.length,
                        " ",
                        ids.length === 1 ? "entity was" : "entities were",
                        " added to",
                        " ",
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                            component: "span",
                            fontWeight: 700,
                            children: watchlist.name
                        }),
                        "."
                    ]
                }));
            }
            if (!uploadedData) return;
            if (!updatedWatchlist) return;
            _customerio.watchlistCustomerIo.uploadModal.sendSubmit({
                watchlistId: updatedWatchlist.id,
                previousItems: watchlist.items.length,
                submitted: uploadedData.submitted,
                conflicts: uploadedData.submitted - uploadedData.matched,
                conflictsUnresolved: stats.conflicts.unresolved,
                conflictsResolved: stats.conflicts.resolved,
                conflictsDeleted: stats.conflicts.deleted,
                matched: uploadedData.matched,
                matchedUnmodified: stats.matched.unmodified,
                matchedModified: stats.matched.modified,
                matchedDeleted: stats.matched.deleted,
                addedItems: ids.length
            });
            _customerio.watchlistCustomerIo.uploadModal.reset();
        },
        watchlist: watchlist,
        error: error,
        onBrowse: ()=>{
            var _buttonRef_current;
            (_buttonRef_current = buttonRef.current) === null || _buttonRef_current === void 0 ? void 0 : _buttonRef_current.open().then(()=>{
                _customerio.watchlistCustomerIo.uploadModal.setUploadMethod("browseFromModal");
            });
        },
        isUploading: isUploading,
        open: open,
        onClose: ()=>{
            _customerio.watchlistCustomerIo.uploadModal.sendCancel({
                submitted: uploadedData ? uploadedData.submitted : undefined,
                conflicts: uploadedData ? uploadedData.submitted - uploadedData.matched : undefined,
                matched: uploadedData ? uploadedData.matched : undefined,
                previousItems: watchlist.items.length,
                watchlistId: watchlist.id
            });
            _customerio.watchlistCustomerIo.uploadModal.reset();
            setOpen(false);
        },
        onDropFiles: onDropFiles,
        data: uploadedData,
        onFilesRejected: ({ error })=>{
            _customerio.watchlistCustomerIo.uploadModal.setUploadMethod("dropOnModal");
            _customerio.watchlistCustomerIo.uploadModal.sendError(watchlist.id, error);
        }
    });
};

//# sourceMappingURL=data:application/json;base64,