be670e8fa9d2c5a577061980aadbddf8
'use strict';
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
var getHTTPStatusCode = require('../http/getHTTPStatusCode.js');
var codes = require('../rpc/codes.js');
/**
 * @internal
 */ function getErrorShape(opts) {
    const { path, error, config } = opts;
    const { code } = opts.error;
    const shape = {
        message: error.message,
        code: codes.TRPC_ERROR_CODES_BY_KEY[code],
        data: {
            code,
            httpStatus: getHTTPStatusCode.getHTTPStatusCodeFromError(error)
        }
    };
    if (config.isDev && typeof opts.error.stack === 'string') {
        shape.data.stack = opts.error.stack;
    }
    if (typeof path === 'string') {
        shape.data.path = path;
    }
    return config.errorFormatter(_object_spread_props(_object_spread({}, opts), {
        shape
    }));
}
exports.getErrorShape = getErrorShape;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9AdHJwYy9zZXJ2ZXIvZGlzdC91bnN0YWJsZS1jb3JlLWRvLW5vdC1pbXBvcnQvZXJyb3IvZ2V0RXJyb3JTaGFwZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBnZXRIVFRQU3RhdHVzQ29kZSA9IHJlcXVpcmUoJy4uL2h0dHAvZ2V0SFRUUFN0YXR1c0NvZGUuanMnKTtcbnZhciBjb2RlcyA9IHJlcXVpcmUoJy4uL3JwYy9jb2Rlcy5qcycpO1xuXG4vKipcbiAqIEBpbnRlcm5hbFxuICovIGZ1bmN0aW9uIGdldEVycm9yU2hhcGUob3B0cykge1xuICAgIGNvbnN0IHsgcGF0aCAsIGVycm9yICwgY29uZmlnICB9ID0gb3B0cztcbiAgICBjb25zdCB7IGNvZGUgIH0gPSBvcHRzLmVycm9yO1xuICAgIGNvbnN0IHNoYXBlID0ge1xuICAgICAgICBtZXNzYWdlOiBlcnJvci5tZXNzYWdlLFxuICAgICAgICBjb2RlOiBjb2Rlcy5UUlBDX0VSUk9SX0NPREVTX0JZX0tFWVtjb2RlXSxcbiAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgY29kZSxcbiAgICAgICAgICAgIGh0dHBTdGF0dXM6IGdldEhUVFBTdGF0dXNDb2RlLmdldEhUVFBTdGF0dXNDb2RlRnJvbUVycm9yKGVycm9yKVxuICAgICAgICB9XG4gICAgfTtcbiAgICBpZiAoY29uZmlnLmlzRGV2ICYmIHR5cGVvZiBvcHRzLmVycm9yLnN0YWNrID09PSAnc3RyaW5nJykge1xuICAgICAgICBzaGFwZS5kYXRhLnN0YWNrID0gb3B0cy5lcnJvci5zdGFjaztcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBwYXRoID09PSAnc3RyaW5nJykge1xuICAgICAgICBzaGFwZS5kYXRhLnBhdGggPSBwYXRoO1xuICAgIH1cbiAgICByZXR1cm4gY29uZmlnLmVycm9yRm9ybWF0dGVyKHtcbiAgICAgICAgLi4ub3B0cyxcbiAgICAgICAgc2hhcGVcbiAgICB9KTtcbn1cblxuZXhwb3J0cy5nZXRFcnJvclNoYXBlID0gZ2V0RXJyb3JTaGFwZTtcbiJdLCJuYW1lcyI6WyJnZXRIVFRQU3RhdHVzQ29kZSIsInJlcXVpcmUiLCJjb2RlcyIsImdldEVycm9yU2hhcGUiLCJvcHRzIiwicGF0aCIsImVycm9yIiwiY29uZmlnIiwiY29kZSIsInNoYXBlIiwibWVzc2FnZSIsIlRSUENfRVJST1JfQ09ERVNfQllfS0VZIiwiZGF0YSIsImh0dHBTdGF0dXMiLCJnZXRIVFRQU3RhdHVzQ29kZUZyb21FcnJvciIsImlzRGV2Iiwic3RhY2siLCJlcnJvckZvcm1hdHRlciIsImV4cG9ydHMiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQSxJQUFJQSxvQkFBb0JDLFFBQVE7QUFDaEMsSUFBSUMsUUFBUUQsUUFBUTtBQUVwQjs7Q0FFQyxHQUFHLFNBQVNFLGNBQWNDLElBQUk7SUFDM0IsTUFBTSxFQUFFQyxJQUFJLEVBQUdDLEtBQUssRUFBR0MsTUFBTSxFQUFHLEdBQUdIO0lBQ25DLE1BQU0sRUFBRUksSUFBSSxFQUFHLEdBQUdKLEtBQUtFLEtBQUs7SUFDNUIsTUFBTUcsUUFBUTtRQUNWQyxTQUFTSixNQUFNSSxPQUFPO1FBQ3RCRixNQUFNTixNQUFNUyx1QkFBdUIsQ0FBQ0gsS0FBSztRQUN6Q0ksTUFBTTtZQUNGSjtZQUNBSyxZQUFZYixrQkFBa0JjLDBCQUEwQixDQUFDUjtRQUM3RDtJQUNKO0lBQ0EsSUFBSUMsT0FBT1EsS0FBSyxJQUFJLE9BQU9YLEtBQUtFLEtBQUssQ0FBQ1UsS0FBSyxLQUFLLFVBQVU7UUFDdERQLE1BQU1HLElBQUksQ0FBQ0ksS0FBSyxHQUFHWixLQUFLRSxLQUFLLENBQUNVLEtBQUs7SUFDdkM7SUFDQSxJQUFJLE9BQU9YLFNBQVMsVUFBVTtRQUMxQkksTUFBTUcsSUFBSSxDQUFDUCxJQUFJLEdBQUdBO0lBQ3RCO0lBQ0EsT0FBT0UsT0FBT1UsY0FBYyxDQUFDLHdDQUN0QmI7UUFDSEs7O0FBRVI7QUFFQVMsUUFBUWYsYUFBYSxHQUFHQSJ9