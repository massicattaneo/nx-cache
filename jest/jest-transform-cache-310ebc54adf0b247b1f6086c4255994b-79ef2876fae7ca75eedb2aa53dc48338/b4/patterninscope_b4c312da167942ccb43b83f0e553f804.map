{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js"],"sourcesContent":["/**\n * @typedef {import('../types.js').ConstructName} ConstructName\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  if (!list || list.length === 0) {\n    return none\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n"],"names":["patternInScope","stack","pattern","listInScope","inConstruct","notInConstruct","list","none","length","index","includes"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA;;;CAGC,GAED;;;;CAIC;;;;+BACeA;;;eAAAA;;;AAAT,SAASA,eAAeC,KAAK,EAAEC,OAAO;IAC3C,OACEC,YAAYF,OAAOC,QAAQE,WAAW,EAAE,SACxC,CAACD,YAAYF,OAAOC,QAAQG,cAAc,EAAE;AAEhD;AAEA;;;;;CAKC,GACD,SAASF,YAAYF,KAAK,EAAEK,IAAI,EAAEC,IAAI;IACpC,IAAI,OAAOD,SAAS,UAAU;QAC5BA,OAAO;YAACA;SAAK;IACf;IAEA,IAAI,CAACA,QAAQA,KAAKE,MAAM,KAAK,GAAG;QAC9B,OAAOD;IACT;IAEA,IAAIE,QAAQ,CAAC;IAEb,MAAO,EAAEA,QAAQH,KAAKE,MAAM,CAAE;QAC5B,IAAIP,MAAMS,QAAQ,CAACJ,IAAI,CAACG,MAAM,GAAG;YAC/B,OAAO;QACT;IACF;IAEA,OAAO;AACT"}