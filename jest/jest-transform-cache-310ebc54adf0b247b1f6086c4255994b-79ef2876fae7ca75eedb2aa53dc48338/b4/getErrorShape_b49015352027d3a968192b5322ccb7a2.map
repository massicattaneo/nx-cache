{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/node_modules/@trpc/server/dist/unstable-core-do-not-import/error/getErrorShape.js"],"sourcesContent":["'use strict';\n\nvar getHTTPStatusCode = require('../http/getHTTPStatusCode.js');\nvar codes = require('../rpc/codes.js');\n\n/**\n * @internal\n */ function getErrorShape(opts) {\n    const { path , error , config  } = opts;\n    const { code  } = opts.error;\n    const shape = {\n        message: error.message,\n        code: codes.TRPC_ERROR_CODES_BY_KEY[code],\n        data: {\n            code,\n            httpStatus: getHTTPStatusCode.getHTTPStatusCodeFromError(error)\n        }\n    };\n    if (config.isDev && typeof opts.error.stack === 'string') {\n        shape.data.stack = opts.error.stack;\n    }\n    if (typeof path === 'string') {\n        shape.data.path = path;\n    }\n    return config.errorFormatter({\n        ...opts,\n        shape\n    });\n}\n\nexports.getErrorShape = getErrorShape;\n"],"names":["getHTTPStatusCode","require","codes","getErrorShape","opts","path","error","config","code","shape","message","TRPC_ERROR_CODES_BY_KEY","data","httpStatus","getHTTPStatusCodeFromError","isDev","stack","errorFormatter","exports"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAIA,oBAAoBC,QAAQ;AAChC,IAAIC,QAAQD,QAAQ;AAEpB;;CAEC,GAAG,SAASE,cAAcC,IAAI;IAC3B,MAAM,EAAEC,IAAI,EAAGC,KAAK,EAAGC,MAAM,EAAG,GAAGH;IACnC,MAAM,EAAEI,IAAI,EAAG,GAAGJ,KAAKE,KAAK;IAC5B,MAAMG,QAAQ;QACVC,SAASJ,MAAMI,OAAO;QACtBF,MAAMN,MAAMS,uBAAuB,CAACH,KAAK;QACzCI,MAAM;YACFJ;YACAK,YAAYb,kBAAkBc,0BAA0B,CAACR;QAC7D;IACJ;IACA,IAAIC,OAAOQ,KAAK,IAAI,OAAOX,KAAKE,KAAK,CAACU,KAAK,KAAK,UAAU;QACtDP,MAAMG,IAAI,CAACI,KAAK,GAAGZ,KAAKE,KAAK,CAACU,KAAK;IACvC;IACA,IAAI,OAAOX,SAAS,UAAU;QAC1BI,MAAMG,IAAI,CAACP,IAAI,GAAGA;IACtB;IACA,OAAOE,OAAOU,cAAc,CAAC,wCACtBb;QACHK;;AAER;AAEAS,QAAQf,aAAa,GAAGA"}