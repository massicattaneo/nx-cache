{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/node_modules/mdast-util-to-hast/lib/handlers/text.js"],"sourcesContent":["/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastElement | HastText}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n"],"names":["text","state","node","result","type","value","trimLines","String","patch","applyData"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA;;;;;CAKC;;;;+BAceA;;;eAAAA;;;2BAZQ;AAYjB,SAASA,KAAKC,KAAK,EAAEC,IAAI;IAC9B,qBAAqB,GACrB,MAAMC,SAAS;QAACC,MAAM;QAAQC,OAAOC,IAAAA,oBAAS,EAACC,OAAOL,KAAKG,KAAK;IAAE;IAClEJ,MAAMO,KAAK,CAACN,MAAMC;IAClB,OAAOF,MAAMQ,SAAS,CAACP,MAAMC;AAC/B"}