d470a25b69eddd1e23d5c10ec1c756d2
'use strict';
// zod / typeschema
function getParseFn(procedureParser) {
    const parser = procedureParser;
    if (typeof parser === 'function') {
        // ParserCustomValidatorEsque
        return parser;
    }
    if (typeof parser.parseAsync === 'function') {
        // ParserZodEsque
        return parser.parseAsync.bind(parser);
    }
    if (typeof parser.parse === 'function') {
        // ParserZodEsque
        // ParserValibotEsque (<= v0.12.X)
        return parser.parse.bind(parser);
    }
    if (typeof parser.validateSync === 'function') {
        // ParserYupEsque
        return parser.validateSync.bind(parser);
    }
    if (typeof parser.create === 'function') {
        // ParserSuperstructEsque
        return parser.create.bind(parser);
    }
    if (typeof parser.assert === 'function') {
        // ParserScaleEsque
        return (value)=>{
            parser.assert(value);
            return value;
        };
    }
    throw new Error('Could not find a validator fn');
}
exports.getParseFn = getParseFn;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9AdHJwYy9zZXJ2ZXIvZGlzdC91bnN0YWJsZS1jb3JlLWRvLW5vdC1pbXBvcnQvcGFyc2VyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLy8gem9kIC8gdHlwZXNjaGVtYVxuZnVuY3Rpb24gZ2V0UGFyc2VGbihwcm9jZWR1cmVQYXJzZXIpIHtcbiAgICBjb25zdCBwYXJzZXIgPSBwcm9jZWR1cmVQYXJzZXI7XG4gICAgaWYgKHR5cGVvZiBwYXJzZXIgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgLy8gUGFyc2VyQ3VzdG9tVmFsaWRhdG9yRXNxdWVcbiAgICAgICAgcmV0dXJuIHBhcnNlcjtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBwYXJzZXIucGFyc2VBc3luYyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAvLyBQYXJzZXJab2RFc3F1ZVxuICAgICAgICByZXR1cm4gcGFyc2VyLnBhcnNlQXN5bmMuYmluZChwYXJzZXIpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHBhcnNlci5wYXJzZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAvLyBQYXJzZXJab2RFc3F1ZVxuICAgICAgICAvLyBQYXJzZXJWYWxpYm90RXNxdWUgKDw9IHYwLjEyLlgpXG4gICAgICAgIHJldHVybiBwYXJzZXIucGFyc2UuYmluZChwYXJzZXIpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHBhcnNlci52YWxpZGF0ZVN5bmMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgLy8gUGFyc2VyWXVwRXNxdWVcbiAgICAgICAgcmV0dXJuIHBhcnNlci52YWxpZGF0ZVN5bmMuYmluZChwYXJzZXIpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHBhcnNlci5jcmVhdGUgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgLy8gUGFyc2VyU3VwZXJzdHJ1Y3RFc3F1ZVxuICAgICAgICByZXR1cm4gcGFyc2VyLmNyZWF0ZS5iaW5kKHBhcnNlcik7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgcGFyc2VyLmFzc2VydCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAvLyBQYXJzZXJTY2FsZUVzcXVlXG4gICAgICAgIHJldHVybiAodmFsdWUpPT57XG4gICAgICAgICAgICBwYXJzZXIuYXNzZXJ0KHZhbHVlKTtcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgfTtcbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKCdDb3VsZCBub3QgZmluZCBhIHZhbGlkYXRvciBmbicpO1xufVxuXG5leHBvcnRzLmdldFBhcnNlRm4gPSBnZXRQYXJzZUZuO1xuIl0sIm5hbWVzIjpbImdldFBhcnNlRm4iLCJwcm9jZWR1cmVQYXJzZXIiLCJwYXJzZXIiLCJwYXJzZUFzeW5jIiwiYmluZCIsInBhcnNlIiwidmFsaWRhdGVTeW5jIiwiY3JlYXRlIiwiYXNzZXJ0IiwidmFsdWUiLCJFcnJvciIsImV4cG9ydHMiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQSxtQkFBbUI7QUFDbkIsU0FBU0EsV0FBV0MsZUFBZTtJQUMvQixNQUFNQyxTQUFTRDtJQUNmLElBQUksT0FBT0MsV0FBVyxZQUFZO1FBQzlCLDZCQUE2QjtRQUM3QixPQUFPQTtJQUNYO0lBQ0EsSUFBSSxPQUFPQSxPQUFPQyxVQUFVLEtBQUssWUFBWTtRQUN6QyxpQkFBaUI7UUFDakIsT0FBT0QsT0FBT0MsVUFBVSxDQUFDQyxJQUFJLENBQUNGO0lBQ2xDO0lBQ0EsSUFBSSxPQUFPQSxPQUFPRyxLQUFLLEtBQUssWUFBWTtRQUNwQyxpQkFBaUI7UUFDakIsa0NBQWtDO1FBQ2xDLE9BQU9ILE9BQU9HLEtBQUssQ0FBQ0QsSUFBSSxDQUFDRjtJQUM3QjtJQUNBLElBQUksT0FBT0EsT0FBT0ksWUFBWSxLQUFLLFlBQVk7UUFDM0MsaUJBQWlCO1FBQ2pCLE9BQU9KLE9BQU9JLFlBQVksQ0FBQ0YsSUFBSSxDQUFDRjtJQUNwQztJQUNBLElBQUksT0FBT0EsT0FBT0ssTUFBTSxLQUFLLFlBQVk7UUFDckMseUJBQXlCO1FBQ3pCLE9BQU9MLE9BQU9LLE1BQU0sQ0FBQ0gsSUFBSSxDQUFDRjtJQUM5QjtJQUNBLElBQUksT0FBT0EsT0FBT00sTUFBTSxLQUFLLFlBQVk7UUFDckMsbUJBQW1CO1FBQ25CLE9BQU8sQ0FBQ0M7WUFDSlAsT0FBT00sTUFBTSxDQUFDQztZQUNkLE9BQU9BO1FBQ1g7SUFDSjtJQUNBLE1BQU0sSUFBSUMsTUFBTTtBQUNwQjtBQUVBQyxRQUFRWCxVQUFVLEdBQUdBIn0=