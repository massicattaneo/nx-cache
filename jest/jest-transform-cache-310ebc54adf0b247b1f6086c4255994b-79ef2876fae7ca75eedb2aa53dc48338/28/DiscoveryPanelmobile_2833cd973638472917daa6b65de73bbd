66586d7e1f454846710b84c00824c8b3
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "DiscoveryPanelMobile", {
    enumerable: true,
    get: function() {
        return DiscoveryPanelMobile;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _react1 = require("swiper/react");
const _material = require("@mui/material");
const _settings = require("@rp/common/settings");
const _compositecomponents = require("@rp/react/web/common/composite-components");
const _discoverysidebar = require("@rp/react/web/common/discovery-sidebar");
const _DiscoveryPanelstyles = require("./DiscoveryPanel.styles");
const _DiscoveryPanelWidget = require("./DiscoveryPanelWidget");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const DiscoveryPanelMobile = ({ onAddToWatchlist, isFeedbackMode })=>{
    const ref = (0, _react.useRef)(null);
    const [mentionsItem, setMentionsItem] = (0, _react.useState)({});
    const setMentionItem = (0, _react.useCallback)((category, value)=>{
        setMentionsItem((prev)=>{
            return _object_spread_props(_object_spread({}, prev), {
                [category]: value
            });
        });
    }, []);
    const { categories, isError, isLoading, widgetActions, labels } = (0, _discoverysidebar.useDiscoveryPanelWidgetCategories)();
    const groups = isLoading ? labels : Object.keys(categories);
    const scrollToWidgetTop = (0, _react.useCallback)(()=>{
        var _ref_current;
        const { top } = ((_ref_current = ref.current) === null || _ref_current === void 0 ? void 0 : _ref_current.getBoundingClientRect()) || {
            top: 0
        };
        if (top < _settings.MOBILE_SCROLL_THRESHOLD) {
            window.scroll({
                top: top + window.scrollY - _settings.MOBILE_SCROLL_THRESHOLD,
                behavior: "smooth"
            });
        }
    }, [
        ref
    ]);
    if (isError) {
        return null;
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
        ref: ref,
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_DiscoveryPanelstyles.DiscoveryPanelContainerMobile, {
            children: groups.length !== 0 && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Typography, {
                        children: "Discover"
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_react1.Swiper, {
                        speed: 500,
                        spaceBetween: 8,
                        centeredSlides: true,
                        slidesPerView: 1.1,
                        onSlideChangeTransitionStart: ()=>{
                            groups.forEach((cat)=>{
                                const category = categories[cat];
                                widgetActions.reset(category.id);
                            });
                            scrollToWidgetTop();
                            setMentionsItem({});
                        },
                        children: isLoading ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_react1.SwiperSlide, {
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_discoverysidebar.LoadingFilter, {})
                        }, "loading") : /*#__PURE__*/ (0, _jsxruntime.jsx)(_jsxruntime.Fragment, {
                            children: groups.map((category)=>{
                                return /*#__PURE__*/ (0, _jsxruntime.jsx)(_react1.SwiperSlide, {
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.AutoAnimateHeight, {
                                        minHeight: 252,
                                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_DiscoveryPanelWidget.DiscoveryPanelWidget, {
                                            isFeedbackMode: isFeedbackMode,
                                            scrollToWidgetTop: scrollToWidgetTop,
                                            widgetCategory: categories[category],
                                            widgetActions: widgetActions,
                                            mentionsItem: mentionsItem[category],
                                            setMentionItem: setMentionItem,
                                            onAddToWatchlist: onAddToWatchlist
                                        })
                                    })
                                }, category);
                            })
                        })
                    })
                ]
            })
        })
    });
};

//# sourceMappingURL=data:application/json;base64,