{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/providers/src/FeedbackContext/SnapshotButton.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport { RPTooltip } from \"@rp/react/web/common/base-components\"\nimport { IconButton } from \"@rp/react/web/mui/core\"\nimport { CameraAlt } from \"@rp/react/web/mui/icons\"\nimport { useSnackbar } from \"../Snackbar\"\nimport { useFeedbackContext } from \"./FeedbackContext\"\nimport { SnapshotProps, useSnapshot } from \"./useSnapshot\"\n\nexport const SnapshotButton = ({\n  snapshotData,\n  isSaved,\n  isLoading,\n  notEnoughResults,\n}: SnapshotProps & { isSaved: boolean; isLoading: boolean; notEnoughResults: boolean }) => {\n  const { isFeedbackMode } = useFeedbackContext()\n  const [disableButton, setDisableButton] = useState(false)\n  const { mutateAsync: sendSnapshot } = useSnapshot()\n  const { enqueueInfo } = useSnackbar()\n\n  // Open feedback drawer\n  const handleSnapshot = () => {\n    if (!isSaved) {\n      enqueueInfo(\"To create a snapshot, save your search first.\")\n      return\n    }\n\n    setDisableButton(true)\n    sendSnapshot({ snapshotData })\n  }\n\n  useEffect(() => {\n    if (disableButton) {\n      setTimeout(() => setDisableButton(false), 1000 * 10)\n    }\n  }, [disableButton])\n\n  if (!isFeedbackMode) return null\n\n  const disabled = disableButton || isLoading || notEnoughResults\n\n  const disabledText = \"Taking a snapshot is currently not available\"\n  const notEnoughResultsText = \"Not enough results for a snapshot\"\n  const snapshotText = \"Take a snapshot\"\n\n  const tooltipText = () => {\n    if (disableButton || isLoading) return disabledText\n    if (notEnoughResults) return notEnoughResultsText\n    return snapshotText\n  }\n\n  return (\n    <RPTooltip title={tooltipText()} placement=\"bottom\">\n      <div>\n        <IconButton\n          role=\"feedback-button\"\n          onClick={handleSnapshot}\n          size=\"large\"\n          disabled={disabled}\n        >\n          <CameraAlt />\n        </IconButton>\n      </div>\n    </RPTooltip>\n  )\n}\n"],"names":["SnapshotButton","snapshotData","isSaved","isLoading","notEnoughResults","isFeedbackMode","useFeedbackContext","disableButton","setDisableButton","useState","mutateAsync","sendSnapshot","useSnapshot","enqueueInfo","useSnackbar","handleSnapshot","useEffect","setTimeout","disabled","disabledText","notEnoughResultsText","snapshotText","tooltipText","RPTooltip","title","placement","div","IconButton","role","onClick","size","CameraAlt"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAQaA;;;eAAAA;;;;uBARuB;gCACV;sBACC;uBACD;0BACE;iCACO;6BACQ;AAEpC,MAAMA,iBAAiB,CAAC,EAC7BC,YAAY,EACZC,OAAO,EACPC,SAAS,EACTC,gBAAgB,EACoE;IACpF,MAAM,EAAEC,cAAc,EAAE,GAAGC,IAAAA,mCAAkB;IAC7C,MAAM,CAACC,eAAeC,iBAAiB,GAAGC,IAAAA,eAAQ,EAAC;IACnD,MAAM,EAAEC,aAAaC,YAAY,EAAE,GAAGC,IAAAA,wBAAW;IACjD,MAAM,EAAEC,WAAW,EAAE,GAAGC,IAAAA,qBAAW;IAEnC,uBAAuB;IACvB,MAAMC,iBAAiB;QACrB,IAAI,CAACb,SAAS;YACZW,YAAY;YACZ;QACF;QAEAL,iBAAiB;QACjBG,aAAa;YAAEV;QAAa;IAC9B;IAEAe,IAAAA,gBAAS,EAAC;QACR,IAAIT,eAAe;YACjBU,WAAW,IAAMT,iBAAiB,QAAQ,OAAO;QACnD;IACF,GAAG;QAACD;KAAc;IAElB,IAAI,CAACF,gBAAgB,OAAO;IAE5B,MAAMa,WAAWX,iBAAiBJ,aAAaC;IAE/C,MAAMe,eAAe;IACrB,MAAMC,uBAAuB;IAC7B,MAAMC,eAAe;IAErB,MAAMC,cAAc;QAClB,IAAIf,iBAAiBJ,WAAW,OAAOgB;QACvC,IAAIf,kBAAkB,OAAOgB;QAC7B,OAAOC;IACT;IAEA,qBACE,qBAACE,yBAAS;QAACC,OAAOF;QAAeG,WAAU;kBACzC,cAAA,qBAACC;sBACC,cAAA,qBAACC,gBAAU;gBACTC,MAAK;gBACLC,SAASd;gBACTe,MAAK;gBACLZ,UAAUA;0BAEV,cAAA,qBAACa,gBAAS;;;;AAKpB"}