{"version":3,"sources":["../../../src/actions/dragDrop/hover.ts"],"sourcesContent":["import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tAction,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tHoverOptions,\n\tHoverPayload,\n\tIdentifier,\n} from '../../interfaces.js'\nimport { matchesType } from '../../utils/matchesType.js'\nimport { HOVER } from './types.js'\n\nexport function createHover(manager: DragDropManager) {\n\treturn function hover(\n\t\ttargetIdsArg: string[],\n\t\t{ clientOffset }: HoverOptions = {},\n\t): Action<HoverPayload> {\n\t\tverifyTargetIdsIsArray(targetIdsArg)\n\t\tconst targetIds = targetIdsArg.slice(0)\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\t\tconst draggedItemType = monitor.getItemType()\n\t\tremoveNonMatchingTargetIds(targetIds, registry, draggedItemType)\n\t\tcheckInvariants(targetIds, monitor, registry)\n\t\thoverAllTargets(targetIds, monitor, registry)\n\n\t\treturn {\n\t\t\ttype: HOVER,\n\t\t\tpayload: {\n\t\t\t\ttargetIds,\n\t\t\t\tclientOffset: clientOffset || null,\n\t\t\t},\n\t\t}\n\t}\n}\n\nfunction verifyTargetIdsIsArray(targetIdsArg: string[]) {\n\tinvariant(Array.isArray(targetIdsArg), 'Expected targetIds to be an array.')\n}\n\nfunction checkInvariants(\n\ttargetIds: string[],\n\tmonitor: DragDropMonitor,\n\tregistry: HandlerRegistry,\n) {\n\tinvariant(monitor.isDragging(), 'Cannot call hover while not dragging.')\n\tinvariant(!monitor.didDrop(), 'Cannot call hover after drop.')\n\tfor (let i = 0; i < targetIds.length; i++) {\n\t\tconst targetId = targetIds[i] as string\n\t\tinvariant(\n\t\t\ttargetIds.lastIndexOf(targetId) === i,\n\t\t\t'Expected targetIds to be unique in the passed array.',\n\t\t)\n\n\t\tconst target = registry.getTarget(targetId)\n\t\tinvariant(target, 'Expected targetIds to be registered.')\n\t}\n}\n\nfunction removeNonMatchingTargetIds(\n\ttargetIds: string[],\n\tregistry: HandlerRegistry,\n\tdraggedItemType: Identifier | null,\n) {\n\t// Remove those targetIds that don't match the targetType.  This\n\t// fixes shallow isOver which would only be non-shallow because of\n\t// non-matching targets.\n\tfor (let i = targetIds.length - 1; i >= 0; i--) {\n\t\tconst targetId = targetIds[i] as string\n\t\tconst targetType = registry.getTargetType(targetId)\n\t\tif (!matchesType(targetType, draggedItemType)) {\n\t\t\ttargetIds.splice(i, 1)\n\t\t}\n\t}\n}\n\nfunction hoverAllTargets(\n\ttargetIds: string[],\n\tmonitor: DragDropMonitor,\n\tregistry: HandlerRegistry,\n) {\n\t// Finally call hover on all matching targets.\n\ttargetIds.forEach(function (targetId) {\n\t\tconst target = registry.getTarget(targetId)\n\t\ttarget.hover(monitor, targetId)\n\t})\n}\n"],"names":["createHover","manager","hover","targetIdsArg","clientOffset","verifyTargetIdsIsArray","targetIds","slice","monitor","getMonitor","registry","getRegistry","draggedItemType","getItemType","removeNonMatchingTargetIds","checkInvariants","hoverAllTargets","type","HOVER","payload","invariant","Array","isArray","isDragging","didDrop","i","length","targetId","lastIndexOf","target","getTarget","targetType","getTargetType","matchesType","splice","forEach"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAcgBA;;;eAAAA;;;2BAdU;6BAWE;uBACN;AAEf,SAASA,YAAYC,OAAwB;IACnD,OAAO,SAASC,MACfC,YAAsB,EACtB,EAAEC,YAAY,EAAgB,GAAG,CAAA,CAAE;QAEnCC,uBAAuBF;QACvB,MAAMG,YAAYH,aAAaI,KAAK,CAAC;QACrC,MAAMC,UAAUP,QAAQQ,UAAU;QAClC,MAAMC,WAAWT,QAAQU,WAAW;QACpC,MAAMC,kBAAkBJ,QAAQK,WAAW;QAC3CC,2BAA2BR,WAAWI,UAAUE;QAChDG,gBAAgBT,WAAWE,SAASE;QACpCM,gBAAgBV,WAAWE,SAASE;QAEpC,OAAO;YACNO,MAAMC,YAAK;YACXC,SAAS;gBACRb;gBACAF,cAAcA,gBAAgB;;;;;AAMlC,SAASC,uBAAuBF,YAAsB;IACrDiB,IAAAA,oBAAS,EAACC,MAAMC,OAAO,CAACnB,eAAe;;AAGxC,SAASY,gBACRT,SAAmB,EACnBE,OAAwB,EACxBE,QAAyB;IAEzBU,IAAAA,oBAAS,EAACZ,QAAQe,UAAU,IAAI;IAChCH,IAAAA,oBAAS,EAAC,CAACZ,QAAQgB,OAAO,IAAI;IAC9B,IAAK,IAAIC,IAAI,GAAGA,IAAInB,UAAUoB,MAAM,EAAED,IAAK;QAC1C,MAAME,WAAWrB,SAAS,CAACmB,EAAE;QAC7BL,IAAAA,oBAAS,EACRd,UAAUsB,WAAW,CAACD,cAAcF,GACpC;QAGD,MAAMI,SAASnB,SAASoB,SAAS,CAACH;QAClCP,IAAAA,oBAAS,EAACS,QAAQ;;;AAIpB,SAASf,2BACRR,SAAmB,EACnBI,QAAyB,EACzBE,eAAkC;IAElC,gEAAgE;IAChE,kEAAkE;IAClE,wBAAwB;IACxB,IAAK,IAAIa,IAAInB,UAAUoB,MAAM,GAAG,GAAGD,KAAK,GAAGA,IAAK;QAC/C,MAAME,WAAWrB,SAAS,CAACmB,EAAE;QAC7B,MAAMM,aAAarB,SAASsB,aAAa,CAACL;QAC1C,IAAI,CAACM,IAAAA,wBAAW,EAACF,YAAYnB,kBAAkB;YAC9CN,UAAU4B,MAAM,CAACT,GAAG;;;;AAKvB,SAAST,gBACRV,SAAmB,EACnBE,OAAwB,EACxBE,QAAyB;IAEzB,8CAA8C;IAC9CJ,UAAU6B,OAAO,CAAC,SAAUR,QAAQ;QACnC,MAAME,SAASnB,SAASoB,SAAS,CAACH;QAClCE,OAAO3B,KAAK,CAACM,SAASmB"}