a7e7a95b579f062374dee1a3ddb6f375
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "CreateChat", {
    enumerable: true,
    get: function() {
        return CreateChat;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _reactrouterdom = require("react-router-dom");
const _settings = require("@rp/common/settings");
const _assets = require("@rp/react/common/assets");
const _chat = require("@rp/react/common/chat");
const _workflow = require("@rp/react/tanstack-api/workflow");
const _theme = require("@rp/react/theme");
const _compositecomponents = require("@rp/react/web/common/composite-components");
const _hooks = require("@rp/react/web/common/hooks");
const _core = require("@rp/react/web/mui/core");
const _icons = require("@rp/react/web/mui/icons");
const _router = require("@rp/react/web/router");
const _ChatFileContextDisplay = require("../Chat/ChatContext/ChatFileContextDisplay");
const _ChatWatchlistContextDisplay = require("../Chat/ChatContext/ChatWatchlistContextDisplay");
const _UserInput = require("../Chat/UserInput/UserInput");
const _LoadingResponseSkeleton = require("./LoadingResponseSkeleton");
const _MobileArrowForwardButton = require("./MobileArrowForwardButton");
const _MobileRecentChats = require("./MobileRecentChats");
const CreateChat = ({ fileContext, currentInteraction, userInitials, scope, watchlistId })=>{
    const { isMobile } = (0, _hooks.useDeviceInfo)();
    const { data: workflows } = (0, _workflow.useWorkflowList)();
    const navigate = (0, _reactrouterdom.useNavigate)();
    (0, _react.useEffect)(()=>{
        if (currentInteraction !== undefined) {
            window.scroll({
                top: 0
            });
        }
    }, [
        currentInteraction
    ]);
    if (fileContext || currentInteraction) {
        var _currentInteraction_displayedMessage;
        return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
            sx: {
                display: "flex",
                flexDirection: "column",
                justifyContent: isMobile ? "top" : "center",
                mt: 3
            },
            children: [
                (fileContext === null || fileContext === void 0 ? void 0 : fileContext.filesIds) ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_ChatFileContextDisplay.ChatFileContextDisplay, {
                    filesIds: fileContext.filesIds,
                    isChatEmpty: true
                }) : null,
                (fileContext === null || fileContext === void 0 ? void 0 : fileContext.watchlistIds) ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_ChatWatchlistContextDisplay.ChatWatchlistContextDisplay, {
                    watchlistId: fileContext.watchlistIds[0],
                    isChatEmpty: true
                }) : null,
                currentInteraction ? /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                    sx: {
                        width: "100%",
                        maxWidth: 700,
                        mx: "auto",
                        minHeight: "calc(100dvh - 80px)"
                    },
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_UserInput.UserInput, {
                            variant: isMobile ? "mobile" : "desktop",
                            userInitials: userInitials,
                            disableScroll: true,
                            children: (_currentInteraction_displayedMessage = currentInteraction.displayedMessage) !== null && _currentInteraction_displayedMessage !== void 0 ? _currentInteraction_displayedMessage : currentInteraction.userInput
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_LoadingResponseSkeleton.LoadingResponseSkeleton, {})
                    ]
                }) : null
            ]
        });
    }
    const handleLabel = ()=>{
        if (workflows) {
            return "Workflows";
        }
        if (isPromptFilter) {
            return `Prompts for ${_chat.chatDatasets[scope].label}`;
        }
        if (!scope && watchlistId) {
            return "Prompts for Watchlists";
        }
        return "Suggested Prompts";
    };
    const handleRoute = ()=>{
        if (workflows) {
            return _router.CHAT_ROUTE;
        }
        return `${_router.SUGGESTED_PROMPTS_ROUTE}${isPromptFilter ? `?${_settings.SCOPES_QUERY_PARAM}=${scope}` : ""}`;
    };
    const isPromptFilter = scope && _chat.chatDatasets[scope].isPromptFilter;
    const label = handleLabel();
    const promptRoute = handleRoute();
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
        sx: {
            minHeight: "100dvh",
            display: "flex",
            flexDirection: "column",
            justifyContent: "center",
            alignItems: "center",
            position: "relative",
            pb: isMobile ? 20 : 10,
            pt: isMobile ? 4 : 0
        },
        children: [
            isMobile ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_assets.BigdataLogoWhite, {
                width: 160,
                "data-testid": "create-chat-logo"
            }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                sx: {
                    pb: 8
                },
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_assets.BigdataIconBlack, {
                    width: 60,
                    height: 60,
                    "data-testid": "create-chat-logo"
                })
            }),
            isMobile && /*#__PURE__*/ (0, _jsxruntime.jsx)(_MobileArrowForwardButton.MobileArrowForwardButton, {
                label: label,
                to: promptRoute,
                sx: {
                    mt: 4,
                    mb: 1.5
                }
            }),
            !isMobile && /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                sx: {
                    width: "100%"
                },
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                    component: _reactrouterdom.Link,
                    to: promptRoute,
                    sx: {
                        width: "auto",
                        display: "flex",
                        alignItems: "center",
                        gap: 0.5,
                        textDecoration: "none",
                        mb: 1.5,
                        "& p": {
                            color: "text.primary",
                            fontSize: 20,
                            fontWeight: 700
                        },
                        "& svg": {
                            color: "text.primary",
                            fontSize: 16,
                            fontWeight: 700
                        },
                        "&:hover p, &:hover svg": {
                            color: "text.secondary"
                        }
                    },
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                            children: label
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.ArrowForwardIos, {
                            sx: {
                                fontSize: 18
                            }
                        })
                    ]
                })
            }),
            workflows && /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                sx: {
                    width: "100%",
                    backgroundColor: "inherit",
                    ml: isMobile ? 0 : -8
                },
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                    sx: {
                        position: "relative",
                        flexGrow: 1,
                        overflow: "hidden",
                        pr: isMobile ? 0 : 1,
                        width: "100%"
                    },
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.ScrollCarousel, {
                        bgColor: _theme.theme.palette.elevation.dp03,
                        onArrowMouseDown: (event)=>event.preventDefault(),
                        sx: {
                            borderRadius: 5,
                            px: isMobile ? 2 : 4,
                            mb: 4,
                            "& > div": {
                                paddingRight: isMobile ? 4 : 0,
                                gap: 2
                            }
                        },
                        children: workflows === null || workflows === void 0 ? void 0 : workflows.map((workflow)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.FlowCard, {
                                index: 0,
                                isFeatured: false,
                                isMobile: false,
                                title: workflow.flowName,
                                type: workflow.typeLabel,
                                desc: workflow.description,
                                onClick: ()=>navigate(_router.WORKFLOW_ID_ROUTE.replace(":id", workflow.id))
                            }, workflow.id))
                    })
                })
            }),
            isMobile && /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                sx: {
                    width: "100%"
                },
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_MobileRecentChats.MobileRecentChats, {})
            })
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,