{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/development/src/lib/trpc/bigdata-api/procedures/user-data/watchlists-procedures.ts"],"sourcesContent":["import { z } from \"zod\"\nimport { bigdataSchemas } from \"@rp/common/contracts\"\nimport { watchlistSaveImageInputSchema } from \"@rp/common/zod-contracts/watchlists\"\nimport { TRPCError } from \"@trpc/server\"\nimport { generateId, generateWatchlist, userCollaborator, userOwner } from \"../../../../database\"\nimport { bigdataApiProcedure } from \"../../bigdata-api-procedure\"\n\nconst UPLOAD_PATH = \"/files-upload/:id\"\n\nconst watchlistListInputSchema = z.object({\n  owned: z.boolean().optional(),\n  shared: z.enum([\"company\"]).optional(),\n  globalType: z.enum([\"thematic\", \"community\"]).optional(),\n  globalStatus: z.enum([\"private\", \"draft\", \"published\", \"archived\"]).optional(),\n})\n\nexport const userDataWatchlistsProcedures = {\n  id: bigdataApiProcedure\n    .meta({ openapi: { method: \"GET\", path: \"/user-data/watchlists/:id\" } })\n    .input(z.object({ id: z.string() }))\n    .output(bigdataSchemas.st_user_watchlists_WatchlistResponse_Input)\n    .query(async ({ ctx, input }) => {\n      const watchlist = await ctx.db.collection(\"watchlists\").findOne({ id: input.id })\n      if (!watchlist) throw new TRPCError({ code: \"NOT_FOUND\" })\n      return watchlist\n    }),\n  list: bigdataApiProcedure\n    .meta({ openapi: { method: \"GET\", path: \"/user-data/watchlists\" } })\n    .input(watchlistListInputSchema)\n    .output(bigdataSchemas.st_user_watchlists_ListObjectsResponse_Input)\n    .query(async ({ input, ctx }) => {\n      const user_id = input.owned ? userOwner.ownerUserId : userCollaborator.ownerUserId\n      const list = ctx.db.collection(\"watchlists\")\n      if (input.globalType) {\n        return { results: await list.find(item => item.global?.type === input.globalType) }\n      } else if (input.owned) {\n        return { results: await list.find({ user_id }) }\n      } else {\n        return {\n          results: await list.find(item => {\n            if (item.shared.isPublic && item.isFavorite) return true\n            if (item.shared.isPublic) return false\n            return true\n          }),\n        }\n      }\n    }),\n  create: bigdataApiProcedure\n    .meta({ openapi: { method: \"POST\", path: \"/user-data/watchlists\" } })\n    .input(bigdataSchemas.st_user_watchlists_CreateWatchlistParams)\n    .output(bigdataSchemas.st_user_watchlists_WatchlistResponse_Input)\n    .mutation(({ ctx, input }) => {\n      return ctx.db.collection(\"watchlists\").insertOne(generateWatchlist(input))\n    }),\n  delete: bigdataApiProcedure\n    .meta({ openapi: { method: \"DELETE\", path: \"/user-data/watchlists/:id\" } })\n    .input(z.object({ id: z.string() }))\n    .output(z.object({ id: z.string() }))\n    .query(async ({ input, ctx }) => {\n      await ctx.db.collection(\"watchlists\").deleteOne({ id: input.id })\n      return { id: input.id }\n    }),\n  share: bigdataApiProcedure\n    .meta({ openapi: { method: \"POST\", path: \"/user-data/watchlists/:id/share\" } })\n    .input(bigdataSchemas.st_user_watchlists_WatchlistShareRequest.extend({ id: z.string() }))\n    .output(bigdataSchemas.st_user_watchlists_WatchlistResponse_Input)\n    .mutation(async ({ ctx, input }) => {\n      const item = await ctx.db.collection(\"watchlists\").findOne({ id: input.id })\n      if (!item) throw new TRPCError({ code: \"NOT_FOUND\" })\n      ctx.db.collection(\"watchlists\").updateOne(\n        { id: input.id },\n        {\n          shared: {\n            ...item.shared,\n            company: {\n              organizationId: item.shared.company.organizationId,\n              permission: input.company?.permission ?? \"undefined\",\n            },\n            isPublic: input.isPublic ?? false,\n          },\n        },\n      )\n      return item\n    }),\n  patch: bigdataApiProcedure\n    .meta({ openapi: { method: \"PATCH\", path: \"/user-data/watchlists/:id\" } })\n    .input(bigdataSchemas.st_user_watchlists_PatchWatchlistParams.extend({ id: z.string() }))\n    .output(bigdataSchemas.st_user_watchlists_WatchlistResponse_Input)\n    .mutation(async ({ ctx, input }) => {\n      const date = new Date().toISOString()\n      const res = await ctx.db.collection(\"watchlists\").updateOne(\n        { id: input.id },\n        {\n          name: input.name ?? undefined,\n          items: input.items ?? undefined,\n          description: input.description ?? undefined,\n          lastUpdated: date,\n          lastInteracted: date,\n        },\n      )\n      if (!res) throw new TRPCError({ code: \"NOT_FOUND\" })\n      return res\n    }),\n  put: bigdataApiProcedure\n    .meta({ openapi: { method: \"PUT\", path: \"/user-data/watchlists/:id\" } })\n    .input(bigdataSchemas.st_user_watchlists_PutWatchlistParams.extend({ id: z.string() }))\n    .output(bigdataSchemas.st_user_watchlists_WatchlistResponse_Input)\n    .mutation(async ({ ctx, input }) => {\n      const date = new Date().toISOString()\n      const res = await ctx.db.collection(\"watchlists\").updateOne(\n        { id: input.id },\n        {\n          name: input.name ?? undefined,\n          description: input.description ?? undefined,\n          items: input.items ?? undefined,\n          lastUpdated: date,\n          lastInteracted: date,\n        },\n      )\n      if (!res) throw new TRPCError({ code: \"NOT_FOUND\" })\n      return res\n    }),\n  dependencies: bigdataApiProcedure\n    .meta({ openapi: { method: \"POST\", path: \"/user-data/watchlists/dependencies\" } })\n    .input(z.object({}))\n    .output(z.array(z.string()))\n    .mutation(async () => {\n      return []\n    }),\n  saveImage: bigdataApiProcedure\n    .meta({\n      openapi: { method: \"POST\", path: \"/user-data/watchlists/:id/generate-presigned-url\" },\n    })\n    .input(watchlistSaveImageInputSchema)\n    .output(bigdataSchemas.st_user_watchlists_GeneratePresignedUrlResponse)\n    .mutation(async ({ ctx, input }) => {\n      const key = generateId()\n      const url = `${ctx.request.url.origin}${UPLOAD_PATH.replace(\":id\", key)}`\n      await ctx.db.collection(\"watchlists\").updateOne({ id: input.id }, { imageUrl: url })\n      return { url, key }\n    }),\n  deleteImage: bigdataApiProcedure\n    .meta({ openapi: { method: \"POST\", path: \"/user-data/watchlists/:id/assets\" } })\n    .input(watchlistSaveImageInputSchema)\n    .output(z.null())\n    .mutation(async ({ ctx, input }) => {\n      await ctx.db.collection(\"watchlists\").updateOne({ id: input.id }, { imageUrl: undefined })\n      return null\n    }),\n  favorite: bigdataApiProcedure\n    .meta({ openapi: { method: \"PUT\", path: \"/user-data/watchlists/:id/favorite\" } })\n    .input(z.object({ id: z.string() }))\n    .output(bigdataSchemas.st_user_watchlists_WatchlistResponse_Input)\n    .mutation(async ({ input, ctx }) => {\n      const res = await ctx.db\n        .collection(\"watchlists\")\n        .updateOne({ id: input.id }, { isFavorite: true })\n      if (!res) throw new TRPCError({ code: \"NOT_FOUND\" })\n      return res\n    }),\n  unfavorite: bigdataApiProcedure\n    .meta({ openapi: { method: \"PUT\", path: \"/user-data/watchlists/:id/unfavorite\" } })\n    .input(z.object({ id: z.string() }))\n    .output(bigdataSchemas.st_user_watchlists_WatchlistResponse_Input)\n    .mutation(async ({ input, ctx }) => {\n      const res = await ctx.db\n        .collection(\"watchlists\")\n        .updateOne({ id: input.id }, { isFavorite: false })\n      if (!res) throw new TRPCError({ code: \"NOT_FOUND\" })\n      return res\n    }),\n}\n"],"names":["userDataWatchlistsProcedures","UPLOAD_PATH","watchlistListInputSchema","z","object","owned","boolean","optional","shared","enum","globalType","globalStatus","id","bigdataApiProcedure","meta","openapi","method","path","input","string","output","bigdataSchemas","st_user_watchlists_WatchlistResponse_Input","query","ctx","watchlist","db","collection","findOne","TRPCError","code","list","st_user_watchlists_ListObjectsResponse_Input","user_id","userOwner","ownerUserId","userCollaborator","results","find","item","global","type","isPublic","isFavorite","create","st_user_watchlists_CreateWatchlistParams","mutation","insertOne","generateWatchlist","delete","deleteOne","share","st_user_watchlists_WatchlistShareRequest","extend","updateOne","company","organizationId","permission","patch","st_user_watchlists_PatchWatchlistParams","date","Date","toISOString","res","name","undefined","items","description","lastUpdated","lastInteracted","put","st_user_watchlists_PutWatchlistParams","dependencies","array","saveImage","watchlistSaveImageInputSchema","st_user_watchlists_GeneratePresignedUrlResponse","key","generateId","url","request","origin","replace","imageUrl","deleteImage","null","favorite","unfavorite"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}