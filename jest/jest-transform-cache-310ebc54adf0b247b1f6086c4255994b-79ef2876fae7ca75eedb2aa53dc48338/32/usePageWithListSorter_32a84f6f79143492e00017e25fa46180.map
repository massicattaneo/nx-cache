{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/hooks/src/usePageWithListSorter.ts"],"sourcesContent":["import { useCallback } from \"react\"\nimport { CqsUserQuery } from \"@rp/common/api-types\"\nimport { Watchlist } from \"@rp/common/api-types\"\nimport { OnListSorterDirectionChange } from \"@rp/common/utils\"\nimport { useListSorter } from \"@rp/react/common/hooks\"\nimport { ChatListObject } from \"@rp/react/tanstack-api/chat\"\nimport { useUserSettings } from \"./useUserSettings\"\n\nexport type SearchPageType = \"savedSearches\" | \"recentSearches\" | \"publicSearches\"\nexport type WatchlistPageType = \"publicWatchlists\" | \"userWatchlists\"\nexport type NotificationsPageType = \"notifications\"\nexport type FilesPageType = \"files\"\nexport type ChatsPageType = \"chats\"\n\ntype PageWithListType =\n  | SearchPageType\n  | WatchlistPageType\n  | NotificationsPageType\n  | FilesPageType\n  | ChatsPageType\n\ntype SearchNotificationItem = Omit<\n  CqsUserQuery,\n  \"saveStatus\" | \"pinned\" | \"pinIndex\" | \"shared\" | \"schedules\"\n>\ntype WatchListItem = Omit<\n  Watchlist,\n  \"shared\" | \"items\" | \"category\" | \"global\" | \"isFavorite\" | \"permissions\"\n>\n\ntype DynamicItem<T> = T extends FilesPageType\n  ? {\n      name: string\n      date: string\n      size: number\n    }\n  : T extends ChatsPageType\n  ? Omit<ChatListObject, \"interactions\" | \"isPublic\">\n  : T extends WatchlistPageType\n  ? Omit<WatchListItem, \"isClientWatchlist\">\n  : SearchNotificationItem\n\nconst usePageWithListSorter = <T extends PageWithListType>(page: T) => {\n  const {\n    userSettings: { sorting: userSorting },\n    actions: { setSorting },\n  } = useUserSettings<DynamicItem<typeof page>>()\n\n  const { direction: sortSettingsDirection, field: sortSettingsField } = userSorting[page]\n\n  const {\n    sorterFn,\n    sortBy,\n    direction,\n    onChange: onSorterChange,\n  } = useListSorter<DynamicItem<typeof page>>({\n    direction: sortSettingsDirection,\n    sortBy: sortSettingsField,\n  })\n\n  const onChange = useCallback(\n    ({ sortBy, direction }: OnListSorterDirectionChange<DynamicItem<typeof page>>) => {\n      onSorterChange({ sortBy, direction })\n      setSorting(page, { field: sortBy, direction })\n    },\n    [onSorterChange, page, setSorting],\n  )\n\n  return { sorterFn, sortBy, direction, onChange }\n}\nexport { usePageWithListSorter }\n"],"names":["usePageWithListSorter","page","userSettings","sorting","userSorting","actions","setSorting","useUserSettings","direction","sortSettingsDirection","field","sortSettingsField","sorterFn","sortBy","onChange","onSorterChange","useListSorter","useCallback"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAsESA;;;eAAAA;;;uBAtEmB;uBAIE;iCAEE;AAoChC,MAAMA,wBAAwB,CAA6BC;IACzD,MAAM,EACJC,cAAc,EAAEC,SAASC,WAAW,EAAE,EACtCC,SAAS,EAAEC,UAAU,EAAE,EACxB,GAAGC,IAAAA,gCAAe;IAEnB,MAAM,EAAEC,WAAWC,qBAAqB,EAAEC,OAAOC,iBAAiB,EAAE,GAAGP,WAAW,CAACH,KAAK;IAExF,MAAM,EACJW,QAAQ,EACRC,MAAM,EACNL,SAAS,EACTM,UAAUC,cAAc,EACzB,GAAGC,IAAAA,oBAAa,EAA2B;QAC1CR,WAAWC;QACXI,QAAQF;IACV;IAEA,MAAMG,WAAWG,IAAAA,kBAAW,EAC1B,CAAC,EAAEJ,MAAM,EAAEL,SAAS,EAAyD;QAC3EO,eAAe;YAAEF;YAAQL;QAAU;QACnCF,WAAWL,MAAM;YAAES,OAAOG;YAAQL;QAAU;IAC9C,GACA;QAACO;QAAgBd;QAAMK;KAAW;IAGpC,OAAO;QAAEM;QAAUC;QAAQL;QAAWM;IAAS;AACjD"}