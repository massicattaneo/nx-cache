bd95e462076d6cce4addbb9ac6afd2c4
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    ClerkApList: function() {
        return ClerkApList;
    },
    ClerkRoles: function() {
        return ClerkRoles;
    }
});
const ClerkApList = {
    SUGGESTED_PROMPTS_READ: 0,
    SUGGESTED_PROMPTS_WRITE: 1,
    CLIENT_NATIVE_CONFIG_READ: 2,
    CLIENT_NATIVE_CONFIG_WRITE: 3,
    ORGANIZATION_LIST_READ: 4,
    ORGANIZATION_READ: 5,
    USER_LIST_READ: 6,
    USER_READ: 7,
    USER_PERMISSIONS_WRITE: 8,
    GLOBAL_WATCHLIST_READ: 9,
    GLOBAL_WATCHLIST_WRITE: 10
};
const ClerkRoles = {
    ADMINISTRATOR: [
        ClerkApList.SUGGESTED_PROMPTS_READ,
        ClerkApList.SUGGESTED_PROMPTS_WRITE,
        ClerkApList.CLIENT_NATIVE_CONFIG_READ,
        ClerkApList.CLIENT_NATIVE_CONFIG_WRITE,
        ClerkApList.ORGANIZATION_LIST_READ,
        ClerkApList.ORGANIZATION_READ,
        ClerkApList.USER_LIST_READ,
        ClerkApList.USER_READ,
        ClerkApList.USER_PERMISSIONS_WRITE,
        ClerkApList.GLOBAL_WATCHLIST_READ,
        ClerkApList.GLOBAL_WATCHLIST_WRITE
    ],
    PRODUCT: [
        ClerkApList.SUGGESTED_PROMPTS_READ,
        ClerkApList.SUGGESTED_PROMPTS_WRITE,
        ClerkApList.CLIENT_NATIVE_CONFIG_READ,
        ClerkApList.ORGANIZATION_LIST_READ,
        ClerkApList.ORGANIZATION_READ,
        ClerkApList.USER_LIST_READ,
        ClerkApList.USER_READ,
        ClerkApList.GLOBAL_WATCHLIST_READ
    ]
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvY29tbW9uL2FwaS10eXBlcy9zcmMvbGliL2xvZ2luLnR5cGVzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBDbGVya0FwTGlzdCA9IHtcbiAgU1VHR0VTVEVEX1BST01QVFNfUkVBRDogMCxcbiAgU1VHR0VTVEVEX1BST01QVFNfV1JJVEU6IDEsXG4gIENMSUVOVF9OQVRJVkVfQ09ORklHX1JFQUQ6IDIsXG4gIENMSUVOVF9OQVRJVkVfQ09ORklHX1dSSVRFOiAzLFxuICBPUkdBTklaQVRJT05fTElTVF9SRUFEOiA0LFxuICBPUkdBTklaQVRJT05fUkVBRDogNSxcbiAgVVNFUl9MSVNUX1JFQUQ6IDYsXG4gIFVTRVJfUkVBRDogNyxcbiAgVVNFUl9QRVJNSVNTSU9OU19XUklURTogOCxcbiAgR0xPQkFMX1dBVENITElTVF9SRUFEOiA5LFxuICBHTE9CQUxfV0FUQ0hMSVNUX1dSSVRFOiAxMCxcbn0gYXMgY29uc3RcblxuZXhwb3J0IGNvbnN0IENsZXJrUm9sZXM6IFJlY29yZDxcIkFETUlOSVNUUkFUT1JcIiB8IFwiUFJPRFVDVFwiLCBBcnJheTxDbGVya0FwPj4gPSB7XG4gIEFETUlOSVNUUkFUT1I6IFtcbiAgICBDbGVya0FwTGlzdC5TVUdHRVNURURfUFJPTVBUU19SRUFELFxuICAgIENsZXJrQXBMaXN0LlNVR0dFU1RFRF9QUk9NUFRTX1dSSVRFLFxuICAgIENsZXJrQXBMaXN0LkNMSUVOVF9OQVRJVkVfQ09ORklHX1JFQUQsXG4gICAgQ2xlcmtBcExpc3QuQ0xJRU5UX05BVElWRV9DT05GSUdfV1JJVEUsXG4gICAgQ2xlcmtBcExpc3QuT1JHQU5JWkFUSU9OX0xJU1RfUkVBRCxcbiAgICBDbGVya0FwTGlzdC5PUkdBTklaQVRJT05fUkVBRCxcbiAgICBDbGVya0FwTGlzdC5VU0VSX0xJU1RfUkVBRCxcbiAgICBDbGVya0FwTGlzdC5VU0VSX1JFQUQsXG4gICAgQ2xlcmtBcExpc3QuVVNFUl9QRVJNSVNTSU9OU19XUklURSxcbiAgICBDbGVya0FwTGlzdC5HTE9CQUxfV0FUQ0hMSVNUX1JFQUQsXG4gICAgQ2xlcmtBcExpc3QuR0xPQkFMX1dBVENITElTVF9XUklURSxcbiAgXSxcbiAgUFJPRFVDVDogW1xuICAgIENsZXJrQXBMaXN0LlNVR0dFU1RFRF9QUk9NUFRTX1JFQUQsXG4gICAgQ2xlcmtBcExpc3QuU1VHR0VTVEVEX1BST01QVFNfV1JJVEUsXG4gICAgQ2xlcmtBcExpc3QuQ0xJRU5UX05BVElWRV9DT05GSUdfUkVBRCxcbiAgICBDbGVya0FwTGlzdC5PUkdBTklaQVRJT05fTElTVF9SRUFELFxuICAgIENsZXJrQXBMaXN0Lk9SR0FOSVpBVElPTl9SRUFELFxuICAgIENsZXJrQXBMaXN0LlVTRVJfTElTVF9SRUFELFxuICAgIENsZXJrQXBMaXN0LlVTRVJfUkVBRCxcbiAgICBDbGVya0FwTGlzdC5HTE9CQUxfV0FUQ0hMSVNUX1JFQUQsXG4gIF0sXG59XG5cbmV4cG9ydCB0eXBlIENsZXJrQXAgPSB0eXBlb2YgQ2xlcmtBcExpc3Rba2V5b2YgdHlwZW9mIENsZXJrQXBMaXN0XVxuXG5leHBvcnQgdHlwZSBDbGVya0pXVFRva2VuID0ge1xuICBhenA6IHN0cmluZyAvLyBcImh0dHA6Ly9sb2NhbGhvc3Q6MzAwMFwiXG4gIGV4cDogbnVtYmVyIC8vIDE3MTUzMzQzNzVcbiAgZXh0ZXJuYWxfaWQ6IHN0cmluZyAvLyBcInRlc3RVc2VyXCJcbiAgaWF0OiBudW1iZXIgLy8gMTcxNTMzNDMxNVxuICBpZDogc3RyaW5nIC8vIFwidXNlcl8qKlwiXG4gIGlzczogc3RyaW5nIC8vIFwiaHR0cHM6Ly90b3VjaGVkLWhhZGRvY2stMTMuY2xlcmsuYWNjb3VudHMuZGV2XCJcbiAganRpOiBzdHJpbmdcbiAgbmJmOiBudW1iZXIgLy8xNzE1MzM0MzEwXG4gIG9yZ2FuaXphdGlvbl9pZDogc3RyaW5nIC8vIFwib3JnXyoqKlwiXG4gIG9yZ2FuaXphdGlvbl9uYW1lOiBzdHJpbmcgLy8gXCJSYXZlblBhY2tcIlxuICBvcmdhbml6YXRpb25fcnBfY2lkOiBzdHJpbmcgLy8gXCJSYXZlblBhY2tcIlxuICByZXF1ZXN0X29yaWdpbjogXCJ3ZWJcIiB8IFwic2RrXCJcbiAgc3ViOiBzdHJpbmcgLy8gXCJ1c2VyXyoqXCJcbiAgdXNlcl9lbWFpbDogc3RyaW5nIC8vIFwidGVzdFVzZXJAcmF2ZW5wYWNrLmNvbVwiXG4gIGFwOiBBcnJheTxDbGVya0FwPiAvLyBBZG1pbiBQZXJtaXNzaW9uc1xufVxuIl0sIm5hbWVzIjpbIkNsZXJrQXBMaXN0IiwiQ2xlcmtSb2xlcyIsIlNVR0dFU1RFRF9QUk9NUFRTX1JFQUQiLCJTVUdHRVNURURfUFJPTVBUU19XUklURSIsIkNMSUVOVF9OQVRJVkVfQ09ORklHX1JFQUQiLCJDTElFTlRfTkFUSVZFX0NPTkZJR19XUklURSIsIk9SR0FOSVpBVElPTl9MSVNUX1JFQUQiLCJPUkdBTklaQVRJT05fUkVBRCIsIlVTRVJfTElTVF9SRUFEIiwiVVNFUl9SRUFEIiwiVVNFUl9QRVJNSVNTSU9OU19XUklURSIsIkdMT0JBTF9XQVRDSExJU1RfUkVBRCIsIkdMT0JBTF9XQVRDSExJU1RfV1JJVEUiLCJBRE1JTklTVFJBVE9SIiwiUFJPRFVDVCJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztJQUFhQSxXQUFXO2VBQVhBOztJQWNBQyxVQUFVO2VBQVZBOzs7QUFkTixNQUFNRCxjQUFjO0lBQ3pCRSx3QkFBd0I7SUFDeEJDLHlCQUF5QjtJQUN6QkMsMkJBQTJCO0lBQzNCQyw0QkFBNEI7SUFDNUJDLHdCQUF3QjtJQUN4QkMsbUJBQW1CO0lBQ25CQyxnQkFBZ0I7SUFDaEJDLFdBQVc7SUFDWEMsd0JBQXdCO0lBQ3hCQyx1QkFBdUI7SUFDdkJDLHdCQUF3QjtBQUMxQjtBQUVPLE1BQU1YLGFBQWtFO0lBQzdFWSxlQUFlO1FBQ2JiLFlBQVlFLHNCQUFzQjtRQUNsQ0YsWUFBWUcsdUJBQXVCO1FBQ25DSCxZQUFZSSx5QkFBeUI7UUFDckNKLFlBQVlLLDBCQUEwQjtRQUN0Q0wsWUFBWU0sc0JBQXNCO1FBQ2xDTixZQUFZTyxpQkFBaUI7UUFDN0JQLFlBQVlRLGNBQWM7UUFDMUJSLFlBQVlTLFNBQVM7UUFDckJULFlBQVlVLHNCQUFzQjtRQUNsQ1YsWUFBWVcscUJBQXFCO1FBQ2pDWCxZQUFZWSxzQkFBc0I7S0FDbkM7SUFDREUsU0FBUztRQUNQZCxZQUFZRSxzQkFBc0I7UUFDbENGLFlBQVlHLHVCQUF1QjtRQUNuQ0gsWUFBWUkseUJBQXlCO1FBQ3JDSixZQUFZTSxzQkFBc0I7UUFDbENOLFlBQVlPLGlCQUFpQjtRQUM3QlAsWUFBWVEsY0FBYztRQUMxQlIsWUFBWVMsU0FBUztRQUNyQlQsWUFBWVcscUJBQXFCO0tBQ2xDO0FBQ0gifQ==