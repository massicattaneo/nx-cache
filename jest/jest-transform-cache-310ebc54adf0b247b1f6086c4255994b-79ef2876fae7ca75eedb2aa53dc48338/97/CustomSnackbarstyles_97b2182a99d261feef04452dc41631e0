b665fefb210252f2466713eeaeb7ed8a
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    CloseButtonStyled: function() {
        return CloseButtonStyled;
    },
    SnackbarContentStyled: function() {
        return SnackbarContentStyled;
    },
    SnackbarMessageStyled: function() {
        return SnackbarMessageStyled;
    }
});
const _theme = require("@rp/react/theme");
const _core = require("@rp/react/web/mui/core");
const SnackbarContentStyled = (0, _theme.styled)(_core.SnackbarContent, {
    shouldForwardProp: (prop)=>prop !== "variantName" && prop !== "disableClose"
})(({ theme, variantName, disableClose })=>{
    const variantColors = {
        success: theme.palette.success.main,
        error: theme.palette.error.main,
        warning: theme.palette.warning.main,
        info: theme.palette.info.main,
        default: theme.palette.grey[100]
    };
    return {
        color: theme.palette.grey[900],
        backgroundColor: variantColors[variantName],
        "& > div": {
            maxWidth: disableClose ? "100%" : "calc(100% - 42px)"
        }
    };
});
const SnackbarMessageStyled = (0, _theme.styled)("div", {
    shouldForwardProp: (propName)=>propName !== "disableClose"
})(({ theme, disableClose })=>({
        display: "flex",
        gap: theme.spacing(2),
        alignItems: "center",
        maxWidth: disableClose ? 320 : 300
    }));
const CloseButtonStyled = (0, _theme.styled)(_core.IconButton)(({ theme })=>({
        color: theme.palette.grey[900]
    }));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9wcm92aWRlcnMvc3JjL1NuYWNrYmFyL0N1c3RvbVNuYWNrYmFyL0N1c3RvbVNuYWNrYmFyLnN0eWxlcy50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVmFyaWFudFR5cGUgfSBmcm9tIFwibm90aXN0YWNrXCJcbmltcG9ydCB7IHN0eWxlZCB9IGZyb20gXCJAcnAvcmVhY3QvdGhlbWVcIlxuaW1wb3J0IHsgSWNvbkJ1dHRvbiwgU25hY2tiYXJDb250ZW50IH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvbXVpL2NvcmVcIlxuXG50eXBlIEV4dHJhUHJvcHMgPSB7XG4gIHZhcmlhbnROYW1lOiBWYXJpYW50VHlwZVxuICBkaXNhYmxlQ2xvc2U/OiBib29sZWFuXG59XG5cbmNvbnN0IFNuYWNrYmFyQ29udGVudFN0eWxlZCA9IHN0eWxlZChTbmFja2JhckNvbnRlbnQsIHtcbiAgc2hvdWxkRm9yd2FyZFByb3A6IHByb3AgPT4gcHJvcCAhPT0gXCJ2YXJpYW50TmFtZVwiICYmIHByb3AgIT09IFwiZGlzYWJsZUNsb3NlXCIsXG59KTxFeHRyYVByb3BzPigoeyB0aGVtZSwgdmFyaWFudE5hbWUsIGRpc2FibGVDbG9zZSB9KSA9PiB7XG4gIGNvbnN0IHZhcmlhbnRDb2xvcnMgPSB7XG4gICAgc3VjY2VzczogdGhlbWUucGFsZXR0ZS5zdWNjZXNzLm1haW4sXG4gICAgZXJyb3I6IHRoZW1lLnBhbGV0dGUuZXJyb3IubWFpbixcbiAgICB3YXJuaW5nOiB0aGVtZS5wYWxldHRlLndhcm5pbmcubWFpbixcbiAgICBpbmZvOiB0aGVtZS5wYWxldHRlLmluZm8ubWFpbixcbiAgICBkZWZhdWx0OiB0aGVtZS5wYWxldHRlLmdyZXlbMTAwXSxcbiAgfVxuICByZXR1cm4ge1xuICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLmdyZXlbOTAwXSxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHZhcmlhbnRDb2xvcnNbdmFyaWFudE5hbWVdLFxuICAgIFwiJiA+IGRpdlwiOiB7XG4gICAgICBtYXhXaWR0aDogZGlzYWJsZUNsb3NlID8gXCIxMDAlXCIgOiBcImNhbGMoMTAwJSAtIDQycHgpXCIsXG4gICAgfSxcbiAgfVxufSlcblxuY29uc3QgU25hY2tiYXJNZXNzYWdlU3R5bGVkID0gc3R5bGVkKFwiZGl2XCIsIHtcbiAgc2hvdWxkRm9yd2FyZFByb3A6IHByb3BOYW1lID0+IHByb3BOYW1lICE9PSBcImRpc2FibGVDbG9zZVwiLFxufSk8eyBkaXNhYmxlQ2xvc2U/OiBib29sZWFuIH0+KCh7IHRoZW1lLCBkaXNhYmxlQ2xvc2UgfSkgPT4gKHtcbiAgZGlzcGxheTogXCJmbGV4XCIsXG4gIGdhcDogdGhlbWUuc3BhY2luZygyKSxcbiAgYWxpZ25JdGVtczogXCJjZW50ZXJcIixcbiAgbWF4V2lkdGg6IGRpc2FibGVDbG9zZSA/IDMyMCA6IDMwMCxcbn0pKVxuXG5jb25zdCBDbG9zZUJ1dHRvblN0eWxlZCA9IHN0eWxlZChJY29uQnV0dG9uKSgoeyB0aGVtZSB9KSA9PiAoe1xuICBjb2xvcjogdGhlbWUucGFsZXR0ZS5ncmV5WzkwMF0sXG59KSlcblxuZXhwb3J0IHsgQ2xvc2VCdXR0b25TdHlsZWQsIFNuYWNrYmFyQ29udGVudFN0eWxlZCwgU25hY2tiYXJNZXNzYWdlU3R5bGVkIH1cbiJdLCJuYW1lcyI6WyJDbG9zZUJ1dHRvblN0eWxlZCIsIlNuYWNrYmFyQ29udGVudFN0eWxlZCIsIlNuYWNrYmFyTWVzc2FnZVN0eWxlZCIsInN0eWxlZCIsIlNuYWNrYmFyQ29udGVudCIsInNob3VsZEZvcndhcmRQcm9wIiwicHJvcCIsInRoZW1lIiwidmFyaWFudE5hbWUiLCJkaXNhYmxlQ2xvc2UiLCJ2YXJpYW50Q29sb3JzIiwic3VjY2VzcyIsInBhbGV0dGUiLCJtYWluIiwiZXJyb3IiLCJ3YXJuaW5nIiwiaW5mbyIsImRlZmF1bHQiLCJncmV5IiwiY29sb3IiLCJiYWNrZ3JvdW5kQ29sb3IiLCJtYXhXaWR0aCIsInByb3BOYW1lIiwiZGlzcGxheSIsImdhcCIsInNwYWNpbmciLCJhbGlnbkl0ZW1zIiwiSWNvbkJ1dHRvbiJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0lBeUNTQSxpQkFBaUI7ZUFBakJBOztJQUFtQkMscUJBQXFCO2VBQXJCQTs7SUFBdUJDLHFCQUFxQjtlQUFyQkE7Ozt1QkF4QzVCO3NCQUNxQjtBQU81QyxNQUFNRCx3QkFBd0JFLElBQUFBLGFBQU0sRUFBQ0MscUJBQWUsRUFBRTtJQUNwREMsbUJBQW1CQyxDQUFBQSxPQUFRQSxTQUFTLGlCQUFpQkEsU0FBUztBQUNoRSxHQUFlLENBQUMsRUFBRUMsS0FBSyxFQUFFQyxXQUFXLEVBQUVDLFlBQVksRUFBRTtJQUNsRCxNQUFNQyxnQkFBZ0I7UUFDcEJDLFNBQVNKLE1BQU1LLE9BQU8sQ0FBQ0QsT0FBTyxDQUFDRSxJQUFJO1FBQ25DQyxPQUFPUCxNQUFNSyxPQUFPLENBQUNFLEtBQUssQ0FBQ0QsSUFBSTtRQUMvQkUsU0FBU1IsTUFBTUssT0FBTyxDQUFDRyxPQUFPLENBQUNGLElBQUk7UUFDbkNHLE1BQU1ULE1BQU1LLE9BQU8sQ0FBQ0ksSUFBSSxDQUFDSCxJQUFJO1FBQzdCSSxTQUFTVixNQUFNSyxPQUFPLENBQUNNLElBQUksQ0FBQyxJQUFJO0lBQ2xDO0lBQ0EsT0FBTztRQUNMQyxPQUFPWixNQUFNSyxPQUFPLENBQUNNLElBQUksQ0FBQyxJQUFJO1FBQzlCRSxpQkFBaUJWLGFBQWEsQ0FBQ0YsWUFBWTtRQUMzQyxXQUFXO1lBQ1RhLFVBQVVaLGVBQWUsU0FBUztRQUNwQztJQUNGO0FBQ0Y7QUFFQSxNQUFNUCx3QkFBd0JDLElBQUFBLGFBQU0sRUFBQyxPQUFPO0lBQzFDRSxtQkFBbUJpQixDQUFBQSxXQUFZQSxhQUFhO0FBQzlDLEdBQStCLENBQUMsRUFBRWYsS0FBSyxFQUFFRSxZQUFZLEVBQUUsR0FBTSxDQUFBO1FBQzNEYyxTQUFTO1FBQ1RDLEtBQUtqQixNQUFNa0IsT0FBTyxDQUFDO1FBQ25CQyxZQUFZO1FBQ1pMLFVBQVVaLGVBQWUsTUFBTTtJQUNqQyxDQUFBO0FBRUEsTUFBTVQsb0JBQW9CRyxJQUFBQSxhQUFNLEVBQUN3QixnQkFBVSxFQUFFLENBQUMsRUFBRXBCLEtBQUssRUFBRSxHQUFNLENBQUE7UUFDM0RZLE9BQU9aLE1BQU1LLE9BQU8sQ0FBQ00sSUFBSSxDQUFDLElBQUk7SUFDaEMsQ0FBQSJ9