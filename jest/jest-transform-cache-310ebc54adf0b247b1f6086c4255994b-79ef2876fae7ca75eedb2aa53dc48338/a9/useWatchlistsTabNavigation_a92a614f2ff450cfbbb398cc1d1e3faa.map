{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/watchlists/src/lib/hooks/useWatchlistsTabNavigation.ts"],"sourcesContent":["import { useCallback, useState } from \"react\"\nimport { useSearchParams } from \"react-router-dom\"\nimport { useReplaceSearchParam } from \"@rp/react/web/common/hooks\"\n\nexport type WatchlistsTab =\n  | \"my-watchlists\"\n  | \"favorites\"\n  | \"public-watchlists\"\n  | \"thematic-watchlists\"\n  | \"community-watchlists\"\n  | null\n\nconst getTabParamValue = (tab: string): WatchlistsTab => {\n  if (tab === \"favorites\") return \"favorites\"\n  if (tab === \"public-watchlists\") return \"public-watchlists\"\n  if (tab === \"community-watchlists\") return \"community-watchlists\"\n  if (tab === \"thematic-watchlists\") return \"thematic-watchlists\"\n  return \"my-watchlists\"\n}\n\nconst getTabValueFromNum = (number: number): WatchlistsTab => {\n  if (number === 1) return \"favorites\"\n  if (number === 2) return \"public-watchlists\"\n  if (number === 3) return \"community-watchlists\"\n  if (number === 4) return \"thematic-watchlists\"\n  return \"my-watchlists\"\n}\n\nexport const useWatchlistsTabNavigation = (defaultTab?: WatchlistsTab) => {\n  const [searchParams] = useSearchParams()\n  const tabParam = searchParams.get(\"tab\") ?? \"\"\n  const replace = useReplaceSearchParam()\n  const tabFromParam = getTabParamValue(tabParam)\n  const [tabValue, setTabValue] = useState<WatchlistsTab>(\n    defaultTab !== undefined && tabFromParam === \"my-watchlists\" ? defaultTab : tabFromParam,\n  )\n  const tabNumValue = tabValue === \"my-watchlists\" ? 0 : 1\n\n  const handleChange = useCallback(\n    (newValue: WatchlistsTab) => {\n      if (newValue === \"my-watchlists\") replace(() => undefined)\n      if (newValue === \"favorites\") replace(() => \"favorites\")\n      if (newValue === \"public-watchlists\") replace(() => \"public-watchlists\")\n      if (newValue === \"community-watchlists\") replace(() => \"community-watchlists\")\n      if (newValue === \"thematic-watchlists\") replace(() => \"thematic-watchlists\")\n      setTabValue(newValue)\n    },\n    [replace],\n  )\n\n  const handleNumChange = useCallback(\n    (newValue: number) => handleChange(getTabValueFromNum(newValue)),\n    [handleChange],\n  )\n\n  return { tabValue, tabNumValue, handleNumChange, handleChange }\n}\n"],"names":["useWatchlistsTabNavigation","getTabParamValue","tab","getTabValueFromNum","number","defaultTab","searchParams","useSearchParams","tabParam","get","replace","useReplaceSearchParam","tabFromParam","tabValue","setTabValue","useState","undefined","tabNumValue","handleChange","useCallback","newValue","handleNumChange"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BA4BaA;;;eAAAA;;;uBA5ByB;gCACN;uBACM;AAUtC,MAAMC,mBAAmB,CAACC;IACxB,IAAIA,QAAQ,aAAa,OAAO;IAChC,IAAIA,QAAQ,qBAAqB,OAAO;IACxC,IAAIA,QAAQ,wBAAwB,OAAO;IAC3C,IAAIA,QAAQ,uBAAuB,OAAO;IAC1C,OAAO;AACT;AAEA,MAAMC,qBAAqB,CAACC;IAC1B,IAAIA,WAAW,GAAG,OAAO;IACzB,IAAIA,WAAW,GAAG,OAAO;IACzB,IAAIA,WAAW,GAAG,OAAO;IACzB,IAAIA,WAAW,GAAG,OAAO;IACzB,OAAO;AACT;AAEO,MAAMJ,6BAA6B,CAACK;IACzC,MAAM,CAACC,aAAa,GAAGC,IAAAA,+BAAe;QACrBD;IAAjB,MAAME,WAAWF,CAAAA,oBAAAA,aAAaG,GAAG,CAAC,oBAAjBH,+BAAAA,oBAA2B;IAC5C,MAAMI,UAAUC,IAAAA,4BAAqB;IACrC,MAAMC,eAAeX,iBAAiBO;IACtC,MAAM,CAACK,UAAUC,YAAY,GAAGC,IAAAA,eAAQ,EACtCV,eAAeW,aAAaJ,iBAAiB,kBAAkBP,aAAaO;IAE9E,MAAMK,cAAcJ,aAAa,kBAAkB,IAAI;IAEvD,MAAMK,eAAeC,IAAAA,kBAAW,EAC9B,CAACC;QACC,IAAIA,aAAa,iBAAiBV,QAAQ,IAAMM;QAChD,IAAII,aAAa,aAAaV,QAAQ,IAAM;QAC5C,IAAIU,aAAa,qBAAqBV,QAAQ,IAAM;QACpD,IAAIU,aAAa,wBAAwBV,QAAQ,IAAM;QACvD,IAAIU,aAAa,uBAAuBV,QAAQ,IAAM;QACtDI,YAAYM;IACd,GACA;QAACV;KAAQ;IAGX,MAAMW,kBAAkBF,IAAAA,kBAAW,EACjC,CAACC,WAAqBF,aAAaf,mBAAmBiB,YACtD;QAACF;KAAa;IAGhB,OAAO;QAAEL;QAAUI;QAAaI;QAAiBH;IAAa;AAChE"}