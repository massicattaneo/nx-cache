ca36b2b3eaa388f0b2f5abb7b55e3fe2
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "BriefConfigScheduleInfo", {
    enumerable: true,
    get: function() {
        return BriefConfigScheduleInfo;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _brief = require("@rp/react/common/brief");
const _core = require("@rp/react/web/mui/core");
const _icons = require("@rp/react/web/mui/icons");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const BriefConfigScheduleInfo = ({ schedule })=>{
    const { daysText, timeText, fullTimeText } = (0, _react.useMemo)(()=>{
        const timeText = (0, _brief.formatTimestampToTime)(schedule.hour, schedule.minute);
        return {
            daysText: (0, _brief.formatDaysToText)(schedule.days),
            timeText,
            fullTimeText: `${timeText}, ${schedule.timezone}`
        };
    }, [
        schedule
    ]);
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
        display: "flex",
        alignItems: "center",
        role: "time",
        "aria-label": "brief config schedule info",
        sx: {
            textOverflow: "ellipsis",
            overflow: "hidden",
            whiteSpace: "nowrap"
        },
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.AccessTime, {
                sx: {
                    color: "BDprimary.200",
                    height: "20px",
                    width: "20px",
                    marginTop: "-2px"
                }
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Tooltip, {
                title: daysText,
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                    noWrap: true,
                    color: "BDprimary.200",
                    marginLeft: "4px",
                    fontSize: "14px",
                    children: daysText
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                color: "BDprimary.200",
                marginX: "4px",
                fontSize: "14px",
                children: "|"
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Tooltip, {
                title: fullTimeText,
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                    color: "BDprimary.200",
                    fontSize: "14px",
                    display: "block",
                    width: "62px",
                    children: timeText
                })
            })
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2JyaWVmL3NyYy9jb21wb25lbnRzL0JyaWVmQ29uZmlnQ2FyZC9CcmllZkNvbmZpZ1NjaGVkdWxlSW5mby9CcmllZkNvbmZpZ1NjaGVkdWxlSW5mby50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZU1lbW8gfSBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IHsgZm9ybWF0RGF5c1RvVGV4dCwgZm9ybWF0VGltZXN0YW1wVG9UaW1lIH0gZnJvbSBcIkBycC9yZWFjdC9jb21tb24vYnJpZWZcIlxuaW1wb3J0IHsgQnJpZWZTY2hlZHVsZSB9IGZyb20gXCJAcnAvcmVhY3QvdGFuc3RhY2stYXBpL2JyaWVmXCJcbmltcG9ydCB7IEJveCwgVG9vbHRpcCwgVHlwb2dyYXBoeSB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL211aS9jb3JlXCJcbmltcG9ydCB7IEFjY2Vzc1RpbWUgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9tdWkvaWNvbnNcIlxuXG50eXBlIEJyaWVmQ29uZmlnU2NoZWR1bGVJbmZvUHJvcHMgPSB7XG4gIHNjaGVkdWxlOiBCcmllZlNjaGVkdWxlXG59XG5cbmNvbnN0IEJyaWVmQ29uZmlnU2NoZWR1bGVJbmZvID0gKHsgc2NoZWR1bGUgfTogQnJpZWZDb25maWdTY2hlZHVsZUluZm9Qcm9wcykgPT4ge1xuICBjb25zdCB7IGRheXNUZXh0LCB0aW1lVGV4dCwgZnVsbFRpbWVUZXh0IH0gPSB1c2VNZW1vKCgpID0+IHtcbiAgICBjb25zdCB0aW1lVGV4dCA9IGZvcm1hdFRpbWVzdGFtcFRvVGltZShzY2hlZHVsZS5ob3VyLCBzY2hlZHVsZS5taW51dGUpXG4gICAgcmV0dXJuIHtcbiAgICAgIGRheXNUZXh0OiBmb3JtYXREYXlzVG9UZXh0KHNjaGVkdWxlLmRheXMpLFxuICAgICAgdGltZVRleHQsXG4gICAgICBmdWxsVGltZVRleHQ6IGAke3RpbWVUZXh0fSwgJHtzY2hlZHVsZS50aW1lem9uZX1gLFxuICAgIH1cbiAgfSwgW3NjaGVkdWxlXSlcblxuICByZXR1cm4gKFxuICAgIDxCb3hcbiAgICAgIGRpc3BsYXk9XCJmbGV4XCJcbiAgICAgIGFsaWduSXRlbXM9XCJjZW50ZXJcIlxuICAgICAgcm9sZT1cInRpbWVcIlxuICAgICAgYXJpYS1sYWJlbD1cImJyaWVmIGNvbmZpZyBzY2hlZHVsZSBpbmZvXCJcbiAgICAgIHN4PXt7XG4gICAgICAgIHRleHRPdmVyZmxvdzogXCJlbGxpcHNpc1wiLFxuICAgICAgICBvdmVyZmxvdzogXCJoaWRkZW5cIixcbiAgICAgICAgd2hpdGVTcGFjZTogXCJub3dyYXBcIixcbiAgICAgIH19XG4gICAgPlxuICAgICAgPEFjY2Vzc1RpbWVcbiAgICAgICAgc3g9e3tcbiAgICAgICAgICBjb2xvcjogXCJCRHByaW1hcnkuMjAwXCIsXG4gICAgICAgICAgaGVpZ2h0OiBcIjIwcHhcIixcbiAgICAgICAgICB3aWR0aDogXCIyMHB4XCIsXG4gICAgICAgICAgbWFyZ2luVG9wOiBcIi0ycHhcIixcbiAgICAgICAgfX1cbiAgICAgIC8+XG5cbiAgICAgIDxUb29sdGlwIHRpdGxlPXtkYXlzVGV4dH0+XG4gICAgICAgIDxUeXBvZ3JhcGh5IG5vV3JhcCBjb2xvcj1cIkJEcHJpbWFyeS4yMDBcIiBtYXJnaW5MZWZ0PVwiNHB4XCIgZm9udFNpemU9XCIxNHB4XCI+XG4gICAgICAgICAge2RheXNUZXh0fVxuICAgICAgICA8L1R5cG9ncmFwaHk+XG4gICAgICA8L1Rvb2x0aXA+XG5cbiAgICAgIDxUeXBvZ3JhcGh5IGNvbG9yPVwiQkRwcmltYXJ5LjIwMFwiIG1hcmdpblg9XCI0cHhcIiBmb250U2l6ZT1cIjE0cHhcIj5cbiAgICAgICAgfFxuICAgICAgPC9UeXBvZ3JhcGh5PlxuXG4gICAgICA8VG9vbHRpcCB0aXRsZT17ZnVsbFRpbWVUZXh0fT5cbiAgICAgICAgPFR5cG9ncmFwaHkgY29sb3I9XCJCRHByaW1hcnkuMjAwXCIgZm9udFNpemU9XCIxNHB4XCIgZGlzcGxheT1cImJsb2NrXCIgd2lkdGg9XCI2MnB4XCI+XG4gICAgICAgICAge3RpbWVUZXh0fVxuICAgICAgICA8L1R5cG9ncmFwaHk+XG4gICAgICA8L1Rvb2x0aXA+XG4gICAgPC9Cb3g+XG4gIClcbn1cblxuZXhwb3J0IHsgQnJpZWZDb25maWdTY2hlZHVsZUluZm8gfVxuIl0sIm5hbWVzIjpbIkJyaWVmQ29uZmlnU2NoZWR1bGVJbmZvIiwic2NoZWR1bGUiLCJkYXlzVGV4dCIsInRpbWVUZXh0IiwiZnVsbFRpbWVUZXh0IiwidXNlTWVtbyIsImZvcm1hdFRpbWVzdGFtcFRvVGltZSIsImhvdXIiLCJtaW51dGUiLCJmb3JtYXREYXlzVG9UZXh0IiwiZGF5cyIsInRpbWV6b25lIiwiQm94IiwiZGlzcGxheSIsImFsaWduSXRlbXMiLCJyb2xlIiwiYXJpYS1sYWJlbCIsInN4IiwidGV4dE92ZXJmbG93Iiwib3ZlcmZsb3ciLCJ3aGl0ZVNwYWNlIiwiQWNjZXNzVGltZSIsImNvbG9yIiwiaGVpZ2h0Iiwid2lkdGgiLCJtYXJnaW5Ub3AiLCJUb29sdGlwIiwidGl0bGUiLCJUeXBvZ3JhcGh5Iiwibm9XcmFwIiwibWFyZ2luTGVmdCIsImZvbnRTaXplIiwibWFyZ2luWCJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBNERTQTs7O2VBQUFBOzs7OytEQTVEc0I7dUJBQ3lCO3NCQUVmO3VCQUNkOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFNM0IsTUFBTUEsMEJBQTBCLENBQUMsRUFBRUMsUUFBUSxFQUFnQztJQUN6RSxNQUFNLEVBQUVDLFFBQVEsRUFBRUMsUUFBUSxFQUFFQyxZQUFZLEVBQUUsR0FBR0MsSUFBQUEsY0FBTyxFQUFDO1FBQ25ELE1BQU1GLFdBQVdHLElBQUFBLDRCQUFxQixFQUFDTCxTQUFTTSxJQUFJLEVBQUVOLFNBQVNPLE1BQU07UUFDckUsT0FBTztZQUNMTixVQUFVTyxJQUFBQSx1QkFBZ0IsRUFBQ1IsU0FBU1MsSUFBSTtZQUN4Q1A7WUFDQUMsY0FBYyxDQUFDLEVBQUVELFNBQVMsRUFBRSxFQUFFRixTQUFTVSxRQUFRLENBQUMsQ0FBQztRQUNuRDtJQUNGLEdBQUc7UUFBQ1Y7S0FBUztJQUViLHFCQUNFLHNCQUFDVyxTQUFHO1FBQ0ZDLFNBQVE7UUFDUkMsWUFBVztRQUNYQyxNQUFLO1FBQ0xDLGNBQVc7UUFDWEMsSUFBSTtZQUNGQyxjQUFjO1lBQ2RDLFVBQVU7WUFDVkMsWUFBWTtRQUNkOzswQkFFQSxxQkFBQ0MsaUJBQVU7Z0JBQ1RKLElBQUk7b0JBQ0ZLLE9BQU87b0JBQ1BDLFFBQVE7b0JBQ1JDLE9BQU87b0JBQ1BDLFdBQVc7Z0JBQ2I7OzBCQUdGLHFCQUFDQyxhQUFPO2dCQUFDQyxPQUFPekI7MEJBQ2QsY0FBQSxxQkFBQzBCLGdCQUFVO29CQUFDQyxNQUFNO29CQUFDUCxPQUFNO29CQUFnQlEsWUFBVztvQkFBTUMsVUFBUzs4QkFDaEU3Qjs7OzBCQUlMLHFCQUFDMEIsZ0JBQVU7Z0JBQUNOLE9BQU07Z0JBQWdCVSxTQUFRO2dCQUFNRCxVQUFTOzBCQUFPOzswQkFJaEUscUJBQUNMLGFBQU87Z0JBQUNDLE9BQU92QjswQkFDZCxjQUFBLHFCQUFDd0IsZ0JBQVU7b0JBQUNOLE9BQU07b0JBQWdCUyxVQUFTO29CQUFPbEIsU0FBUTtvQkFBUVcsT0FBTTs4QkFDckVyQjs7Ozs7QUFLWCJ9