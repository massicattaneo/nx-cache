b46bef3ce91b8282c3cd3b0ab47f3333
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "useWatchlistsTabNavigation", {
    enumerable: true,
    get: function() {
        return useWatchlistsTabNavigation;
    }
});
const _react = require("react");
const _reactrouterdom = require("react-router-dom");
const _hooks = require("@rp/react/web/common/hooks");
const getTabParamValue = (tab)=>{
    if (tab === "favorites") return "favorites";
    if (tab === "public-watchlists") return "public-watchlists";
    if (tab === "community-watchlists") return "community-watchlists";
    if (tab === "thematic-watchlists") return "thematic-watchlists";
    return "my-watchlists";
};
const getTabValueFromNum = (number)=>{
    if (number === 1) return "favorites";
    if (number === 2) return "public-watchlists";
    if (number === 3) return "community-watchlists";
    if (number === 4) return "thematic-watchlists";
    return "my-watchlists";
};
const useWatchlistsTabNavigation = (defaultTab)=>{
    const [searchParams] = (0, _reactrouterdom.useSearchParams)();
    var _searchParams_get;
    const tabParam = (_searchParams_get = searchParams.get("tab")) !== null && _searchParams_get !== void 0 ? _searchParams_get : "";
    const replace = (0, _hooks.useReplaceSearchParam)();
    const tabFromParam = getTabParamValue(tabParam);
    const [tabValue, setTabValue] = (0, _react.useState)(defaultTab !== undefined && tabFromParam === "my-watchlists" ? defaultTab : tabFromParam);
    const tabNumValue = tabValue === "my-watchlists" ? 0 : 1;
    const handleChange = (0, _react.useCallback)((newValue)=>{
        if (newValue === "my-watchlists") replace(()=>undefined);
        if (newValue === "favorites") replace(()=>"favorites");
        if (newValue === "public-watchlists") replace(()=>"public-watchlists");
        if (newValue === "community-watchlists") replace(()=>"community-watchlists");
        if (newValue === "thematic-watchlists") replace(()=>"thematic-watchlists");
        setTabValue(newValue);
    }, [
        replace
    ]);
    const handleNumChange = (0, _react.useCallback)((newValue)=>handleChange(getTabValueFromNum(newValue)), [
        handleChange
    ]);
    return {
        tabValue,
        tabNumValue,
        handleNumChange,
        handleChange
    };
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL3dhdGNobGlzdHMvc3JjL2xpYi9ob29rcy91c2VXYXRjaGxpc3RzVGFiTmF2aWdhdGlvbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VDYWxsYmFjaywgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IHsgdXNlU2VhcmNoUGFyYW1zIH0gZnJvbSBcInJlYWN0LXJvdXRlci1kb21cIlxuaW1wb3J0IHsgdXNlUmVwbGFjZVNlYXJjaFBhcmFtIH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvY29tbW9uL2hvb2tzXCJcblxuZXhwb3J0IHR5cGUgV2F0Y2hsaXN0c1RhYiA9XG4gIHwgXCJteS13YXRjaGxpc3RzXCJcbiAgfCBcImZhdm9yaXRlc1wiXG4gIHwgXCJwdWJsaWMtd2F0Y2hsaXN0c1wiXG4gIHwgXCJ0aGVtYXRpYy13YXRjaGxpc3RzXCJcbiAgfCBcImNvbW11bml0eS13YXRjaGxpc3RzXCJcbiAgfCBudWxsXG5cbmNvbnN0IGdldFRhYlBhcmFtVmFsdWUgPSAodGFiOiBzdHJpbmcpOiBXYXRjaGxpc3RzVGFiID0+IHtcbiAgaWYgKHRhYiA9PT0gXCJmYXZvcml0ZXNcIikgcmV0dXJuIFwiZmF2b3JpdGVzXCJcbiAgaWYgKHRhYiA9PT0gXCJwdWJsaWMtd2F0Y2hsaXN0c1wiKSByZXR1cm4gXCJwdWJsaWMtd2F0Y2hsaXN0c1wiXG4gIGlmICh0YWIgPT09IFwiY29tbXVuaXR5LXdhdGNobGlzdHNcIikgcmV0dXJuIFwiY29tbXVuaXR5LXdhdGNobGlzdHNcIlxuICBpZiAodGFiID09PSBcInRoZW1hdGljLXdhdGNobGlzdHNcIikgcmV0dXJuIFwidGhlbWF0aWMtd2F0Y2hsaXN0c1wiXG4gIHJldHVybiBcIm15LXdhdGNobGlzdHNcIlxufVxuXG5jb25zdCBnZXRUYWJWYWx1ZUZyb21OdW0gPSAobnVtYmVyOiBudW1iZXIpOiBXYXRjaGxpc3RzVGFiID0+IHtcbiAgaWYgKG51bWJlciA9PT0gMSkgcmV0dXJuIFwiZmF2b3JpdGVzXCJcbiAgaWYgKG51bWJlciA9PT0gMikgcmV0dXJuIFwicHVibGljLXdhdGNobGlzdHNcIlxuICBpZiAobnVtYmVyID09PSAzKSByZXR1cm4gXCJjb21tdW5pdHktd2F0Y2hsaXN0c1wiXG4gIGlmIChudW1iZXIgPT09IDQpIHJldHVybiBcInRoZW1hdGljLXdhdGNobGlzdHNcIlxuICByZXR1cm4gXCJteS13YXRjaGxpc3RzXCJcbn1cblxuZXhwb3J0IGNvbnN0IHVzZVdhdGNobGlzdHNUYWJOYXZpZ2F0aW9uID0gKGRlZmF1bHRUYWI/OiBXYXRjaGxpc3RzVGFiKSA9PiB7XG4gIGNvbnN0IFtzZWFyY2hQYXJhbXNdID0gdXNlU2VhcmNoUGFyYW1zKClcbiAgY29uc3QgdGFiUGFyYW0gPSBzZWFyY2hQYXJhbXMuZ2V0KFwidGFiXCIpID8/IFwiXCJcbiAgY29uc3QgcmVwbGFjZSA9IHVzZVJlcGxhY2VTZWFyY2hQYXJhbSgpXG4gIGNvbnN0IHRhYkZyb21QYXJhbSA9IGdldFRhYlBhcmFtVmFsdWUodGFiUGFyYW0pXG4gIGNvbnN0IFt0YWJWYWx1ZSwgc2V0VGFiVmFsdWVdID0gdXNlU3RhdGU8V2F0Y2hsaXN0c1RhYj4oXG4gICAgZGVmYXVsdFRhYiAhPT0gdW5kZWZpbmVkICYmIHRhYkZyb21QYXJhbSA9PT0gXCJteS13YXRjaGxpc3RzXCIgPyBkZWZhdWx0VGFiIDogdGFiRnJvbVBhcmFtLFxuICApXG4gIGNvbnN0IHRhYk51bVZhbHVlID0gdGFiVmFsdWUgPT09IFwibXktd2F0Y2hsaXN0c1wiID8gMCA6IDFcblxuICBjb25zdCBoYW5kbGVDaGFuZ2UgPSB1c2VDYWxsYmFjayhcbiAgICAobmV3VmFsdWU6IFdhdGNobGlzdHNUYWIpID0+IHtcbiAgICAgIGlmIChuZXdWYWx1ZSA9PT0gXCJteS13YXRjaGxpc3RzXCIpIHJlcGxhY2UoKCkgPT4gdW5kZWZpbmVkKVxuICAgICAgaWYgKG5ld1ZhbHVlID09PSBcImZhdm9yaXRlc1wiKSByZXBsYWNlKCgpID0+IFwiZmF2b3JpdGVzXCIpXG4gICAgICBpZiAobmV3VmFsdWUgPT09IFwicHVibGljLXdhdGNobGlzdHNcIikgcmVwbGFjZSgoKSA9PiBcInB1YmxpYy13YXRjaGxpc3RzXCIpXG4gICAgICBpZiAobmV3VmFsdWUgPT09IFwiY29tbXVuaXR5LXdhdGNobGlzdHNcIikgcmVwbGFjZSgoKSA9PiBcImNvbW11bml0eS13YXRjaGxpc3RzXCIpXG4gICAgICBpZiAobmV3VmFsdWUgPT09IFwidGhlbWF0aWMtd2F0Y2hsaXN0c1wiKSByZXBsYWNlKCgpID0+IFwidGhlbWF0aWMtd2F0Y2hsaXN0c1wiKVxuICAgICAgc2V0VGFiVmFsdWUobmV3VmFsdWUpXG4gICAgfSxcbiAgICBbcmVwbGFjZV0sXG4gIClcblxuICBjb25zdCBoYW5kbGVOdW1DaGFuZ2UgPSB1c2VDYWxsYmFjayhcbiAgICAobmV3VmFsdWU6IG51bWJlcikgPT4gaGFuZGxlQ2hhbmdlKGdldFRhYlZhbHVlRnJvbU51bShuZXdWYWx1ZSkpLFxuICAgIFtoYW5kbGVDaGFuZ2VdLFxuICApXG5cbiAgcmV0dXJuIHsgdGFiVmFsdWUsIHRhYk51bVZhbHVlLCBoYW5kbGVOdW1DaGFuZ2UsIGhhbmRsZUNoYW5nZSB9XG59XG4iXSwibmFtZXMiOlsidXNlV2F0Y2hsaXN0c1RhYk5hdmlnYXRpb24iLCJnZXRUYWJQYXJhbVZhbHVlIiwidGFiIiwiZ2V0VGFiVmFsdWVGcm9tTnVtIiwibnVtYmVyIiwiZGVmYXVsdFRhYiIsInNlYXJjaFBhcmFtcyIsInVzZVNlYXJjaFBhcmFtcyIsInRhYlBhcmFtIiwiZ2V0IiwicmVwbGFjZSIsInVzZVJlcGxhY2VTZWFyY2hQYXJhbSIsInRhYkZyb21QYXJhbSIsInRhYlZhbHVlIiwic2V0VGFiVmFsdWUiLCJ1c2VTdGF0ZSIsInVuZGVmaW5lZCIsInRhYk51bVZhbHVlIiwiaGFuZGxlQ2hhbmdlIiwidXNlQ2FsbGJhY2siLCJuZXdWYWx1ZSIsImhhbmRsZU51bUNoYW5nZSJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBNEJhQTs7O2VBQUFBOzs7dUJBNUJ5QjtnQ0FDTjt1QkFDTTtBQVV0QyxNQUFNQyxtQkFBbUIsQ0FBQ0M7SUFDeEIsSUFBSUEsUUFBUSxhQUFhLE9BQU87SUFDaEMsSUFBSUEsUUFBUSxxQkFBcUIsT0FBTztJQUN4QyxJQUFJQSxRQUFRLHdCQUF3QixPQUFPO0lBQzNDLElBQUlBLFFBQVEsdUJBQXVCLE9BQU87SUFDMUMsT0FBTztBQUNUO0FBRUEsTUFBTUMscUJBQXFCLENBQUNDO0lBQzFCLElBQUlBLFdBQVcsR0FBRyxPQUFPO0lBQ3pCLElBQUlBLFdBQVcsR0FBRyxPQUFPO0lBQ3pCLElBQUlBLFdBQVcsR0FBRyxPQUFPO0lBQ3pCLElBQUlBLFdBQVcsR0FBRyxPQUFPO0lBQ3pCLE9BQU87QUFDVDtBQUVPLE1BQU1KLDZCQUE2QixDQUFDSztJQUN6QyxNQUFNLENBQUNDLGFBQWEsR0FBR0MsSUFBQUEsK0JBQWU7UUFDckJEO0lBQWpCLE1BQU1FLFdBQVdGLENBQUFBLG9CQUFBQSxhQUFhRyxHQUFHLENBQUMsb0JBQWpCSCwrQkFBQUEsb0JBQTJCO0lBQzVDLE1BQU1JLFVBQVVDLElBQUFBLDRCQUFxQjtJQUNyQyxNQUFNQyxlQUFlWCxpQkFBaUJPO0lBQ3RDLE1BQU0sQ0FBQ0ssVUFBVUMsWUFBWSxHQUFHQyxJQUFBQSxlQUFRLEVBQ3RDVixlQUFlVyxhQUFhSixpQkFBaUIsa0JBQWtCUCxhQUFhTztJQUU5RSxNQUFNSyxjQUFjSixhQUFhLGtCQUFrQixJQUFJO0lBRXZELE1BQU1LLGVBQWVDLElBQUFBLGtCQUFXLEVBQzlCLENBQUNDO1FBQ0MsSUFBSUEsYUFBYSxpQkFBaUJWLFFBQVEsSUFBTU07UUFDaEQsSUFBSUksYUFBYSxhQUFhVixRQUFRLElBQU07UUFDNUMsSUFBSVUsYUFBYSxxQkFBcUJWLFFBQVEsSUFBTTtRQUNwRCxJQUFJVSxhQUFhLHdCQUF3QlYsUUFBUSxJQUFNO1FBQ3ZELElBQUlVLGFBQWEsdUJBQXVCVixRQUFRLElBQU07UUFDdERJLFlBQVlNO0lBQ2QsR0FDQTtRQUFDVjtLQUFRO0lBR1gsTUFBTVcsa0JBQWtCRixJQUFBQSxrQkFBVyxFQUNqQyxDQUFDQyxXQUFxQkYsYUFBYWYsbUJBQW1CaUIsWUFDdEQ7UUFBQ0Y7S0FBYTtJQUdoQixPQUFPO1FBQUVMO1FBQVVJO1FBQWFJO1FBQWlCSDtJQUFhO0FBQ2hFIn0=