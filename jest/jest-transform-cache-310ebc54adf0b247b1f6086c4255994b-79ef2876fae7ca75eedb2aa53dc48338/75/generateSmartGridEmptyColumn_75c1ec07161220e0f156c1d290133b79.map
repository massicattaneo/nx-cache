{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/watchlists/src/lib/WatchlistSmartGrid/generateSmartGridEmptyColumn.tsx"],"sourcesContent":["import { z } from \"zod\"\nimport { CqsItem, CqsScopeSchema } from \"@rp/common/api-types\"\nimport { getUuid } from \"@rp/common/utils\"\nimport { SmartGridColumn } from \"./WatchlistSmartGrid\"\n\ntype EmptyColProps = {\n  id?: string\n  title: string\n  prompt: string\n  scope?: z.infer<typeof CqsScopeSchema>\n  timeRange?: string\n  entities: Array<CqsItem>\n}\n\nfunction generateSmartGridEmptyColumn({\n  id = getUuid(),\n  title,\n  prompt,\n  scope,\n  timeRange,\n  entities,\n}: EmptyColProps): SmartGridColumn {\n  return {\n    id,\n    title,\n    prompt,\n    chatId: \"\",\n    scope,\n    timeRange: timeRange || \"last 30 days\",\n    rows: entities.reduce((acc, row) => {\n      return {\n        ...acc,\n        [row.key]: {\n          isLoading: true,\n          cqsKey: row.key,\n          cqsName: row.name,\n        },\n      }\n    }, {}),\n    chunkMap: {},\n    externalMap: {},\n    status: \"IDLE\",\n  }\n}\n\nexport { generateSmartGridEmptyColumn }\n"],"names":["generateSmartGridEmptyColumn","id","getUuid","title","prompt","scope","timeRange","entities","chatId","rows","reduce","acc","row","key","isLoading","cqsKey","cqsName","name","chunkMap","externalMap","status"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BA6CSA;;;eAAAA;;;uBA3Ce;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYxB,SAASA,6BAA6B,EACpCC,KAAKC,IAAAA,cAAO,GAAE,EACdC,KAAK,EACLC,MAAM,EACNC,KAAK,EACLC,SAAS,EACTC,QAAQ,EACM;IACd,OAAO;QACLN;QACAE;QACAC;QACAI,QAAQ;QACRH;QACAC,WAAWA,aAAa;QACxBG,MAAMF,SAASG,MAAM,CAAC,CAACC,KAAKC;YAC1B,OAAO,wCACFD;gBACH,CAACC,IAAIC,GAAG,CAAC,EAAE;oBACTC,WAAW;oBACXC,QAAQH,IAAIC,GAAG;oBACfG,SAASJ,IAAIK,IAAI;gBACnB;;QAEJ,GAAG,CAAC;QACJC,UAAU,CAAC;QACXC,aAAa,CAAC;QACdC,QAAQ;IACV;AACF"}