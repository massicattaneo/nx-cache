27a05c2e995074ac0f94b54d7ca01f80
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "WatchlistsCardViewToggles", {
    enumerable: true,
    get: function() {
        return WatchlistsCardViewToggles;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _compositecomponents = require("@rp/react/web/common/composite-components");
const _core = require("@rp/react/web/mui/core");
const _icons = require("@rp/react/web/mui/icons");
const WatchlistsCardViewToggles = ({ modeView, setModeView })=>{
    const handleChange = (_event, newValue)=>{
        if (newValue === "list") return setModeView("list");
        setModeView("card");
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
        role: "group",
        sx: {
            position: "absolute",
            top: 16,
            right: 24,
            zIndex: 1
        },
        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_compositecomponents.MonochromeToggleButtonGroup, {
            exclusive: true,
            value: modeView,
            onChange: handleChange,
            size: "large",
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.ToggleButton, {
                    "aria-label": "Card view",
                    value: "card",
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.ViewModule, {})
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.ToggleButton, {
                    "aria-label": "List view",
                    value: "list",
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.ViewList, {})
                })
            ]
        })
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL3dhdGNobGlzdHMvc3JjL2xpYi9XYXRjaGxpc3RzQ2FyZFZpZXcvV2F0Y2hsaXN0c0NhcmRWaWV3VG9nZ2xlcy50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlzcGF0Y2gsIE1vdXNlRXZlbnQsIFNldFN0YXRlQWN0aW9uIH0gZnJvbSBcInJlYWN0XCJcbmltcG9ydCB7IE1vbm9jaHJvbWVUb2dnbGVCdXR0b25Hcm91cCB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL2NvbW1vbi9jb21wb3NpdGUtY29tcG9uZW50c1wiXG5pbXBvcnQgeyBCb3gsIFRvZ2dsZUJ1dHRvbiB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL211aS9jb3JlXCJcbmltcG9ydCB7IFZpZXdMaXN0LCBWaWV3TW9kdWxlIH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvbXVpL2ljb25zXCJcblxuZXhwb3J0IHR5cGUgV2F0Y2hsaXN0c01vZGVWaWV3ID0gXCJjYXJkXCIgfCBcImxpc3RcIlxuXG50eXBlIFByb3BzID0ge1xuICBtb2RlVmlldzogV2F0Y2hsaXN0c01vZGVWaWV3XG4gIHNldE1vZGVWaWV3OiBEaXNwYXRjaDxTZXRTdGF0ZUFjdGlvbjxXYXRjaGxpc3RzTW9kZVZpZXc+PlxufVxuXG5leHBvcnQgY29uc3QgV2F0Y2hsaXN0c0NhcmRWaWV3VG9nZ2xlcyA9ICh7IG1vZGVWaWV3LCBzZXRNb2RlVmlldyB9OiBQcm9wcykgPT4ge1xuICBjb25zdCBoYW5kbGVDaGFuZ2UgPSAoX2V2ZW50OiBNb3VzZUV2ZW50PEhUTUxFbGVtZW50PiwgbmV3VmFsdWU6IHN0cmluZyB8IG51bGwpID0+IHtcbiAgICBpZiAobmV3VmFsdWUgPT09IFwibGlzdFwiKSByZXR1cm4gc2V0TW9kZVZpZXcoXCJsaXN0XCIpXG4gICAgc2V0TW9kZVZpZXcoXCJjYXJkXCIpXG4gIH1cblxuICByZXR1cm4gKFxuICAgIDxCb3ggcm9sZT1cImdyb3VwXCIgc3g9e3sgcG9zaXRpb246IFwiYWJzb2x1dGVcIiwgdG9wOiAxNiwgcmlnaHQ6IDI0LCB6SW5kZXg6IDEgfX0+XG4gICAgICA8TW9ub2Nocm9tZVRvZ2dsZUJ1dHRvbkdyb3VwXG4gICAgICAgIGV4Y2x1c2l2ZVxuICAgICAgICB2YWx1ZT17bW9kZVZpZXd9XG4gICAgICAgIG9uQ2hhbmdlPXtoYW5kbGVDaGFuZ2V9XG4gICAgICAgIHNpemU9e1wibGFyZ2VcIn1cbiAgICAgID5cbiAgICAgICAgPFRvZ2dsZUJ1dHRvbiBhcmlhLWxhYmVsPVwiQ2FyZCB2aWV3XCIgdmFsdWU9e1wiY2FyZFwifT5cbiAgICAgICAgICA8Vmlld01vZHVsZSAvPlxuICAgICAgICA8L1RvZ2dsZUJ1dHRvbj5cbiAgICAgICAgPFRvZ2dsZUJ1dHRvbiBhcmlhLWxhYmVsPVwiTGlzdCB2aWV3XCIgdmFsdWU9e1wibGlzdFwifT5cbiAgICAgICAgICA8Vmlld0xpc3QgLz5cbiAgICAgICAgPC9Ub2dnbGVCdXR0b24+XG4gICAgICA8L01vbm9jaHJvbWVUb2dnbGVCdXR0b25Hcm91cD5cbiAgICA8L0JveD5cbiAgKVxufVxuIl0sIm5hbWVzIjpbIldhdGNobGlzdHNDYXJkVmlld1RvZ2dsZXMiLCJtb2RlVmlldyIsInNldE1vZGVWaWV3IiwiaGFuZGxlQ2hhbmdlIiwiX2V2ZW50IiwibmV3VmFsdWUiLCJCb3giLCJyb2xlIiwic3giLCJwb3NpdGlvbiIsInRvcCIsInJpZ2h0IiwiekluZGV4IiwiTW9ub2Nocm9tZVRvZ2dsZUJ1dHRvbkdyb3VwIiwiZXhjbHVzaXZlIiwidmFsdWUiLCJvbkNoYW5nZSIsInNpemUiLCJUb2dnbGVCdXR0b24iLCJhcmlhLWxhYmVsIiwiVmlld01vZHVsZSIsIlZpZXdMaXN0Il0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBWWFBOzs7ZUFBQUE7Ozs7cUNBWCtCO3NCQUNWO3VCQUNHO0FBUzlCLE1BQU1BLDRCQUE0QixDQUFDLEVBQUVDLFFBQVEsRUFBRUMsV0FBVyxFQUFTO0lBQ3hFLE1BQU1DLGVBQWUsQ0FBQ0MsUUFBaUNDO1FBQ3JELElBQUlBLGFBQWEsUUFBUSxPQUFPSCxZQUFZO1FBQzVDQSxZQUFZO0lBQ2Q7SUFFQSxxQkFDRSxxQkFBQ0ksU0FBRztRQUFDQyxNQUFLO1FBQVFDLElBQUk7WUFBRUMsVUFBVTtZQUFZQyxLQUFLO1lBQUlDLE9BQU87WUFBSUMsUUFBUTtRQUFFO2tCQUMxRSxjQUFBLHNCQUFDQyxnREFBMkI7WUFDMUJDLFNBQVM7WUFDVEMsT0FBT2Q7WUFDUGUsVUFBVWI7WUFDVmMsTUFBTTs7OEJBRU4scUJBQUNDLGtCQUFZO29CQUFDQyxjQUFXO29CQUFZSixPQUFPOzhCQUMxQyxjQUFBLHFCQUFDSyxpQkFBVTs7OEJBRWIscUJBQUNGLGtCQUFZO29CQUFDQyxjQUFXO29CQUFZSixPQUFPOzhCQUMxQyxjQUFBLHFCQUFDTSxlQUFROzs7OztBQUtuQiJ9