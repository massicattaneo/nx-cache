b92fb77dacdf7373a9966a616ab7ab13
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "isAdminUser", {
    enumerable: true,
    get: function() {
        return isAdminUser;
    }
});
const isAdminUser = (email)=>{
    return !!email && !!email.match(/.+@(ravenpack\.com|bigdata\.com)$/i);
};
 // Breaking down the regular expression above:
 // .+: This part matches one or more characters before the "@" symbol in an email address.
 // @: This matches the "@" symbol, which is a required part of an email address.
 // (ravenpack\.com|bigdata\.com): This is a capturing group that matches either "ravenpack.com" or "bigdata.com." The | (OR) operator is used to specify the two possible domain options.
 // $: This is the end-of-line anchor, which ensures that the matched text must be at the end of the line.
 // i: The i flag at the end of the regular expression makes the matching case-insensitive, so it will match email addresses regardless of the letter casing.
 // In summary, this regular expression will match email addresses where the domain is either "ravenpack.com" or "bigdata.com," and it will match regardless of the letter casing. The domain must appear at the end of the email address due to the end-of-line anchor.

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvY29tbW9uL3V0aWxzL3NyYy9saWIvaXNBZG1pblVzZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgaXNBZG1pblVzZXIgPSAoZW1haWw6IHN0cmluZyB8IHVuZGVmaW5lZCkgPT4ge1xuICByZXR1cm4gISFlbWFpbCAmJiAhIWVtYWlsLm1hdGNoKC8uK0AocmF2ZW5wYWNrXFwuY29tfGJpZ2RhdGFcXC5jb20pJC9pKVxufVxuXG5leHBvcnQgeyBpc0FkbWluVXNlciB9XG5cbi8vIEJyZWFraW5nIGRvd24gdGhlIHJlZ3VsYXIgZXhwcmVzc2lvbiBhYm92ZTpcblxuLy8gLis6IFRoaXMgcGFydCBtYXRjaGVzIG9uZSBvciBtb3JlIGNoYXJhY3RlcnMgYmVmb3JlIHRoZSBcIkBcIiBzeW1ib2wgaW4gYW4gZW1haWwgYWRkcmVzcy5cblxuLy8gQDogVGhpcyBtYXRjaGVzIHRoZSBcIkBcIiBzeW1ib2wsIHdoaWNoIGlzIGEgcmVxdWlyZWQgcGFydCBvZiBhbiBlbWFpbCBhZGRyZXNzLlxuXG4vLyAocmF2ZW5wYWNrXFwuY29tfGJpZ2RhdGFcXC5jb20pOiBUaGlzIGlzIGEgY2FwdHVyaW5nIGdyb3VwIHRoYXQgbWF0Y2hlcyBlaXRoZXIgXCJyYXZlbnBhY2suY29tXCIgb3IgXCJiaWdkYXRhLmNvbS5cIiBUaGUgfCAoT1IpIG9wZXJhdG9yIGlzIHVzZWQgdG8gc3BlY2lmeSB0aGUgdHdvIHBvc3NpYmxlIGRvbWFpbiBvcHRpb25zLlxuXG4vLyAkOiBUaGlzIGlzIHRoZSBlbmQtb2YtbGluZSBhbmNob3IsIHdoaWNoIGVuc3VyZXMgdGhhdCB0aGUgbWF0Y2hlZCB0ZXh0IG11c3QgYmUgYXQgdGhlIGVuZCBvZiB0aGUgbGluZS5cblxuLy8gaTogVGhlIGkgZmxhZyBhdCB0aGUgZW5kIG9mIHRoZSByZWd1bGFyIGV4cHJlc3Npb24gbWFrZXMgdGhlIG1hdGNoaW5nIGNhc2UtaW5zZW5zaXRpdmUsIHNvIGl0IHdpbGwgbWF0Y2ggZW1haWwgYWRkcmVzc2VzIHJlZ2FyZGxlc3Mgb2YgdGhlIGxldHRlciBjYXNpbmcuXG5cbi8vIEluIHN1bW1hcnksIHRoaXMgcmVndWxhciBleHByZXNzaW9uIHdpbGwgbWF0Y2ggZW1haWwgYWRkcmVzc2VzIHdoZXJlIHRoZSBkb21haW4gaXMgZWl0aGVyIFwicmF2ZW5wYWNrLmNvbVwiIG9yIFwiYmlnZGF0YS5jb20sXCIgYW5kIGl0IHdpbGwgbWF0Y2ggcmVnYXJkbGVzcyBvZiB0aGUgbGV0dGVyIGNhc2luZy4gVGhlIGRvbWFpbiBtdXN0IGFwcGVhciBhdCB0aGUgZW5kIG9mIHRoZSBlbWFpbCBhZGRyZXNzIGR1ZSB0byB0aGUgZW5kLW9mLWxpbmUgYW5jaG9yLlxuIl0sIm5hbWVzIjpbImlzQWRtaW5Vc2VyIiwiZW1haWwiLCJtYXRjaCJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQUlTQTs7O2VBQUFBOzs7QUFKVCxNQUFNQSxjQUFjLENBQUNDO0lBQ25CLE9BQU8sQ0FBQyxDQUFDQSxTQUFTLENBQUMsQ0FBQ0EsTUFBTUMsS0FBSyxDQUFDO0FBQ2xDO0NBSUEsOENBQThDO0NBRTlDLDBGQUEwRjtDQUUxRixnRkFBZ0Y7Q0FFaEYseUxBQXlMO0NBRXpMLHlHQUF5RztDQUV6Ryw0SkFBNEo7Q0FFNUosdVFBQXVRIn0=