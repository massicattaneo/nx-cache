344b3722dff920ad15b90cbebbc7dcee
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "generateSmartGridEmptyColumn", {
    enumerable: true,
    get: function() {
        return generateSmartGridEmptyColumn;
    }
});
const _utils = require("@rp/common/utils");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function generateSmartGridEmptyColumn({ id = (0, _utils.getUuid)(), title, prompt, scope, timeRange, entities }) {
    return {
        id,
        title,
        prompt,
        chatId: "",
        scope,
        timeRange: timeRange || "last 30 days",
        rows: entities.reduce((acc, row)=>{
            return _object_spread_props(_object_spread({}, acc), {
                [row.key]: {
                    isLoading: true,
                    cqsKey: row.key,
                    cqsName: row.name
                }
            });
        }, {}),
        chunkMap: {},
        externalMap: {},
        status: "IDLE"
    };
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL3dhdGNobGlzdHMvc3JjL2xpYi9XYXRjaGxpc3RTbWFydEdyaWQvZ2VuZXJhdGVTbWFydEdyaWRFbXB0eUNvbHVtbi50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgeiB9IGZyb20gXCJ6b2RcIlxuaW1wb3J0IHsgQ3FzSXRlbSwgQ3FzU2NvcGVTY2hlbWEgfSBmcm9tIFwiQHJwL2NvbW1vbi9hcGktdHlwZXNcIlxuaW1wb3J0IHsgZ2V0VXVpZCB9IGZyb20gXCJAcnAvY29tbW9uL3V0aWxzXCJcbmltcG9ydCB7IFNtYXJ0R3JpZENvbHVtbiB9IGZyb20gXCIuL1dhdGNobGlzdFNtYXJ0R3JpZFwiXG5cbnR5cGUgRW1wdHlDb2xQcm9wcyA9IHtcbiAgaWQ/OiBzdHJpbmdcbiAgdGl0bGU6IHN0cmluZ1xuICBwcm9tcHQ6IHN0cmluZ1xuICBzY29wZT86IHouaW5mZXI8dHlwZW9mIENxc1Njb3BlU2NoZW1hPlxuICB0aW1lUmFuZ2U/OiBzdHJpbmdcbiAgZW50aXRpZXM6IEFycmF5PENxc0l0ZW0+XG59XG5cbmZ1bmN0aW9uIGdlbmVyYXRlU21hcnRHcmlkRW1wdHlDb2x1bW4oe1xuICBpZCA9IGdldFV1aWQoKSxcbiAgdGl0bGUsXG4gIHByb21wdCxcbiAgc2NvcGUsXG4gIHRpbWVSYW5nZSxcbiAgZW50aXRpZXMsXG59OiBFbXB0eUNvbFByb3BzKTogU21hcnRHcmlkQ29sdW1uIHtcbiAgcmV0dXJuIHtcbiAgICBpZCxcbiAgICB0aXRsZSxcbiAgICBwcm9tcHQsXG4gICAgY2hhdElkOiBcIlwiLFxuICAgIHNjb3BlLFxuICAgIHRpbWVSYW5nZTogdGltZVJhbmdlIHx8IFwibGFzdCAzMCBkYXlzXCIsXG4gICAgcm93czogZW50aXRpZXMucmVkdWNlKChhY2MsIHJvdykgPT4ge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgLi4uYWNjLFxuICAgICAgICBbcm93LmtleV06IHtcbiAgICAgICAgICBpc0xvYWRpbmc6IHRydWUsXG4gICAgICAgICAgY3FzS2V5OiByb3cua2V5LFxuICAgICAgICAgIGNxc05hbWU6IHJvdy5uYW1lLFxuICAgICAgICB9LFxuICAgICAgfVxuICAgIH0sIHt9KSxcbiAgICBjaHVua01hcDoge30sXG4gICAgZXh0ZXJuYWxNYXA6IHt9LFxuICAgIHN0YXR1czogXCJJRExFXCIsXG4gIH1cbn1cblxuZXhwb3J0IHsgZ2VuZXJhdGVTbWFydEdyaWRFbXB0eUNvbHVtbiB9XG4iXSwibmFtZXMiOlsiZ2VuZXJhdGVTbWFydEdyaWRFbXB0eUNvbHVtbiIsImlkIiwiZ2V0VXVpZCIsInRpdGxlIiwicHJvbXB0Iiwic2NvcGUiLCJ0aW1lUmFuZ2UiLCJlbnRpdGllcyIsImNoYXRJZCIsInJvd3MiLCJyZWR1Y2UiLCJhY2MiLCJyb3ciLCJrZXkiLCJpc0xvYWRpbmciLCJjcXNLZXkiLCJjcXNOYW1lIiwibmFtZSIsImNodW5rTWFwIiwiZXh0ZXJuYWxNYXAiLCJzdGF0dXMiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQTZDU0E7OztlQUFBQTs7O3VCQTNDZTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFZeEIsU0FBU0EsNkJBQTZCLEVBQ3BDQyxLQUFLQyxJQUFBQSxjQUFPLEdBQUUsRUFDZEMsS0FBSyxFQUNMQyxNQUFNLEVBQ05DLEtBQUssRUFDTEMsU0FBUyxFQUNUQyxRQUFRLEVBQ007SUFDZCxPQUFPO1FBQ0xOO1FBQ0FFO1FBQ0FDO1FBQ0FJLFFBQVE7UUFDUkg7UUFDQUMsV0FBV0EsYUFBYTtRQUN4QkcsTUFBTUYsU0FBU0csTUFBTSxDQUFDLENBQUNDLEtBQUtDO1lBQzFCLE9BQU8sd0NBQ0ZEO2dCQUNILENBQUNDLElBQUlDLEdBQUcsQ0FBQyxFQUFFO29CQUNUQyxXQUFXO29CQUNYQyxRQUFRSCxJQUFJQyxHQUFHO29CQUNmRyxTQUFTSixJQUFJSyxJQUFJO2dCQUNuQjs7UUFFSixHQUFHLENBQUM7UUFDSkMsVUFBVSxDQUFDO1FBQ1hDLGFBQWEsQ0FBQztRQUNkQyxRQUFRO0lBQ1Y7QUFDRiJ9