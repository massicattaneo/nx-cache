facd1af6470149404278bf639987179b
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "reduce", {
    enumerable: true,
    get: function() {
        return reduce;
    }
});
const _js_utils = require("../utils/js_utils.js");
const _dirtyHandlerIds = require("./dirtyHandlerIds.js");
const _dragOffset = require("./dragOffset.js");
const _dragOperation = require("./dragOperation.js");
const _refCount = require("./refCount.js");
const _stateId = require("./stateId.js");
function _defineProperty(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _objectSpread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === 'function') {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _defineProperty(target, key, source[key]);
        });
    }
    return target;
}
function reduce(state = {}, action) {
    return {
        dirtyHandlerIds: (0, _dirtyHandlerIds.reduce)(state.dirtyHandlerIds, {
            type: action.type,
            payload: _objectSpread({}, action.payload, {
                prevTargetIds: (0, _js_utils.get)(state, 'dragOperation.targetIds', [])
            })
        }),
        dragOffset: (0, _dragOffset.reduce)(state.dragOffset, action),
        refCount: (0, _refCount.reduce)(state.refCount, action),
        dragOperation: (0, _dragOperation.reduce)(state.dragOperation, action),
        stateId: (0, _stateId.reduce)(state.stateId)
    };
} //# sourceMappingURL=index.js.map

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9yZWR1Y2Vycy9pbmRleC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IEFjdGlvbiB9IGZyb20gJy4uL2ludGVyZmFjZXMuanMnXG5pbXBvcnQgeyBnZXQgfSBmcm9tICcuLi91dGlscy9qc191dGlscy5qcydcbmltcG9ydCB0eXBlIHsgU3RhdGUgYXMgRGlydHlIYW5kbGVySWRzU3RhdGUgfSBmcm9tICcuL2RpcnR5SGFuZGxlcklkcy5qcydcbmltcG9ydCB7IHJlZHVjZSBhcyBkaXJ0eUhhbmRsZXJJZHMgfSBmcm9tICcuL2RpcnR5SGFuZGxlcklkcy5qcydcbmltcG9ydCB0eXBlIHsgU3RhdGUgYXMgRHJhZ09mZnNldFN0YXRlIH0gZnJvbSAnLi9kcmFnT2Zmc2V0LmpzJ1xuaW1wb3J0IHsgcmVkdWNlIGFzIGRyYWdPZmZzZXQgfSBmcm9tICcuL2RyYWdPZmZzZXQuanMnXG5pbXBvcnQgdHlwZSB7IFN0YXRlIGFzIERyYWdPcGVyYXRpb25TdGF0ZSB9IGZyb20gJy4vZHJhZ09wZXJhdGlvbi5qcydcbmltcG9ydCB7IHJlZHVjZSBhcyBkcmFnT3BlcmF0aW9uIH0gZnJvbSAnLi9kcmFnT3BlcmF0aW9uLmpzJ1xuaW1wb3J0IHR5cGUgeyBTdGF0ZSBhcyBSZWZDb3VudFN0YXRlIH0gZnJvbSAnLi9yZWZDb3VudC5qcydcbmltcG9ydCB7IHJlZHVjZSBhcyByZWZDb3VudCB9IGZyb20gJy4vcmVmQ291bnQuanMnXG5pbXBvcnQgdHlwZSB7IFN0YXRlIGFzIFN0YXRlSWRTdGF0ZSB9IGZyb20gJy4vc3RhdGVJZC5qcydcbmltcG9ydCB7IHJlZHVjZSBhcyBzdGF0ZUlkIH0gZnJvbSAnLi9zdGF0ZUlkLmpzJ1xuXG5leHBvcnQgaW50ZXJmYWNlIFN0YXRlIHtcblx0ZGlydHlIYW5kbGVySWRzOiBEaXJ0eUhhbmRsZXJJZHNTdGF0ZVxuXHRkcmFnT2Zmc2V0OiBEcmFnT2Zmc2V0U3RhdGVcblx0cmVmQ291bnQ6IFJlZkNvdW50U3RhdGVcblx0ZHJhZ09wZXJhdGlvbjogRHJhZ09wZXJhdGlvblN0YXRlXG5cdHN0YXRlSWQ6IFN0YXRlSWRTdGF0ZVxufVxuXG5leHBvcnQgZnVuY3Rpb24gcmVkdWNlKHN0YXRlOiBTdGF0ZSA9IHt9IGFzIFN0YXRlLCBhY3Rpb246IEFjdGlvbjxhbnk+KTogU3RhdGUge1xuXHRyZXR1cm4ge1xuXHRcdGRpcnR5SGFuZGxlcklkczogZGlydHlIYW5kbGVySWRzKHN0YXRlLmRpcnR5SGFuZGxlcklkcywge1xuXHRcdFx0dHlwZTogYWN0aW9uLnR5cGUsXG5cdFx0XHRwYXlsb2FkOiB7XG5cdFx0XHRcdC4uLmFjdGlvbi5wYXlsb2FkLFxuXHRcdFx0XHRwcmV2VGFyZ2V0SWRzOiBnZXQ8c3RyaW5nW10+KHN0YXRlLCAnZHJhZ09wZXJhdGlvbi50YXJnZXRJZHMnLCBbXSksXG5cdFx0XHR9LFxuXHRcdH0pLFxuXHRcdGRyYWdPZmZzZXQ6IGRyYWdPZmZzZXQoc3RhdGUuZHJhZ09mZnNldCwgYWN0aW9uKSxcblx0XHRyZWZDb3VudDogcmVmQ291bnQoc3RhdGUucmVmQ291bnQsIGFjdGlvbiksXG5cdFx0ZHJhZ09wZXJhdGlvbjogZHJhZ09wZXJhdGlvbihzdGF0ZS5kcmFnT3BlcmF0aW9uLCBhY3Rpb24pLFxuXHRcdHN0YXRlSWQ6IHN0YXRlSWQoc3RhdGUuc3RhdGVJZCksXG5cdH1cbn1cbiJdLCJuYW1lcyI6WyJyZWR1Y2UiLCJfZGVmaW5lUHJvcGVydHkiLCJvYmoiLCJrZXkiLCJ2YWx1ZSIsInN0YXRlIiwiYWN0aW9uIiwiZGlydHlIYW5kbGVySWRzIiwidHlwZSIsInBheWxvYWQiLCJfb2JqZWN0U3ByZWFkIiwicHJldlRhcmdldElkcyIsImdldCIsImRyYWdPZmZzZXQiLCJyZWZDb3VudCIsImRyYWdPcGVyYXRpb24iLCJzdGF0ZUlkIl0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBcUJnQkE7OztlQUFBQTs7OzBCQXBCSTtpQ0FFc0I7NEJBRUw7K0JBRUc7MEJBRUw7eUJBRUQ7QUFYbEMsU0FBQUMsZ0JBQUFDLEdBQUEsRUFBQUMsR0FBQSxFQUFBQyxLQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBcUJPLFNBQVNKLE9BQU9LLFFBQWUsQ0FBQSxDQUFFLEVBQVdDLE1BQW1CO0lBQ3JFLE9BQU87UUFDTkMsaUJBQWlCQSxJQUFBQSx1QkFBZSxFQUFDRixNQUFNRSxlQUFlLEVBQUU7WUFDdkRDLE1BQU1GLE9BQU9FLElBQUk7WUFDakJDLFNBQVNDLGNBQUEsQ0FBQSxHQUNMSixPQUFPRyxPQUFPLEVBQUE7Z0JBQ2pCRSxlQUFlQyxJQUFBQSxhQUFHLEVBQVdQLE9BQU8sMkJBQTJCLEVBQUU7OztRQUduRVEsWUFBWUEsSUFBQUEsa0JBQVUsRUFBQ1IsTUFBTVEsVUFBVSxFQUFFUDtRQUN6Q1EsVUFBVUEsSUFBQUEsZ0JBQVEsRUFBQ1QsTUFBTVMsUUFBUSxFQUFFUjtRQUNuQ1MsZUFBZUEsSUFBQUEscUJBQWEsRUFBQ1YsTUFBTVUsYUFBYSxFQUFFVDtRQUNsRFUsU0FBU0EsSUFBQUEsZUFBTyxFQUFDWCxNQUFNVyxPQUFPIn0=