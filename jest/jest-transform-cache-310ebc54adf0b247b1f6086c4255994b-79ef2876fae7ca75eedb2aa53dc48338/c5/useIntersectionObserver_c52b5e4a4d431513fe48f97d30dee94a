e0eb65acc2dc9d1d009b3225d0cde6e3
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "useIntersectionObserver", {
    enumerable: true,
    get: function() {
        return useIntersectionObserver;
    }
});
const _react = require("react");
/**
 * Custom hook that sets up an Intersection Observer to track the visibility of an element.
 * @param element - The element to observe.
 * @param options - The options to configure the Intersection Observer.
 * @param observerCallback - The callback function to be called when the element's visibility changes.
 */ const useIntersectionObserver = (element, options, observerCallback)=>{
    (0, _react.useEffect)(()=>{
        if (!element || !("IntersectionObserver" in window)) {
            return undefined;
        }
        const observer = new IntersectionObserver(observerCallback, options);
        observer.observe(element);
        return ()=>{
            observer.disconnect();
        };
    }, [
        element,
        options,
        observerCallback
    ]);
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9ob29rcy9zcmMvdXNlSW50ZXJzZWN0aW9uT2JzZXJ2ZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCJcblxuLyoqXG4gKiBDdXN0b20gaG9vayB0aGF0IHNldHMgdXAgYW4gSW50ZXJzZWN0aW9uIE9ic2VydmVyIHRvIHRyYWNrIHRoZSB2aXNpYmlsaXR5IG9mIGFuIGVsZW1lbnQuXG4gKiBAcGFyYW0gZWxlbWVudCAtIFRoZSBlbGVtZW50IHRvIG9ic2VydmUuXG4gKiBAcGFyYW0gb3B0aW9ucyAtIFRoZSBvcHRpb25zIHRvIGNvbmZpZ3VyZSB0aGUgSW50ZXJzZWN0aW9uIE9ic2VydmVyLlxuICogQHBhcmFtIG9ic2VydmVyQ2FsbGJhY2sgLSBUaGUgY2FsbGJhY2sgZnVuY3Rpb24gdG8gYmUgY2FsbGVkIHdoZW4gdGhlIGVsZW1lbnQncyB2aXNpYmlsaXR5IGNoYW5nZXMuXG4gKi9cblxuY29uc3QgdXNlSW50ZXJzZWN0aW9uT2JzZXJ2ZXIgPSAoXG4gIGVsZW1lbnQ6IEhUTUxFbGVtZW50IHwgbnVsbCxcbiAgb3B0aW9uczogSW50ZXJzZWN0aW9uT2JzZXJ2ZXJJbml0IHwgdW5kZWZpbmVkLFxuICBvYnNlcnZlckNhbGxiYWNrOiBJbnRlcnNlY3Rpb25PYnNlcnZlckNhbGxiYWNrLFxuKTogdm9pZCA9PiB7XG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKCFlbGVtZW50IHx8ICEoXCJJbnRlcnNlY3Rpb25PYnNlcnZlclwiIGluIHdpbmRvdykpIHtcbiAgICAgIHJldHVybiB1bmRlZmluZWRcbiAgICB9XG5cbiAgICBjb25zdCBvYnNlcnZlciA9IG5ldyBJbnRlcnNlY3Rpb25PYnNlcnZlcihvYnNlcnZlckNhbGxiYWNrLCBvcHRpb25zKVxuXG4gICAgb2JzZXJ2ZXIub2JzZXJ2ZShlbGVtZW50KVxuXG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIG9ic2VydmVyLmRpc2Nvbm5lY3QoKVxuICAgIH1cbiAgfSwgW2VsZW1lbnQsIG9wdGlvbnMsIG9ic2VydmVyQ2FsbGJhY2tdKVxufVxuXG5leHBvcnQgeyB1c2VJbnRlcnNlY3Rpb25PYnNlcnZlciB9XG4iXSwibmFtZXMiOlsidXNlSW50ZXJzZWN0aW9uT2JzZXJ2ZXIiLCJlbGVtZW50Iiwib3B0aW9ucyIsIm9ic2VydmVyQ2FsbGJhY2siLCJ1c2VFZmZlY3QiLCJ3aW5kb3ciLCJ1bmRlZmluZWQiLCJvYnNlcnZlciIsIkludGVyc2VjdGlvbk9ic2VydmVyIiwib2JzZXJ2ZSIsImRpc2Nvbm5lY3QiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkE2QlNBOzs7ZUFBQUE7Ozt1QkE3QmlCO0FBRTFCOzs7OztDQUtDLEdBRUQsTUFBTUEsMEJBQTBCLENBQzlCQyxTQUNBQyxTQUNBQztJQUVBQyxJQUFBQSxnQkFBUyxFQUFDO1FBQ1IsSUFBSSxDQUFDSCxXQUFXLENBQUUsQ0FBQSwwQkFBMEJJLE1BQUssR0FBSTtZQUNuRCxPQUFPQztRQUNUO1FBRUEsTUFBTUMsV0FBVyxJQUFJQyxxQkFBcUJMLGtCQUFrQkQ7UUFFNURLLFNBQVNFLE9BQU8sQ0FBQ1I7UUFFakIsT0FBTztZQUNMTSxTQUFTRyxVQUFVO1FBQ3JCO0lBQ0YsR0FBRztRQUFDVDtRQUFTQztRQUFTQztLQUFpQjtBQUN6QyJ9