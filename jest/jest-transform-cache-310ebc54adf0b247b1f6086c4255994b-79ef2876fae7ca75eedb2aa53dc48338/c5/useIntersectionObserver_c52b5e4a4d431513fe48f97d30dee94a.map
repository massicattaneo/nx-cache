{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/hooks/src/useIntersectionObserver.ts"],"sourcesContent":["import { useEffect } from \"react\"\n\n/**\n * Custom hook that sets up an Intersection Observer to track the visibility of an element.\n * @param element - The element to observe.\n * @param options - The options to configure the Intersection Observer.\n * @param observerCallback - The callback function to be called when the element's visibility changes.\n */\n\nconst useIntersectionObserver = (\n  element: HTMLElement | null,\n  options: IntersectionObserverInit | undefined,\n  observerCallback: IntersectionObserverCallback,\n): void => {\n  useEffect(() => {\n    if (!element || !(\"IntersectionObserver\" in window)) {\n      return undefined\n    }\n\n    const observer = new IntersectionObserver(observerCallback, options)\n\n    observer.observe(element)\n\n    return () => {\n      observer.disconnect()\n    }\n  }, [element, options, observerCallback])\n}\n\nexport { useIntersectionObserver }\n"],"names":["useIntersectionObserver","element","options","observerCallback","useEffect","window","undefined","observer","IntersectionObserver","observe","disconnect"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BA6BSA;;;eAAAA;;;uBA7BiB;AAE1B;;;;;CAKC,GAED,MAAMA,0BAA0B,CAC9BC,SACAC,SACAC;IAEAC,IAAAA,gBAAS,EAAC;QACR,IAAI,CAACH,WAAW,CAAE,CAAA,0BAA0BI,MAAK,GAAI;YACnD,OAAOC;QACT;QAEA,MAAMC,WAAW,IAAIC,qBAAqBL,kBAAkBD;QAE5DK,SAASE,OAAO,CAACR;QAEjB,OAAO;YACLM,SAASG,UAAU;QACrB;IACF,GAAG;QAACT;QAASC;QAASC;KAAiB;AACzC"}