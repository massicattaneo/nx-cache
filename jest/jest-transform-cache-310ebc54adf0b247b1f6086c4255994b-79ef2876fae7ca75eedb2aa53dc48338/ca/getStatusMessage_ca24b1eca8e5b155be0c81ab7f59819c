c7f77d81e42f0f404469ce7bff2303fb
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "getStatusData", {
    enumerable: true,
    get: function() {
        return getStatusData;
    }
});
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const getMessageFromBlock = (title)=>{
    return `Analyzing results for ${title}`;
};
const getStatusData = (baseData, statusMessage)=>{
    switch(statusMessage.type){
        case "STATUS":
            return _object_spread_props(_object_spread({}, baseData), {
                message: statusMessage.message
            });
        case "STATUS_RESET":
            var _statusMessage_message;
            return {
                message: (_statusMessage_message = statusMessage.message) !== null && _statusMessage_message !== void 0 ? _statusMessage_message : baseData.message,
                queries: [],
                step: "initial"
            };
        case "STATUS_QUERY":
            return _object_spread_props(_object_spread({}, baseData), {
                queries: [
                    ...baseData.queries,
                    ...statusMessage.queries
                ]
            });
        case "STATUS_COLLAPSE":
            return _object_spread_props(_object_spread({}, baseData), {
                message: typeof baseData.message === "string" || baseData.message === undefined ? [
                    getMessageFromBlock(statusMessage.title)
                ] : [
                    ...baseData.message,
                    getMessageFromBlock(statusMessage.title)
                ]
            });
        case "STATUS_CONCLUDING":
            return _object_spread_props(_object_spread({}, baseData), {
                step: "concluding"
            });
        default:
            return baseData;
    }
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3QvY29tbW9uL2hvb2tzL3NyYy9saWIvdXNlQ2hhdC9nZXRTdGF0dXNNZXNzYWdlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IExsbVN0YXR1c01lc3NhZ2UgfSBmcm9tIFwiQHJwL3JlYWN0L3RhbnN0YWNrLWFwaS9sbG0tc3VtbWFyeVwiXG5cbnR5cGUgU3RhdHVzRGF0YSA9IHtcbiAgc3RlcDogXCJpbml0aWFsXCIgfCBcImNvbmNsdWRpbmdcIiB8IFwiY29tcGxldGVkXCJcbiAgbWVzc2FnZT86IHN0cmluZyB8IEFycmF5PHN0cmluZz5cbiAgcXVlcmllczogQXJyYXk8eyBxdWVyeTogc3RyaW5nOyBxdWVyeUlkOiBudW1iZXIgfT5cbn1cblxuY29uc3QgZ2V0TWVzc2FnZUZyb21CbG9jayA9ICh0aXRsZTogc3RyaW5nKSA9PiB7XG4gIHJldHVybiBgQW5hbHl6aW5nIHJlc3VsdHMgZm9yICR7dGl0bGV9YFxufVxuXG5jb25zdCBnZXRTdGF0dXNEYXRhID0gKGJhc2VEYXRhOiBTdGF0dXNEYXRhLCBzdGF0dXNNZXNzYWdlOiBMbG1TdGF0dXNNZXNzYWdlKTogU3RhdHVzRGF0YSA9PiB7XG4gIHN3aXRjaCAoc3RhdHVzTWVzc2FnZS50eXBlKSB7XG4gICAgY2FzZSBcIlNUQVRVU1wiOlxuICAgICAgcmV0dXJuIHsgLi4uYmFzZURhdGEsIG1lc3NhZ2U6IHN0YXR1c01lc3NhZ2UubWVzc2FnZSB9XG5cbiAgICBjYXNlIFwiU1RBVFVTX1JFU0VUXCI6XG4gICAgICByZXR1cm4ge1xuICAgICAgICBtZXNzYWdlOiBzdGF0dXNNZXNzYWdlLm1lc3NhZ2UgPz8gYmFzZURhdGEubWVzc2FnZSxcbiAgICAgICAgcXVlcmllczogW10sXG4gICAgICAgIHN0ZXA6IFwiaW5pdGlhbFwiLFxuICAgICAgfVxuXG4gICAgY2FzZSBcIlNUQVRVU19RVUVSWVwiOlxuICAgICAgcmV0dXJuIHsgLi4uYmFzZURhdGEsIHF1ZXJpZXM6IFsuLi5iYXNlRGF0YS5xdWVyaWVzLCAuLi5zdGF0dXNNZXNzYWdlLnF1ZXJpZXNdIH1cblxuICAgIGNhc2UgXCJTVEFUVVNfQ09MTEFQU0VcIjpcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLmJhc2VEYXRhLFxuICAgICAgICBtZXNzYWdlOlxuICAgICAgICAgIHR5cGVvZiBiYXNlRGF0YS5tZXNzYWdlID09PSBcInN0cmluZ1wiIHx8IGJhc2VEYXRhLm1lc3NhZ2UgPT09IHVuZGVmaW5lZFxuICAgICAgICAgICAgPyBbZ2V0TWVzc2FnZUZyb21CbG9jayhzdGF0dXNNZXNzYWdlLnRpdGxlKV1cbiAgICAgICAgICAgIDogWy4uLmJhc2VEYXRhLm1lc3NhZ2UsIGdldE1lc3NhZ2VGcm9tQmxvY2soc3RhdHVzTWVzc2FnZS50aXRsZSldLFxuICAgICAgfVxuXG4gICAgY2FzZSBcIlNUQVRVU19DT05DTFVESU5HXCI6XG4gICAgICByZXR1cm4geyAuLi5iYXNlRGF0YSwgc3RlcDogXCJjb25jbHVkaW5nXCIgfVxuXG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiBiYXNlRGF0YVxuICB9XG59XG5cbmV4cG9ydCB7IGdldFN0YXR1c0RhdGEgfVxuIl0sIm5hbWVzIjpbImdldFN0YXR1c0RhdGEiLCJnZXRNZXNzYWdlRnJvbUJsb2NrIiwidGl0bGUiLCJiYXNlRGF0YSIsInN0YXR1c01lc3NhZ2UiLCJ0eXBlIiwibWVzc2FnZSIsInF1ZXJpZXMiLCJzdGVwIiwidW5kZWZpbmVkIl0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQTRDU0E7OztlQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXBDVCxNQUFNQyxzQkFBc0IsQ0FBQ0M7SUFDM0IsT0FBTyxDQUFDLHNCQUFzQixFQUFFQSxNQUFNLENBQUM7QUFDekM7QUFFQSxNQUFNRixnQkFBZ0IsQ0FBQ0csVUFBc0JDO0lBQzNDLE9BQVFBLGNBQWNDLElBQUk7UUFDeEIsS0FBSztZQUNILE9BQU8sd0NBQUtGO2dCQUFVRyxTQUFTRixjQUFjRSxPQUFPOztRQUV0RCxLQUFLO2dCQUVRRjtZQURYLE9BQU87Z0JBQ0xFLFNBQVNGLENBQUFBLHlCQUFBQSxjQUFjRSxPQUFPLGNBQXJCRixvQ0FBQUEseUJBQXlCRCxTQUFTRyxPQUFPO2dCQUNsREMsU0FBUyxFQUFFO2dCQUNYQyxNQUFNO1lBQ1I7UUFFRixLQUFLO1lBQ0gsT0FBTyx3Q0FBS0w7Z0JBQVVJLFNBQVM7dUJBQUlKLFNBQVNJLE9BQU87dUJBQUtILGNBQWNHLE9BQU87aUJBQUM7O1FBRWhGLEtBQUs7WUFDSCxPQUFPLHdDQUNGSjtnQkFDSEcsU0FDRSxPQUFPSCxTQUFTRyxPQUFPLEtBQUssWUFBWUgsU0FBU0csT0FBTyxLQUFLRyxZQUN6RDtvQkFBQ1Isb0JBQW9CRyxjQUFjRixLQUFLO2lCQUFFLEdBQzFDO3VCQUFJQyxTQUFTRyxPQUFPO29CQUFFTCxvQkFBb0JHLGNBQWNGLEtBQUs7aUJBQUU7O1FBR3pFLEtBQUs7WUFDSCxPQUFPLHdDQUFLQztnQkFBVUssTUFBTTs7UUFFOUI7WUFDRSxPQUFPTDtJQUNYO0FBQ0YifQ==