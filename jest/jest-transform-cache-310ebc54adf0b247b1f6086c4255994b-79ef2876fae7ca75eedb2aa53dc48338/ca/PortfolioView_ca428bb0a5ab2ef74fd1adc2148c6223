2a3a43156459f981e4bd2c8af3e00799
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "PortfolioView", {
    enumerable: true,
    get: function() {
        return PortfolioView;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _reactrouterdom = require("react-router-dom");
const _clerkreact = require("@clerk/clerk-react");
const _providers = require("@rp/react/common/providers");
const _cqsbyids = require("@rp/react/tanstack-api/cqs-by-ids");
const _watchlist = require("@rp/react/tanstack-api/watchlist");
const _basecomponents = require("@rp/react/web/common/base-components");
const _compositecomponents = require("@rp/react/web/common/composite-components");
const _headercomponents = require("@rp/react/web/common/header-components");
const _layout = require("@rp/react/web/common/layout");
const _providers1 = require("@rp/react/web/common/providers");
const _watchlisteditor = require("@rp/react/web/common/watchlist-editor");
const _icons = require("@rp/react/web/icons");
const _core = require("@rp/react/web/mui/core");
const _icons1 = require("@rp/react/web/mui/icons");
const _router = require("@rp/react/web/router");
const _watchlists = require("@rp/react/web/watchlists");
const _useGetBackButtonUrl = require("../../../../pages/WatchlistEditor/useGetBackButtonUrl");
const _PortfolioActionsMenu = require("./PortfolioActionsMenu");
const _PortfolioViewstyles = require("./PortfolioView.styles");
const _WatchlistsTable = require("./WatchlistsTable");
const PortfolioView = ({ id })=>{
    var _user_primaryEmailAddress;
    const { isLoading: isLoadingWatchlist, data, error } = (0, _watchlist.useWatchlist)(id);
    const { search, share } = (0, _watchlists.useWatchlistsActions)();
    const { enqueueError } = (0, _providers1.useSnackbar)();
    const { items = [], name = "" } = data !== null && data !== void 0 ? data : {};
    const { user } = (0, _clerkreact.useUser)();
    const { state } = (0, _reactrouterdom.useLocation)();
    const navigate = (0, _reactrouterdom.useNavigate)();
    const { canShare, hasEntitlement } = (0, _providers.useAccount)();
    const { ids, addByIds } = (0, _cqsbyids.useCqsByIdsContext)();
    const [filterTerm, setFilterTerm] = (0, _react.useState)("");
    const editable = data && (data.ownerUserId === (user === null || user === void 0 ? void 0 : user.id) || data.shared.company.permission === "write");
    const isRunSearchDisabled = items.length === 0;
    const isPublic = (data === null || data === void 0 ? void 0 : data.shared.company.permission) !== "undefined";
    (0, _react.useEffect)(()=>{
        //TODO this logic should be revised when watchlist is updated
        addByIds(items.map((key)=>({
                key,
                queryType: key.length === 6 ? "entity" : "rp_topic"
            })));
    }, [
        items,
        addByIds
    ]);
    (0, _react.useEffect)(()=>{
        if (error) {
            enqueueError("Watchlist does not exist");
            navigate(_router.WATCHLISTS_ROUTE);
        }
    }, [
        error,
        enqueueError,
        navigate
    ]);
    const isListLoading = items.some((item)=>{
        var _ids_item;
        var _ids_item_isLoading;
        return (_ids_item_isLoading = (_ids_item = ids[item]) === null || _ids_item === void 0 ? void 0 : _ids_item.isLoading) !== null && _ids_item_isLoading !== void 0 ? _ids_item_isLoading : true;
    });
    const isLoading = isLoadingWatchlist || isListLoading;
    const mappedItems = items.map((item)=>{
        var _ids_item;
        return (_ids_item = ids[item]) === null || _ids_item === void 0 ? void 0 : _ids_item.data;
    }).filter((item)=>item === null || item === void 0 ? void 0 : item.name);
    const filteredSelectedEntities = mappedItems.filter((result)=>result.name.toLowerCase().includes(filterTerm.toLowerCase()));
    const navigationUrl = (0, _useGetBackButtonUrl.useGetBackButtonUrl)({
        userId: user === null || user === void 0 ? void 0 : user.id,
        userEmail: user === null || user === void 0 ? void 0 : (_user_primaryEmailAddress = user.primaryEmailAddress) === null || _user_primaryEmailAddress === void 0 ? void 0 : _user_primaryEmailAddress.emailAddress
    }, {
        ownerId: data === null || data === void 0 ? void 0 : data.ownerUserId
    });
    const handleRunSearch = ()=>{
        if (data) search.onClick(data);
    };
    const handleShare = (0, _react.useCallback)(()=>{
        if (data) share.onClick(data);
    }, [
        data,
        share
    ]);
    const handleChat = async ()=>{
        if (!data) return;
        const state = {
            watchlistIds: [
                data.id
            ]
        };
        navigate(_router.CHAT_ROUTE, {
            state
        });
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_headercomponents.HtmlPageHead, {
                title: `${name} | Watchlist`
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_layout.Header, {
                leftColumns: 6,
                rightColumns: 6,
                leftContent: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                    sx: {
                        display: "flex",
                        alignItems: "center",
                        gap: 1,
                        minWidth: 0
                    },
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactrouterdom.Link, {
                            to: navigationUrl,
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.IconButton, {
                                size: "small",
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons1.ArrowBack, {})
                            })
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                            variant: "h6",
                            fontWeight: 700,
                            sx: {
                                overflow: "hidden",
                                textOverflow: "ellipsis",
                                whiteSpace: "nowrap"
                            },
                            children: name
                        })
                    ]
                }),
                rightContent: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                    sx: {
                        display: "flex",
                        gap: 1,
                        alignItems: "center"
                    },
                    children: [
                        data ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_watchlisteditor.WatchlistInfo, {
                            ownerName: data.ownerName,
                            lastUpdated: data.lastUpdated
                        }) : null,
                        canShare ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.RPTooltip, {
                            title: "Share",
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.IconButton, {
                                onClick: handleShare,
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.ShareIcon, {
                                    shared: isPublic && !isLoading,
                                    size: 24,
                                    sx: {
                                        color: isPublic && !isLoading ? undefined : "grey.300"
                                    }
                                })
                            })
                        }) : null,
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.RPTooltip, {
                            title: "Chat",
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.IconButton, {
                                onClick: handleChat,
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons1.ChatBubbleOutline, {
                                    sx: {
                                        height: 24,
                                        width: 24,
                                        color: "grey.300"
                                    }
                                })
                            })
                        }),
                        hasEntitlement("search") && /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.RPTooltip, {
                            title: isRunSearchDisabled ? "" : "Run search",
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.IconButton, {
                                    onClick: handleRunSearch,
                                    disabled: isRunSearchDisabled,
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.SvgIcon, {
                                        component: _icons.RunSearchIcon,
                                        inheritViewBox: true,
                                        sx: {
                                            height: 24,
                                            width: 24,
                                            color: isRunSearchDisabled ? "text.disabled" : "grey.300"
                                        }
                                    })
                                })
                            })
                        }),
                        data ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_PortfolioActionsMenu.PortfolioActionsMenu, {
                            watchlist: data,
                            editable: !!editable
                        }) : null
                    ]
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.MaxWidthContainer, {
                children: isLoadingWatchlist ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.LoadingSpinner, {}) : /*#__PURE__*/ (0, _jsxruntime.jsxs)(_PortfolioViewstyles.WatchListEditorStyled, {
                    color: "text.primary",
                    "data-testid": "container",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_PortfolioViewstyles.InputContainerStyled, {
                            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                                sx: {
                                    display: "flex",
                                    alignItems: "center",
                                    gap: "10px",
                                    mb: "10px",
                                    width: "100%",
                                    justifyContent: "space-between"
                                },
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                                        sx: {
                                            color: "text.secondary"
                                        },
                                        children: filteredSelectedEntities.length > 0 ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_WatchlistsTable.ItemsCount, {
                                            items: filteredSelectedEntities,
                                            total: mappedItems.length
                                        }) : null
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                                        sx: {
                                            display: "flex",
                                            gap: 1.5,
                                            flexShrink: 0
                                        },
                                        children: [
                                            (user === null || user === void 0 ? void 0 : user.id) === (data === null || data === void 0 ? void 0 : data.ownerUserId) || (data === null || data === void 0 ? void 0 : data.shared.company.permission) === "write" ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Button, {
                                                variant: "text-outlined",
                                                size: "small",
                                                component: _reactrouterdom.Link,
                                                to: (0, _reactrouterdom.generatePath)(_router.WATCHLIST_EDIT, {
                                                    id
                                                }),
                                                state: state,
                                                sx: {
                                                    height: "38px",
                                                    whiteSpace: "nowrap",
                                                    minWidth: "fit-content"
                                                },
                                                children: "EDIT WATCHLIST"
                                            }) : null,
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_layout.SearchBar, {
                                                size: "small",
                                                placeholder: "Find an entity",
                                                variant: "outlined",
                                                sx: {
                                                    ".MuiInputBase-root": {
                                                        height: "38px"
                                                    }
                                                },
                                                InputProps: {
                                                    startAdornment: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons1.Search, {})
                                                },
                                                value: filterTerm,
                                                onChange: (e)=>{
                                                    setFilterTerm(e.target.value);
                                                }
                                            })
                                        ]
                                    })
                                ]
                            })
                        }),
                        mappedItems.length > 0 && /*#__PURE__*/ (0, _jsxruntime.jsx)(_WatchlistsTable.WatchlistsTable, {
                            loading: isLoading,
                            totalEntities: mappedItems.length,
                            selectedEntities: filteredSelectedEntities,
                            filterTerm: filterTerm,
                            onShare: handleShare,
                            isPublic: isPublic
                        }),
                        !isLoading && items.length === 0 && /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                            variant: "subtitle2",
                            color: "textSecondary",
                            children: "This Watchlist is empty"
                        })
                    ]
                })
            })
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,