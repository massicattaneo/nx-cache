{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/watchlists/src/lib/WatchlistDataTabs/CustomDataView/hooks/useColumnFiltering.ts"],"sourcesContent":["import { useMemo } from \"react\"\nimport { FinanceDataTabs } from \"../../../hooks/useWatchlistsFinanceDataTabNavigation\"\nimport { watchlistDataTables } from \"../../tables\"\nimport { UICustomColumn } from \"../types\"\n\nexport function useColumnFiltering(selectedCategory: FinanceDataTabs, searchQuery: string) {\n  const availableColumns = useMemo(() => {\n    const table = watchlistDataTables[selectedCategory]\n    if (!table) return []\n\n    const columns: Array<UICustomColumn> = []\n    const seenColumns = new Set<string>()\n\n    table.columns.forEach(columnDef => {\n      if (columnDef.meta?.endpoint && columnDef.meta?.columnKeys) {\n        const { endpoint, columnKeys, menuLabel } = columnDef.meta\n\n        // Use the primary key (first key) as the representative\n        const primaryColumnKey = columnKeys[0].toString()\n\n        // Create a unique identifier to prevent duplicates\n        const columnId = `${endpoint}-${primaryColumnKey}-${selectedCategory}`\n\n        if (!seenColumns.has(columnId)) {\n          seenColumns.add(columnId)\n\n          columns.push({\n            endpoint,\n            columnKey: primaryColumnKey,\n            displayName: menuLabel ?? primaryColumnKey,\n            sourceTab: selectedCategory,\n          })\n        }\n      }\n    })\n\n    return columns\n  }, [selectedCategory])\n\n  const filteredColumns = useMemo(() => {\n    if (!searchQuery.trim()) return availableColumns\n\n    const query = searchQuery.toLowerCase()\n    return availableColumns.filter(column => column.displayName.toLowerCase().includes(query))\n  }, [availableColumns, searchQuery])\n\n  return { availableColumns, filteredColumns }\n}\n"],"names":["useColumnFiltering","selectedCategory","searchQuery","availableColumns","useMemo","table","watchlistDataTables","columns","seenColumns","Set","forEach","columnDef","meta","endpoint","columnKeys","menuLabel","primaryColumnKey","toString","columnId","has","add","push","columnKey","displayName","sourceTab","filteredColumns","trim","query","toLowerCase","filter","column","includes"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAKgBA;;;eAAAA;;;uBALQ;wBAEY;AAG7B,SAASA,mBAAmBC,gBAAiC,EAAEC,WAAmB;IACvF,MAAMC,mBAAmBC,IAAAA,cAAO,EAAC;QAC/B,MAAMC,QAAQC,2BAAmB,CAACL,iBAAiB;QACnD,IAAI,CAACI,OAAO,OAAO,EAAE;QAErB,MAAME,UAAiC,EAAE;QACzC,MAAMC,cAAc,IAAIC;QAExBJ,MAAME,OAAO,CAACG,OAAO,CAACC,CAAAA;gBAChBA,iBAA4BA;YAAhC,IAAIA,EAAAA,kBAAAA,UAAUC,IAAI,cAAdD,sCAAAA,gBAAgBE,QAAQ,OAAIF,mBAAAA,UAAUC,IAAI,cAAdD,uCAAAA,iBAAgBG,UAAU,GAAE;gBAC1D,MAAM,EAAED,QAAQ,EAAEC,UAAU,EAAEC,SAAS,EAAE,GAAGJ,UAAUC,IAAI;gBAE1D,wDAAwD;gBACxD,MAAMI,mBAAmBF,UAAU,CAAC,EAAE,CAACG,QAAQ;gBAE/C,mDAAmD;gBACnD,MAAMC,WAAW,CAAC,EAAEL,SAAS,CAAC,EAAEG,iBAAiB,CAAC,EAAEf,iBAAiB,CAAC;gBAEtE,IAAI,CAACO,YAAYW,GAAG,CAACD,WAAW;oBAC9BV,YAAYY,GAAG,CAACF;oBAEhBX,QAAQc,IAAI,CAAC;wBACXR;wBACAS,WAAWN;wBACXO,aAAaR,sBAAAA,uBAAAA,YAAaC;wBAC1BQ,WAAWvB;oBACb;gBACF;YACF;QACF;QAEA,OAAOM;IACT,GAAG;QAACN;KAAiB;IAErB,MAAMwB,kBAAkBrB,IAAAA,cAAO,EAAC;QAC9B,IAAI,CAACF,YAAYwB,IAAI,IAAI,OAAOvB;QAEhC,MAAMwB,QAAQzB,YAAY0B,WAAW;QACrC,OAAOzB,iBAAiB0B,MAAM,CAACC,CAAAA,SAAUA,OAAOP,WAAW,CAACK,WAAW,GAAGG,QAAQ,CAACJ;IACrF,GAAG;QAACxB;QAAkBD;KAAY;IAElC,OAAO;QAAEC;QAAkBsB;IAAgB;AAC7C"}