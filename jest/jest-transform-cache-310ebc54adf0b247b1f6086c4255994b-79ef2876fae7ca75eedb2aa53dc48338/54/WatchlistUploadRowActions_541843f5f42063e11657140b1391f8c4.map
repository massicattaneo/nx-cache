{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/watchlists/src/lib/WatchlistUploadModal/WatchlistUploadRowActions.tsx"],"sourcesContent":["import { useCallback, useEffect, useRef, useState } from \"react\"\nimport { useDebouncedState } from \"@rp/react/common/hooks\"\nimport {\n  EnhancedSuggestion,\n  isCompanySuggestion,\n  isETFSuggestion,\n  useWatchlistSuggestions,\n} from \"@rp/react/tanstack-api/suggestion\"\nimport { RPTooltip } from \"@rp/react/web/common/base-components\"\nimport {\n  SuggestionCustomFilter,\n  WatchlistAutosuggestInput,\n  WatchlistAutosuggestInputRef,\n  WatchlistAutosuggestPopperFilters,\n  getWatchlistAutosuggestFilters,\n} from \"@rp/react/web/common/search-autosuggest-input\"\nimport { Box, IconButton } from \"@rp/react/web/mui/core\"\nimport { Close, Delete, Edit } from \"@rp/react/web/mui/icons\"\nimport { RowParams } from \"./WatchlistUploadColumns\"\nimport { WATCHLIST_MODAL_SCROLLABLE_ID } from \"./WatchlistUploadData\"\n\nexport const WatchlistUploadRowActions = (opts: RowParams) => {\n  const isConflict = opts.data.isConflict\n  const [isEditMode, setIsEditMode] = useState(isConflict)\n  const [customFilter, setCustomFilter] = useState<SuggestionCustomFilter>(\"all\")\n  const inputFocusRef = useRef<WatchlistAutosuggestInputRef | null>(null)\n  const [popperOpen, setPopperOpen] = useState(false)\n  const [query, setQuery, queryValue] = useDebouncedState(\"\", 140)\n  const { data, fetchNextPage, hasNextPage, isLoading } = useWatchlistSuggestions({\n    query,\n    ...getWatchlistAutosuggestFilters(customFilter),\n  })\n  useEffect(() => {\n    const el = document.getElementById(WATCHLIST_MODAL_SCROLLABLE_ID)\n    const hasVerticalScrollbar = (el?.scrollHeight ?? 0) > (el?.clientHeight ?? 0)\n    if (popperOpen) {\n      hasVerticalScrollbar\n        ? el?.classList.add(\"freezeScrollBarModal\", \"withScrollBar\")\n        : el?.classList.add(\"freezeScrollBarModal\")\n    }\n    return () => {\n      el?.classList.remove(\"freezeScrollBarModal\", \"withScrollBar\")\n    }\n  }, [popperOpen])\n\n  useEffect(() => {\n    if (!isConflict) {\n      inputFocusRef.current?.focus()\n    }\n  }, [isConflict, inputFocusRef])\n\n  const handler = useCallback(\n    (event: Event) => {\n      if (isEditMode && !popperOpen && !isConflict && event instanceof KeyboardEvent) {\n        event.key === \"Escape\" && setIsEditMode(false)\n      }\n    },\n    [isConflict, isEditMode, popperOpen],\n  )\n\n  useEffect(() => {\n    const ref = inputFocusRef.current\n    ref?.addEventListener(\"keydown\", handler)\n    return () => {\n      ref?.removeEventListener(\"keydown\", handler)\n    }\n  }, [handler, inputFocusRef])\n\n  const onChange = useCallback(\n    (item: EnhancedSuggestion) => {\n      if (isCompanySuggestion(item) || isETFSuggestion(item)) {\n        setIsEditMode(false)\n        opts.onEdit({\n          data: {\n            ...opts.data,\n            data: {\n              ...item,\n              category: item.category ?? \"\",\n            },\n          },\n          column: opts.column,\n        })\n      }\n    },\n    [opts],\n  )\n  return (\n    <Box sx={{ display: \"flex\", gap: 1 }}>\n      {isEditMode ? (\n        <Box sx={{ position: \"relative\" }}>\n          <Box\n            sx={{\n              position: \"absolute\",\n              right: isConflict ? 200 : 40,\n              top: -4,\n              display: \"flex\",\n              height: \"48px\",\n              backgroundColor: \"elevation.dp24\",\n              width: isConflict ? 500 : 376,\n              mr: 1,\n            }}\n          >\n            <WatchlistAutosuggestInput\n              autoFocus\n              isLoading={isLoading}\n              open={popperOpen}\n              setOpen={setPopperOpen}\n              ref={inputFocusRef}\n              placeholder={\"Search for the right entity\"}\n              onChange={onChange}\n              selectedItems={opts.excludeIds}\n              setQuery={setQuery}\n              rawQuery={queryValue}\n              data={data}\n              hasNextPage={hasNextPage}\n              fetchNextPage={fetchNextPage}\n              showTicker={\n                customFilter === \"all\" || customFilter === \"stocks\" || customFilter === \"etfs\"\n              }\n            >\n              <WatchlistAutosuggestPopperFilters\n                customFilter={customFilter}\n                onFilterClick={filter => {\n                  setCustomFilter(filter)\n                  inputFocusRef.current?.focus()\n                }}\n              />\n            </WatchlistAutosuggestInput>\n          </Box>\n          {isConflict ? (\n            <Box sx={{ width: 42 }} />\n          ) : (\n            <RPTooltip title={\"Finish Editing\"}>\n              <IconButton onClick={() => setIsEditMode(false)}>\n                <Close />\n              </IconButton>\n            </RPTooltip>\n          )}\n        </Box>\n      ) : (\n        <RPTooltip title={\"Change Entity\"}>\n          <IconButton\n            onClick={() => {\n              setIsEditMode(true)\n            }}\n          >\n            <Edit />\n          </IconButton>\n        </RPTooltip>\n      )}\n      <RPTooltip title={\"Remove\"}>\n        <IconButton onClick={() => opts.onDelete({ data: opts.data, column: opts.column })}>\n          <Delete />\n        </IconButton>\n      </RPTooltip>\n    </Box>\n  )\n}\n"],"names":["WatchlistUploadRowActions","opts","isConflict","data","isEditMode","setIsEditMode","useState","customFilter","setCustomFilter","inputFocusRef","useRef","popperOpen","setPopperOpen","query","setQuery","queryValue","useDebouncedState","fetchNextPage","hasNextPage","isLoading","useWatchlistSuggestions","getWatchlistAutosuggestFilters","useEffect","el","document","getElementById","WATCHLIST_MODAL_SCROLLABLE_ID","hasVerticalScrollbar","scrollHeight","clientHeight","classList","add","remove","current","focus","handler","useCallback","event","KeyboardEvent","key","ref","addEventListener","removeEventListener","onChange","item","isCompanySuggestion","isETFSuggestion","onEdit","category","column","Box","sx","display","gap","position","right","top","height","backgroundColor","width","mr","WatchlistAutosuggestInput","autoFocus","open","setOpen","placeholder","selectedItems","excludeIds","rawQuery","showTicker","WatchlistAutosuggestPopperFilters","onFilterClick","filter","RPTooltip","title","IconButton","onClick","Close","Edit","onDelete","Delete"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}