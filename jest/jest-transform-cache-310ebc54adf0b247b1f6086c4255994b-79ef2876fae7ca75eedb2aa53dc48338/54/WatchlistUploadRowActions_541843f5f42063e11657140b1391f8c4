96dda8ca6b6577b3a7057fa28d01fd75
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "WatchlistUploadRowActions", {
    enumerable: true,
    get: function() {
        return WatchlistUploadRowActions;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _hooks = require("@rp/react/common/hooks");
const _suggestion = require("@rp/react/tanstack-api/suggestion");
const _basecomponents = require("@rp/react/web/common/base-components");
const _searchautosuggestinput = require("@rp/react/web/common/search-autosuggest-input");
const _core = require("@rp/react/web/mui/core");
const _icons = require("@rp/react/web/mui/icons");
const _WatchlistUploadData = require("./WatchlistUploadData");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const WatchlistUploadRowActions = (opts)=>{
    const isConflict = opts.data.isConflict;
    const [isEditMode, setIsEditMode] = (0, _react.useState)(isConflict);
    const [customFilter, setCustomFilter] = (0, _react.useState)("all");
    const inputFocusRef = (0, _react.useRef)(null);
    const [popperOpen, setPopperOpen] = (0, _react.useState)(false);
    const [query, setQuery, queryValue] = (0, _hooks.useDebouncedState)("", 140);
    const { data, fetchNextPage, hasNextPage, isLoading } = (0, _suggestion.useWatchlistSuggestions)(_object_spread({
        query
    }, (0, _searchautosuggestinput.getWatchlistAutosuggestFilters)(customFilter)));
    (0, _react.useEffect)(()=>{
        const el = document.getElementById(_WatchlistUploadData.WATCHLIST_MODAL_SCROLLABLE_ID);
        var _el_scrollHeight, _el_clientHeight;
        const hasVerticalScrollbar = ((_el_scrollHeight = el === null || el === void 0 ? void 0 : el.scrollHeight) !== null && _el_scrollHeight !== void 0 ? _el_scrollHeight : 0) > ((_el_clientHeight = el === null || el === void 0 ? void 0 : el.clientHeight) !== null && _el_clientHeight !== void 0 ? _el_clientHeight : 0);
        if (popperOpen) {
            hasVerticalScrollbar ? el === null || el === void 0 ? void 0 : el.classList.add("freezeScrollBarModal", "withScrollBar") : el === null || el === void 0 ? void 0 : el.classList.add("freezeScrollBarModal");
        }
        return ()=>{
            el === null || el === void 0 ? void 0 : el.classList.remove("freezeScrollBarModal", "withScrollBar");
        };
    }, [
        popperOpen
    ]);
    (0, _react.useEffect)(()=>{
        if (!isConflict) {
            var _inputFocusRef_current;
            (_inputFocusRef_current = inputFocusRef.current) === null || _inputFocusRef_current === void 0 ? void 0 : _inputFocusRef_current.focus();
        }
    }, [
        isConflict,
        inputFocusRef
    ]);
    const handler = (0, _react.useCallback)((event)=>{
        if (isEditMode && !popperOpen && !isConflict && event instanceof KeyboardEvent) {
            event.key === "Escape" && setIsEditMode(false);
        }
    }, [
        isConflict,
        isEditMode,
        popperOpen
    ]);
    (0, _react.useEffect)(()=>{
        const ref = inputFocusRef.current;
        ref === null || ref === void 0 ? void 0 : ref.addEventListener("keydown", handler);
        return ()=>{
            ref === null || ref === void 0 ? void 0 : ref.removeEventListener("keydown", handler);
        };
    }, [
        handler,
        inputFocusRef
    ]);
    const onChange = (0, _react.useCallback)((item)=>{
        if ((0, _suggestion.isCompanySuggestion)(item) || (0, _suggestion.isETFSuggestion)(item)) {
            setIsEditMode(false);
            var _item_category;
            opts.onEdit({
                data: _object_spread_props(_object_spread({}, opts.data), {
                    data: _object_spread_props(_object_spread({}, item), {
                        category: (_item_category = item.category) !== null && _item_category !== void 0 ? _item_category : ""
                    })
                }),
                column: opts.column
            });
        }
    }, [
        opts
    ]);
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
        sx: {
            display: "flex",
            gap: 1
        },
        children: [
            isEditMode ? /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                sx: {
                    position: "relative"
                },
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                        sx: {
                            position: "absolute",
                            right: isConflict ? 200 : 40,
                            top: -4,
                            display: "flex",
                            height: "48px",
                            backgroundColor: "elevation.dp24",
                            width: isConflict ? 500 : 376,
                            mr: 1
                        },
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_searchautosuggestinput.WatchlistAutosuggestInput, {
                            autoFocus: true,
                            isLoading: isLoading,
                            open: popperOpen,
                            setOpen: setPopperOpen,
                            ref: inputFocusRef,
                            placeholder: "Search for the right entity",
                            onChange: onChange,
                            selectedItems: opts.excludeIds,
                            setQuery: setQuery,
                            rawQuery: queryValue,
                            data: data,
                            hasNextPage: hasNextPage,
                            fetchNextPage: fetchNextPage,
                            showTicker: customFilter === "all" || customFilter === "stocks" || customFilter === "etfs",
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_searchautosuggestinput.WatchlistAutosuggestPopperFilters, {
                                customFilter: customFilter,
                                onFilterClick: (filter)=>{
                                    var _inputFocusRef_current;
                                    setCustomFilter(filter);
                                    (_inputFocusRef_current = inputFocusRef.current) === null || _inputFocusRef_current === void 0 ? void 0 : _inputFocusRef_current.focus();
                                }
                            })
                        })
                    }),
                    isConflict ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                        sx: {
                            width: 42
                        }
                    }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.RPTooltip, {
                        title: "Finish Editing",
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.IconButton, {
                            onClick: ()=>setIsEditMode(false),
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.Close, {})
                        })
                    })
                ]
            }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.RPTooltip, {
                title: "Change Entity",
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.IconButton, {
                    onClick: ()=>{
                        setIsEditMode(true);
                    },
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.Edit, {})
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.RPTooltip, {
                title: "Remove",
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.IconButton, {
                    onClick: ()=>opts.onDelete({
                            data: opts.data,
                            column: opts.column
                        }),
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.Delete, {})
                })
            })
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,