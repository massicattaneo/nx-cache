{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/watchlists/src/lib/WatchlistDataTabs/endpoints/companyIncomeStatement/netIncomeFromContinuingOperations.tsx"],"sourcesContent":["import { WatchlistDataTablePriceCell } from \"../../WatchlistDataTableCells/WatchlistDataTablePriceCell\"\nimport { genericColumn } from \"../../genericColumn\"\nimport { getIncomeStatementFiscalPeriod } from \"../../utils/fiscalPeriodUtils\"\n\nfunction netIncomeFromContinuingOperations(tableName: string) {\n  const title = \"Net Income From Continuing Operations (FQ)\"\n  return genericColumn({\n    endpoint: \"companyIncomeStatement\",\n    columnKeys: [\"netIncomeFromContinuingOperations\"],\n    size: 130,\n    title,\n    enableSorting: true,\n    enableHiding: true,\n    tooltip: \"Profit from ongoing business operations.\",\n    cell: info => {\n      return (\n        <WatchlistDataTablePriceCell\n          tooltip={`Explain the ${title}`}\n          queryResult={info.row.original.financialData.companyIncomeStatement}\n          currency={info.row.original.financialData.companyIncomeStatement?.data?.reportedCurrency}\n          onClick={() => {\n            const fiscalPeriod = getIncomeStatementFiscalPeriod(info.row.original)\n            info.row.original.onChatWithCell?.({\n              prompt: `What has ${info.row.original.entityInfo.name} reported in ${fiscalPeriod} about Net Income From Continuing Operations?`,\n              value:\n                info.row.original.financialData.companyIncomeStatement?.data\n                  ?.netIncomeFromContinuingOperations,\n              entityInfo: info.row.original.entityInfo,\n              columnName: `${tableName}: ${title}`,\n            })\n          }}\n          value={\n            info.row.original.financialData.companyIncomeStatement?.data\n              ?.netIncomeFromContinuingOperations\n          }\n        />\n      )\n    },\n  })\n}\n\nexport { netIncomeFromContinuingOperations }\n"],"names":["netIncomeFromContinuingOperations","tableName","title","genericColumn","endpoint","columnKeys","size","enableSorting","enableHiding","tooltip","cell","info","WatchlistDataTablePriceCell","queryResult","row","original","financialData","companyIncomeStatement","currency","data","reportedCurrency","onClick","fiscalPeriod","getIncomeStatementFiscalPeriod","onChatWithCell","prompt","entityInfo","name","value","columnName"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAyCSA;;;eAAAA;;;;6CAzCmC;+BACd;mCACiB;AAE/C,SAASA,kCAAkCC,SAAiB;IAC1D,MAAMC,QAAQ;IACd,OAAOC,IAAAA,4BAAa,EAAC;QACnBC,UAAU;QACVC,YAAY;YAAC;SAAoC;QACjDC,MAAM;QACNJ;QACAK,eAAe;QACfC,cAAc;QACdC,SAAS;QACTC,MAAMC,CAAAA;gBAKUA,8DAAAA,yDAaRA,+DAAAA;YAjBN,qBACE,qBAACC,wDAA2B;gBAC1BH,SAAS,CAAC,YAAY,EAAEP,MAAM,CAAC;gBAC/BW,aAAaF,KAAKG,GAAG,CAACC,QAAQ,CAACC,aAAa,CAACC,sBAAsB;gBACnEC,QAAQ,GAAEP,0DAAAA,KAAKG,GAAG,CAACC,QAAQ,CAACC,aAAa,CAACC,sBAAsB,cAAtDN,+EAAAA,+DAAAA,wDAAwDQ,IAAI,cAA5DR,mFAAAA,6DAA8DS,gBAAgB;gBACxFC,SAAS;wBAKHV,8DAAAA,yDAHJA,mCAAAA;oBADA,MAAMW,eAAeC,IAAAA,iDAA8B,EAACZ,KAAKG,GAAG,CAACC,QAAQ;qBACrEJ,oCAAAA,CAAAA,qBAAAA,KAAKG,GAAG,CAACC,QAAQ,EAACS,cAAc,cAAhCb,wDAAAA,uCAAAA,oBAAmC;wBACjCc,QAAQ,CAAC,SAAS,EAAEd,KAAKG,GAAG,CAACC,QAAQ,CAACW,UAAU,CAACC,IAAI,CAAC,aAAa,EAAEL,aAAa,6CAA6C,CAAC;wBAChIM,KAAK,GACHjB,0DAAAA,KAAKG,GAAG,CAACC,QAAQ,CAACC,aAAa,CAACC,sBAAsB,cAAtDN,+EAAAA,+DAAAA,wDAAwDQ,IAAI,cAA5DR,mFAAAA,6DACIX,iCAAiC;wBACvC0B,YAAYf,KAAKG,GAAG,CAACC,QAAQ,CAACW,UAAU;wBACxCG,YAAY,CAAC,EAAE5B,UAAU,EAAE,EAAEC,MAAM,CAAC;oBACtC;gBACF;gBACA0B,KAAK,GACHjB,2DAAAA,KAAKG,GAAG,CAACC,QAAQ,CAACC,aAAa,CAACC,sBAAsB,cAAtDN,gFAAAA,gEAAAA,yDAAwDQ,IAAI,cAA5DR,oFAAAA,8DACIX,iCAAiC;;QAI7C;IACF;AACF"}