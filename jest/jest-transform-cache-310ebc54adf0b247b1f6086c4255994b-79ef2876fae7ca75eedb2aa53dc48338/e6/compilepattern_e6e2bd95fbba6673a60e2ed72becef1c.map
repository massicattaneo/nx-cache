{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/node_modules/mdast-util-to-markdown/lib/util/compile-pattern.js"],"sourcesContent":["/**\n * @typedef {import('../types.js').CompilePattern} CompilePattern\n */\n\n/**\n * @type {CompilePattern}\n */\nexport function compilePattern(pattern) {\n  if (!pattern._compiled) {\n    const before =\n      (pattern.atBreak ? '[\\\\r\\\\n][\\\\t ]*' : '') +\n      (pattern.before ? '(?:' + pattern.before + ')' : '')\n\n    pattern._compiled = new RegExp(\n      (before ? '(' + before + ')' : '') +\n        (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? '\\\\' : '') +\n        pattern.character +\n        (pattern.after ? '(?:' + pattern.after + ')' : ''),\n      'g'\n    )\n  }\n\n  return pattern._compiled\n}\n"],"names":["compilePattern","pattern","_compiled","before","atBreak","RegExp","test","character","after"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;","mappings":"AAAA;;CAEC,GAED;;CAEC;;;;+BACeA;;;eAAAA;;;AAAT,SAASA,eAAeC,OAAO;IACpC,IAAI,CAACA,QAAQC,SAAS,EAAE;QACtB,MAAMC,SACJ,AAACF,CAAAA,QAAQG,OAAO,GAAG,oBAAoB,EAAC,IACvCH,CAAAA,QAAQE,MAAM,GAAG,QAAQF,QAAQE,MAAM,GAAG,MAAM,EAAC;QAEpDF,QAAQC,SAAS,GAAG,IAAIG,OACtB,AAACF,CAAAA,SAAS,MAAMA,SAAS,MAAM,EAAC,IAC7B,CAAA,sBAAsBG,IAAI,CAACL,QAAQM,SAAS,IAAI,OAAO,EAAC,IACzDN,QAAQM,SAAS,GAChBN,CAAAA,QAAQO,KAAK,GAAG,QAAQP,QAAQO,KAAK,GAAG,MAAM,EAAC,GAClD;IAEJ;IAEA,OAAOP,QAAQC,SAAS;AAC1B"}