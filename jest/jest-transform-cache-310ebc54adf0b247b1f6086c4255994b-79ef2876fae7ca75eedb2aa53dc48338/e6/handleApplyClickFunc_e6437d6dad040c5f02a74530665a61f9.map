{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/common/source-selector/src/utils/handleApplyClickFunc.ts"],"sourcesContent":["import intersection from \"lodash/intersection\"\nimport type { SourceSelectorSubmission } from \"@rp/react/tanstack-api/content\"\nimport {\n  SourceSelectorSelectedPackageInfo,\n  SourceSelectorSelectedSourceInfo,\n} from \"../sourceSelector.types\"\n\ntype HandleApplyClickFuncProps = {\n  isFilterInclude: boolean\n  selectedSources: Array<SourceSelectorSelectedSourceInfo>\n  selectedAllPackages: Array<SourceSelectorSelectedPackageInfo>\n  applyCallback: (sourceSelectionSubmission: SourceSelectorSubmission) => void\n}\n\nfunction handleApplyClickFunc({\n  isFilterInclude,\n  selectedSources,\n  selectedAllPackages,\n  applyCallback,\n}: HandleApplyClickFuncProps): void {\n  const packageIDs = selectedAllPackages.map(contentPackage => contentPackage.id)\n  const sourceIDs = selectedSources\n    .filter(source => !intersection(source.packageIDs, packageIDs).length)\n    .map(source => source.id)\n\n  applyCallback({ isFilterInclude, sourceIDs, packageIDs })\n}\n\nexport { handleApplyClickFunc }\n"],"names":["handleApplyClickFunc","isFilterInclude","selectedSources","selectedAllPackages","applyCallback","packageIDs","map","contentPackage","id","sourceIDs","filter","source","intersection","length"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BA4BSA;;;eAAAA;;;qEA5BgB;;;;;;AAczB,SAASA,qBAAqB,EAC5BC,eAAe,EACfC,eAAe,EACfC,mBAAmB,EACnBC,aAAa,EACa;IAC1B,MAAMC,aAAaF,oBAAoBG,GAAG,CAACC,CAAAA,iBAAkBA,eAAeC,EAAE;IAC9E,MAAMC,YAAYP,gBACfQ,MAAM,CAACC,CAAAA,SAAU,CAACC,IAAAA,qBAAY,EAACD,OAAON,UAAU,EAAEA,YAAYQ,MAAM,EACpEP,GAAG,CAACK,CAAAA,SAAUA,OAAOH,EAAE;IAE1BJ,cAAc;QAAEH;QAAiBQ;QAAWJ;IAAW;AACzD"}