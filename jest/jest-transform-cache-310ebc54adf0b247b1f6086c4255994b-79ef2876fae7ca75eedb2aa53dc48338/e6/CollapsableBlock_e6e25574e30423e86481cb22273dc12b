37e97c21e1e8bce6add3289a26c42c3f
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "CollapsableBlock", {
    enumerable: true,
    get: function() {
        return CollapsableBlock;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _reactmarkdown = /*#__PURE__*/ _interop_require_default(require("react-markdown"));
const _core = require("@rp/react/web/mui/core");
const _icons = require("@rp/react/web/mui/icons");
const _utils = require("@rp/web/utils");
const _Chatstyles = require("../../Chat.styles");
const _inlineAttributionRenderer = require("../InlineAttribution/inlineAttributionRenderer");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const CollapsableBlock = ({ title, contents, isReady, inlineAttributionProps })=>{
    const [isOpen, setIsOpen] = (0, _react.useState)(isReady);
    const toggleDropdown = (0, _react.useCallback)(()=>{
        setIsOpen((prev)=>!prev);
    }, []);
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                sx: {
                    display: "flex",
                    width: 1,
                    justifyContent: isReady ? "left" : "space-between",
                    py: 1,
                    px: 0,
                    bgcolor: "transparent",
                    border: 0,
                    alignItems: "center",
                    cursor: "pointer",
                    gap: 1,
                    color: isReady ? "text.primary" : "text.secondary",
                    "& svg": {
                        color: "text.secondary",
                        opacity: isReady ? 0 : 1,
                        transition: "opacity 0.2"
                    },
                    "&:hover svg": {
                        opacity: 1
                    }
                },
                component: "button",
                onClick: toggleDropdown,
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                        sx: {
                            fontSize: 18,
                            fontWeight: 700
                        },
                        children: title
                    }),
                    isReady ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.KeyboardArrowDown, {
                        sx: {
                            transform: isOpen ? "rotateZ(180deg)" : undefined
                        }
                    }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.CircularProgress, {
                        size: 16
                    })
                ]
            }),
            isOpen ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_Chatstyles.ChatResponseText, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactmarkdown.default, {
                    remarkPlugins: [
                        _utils.remarkGfmNoAutoLink
                    ],
                    components: {
                        code: (0, _inlineAttributionRenderer.inlineAttributionRenderer)({
                            chunkMap: inlineAttributionProps.chunkMap,
                            externalMap: inlineAttributionProps.externalMap,
                            disabled: !isReady,
                            onUserInteraction: inlineAttributionProps.onUserInteraction
                        })
                    },
                    children: contents
                })
            }) : null
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NoYXQvc3JjL2xpYi9DaGF0L0NoYXQvQ2hhdFJlc3BvbnNlL0NoYXRSZXNwb25zZUJsb2Nrcy9Db2xsYXBzYWJsZUJsb2NrLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VDYWxsYmFjaywgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IFJlYWN0TWFya2Rvd24gZnJvbSBcInJlYWN0LW1hcmtkb3duXCJcbmltcG9ydCB7IGNyZWF0ZUNodW5rTWFwIH0gZnJvbSBcIkBycC9yZWFjdC9jb21tb24vaG9va3NcIlxuaW1wb3J0IHsgQm94LCBDaXJjdWxhclByb2dyZXNzLCBUeXBvZ3JhcGh5IH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvbXVpL2NvcmVcIlxuaW1wb3J0IHsgS2V5Ym9hcmRBcnJvd0Rvd24gfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9tdWkvaWNvbnNcIlxuaW1wb3J0IHsgcmVtYXJrR2ZtTm9BdXRvTGluayB9IGZyb20gXCJAcnAvd2ViL3V0aWxzXCJcbmltcG9ydCB7IENoYXRSZXNwb25zZVRleHQgfSBmcm9tIFwiLi4vLi4vQ2hhdC5zdHlsZXNcIlxuaW1wb3J0IHsgT25Vc2VySW50ZXJhY3Rpb25Qcm9wcyB9IGZyb20gXCIuLi9DaGF0UmVzcG9uc2VcIlxuaW1wb3J0IHsgaW5saW5lQXR0cmlidXRpb25SZW5kZXJlciB9IGZyb20gXCIuLi9JbmxpbmVBdHRyaWJ1dGlvbi9pbmxpbmVBdHRyaWJ1dGlvblJlbmRlcmVyXCJcblxudHlwZSBDaHVua01hcCA9IFJldHVyblR5cGU8dHlwZW9mIGNyZWF0ZUNodW5rTWFwPltcImNodW5rTWFwXCJdXG50eXBlIEV4dGVybmFsTWFwID0gUmV0dXJuVHlwZTx0eXBlb2YgY3JlYXRlQ2h1bmtNYXA+W1wiZXh0ZXJuYWxNYXBcIl1cblxudHlwZSBQcm9wcyA9IHtcbiAgdGl0bGU6IHN0cmluZ1xuICBjb250ZW50czogc3RyaW5nXG4gIGlzUmVhZHk6IGJvb2xlYW5cbiAgaW5saW5lQXR0cmlidXRpb25Qcm9wczoge1xuICAgIGNodW5rTWFwOiBDaHVua01hcFxuICAgIGV4dGVybmFsTWFwOiBFeHRlcm5hbE1hcFxuICAgIG9uVXNlckludGVyYWN0aW9uOiAocHJvcHM6IE9uVXNlckludGVyYWN0aW9uUHJvcHMpID0+IHZvaWRcbiAgfVxufVxuXG5jb25zdCBDb2xsYXBzYWJsZUJsb2NrID0gKHsgdGl0bGUsIGNvbnRlbnRzLCBpc1JlYWR5LCBpbmxpbmVBdHRyaWJ1dGlvblByb3BzIH06IFByb3BzKSA9PiB7XG4gIGNvbnN0IFtpc09wZW4sIHNldElzT3Blbl0gPSB1c2VTdGF0ZShpc1JlYWR5KVxuXG4gIGNvbnN0IHRvZ2dsZURyb3Bkb3duID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIHNldElzT3BlbihwcmV2ID0+ICFwcmV2KVxuICB9LCBbXSlcblxuICByZXR1cm4gKFxuICAgIDxCb3g+XG4gICAgICA8Qm94XG4gICAgICAgIHN4PXt7XG4gICAgICAgICAgZGlzcGxheTogXCJmbGV4XCIsXG4gICAgICAgICAgd2lkdGg6IDEsXG4gICAgICAgICAganVzdGlmeUNvbnRlbnQ6IGlzUmVhZHkgPyBcImxlZnRcIiA6IFwic3BhY2UtYmV0d2VlblwiLFxuICAgICAgICAgIHB5OiAxLFxuICAgICAgICAgIHB4OiAwLFxuICAgICAgICAgIGJnY29sb3I6IFwidHJhbnNwYXJlbnRcIixcbiAgICAgICAgICBib3JkZXI6IDAsXG4gICAgICAgICAgYWxpZ25JdGVtczogXCJjZW50ZXJcIixcbiAgICAgICAgICBjdXJzb3I6IFwicG9pbnRlclwiLFxuICAgICAgICAgIGdhcDogMSxcbiAgICAgICAgICBjb2xvcjogaXNSZWFkeSA/IFwidGV4dC5wcmltYXJ5XCIgOiBcInRleHQuc2Vjb25kYXJ5XCIsXG5cbiAgICAgICAgICBcIiYgc3ZnXCI6IHtcbiAgICAgICAgICAgIGNvbG9yOiBcInRleHQuc2Vjb25kYXJ5XCIsXG4gICAgICAgICAgICBvcGFjaXR5OiBpc1JlYWR5ID8gMCA6IDEsXG4gICAgICAgICAgICB0cmFuc2l0aW9uOiBcIm9wYWNpdHkgMC4yXCIsXG4gICAgICAgICAgfSxcblxuICAgICAgICAgIFwiJjpob3ZlciBzdmdcIjoge1xuICAgICAgICAgICAgb3BhY2l0eTogMSxcbiAgICAgICAgICB9LFxuICAgICAgICB9fVxuICAgICAgICBjb21wb25lbnQ9XCJidXR0b25cIlxuICAgICAgICBvbkNsaWNrPXt0b2dnbGVEcm9wZG93bn1cbiAgICAgID5cbiAgICAgICAgPFR5cG9ncmFwaHkgc3g9e3sgZm9udFNpemU6IDE4LCBmb250V2VpZ2h0OiA3MDAgfX0+e3RpdGxlfTwvVHlwb2dyYXBoeT5cbiAgICAgICAge2lzUmVhZHkgPyAoXG4gICAgICAgICAgPEtleWJvYXJkQXJyb3dEb3duIHN4PXt7IHRyYW5zZm9ybTogaXNPcGVuID8gXCJyb3RhdGVaKDE4MGRlZylcIiA6IHVuZGVmaW5lZCB9fSAvPlxuICAgICAgICApIDogKFxuICAgICAgICAgIDxDaXJjdWxhclByb2dyZXNzIHNpemU9ezE2fSAvPlxuICAgICAgICApfVxuICAgICAgPC9Cb3g+XG5cbiAgICAgIHtpc09wZW4gPyAoXG4gICAgICAgIDxDaGF0UmVzcG9uc2VUZXh0PlxuICAgICAgICAgIDxSZWFjdE1hcmtkb3duXG4gICAgICAgICAgICByZW1hcmtQbHVnaW5zPXtbcmVtYXJrR2ZtTm9BdXRvTGlua119XG4gICAgICAgICAgICBjb21wb25lbnRzPXt7XG4gICAgICAgICAgICAgIGNvZGU6IGlubGluZUF0dHJpYnV0aW9uUmVuZGVyZXIoe1xuICAgICAgICAgICAgICAgIGNodW5rTWFwOiBpbmxpbmVBdHRyaWJ1dGlvblByb3BzLmNodW5rTWFwLFxuICAgICAgICAgICAgICAgIGV4dGVybmFsTWFwOiBpbmxpbmVBdHRyaWJ1dGlvblByb3BzLmV4dGVybmFsTWFwLFxuICAgICAgICAgICAgICAgIGRpc2FibGVkOiAhaXNSZWFkeSxcbiAgICAgICAgICAgICAgICBvblVzZXJJbnRlcmFjdGlvbjogaW5saW5lQXR0cmlidXRpb25Qcm9wcy5vblVzZXJJbnRlcmFjdGlvbixcbiAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICB9fVxuICAgICAgICAgID5cbiAgICAgICAgICAgIHtjb250ZW50c31cbiAgICAgICAgICA8L1JlYWN0TWFya2Rvd24+XG4gICAgICAgIDwvQ2hhdFJlc3BvbnNlVGV4dD5cbiAgICAgICkgOiBudWxsfVxuICAgIDwvQm94PlxuICApXG59XG5cbmV4cG9ydCB7IENvbGxhcHNhYmxlQmxvY2sgfVxuIl0sIm5hbWVzIjpbIkNvbGxhcHNhYmxlQmxvY2siLCJ0aXRsZSIsImNvbnRlbnRzIiwiaXNSZWFkeSIsImlubGluZUF0dHJpYnV0aW9uUHJvcHMiLCJpc09wZW4iLCJzZXRJc09wZW4iLCJ1c2VTdGF0ZSIsInRvZ2dsZURyb3Bkb3duIiwidXNlQ2FsbGJhY2siLCJwcmV2IiwiQm94Iiwic3giLCJkaXNwbGF5Iiwid2lkdGgiLCJqdXN0aWZ5Q29udGVudCIsInB5IiwicHgiLCJiZ2NvbG9yIiwiYm9yZGVyIiwiYWxpZ25JdGVtcyIsImN1cnNvciIsImdhcCIsImNvbG9yIiwib3BhY2l0eSIsInRyYW5zaXRpb24iLCJjb21wb25lbnQiLCJvbkNsaWNrIiwiVHlwb2dyYXBoeSIsImZvbnRTaXplIiwiZm9udFdlaWdodCIsIktleWJvYXJkQXJyb3dEb3duIiwidHJhbnNmb3JtIiwidW5kZWZpbmVkIiwiQ2lyY3VsYXJQcm9ncmVzcyIsInNpemUiLCJDaGF0UmVzcG9uc2VUZXh0IiwiUmVhY3RNYXJrZG93biIsInJlbWFya1BsdWdpbnMiLCJyZW1hcmtHZm1Ob0F1dG9MaW5rIiwiY29tcG9uZW50cyIsImNvZGUiLCJpbmxpbmVBdHRyaWJ1dGlvblJlbmRlcmVyIiwiY2h1bmtNYXAiLCJleHRlcm5hbE1hcCIsImRpc2FibGVkIiwib25Vc2VySW50ZXJhY3Rpb24iXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBeUZTQTs7O2VBQUFBOzs7O3VCQXpGNkI7c0VBQ1o7c0JBRXdCO3VCQUNoQjt1QkFDRTs0QkFDSDsyQ0FFUzs7Ozs7O0FBZ0IxQyxNQUFNQSxtQkFBbUIsQ0FBQyxFQUFFQyxLQUFLLEVBQUVDLFFBQVEsRUFBRUMsT0FBTyxFQUFFQyxzQkFBc0IsRUFBUztJQUNuRixNQUFNLENBQUNDLFFBQVFDLFVBQVUsR0FBR0MsSUFBQUEsZUFBUSxFQUFDSjtJQUVyQyxNQUFNSyxpQkFBaUJDLElBQUFBLGtCQUFXLEVBQUM7UUFDakNILFVBQVVJLENBQUFBLE9BQVEsQ0FBQ0E7SUFDckIsR0FBRyxFQUFFO0lBRUwscUJBQ0Usc0JBQUNDLFNBQUc7OzBCQUNGLHNCQUFDQSxTQUFHO2dCQUNGQyxJQUFJO29CQUNGQyxTQUFTO29CQUNUQyxPQUFPO29CQUNQQyxnQkFBZ0JaLFVBQVUsU0FBUztvQkFDbkNhLElBQUk7b0JBQ0pDLElBQUk7b0JBQ0pDLFNBQVM7b0JBQ1RDLFFBQVE7b0JBQ1JDLFlBQVk7b0JBQ1pDLFFBQVE7b0JBQ1JDLEtBQUs7b0JBQ0xDLE9BQU9wQixVQUFVLGlCQUFpQjtvQkFFbEMsU0FBUzt3QkFDUG9CLE9BQU87d0JBQ1BDLFNBQVNyQixVQUFVLElBQUk7d0JBQ3ZCc0IsWUFBWTtvQkFDZDtvQkFFQSxlQUFlO3dCQUNiRCxTQUFTO29CQUNYO2dCQUNGO2dCQUNBRSxXQUFVO2dCQUNWQyxTQUFTbkI7O2tDQUVULHFCQUFDb0IsZ0JBQVU7d0JBQUNoQixJQUFJOzRCQUFFaUIsVUFBVTs0QkFBSUMsWUFBWTt3QkFBSTtrQ0FBSTdCOztvQkFDbkRFLHdCQUNDLHFCQUFDNEIsd0JBQWlCO3dCQUFDbkIsSUFBSTs0QkFBRW9CLFdBQVczQixTQUFTLG9CQUFvQjRCO3dCQUFVO3VDQUUzRSxxQkFBQ0Msc0JBQWdCO3dCQUFDQyxNQUFNOzs7O1lBSTNCOUIsdUJBQ0MscUJBQUMrQiw0QkFBZ0I7MEJBQ2YsY0FBQSxxQkFBQ0Msc0JBQWE7b0JBQ1pDLGVBQWU7d0JBQUNDLDBCQUFtQjtxQkFBQztvQkFDcENDLFlBQVk7d0JBQ1ZDLE1BQU1DLElBQUFBLG9EQUF5QixFQUFDOzRCQUM5QkMsVUFBVXZDLHVCQUF1QnVDLFFBQVE7NEJBQ3pDQyxhQUFheEMsdUJBQXVCd0MsV0FBVzs0QkFDL0NDLFVBQVUsQ0FBQzFDOzRCQUNYMkMsbUJBQW1CMUMsdUJBQXVCMEMsaUJBQWlCO3dCQUM3RDtvQkFDRjs4QkFFQzVDOztpQkFHSDs7O0FBR1YifQ==