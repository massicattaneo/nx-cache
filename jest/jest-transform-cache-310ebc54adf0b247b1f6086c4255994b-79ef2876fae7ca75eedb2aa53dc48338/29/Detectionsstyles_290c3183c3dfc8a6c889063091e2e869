1ae733dfb652ec82a8ad1a94997c83d3
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    DetectionCardContainer: function() {
        return DetectionCardContainer;
    },
    DetectionCardList: function() {
        return DetectionCardList;
    },
    DetectionContainer: function() {
        return DetectionContainer;
    }
});
const _theme = require("@rp/react/theme");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const DetectionContainer = (0, _theme.styled)("div")(()=>({
        display: "flex",
        flexDirection: "column",
        height: "100%"
    }));
const DetectionCardList = (0, _theme.styled)("div")(({ theme })=>_object_spread_props(_object_spread({
        overflowY: "auto",
        padding: theme.spacing(1)
    }, theme.scrollbarStyles), {
        "& > div": {
            display: "flex",
            flexDirection: "column"
        },
        "& a": {
            margin: `${theme.spacing(1)} 0 0 0`
        },
        "& button": {
            margin: `${theme.spacing(0.5)} 0`
        }
    }));
const DetectionCardContainer = (0, _theme.styled)("button", {
    name: "DetectionCard",
    shouldForwardProp: (prop)=>prop !== "selected"
})(({ theme, selected = false })=>({
        backgroundColor: selected ? theme.palette.primary.background : "#252525",
        padding: theme.spacing(1.5),
        borderRadius: theme.spacing(0.5),
        cursor: "pointer",
        color: theme.palette.text.secondary,
        transition: "background 0.2s",
        border: 0,
        textAlign: "initial",
        fontFamily: theme.typography.body1.fontFamily,
        fontSize: theme.typography.body1.fontSize,
        "&:hover": {
            backgroundColor: selected ? theme.palette.primary.background : "#303030"
        },
        "& p": {
            margin: 0
        }
    }));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2Rpc2NvdmVyeS1zaWRlYmFyL2RvY3VtZW50LWRpc2NvdmVyeS9zcmMvbGliL0RldGVjdGlvbnMvRGV0ZWN0aW9ucy5zdHlsZXMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc3R5bGVkIH0gZnJvbSBcIkBycC9yZWFjdC90aGVtZVwiXG5cbnR5cGUgRGV0ZWN0aW9uQ2FyZENvbnRhaW5lclByb3BzID0ge1xuICBzZWxlY3RlZD86IGJvb2xlYW5cbn1cblxuY29uc3QgRGV0ZWN0aW9uQ29udGFpbmVyID0gc3R5bGVkKFwiZGl2XCIpKCgpID0+ICh7XG4gIGRpc3BsYXk6IFwiZmxleFwiLFxuICBmbGV4RGlyZWN0aW9uOiBcImNvbHVtblwiLFxuICBoZWlnaHQ6IFwiMTAwJVwiLFxufSkpXG5cbmNvbnN0IERldGVjdGlvbkNhcmRMaXN0ID0gc3R5bGVkKFwiZGl2XCIpKCh7IHRoZW1lIH0pID0+ICh7XG4gIG92ZXJmbG93WTogXCJhdXRvXCIsXG4gIHBhZGRpbmc6IHRoZW1lLnNwYWNpbmcoMSksXG4gIC4uLnRoZW1lLnNjcm9sbGJhclN0eWxlcyxcbiAgXCImID4gZGl2XCI6IHtcbiAgICBkaXNwbGF5OiBcImZsZXhcIixcbiAgICBmbGV4RGlyZWN0aW9uOiBcImNvbHVtblwiLFxuICB9LFxuICBcIiYgYVwiOiB7XG4gICAgbWFyZ2luOiBgJHt0aGVtZS5zcGFjaW5nKDEpfSAwIDAgMGAsXG4gIH0sXG4gIFwiJiBidXR0b25cIjoge1xuICAgIG1hcmdpbjogYCR7dGhlbWUuc3BhY2luZygwLjUpfSAwYCxcbiAgfSxcbn0pKVxuXG5jb25zdCBEZXRlY3Rpb25DYXJkQ29udGFpbmVyID0gc3R5bGVkKFwiYnV0dG9uXCIsIHtcbiAgbmFtZTogXCJEZXRlY3Rpb25DYXJkXCIsXG4gIHNob3VsZEZvcndhcmRQcm9wOiBwcm9wID0+IHByb3AgIT09IFwic2VsZWN0ZWRcIixcbn0pPERldGVjdGlvbkNhcmRDb250YWluZXJQcm9wcz4oKHsgdGhlbWUsIHNlbGVjdGVkID0gZmFsc2UgfSkgPT4gKHtcbiAgYmFja2dyb3VuZENvbG9yOiBzZWxlY3RlZCA/IHRoZW1lLnBhbGV0dGUucHJpbWFyeS5iYWNrZ3JvdW5kIDogXCIjMjUyNTI1XCIsXG4gIHBhZGRpbmc6IHRoZW1lLnNwYWNpbmcoMS41KSxcbiAgYm9yZGVyUmFkaXVzOiB0aGVtZS5zcGFjaW5nKDAuNSksXG4gIGN1cnNvcjogXCJwb2ludGVyXCIsXG4gIGNvbG9yOiB0aGVtZS5wYWxldHRlLnRleHQuc2Vjb25kYXJ5LFxuICB0cmFuc2l0aW9uOiBcImJhY2tncm91bmQgMC4yc1wiLFxuICBib3JkZXI6IDAsXG4gIHRleHRBbGlnbjogXCJpbml0aWFsXCIsXG4gIGZvbnRGYW1pbHk6IHRoZW1lLnR5cG9ncmFwaHkuYm9keTEuZm9udEZhbWlseSxcbiAgZm9udFNpemU6IHRoZW1lLnR5cG9ncmFwaHkuYm9keTEuZm9udFNpemUsXG5cbiAgXCImOmhvdmVyXCI6IHtcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHNlbGVjdGVkID8gdGhlbWUucGFsZXR0ZS5wcmltYXJ5LmJhY2tncm91bmQgOiBcIiMzMDMwMzBcIixcbiAgfSxcblxuICBcIiYgcFwiOiB7XG4gICAgbWFyZ2luOiAwLFxuICB9LFxufSkpXG5cbmV4cG9ydCB7IERldGVjdGlvbkNvbnRhaW5lciwgRGV0ZWN0aW9uQ2FyZExpc3QsIERldGVjdGlvbkNhcmRDb250YWluZXIgfVxuIl0sIm5hbWVzIjpbIkRldGVjdGlvbkNhcmRDb250YWluZXIiLCJEZXRlY3Rpb25DYXJkTGlzdCIsIkRldGVjdGlvbkNvbnRhaW5lciIsInN0eWxlZCIsImRpc3BsYXkiLCJmbGV4RGlyZWN0aW9uIiwiaGVpZ2h0IiwidGhlbWUiLCJvdmVyZmxvd1kiLCJwYWRkaW5nIiwic3BhY2luZyIsInNjcm9sbGJhclN0eWxlcyIsIm1hcmdpbiIsIm5hbWUiLCJzaG91bGRGb3J3YXJkUHJvcCIsInByb3AiLCJzZWxlY3RlZCIsImJhY2tncm91bmRDb2xvciIsInBhbGV0dGUiLCJwcmltYXJ5IiwiYmFja2dyb3VuZCIsImJvcmRlclJhZGl1cyIsImN1cnNvciIsImNvbG9yIiwidGV4dCIsInNlY29uZGFyeSIsInRyYW5zaXRpb24iLCJib3JkZXIiLCJ0ZXh0QWxpZ24iLCJmb250RmFtaWx5IiwidHlwb2dyYXBoeSIsImJvZHkxIiwiZm9udFNpemUiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztJQW9EZ0RBLHNCQUFzQjtlQUF0QkE7O0lBQW5CQyxpQkFBaUI7ZUFBakJBOztJQUFwQkMsa0JBQWtCO2VBQWxCQTs7O3VCQXBEYzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFNdkIsTUFBTUEscUJBQXFCQyxJQUFBQSxhQUFNLEVBQUMsT0FBTyxJQUFPLENBQUE7UUFDOUNDLFNBQVM7UUFDVEMsZUFBZTtRQUNmQyxRQUFRO0lBQ1YsQ0FBQTtBQUVBLE1BQU1MLG9CQUFvQkUsSUFBQUEsYUFBTSxFQUFDLE9BQU8sQ0FBQyxFQUFFSSxLQUFLLEVBQUUsR0FBTTtRQUN0REMsV0FBVztRQUNYQyxTQUFTRixNQUFNRyxPQUFPLENBQUM7T0FDcEJILE1BQU1JLGVBQWU7UUFDeEIsV0FBVztZQUNUUCxTQUFTO1lBQ1RDLGVBQWU7UUFDakI7UUFDQSxPQUFPO1lBQ0xPLFFBQVEsQ0FBQyxFQUFFTCxNQUFNRyxPQUFPLENBQUMsR0FBRyxNQUFNLENBQUM7UUFDckM7UUFDQSxZQUFZO1lBQ1ZFLFFBQVEsQ0FBQyxFQUFFTCxNQUFNRyxPQUFPLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDbkM7O0FBR0YsTUFBTVYseUJBQXlCRyxJQUFBQSxhQUFNLEVBQUMsVUFBVTtJQUM5Q1UsTUFBTTtJQUNOQyxtQkFBbUJDLENBQUFBLE9BQVFBLFNBQVM7QUFDdEMsR0FBZ0MsQ0FBQyxFQUFFUixLQUFLLEVBQUVTLFdBQVcsS0FBSyxFQUFFLEdBQU0sQ0FBQTtRQUNoRUMsaUJBQWlCRCxXQUFXVCxNQUFNVyxPQUFPLENBQUNDLE9BQU8sQ0FBQ0MsVUFBVSxHQUFHO1FBQy9EWCxTQUFTRixNQUFNRyxPQUFPLENBQUM7UUFDdkJXLGNBQWNkLE1BQU1HLE9BQU8sQ0FBQztRQUM1QlksUUFBUTtRQUNSQyxPQUFPaEIsTUFBTVcsT0FBTyxDQUFDTSxJQUFJLENBQUNDLFNBQVM7UUFDbkNDLFlBQVk7UUFDWkMsUUFBUTtRQUNSQyxXQUFXO1FBQ1hDLFlBQVl0QixNQUFNdUIsVUFBVSxDQUFDQyxLQUFLLENBQUNGLFVBQVU7UUFDN0NHLFVBQVV6QixNQUFNdUIsVUFBVSxDQUFDQyxLQUFLLENBQUNDLFFBQVE7UUFFekMsV0FBVztZQUNUZixpQkFBaUJELFdBQVdULE1BQU1XLE9BQU8sQ0FBQ0MsT0FBTyxDQUFDQyxVQUFVLEdBQUc7UUFDakU7UUFFQSxPQUFPO1lBQ0xSLFFBQVE7UUFDVjtJQUNGLENBQUEifQ==