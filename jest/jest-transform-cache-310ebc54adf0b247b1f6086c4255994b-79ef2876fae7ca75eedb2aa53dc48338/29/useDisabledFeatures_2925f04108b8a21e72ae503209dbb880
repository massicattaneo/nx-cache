8cb536396e23dfdf48ec3e6d57b88719
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "useDisabledFeatures", {
    enumerable: true,
    get: function() {
        return useDisabledFeatures;
    }
});
const _launchdarklyreactclientsdk = require("launchdarkly-react-client-sdk");
const _hooks = require("@rp/react/web/common/hooks");
const _featureflags = require("../atoms/feature-flags");
const useDisabledFeatures = ()=>{
    const [SHOW_SEARCH] = (0, _featureflags.useFeatureAtom)("search");
    const [SHOW_CHAT] = (0, _featureflags.useFeatureAtom)("chat");
    const [SHOW_FILES] = (0, _featureflags.useFeatureAtom)("file");
    const [SHOW_WATCHLISTS] = (0, _featureflags.useFeatureAtom)("watchlist");
    const [SHOW_BRIEF] = (0, _featureflags.useFeatureAtom)("brief");
    const [SHOW_AGENT] = (0, _featureflags.useFeatureAtom)("enableAgentMode");
    const [SHOW_SOURCE_FILES] = (0, _featureflags.useFeatureAtom)("enableSourceFiles");
    const [SHOW_SOURCE_EARNINGS_CALLS] = (0, _featureflags.useFeatureAtom)("enableSourceEarningsCalls");
    const [SHOW_SOURCE_REGULATORY_FILINGS] = (0, _featureflags.useFeatureAtom)("enableSourceRegulatoryFilings");
    const [SHOW_SOURCE_MARKET_INTELLIGENCE] = (0, _featureflags.useFeatureAtom)("enableSourceMarketIntelligence");
    const [SHOW_SOURCE_FACTSET_TRANSCRIPTS] = (0, _featureflags.useFeatureAtom)("enableSourceFactsetTranscripts");
    const [SHOW_SOURCE_QUARTR_PRO] = (0, _featureflags.useFeatureAtom)("enableSourceQuartrPro");
    const [SHOW_SOURCE_PRICING_CULTURE] = (0, _featureflags.useFeatureAtom)("enableSourcePricingCulture");
    const [SHOW_SOURCE_CRYPTO_MARKETS] = (0, _featureflags.useFeatureAtom)("enableSourceCryptoMarkets");
    const [SHOW_SOURCE_MIDDLE_EAST_MARKETS] = (0, _featureflags.useFeatureAtom)("enableSourceMiddleEastMarkets");
    const [SHOW_SOURCE_FINANCIAL_TIMES] = (0, _featureflags.useFeatureAtom)("enableSourceFinancialTimes");
    const [SHOW_SOURCE_EXPERT_NETWORKS] = (0, _featureflags.useFeatureAtom)("enableSourceExpertNetworks");
    const { webFeEnableEngineAgents } = (0, _launchdarklyreactclientsdk.useFlags)();
    const enabledEngineAgents = (0, _hooks.getlocalOverrideFlags)("webFeEnableEngineAgents", webFeEnableEngineAgents);
    return {
        flagsStatus: {
            search: SHOW_SEARCH,
            chat: SHOW_CHAT,
            "file:index": SHOW_FILES,
            watchlist: SHOW_WATCHLISTS,
            "extra:brief": SHOW_BRIEF,
            agent: SHOW_AGENT
        },
        sourceFilters: {
            news: true,
            earnings_calls: SHOW_SOURCE_EARNINGS_CALLS,
            filings: SHOW_SOURCE_REGULATORY_FILINGS,
            files: SHOW_SOURCE_FILES,
            "job-analytics": enabledEngineAgents,
            price: enabledEngineAgents,
            "sentiment-attention": enabledEngineAgents,
            estimates: enabledEngineAgents,
            crunchbase: enabledEngineAgents,
            "knowledge-graph": enabledEngineAgents,
            "etf-holdings": enabledEngineAgents,
            market_intelligence: SHOW_SOURCE_MARKET_INTELLIGENCE,
            transcripts: SHOW_SOURCE_FACTSET_TRANSCRIPTS,
            quartr_pro: SHOW_SOURCE_QUARTR_PRO,
            market_narratives: SHOW_SOURCE_PRICING_CULTURE,
            middle_eastern_markets: SHOW_SOURCE_MIDDLE_EAST_MARKETS,
            crypto_markets: SHOW_SOURCE_CRYPTO_MARKETS,
            financial_times: SHOW_SOURCE_FINANCIAL_TIMES,
            expert_networks: SHOW_SOURCE_EXPERT_NETWORKS
        }
    };
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2FwcHMvY2xpZW50LXdlYi9zcmMvYXBwL2hvb2tzL3VzZURpc2FibGVkRmVhdHVyZXMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlRmxhZ3MgfSBmcm9tIFwibGF1bmNoZGFya2x5LXJlYWN0LWNsaWVudC1zZGtcIlxuaW1wb3J0IHsgZ2V0bG9jYWxPdmVycmlkZUZsYWdzIH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvY29tbW9uL2hvb2tzXCJcbmltcG9ydCB7IHVzZUZlYXR1cmVBdG9tIH0gZnJvbSBcIi4uL2F0b21zL2ZlYXR1cmUtZmxhZ3NcIlxuXG5jb25zdCB1c2VEaXNhYmxlZEZlYXR1cmVzID0gKCkgPT4ge1xuICBjb25zdCBbU0hPV19TRUFSQ0hdID0gdXNlRmVhdHVyZUF0b20oXCJzZWFyY2hcIilcbiAgY29uc3QgW1NIT1dfQ0hBVF0gPSB1c2VGZWF0dXJlQXRvbShcImNoYXRcIilcbiAgY29uc3QgW1NIT1dfRklMRVNdID0gdXNlRmVhdHVyZUF0b20oXCJmaWxlXCIpXG4gIGNvbnN0IFtTSE9XX1dBVENITElTVFNdID0gdXNlRmVhdHVyZUF0b20oXCJ3YXRjaGxpc3RcIilcbiAgY29uc3QgW1NIT1dfQlJJRUZdID0gdXNlRmVhdHVyZUF0b20oXCJicmllZlwiKVxuICBjb25zdCBbU0hPV19BR0VOVF0gPSB1c2VGZWF0dXJlQXRvbShcImVuYWJsZUFnZW50TW9kZVwiKVxuICBjb25zdCBbU0hPV19TT1VSQ0VfRklMRVNdID0gdXNlRmVhdHVyZUF0b20oXCJlbmFibGVTb3VyY2VGaWxlc1wiKVxuICBjb25zdCBbU0hPV19TT1VSQ0VfRUFSTklOR1NfQ0FMTFNdID0gdXNlRmVhdHVyZUF0b20oXCJlbmFibGVTb3VyY2VFYXJuaW5nc0NhbGxzXCIpXG4gIGNvbnN0IFtTSE9XX1NPVVJDRV9SRUdVTEFUT1JZX0ZJTElOR1NdID0gdXNlRmVhdHVyZUF0b20oXCJlbmFibGVTb3VyY2VSZWd1bGF0b3J5RmlsaW5nc1wiKVxuICBjb25zdCBbU0hPV19TT1VSQ0VfTUFSS0VUX0lOVEVMTElHRU5DRV0gPSB1c2VGZWF0dXJlQXRvbShcImVuYWJsZVNvdXJjZU1hcmtldEludGVsbGlnZW5jZVwiKVxuICBjb25zdCBbU0hPV19TT1VSQ0VfRkFDVFNFVF9UUkFOU0NSSVBUU10gPSB1c2VGZWF0dXJlQXRvbShcImVuYWJsZVNvdXJjZUZhY3RzZXRUcmFuc2NyaXB0c1wiKVxuICBjb25zdCBbU0hPV19TT1VSQ0VfUVVBUlRSX1BST10gPSB1c2VGZWF0dXJlQXRvbShcImVuYWJsZVNvdXJjZVF1YXJ0clByb1wiKVxuICBjb25zdCBbU0hPV19TT1VSQ0VfUFJJQ0lOR19DVUxUVVJFXSA9IHVzZUZlYXR1cmVBdG9tKFwiZW5hYmxlU291cmNlUHJpY2luZ0N1bHR1cmVcIilcbiAgY29uc3QgW1NIT1dfU09VUkNFX0NSWVBUT19NQVJLRVRTXSA9IHVzZUZlYXR1cmVBdG9tKFwiZW5hYmxlU291cmNlQ3J5cHRvTWFya2V0c1wiKVxuICBjb25zdCBbU0hPV19TT1VSQ0VfTUlERExFX0VBU1RfTUFSS0VUU10gPSB1c2VGZWF0dXJlQXRvbShcImVuYWJsZVNvdXJjZU1pZGRsZUVhc3RNYXJrZXRzXCIpXG4gIGNvbnN0IFtTSE9XX1NPVVJDRV9GSU5BTkNJQUxfVElNRVNdID0gdXNlRmVhdHVyZUF0b20oXCJlbmFibGVTb3VyY2VGaW5hbmNpYWxUaW1lc1wiKVxuICBjb25zdCBbU0hPV19TT1VSQ0VfRVhQRVJUX05FVFdPUktTXSA9IHVzZUZlYXR1cmVBdG9tKFwiZW5hYmxlU291cmNlRXhwZXJ0TmV0d29ya3NcIilcblxuICBjb25zdCB7IHdlYkZlRW5hYmxlRW5naW5lQWdlbnRzIH0gPSB1c2VGbGFncygpXG4gIGNvbnN0IGVuYWJsZWRFbmdpbmVBZ2VudHMgPSBnZXRsb2NhbE92ZXJyaWRlRmxhZ3MoXG4gICAgXCJ3ZWJGZUVuYWJsZUVuZ2luZUFnZW50c1wiLFxuICAgIHdlYkZlRW5hYmxlRW5naW5lQWdlbnRzLFxuICApXG5cbiAgcmV0dXJuIHtcbiAgICBmbGFnc1N0YXR1czoge1xuICAgICAgc2VhcmNoOiBTSE9XX1NFQVJDSCxcbiAgICAgIGNoYXQ6IFNIT1dfQ0hBVCxcbiAgICAgIFwiZmlsZTppbmRleFwiOiBTSE9XX0ZJTEVTLFxuICAgICAgd2F0Y2hsaXN0OiBTSE9XX1dBVENITElTVFMsXG4gICAgICBcImV4dHJhOmJyaWVmXCI6IFNIT1dfQlJJRUYsXG4gICAgICBhZ2VudDogU0hPV19BR0VOVCxcbiAgICB9LFxuICAgIHNvdXJjZUZpbHRlcnM6IHtcbiAgICAgIG5ld3M6IHRydWUsXG4gICAgICBlYXJuaW5nc19jYWxsczogU0hPV19TT1VSQ0VfRUFSTklOR1NfQ0FMTFMsXG4gICAgICBmaWxpbmdzOiBTSE9XX1NPVVJDRV9SRUdVTEFUT1JZX0ZJTElOR1MsXG4gICAgICBmaWxlczogU0hPV19TT1VSQ0VfRklMRVMsXG4gICAgICBcImpvYi1hbmFseXRpY3NcIjogZW5hYmxlZEVuZ2luZUFnZW50cyxcbiAgICAgIHByaWNlOiBlbmFibGVkRW5naW5lQWdlbnRzLFxuICAgICAgXCJzZW50aW1lbnQtYXR0ZW50aW9uXCI6IGVuYWJsZWRFbmdpbmVBZ2VudHMsXG4gICAgICBlc3RpbWF0ZXM6IGVuYWJsZWRFbmdpbmVBZ2VudHMsXG4gICAgICBjcnVuY2hiYXNlOiBlbmFibGVkRW5naW5lQWdlbnRzLFxuICAgICAgXCJrbm93bGVkZ2UtZ3JhcGhcIjogZW5hYmxlZEVuZ2luZUFnZW50cyxcbiAgICAgIFwiZXRmLWhvbGRpbmdzXCI6IGVuYWJsZWRFbmdpbmVBZ2VudHMsXG4gICAgICBtYXJrZXRfaW50ZWxsaWdlbmNlOiBTSE9XX1NPVVJDRV9NQVJLRVRfSU5URUxMSUdFTkNFLFxuICAgICAgdHJhbnNjcmlwdHM6IFNIT1dfU09VUkNFX0ZBQ1RTRVRfVFJBTlNDUklQVFMsXG4gICAgICBxdWFydHJfcHJvOiBTSE9XX1NPVVJDRV9RVUFSVFJfUFJPLFxuICAgICAgbWFya2V0X25hcnJhdGl2ZXM6IFNIT1dfU09VUkNFX1BSSUNJTkdfQ1VMVFVSRSxcbiAgICAgIG1pZGRsZV9lYXN0ZXJuX21hcmtldHM6IFNIT1dfU09VUkNFX01JRERMRV9FQVNUX01BUktFVFMsXG4gICAgICBjcnlwdG9fbWFya2V0czogU0hPV19TT1VSQ0VfQ1JZUFRPX01BUktFVFMsXG4gICAgICBmaW5hbmNpYWxfdGltZXM6IFNIT1dfU09VUkNFX0ZJTkFOQ0lBTF9USU1FUyxcbiAgICAgIGV4cGVydF9uZXR3b3JrczogU0hPV19TT1VSQ0VfRVhQRVJUX05FVFdPUktTLFxuICAgIH0sXG4gIH1cbn1cblxuZXhwb3J0IHsgdXNlRGlzYWJsZWRGZWF0dXJlcyB9XG4iXSwibmFtZXMiOlsidXNlRGlzYWJsZWRGZWF0dXJlcyIsIlNIT1dfU0VBUkNIIiwidXNlRmVhdHVyZUF0b20iLCJTSE9XX0NIQVQiLCJTSE9XX0ZJTEVTIiwiU0hPV19XQVRDSExJU1RTIiwiU0hPV19CUklFRiIsIlNIT1dfQUdFTlQiLCJTSE9XX1NPVVJDRV9GSUxFUyIsIlNIT1dfU09VUkNFX0VBUk5JTkdTX0NBTExTIiwiU0hPV19TT1VSQ0VfUkVHVUxBVE9SWV9GSUxJTkdTIiwiU0hPV19TT1VSQ0VfTUFSS0VUX0lOVEVMTElHRU5DRSIsIlNIT1dfU09VUkNFX0ZBQ1RTRVRfVFJBTlNDUklQVFMiLCJTSE9XX1NPVVJDRV9RVUFSVFJfUFJPIiwiU0hPV19TT1VSQ0VfUFJJQ0lOR19DVUxUVVJFIiwiU0hPV19TT1VSQ0VfQ1JZUFRPX01BUktFVFMiLCJTSE9XX1NPVVJDRV9NSURETEVfRUFTVF9NQVJLRVRTIiwiU0hPV19TT1VSQ0VfRklOQU5DSUFMX1RJTUVTIiwiU0hPV19TT1VSQ0VfRVhQRVJUX05FVFdPUktTIiwid2ViRmVFbmFibGVFbmdpbmVBZ2VudHMiLCJ1c2VGbGFncyIsImVuYWJsZWRFbmdpbmVBZ2VudHMiLCJnZXRsb2NhbE92ZXJyaWRlRmxhZ3MiLCJmbGFnc1N0YXR1cyIsInNlYXJjaCIsImNoYXQiLCJ3YXRjaGxpc3QiLCJhZ2VudCIsInNvdXJjZUZpbHRlcnMiLCJuZXdzIiwiZWFybmluZ3NfY2FsbHMiLCJmaWxpbmdzIiwiZmlsZXMiLCJwcmljZSIsImVzdGltYXRlcyIsImNydW5jaGJhc2UiLCJtYXJrZXRfaW50ZWxsaWdlbmNlIiwidHJhbnNjcmlwdHMiLCJxdWFydHJfcHJvIiwibWFya2V0X25hcnJhdGl2ZXMiLCJtaWRkbGVfZWFzdGVybl9tYXJrZXRzIiwiY3J5cHRvX21hcmtldHMiLCJmaW5hbmNpYWxfdGltZXMiLCJleHBlcnRfbmV0d29ya3MiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkE4RFNBOzs7ZUFBQUE7Ozs0Q0E5RGdCO3VCQUNhOzhCQUNQO0FBRS9CLE1BQU1BLHNCQUFzQjtJQUMxQixNQUFNLENBQUNDLFlBQVksR0FBR0MsSUFBQUEsNEJBQWMsRUFBQztJQUNyQyxNQUFNLENBQUNDLFVBQVUsR0FBR0QsSUFBQUEsNEJBQWMsRUFBQztJQUNuQyxNQUFNLENBQUNFLFdBQVcsR0FBR0YsSUFBQUEsNEJBQWMsRUFBQztJQUNwQyxNQUFNLENBQUNHLGdCQUFnQixHQUFHSCxJQUFBQSw0QkFBYyxFQUFDO0lBQ3pDLE1BQU0sQ0FBQ0ksV0FBVyxHQUFHSixJQUFBQSw0QkFBYyxFQUFDO0lBQ3BDLE1BQU0sQ0FBQ0ssV0FBVyxHQUFHTCxJQUFBQSw0QkFBYyxFQUFDO0lBQ3BDLE1BQU0sQ0FBQ00sa0JBQWtCLEdBQUdOLElBQUFBLDRCQUFjLEVBQUM7SUFDM0MsTUFBTSxDQUFDTywyQkFBMkIsR0FBR1AsSUFBQUEsNEJBQWMsRUFBQztJQUNwRCxNQUFNLENBQUNRLCtCQUErQixHQUFHUixJQUFBQSw0QkFBYyxFQUFDO0lBQ3hELE1BQU0sQ0FBQ1MsZ0NBQWdDLEdBQUdULElBQUFBLDRCQUFjLEVBQUM7SUFDekQsTUFBTSxDQUFDVSxnQ0FBZ0MsR0FBR1YsSUFBQUEsNEJBQWMsRUFBQztJQUN6RCxNQUFNLENBQUNXLHVCQUF1QixHQUFHWCxJQUFBQSw0QkFBYyxFQUFDO0lBQ2hELE1BQU0sQ0FBQ1ksNEJBQTRCLEdBQUdaLElBQUFBLDRCQUFjLEVBQUM7SUFDckQsTUFBTSxDQUFDYSwyQkFBMkIsR0FBR2IsSUFBQUEsNEJBQWMsRUFBQztJQUNwRCxNQUFNLENBQUNjLGdDQUFnQyxHQUFHZCxJQUFBQSw0QkFBYyxFQUFDO0lBQ3pELE1BQU0sQ0FBQ2UsNEJBQTRCLEdBQUdmLElBQUFBLDRCQUFjLEVBQUM7SUFDckQsTUFBTSxDQUFDZ0IsNEJBQTRCLEdBQUdoQixJQUFBQSw0QkFBYyxFQUFDO0lBRXJELE1BQU0sRUFBRWlCLHVCQUF1QixFQUFFLEdBQUdDLElBQUFBLG9DQUFRO0lBQzVDLE1BQU1DLHNCQUFzQkMsSUFBQUEsNEJBQXFCLEVBQy9DLDJCQUNBSDtJQUdGLE9BQU87UUFDTEksYUFBYTtZQUNYQyxRQUFRdkI7WUFDUndCLE1BQU10QjtZQUNOLGNBQWNDO1lBQ2RzQixXQUFXckI7WUFDWCxlQUFlQztZQUNmcUIsT0FBT3BCO1FBQ1Q7UUFDQXFCLGVBQWU7WUFDYkMsTUFBTTtZQUNOQyxnQkFBZ0JyQjtZQUNoQnNCLFNBQVNyQjtZQUNUc0IsT0FBT3hCO1lBQ1AsaUJBQWlCYTtZQUNqQlksT0FBT1o7WUFDUCx1QkFBdUJBO1lBQ3ZCYSxXQUFXYjtZQUNYYyxZQUFZZDtZQUNaLG1CQUFtQkE7WUFDbkIsZ0JBQWdCQTtZQUNoQmUscUJBQXFCekI7WUFDckIwQixhQUFhekI7WUFDYjBCLFlBQVl6QjtZQUNaMEIsbUJBQW1CekI7WUFDbkIwQix3QkFBd0J4QjtZQUN4QnlCLGdCQUFnQjFCO1lBQ2hCMkIsaUJBQWlCekI7WUFDakIwQixpQkFBaUJ6QjtRQUNuQjtJQUNGO0FBQ0YifQ==