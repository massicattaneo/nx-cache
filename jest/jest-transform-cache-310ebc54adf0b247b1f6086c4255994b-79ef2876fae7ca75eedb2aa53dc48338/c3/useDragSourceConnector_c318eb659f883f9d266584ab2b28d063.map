{"version":3,"sources":["../../../src/hooks/useDrag/useDragSourceConnector.ts"],"sourcesContent":["import { useMemo } from 'react'\n\nimport { SourceConnector } from '../../internals/index.js'\nimport type {\n\tDragPreviewOptions,\n\tDragSourceOptions,\n} from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\n\nexport function useDragSourceConnector(\n\tdragSourceOptions: DragSourceOptions | undefined,\n\tdragPreviewOptions: DragPreviewOptions | undefined,\n): SourceConnector {\n\tconst manager = useDragDropManager()\n\tconst connector = useMemo(\n\t\t() => new SourceConnector(manager.getBackend()),\n\t\t[manager],\n\t)\n\tuseIsomorphicLayoutEffect(() => {\n\t\tconnector.dragSourceOptions = dragSourceOptions || null\n\t\tconnector.reconnect()\n\t\treturn () => connector.disconnectDragSource()\n\t}, [connector, dragSourceOptions])\n\tuseIsomorphicLayoutEffect(() => {\n\t\tconnector.dragPreviewOptions = dragPreviewOptions || null\n\t\tconnector.reconnect()\n\t\treturn () => connector.disconnectDragPreview()\n\t}, [connector, dragPreviewOptions])\n\treturn connector\n}\n"],"names":["useDragSourceConnector","dragSourceOptions","dragPreviewOptions","manager","useDragDropManager","connector","useMemo","SourceConnector","getBackend","useIsomorphicLayoutEffect","reconnect","disconnectDragSource","disconnectDragPreview"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAUgBA;;;eAAAA;;;uBAVQ;uBAEQ;oCAKG;2CACO;AAEnC,SAASA,uBACfC,iBAAgD,EAChDC,kBAAkD;IAElD,MAAMC,UAAUC,IAAAA,sCAAkB;IAClC,MAAMC,YAAYC,IAAAA,cAAO,EACxB,IAAM,IAAIC,sBAAe,CAACJ,QAAQK,UAAU,KAC5C;QAACL;KAAQ;IAEVM,IAAAA,oDAAyB,EAAC;QACzBJ,UAAUJ,iBAAiB,GAAGA,qBAAqB;QACnDI,UAAUK,SAAS;QACnB,OAAO,IAAML,UAAUM,oBAAoB;OACzC;QAACN;QAAWJ;KAAkB;IACjCQ,IAAAA,oDAAyB,EAAC;QACzBJ,UAAUH,kBAAkB,GAAGA,sBAAsB;QACrDG,UAAUK,SAAS;QACnB,OAAO,IAAML,UAAUO,qBAAqB;OAC1C;QAACP;QAAWH;KAAmB;IAClC,OAAOG"}