2c95fbd5c52755a9961bb6aab75a3511
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "CustomSelectArea", {
    enumerable: true,
    get: function() {
        return CustomSelectArea;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _core = require("@rp/react/web/mui/core");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function CustomSelectArea({ children, renderPopup, safeAreaTop = 0, anchorTop = 8 }) {
    const [selectionState, setSelectionState] = (0, _react.useState)({
        x: 0,
        y: 0,
        text: undefined
    });
    const containerRef = (0, _react.useRef)(null);
    const modalRef = (0, _react.useRef)(null);
    (0, _react.useEffect)(()=>{
        function handleSelectionChange() {
            var _modalRef_current, _containerRef_current;
            const selection = document.getSelection();
            const range = (selection === null || selection === void 0 ? void 0 : selection.rangeCount) && (selection === null || selection === void 0 ? void 0 : selection.getRangeAt(0));
            const selectedText = range === null || range === void 0 ? void 0 : range.toString();
            var _selection_anchorNode;
            if (!range || !selectedText || (selectedText === null || selectedText === void 0 ? void 0 : selectedText.length) === 0 || !containerRef.current || !containerRef.current.contains((_selection_anchorNode = selection === null || selection === void 0 ? void 0 : selection.anchorNode) !== null && _selection_anchorNode !== void 0 ? _selection_anchorNode : null)) {
                setSelectionState((prev)=>_object_spread_props(_object_spread({}, prev), {
                        text: undefined
                    }));
                return;
            }
            const clientRect = range.getBoundingClientRect();
            const modalRect = (_modalRef_current = modalRef.current) === null || _modalRef_current === void 0 ? void 0 : _modalRef_current.getBoundingClientRect();
            const containerRect = (_containerRef_current = containerRef.current) === null || _containerRef_current === void 0 ? void 0 : _containerRef_current.getBoundingClientRect();
            var _containerRect_top;
            const topContainer = (_containerRect_top = containerRect === null || containerRect === void 0 ? void 0 : containerRect.top) !== null && _containerRect_top !== void 0 ? _containerRect_top : 0;
            var _containerRect_left;
            const leftContainer = (_containerRect_left = containerRect === null || containerRect === void 0 ? void 0 : containerRect.left) !== null && _containerRect_left !== void 0 ? _containerRect_left : 0;
            var _modalRect_height;
            const topOffset = (_modalRect_height = modalRect === null || modalRect === void 0 ? void 0 : modalRect.height) !== null && _modalRect_height !== void 0 ? _modalRect_height : 0;
            var _modalRect_width;
            const leftOffset = ((_modalRect_width = modalRect === null || modalRect === void 0 ? void 0 : modalRect.width) !== null && _modalRect_width !== void 0 ? _modalRect_width : 0) / 2;
            const xPosition = clientRect.left - leftContainer - leftOffset + clientRect.width * 0.5;
            const yPosition = clientRect.top - topContainer;
            setSelectionState({
                x: xPosition,
                y: yPosition + (clientRect.top < topOffset + safeAreaTop ? topOffset : -topOffset - anchorTop),
                text: selection === null || selection === void 0 ? void 0 : selection.toString()
            });
        }
        document.addEventListener("selectionchange", handleSelectionChange);
        return ()=>document.removeEventListener("selectionchange", handleSelectionChange);
    }, [
        safeAreaTop,
        anchorTop
    ]);
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
        ref: containerRef,
        sx: {
            position: "relative",
            minWidth: 0
        },
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                ref: modalRef,
                sx: {
                    top: 0,
                    left: 0,
                    position: "absolute",
                    zIndex: 1000,
                    transform: `translate(${selectionState.x}px, ${selectionState.y}px)`,
                    transition: "all 0.2s ease-out",
                    opacity: selectionState.text === undefined ? 0 : 1,
                    pointerEvents: selectionState.text ? undefined : "none"
                },
                children: renderPopup(selectionState)
            }),
            children
        ]
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9iYXNlLWNvbXBvbmVudHMvc3JjL0N1c3RvbVNlbGVjdEFyZWEvQ3VzdG9tU2VsZWN0QXJlYS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VSZWYsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCJcbmltcG9ydCB7IEJveCB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL211aS9jb3JlXCJcblxudHlwZSBTZWxlY3Rpb25TdGF0ZSA9IHtcbiAgeDogbnVtYmVyXG4gIHk6IG51bWJlclxuICB0ZXh0OiBzdHJpbmcgfCB1bmRlZmluZWRcbn1cblxudHlwZSBQcm9wcyA9IHtcbiAgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZVxuICByZW5kZXJQb3B1cDogKHNlbGVjdGlvblN0YXRlOiBTZWxlY3Rpb25TdGF0ZSkgPT4gUmVhY3QuUmVhY3ROb2RlXG4gIHNhZmVBcmVhVG9wPzogbnVtYmVyXG4gIGFuY2hvclRvcD86IG51bWJlclxufVxuXG5mdW5jdGlvbiBDdXN0b21TZWxlY3RBcmVhKHsgY2hpbGRyZW4sIHJlbmRlclBvcHVwLCBzYWZlQXJlYVRvcCA9IDAsIGFuY2hvclRvcCA9IDggfTogUHJvcHMpIHtcbiAgY29uc3QgW3NlbGVjdGlvblN0YXRlLCBzZXRTZWxlY3Rpb25TdGF0ZV0gPSB1c2VTdGF0ZTxTZWxlY3Rpb25TdGF0ZT4oe1xuICAgIHg6IDAsXG4gICAgeTogMCxcbiAgICB0ZXh0OiB1bmRlZmluZWQsXG4gIH0pXG5cbiAgY29uc3QgY29udGFpbmVyUmVmID0gdXNlUmVmPEhUTUxEaXZFbGVtZW50PihudWxsKVxuICBjb25zdCBtb2RhbFJlZiA9IHVzZVJlZjxIVE1MRGl2RWxlbWVudD4obnVsbClcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGZ1bmN0aW9uIGhhbmRsZVNlbGVjdGlvbkNoYW5nZSgpIHtcbiAgICAgIGNvbnN0IHNlbGVjdGlvbiA9IGRvY3VtZW50LmdldFNlbGVjdGlvbigpXG4gICAgICBjb25zdCByYW5nZSA9IHNlbGVjdGlvbj8ucmFuZ2VDb3VudCAmJiBzZWxlY3Rpb24/LmdldFJhbmdlQXQoMClcbiAgICAgIGNvbnN0IHNlbGVjdGVkVGV4dCA9IHJhbmdlPy50b1N0cmluZygpXG4gICAgICBpZiAoXG4gICAgICAgICFyYW5nZSB8fFxuICAgICAgICAhc2VsZWN0ZWRUZXh0IHx8XG4gICAgICAgIHNlbGVjdGVkVGV4dD8ubGVuZ3RoID09PSAwIHx8XG4gICAgICAgICFjb250YWluZXJSZWYuY3VycmVudCB8fFxuICAgICAgICAhY29udGFpbmVyUmVmLmN1cnJlbnQuY29udGFpbnMoc2VsZWN0aW9uPy5hbmNob3JOb2RlID8/IG51bGwpXG4gICAgICApIHtcbiAgICAgICAgc2V0U2VsZWN0aW9uU3RhdGUocHJldiA9PiAoeyAuLi5wcmV2LCB0ZXh0OiB1bmRlZmluZWQgfSkpXG4gICAgICAgIHJldHVyblxuICAgICAgfVxuXG4gICAgICBjb25zdCBjbGllbnRSZWN0ID0gcmFuZ2UuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KClcbiAgICAgIGNvbnN0IG1vZGFsUmVjdCA9IG1vZGFsUmVmLmN1cnJlbnQ/LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpXG4gICAgICBjb25zdCBjb250YWluZXJSZWN0ID0gY29udGFpbmVyUmVmLmN1cnJlbnQ/LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpXG5cbiAgICAgIGNvbnN0IHRvcENvbnRhaW5lciA9IGNvbnRhaW5lclJlY3Q/LnRvcCA/PyAwXG4gICAgICBjb25zdCBsZWZ0Q29udGFpbmVyID0gY29udGFpbmVyUmVjdD8ubGVmdCA/PyAwXG4gICAgICBjb25zdCB0b3BPZmZzZXQgPSBtb2RhbFJlY3Q/LmhlaWdodCA/PyAwXG4gICAgICBjb25zdCBsZWZ0T2Zmc2V0ID0gKG1vZGFsUmVjdD8ud2lkdGggPz8gMCkgLyAyXG5cbiAgICAgIGNvbnN0IHhQb3NpdGlvbiA9IGNsaWVudFJlY3QubGVmdCAtIGxlZnRDb250YWluZXIgLSBsZWZ0T2Zmc2V0ICsgY2xpZW50UmVjdC53aWR0aCAqIDAuNVxuICAgICAgY29uc3QgeVBvc2l0aW9uID0gY2xpZW50UmVjdC50b3AgLSB0b3BDb250YWluZXJcblxuICAgICAgc2V0U2VsZWN0aW9uU3RhdGUoe1xuICAgICAgICB4OiB4UG9zaXRpb24sXG4gICAgICAgIHk6XG4gICAgICAgICAgeVBvc2l0aW9uICtcbiAgICAgICAgICAoY2xpZW50UmVjdC50b3AgPCB0b3BPZmZzZXQgKyBzYWZlQXJlYVRvcCA/IHRvcE9mZnNldCA6IC10b3BPZmZzZXQgLSBhbmNob3JUb3ApLFxuICAgICAgICB0ZXh0OiBzZWxlY3Rpb24/LnRvU3RyaW5nKCksXG4gICAgICB9KVxuICAgIH1cblxuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJzZWxlY3Rpb25jaGFuZ2VcIiwgaGFuZGxlU2VsZWN0aW9uQ2hhbmdlKVxuXG4gICAgcmV0dXJuICgpID0+IGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJzZWxlY3Rpb25jaGFuZ2VcIiwgaGFuZGxlU2VsZWN0aW9uQ2hhbmdlKVxuICB9LCBbc2FmZUFyZWFUb3AsIGFuY2hvclRvcF0pXG5cbiAgcmV0dXJuIChcbiAgICA8Qm94IHJlZj17Y29udGFpbmVyUmVmfSBzeD17eyBwb3NpdGlvbjogXCJyZWxhdGl2ZVwiLCBtaW5XaWR0aDogMCB9fT5cbiAgICAgIDxCb3hcbiAgICAgICAgcmVmPXttb2RhbFJlZn1cbiAgICAgICAgc3g9e3tcbiAgICAgICAgICB0b3A6IDAsXG4gICAgICAgICAgbGVmdDogMCxcbiAgICAgICAgICBwb3NpdGlvbjogXCJhYnNvbHV0ZVwiLFxuICAgICAgICAgIHpJbmRleDogMTAwMCxcbiAgICAgICAgICB0cmFuc2Zvcm06IGB0cmFuc2xhdGUoJHtzZWxlY3Rpb25TdGF0ZS54fXB4LCAke3NlbGVjdGlvblN0YXRlLnl9cHgpYCxcbiAgICAgICAgICB0cmFuc2l0aW9uOiBcImFsbCAwLjJzIGVhc2Utb3V0XCIsXG4gICAgICAgICAgb3BhY2l0eTogc2VsZWN0aW9uU3RhdGUudGV4dCA9PT0gdW5kZWZpbmVkID8gMCA6IDEsXG4gICAgICAgICAgcG9pbnRlckV2ZW50czogc2VsZWN0aW9uU3RhdGUudGV4dCA/IHVuZGVmaW5lZCA6IFwibm9uZVwiLFxuICAgICAgICB9fVxuICAgICAgPlxuICAgICAgICB7cmVuZGVyUG9wdXAoc2VsZWN0aW9uU3RhdGUpfVxuICAgICAgPC9Cb3g+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9Cb3g+XG4gIClcbn1cblxuZXhwb3J0IHsgQ3VzdG9tU2VsZWN0QXJlYSB9XG4iXSwibmFtZXMiOlsiQ3VzdG9tU2VsZWN0QXJlYSIsImNoaWxkcmVuIiwicmVuZGVyUG9wdXAiLCJzYWZlQXJlYVRvcCIsImFuY2hvclRvcCIsInNlbGVjdGlvblN0YXRlIiwic2V0U2VsZWN0aW9uU3RhdGUiLCJ1c2VTdGF0ZSIsIngiLCJ5IiwidGV4dCIsInVuZGVmaW5lZCIsImNvbnRhaW5lclJlZiIsInVzZVJlZiIsIm1vZGFsUmVmIiwidXNlRWZmZWN0IiwiaGFuZGxlU2VsZWN0aW9uQ2hhbmdlIiwic2VsZWN0aW9uIiwiZG9jdW1lbnQiLCJnZXRTZWxlY3Rpb24iLCJyYW5nZSIsInJhbmdlQ291bnQiLCJnZXRSYW5nZUF0Iiwic2VsZWN0ZWRUZXh0IiwidG9TdHJpbmciLCJsZW5ndGgiLCJjdXJyZW50IiwiY29udGFpbnMiLCJhbmNob3JOb2RlIiwicHJldiIsImNsaWVudFJlY3QiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJtb2RhbFJlY3QiLCJjb250YWluZXJSZWN0IiwidG9wQ29udGFpbmVyIiwidG9wIiwibGVmdENvbnRhaW5lciIsImxlZnQiLCJ0b3BPZmZzZXQiLCJoZWlnaHQiLCJsZWZ0T2Zmc2V0Iiwid2lkdGgiLCJ4UG9zaXRpb24iLCJ5UG9zaXRpb24iLCJhZGRFdmVudExpc3RlbmVyIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIkJveCIsInJlZiIsInN4IiwicG9zaXRpb24iLCJtaW5XaWR0aCIsInpJbmRleCIsInRyYW5zZm9ybSIsInRyYW5zaXRpb24iLCJvcGFjaXR5IiwicG9pbnRlckV2ZW50cyJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBMEZTQTs7O2VBQUFBOzs7O3VCQTFGbUM7c0JBQ3hCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWVwQixTQUFTQSxpQkFBaUIsRUFBRUMsUUFBUSxFQUFFQyxXQUFXLEVBQUVDLGNBQWMsQ0FBQyxFQUFFQyxZQUFZLENBQUMsRUFBUztJQUN4RixNQUFNLENBQUNDLGdCQUFnQkMsa0JBQWtCLEdBQUdDLElBQUFBLGVBQVEsRUFBaUI7UUFDbkVDLEdBQUc7UUFDSEMsR0FBRztRQUNIQyxNQUFNQztJQUNSO0lBRUEsTUFBTUMsZUFBZUMsSUFBQUEsYUFBTSxFQUFpQjtJQUM1QyxNQUFNQyxXQUFXRCxJQUFBQSxhQUFNLEVBQWlCO0lBRXhDRSxJQUFBQSxnQkFBUyxFQUFDO1FBQ1IsU0FBU0M7Z0JBZ0JXRixtQkFDSUY7WUFoQnRCLE1BQU1LLFlBQVlDLFNBQVNDLFlBQVk7WUFDdkMsTUFBTUMsUUFBUUgsQ0FBQUEsc0JBQUFBLGdDQUFBQSxVQUFXSSxVQUFVLE1BQUlKLHNCQUFBQSxnQ0FBQUEsVUFBV0ssVUFBVSxDQUFDO1lBQzdELE1BQU1DLGVBQWVILGtCQUFBQSw0QkFBQUEsTUFBT0ksUUFBUTtnQkFNSFA7WUFMakMsSUFDRSxDQUFDRyxTQUNELENBQUNHLGdCQUNEQSxDQUFBQSx5QkFBQUEsbUNBQUFBLGFBQWNFLE1BQU0sTUFBSyxLQUN6QixDQUFDYixhQUFhYyxPQUFPLElBQ3JCLENBQUNkLGFBQWFjLE9BQU8sQ0FBQ0MsUUFBUSxDQUFDVixDQUFBQSx3QkFBQUEsc0JBQUFBLGdDQUFBQSxVQUFXVyxVQUFVLGNBQXJCWCxtQ0FBQUEsd0JBQXlCLE9BQ3hEO2dCQUNBWCxrQkFBa0J1QixDQUFBQSxPQUFTLHdDQUFLQTt3QkFBTW5CLE1BQU1DOztnQkFDNUM7WUFDRjtZQUVBLE1BQU1tQixhQUFhVixNQUFNVyxxQkFBcUI7WUFDOUMsTUFBTUMsYUFBWWxCLG9CQUFBQSxTQUFTWSxPQUFPLGNBQWhCWix3Q0FBQUEsa0JBQWtCaUIscUJBQXFCO1lBQ3pELE1BQU1FLGlCQUFnQnJCLHdCQUFBQSxhQUFhYyxPQUFPLGNBQXBCZCw0Q0FBQUEsc0JBQXNCbUIscUJBQXFCO2dCQUU1Q0U7WUFBckIsTUFBTUMsZUFBZUQsQ0FBQUEscUJBQUFBLDBCQUFBQSxvQ0FBQUEsY0FBZUUsR0FBRyxjQUFsQkYsZ0NBQUFBLHFCQUFzQjtnQkFDckJBO1lBQXRCLE1BQU1HLGdCQUFnQkgsQ0FBQUEsc0JBQUFBLDBCQUFBQSxvQ0FBQUEsY0FBZUksSUFBSSxjQUFuQkosaUNBQUFBLHNCQUF1QjtnQkFDM0JEO1lBQWxCLE1BQU1NLFlBQVlOLENBQUFBLG9CQUFBQSxzQkFBQUEsZ0NBQUFBLFVBQVdPLE1BQU0sY0FBakJQLCtCQUFBQSxvQkFBcUI7Z0JBQ25CQTtZQUFwQixNQUFNUSxhQUFhLEFBQUNSLENBQUFBLENBQUFBLG1CQUFBQSxzQkFBQUEsZ0NBQUFBLFVBQVdTLEtBQUssY0FBaEJULDhCQUFBQSxtQkFBb0IsQ0FBQSxJQUFLO1lBRTdDLE1BQU1VLFlBQVlaLFdBQVdPLElBQUksR0FBR0QsZ0JBQWdCSSxhQUFhVixXQUFXVyxLQUFLLEdBQUc7WUFDcEYsTUFBTUUsWUFBWWIsV0FBV0ssR0FBRyxHQUFHRDtZQUVuQzVCLGtCQUFrQjtnQkFDaEJFLEdBQUdrQztnQkFDSGpDLEdBQ0VrQyxZQUNDYixDQUFBQSxXQUFXSyxHQUFHLEdBQUdHLFlBQVluQyxjQUFjbUMsWUFBWSxDQUFDQSxZQUFZbEMsU0FBUTtnQkFDL0VNLElBQUksRUFBRU8sc0JBQUFBLGdDQUFBQSxVQUFXTyxRQUFRO1lBQzNCO1FBQ0Y7UUFFQU4sU0FBUzBCLGdCQUFnQixDQUFDLG1CQUFtQjVCO1FBRTdDLE9BQU8sSUFBTUUsU0FBUzJCLG1CQUFtQixDQUFDLG1CQUFtQjdCO0lBQy9ELEdBQUc7UUFBQ2I7UUFBYUM7S0FBVTtJQUUzQixxQkFDRSxzQkFBQzBDLFNBQUc7UUFBQ0MsS0FBS25DO1FBQWNvQyxJQUFJO1lBQUVDLFVBQVU7WUFBWUMsVUFBVTtRQUFFOzswQkFDOUQscUJBQUNKLFNBQUc7Z0JBQ0ZDLEtBQUtqQztnQkFDTGtDLElBQUk7b0JBQ0ZiLEtBQUs7b0JBQ0xFLE1BQU07b0JBQ05ZLFVBQVU7b0JBQ1ZFLFFBQVE7b0JBQ1JDLFdBQVcsQ0FBQyxVQUFVLEVBQUUvQyxlQUFlRyxDQUFDLENBQUMsSUFBSSxFQUFFSCxlQUFlSSxDQUFDLENBQUMsR0FBRyxDQUFDO29CQUNwRTRDLFlBQVk7b0JBQ1pDLFNBQVNqRCxlQUFlSyxJQUFJLEtBQUtDLFlBQVksSUFBSTtvQkFDakQ0QyxlQUFlbEQsZUFBZUssSUFBSSxHQUFHQyxZQUFZO2dCQUNuRDswQkFFQ1QsWUFBWUc7O1lBRWRKOzs7QUFHUCJ9