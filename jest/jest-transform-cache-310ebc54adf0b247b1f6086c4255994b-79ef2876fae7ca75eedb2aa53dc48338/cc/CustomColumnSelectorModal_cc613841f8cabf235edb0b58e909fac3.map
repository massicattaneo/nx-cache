{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/watchlists/src/lib/WatchlistDataTabs/CustomDataView/CustomColumnSelectorModal.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from \"react\"\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  IconButton,\n  Typography,\n} from \"@rp/react/web/mui/core\"\nimport { Close } from \"@rp/react/web/mui/icons\"\nimport { FinanceDataTabs } from \"../../hooks/useWatchlistsFinanceDataTabNavigation\"\nimport { CategorySidebar } from \"./components/CategorySidebar\"\nimport { ColumnsList } from \"./components/ColumnsList\"\nimport { SearchBar } from \"./components/SearchBar\"\nimport { SelectedColumnsPanel } from \"./components/SelectedColumnsPanel\"\nimport { useColumnCategories } from \"./hooks/useColumnCategories\"\nimport { useColumnFiltering } from \"./hooks/useColumnFiltering\"\nimport { useColumnSelection } from \"./hooks/useColumnSelection\"\nimport { CustomColumnSelectorModalProps, SelectedColumnWithId } from \"./types\"\n\nfunction CustomColumnSelectorModal({\n  open,\n  onClose,\n  onSave,\n  initialColumns = [],\n}: CustomColumnSelectorModalProps) {\n  const [selectedCategory, setSelectedCategory] = useState<FinanceDataTabs>(\"pricing\")\n  const [searchQuery, setSearchQuery] = useState(\"\")\n  const [selectedColumns, setSelectedColumns] = useState<Array<SelectedColumnWithId>>(\n    initialColumns.map((col, index) => ({\n      id: `${col.endpoint}-${col.columnKey}-${index}`,\n      endpoint: col.endpoint,\n      columnKey: col.columnKey,\n      displayName: col.displayName,\n      sourceTab: col.sourceTab,\n    })),\n  )\n\n  // Check if current selection differs from initial columns\n  const hasChanges = useMemo(() => {\n    if (selectedColumns.length !== initialColumns.length) return true\n\n    // Compare each column in order (both content and position matter)\n    return selectedColumns.some((col, index) => {\n      const initialCol = initialColumns[index]\n      if (!initialCol) return true\n\n      return (\n        col.endpoint !== initialCol.endpoint ||\n        col.columnKey !== initialCol.columnKey ||\n        col.sourceTab !== initialCol.sourceTab\n      )\n    })\n  }, [selectedColumns, initialColumns])\n\n  // Use custom hooks for logic\n  const { availableCategories } = useColumnCategories(searchQuery)\n  const { filteredColumns } = useColumnFiltering(selectedCategory, searchQuery)\n  const {\n    handleColumnToggle,\n    handleSelectAll,\n    isColumnSelected,\n    handleDeleteColumn,\n    allFilteredSelected,\n    someFilteredSelected,\n  } = useColumnSelection({ selectedColumns, setSelectedColumns, filteredColumns })\n\n  // Auto-switch to first available category if current selection is filtered out\n  useEffect(() => {\n    if (availableCategories.length > 0 && !availableCategories.includes(selectedCategory)) {\n      setSelectedCategory(availableCategories[0])\n    }\n  }, [availableCategories, selectedCategory])\n\n  const handleSave = useCallback(() => {\n    // Convert back to the expected format (without IDs)\n    const columnsWithoutIds = selectedColumns.map(col => ({\n      endpoint: col.endpoint,\n      columnKey: col.columnKey,\n      displayName: col.displayName,\n      sourceTab: col.sourceTab,\n    }))\n    onSave(columnsWithoutIds)\n    onClose()\n  }, [selectedColumns, onSave, onClose])\n\n  const handleClose = useCallback(() => {\n    onClose()\n    // Reset state when closing\n    setSearchQuery(\"\")\n    setSelectedCategory(\"pricing\")\n    setSelectedColumns(\n      initialColumns.map((col, index) => ({\n        id: `${col.endpoint}-${col.columnKey}-${index}`,\n        endpoint: col.endpoint,\n        columnKey: col.columnKey,\n        displayName: col.displayName,\n        sourceTab: col.sourceTab,\n      })),\n    )\n  }, [onClose, initialColumns])\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      maxWidth=\"lg\"\n      fullWidth\n      slotProps={{\n        paper: {\n          sx: {\n            height: \"80vh\",\n            maxHeight: 700,\n            minHeight: 600,\n            backgroundColor: \"elevation.dp24\",\n            maxWidth: 900,\n          },\n        },\n      }}\n    >\n      <DialogTitle\n        sx={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n        }}\n      >\n        <Typography variant=\"h6\" component=\"div\" sx={{ color: \"text.primary\", fontWeight: 600 }}>\n          Create Custom View\n        </Typography>\n        <IconButton onClick={handleClose} size=\"small\">\n          <Close />\n        </IconButton>\n      </DialogTitle>\n\n      <DialogContent\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          gap: 2,\n          p: 2,\n          overflow: \"hidden\",\n        }}\n      >\n        <Box sx={{ display: \"flex\", flex: 1, overflow: \"hidden\" }}>\n          <Box sx={{ display: \"flex\", flexDirection: \"column\", flex: 1, overflow: \"hidden\" }}>\n            <SearchBar searchQuery={searchQuery} onSearchChange={setSearchQuery} />\n\n            <Box sx={{ display: \"flex\", flex: 1, overflow: \"hidden\" }}>\n              <CategorySidebar\n                availableCategories={availableCategories}\n                selectedCategory={selectedCategory}\n                onCategorySelect={setSelectedCategory}\n              />\n\n              <ColumnsList\n                filteredColumns={filteredColumns}\n                searchQuery={searchQuery}\n                allFilteredSelected={allFilteredSelected}\n                someFilteredSelected={someFilteredSelected}\n                isColumnSelected={isColumnSelected}\n                handleSelectAll={handleSelectAll}\n                handleColumnToggle={handleColumnToggle}\n              />\n            </Box>\n          </Box>\n\n          <SelectedColumnsPanel\n            selectedColumns={selectedColumns}\n            onReorderColumns={setSelectedColumns}\n            onDeleteColumn={handleDeleteColumn}\n          />\n        </Box>\n      </DialogContent>\n\n      <DialogActions sx={{ p: 2, pt: 0 }}>\n        <Button\n          onClick={handleClose}\n          color=\"inherit\"\n          variant=\"text\"\n          sx={{\n            color: \"text.secondary\",\n          }}\n        >\n          Cancel\n        </Button>\n        <Button\n          onClick={handleSave}\n          variant=\"contained\"\n          disabled={!hasChanges}\n          sx={{\n            minWidth: 80,\n            backgroundColor: \"primary.main\",\n            \"&:hover\": {\n              backgroundColor: \"primary.dark\",\n            },\n            \"&.Mui-disabled\": {\n              backgroundColor: \"action.disabledBackground\",\n              color: \"action.disabled\",\n            },\n          }}\n        >\n          Save\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport { CustomColumnSelectorModal }\n"],"names":["CustomColumnSelectorModal","open","onClose","onSave","initialColumns","selectedCategory","setSelectedCategory","useState","searchQuery","setSearchQuery","selectedColumns","setSelectedColumns","map","col","index","id","endpoint","columnKey","displayName","sourceTab","hasChanges","useMemo","length","some","initialCol","availableCategories","useColumnCategories","filteredColumns","useColumnFiltering","handleColumnToggle","handleSelectAll","isColumnSelected","handleDeleteColumn","allFilteredSelected","someFilteredSelected","useColumnSelection","useEffect","includes","handleSave","useCallback","columnsWithoutIds","handleClose","Dialog","maxWidth","fullWidth","slotProps","paper","sx","height","maxHeight","minHeight","backgroundColor","DialogTitle","display","justifyContent","alignItems","Typography","variant","component","color","fontWeight","IconButton","onClick","size","Close","DialogContent","flexDirection","gap","p","overflow","Box","flex","SearchBar","onSearchChange","CategorySidebar","onCategorySelect","ColumnsList","SelectedColumnsPanel","onReorderColumns","onDeleteColumn","DialogActions","pt","Button","disabled","minWidth"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}