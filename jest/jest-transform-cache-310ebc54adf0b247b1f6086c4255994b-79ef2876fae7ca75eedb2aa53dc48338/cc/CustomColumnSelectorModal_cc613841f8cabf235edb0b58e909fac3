39ce8a2240006c30bd6dab4af6121685
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "CustomColumnSelectorModal", {
    enumerable: true,
    get: function() {
        return CustomColumnSelectorModal;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _core = require("@rp/react/web/mui/core");
const _icons = require("@rp/react/web/mui/icons");
const _CategorySidebar = require("./components/CategorySidebar");
const _ColumnsList = require("./components/ColumnsList");
const _SearchBar = require("./components/SearchBar");
const _SelectedColumnsPanel = require("./components/SelectedColumnsPanel");
const _useColumnCategories = require("./hooks/useColumnCategories");
const _useColumnFiltering = require("./hooks/useColumnFiltering");
const _useColumnSelection = require("./hooks/useColumnSelection");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
function CustomColumnSelectorModal({ open, onClose, onSave, initialColumns = [] }) {
    const [selectedCategory, setSelectedCategory] = (0, _react.useState)("pricing");
    const [searchQuery, setSearchQuery] = (0, _react.useState)("");
    const [selectedColumns, setSelectedColumns] = (0, _react.useState)(initialColumns.map((col, index)=>({
            id: `${col.endpoint}-${col.columnKey}-${index}`,
            endpoint: col.endpoint,
            columnKey: col.columnKey,
            displayName: col.displayName,
            sourceTab: col.sourceTab
        })));
    // Check if current selection differs from initial columns
    const hasChanges = (0, _react.useMemo)(()=>{
        if (selectedColumns.length !== initialColumns.length) return true;
        // Compare each column in order (both content and position matter)
        return selectedColumns.some((col, index)=>{
            const initialCol = initialColumns[index];
            if (!initialCol) return true;
            return col.endpoint !== initialCol.endpoint || col.columnKey !== initialCol.columnKey || col.sourceTab !== initialCol.sourceTab;
        });
    }, [
        selectedColumns,
        initialColumns
    ]);
    // Use custom hooks for logic
    const { availableCategories } = (0, _useColumnCategories.useColumnCategories)(searchQuery);
    const { filteredColumns } = (0, _useColumnFiltering.useColumnFiltering)(selectedCategory, searchQuery);
    const { handleColumnToggle, handleSelectAll, isColumnSelected, handleDeleteColumn, allFilteredSelected, someFilteredSelected } = (0, _useColumnSelection.useColumnSelection)({
        selectedColumns,
        setSelectedColumns,
        filteredColumns
    });
    // Auto-switch to first available category if current selection is filtered out
    (0, _react.useEffect)(()=>{
        if (availableCategories.length > 0 && !availableCategories.includes(selectedCategory)) {
            setSelectedCategory(availableCategories[0]);
        }
    }, [
        availableCategories,
        selectedCategory
    ]);
    const handleSave = (0, _react.useCallback)(()=>{
        // Convert back to the expected format (without IDs)
        const columnsWithoutIds = selectedColumns.map((col)=>({
                endpoint: col.endpoint,
                columnKey: col.columnKey,
                displayName: col.displayName,
                sourceTab: col.sourceTab
            }));
        onSave(columnsWithoutIds);
        onClose();
    }, [
        selectedColumns,
        onSave,
        onClose
    ]);
    const handleClose = (0, _react.useCallback)(()=>{
        onClose();
        // Reset state when closing
        setSearchQuery("");
        setSelectedCategory("pricing");
        setSelectedColumns(initialColumns.map((col, index)=>({
                id: `${col.endpoint}-${col.columnKey}-${index}`,
                endpoint: col.endpoint,
                columnKey: col.columnKey,
                displayName: col.displayName,
                sourceTab: col.sourceTab
            })));
    }, [
        onClose,
        initialColumns
    ]);
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Dialog, {
        open: open,
        onClose: handleClose,
        maxWidth: "lg",
        fullWidth: true,
        slotProps: {
            paper: {
                sx: {
                    height: "80vh",
                    maxHeight: 700,
                    minHeight: 600,
                    backgroundColor: "elevation.dp24",
                    maxWidth: 900
                }
            }
        },
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.DialogTitle, {
                sx: {
                    display: "flex",
                    justifyContent: "space-between",
                    alignItems: "center"
                },
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                        variant: "h6",
                        component: "div",
                        sx: {
                            color: "text.primary",
                            fontWeight: 600
                        },
                        children: "Create Custom View"
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.IconButton, {
                        onClick: handleClose,
                        size: "small",
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.Close, {})
                    })
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.DialogContent, {
                sx: {
                    display: "flex",
                    flexDirection: "column",
                    gap: 2,
                    p: 2,
                    overflow: "hidden"
                },
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                    sx: {
                        display: "flex",
                        flex: 1,
                        overflow: "hidden"
                    },
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                            sx: {
                                display: "flex",
                                flexDirection: "column",
                                flex: 1,
                                overflow: "hidden"
                            },
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_SearchBar.SearchBar, {
                                    searchQuery: searchQuery,
                                    onSearchChange: setSearchQuery
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                                    sx: {
                                        display: "flex",
                                        flex: 1,
                                        overflow: "hidden"
                                    },
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_CategorySidebar.CategorySidebar, {
                                            availableCategories: availableCategories,
                                            selectedCategory: selectedCategory,
                                            onCategorySelect: setSelectedCategory
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_ColumnsList.ColumnsList, {
                                            filteredColumns: filteredColumns,
                                            searchQuery: searchQuery,
                                            allFilteredSelected: allFilteredSelected,
                                            someFilteredSelected: someFilteredSelected,
                                            isColumnSelected: isColumnSelected,
                                            handleSelectAll: handleSelectAll,
                                            handleColumnToggle: handleColumnToggle
                                        })
                                    ]
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_SelectedColumnsPanel.SelectedColumnsPanel, {
                            selectedColumns: selectedColumns,
                            onReorderColumns: setSelectedColumns,
                            onDeleteColumn: handleDeleteColumn
                        })
                    ]
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.DialogActions, {
                sx: {
                    p: 2,
                    pt: 0
                },
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Button, {
                        onClick: handleClose,
                        color: "inherit",
                        variant: "text",
                        sx: {
                            color: "text.secondary"
                        },
                        children: "Cancel"
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Button, {
                        onClick: handleSave,
                        variant: "contained",
                        disabled: !hasChanges,
                        sx: {
                            minWidth: 80,
                            backgroundColor: "primary.main",
                            "&:hover": {
                                backgroundColor: "primary.dark"
                            },
                            "&.Mui-disabled": {
                                backgroundColor: "action.disabledBackground",
                                color: "action.disabled"
                            }
                        },
                        children: "Save"
                    })
                ]
            })
        ]
    });
}

//# sourceMappingURL=data:application/json;base64,