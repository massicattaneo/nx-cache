439d72cc37fa4879353132789b35210b
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "WatchlistAutosuggestPopper", {
    enumerable: true,
    get: function() {
        return WatchlistAutosuggestPopper;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _compositecomponents = require("@rp/react/web/common/composite-components");
const _hooks = require("@rp/react/web/common/hooks");
const _core = require("@rp/react/web/mui/core");
const _AutoCompleteCustoms = require("./AutoCompleteCustoms");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
const MARGIN_BOTTOM = 24;
const calculateMaxHeight = (input)=>{
    const { bottom } = input.getBoundingClientRect();
    return window.innerHeight - bottom - MARGIN_BOTTOM;
};
const WatchlistAutosuggestPopper = ({ open, options, dropdownTitle, inputRef, renderOption, onClickAway, backgroundColor, isLoading, children, maxPopperHeight = 1500 })=>{
    const { height } = (0, _hooks.useDeviceSize)();
    const { isMobile } = (0, _hooks.useDeviceInfo)();
    const maxHeight = isMobile ? Math.min(400, height * 0.6) : inputRef === null ? undefined : Math.min(maxPopperHeight, calculateMaxHeight(inputRef));
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.ClickAwayListener, {
        onClickAway: onClickAway,
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_AutoCompleteCustoms.StyledPopper, {
            open: open,
            deviceHeight: height,
            anchorEl: inputRef,
            style: _object_spread({
                width: inputRef === null || inputRef === void 0 ? void 0 : inputRef.clientWidth
            }, isMobile && {
                position: "fixed",
                left: 0,
                right: 0,
                bottom: 0
            }),
            modifiers: [
                {
                    name: "computeStyles",
                    options: {
                        roundOffsets: false
                    }
                }
            ],
            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_AutoCompleteCustoms.DropdownPaper, {
                role: "dropdown-suggestions",
                sx: {
                    mt: 0.5,
                    backgroundColor,
                    border: "none",
                    borderRadius: "8px"
                },
                children: [
                    children,
                    dropdownTitle ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_AutoCompleteCustoms.RecentSearchTitle, {
                        children: dropdownTitle
                    }) : null,
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                        sx: (theme)=>_object_spread({
                                maxHeight,
                                height: "auto",
                                overflowY: "auto",
                                position: "relative"
                            }, theme.scrollbarStyles),
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.AutoAnimateHeight, {
                            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("ul", {
                                className: "MuiAutocomplete-listbox",
                                style: {
                                    maxHeight: isMobile ? "100%" : undefined,
                                    overflowY: "auto"
                                },
                                children: [
                                    options.length === 0 && !isLoading && /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                                        sx: {
                                            fontSize: 14,
                                            px: 1,
                                            py: 2,
                                            textAlign: "center",
                                            color: "text.secondary"
                                        },
                                        children: "We couldn't find any results matching your search"
                                    }),
                                    isLoading && /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                                        sx: {
                                            display: "flex",
                                            justifyContent: "center",
                                            p: 2
                                        },
                                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.CircularProgress, {
                                            size: 24
                                        })
                                    }),
                                    options.map(renderOption)
                                ]
                            })
                        })
                    })
                ]
            })
        })
    });
};

//# sourceMappingURL=data:application/json;base64,