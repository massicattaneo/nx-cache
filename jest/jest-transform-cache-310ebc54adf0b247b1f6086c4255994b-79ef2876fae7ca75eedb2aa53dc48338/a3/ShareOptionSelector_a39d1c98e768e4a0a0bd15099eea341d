bc3701daedd752b5428120a93eda42de
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "ShareOptionSelector", {
    enumerable: true,
    get: function() {
        return ShareOptionSelector;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _core = require("@rp/react/web/mui/core");
const _icons = require("@rp/react/web/mui/icons");
const _EllipsisTooltip = require("../EllipsisTooltip");
const _RadioMenu = require("../RadioMenu");
const getSharedOptionsData = (dataType, orgName)=>({
        Private: {
            title: "Private",
            description: `Only you have access to the ${dataType}`,
            icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.Person, {})
        },
        Organization: {
            title: orgName,
            description: "Anyone in your organization with the link can view",
            icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.Business, {})
        },
        Public: {
            title: "Public",
            description: `Anybody with the link can view your ${dataType}`,
            icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.Public, {})
        }
    });
const ShareOptionSelector = ({ sharedStatus, setSharedStatus, orgName, isUserOwner, dataType, enabledOptions })=>{
    const sharedOptionsData = (0, _react.useMemo)(()=>getSharedOptionsData(dataType, orgName), [
        dataType,
        orgName
    ]);
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                fontSize: 18,
                fontWeight: "bold",
                my: "12px",
                children: "General access"
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                display: "flex",
                gap: "10px",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Avatar, {
                        sx: {
                            backgroundColor: "overlay.surface",
                            color: "text.secondary",
                            fontSize: "body1.fontSize"
                        },
                        children: sharedOptionsData[sharedStatus].icon
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                        width: "calc(100% - 50px)",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                                sx: {
                                    display: "flex",
                                    alignItems: "center",
                                    gap: 0.5
                                },
                                children: [
                                    isUserOwner ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_RadioMenu.RadioMenu, {
                                        value: sharedStatus,
                                        items: enabledOptions.map((sharedOption)=>({
                                                label: sharedOptionsData[sharedOption].title,
                                                value: sharedOption
                                            })),
                                        onChange: (value)=>{
                                            setSharedStatus(value);
                                        }
                                    }) : null,
                                    !isUserOwner ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_EllipsisTooltip.EllipsisTooltip, {
                                        tooltipText: orgName !== null && orgName !== void 0 ? orgName : "",
                                        children: orgName
                                    }) : null
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                                color: "grey.300",
                                children: sharedOptionsData[sharedStatus].description
                            })
                        ]
                    })
                ]
            })
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9jb21wb3NpdGUtY29tcG9uZW50cy9zcmMvU2hhcmVNb2RhbC9TaGFyZU9wdGlvblNlbGVjdG9yLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VNZW1vIH0gZnJvbSBcInJlYWN0XCJcbmltcG9ydCB7IEF2YXRhciwgQm94LCBUeXBvZ3JhcGh5IH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvbXVpL2NvcmVcIlxuaW1wb3J0IHsgQnVzaW5lc3MsIFBlcnNvbiwgUHVibGljIH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvbXVpL2ljb25zXCJcbmltcG9ydCB7IEVsbGlwc2lzVG9vbHRpcCB9IGZyb20gXCIuLi9FbGxpcHNpc1Rvb2x0aXBcIlxuaW1wb3J0IHsgUmFkaW9NZW51IH0gZnJvbSBcIi4uL1JhZGlvTWVudVwiXG5cbnR5cGUgU2hhcmVPcHRpb25zID0gXCJQcml2YXRlXCIgfCBcIk9yZ2FuaXphdGlvblwiIHwgXCJQdWJsaWNcIlxuXG5jb25zdCBnZXRTaGFyZWRPcHRpb25zRGF0YSA9IChcbiAgZGF0YVR5cGU6IHN0cmluZyxcbiAgb3JnTmFtZTogc3RyaW5nLFxuKTogUmVjb3JkPFxuICBTaGFyZU9wdGlvbnMsXG4gIHtcbiAgICBpY29uOiBSZWFjdC5SZWFjdE5vZGVcbiAgICB0aXRsZTogc3RyaW5nXG4gICAgZGVzY3JpcHRpb246IHN0cmluZ1xuICB9XG4+ID0+ICh7XG4gIFByaXZhdGU6IHtcbiAgICB0aXRsZTogXCJQcml2YXRlXCIsXG4gICAgZGVzY3JpcHRpb246IGBPbmx5IHlvdSBoYXZlIGFjY2VzcyB0byB0aGUgJHtkYXRhVHlwZX1gLFxuICAgIGljb246IDxQZXJzb24gLz4sXG4gIH0sXG4gIE9yZ2FuaXphdGlvbjoge1xuICAgIHRpdGxlOiBvcmdOYW1lLFxuICAgIGRlc2NyaXB0aW9uOiBcIkFueW9uZSBpbiB5b3VyIG9yZ2FuaXphdGlvbiB3aXRoIHRoZSBsaW5rIGNhbiB2aWV3XCIsXG4gICAgaWNvbjogPEJ1c2luZXNzIC8+LFxuICB9LFxuICBQdWJsaWM6IHtcbiAgICB0aXRsZTogXCJQdWJsaWNcIixcbiAgICBkZXNjcmlwdGlvbjogYEFueWJvZHkgd2l0aCB0aGUgbGluayBjYW4gdmlldyB5b3VyICR7ZGF0YVR5cGV9YCxcbiAgICBpY29uOiA8UHVibGljIC8+LFxuICB9LFxufSlcblxudHlwZSBQcm9wcyA9IHtcbiAgc2hhcmVkU3RhdHVzOiBcIlByaXZhdGVcIiB8IFwiT3JnYW5pemF0aW9uXCIgfCBcIlB1YmxpY1wiXG4gIHNldFNoYXJlZFN0YXR1czogKHNoYXJlZFN0YXR1czogXCJQcml2YXRlXCIgfCBcIk9yZ2FuaXphdGlvblwiIHwgXCJQdWJsaWNcIikgPT4gdm9pZFxuICBvcmdOYW1lOiBzdHJpbmdcbiAgaXNVc2VyT3duZXI6IGJvb2xlYW5cbiAgZGF0YVR5cGU6IHN0cmluZ1xuICBlbmFibGVkT3B0aW9uczogQXJyYXk8U2hhcmVPcHRpb25zPlxufVxuXG5jb25zdCBTaGFyZU9wdGlvblNlbGVjdG9yID0gKHtcbiAgc2hhcmVkU3RhdHVzLFxuICBzZXRTaGFyZWRTdGF0dXMsXG4gIG9yZ05hbWUsXG4gIGlzVXNlck93bmVyLFxuICBkYXRhVHlwZSxcbiAgZW5hYmxlZE9wdGlvbnMsXG59OiBQcm9wcykgPT4ge1xuICBjb25zdCBzaGFyZWRPcHRpb25zRGF0YSA9IHVzZU1lbW8oXG4gICAgKCkgPT4gZ2V0U2hhcmVkT3B0aW9uc0RhdGEoZGF0YVR5cGUsIG9yZ05hbWUpLFxuICAgIFtkYXRhVHlwZSwgb3JnTmFtZV0sXG4gIClcbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPFR5cG9ncmFwaHkgZm9udFNpemU9ezE4fSBmb250V2VpZ2h0PVwiYm9sZFwiIG15PVwiMTJweFwiPlxuICAgICAgICBHZW5lcmFsIGFjY2Vzc1xuICAgICAgPC9UeXBvZ3JhcGh5PlxuICAgICAgPEJveCBkaXNwbGF5PVwiZmxleFwiIGdhcD1cIjEwcHhcIj5cbiAgICAgICAgPEF2YXRhclxuICAgICAgICAgIHN4PXt7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwib3ZlcmxheS5zdXJmYWNlXCIsXG4gICAgICAgICAgICBjb2xvcjogXCJ0ZXh0LnNlY29uZGFyeVwiLFxuICAgICAgICAgICAgZm9udFNpemU6IFwiYm9keTEuZm9udFNpemVcIixcbiAgICAgICAgICB9fVxuICAgICAgICA+XG4gICAgICAgICAge3NoYXJlZE9wdGlvbnNEYXRhW3NoYXJlZFN0YXR1c10uaWNvbn1cbiAgICAgICAgPC9BdmF0YXI+XG4gICAgICAgIDxCb3ggd2lkdGg9e1wiY2FsYygxMDAlIC0gNTBweClcIn0+XG4gICAgICAgICAgPEJveCBzeD17eyBkaXNwbGF5OiBcImZsZXhcIiwgYWxpZ25JdGVtczogXCJjZW50ZXJcIiwgZ2FwOiAwLjUgfX0+XG4gICAgICAgICAgICB7aXNVc2VyT3duZXIgPyAoXG4gICAgICAgICAgICAgIDxSYWRpb01lbnVcbiAgICAgICAgICAgICAgICB2YWx1ZT17c2hhcmVkU3RhdHVzfVxuICAgICAgICAgICAgICAgIGl0ZW1zPXtlbmFibGVkT3B0aW9ucy5tYXAoc2hhcmVkT3B0aW9uID0+ICh7XG4gICAgICAgICAgICAgICAgICBsYWJlbDogc2hhcmVkT3B0aW9uc0RhdGFbc2hhcmVkT3B0aW9uXS50aXRsZSxcbiAgICAgICAgICAgICAgICAgIHZhbHVlOiBzaGFyZWRPcHRpb24sXG4gICAgICAgICAgICAgICAgfSkpfVxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXt2YWx1ZSA9PiB7XG4gICAgICAgICAgICAgICAgICBzZXRTaGFyZWRTdGF0dXModmFsdWUpXG4gICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICkgOiBudWxsfVxuICAgICAgICAgICAgeyFpc1VzZXJPd25lciA/IChcbiAgICAgICAgICAgICAgPEVsbGlwc2lzVG9vbHRpcCB0b29sdGlwVGV4dD17b3JnTmFtZSA/PyBcIlwifT57b3JnTmFtZX08L0VsbGlwc2lzVG9vbHRpcD5cbiAgICAgICAgICAgICkgOiBudWxsfVxuICAgICAgICAgIDwvQm94PlxuICAgICAgICAgIDxUeXBvZ3JhcGh5IGNvbG9yPVwiZ3JleS4zMDBcIj57c2hhcmVkT3B0aW9uc0RhdGFbc2hhcmVkU3RhdHVzXS5kZXNjcmlwdGlvbn08L1R5cG9ncmFwaHk+XG4gICAgICAgIDwvQm94PlxuICAgICAgPC9Cb3g+XG4gICAgPC8+XG4gIClcbn1cbmV4cG9ydCB7IFNoYXJlT3B0aW9uU2VsZWN0b3IgfVxuIl0sIm5hbWVzIjpbIlNoYXJlT3B0aW9uU2VsZWN0b3IiLCJnZXRTaGFyZWRPcHRpb25zRGF0YSIsImRhdGFUeXBlIiwib3JnTmFtZSIsIlByaXZhdGUiLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwiaWNvbiIsIlBlcnNvbiIsIk9yZ2FuaXphdGlvbiIsIkJ1c2luZXNzIiwiUHVibGljIiwic2hhcmVkU3RhdHVzIiwic2V0U2hhcmVkU3RhdHVzIiwiaXNVc2VyT3duZXIiLCJlbmFibGVkT3B0aW9ucyIsInNoYXJlZE9wdGlvbnNEYXRhIiwidXNlTWVtbyIsIlR5cG9ncmFwaHkiLCJmb250U2l6ZSIsImZvbnRXZWlnaHQiLCJteSIsIkJveCIsImRpc3BsYXkiLCJnYXAiLCJBdmF0YXIiLCJzeCIsImJhY2tncm91bmRDb2xvciIsImNvbG9yIiwid2lkdGgiLCJhbGlnbkl0ZW1zIiwiUmFkaW9NZW51IiwidmFsdWUiLCJpdGVtcyIsIm1hcCIsInNoYXJlZE9wdGlvbiIsImxhYmVsIiwib25DaGFuZ2UiLCJFbGxpcHNpc1Rvb2x0aXAiLCJ0b29sdGlwVGV4dCJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQWdHU0E7OztlQUFBQTs7Ozt1QkFoR2U7c0JBQ2dCO3VCQUNDO2lDQUNUOzJCQUNOO0FBSTFCLE1BQU1DLHVCQUF1QixDQUMzQkMsVUFDQUMsVUFRSSxDQUFBO1FBQ0pDLFNBQVM7WUFDUEMsT0FBTztZQUNQQyxhQUFhLENBQUMsNEJBQTRCLEVBQUVKLFNBQVMsQ0FBQztZQUN0REssb0JBQU0scUJBQUNDLGFBQU07UUFDZjtRQUNBQyxjQUFjO1lBQ1pKLE9BQU9GO1lBQ1BHLGFBQWE7WUFDYkMsb0JBQU0scUJBQUNHLGVBQVE7UUFDakI7UUFDQUMsUUFBUTtZQUNOTixPQUFPO1lBQ1BDLGFBQWEsQ0FBQyxvQ0FBb0MsRUFBRUosU0FBUyxDQUFDO1lBQzlESyxvQkFBTSxxQkFBQ0ksYUFBTTtRQUNmO0lBQ0YsQ0FBQTtBQVdBLE1BQU1YLHNCQUFzQixDQUFDLEVBQzNCWSxZQUFZLEVBQ1pDLGVBQWUsRUFDZlYsT0FBTyxFQUNQVyxXQUFXLEVBQ1haLFFBQVEsRUFDUmEsY0FBYyxFQUNSO0lBQ04sTUFBTUMsb0JBQW9CQyxJQUFBQSxjQUFPLEVBQy9CLElBQU1oQixxQkFBcUJDLFVBQVVDLFVBQ3JDO1FBQUNEO1FBQVVDO0tBQVE7SUFFckIscUJBQ0U7OzBCQUNFLHFCQUFDZSxnQkFBVTtnQkFBQ0MsVUFBVTtnQkFBSUMsWUFBVztnQkFBT0MsSUFBRzswQkFBTzs7MEJBR3RELHNCQUFDQyxTQUFHO2dCQUFDQyxTQUFRO2dCQUFPQyxLQUFJOztrQ0FDdEIscUJBQUNDLFlBQU07d0JBQ0xDLElBQUk7NEJBQ0ZDLGlCQUFpQjs0QkFDakJDLE9BQU87NEJBQ1BULFVBQVU7d0JBQ1o7a0NBRUNILGlCQUFpQixDQUFDSixhQUFhLENBQUNMLElBQUk7O2tDQUV2QyxzQkFBQ2UsU0FBRzt3QkFBQ08sT0FBTzs7MENBQ1Ysc0JBQUNQLFNBQUc7Z0NBQUNJLElBQUk7b0NBQUVILFNBQVM7b0NBQVFPLFlBQVk7b0NBQVVOLEtBQUs7Z0NBQUk7O29DQUN4RFYsNEJBQ0MscUJBQUNpQixvQkFBUzt3Q0FDUkMsT0FBT3BCO3dDQUNQcUIsT0FBT2xCLGVBQWVtQixHQUFHLENBQUNDLENBQUFBLGVBQWlCLENBQUE7Z0RBQ3pDQyxPQUFPcEIsaUJBQWlCLENBQUNtQixhQUFhLENBQUM5QixLQUFLO2dEQUM1QzJCLE9BQU9HOzRDQUNULENBQUE7d0NBQ0FFLFVBQVVMLENBQUFBOzRDQUNSbkIsZ0JBQWdCbUI7d0NBQ2xCO3lDQUVBO29DQUNILENBQUNsQiw0QkFDQSxxQkFBQ3dCLGdDQUFlO3dDQUFDQyxhQUFhcEMsb0JBQUFBLHFCQUFBQSxVQUFXO2tEQUFLQTt5Q0FDNUM7OzswQ0FFTixxQkFBQ2UsZ0JBQVU7Z0NBQUNVLE9BQU07MENBQVlaLGlCQUFpQixDQUFDSixhQUFhLENBQUNOLFdBQVc7Ozs7Ozs7O0FBS25GIn0=