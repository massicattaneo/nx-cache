{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/providers/src/Snackbar/useSnackbar.tsx"],"sourcesContent":["import { useCallback } from \"react\"\nimport { useSnackbar as useNotistack } from \"notistack\"\nimport { SnackbarEnqueueAction } from \"@rp/react/common/types\"\nimport { useDeviceInfo } from \"@rp/react/web/common/hooks\"\nimport { CheckCircleOutlined, ErrorOutline, Info, Warning } from \"@rp/react/web/mui/icons\"\nimport { CustomSnackbar } from \"./CustomSnackbar\"\n\nconst mobileDefaultOptions = {\n  anchorOrigin: {\n    vertical: \"bottom\" as const,\n    horizontal: \"center\" as const,\n  },\n}\n\nconst useSnackbar = () => {\n  const { enqueueSnackbar, closeSnackbar, ...other } = useNotistack()\n  const { isMobile } = useDeviceInfo()\n  const enqueueSuccess: SnackbarEnqueueAction = useCallback(\n    (snackbarMsg, enqueueOptions = {}, { action, Icon, disableClose } = {}) =>\n      enqueueSnackbar(snackbarMsg, {\n        ...(isMobile ? mobileDefaultOptions : {}),\n        ...enqueueOptions,\n        content: (key, message) => (\n          <CustomSnackbar\n            id={key}\n            Icon={Icon ?? CheckCircleOutlined}\n            action={action}\n            disableClose={disableClose}\n            variant=\"success\"\n            closeSnackbar={closeSnackbar}\n          >\n            {message}\n          </CustomSnackbar>\n        ),\n      }),\n    [enqueueSnackbar, isMobile, closeSnackbar],\n  )\n\n  const enqueueWarning: SnackbarEnqueueAction = useCallback(\n    (snackbarMsg, enqueueOptions = {}, { action, Icon, disableClose } = {}) =>\n      enqueueSnackbar(snackbarMsg, {\n        ...(isMobile ? mobileDefaultOptions : {}),\n        ...enqueueOptions,\n        content: (key, message) => (\n          <CustomSnackbar\n            disableClose={disableClose}\n            id={key}\n            Icon={Icon ?? Warning}\n            action={action}\n            variant=\"warning\"\n            closeSnackbar={closeSnackbar}\n          >\n            {message}\n          </CustomSnackbar>\n        ),\n      }),\n    [enqueueSnackbar, isMobile, closeSnackbar],\n  )\n\n  const enqueueError: SnackbarEnqueueAction = useCallback(\n    (snackbarMsg, enqueueOptions = {}, { action, Icon, disableClose } = {}) =>\n      enqueueSnackbar(snackbarMsg, {\n        ...(isMobile ? mobileDefaultOptions : {}),\n        ...enqueueOptions,\n        content: (key, message) => (\n          <CustomSnackbar\n            disableClose={disableClose}\n            id={key}\n            Icon={Icon ?? ErrorOutline}\n            action={action}\n            variant=\"error\"\n            closeSnackbar={closeSnackbar}\n          >\n            {message}\n          </CustomSnackbar>\n        ),\n      }),\n    [enqueueSnackbar, isMobile, closeSnackbar],\n  )\n\n  const enqueueInfo: SnackbarEnqueueAction = useCallback(\n    (snackbarMsg, enqueueOptions = {}, { action, Icon, disableClose } = {}) =>\n      enqueueSnackbar(snackbarMsg, {\n        ...(isMobile ? mobileDefaultOptions : {}),\n        ...enqueueOptions,\n        content: (key, message) => (\n          <CustomSnackbar\n            disableClose={disableClose}\n            id={key}\n            Icon={Icon ?? Info}\n            action={action}\n            variant=\"info\"\n            closeSnackbar={closeSnackbar}\n          >\n            {message}\n          </CustomSnackbar>\n        ),\n      }),\n    [enqueueSnackbar, isMobile, closeSnackbar],\n  )\n\n  return {\n    enqueueSnackbar,\n    enqueueSuccess,\n    enqueueWarning,\n    enqueueError,\n    enqueueInfo,\n    closeSnackbar,\n    ...other,\n  }\n}\n\nexport { useSnackbar }\n"],"names":["useSnackbar","mobileDefaultOptions","anchorOrigin","vertical","horizontal","useNotistack","enqueueSnackbar","closeSnackbar","other","isMobile","useDeviceInfo","enqueueSuccess","useCallback","snackbarMsg","enqueueOptions","action","Icon","disableClose","content","key","message","CustomSnackbar","id","CheckCircleOutlined","variant","enqueueWarning","Warning","enqueueError","ErrorOutline","enqueueInfo","Info"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAgHSA;;;eAAAA;;;;uBAhHmB;2BACgB;uBAEd;uBACmC;gCAClC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAE/B,MAAMC,uBAAuB;IAC3BC,cAAc;QACZC,UAAU;QACVC,YAAY;IACd;AACF;AAEA,MAAMJ,cAAc;IAClB,MAAqDK,gBAAAA,IAAAA,sBAAY,KAA3D,EAAEC,eAAe,EAAEC,aAAa,EAAY,GAAGF,eAAVG,mCAAUH;QAA7CC;QAAiBC;;IACzB,MAAM,EAAEE,QAAQ,EAAE,GAAGC,IAAAA,oBAAa;IAClC,MAAMC,iBAAwCC,IAAAA,kBAAW,EACvD,CAACC,aAAaC,iBAAiB,CAAC,CAAC,EAAE,EAAEC,MAAM,EAAEC,IAAI,EAAEC,YAAY,EAAE,GAAG,CAAC,CAAC,GACpEX,gBAAgBO,aAAa,wCACvBJ,WAAWR,uBAAuB,CAAC,GACpCa;YACHI,SAAS,CAACC,KAAKC,wBACb,qBAACC,8BAAc;oBACbC,IAAIH;oBACJH,MAAMA,iBAAAA,kBAAAA,OAAQO,0BAAmB;oBACjCR,QAAQA;oBACRE,cAAcA;oBACdO,SAAQ;oBACRjB,eAAeA;8BAEda;;aAIT;QAACd;QAAiBG;QAAUF;KAAc;IAG5C,MAAMkB,iBAAwCb,IAAAA,kBAAW,EACvD,CAACC,aAAaC,iBAAiB,CAAC,CAAC,EAAE,EAAEC,MAAM,EAAEC,IAAI,EAAEC,YAAY,EAAE,GAAG,CAAC,CAAC,GACpEX,gBAAgBO,aAAa,wCACvBJ,WAAWR,uBAAuB,CAAC,GACpCa;YACHI,SAAS,CAACC,KAAKC,wBACb,qBAACC,8BAAc;oBACbJ,cAAcA;oBACdK,IAAIH;oBACJH,MAAMA,iBAAAA,kBAAAA,OAAQU,cAAO;oBACrBX,QAAQA;oBACRS,SAAQ;oBACRjB,eAAeA;8BAEda;;aAIT;QAACd;QAAiBG;QAAUF;KAAc;IAG5C,MAAMoB,eAAsCf,IAAAA,kBAAW,EACrD,CAACC,aAAaC,iBAAiB,CAAC,CAAC,EAAE,EAAEC,MAAM,EAAEC,IAAI,EAAEC,YAAY,EAAE,GAAG,CAAC,CAAC,GACpEX,gBAAgBO,aAAa,wCACvBJ,WAAWR,uBAAuB,CAAC,GACpCa;YACHI,SAAS,CAACC,KAAKC,wBACb,qBAACC,8BAAc;oBACbJ,cAAcA;oBACdK,IAAIH;oBACJH,MAAMA,iBAAAA,kBAAAA,OAAQY,mBAAY;oBAC1Bb,QAAQA;oBACRS,SAAQ;oBACRjB,eAAeA;8BAEda;;aAIT;QAACd;QAAiBG;QAAUF;KAAc;IAG5C,MAAMsB,cAAqCjB,IAAAA,kBAAW,EACpD,CAACC,aAAaC,iBAAiB,CAAC,CAAC,EAAE,EAAEC,MAAM,EAAEC,IAAI,EAAEC,YAAY,EAAE,GAAG,CAAC,CAAC,GACpEX,gBAAgBO,aAAa,wCACvBJ,WAAWR,uBAAuB,CAAC,GACpCa;YACHI,SAAS,CAACC,KAAKC,wBACb,qBAACC,8BAAc;oBACbJ,cAAcA;oBACdK,IAAIH;oBACJH,MAAMA,iBAAAA,kBAAAA,OAAQc,WAAI;oBAClBf,QAAQA;oBACRS,SAAQ;oBACRjB,eAAeA;8BAEda;;aAIT;QAACd;QAAiBG;QAAUF;KAAc;IAG5C,OAAO;QACLD;QACAK;QACAc;QACAE;QACAE;QACAtB;OACGC;AAEP"}