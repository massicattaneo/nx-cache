{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/apps/client-web/src/app/pages/Login/LoginPage.test.tsx"],"sourcesContent":["import { useSignIn } from \"@clerk/clerk-react\"\nimport { useSnackbar } from \"@rp/react/web/common/providers\"\nimport { renderWithProviders } from \"@rp/react/web/common/tools\"\nimport { fireEvent, waitFor } from \"@testing-library/react\"\nimport { LoginPage } from \"./LoginPage\"\n\nconst useSnackbarMock = useSnackbar as jest.Mock\nconst mockUseSignIn = useSignIn as jest.Mock\n\njest.mock(\"@rp/react/web/common/providers\", () => ({\n  ...jest.requireActual(\"@rp/react/web/common/providers\"),\n  useSnackbar: jest.fn(),\n}))\n\nconst setActive = jest.fn()\nconst create = jest.fn()\nconst signIn = { create }\n\nconst email = \"test@test.com\"\nconst password = \"test123\"\n\ndescribe(\"Login\", () => {\n  mockUseSignIn.mockReturnValue({ isLoaded: true, signIn, setActive })\n  useSnackbarMock.mockReturnValue({ enqueueSuccess: jest.fn(), enqueueError: jest.fn() })\n\n  it(\"should render Links\", () => {\n    const { getByRole } = renderWithProviders(<LoginPage />, {}, true)\n    expect(getByRole(\"link\", { name: /terms of use/i })).toBeInTheDocument()\n    expect(getByRole(\"link\", { name: /Privacy policy/i })).toBeInTheDocument()\n  })\n\n  it(\"should render\", async () => {\n    const { getByRole, getByPlaceholderText } = renderWithProviders(<LoginPage />)\n\n    fireEvent.change(getByPlaceholderText(/enter your email/i), { target: { value: email } })\n    fireEvent.click(getByRole(\"button\", { name: \"Continue\" }))\n    expect(getByRole(\"link\", { name: \"Forgot your password?\" })).toBeInTheDocument()\n    fireEvent.change(getByPlaceholderText(/enter your password/i), { target: { value: password } })\n    fireEvent.click(getByRole(\"button\", { name: \"Continue\" }))\n\n    await waitFor(() => {\n      expect(create).toBeCalledWith({ identifier: email, password })\n    })\n  })\n\n  it(\"should not have the users email in the url when the user clicks on 'Forgot your password?'\", async () => {\n    const { getByRole, getByPlaceholderText } = renderWithProviders(<LoginPage />)\n    fireEvent.change(getByPlaceholderText(/enter your email/i), { target: { value: email } })\n    fireEvent.click(getByRole(\"button\", { name: \"Continue\" }))\n    fireEvent.click(getByRole(\"link\", { name: \"Forgot your password?\" }))\n\n    await waitFor(() => {\n      expect(window.location.href).not.toContain(\"email=\")\n    })\n  })\n\n  it(\"should have the users email in the url when the user clicks on 'Forgot password?'\", async () => {\n    const { getByRole, getByPlaceholderText } = renderWithProviders(<LoginPage />)\n\n    fireEvent.change(getByPlaceholderText(/enter your email/i), { target: { value: email } })\n    fireEvent.click(getByRole(\"button\", { name: \"Continue\" }))\n    const forgotPasswordLink = getByRole(\"link\", { name: \"Forgot your password?\" })\n    expect(forgotPasswordLink).toBeInTheDocument()\n\n    fireEvent.change(getByPlaceholderText(/enter your email/i), { target: { value: email } })\n\n    expect(forgotPasswordLink).toHaveAttribute(\"href\", \"/reset-password/?email=test%40test.com\")\n  })\n})\n"],"names":["jest","mock","requireActual","useSnackbar","fn","useSnackbarMock","mockUseSignIn","useSignIn","setActive","create","signIn","email","password","describe","mockReturnValue","isLoaded","enqueueSuccess","enqueueError","it","getByRole","renderWithProviders","LoginPage","expect","name","toBeInTheDocument","getByPlaceholderText","fireEvent","change","target","value","click","waitFor","toBeCalledWith","identifier","window","location","href","not","toContain","forgotPasswordLink","toHaveAttribute"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}