9602dc740fac0e6875a10bee2a66f9f6
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "useCarouselPrompts", {
    enumerable: true,
    get: function() {
        return useCarouselPrompts;
    }
});
const _react = require("react");
const _utils = require("@rp/common/utils");
const _useSuggestedPrompts = require("./useSuggestedPrompts");
const _shufflePrompts = require("./useSuggestedPrompts/shufflePrompts");
//Note: hasEntitlement has to be passed as prop instead of using useAccount() to avoid circular dependency
const useCarouselPrompts = ({ scope, watchlistPrompts, hasEntitlement })=>{
    const datasets = (0, _react.useMemo)(()=>(0, _utils.getDatasetFilter)(scope, watchlistPrompts), [
        scope,
        watchlistPrompts
    ]);
    const filters = (0, _react.useMemo)(()=>({
            datasets,
            watchlistPrompts,
            includeTopics: scope || watchlistPrompts ? undefined : {
                Popular: true
            },
            hasEntitlement
        }), // TODO: memoize hasEntitlement to add it as a dependency
    // eslint-disable-next-line react-hooks/exhaustive-deps
    [
        datasets,
        watchlistPrompts
    ]);
    const { data: suggestedPrompts } = (0, _useSuggestedPrompts.useSuggestedPrompts)(filters);
    const randomPrompts = (0, _react.useMemo)(()=>{
        return suggestedPrompts ? (0, _shufflePrompts.shufflePrompts)(suggestedPrompts) : undefined;
    }, [
        suggestedPrompts
    ]);
    return randomPrompts;
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3QvY29tbW9uL2hvb2tzL3NyYy9saWIvdXNlQ2Fyb3VzZWxQcm9tcHRzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZU1lbW8gfSBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IHsgRGF0YXNldFNjb3BlIH0gZnJvbSBcIkBycC9jb21tb24vYXBpLXR5cGVzXCJcbmltcG9ydCB7IGdldERhdGFzZXRGaWx0ZXIgfSBmcm9tIFwiQHJwL2NvbW1vbi91dGlsc1wiXG5pbXBvcnQgeyB1c2VTdWdnZXN0ZWRQcm9tcHRzIH0gZnJvbSBcIi4vdXNlU3VnZ2VzdGVkUHJvbXB0c1wiXG5pbXBvcnQgeyBzaHVmZmxlUHJvbXB0cyB9IGZyb20gXCIuL3VzZVN1Z2dlc3RlZFByb21wdHMvc2h1ZmZsZVByb21wdHNcIlxuaW1wb3J0IHsgRmlsdGVycyB9IGZyb20gXCIuL3VzZVN1Z2dlc3RlZFByb21wdHMvc3VnZ2VzdGVkUHJvbXB0cy50eXBlc1wiXG5cbnR5cGUgT3B0aW9ucyA9IHtcbiAgc2NvcGU/OiBEYXRhc2V0U2NvcGVcbiAgd2F0Y2hsaXN0UHJvbXB0cz86IGJvb2xlYW5cbiAgaGFzRW50aXRsZW1lbnQ/OiBGaWx0ZXJzW1wiaGFzRW50aXRsZW1lbnRcIl1cbn1cblxuLy9Ob3RlOiBoYXNFbnRpdGxlbWVudCBoYXMgdG8gYmUgcGFzc2VkIGFzIHByb3AgaW5zdGVhZCBvZiB1c2luZyB1c2VBY2NvdW50KCkgdG8gYXZvaWQgY2lyY3VsYXIgZGVwZW5kZW5jeVxuY29uc3QgdXNlQ2Fyb3VzZWxQcm9tcHRzID0gKHsgc2NvcGUsIHdhdGNobGlzdFByb21wdHMsIGhhc0VudGl0bGVtZW50IH06IE9wdGlvbnMpID0+IHtcbiAgY29uc3QgZGF0YXNldHMgPSB1c2VNZW1vKFxuICAgICgpID0+IGdldERhdGFzZXRGaWx0ZXIoc2NvcGUsIHdhdGNobGlzdFByb21wdHMpLFxuICAgIFtzY29wZSwgd2F0Y2hsaXN0UHJvbXB0c10sXG4gIClcblxuICBjb25zdCBmaWx0ZXJzID0gdXNlTWVtbyhcbiAgICAoKSA9PiAoe1xuICAgICAgZGF0YXNldHMsXG4gICAgICB3YXRjaGxpc3RQcm9tcHRzLFxuICAgICAgaW5jbHVkZVRvcGljczogc2NvcGUgfHwgd2F0Y2hsaXN0UHJvbXB0cyA/IHVuZGVmaW5lZCA6IHsgUG9wdWxhcjogdHJ1ZSB9LFxuICAgICAgaGFzRW50aXRsZW1lbnQsXG4gICAgfSksXG4gICAgLy8gVE9ETzogbWVtb2l6ZSBoYXNFbnRpdGxlbWVudCB0byBhZGQgaXQgYXMgYSBkZXBlbmRlbmN5XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0LWhvb2tzL2V4aGF1c3RpdmUtZGVwc1xuICAgIFtkYXRhc2V0cywgd2F0Y2hsaXN0UHJvbXB0c10sXG4gIClcblxuICBjb25zdCB7IGRhdGE6IHN1Z2dlc3RlZFByb21wdHMgfSA9IHVzZVN1Z2dlc3RlZFByb21wdHMoZmlsdGVycylcbiAgY29uc3QgcmFuZG9tUHJvbXB0cyA9IHVzZU1lbW8oKCkgPT4ge1xuICAgIHJldHVybiBzdWdnZXN0ZWRQcm9tcHRzID8gc2h1ZmZsZVByb21wdHMoc3VnZ2VzdGVkUHJvbXB0cykgOiB1bmRlZmluZWRcbiAgfSwgW3N1Z2dlc3RlZFByb21wdHNdKVxuXG4gIHJldHVybiByYW5kb21Qcm9tcHRzXG59XG5cbmV4cG9ydCB7IHVzZUNhcm91c2VsUHJvbXB0cyB9XG4iXSwibmFtZXMiOlsidXNlQ2Fyb3VzZWxQcm9tcHRzIiwic2NvcGUiLCJ3YXRjaGxpc3RQcm9tcHRzIiwiaGFzRW50aXRsZW1lbnQiLCJkYXRhc2V0cyIsInVzZU1lbW8iLCJnZXREYXRhc2V0RmlsdGVyIiwiZmlsdGVycyIsImluY2x1ZGVUb3BpY3MiLCJ1bmRlZmluZWQiLCJQb3B1bGFyIiwiZGF0YSIsInN1Z2dlc3RlZFByb21wdHMiLCJ1c2VTdWdnZXN0ZWRQcm9tcHRzIiwicmFuZG9tUHJvbXB0cyIsInNodWZmbGVQcm9tcHRzIl0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBd0NTQTs7O2VBQUFBOzs7dUJBeENlO3VCQUVTO3FDQUNHO2dDQUNMO0FBUy9CLDBHQUEwRztBQUMxRyxNQUFNQSxxQkFBcUIsQ0FBQyxFQUFFQyxLQUFLLEVBQUVDLGdCQUFnQixFQUFFQyxjQUFjLEVBQVc7SUFDOUUsTUFBTUMsV0FBV0MsSUFBQUEsY0FBTyxFQUN0QixJQUFNQyxJQUFBQSx1QkFBZ0IsRUFBQ0wsT0FBT0MsbUJBQzlCO1FBQUNEO1FBQU9DO0tBQWlCO0lBRzNCLE1BQU1LLFVBQVVGLElBQUFBLGNBQU8sRUFDckIsSUFBTyxDQUFBO1lBQ0xEO1lBQ0FGO1lBQ0FNLGVBQWVQLFNBQVNDLG1CQUFtQk8sWUFBWTtnQkFBRUMsU0FBUztZQUFLO1lBQ3ZFUDtRQUNGLENBQUEsR0FDQSx5REFBeUQ7SUFDekQsdURBQXVEO0lBQ3ZEO1FBQUNDO1FBQVVGO0tBQWlCO0lBRzlCLE1BQU0sRUFBRVMsTUFBTUMsZ0JBQWdCLEVBQUUsR0FBR0MsSUFBQUEsd0NBQW1CLEVBQUNOO0lBQ3ZELE1BQU1PLGdCQUFnQlQsSUFBQUEsY0FBTyxFQUFDO1FBQzVCLE9BQU9PLG1CQUFtQkcsSUFBQUEsOEJBQWMsRUFBQ0gsb0JBQW9CSDtJQUMvRCxHQUFHO1FBQUNHO0tBQWlCO0lBRXJCLE9BQU9FO0FBQ1QifQ==