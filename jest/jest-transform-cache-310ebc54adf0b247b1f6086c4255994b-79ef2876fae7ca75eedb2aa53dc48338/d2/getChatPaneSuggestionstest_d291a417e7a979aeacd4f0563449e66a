8447f9fef43138087d7c7b58d35f6afd
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _get = /*#__PURE__*/ _interop_require_default(require("lodash/get"));
const _omit = /*#__PURE__*/ _interop_require_default(require("lodash/omit"));
const _getChatPaneSuggestions = require("./getChatPaneSuggestions");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const evaluateSuggestions = (suggestions)=>suggestions.map((suggestion)=>{
        return _object_spread_props(_object_spread({}, (0, _omit.default)(suggestion, [
            "Icon"
        ])), {
            prompt: suggestion.prompt(),
            displayPrompt: suggestion.displayPrompt(),
            iconName: (0, _get.default)(suggestion.Icon, "type.render.displayName")
        });
    });
describe("getFilesChatPaneSuggestions", ()=>{
    describe("when isSingleDocument is true", ()=>{
        const evaluatedSuggestions = evaluateSuggestions((0, _getChatPaneSuggestions.getFilesChatPaneSuggestions)({
            isSingleDocument: true
        }));
        it("should return the correct suggestions", ()=>{
            expect(evaluatedSuggestions).toStrictEqual([
                {
                    displayPrompt: "Summarize the key points, takeaways, and structure of this file.",
                    iconName: "AssignmentOutlinedIcon",
                    id: "files-chat-suggestion-brief-me-on-this-document",
                    label: "Brief Me on This Document",
                    prompt: "Summarize the key points, takeaways, and structure of this file."
                },
                {
                    displayPrompt: "Extract and organize key events and milestones chronologically.",
                    iconName: "TimelineOutlinedIcon",
                    id: "files-chat-suggestion-generate-a-timeline",
                    label: "Generate a Timeline",
                    prompt: "Extract and organize key events and milestones chronologically."
                },
                {
                    displayPrompt: "Generate common questions and concise answers from this file.",
                    iconName: "QuizOutlinedIcon",
                    id: "files-chat-suggestion-faq",
                    label: "FAQ",
                    prompt: "Generate common questions and concise answers from this file."
                },
                {
                    displayPrompt: "List the named entities and main subjects discussed, extracting Key People, Organizations, and Topics.",
                    iconName: "ChecklistRtlOutlinedIcon",
                    id: "files-chat-suggestion-key-people-organizations-and-topics",
                    label: "Key People, Organizations, and Topics",
                    prompt: "List the named entities and main subjects discussed, extracting Key People, Organizations, and Topics."
                }
            ]);
        });
    });
    describe("when isSingleDocument is false", ()=>{
        const evaluatedSuggestions = evaluateSuggestions((0, _getChatPaneSuggestions.getFilesChatPaneSuggestions)({
            isSingleDocument: false
        }));
        it("should return the correct suggestions", ()=>{
            expect(evaluatedSuggestions).toStrictEqual([
                {
                    displayPrompt: "Summarize the key points, takeaways, and structure of these files.",
                    iconName: "AssignmentOutlinedIcon",
                    id: "files-chat-suggestion-brief-me-on-this-document",
                    label: "Brief Me on These Documents",
                    prompt: "Summarize the key points, takeaways, and structure of these files."
                },
                {
                    displayPrompt: "Extract and organize key events and milestones chronologically.",
                    iconName: "TimelineOutlinedIcon",
                    id: "files-chat-suggestion-generate-a-timeline",
                    label: "Generate a Timeline",
                    prompt: "Extract and organize key events and milestones chronologically."
                },
                {
                    displayPrompt: "Generate common questions and concise answers from these files.",
                    iconName: "QuizOutlinedIcon",
                    id: "files-chat-suggestion-faq",
                    label: "FAQ",
                    prompt: "Generate common questions and concise answers from these files."
                },
                {
                    displayPrompt: "List the named entities and main subjects discussed, extracting Key People, Organizations, and Topics.",
                    iconName: "ChecklistRtlOutlinedIcon",
                    id: "files-chat-suggestion-key-people-organizations-and-topics",
                    label: "Key People, Organizations, and Topics",
                    prompt: "List the named entities and main subjects discussed, extracting Key People, Organizations, and Topics."
                }
            ]);
        });
    });
});

//# sourceMappingURL=data:application/json;base64,