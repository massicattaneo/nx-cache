bfc277399fd8f5f868698b24cc6aa5b5
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "useThirdPartyLogin", {
    enumerable: true,
    get: function() {
        return useThirdPartyLogin;
    }
});
const _clerkreact = require("@clerk/clerk-react");
const _utils = require("@rp/common/utils");
const _Snackbar = require("./Snackbar");
const useThirdPartyLogin = ()=>{
    const { signIn } = (0, _clerkreact.useSignIn)();
    const { enqueueError } = (0, _Snackbar.useSnackbar)();
    const thirdPartyLogin = ({ strategy, email, redirect })=>{
        // This is a workaround for a Clerk bug where the id makes life hard for SSO
        // I'm talking with Clerk about this, but for now, life is this bad :(
        if (signIn === null || signIn === void 0 ? void 0 : signIn.id) signIn.id = undefined;
        return signIn === null || signIn === void 0 ? void 0 : signIn.authenticateWithRedirect({
            identifier: email,
            strategy: strategy,
            redirectUrl: "/sso-callback",
            redirectUrlComplete: redirect !== null && redirect !== void 0 ? redirect : "/"
        }).catch((error)=>{
            enqueueError((0, _utils.displayError)(error), {
                anchorOrigin: {
                    vertical: "bottom",
                    horizontal: "center"
                }
            });
        });
    };
    return {
        thirdPartyLogin
    };
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9wcm92aWRlcnMvc3JjL3VzZVRoaXJkUGFydHlMb2dpbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTaWduSW4gfSBmcm9tIFwiQGNsZXJrL2NsZXJrLXJlYWN0XCJcbmltcG9ydCB7IE9BdXRoU3RyYXRlZ3ksIFNhbWxTdHJhdGVneSB9IGZyb20gXCJAY2xlcmsvdHlwZXNcIlxuaW1wb3J0IHsgZGlzcGxheUVycm9yIH0gZnJvbSBcIkBycC9jb21tb24vdXRpbHNcIlxuaW1wb3J0IHsgdXNlU25hY2tiYXIgfSBmcm9tIFwiLi9TbmFja2JhclwiXG5cbmNvbnN0IHVzZVRoaXJkUGFydHlMb2dpbiA9ICgpID0+IHtcbiAgY29uc3QgeyBzaWduSW4gfSA9IHVzZVNpZ25JbigpXG4gIGNvbnN0IHsgZW5xdWV1ZUVycm9yIH0gPSB1c2VTbmFja2JhcigpXG5cbiAgY29uc3QgdGhpcmRQYXJ0eUxvZ2luID0gKHtcbiAgICBzdHJhdGVneSxcbiAgICBlbWFpbCxcbiAgICByZWRpcmVjdCxcbiAgfToge1xuICAgIHN0cmF0ZWd5OiBPQXV0aFN0cmF0ZWd5IHwgU2FtbFN0cmF0ZWd5XG4gICAgZW1haWw/OiBzdHJpbmdcbiAgICByZWRpcmVjdD86IHN0cmluZ1xuICB9KSA9PiB7XG4gICAgLy8gVGhpcyBpcyBhIHdvcmthcm91bmQgZm9yIGEgQ2xlcmsgYnVnIHdoZXJlIHRoZSBpZCBtYWtlcyBsaWZlIGhhcmQgZm9yIFNTT1xuICAgIC8vIEknbSB0YWxraW5nIHdpdGggQ2xlcmsgYWJvdXQgdGhpcywgYnV0IGZvciBub3csIGxpZmUgaXMgdGhpcyBiYWQgOihcbiAgICBpZiAoc2lnbkluPy5pZCkgKHNpZ25JbiBhcyB7IGlkPzogc3RyaW5nIH0pLmlkID0gdW5kZWZpbmVkXG5cbiAgICByZXR1cm4gc2lnbkluXG4gICAgICA/LmF1dGhlbnRpY2F0ZVdpdGhSZWRpcmVjdCh7XG4gICAgICAgIGlkZW50aWZpZXI6IGVtYWlsLFxuICAgICAgICBzdHJhdGVneTogc3RyYXRlZ3ksXG4gICAgICAgIHJlZGlyZWN0VXJsOiBcIi9zc28tY2FsbGJhY2tcIixcbiAgICAgICAgcmVkaXJlY3RVcmxDb21wbGV0ZTogcmVkaXJlY3QgPz8gXCIvXCIsXG4gICAgICB9KVxuICAgICAgLmNhdGNoKChlcnJvcjogdW5rbm93bikgPT4ge1xuICAgICAgICBlbnF1ZXVlRXJyb3IoZGlzcGxheUVycm9yKGVycm9yKSwge1xuICAgICAgICAgIGFuY2hvck9yaWdpbjogeyB2ZXJ0aWNhbDogXCJib3R0b21cIiwgaG9yaXpvbnRhbDogXCJjZW50ZXJcIiB9LFxuICAgICAgICB9KVxuICAgICAgfSlcbiAgfVxuICByZXR1cm4geyB0aGlyZFBhcnR5TG9naW4gfVxufVxuXG5leHBvcnQgeyB1c2VUaGlyZFBhcnR5TG9naW4gfVxuIl0sIm5hbWVzIjpbInVzZVRoaXJkUGFydHlMb2dpbiIsInNpZ25JbiIsInVzZVNpZ25JbiIsImVucXVldWVFcnJvciIsInVzZVNuYWNrYmFyIiwidGhpcmRQYXJ0eUxvZ2luIiwic3RyYXRlZ3kiLCJlbWFpbCIsInJlZGlyZWN0IiwiaWQiLCJ1bmRlZmluZWQiLCJhdXRoZW50aWNhdGVXaXRoUmVkaXJlY3QiLCJpZGVudGlmaWVyIiwicmVkaXJlY3RVcmwiLCJyZWRpcmVjdFVybENvbXBsZXRlIiwiY2F0Y2giLCJlcnJvciIsImRpc3BsYXlFcnJvciIsImFuY2hvck9yaWdpbiIsInZlcnRpY2FsIiwiaG9yaXpvbnRhbCJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQXNDU0E7OztlQUFBQTs7OzRCQXRDaUI7dUJBRUc7MEJBQ0Q7QUFFNUIsTUFBTUEscUJBQXFCO0lBQ3pCLE1BQU0sRUFBRUMsTUFBTSxFQUFFLEdBQUdDLElBQUFBLHFCQUFTO0lBQzVCLE1BQU0sRUFBRUMsWUFBWSxFQUFFLEdBQUdDLElBQUFBLHFCQUFXO0lBRXBDLE1BQU1DLGtCQUFrQixDQUFDLEVBQ3ZCQyxRQUFRLEVBQ1JDLEtBQUssRUFDTEMsUUFBUSxFQUtUO1FBQ0MsNEVBQTRFO1FBQzVFLHNFQUFzRTtRQUN0RSxJQUFJUCxtQkFBQUEsNkJBQUFBLE9BQVFRLEVBQUUsRUFBRSxBQUFDUixPQUEyQlEsRUFBRSxHQUFHQztRQUVqRCxPQUFPVCxtQkFBQUEsNkJBQUFBLE9BQ0hVLHdCQUF3QixDQUFDO1lBQ3pCQyxZQUFZTDtZQUNaRCxVQUFVQTtZQUNWTyxhQUFhO1lBQ2JDLHFCQUFxQk4scUJBQUFBLHNCQUFBQSxXQUFZO1FBQ25DLEdBQ0NPLEtBQUssQ0FBQyxDQUFDQztZQUNOYixhQUFhYyxJQUFBQSxtQkFBWSxFQUFDRCxRQUFRO2dCQUNoQ0UsY0FBYztvQkFBRUMsVUFBVTtvQkFBVUMsWUFBWTtnQkFBUztZQUMzRDtRQUNGO0lBQ0o7SUFDQSxPQUFPO1FBQUVmO0lBQWdCO0FBQzNCIn0=