{"version":3,"sources":["../../src/classes/DragDropMonitorImpl.ts"],"sourcesContent":["import { invariant } from '@react-dnd/invariant'\nimport type { Store } from 'redux'\n\nimport type {\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tIdentifier,\n\tListener,\n\tUnsubscribe,\n\tXYCoord,\n} from '../interfaces.js'\nimport type { State } from '../reducers/index.js'\nimport {\n\tgetDifferenceFromInitialOffset,\n\tgetSourceClientOffset,\n} from '../utils/coords.js'\nimport { areDirty } from '../utils/dirtiness.js'\nimport { matchesType } from '../utils/matchesType.js'\n\nexport class DragDropMonitorImpl implements DragDropMonitor {\n\tprivate store: Store<State>\n\tpublic readonly registry: HandlerRegistry\n\n\tpublic constructor(store: Store<State>, registry: HandlerRegistry) {\n\t\tthis.store = store\n\t\tthis.registry = registry\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions: { handlerIds?: string[] } = {},\n\t): Unsubscribe {\n\t\tconst { handlerIds } = options\n\t\tinvariant(typeof listener === 'function', 'listener must be a function.')\n\t\tinvariant(\n\t\t\ttypeof handlerIds === 'undefined' || Array.isArray(handlerIds),\n\t\t\t'handlerIds, when specified, must be an array of strings.',\n\t\t)\n\n\t\tlet prevStateId = this.store.getState().stateId\n\t\tconst handleChange = () => {\n\t\t\tconst state = this.store.getState()\n\t\t\tconst currentStateId = state.stateId\n\t\t\ttry {\n\t\t\t\tconst canSkipListener =\n\t\t\t\t\tcurrentStateId === prevStateId ||\n\t\t\t\t\t(currentStateId === prevStateId + 1 &&\n\t\t\t\t\t\t!areDirty(state.dirtyHandlerIds, handlerIds))\n\n\t\t\t\tif (!canSkipListener) {\n\t\t\t\t\tlistener()\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tprevStateId = currentStateId\n\t\t\t}\n\t\t}\n\n\t\treturn this.store.subscribe(handleChange)\n\t}\n\n\tpublic subscribeToOffsetChange(listener: Listener): Unsubscribe {\n\t\tinvariant(typeof listener === 'function', 'listener must be a function.')\n\n\t\tlet previousState = this.store.getState().dragOffset\n\t\tconst handleChange = () => {\n\t\t\tconst nextState = this.store.getState().dragOffset\n\t\t\tif (nextState === previousState) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tpreviousState = nextState\n\t\t\tlistener()\n\t\t}\n\n\t\treturn this.store.subscribe(handleChange)\n\t}\n\n\tpublic canDragSource(sourceId: string | undefined): boolean {\n\t\tif (!sourceId) {\n\t\t\treturn false\n\t\t}\n\t\tconst source = this.registry.getSource(sourceId)\n\t\tinvariant(source, `Expected to find a valid source. sourceId=${sourceId}`)\n\n\t\tif (this.isDragging()) {\n\t\t\treturn false\n\t\t}\n\n\t\treturn source.canDrag(this, sourceId)\n\t}\n\n\tpublic canDropOnTarget(targetId: string | undefined): boolean {\n\t\t// undefined on initial render\n\t\tif (!targetId) {\n\t\t\treturn false\n\t\t}\n\t\tconst target = this.registry.getTarget(targetId)\n\t\tinvariant(target, `Expected to find a valid target. targetId=${targetId}`)\n\n\t\tif (!this.isDragging() || this.didDrop()) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst targetType = this.registry.getTargetType(targetId)\n\t\tconst draggedItemType = this.getItemType()\n\t\treturn (\n\t\t\tmatchesType(targetType, draggedItemType) && target.canDrop(this, targetId)\n\t\t)\n\t}\n\n\tpublic isDragging(): boolean {\n\t\treturn Boolean(this.getItemType())\n\t}\n\n\tpublic isDraggingSource(sourceId: string | undefined): boolean {\n\t\t// undefined on initial render\n\t\tif (!sourceId) {\n\t\t\treturn false\n\t\t}\n\t\tconst source = this.registry.getSource(sourceId, true)\n\t\tinvariant(source, `Expected to find a valid source. sourceId=${sourceId}`)\n\n\t\tif (!this.isDragging() || !this.isSourcePublic()) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst sourceType = this.registry.getSourceType(sourceId)\n\t\tconst draggedItemType = this.getItemType()\n\t\tif (sourceType !== draggedItemType) {\n\t\t\treturn false\n\t\t}\n\n\t\treturn source.isDragging(this, sourceId)\n\t}\n\n\tpublic isOverTarget(\n\t\ttargetId: string | undefined,\n\t\toptions = { shallow: false },\n\t): boolean {\n\t\t// undefined on initial render\n\t\tif (!targetId) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst { shallow } = options\n\t\tif (!this.isDragging()) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst targetType = this.registry.getTargetType(targetId)\n\t\tconst draggedItemType = this.getItemType()\n\t\tif (draggedItemType && !matchesType(targetType, draggedItemType)) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst targetIds = this.getTargetIds()\n\t\tif (!targetIds.length) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst index = targetIds.indexOf(targetId)\n\t\tif (shallow) {\n\t\t\treturn index === targetIds.length - 1\n\t\t} else {\n\t\t\treturn index > -1\n\t\t}\n\t}\n\n\tpublic getItemType(): Identifier {\n\t\treturn this.store.getState().dragOperation.itemType as Identifier\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.store.getState().dragOperation.item\n\t}\n\n\tpublic getSourceId(): string | null {\n\t\treturn this.store.getState().dragOperation.sourceId\n\t}\n\n\tpublic getTargetIds(): string[] {\n\t\treturn this.store.getState().dragOperation.targetIds\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.store.getState().dragOperation.dropResult\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.store.getState().dragOperation.didDrop\n\t}\n\n\tpublic isSourcePublic(): boolean {\n\t\treturn Boolean(this.store.getState().dragOperation.isSourcePublic)\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.store.getState().dragOffset.initialClientOffset\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.store.getState().dragOffset.initialSourceClientOffset\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.store.getState().dragOffset.clientOffset\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn getSourceClientOffset(this.store.getState().dragOffset)\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn getDifferenceFromInitialOffset(this.store.getState().dragOffset)\n\t}\n}\n"],"names":["DragDropMonitorImpl","subscribeToStateChange","listener","options","handlerIds","invariant","Array","isArray","prevStateId","store","getState","stateId","handleChange","state","currentStateId","canSkipListener","areDirty","dirtyHandlerIds","subscribe","subscribeToOffsetChange","previousState","dragOffset","nextState","canDragSource","sourceId","source","registry","getSource","isDragging","canDrag","canDropOnTarget","targetId","target","getTarget","didDrop","targetType","getTargetType","draggedItemType","getItemType","matchesType","canDrop","Boolean","isDraggingSource","isSourcePublic","sourceType","getSourceType","isOverTarget","shallow","targetIds","getTargetIds","length","index","indexOf","dragOperation","itemType","getItem","item","getSourceId","getDropResult","dropResult","getInitialClientOffset","initialClientOffset","getInitialSourceClientOffset","initialSourceClientOffset","getClientOffset","clientOffset","getSourceClientOffset","getDifferenceFromInitialOffset","constructor"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}