ee9f1f2c6aa519bbaa759da446c4c128
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "NotificationsSelectTime", {
    enumerable: true,
    get: function() {
        return NotificationsSelectTime;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _utils = require("@rp/common/utils");
const _core = require("@rp/react/web/mui/core");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const NotificationsSelectTime = ({ disabled, schedule, setSchedule, label })=>{
    const exp = _utils.awsCron.expressionToTime(schedule === null || schedule === void 0 ? void 0 : schedule.schedulerExpression);
    const value = `${exp.hour.toString().padStart(2, "0")}:${exp.minute.toString().padStart(2, "0")}`;
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                sx: {
                    mb: 1
                },
                children: label
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.TextField, {
                value: value,
                disabled: disabled,
                sx: {
                    "& .MuiInputBase-input": {
                        color: "rgba(255, 255, 255, 0.7)"
                    }
                },
                onChange: (ev)=>{
                    if (!schedule) return;
                    if (exp.recurrence === "weekly") {
                        setSchedule(_object_spread_props(_object_spread({}, schedule), {
                            schedulerExpression: _utils.awsCron.timeToExpression({
                                hour: parseInt(ev.target.value.split(":")[0]),
                                minute: parseInt(ev.target.value.split(":")[1]),
                                recurrence: exp.recurrence,
                                daysOfWeek: exp.daysOfWeek
                            })
                        }));
                    } else {
                        setSchedule(_object_spread_props(_object_spread({}, schedule), {
                            schedulerExpression: _utils.awsCron.timeToExpression({
                                hour: parseInt(ev.target.value.split(":")[0]),
                                minute: parseInt(ev.target.value.split(":")[1]),
                                recurrence: exp.recurrence
                            })
                        }));
                    }
                },
                "aria-label": "Time",
                type: "time",
                fullWidth: true,
                size: "small"
            })
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9jb21wb3NpdGUtY29tcG9uZW50cy9zcmMvTm90aWZpY2F0aW9ucy9Ob3RpZmljYXRpb25zU2VsZWN0VGltZS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTm90aWZpY2F0aW9uU2NoZWR1bGUgfSBmcm9tIFwiQHJwL2NvbW1vbi9hcGktdHlwZXNcIlxuaW1wb3J0IHsgYXdzQ3JvbiB9IGZyb20gXCJAcnAvY29tbW9uL3V0aWxzXCJcbmltcG9ydCB7IFRleHRGaWVsZCwgVHlwb2dyYXBoeSB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL211aS9jb3JlXCJcblxudHlwZSBOb3RpZmljYXRpb25zU2VsZWN0VGltZVByb3BzID0ge1xuICBkaXNhYmxlZD86IGJvb2xlYW5cbiAgc2NoZWR1bGU6IE5vdGlmaWNhdGlvblNjaGVkdWxlIHwgbnVsbFxuICBzZXRTY2hlZHVsZTogKHNjaGVkdWxlOiBOb3RpZmljYXRpb25TY2hlZHVsZSkgPT4gdm9pZFxuICBsYWJlbDogc3RyaW5nXG59XG5cbmNvbnN0IE5vdGlmaWNhdGlvbnNTZWxlY3RUaW1lID0gKHtcbiAgZGlzYWJsZWQsXG4gIHNjaGVkdWxlLFxuICBzZXRTY2hlZHVsZSxcbiAgbGFiZWwsXG59OiBOb3RpZmljYXRpb25zU2VsZWN0VGltZVByb3BzKSA9PiB7XG4gIGNvbnN0IGV4cCA9IGF3c0Nyb24uZXhwcmVzc2lvblRvVGltZShzY2hlZHVsZT8uc2NoZWR1bGVyRXhwcmVzc2lvbilcbiAgY29uc3QgdmFsdWUgPSBgJHtleHAuaG91ci50b1N0cmluZygpLnBhZFN0YXJ0KDIsIFwiMFwiKX06JHtleHAubWludXRlLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgXCIwXCIpfWBcbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPFR5cG9ncmFwaHkgc3g9e3sgbWI6IDEgfX0+e2xhYmVsfTwvVHlwb2dyYXBoeT5cbiAgICAgIDxUZXh0RmllbGRcbiAgICAgICAgdmFsdWU9e3ZhbHVlfVxuICAgICAgICBkaXNhYmxlZD17ZGlzYWJsZWR9XG4gICAgICAgIHN4PXt7XG4gICAgICAgICAgXCImIC5NdWlJbnB1dEJhc2UtaW5wdXRcIjoge1xuICAgICAgICAgICAgY29sb3I6IFwicmdiYSgyNTUsIDI1NSwgMjU1LCAwLjcpXCIsXG4gICAgICAgICAgfSxcbiAgICAgICAgfX1cbiAgICAgICAgb25DaGFuZ2U9e2V2ID0+IHtcbiAgICAgICAgICBpZiAoIXNjaGVkdWxlKSByZXR1cm5cblxuICAgICAgICAgIGlmIChleHAucmVjdXJyZW5jZSA9PT0gXCJ3ZWVrbHlcIikge1xuICAgICAgICAgICAgc2V0U2NoZWR1bGUoe1xuICAgICAgICAgICAgICAuLi5zY2hlZHVsZSxcbiAgICAgICAgICAgICAgc2NoZWR1bGVyRXhwcmVzc2lvbjogYXdzQ3Jvbi50aW1lVG9FeHByZXNzaW9uKHtcbiAgICAgICAgICAgICAgICBob3VyOiBwYXJzZUludChldi50YXJnZXQudmFsdWUuc3BsaXQoXCI6XCIpWzBdKSxcbiAgICAgICAgICAgICAgICBtaW51dGU6IHBhcnNlSW50KGV2LnRhcmdldC52YWx1ZS5zcGxpdChcIjpcIilbMV0pLFxuICAgICAgICAgICAgICAgIHJlY3VycmVuY2U6IGV4cC5yZWN1cnJlbmNlLFxuICAgICAgICAgICAgICAgIGRheXNPZldlZWs6IGV4cC5kYXlzT2ZXZWVrLFxuICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHNldFNjaGVkdWxlKHtcbiAgICAgICAgICAgICAgLi4uc2NoZWR1bGUsXG4gICAgICAgICAgICAgIHNjaGVkdWxlckV4cHJlc3Npb246IGF3c0Nyb24udGltZVRvRXhwcmVzc2lvbih7XG4gICAgICAgICAgICAgICAgaG91cjogcGFyc2VJbnQoZXYudGFyZ2V0LnZhbHVlLnNwbGl0KFwiOlwiKVswXSksXG4gICAgICAgICAgICAgICAgbWludXRlOiBwYXJzZUludChldi50YXJnZXQudmFsdWUuc3BsaXQoXCI6XCIpWzFdKSxcbiAgICAgICAgICAgICAgICByZWN1cnJlbmNlOiBleHAucmVjdXJyZW5jZSxcbiAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICB9KVxuICAgICAgICAgIH1cbiAgICAgICAgfX1cbiAgICAgICAgYXJpYS1sYWJlbD1cIlRpbWVcIlxuICAgICAgICB0eXBlPVwidGltZVwiXG4gICAgICAgIGZ1bGxXaWR0aFxuICAgICAgICBzaXplPVwic21hbGxcIlxuICAgICAgLz5cbiAgICA8Lz5cbiAgKVxufVxuXG5leHBvcnQgeyBOb3RpZmljYXRpb25zU2VsZWN0VGltZSB9XG4iXSwibmFtZXMiOlsiTm90aWZpY2F0aW9uc1NlbGVjdFRpbWUiLCJkaXNhYmxlZCIsInNjaGVkdWxlIiwic2V0U2NoZWR1bGUiLCJsYWJlbCIsImV4cCIsImF3c0Nyb24iLCJleHByZXNzaW9uVG9UaW1lIiwic2NoZWR1bGVyRXhwcmVzc2lvbiIsInZhbHVlIiwiaG91ciIsInRvU3RyaW5nIiwicGFkU3RhcnQiLCJtaW51dGUiLCJUeXBvZ3JhcGh5Iiwic3giLCJtYiIsIlRleHRGaWVsZCIsImNvbG9yIiwib25DaGFuZ2UiLCJldiIsInJlY3VycmVuY2UiLCJ0aW1lVG9FeHByZXNzaW9uIiwicGFyc2VJbnQiLCJ0YXJnZXQiLCJzcGxpdCIsImRheXNPZldlZWsiLCJhcmlhLWxhYmVsIiwidHlwZSIsImZ1bGxXaWR0aCIsInNpemUiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkErRFNBOzs7ZUFBQUE7Ozs7dUJBOURlO3NCQUNjOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQVN0QyxNQUFNQSwwQkFBMEIsQ0FBQyxFQUMvQkMsUUFBUSxFQUNSQyxRQUFRLEVBQ1JDLFdBQVcsRUFDWEMsS0FBSyxFQUN3QjtJQUM3QixNQUFNQyxNQUFNQyxjQUFPLENBQUNDLGdCQUFnQixDQUFDTCxxQkFBQUEsK0JBQUFBLFNBQVVNLG1CQUFtQjtJQUNsRSxNQUFNQyxRQUFRLENBQUMsRUFBRUosSUFBSUssSUFBSSxDQUFDQyxRQUFRLEdBQUdDLFFBQVEsQ0FBQyxHQUFHLEtBQUssQ0FBQyxFQUFFUCxJQUFJUSxNQUFNLENBQUNGLFFBQVEsR0FBR0MsUUFBUSxDQUFDLEdBQUcsS0FBSyxDQUFDO0lBQ2pHLHFCQUNFOzswQkFDRSxxQkFBQ0UsZ0JBQVU7Z0JBQUNDLElBQUk7b0JBQUVDLElBQUk7Z0JBQUU7MEJBQUlaOzswQkFDNUIscUJBQUNhLGVBQVM7Z0JBQ1JSLE9BQU9BO2dCQUNQUixVQUFVQTtnQkFDVmMsSUFBSTtvQkFDRix5QkFBeUI7d0JBQ3ZCRyxPQUFPO29CQUNUO2dCQUNGO2dCQUNBQyxVQUFVQyxDQUFBQTtvQkFDUixJQUFJLENBQUNsQixVQUFVO29CQUVmLElBQUlHLElBQUlnQixVQUFVLEtBQUssVUFBVTt3QkFDL0JsQixZQUFZLHdDQUNQRDs0QkFDSE0scUJBQXFCRixjQUFPLENBQUNnQixnQkFBZ0IsQ0FBQztnQ0FDNUNaLE1BQU1hLFNBQVNILEdBQUdJLE1BQU0sQ0FBQ2YsS0FBSyxDQUFDZ0IsS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFFO2dDQUM1Q1osUUFBUVUsU0FBU0gsR0FBR0ksTUFBTSxDQUFDZixLQUFLLENBQUNnQixLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUU7Z0NBQzlDSixZQUFZaEIsSUFBSWdCLFVBQVU7Z0NBQzFCSyxZQUFZckIsSUFBSXFCLFVBQVU7NEJBQzVCOztvQkFFSixPQUFPO3dCQUNMdkIsWUFBWSx3Q0FDUEQ7NEJBQ0hNLHFCQUFxQkYsY0FBTyxDQUFDZ0IsZ0JBQWdCLENBQUM7Z0NBQzVDWixNQUFNYSxTQUFTSCxHQUFHSSxNQUFNLENBQUNmLEtBQUssQ0FBQ2dCLEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBRTtnQ0FDNUNaLFFBQVFVLFNBQVNILEdBQUdJLE1BQU0sQ0FBQ2YsS0FBSyxDQUFDZ0IsS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFFO2dDQUM5Q0osWUFBWWhCLElBQUlnQixVQUFVOzRCQUM1Qjs7b0JBRUo7Z0JBQ0Y7Z0JBQ0FNLGNBQVc7Z0JBQ1hDLE1BQUs7Z0JBQ0xDLFNBQVM7Z0JBQ1RDLE1BQUs7Ozs7QUFJYiJ9