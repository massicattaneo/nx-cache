{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/composite-components/src/ReOrderableList/ReOrderableList.tsx"],"sourcesContent":["import { ForwardRefExoticComponent, JSX, useCallback, useEffect, useState } from \"react\"\nimport { DndProvider } from \"react-dnd\"\nimport { HTML5Backend } from \"react-dnd-html5-backend\"\nimport { TouchBackend } from \"react-dnd-touch-backend\"\nimport { useDeviceInfo } from \"@rp/react/web/common/hooks\"\nimport { Box } from \"@rp/react/web/mui/core\"\nimport { DragOptions } from \"./DraggableItem\"\nimport { DraggableItems } from \"./DraggableItems\"\nimport { MovableRow } from \"./MovableRow\"\n\ntype Props<Item, CProps> = {\n  list: Array<Item>\n  ListItem: ForwardRefExoticComponent<\n    {\n      item: Item\n      dragOptions?: DragOptions\n      componentProps?: CProps\n    } & React.RefAttributes<unknown>\n  >\n  PreviewListItem: (props: { item: Item; dragOptions?: DragOptions }) => JSX.Element\n  onDrop: (orderedList: Array<Item>) => void\n  disableDrag?: boolean\n  componentProps?: CProps\n}\n\nfunction ReOrderableList<Item extends { id: string }, CProps>({\n  list,\n  ListItem,\n  PreviewListItem,\n  onDrop,\n  disableDrag,\n  componentProps,\n}: Props<Item, CProps>) {\n  const { isMobile, isHoverDevice } = useDeviceInfo()\n  const [cards, setCards] = useState(list)\n  const [ref, setRef] = useState<HTMLDivElement | null>(null)\n  const width = useCallback(() => ref?.getBoundingClientRect().width, [ref])\n  const left = useCallback(() => ref?.getBoundingClientRect().left, [ref])\n\n  useEffect(() => setCards(list), [list])\n\n  return (\n    <DndProvider backend={isMobile || !isHoverDevice ? TouchBackend : HTML5Backend}>\n      <Box>\n        <Box\n          ref={setRef}\n          sx={{\n            position: \"relative\",\n            width: \"100%\",\n          }}\n        >\n          <DraggableItems\n            list={cards}\n            ListItem={ListItem}\n            onDrop={onDrop}\n            disableDrag={disableDrag}\n            componentProps={componentProps}\n          />\n        </Box>\n        <MovableRow width={width} left={left} Preview={PreviewListItem} />\n      </Box>\n    </DndProvider>\n  )\n}\n\nexport { ReOrderableList }\n"],"names":["ReOrderableList","list","ListItem","PreviewListItem","onDrop","disableDrag","componentProps","isMobile","isHoverDevice","useDeviceInfo","cards","setCards","useState","ref","setRef","width","useCallback","getBoundingClientRect","left","useEffect","DndProvider","backend","TouchBackend","HTML5Backend","Box","sx","position","DraggableItems","MovableRow","Preview"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAiESA;;;eAAAA;;;;uBAjEwE;0BACrD;sCACC;sCACA;uBACC;sBACV;gCAEW;4BACJ;AAiB3B,SAASA,gBAAqD,EAC5DC,IAAI,EACJC,QAAQ,EACRC,eAAe,EACfC,MAAM,EACNC,WAAW,EACXC,cAAc,EACM;IACpB,MAAM,EAAEC,QAAQ,EAAEC,aAAa,EAAE,GAAGC,IAAAA,oBAAa;IACjD,MAAM,CAACC,OAAOC,SAAS,GAAGC,IAAAA,eAAQ,EAACX;IACnC,MAAM,CAACY,KAAKC,OAAO,GAAGF,IAAAA,eAAQ,EAAwB;IACtD,MAAMG,QAAQC,IAAAA,kBAAW,EAAC,IAAMH,gBAAAA,0BAAAA,IAAKI,qBAAqB,GAAGF,KAAK,EAAE;QAACF;KAAI;IACzE,MAAMK,OAAOF,IAAAA,kBAAW,EAAC,IAAMH,gBAAAA,0BAAAA,IAAKI,qBAAqB,GAAGC,IAAI,EAAE;QAACL;KAAI;IAEvEM,IAAAA,gBAAS,EAAC,IAAMR,SAASV,OAAO;QAACA;KAAK;IAEtC,qBACE,qBAACmB,qBAAW;QAACC,SAASd,YAAY,CAACC,gBAAgBc,kCAAY,GAAGC,kCAAY;kBAC5E,cAAA,sBAACC,SAAG;;8BACF,qBAACA,SAAG;oBACFX,KAAKC;oBACLW,IAAI;wBACFC,UAAU;wBACVX,OAAO;oBACT;8BAEA,cAAA,qBAACY,8BAAc;wBACb1B,MAAMS;wBACNR,UAAUA;wBACVE,QAAQA;wBACRC,aAAaA;wBACbC,gBAAgBA;;;8BAGpB,qBAACsB,sBAAU;oBAACb,OAAOA;oBAAOG,MAAMA;oBAAMW,SAAS1B;;;;;AAIvD"}