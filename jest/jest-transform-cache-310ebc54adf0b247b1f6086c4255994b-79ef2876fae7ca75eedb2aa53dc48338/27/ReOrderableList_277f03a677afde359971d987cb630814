03dfdc604d700921a22a125546947d34
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "ReOrderableList", {
    enumerable: true,
    get: function() {
        return ReOrderableList;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _reactdnd = require("react-dnd");
const _reactdndhtml5backend = require("react-dnd-html5-backend");
const _reactdndtouchbackend = require("react-dnd-touch-backend");
const _hooks = require("@rp/react/web/common/hooks");
const _core = require("@rp/react/web/mui/core");
const _DraggableItems = require("./DraggableItems");
const _MovableRow = require("./MovableRow");
function ReOrderableList({ list, ListItem, PreviewListItem, onDrop, disableDrag, componentProps }) {
    const { isMobile, isHoverDevice } = (0, _hooks.useDeviceInfo)();
    const [cards, setCards] = (0, _react.useState)(list);
    const [ref, setRef] = (0, _react.useState)(null);
    const width = (0, _react.useCallback)(()=>ref === null || ref === void 0 ? void 0 : ref.getBoundingClientRect().width, [
        ref
    ]);
    const left = (0, _react.useCallback)(()=>ref === null || ref === void 0 ? void 0 : ref.getBoundingClientRect().left, [
        ref
    ]);
    (0, _react.useEffect)(()=>setCards(list), [
        list
    ]);
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactdnd.DndProvider, {
        backend: isMobile || !isHoverDevice ? _reactdndtouchbackend.TouchBackend : _reactdndhtml5backend.HTML5Backend,
        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                    ref: setRef,
                    sx: {
                        position: "relative",
                        width: "100%"
                    },
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_DraggableItems.DraggableItems, {
                        list: cards,
                        ListItem: ListItem,
                        onDrop: onDrop,
                        disableDrag: disableDrag,
                        componentProps: componentProps
                    })
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_MovableRow.MovableRow, {
                    width: width,
                    left: left,
                    Preview: PreviewListItem
                })
            ]
        })
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9jb21wb3NpdGUtY29tcG9uZW50cy9zcmMvUmVPcmRlcmFibGVMaXN0L1JlT3JkZXJhYmxlTGlzdC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRm9yd2FyZFJlZkV4b3RpY0NvbXBvbmVudCwgSlNYLCB1c2VDYWxsYmFjaywgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgeyBEbmRQcm92aWRlciB9IGZyb20gXCJyZWFjdC1kbmRcIlxuaW1wb3J0IHsgSFRNTDVCYWNrZW5kIH0gZnJvbSBcInJlYWN0LWRuZC1odG1sNS1iYWNrZW5kXCJcbmltcG9ydCB7IFRvdWNoQmFja2VuZCB9IGZyb20gXCJyZWFjdC1kbmQtdG91Y2gtYmFja2VuZFwiXG5pbXBvcnQgeyB1c2VEZXZpY2VJbmZvIH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvY29tbW9uL2hvb2tzXCJcbmltcG9ydCB7IEJveCB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL211aS9jb3JlXCJcbmltcG9ydCB7IERyYWdPcHRpb25zIH0gZnJvbSBcIi4vRHJhZ2dhYmxlSXRlbVwiXG5pbXBvcnQgeyBEcmFnZ2FibGVJdGVtcyB9IGZyb20gXCIuL0RyYWdnYWJsZUl0ZW1zXCJcbmltcG9ydCB7IE1vdmFibGVSb3cgfSBmcm9tIFwiLi9Nb3ZhYmxlUm93XCJcblxudHlwZSBQcm9wczxJdGVtLCBDUHJvcHM+ID0ge1xuICBsaXN0OiBBcnJheTxJdGVtPlxuICBMaXN0SXRlbTogRm9yd2FyZFJlZkV4b3RpY0NvbXBvbmVudDxcbiAgICB7XG4gICAgICBpdGVtOiBJdGVtXG4gICAgICBkcmFnT3B0aW9ucz86IERyYWdPcHRpb25zXG4gICAgICBjb21wb25lbnRQcm9wcz86IENQcm9wc1xuICAgIH0gJiBSZWFjdC5SZWZBdHRyaWJ1dGVzPHVua25vd24+XG4gID5cbiAgUHJldmlld0xpc3RJdGVtOiAocHJvcHM6IHsgaXRlbTogSXRlbTsgZHJhZ09wdGlvbnM/OiBEcmFnT3B0aW9ucyB9KSA9PiBKU1guRWxlbWVudFxuICBvbkRyb3A6IChvcmRlcmVkTGlzdDogQXJyYXk8SXRlbT4pID0+IHZvaWRcbiAgZGlzYWJsZURyYWc/OiBib29sZWFuXG4gIGNvbXBvbmVudFByb3BzPzogQ1Byb3BzXG59XG5cbmZ1bmN0aW9uIFJlT3JkZXJhYmxlTGlzdDxJdGVtIGV4dGVuZHMgeyBpZDogc3RyaW5nIH0sIENQcm9wcz4oe1xuICBsaXN0LFxuICBMaXN0SXRlbSxcbiAgUHJldmlld0xpc3RJdGVtLFxuICBvbkRyb3AsXG4gIGRpc2FibGVEcmFnLFxuICBjb21wb25lbnRQcm9wcyxcbn06IFByb3BzPEl0ZW0sIENQcm9wcz4pIHtcbiAgY29uc3QgeyBpc01vYmlsZSwgaXNIb3ZlckRldmljZSB9ID0gdXNlRGV2aWNlSW5mbygpXG4gIGNvbnN0IFtjYXJkcywgc2V0Q2FyZHNdID0gdXNlU3RhdGUobGlzdClcbiAgY29uc3QgW3JlZiwgc2V0UmVmXSA9IHVzZVN0YXRlPEhUTUxEaXZFbGVtZW50IHwgbnVsbD4obnVsbClcbiAgY29uc3Qgd2lkdGggPSB1c2VDYWxsYmFjaygoKSA9PiByZWY/LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLndpZHRoLCBbcmVmXSlcbiAgY29uc3QgbGVmdCA9IHVzZUNhbGxiYWNrKCgpID0+IHJlZj8uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkubGVmdCwgW3JlZl0pXG5cbiAgdXNlRWZmZWN0KCgpID0+IHNldENhcmRzKGxpc3QpLCBbbGlzdF0pXG5cbiAgcmV0dXJuIChcbiAgICA8RG5kUHJvdmlkZXIgYmFja2VuZD17aXNNb2JpbGUgfHwgIWlzSG92ZXJEZXZpY2UgPyBUb3VjaEJhY2tlbmQgOiBIVE1MNUJhY2tlbmR9PlxuICAgICAgPEJveD5cbiAgICAgICAgPEJveFxuICAgICAgICAgIHJlZj17c2V0UmVmfVxuICAgICAgICAgIHN4PXt7XG4gICAgICAgICAgICBwb3NpdGlvbjogXCJyZWxhdGl2ZVwiLFxuICAgICAgICAgICAgd2lkdGg6IFwiMTAwJVwiLFxuICAgICAgICAgIH19XG4gICAgICAgID5cbiAgICAgICAgICA8RHJhZ2dhYmxlSXRlbXNcbiAgICAgICAgICAgIGxpc3Q9e2NhcmRzfVxuICAgICAgICAgICAgTGlzdEl0ZW09e0xpc3RJdGVtfVxuICAgICAgICAgICAgb25Ecm9wPXtvbkRyb3B9XG4gICAgICAgICAgICBkaXNhYmxlRHJhZz17ZGlzYWJsZURyYWd9XG4gICAgICAgICAgICBjb21wb25lbnRQcm9wcz17Y29tcG9uZW50UHJvcHN9XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9Cb3g+XG4gICAgICAgIDxNb3ZhYmxlUm93IHdpZHRoPXt3aWR0aH0gbGVmdD17bGVmdH0gUHJldmlldz17UHJldmlld0xpc3RJdGVtfSAvPlxuICAgICAgPC9Cb3g+XG4gICAgPC9EbmRQcm92aWRlcj5cbiAgKVxufVxuXG5leHBvcnQgeyBSZU9yZGVyYWJsZUxpc3QgfVxuIl0sIm5hbWVzIjpbIlJlT3JkZXJhYmxlTGlzdCIsImxpc3QiLCJMaXN0SXRlbSIsIlByZXZpZXdMaXN0SXRlbSIsIm9uRHJvcCIsImRpc2FibGVEcmFnIiwiY29tcG9uZW50UHJvcHMiLCJpc01vYmlsZSIsImlzSG92ZXJEZXZpY2UiLCJ1c2VEZXZpY2VJbmZvIiwiY2FyZHMiLCJzZXRDYXJkcyIsInVzZVN0YXRlIiwicmVmIiwic2V0UmVmIiwid2lkdGgiLCJ1c2VDYWxsYmFjayIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsImxlZnQiLCJ1c2VFZmZlY3QiLCJEbmRQcm92aWRlciIsImJhY2tlbmQiLCJUb3VjaEJhY2tlbmQiLCJIVE1MNUJhY2tlbmQiLCJCb3giLCJzeCIsInBvc2l0aW9uIiwiRHJhZ2dhYmxlSXRlbXMiLCJNb3ZhYmxlUm93IiwiUHJldmlldyJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQWlFU0E7OztlQUFBQTs7Ozt1QkFqRXdFOzBCQUNyRDtzQ0FDQztzQ0FDQTt1QkFDQztzQkFDVjtnQ0FFVzs0QkFDSjtBQWlCM0IsU0FBU0EsZ0JBQXFELEVBQzVEQyxJQUFJLEVBQ0pDLFFBQVEsRUFDUkMsZUFBZSxFQUNmQyxNQUFNLEVBQ05DLFdBQVcsRUFDWEMsY0FBYyxFQUNNO0lBQ3BCLE1BQU0sRUFBRUMsUUFBUSxFQUFFQyxhQUFhLEVBQUUsR0FBR0MsSUFBQUEsb0JBQWE7SUFDakQsTUFBTSxDQUFDQyxPQUFPQyxTQUFTLEdBQUdDLElBQUFBLGVBQVEsRUFBQ1g7SUFDbkMsTUFBTSxDQUFDWSxLQUFLQyxPQUFPLEdBQUdGLElBQUFBLGVBQVEsRUFBd0I7SUFDdEQsTUFBTUcsUUFBUUMsSUFBQUEsa0JBQVcsRUFBQyxJQUFNSCxnQkFBQUEsMEJBQUFBLElBQUtJLHFCQUFxQixHQUFHRixLQUFLLEVBQUU7UUFBQ0Y7S0FBSTtJQUN6RSxNQUFNSyxPQUFPRixJQUFBQSxrQkFBVyxFQUFDLElBQU1ILGdCQUFBQSwwQkFBQUEsSUFBS0kscUJBQXFCLEdBQUdDLElBQUksRUFBRTtRQUFDTDtLQUFJO0lBRXZFTSxJQUFBQSxnQkFBUyxFQUFDLElBQU1SLFNBQVNWLE9BQU87UUFBQ0E7S0FBSztJQUV0QyxxQkFDRSxxQkFBQ21CLHFCQUFXO1FBQUNDLFNBQVNkLFlBQVksQ0FBQ0MsZ0JBQWdCYyxrQ0FBWSxHQUFHQyxrQ0FBWTtrQkFDNUUsY0FBQSxzQkFBQ0MsU0FBRzs7OEJBQ0YscUJBQUNBLFNBQUc7b0JBQ0ZYLEtBQUtDO29CQUNMVyxJQUFJO3dCQUNGQyxVQUFVO3dCQUNWWCxPQUFPO29CQUNUOzhCQUVBLGNBQUEscUJBQUNZLDhCQUFjO3dCQUNiMUIsTUFBTVM7d0JBQ05SLFVBQVVBO3dCQUNWRSxRQUFRQTt3QkFDUkMsYUFBYUE7d0JBQ2JDLGdCQUFnQkE7Ozs4QkFHcEIscUJBQUNzQixzQkFBVTtvQkFBQ2IsT0FBT0E7b0JBQU9HLE1BQU1BO29CQUFNVyxTQUFTMUI7Ozs7O0FBSXZEIn0=