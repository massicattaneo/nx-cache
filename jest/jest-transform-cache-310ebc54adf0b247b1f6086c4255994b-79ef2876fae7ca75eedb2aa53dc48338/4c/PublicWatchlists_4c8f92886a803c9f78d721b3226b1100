3d8e99c2028d4d70f60cb34ece320fb4
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "PublicWatchlists", {
    enumerable: true,
    get: function() {
        return PublicWatchlists;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _watchlist = require("@rp/react/tanstack-api/watchlist");
const _basecomponents = require("@rp/react/web/common/base-components");
const _compositecomponents = require("@rp/react/web/common/composite-components");
const _hooks = require("@rp/react/web/common/hooks");
const _core = require("@rp/react/web/mui/core");
const _HubNoResults = require("../../HubNoResults");
const _NewWatchlistButtonContainer = require("../NewWatchlistButtonContainer");
const _PublicWatchlistsItem = require("./PublicWatchlistsItem");
const COLUMNS_WIDTH = [
    "calc(100% - 758px)",
    "250px",
    "150px",
    "250px"
];
const SORT_OPTIONS = [
    {
        value: "name",
        label: "Name"
    },
    {
        value: "owner",
        label: "Owner"
    },
    {
        value: "lastUpdated",
        label: "Last modified"
    }
];
const PublicWatchlists = ()=>{
    const { isLoading: isLoadingWatchlists, data: results = [] } = (0, _watchlist.useAllWatchlists)("company");
    const { sorterFn, sortBy, direction, onChange } = (0, _hooks.usePageWithListSorter)("publicWatchlists");
    const filteredResults = (0, _react.useMemo)(()=>results.sort(sorterFn), [
        results,
        sorterFn
    ]);
    if (isLoadingWatchlists) return /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.LoadingSpinner, {});
    if (!isLoadingWatchlists && filteredResults.length === 0) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_NewWatchlistButtonContainer.NewWatchlistButtonContainer, {
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_HubNoResults.HubNoResults, {})
        });
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_NewWatchlistButtonContainer.NewWatchlistButtonContainer, {
        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
            sx: {
                width: 1,
                mt: 1
            },
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.HubTableRow, {
                    sx: {
                        backgroundColor: "transparent",
                        height: 35
                    },
                    columnsWidth: COLUMNS_WIDTH,
                    columns: [
                        {
                            node: /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.HubSortableHeadCell, {
                                label: "NAME",
                                value: "name",
                                onChange: onChange,
                                sortBy: sortBy,
                                direction: direction,
                                sortOptions: SORT_OPTIONS
                            })
                        },
                        {
                            node: /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.HubSortableHeadCell, {
                                label: "OWNER",
                                value: "ownerUserId",
                                onChange: onChange,
                                sortBy: sortBy,
                                direction: direction,
                                sortOptions: SORT_OPTIONS
                            })
                        },
                        {
                            node: /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.HubSortableHeadCell, {
                                label: "LAST MODIFIED",
                                value: "lastUpdated",
                                onChange: onChange,
                                sortBy: sortBy,
                                direction: direction,
                                sortOptions: SORT_OPTIONS,
                                defaultDirection: "desc"
                            })
                        },
                        {
                            node: /*#__PURE__*/ (0, _jsxruntime.jsx)(_jsxruntime.Fragment, {
                                children: "Â "
                            })
                        }
                    ]
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.InfiniteList, {
                    rootMargin: "0px 0px 300px 0px",
                    initialElements: 20,
                    items: filteredResults,
                    renderItem: (item)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_PublicWatchlistsItem.PublicWatchlistsItem, {
                            item: item,
                            columnsWidth: COLUMNS_WIDTH
                        })
                })
            ]
        })
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2FwcHMvY2xpZW50LXdlYi9zcmMvYXBwL2NvbXBvbmVudHMvSHViL1dhdGNobGlzdHMvUHVibGljV2F0Y2hsaXN0cy9QdWJsaWNXYXRjaGxpc3RzLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VNZW1vIH0gZnJvbSBcInJlYWN0XCJcbmltcG9ydCB7IHVzZUFsbFdhdGNobGlzdHMgfSBmcm9tIFwiQHJwL3JlYWN0L3RhbnN0YWNrLWFwaS93YXRjaGxpc3RcIlxuaW1wb3J0IHsgTG9hZGluZ1NwaW5uZXIgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9jb21tb24vYmFzZS1jb21wb25lbnRzXCJcbmltcG9ydCB7IEh1YlNvcnRhYmxlSGVhZENlbGwsIEh1YlRhYmxlUm93IH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvY29tbW9uL2NvbXBvc2l0ZS1jb21wb25lbnRzXCJcbmltcG9ydCB7IEluZmluaXRlTGlzdCB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL2NvbW1vbi9jb21wb3NpdGUtY29tcG9uZW50c1wiXG5pbXBvcnQgeyB1c2VQYWdlV2l0aExpc3RTb3J0ZXIgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9jb21tb24vaG9va3NcIlxuaW1wb3J0IHsgQm94IH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvbXVpL2NvcmVcIlxuaW1wb3J0IHsgSHViTm9SZXN1bHRzIH0gZnJvbSBcIi4uLy4uL0h1Yk5vUmVzdWx0c1wiXG5pbXBvcnQgeyBOZXdXYXRjaGxpc3RCdXR0b25Db250YWluZXIgfSBmcm9tIFwiLi4vTmV3V2F0Y2hsaXN0QnV0dG9uQ29udGFpbmVyXCJcbmltcG9ydCB7IFB1YmxpY1dhdGNobGlzdHNJdGVtIH0gZnJvbSBcIi4vUHVibGljV2F0Y2hsaXN0c0l0ZW1cIlxuXG5jb25zdCBDT0xVTU5TX1dJRFRIID0gW1wiY2FsYygxMDAlIC0gNzU4cHgpXCIsIFwiMjUwcHhcIiwgXCIxNTBweFwiLCBcIjI1MHB4XCJdXG5jb25zdCBTT1JUX09QVElPTlMgPSBbXG4gIHsgdmFsdWU6IFwibmFtZVwiLCBsYWJlbDogXCJOYW1lXCIgfSxcbiAgeyB2YWx1ZTogXCJvd25lclwiLCBsYWJlbDogXCJPd25lclwiIH0sXG4gIHsgdmFsdWU6IFwibGFzdFVwZGF0ZWRcIiwgbGFiZWw6IFwiTGFzdCBtb2RpZmllZFwiIH0sXG5dXG5cbmNvbnN0IFB1YmxpY1dhdGNobGlzdHMgPSAoKSA9PiB7XG4gIGNvbnN0IHsgaXNMb2FkaW5nOiBpc0xvYWRpbmdXYXRjaGxpc3RzLCBkYXRhOiByZXN1bHRzID0gW10gfSA9IHVzZUFsbFdhdGNobGlzdHMoXCJjb21wYW55XCIpXG4gIGNvbnN0IHsgc29ydGVyRm4sIHNvcnRCeSwgZGlyZWN0aW9uLCBvbkNoYW5nZSB9ID0gdXNlUGFnZVdpdGhMaXN0U29ydGVyKFwicHVibGljV2F0Y2hsaXN0c1wiKVxuICBjb25zdCBmaWx0ZXJlZFJlc3VsdHMgPSB1c2VNZW1vKCgpID0+IHJlc3VsdHMuc29ydChzb3J0ZXJGbiksIFtyZXN1bHRzLCBzb3J0ZXJGbl0pXG5cbiAgaWYgKGlzTG9hZGluZ1dhdGNobGlzdHMpIHJldHVybiA8TG9hZGluZ1NwaW5uZXIgLz5cbiAgaWYgKCFpc0xvYWRpbmdXYXRjaGxpc3RzICYmIGZpbHRlcmVkUmVzdWx0cy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gKFxuICAgICAgPE5ld1dhdGNobGlzdEJ1dHRvbkNvbnRhaW5lcj5cbiAgICAgICAgPEh1Yk5vUmVzdWx0cyAvPlxuICAgICAgPC9OZXdXYXRjaGxpc3RCdXR0b25Db250YWluZXI+XG4gICAgKVxuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8TmV3V2F0Y2hsaXN0QnV0dG9uQ29udGFpbmVyPlxuICAgICAgPEJveCBzeD17eyB3aWR0aDogMSwgbXQ6IDEgfX0+XG4gICAgICAgIDxIdWJUYWJsZVJvd1xuICAgICAgICAgIHN4PXt7IGJhY2tncm91bmRDb2xvcjogXCJ0cmFuc3BhcmVudFwiLCBoZWlnaHQ6IDM1IH19XG4gICAgICAgICAgY29sdW1uc1dpZHRoPXtDT0xVTU5TX1dJRFRIfVxuICAgICAgICAgIGNvbHVtbnM9e1tcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgbm9kZTogKFxuICAgICAgICAgICAgICAgIDxIdWJTb3J0YWJsZUhlYWRDZWxsXG4gICAgICAgICAgICAgICAgICBsYWJlbD1cIk5BTUVcIlxuICAgICAgICAgICAgICAgICAgdmFsdWU9XCJuYW1lXCJcbiAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtvbkNoYW5nZX1cbiAgICAgICAgICAgICAgICAgIHNvcnRCeT17c29ydEJ5fVxuICAgICAgICAgICAgICAgICAgZGlyZWN0aW9uPXtkaXJlY3Rpb259XG4gICAgICAgICAgICAgICAgICBzb3J0T3B0aW9ucz17U09SVF9PUFRJT05TfVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICksXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBub2RlOiAoXG4gICAgICAgICAgICAgICAgPEh1YlNvcnRhYmxlSGVhZENlbGxcbiAgICAgICAgICAgICAgICAgIGxhYmVsPVwiT1dORVJcIlxuICAgICAgICAgICAgICAgICAgdmFsdWU9XCJvd25lclVzZXJJZFwiXG4gICAgICAgICAgICAgICAgICBvbkNoYW5nZT17b25DaGFuZ2V9XG4gICAgICAgICAgICAgICAgICBzb3J0Qnk9e3NvcnRCeX1cbiAgICAgICAgICAgICAgICAgIGRpcmVjdGlvbj17ZGlyZWN0aW9ufVxuICAgICAgICAgICAgICAgICAgc29ydE9wdGlvbnM9e1NPUlRfT1BUSU9OU31cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgbm9kZTogKFxuICAgICAgICAgICAgICAgIDxIdWJTb3J0YWJsZUhlYWRDZWxsXG4gICAgICAgICAgICAgICAgICBsYWJlbD1cIkxBU1QgTU9ESUZJRURcIlxuICAgICAgICAgICAgICAgICAgdmFsdWU9XCJsYXN0VXBkYXRlZFwiXG4gICAgICAgICAgICAgICAgICBvbkNoYW5nZT17b25DaGFuZ2V9XG4gICAgICAgICAgICAgICAgICBzb3J0Qnk9e3NvcnRCeX1cbiAgICAgICAgICAgICAgICAgIGRpcmVjdGlvbj17ZGlyZWN0aW9ufVxuICAgICAgICAgICAgICAgICAgc29ydE9wdGlvbnM9e1NPUlRfT1BUSU9OU31cbiAgICAgICAgICAgICAgICAgIGRlZmF1bHREaXJlY3Rpb249XCJkZXNjXCJcbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHsgbm9kZTogPD4mbmJzcDs8Lz4gfSxcbiAgICAgICAgICBdfVxuICAgICAgICAvPlxuICAgICAgICA8SW5maW5pdGVMaXN0XG4gICAgICAgICAgcm9vdE1hcmdpbj17XCIwcHggMHB4IDMwMHB4IDBweFwifVxuICAgICAgICAgIGluaXRpYWxFbGVtZW50cz17MjB9XG4gICAgICAgICAgaXRlbXM9e2ZpbHRlcmVkUmVzdWx0c31cbiAgICAgICAgICByZW5kZXJJdGVtPXtpdGVtID0+IDxQdWJsaWNXYXRjaGxpc3RzSXRlbSBpdGVtPXtpdGVtfSBjb2x1bW5zV2lkdGg9e0NPTFVNTlNfV0lEVEh9IC8+fVxuICAgICAgICAvPlxuICAgICAgPC9Cb3g+XG4gICAgPC9OZXdXYXRjaGxpc3RCdXR0b25Db250YWluZXI+XG4gIClcbn1cblxuZXhwb3J0IHsgUHVibGljV2F0Y2hsaXN0cyB9XG4iXSwibmFtZXMiOlsiUHVibGljV2F0Y2hsaXN0cyIsIkNPTFVNTlNfV0lEVEgiLCJTT1JUX09QVElPTlMiLCJ2YWx1ZSIsImxhYmVsIiwiaXNMb2FkaW5nIiwiaXNMb2FkaW5nV2F0Y2hsaXN0cyIsImRhdGEiLCJyZXN1bHRzIiwidXNlQWxsV2F0Y2hsaXN0cyIsInNvcnRlckZuIiwic29ydEJ5IiwiZGlyZWN0aW9uIiwib25DaGFuZ2UiLCJ1c2VQYWdlV2l0aExpc3RTb3J0ZXIiLCJmaWx0ZXJlZFJlc3VsdHMiLCJ1c2VNZW1vIiwic29ydCIsIkxvYWRpbmdTcGlubmVyIiwibGVuZ3RoIiwiTmV3V2F0Y2hsaXN0QnV0dG9uQ29udGFpbmVyIiwiSHViTm9SZXN1bHRzIiwiQm94Iiwic3giLCJ3aWR0aCIsIm10IiwiSHViVGFibGVSb3ciLCJiYWNrZ3JvdW5kQ29sb3IiLCJoZWlnaHQiLCJjb2x1bW5zV2lkdGgiLCJjb2x1bW5zIiwibm9kZSIsIkh1YlNvcnRhYmxlSGVhZENlbGwiLCJzb3J0T3B0aW9ucyIsImRlZmF1bHREaXJlY3Rpb24iLCJJbmZpbml0ZUxpc3QiLCJyb290TWFyZ2luIiwiaW5pdGlhbEVsZW1lbnRzIiwiaXRlbXMiLCJyZW5kZXJJdGVtIiwiaXRlbSIsIlB1YmxpY1dhdGNobGlzdHNJdGVtIl0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkEwRlNBOzs7ZUFBQUE7Ozs7dUJBMUZlOzJCQUNTO2dDQUNGO3FDQUNrQjt1QkFFWDtzQkFDbEI7OEJBQ1M7NkNBQ2U7c0NBQ1A7QUFFckMsTUFBTUMsZ0JBQWdCO0lBQUM7SUFBc0I7SUFBUztJQUFTO0NBQVE7QUFDdkUsTUFBTUMsZUFBZTtJQUNuQjtRQUFFQyxPQUFPO1FBQVFDLE9BQU87SUFBTztJQUMvQjtRQUFFRCxPQUFPO1FBQVNDLE9BQU87SUFBUTtJQUNqQztRQUFFRCxPQUFPO1FBQWVDLE9BQU87SUFBZ0I7Q0FDaEQ7QUFFRCxNQUFNSixtQkFBbUI7SUFDdkIsTUFBTSxFQUFFSyxXQUFXQyxtQkFBbUIsRUFBRUMsTUFBTUMsVUFBVSxFQUFFLEVBQUUsR0FBR0MsSUFBQUEsMkJBQWdCLEVBQUM7SUFDaEYsTUFBTSxFQUFFQyxRQUFRLEVBQUVDLE1BQU0sRUFBRUMsU0FBUyxFQUFFQyxRQUFRLEVBQUUsR0FBR0MsSUFBQUEsNEJBQXFCLEVBQUM7SUFDeEUsTUFBTUMsa0JBQWtCQyxJQUFBQSxjQUFPLEVBQUMsSUFBTVIsUUFBUVMsSUFBSSxDQUFDUCxXQUFXO1FBQUNGO1FBQVNFO0tBQVM7SUFFakYsSUFBSUoscUJBQXFCLHFCQUFPLHFCQUFDWSw4QkFBYztJQUMvQyxJQUFJLENBQUNaLHVCQUF1QlMsZ0JBQWdCSSxNQUFNLEtBQUssR0FBRztRQUN4RCxxQkFDRSxxQkFBQ0Msd0RBQTJCO3NCQUMxQixjQUFBLHFCQUFDQywwQkFBWTs7SUFHbkI7SUFFQSxxQkFDRSxxQkFBQ0Qsd0RBQTJCO2tCQUMxQixjQUFBLHNCQUFDRSxTQUFHO1lBQUNDLElBQUk7Z0JBQUVDLE9BQU87Z0JBQUdDLElBQUk7WUFBRTs7OEJBQ3pCLHFCQUFDQyxnQ0FBVztvQkFDVkgsSUFBSTt3QkFBRUksaUJBQWlCO3dCQUFlQyxRQUFRO29CQUFHO29CQUNqREMsY0FBYzVCO29CQUNkNkIsU0FBUzt3QkFDUDs0QkFDRUMsb0JBQ0UscUJBQUNDLHdDQUFtQjtnQ0FDbEI1QixPQUFNO2dDQUNORCxPQUFNO2dDQUNOVSxVQUFVQTtnQ0FDVkYsUUFBUUE7Z0NBQ1JDLFdBQVdBO2dDQUNYcUIsYUFBYS9COzt3QkFHbkI7d0JBQ0E7NEJBQ0U2QixvQkFDRSxxQkFBQ0Msd0NBQW1CO2dDQUNsQjVCLE9BQU07Z0NBQ05ELE9BQU07Z0NBQ05VLFVBQVVBO2dDQUNWRixRQUFRQTtnQ0FDUkMsV0FBV0E7Z0NBQ1hxQixhQUFhL0I7O3dCQUduQjt3QkFDQTs0QkFDRTZCLG9CQUNFLHFCQUFDQyx3Q0FBbUI7Z0NBQ2xCNUIsT0FBTTtnQ0FDTkQsT0FBTTtnQ0FDTlUsVUFBVUE7Z0NBQ1ZGLFFBQVFBO2dDQUNSQyxXQUFXQTtnQ0FDWHFCLGFBQWEvQjtnQ0FDYmdDLGtCQUFpQjs7d0JBR3ZCO3dCQUNBOzRCQUFFSCxvQkFBTTswQ0FBRTs7d0JBQVU7cUJBQ3JCOzs4QkFFSCxxQkFBQ0ksaUNBQVk7b0JBQ1hDLFlBQVk7b0JBQ1pDLGlCQUFpQjtvQkFDakJDLE9BQU92QjtvQkFDUHdCLFlBQVlDLENBQUFBLHFCQUFRLHFCQUFDQywwQ0FBb0I7NEJBQUNELE1BQU1BOzRCQUFNWCxjQUFjNUI7Ozs7OztBQUs5RSJ9