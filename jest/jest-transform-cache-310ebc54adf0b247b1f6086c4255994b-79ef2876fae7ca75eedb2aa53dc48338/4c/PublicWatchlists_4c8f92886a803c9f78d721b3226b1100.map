{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/apps/client-web/src/app/components/Hub/Watchlists/PublicWatchlists/PublicWatchlists.tsx"],"sourcesContent":["import { useMemo } from \"react\"\nimport { useAllWatchlists } from \"@rp/react/tanstack-api/watchlist\"\nimport { LoadingSpinner } from \"@rp/react/web/common/base-components\"\nimport { HubSortableHeadCell, HubTableRow } from \"@rp/react/web/common/composite-components\"\nimport { InfiniteList } from \"@rp/react/web/common/composite-components\"\nimport { usePageWithListSorter } from \"@rp/react/web/common/hooks\"\nimport { Box } from \"@rp/react/web/mui/core\"\nimport { HubNoResults } from \"../../HubNoResults\"\nimport { NewWatchlistButtonContainer } from \"../NewWatchlistButtonContainer\"\nimport { PublicWatchlistsItem } from \"./PublicWatchlistsItem\"\n\nconst COLUMNS_WIDTH = [\"calc(100% - 758px)\", \"250px\", \"150px\", \"250px\"]\nconst SORT_OPTIONS = [\n  { value: \"name\", label: \"Name\" },\n  { value: \"owner\", label: \"Owner\" },\n  { value: \"lastUpdated\", label: \"Last modified\" },\n]\n\nconst PublicWatchlists = () => {\n  const { isLoading: isLoadingWatchlists, data: results = [] } = useAllWatchlists(\"company\")\n  const { sorterFn, sortBy, direction, onChange } = usePageWithListSorter(\"publicWatchlists\")\n  const filteredResults = useMemo(() => results.sort(sorterFn), [results, sorterFn])\n\n  if (isLoadingWatchlists) return <LoadingSpinner />\n  if (!isLoadingWatchlists && filteredResults.length === 0) {\n    return (\n      <NewWatchlistButtonContainer>\n        <HubNoResults />\n      </NewWatchlistButtonContainer>\n    )\n  }\n\n  return (\n    <NewWatchlistButtonContainer>\n      <Box sx={{ width: 1, mt: 1 }}>\n        <HubTableRow\n          sx={{ backgroundColor: \"transparent\", height: 35 }}\n          columnsWidth={COLUMNS_WIDTH}\n          columns={[\n            {\n              node: (\n                <HubSortableHeadCell\n                  label=\"NAME\"\n                  value=\"name\"\n                  onChange={onChange}\n                  sortBy={sortBy}\n                  direction={direction}\n                  sortOptions={SORT_OPTIONS}\n                />\n              ),\n            },\n            {\n              node: (\n                <HubSortableHeadCell\n                  label=\"OWNER\"\n                  value=\"ownerUserId\"\n                  onChange={onChange}\n                  sortBy={sortBy}\n                  direction={direction}\n                  sortOptions={SORT_OPTIONS}\n                />\n              ),\n            },\n            {\n              node: (\n                <HubSortableHeadCell\n                  label=\"LAST MODIFIED\"\n                  value=\"lastUpdated\"\n                  onChange={onChange}\n                  sortBy={sortBy}\n                  direction={direction}\n                  sortOptions={SORT_OPTIONS}\n                  defaultDirection=\"desc\"\n                />\n              ),\n            },\n            { node: <>&nbsp;</> },\n          ]}\n        />\n        <InfiniteList\n          rootMargin={\"0px 0px 300px 0px\"}\n          initialElements={20}\n          items={filteredResults}\n          renderItem={item => <PublicWatchlistsItem item={item} columnsWidth={COLUMNS_WIDTH} />}\n        />\n      </Box>\n    </NewWatchlistButtonContainer>\n  )\n}\n\nexport { PublicWatchlists }\n"],"names":["PublicWatchlists","COLUMNS_WIDTH","SORT_OPTIONS","value","label","isLoading","isLoadingWatchlists","data","results","useAllWatchlists","sorterFn","sortBy","direction","onChange","usePageWithListSorter","filteredResults","useMemo","sort","LoadingSpinner","length","NewWatchlistButtonContainer","HubNoResults","Box","sx","width","mt","HubTableRow","backgroundColor","height","columnsWidth","columns","node","HubSortableHeadCell","sortOptions","defaultDirection","InfiniteList","rootMargin","initialElements","items","renderItem","item","PublicWatchlistsItem"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BA0FSA;;;eAAAA;;;;uBA1Fe;2BACS;gCACF;qCACkB;uBAEX;sBAClB;8BACS;6CACe;sCACP;AAErC,MAAMC,gBAAgB;IAAC;IAAsB;IAAS;IAAS;CAAQ;AACvE,MAAMC,eAAe;IACnB;QAAEC,OAAO;QAAQC,OAAO;IAAO;IAC/B;QAAED,OAAO;QAASC,OAAO;IAAQ;IACjC;QAAED,OAAO;QAAeC,OAAO;IAAgB;CAChD;AAED,MAAMJ,mBAAmB;IACvB,MAAM,EAAEK,WAAWC,mBAAmB,EAAEC,MAAMC,UAAU,EAAE,EAAE,GAAGC,IAAAA,2BAAgB,EAAC;IAChF,MAAM,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,EAAE,GAAGC,IAAAA,4BAAqB,EAAC;IACxE,MAAMC,kBAAkBC,IAAAA,cAAO,EAAC,IAAMR,QAAQS,IAAI,CAACP,WAAW;QAACF;QAASE;KAAS;IAEjF,IAAIJ,qBAAqB,qBAAO,qBAACY,8BAAc;IAC/C,IAAI,CAACZ,uBAAuBS,gBAAgBI,MAAM,KAAK,GAAG;QACxD,qBACE,qBAACC,wDAA2B;sBAC1B,cAAA,qBAACC,0BAAY;;IAGnB;IAEA,qBACE,qBAACD,wDAA2B;kBAC1B,cAAA,sBAACE,SAAG;YAACC,IAAI;gBAAEC,OAAO;gBAAGC,IAAI;YAAE;;8BACzB,qBAACC,gCAAW;oBACVH,IAAI;wBAAEI,iBAAiB;wBAAeC,QAAQ;oBAAG;oBACjDC,cAAc5B;oBACd6B,SAAS;wBACP;4BACEC,oBACE,qBAACC,wCAAmB;gCAClB5B,OAAM;gCACND,OAAM;gCACNU,UAAUA;gCACVF,QAAQA;gCACRC,WAAWA;gCACXqB,aAAa/B;;wBAGnB;wBACA;4BACE6B,oBACE,qBAACC,wCAAmB;gCAClB5B,OAAM;gCACND,OAAM;gCACNU,UAAUA;gCACVF,QAAQA;gCACRC,WAAWA;gCACXqB,aAAa/B;;wBAGnB;wBACA;4BACE6B,oBACE,qBAACC,wCAAmB;gCAClB5B,OAAM;gCACND,OAAM;gCACNU,UAAUA;gCACVF,QAAQA;gCACRC,WAAWA;gCACXqB,aAAa/B;gCACbgC,kBAAiB;;wBAGvB;wBACA;4BAAEH,oBAAM;0CAAE;;wBAAU;qBACrB;;8BAEH,qBAACI,iCAAY;oBACXC,YAAY;oBACZC,iBAAiB;oBACjBC,OAAOvB;oBACPwB,YAAYC,CAAAA,qBAAQ,qBAACC,0CAAoB;4BAACD,MAAMA;4BAAMX,cAAc5B;;;;;;AAK9E"}