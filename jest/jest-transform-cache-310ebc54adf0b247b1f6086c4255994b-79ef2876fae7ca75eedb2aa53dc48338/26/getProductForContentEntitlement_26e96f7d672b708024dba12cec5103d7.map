{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/common/utils/src/lib/getProductForContentEntitlement.ts"],"sourcesContent":["import { ApplicationEntitlement, Product, isValidProduct } from \"@rp/common/api-types\"\n\nconst productEntitlementMap: Record<Product, Set<ApplicationEntitlement>> = {\n  \"financial-data\": new Set([\n    \"chat:crunchbase\",\n    \"chat:pricing\",\n    \"chat:sentiment\",\n    \"content:asia_transcripts\",\n    \"content:sec_filings\",\n    \"content:fs_transcripts\",\n    \"chat:estimates\",\n    \"chat:knowledge_graph\",\n  ]),\n  jobs: new Set([\"chat:jobs\"]),\n  pro: new Set(),\n  \"content-boost\": new Set(),\n}\n\nconst getProductForContentEntitlements = (entitlement: ApplicationEntitlement): Product => {\n  const requiredEntitlements = Object.entries(productEntitlementMap).filter(\n    ([_product, entitlements]) => entitlements.has(entitlement),\n  )\n\n  const suggestedProduct = requiredEntitlements[0][0]\n\n  if (isValidProduct(suggestedProduct)) {\n    return suggestedProduct\n  }\n\n  return \"pro\"\n}\n\nexport { getProductForContentEntitlements }\n"],"names":["getProductForContentEntitlements","productEntitlementMap","Set","jobs","pro","entitlement","requiredEntitlements","Object","entries","filter","_product","entitlements","has","suggestedProduct","isValidProduct"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAgCSA;;;eAAAA;;;0BAhCuD;AAEhE,MAAMC,wBAAsE;IAC1E,kBAAkB,IAAIC,IAAI;QACxB;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IACDC,MAAM,IAAID,IAAI;QAAC;KAAY;IAC3BE,KAAK,IAAIF;IACT,iBAAiB,IAAIA;AACvB;AAEA,MAAMF,mCAAmC,CAACK;IACxC,MAAMC,uBAAuBC,OAAOC,OAAO,CAACP,uBAAuBQ,MAAM,CACvE,CAAC,CAACC,UAAUC,aAAa,GAAKA,aAAaC,GAAG,CAACP;IAGjD,MAAMQ,mBAAmBP,oBAAoB,CAAC,EAAE,CAAC,EAAE;IAEnD,IAAIQ,IAAAA,wBAAc,EAACD,mBAAmB;QACpC,OAAOA;IACT;IAEA,OAAO;AACT"}