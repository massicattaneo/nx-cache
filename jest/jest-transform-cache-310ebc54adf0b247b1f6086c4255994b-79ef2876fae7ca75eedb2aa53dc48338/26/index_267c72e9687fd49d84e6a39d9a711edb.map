{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/node_modules/micromark-extension-gfm-tagfilter/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').CompileContext} CompileContext\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-util-types').Token} Token\n */\n\n// An opening or closing tag start, followed by a case-insensitive specific tag name,\n// followed by HTML whitespace, a greater than, or a slash.\nconst reFlow =\n  /<(\\/?)(iframe|noembed|noframes|plaintext|script|style|title|textarea|xmp)(?=[\\t\\n\\f\\r />])/gi\n\n// As HTML (text) parses tags separately (and very strictly), we donâ€™t need to be\n// global.\nconst reText = new RegExp('^' + reFlow.source, 'i')\n\n/**\n * Create an HTML extension for `micromark` to support GitHubs weird and\n * useless tagfilter when serializing to HTML.\n *\n * @returns {HtmlExtension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to support\n *   GitHubs weird and useless tagfilter when serializing to HTML.\n */\nexport function gfmTagfilterHtml() {\n  return {\n    exit: {\n      htmlFlowData(token) {\n        exitHtmlData.call(this, token, reFlow)\n      },\n      htmlTextData(token) {\n        exitHtmlData.call(this, token, reText)\n      }\n    }\n  }\n}\n\n/**\n * @this {CompileContext}\n * @param {Token} token\n * @param {RegExp} filter\n * @returns {undefined}\n */\nfunction exitHtmlData(token, filter) {\n  let value = this.sliceSerialize(token)\n\n  if (this.options.allowDangerousHtml) {\n    value = value.replace(filter, '&lt;$1$2')\n  }\n\n  this.raw(this.encode(value))\n}\n"],"names":["gfmTagfilterHtml","reFlow","reText","RegExp","source","exit","htmlFlowData","token","exitHtmlData","call","htmlTextData","filter","value","sliceSerialize","options","allowDangerousHtml","replace","raw","encode"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA;;;;CAIC,GAED,qFAAqF;AACrF,2DAA2D;;;;;+BAgB3CA;;;eAAAA;;;AAfhB,MAAMC,SACJ;AAEF,iFAAiF;AACjF,UAAU;AACV,MAAMC,SAAS,IAAIC,OAAO,MAAMF,OAAOG,MAAM,EAAE;AAUxC,SAASJ;IACd,OAAO;QACLK,MAAM;YACJC,cAAaC,KAAK;gBAChBC,aAAaC,IAAI,CAAC,IAAI,EAAEF,OAAON;YACjC;YACAS,cAAaH,KAAK;gBAChBC,aAAaC,IAAI,CAAC,IAAI,EAAEF,OAAOL;YACjC;QACF;IACF;AACF;AAEA;;;;;CAKC,GACD,SAASM,aAAaD,KAAK,EAAEI,MAAM;IACjC,IAAIC,QAAQ,IAAI,CAACC,cAAc,CAACN;IAEhC,IAAI,IAAI,CAACO,OAAO,CAACC,kBAAkB,EAAE;QACnCH,QAAQA,MAAMI,OAAO,CAACL,QAAQ;IAChC;IAEA,IAAI,CAACM,GAAG,CAAC,IAAI,CAACC,MAAM,CAACN;AACvB"}