4d0bb6abd3f63835db92c46923110890
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "ResultsLayoutMobile", {
    enumerable: true,
    get: function() {
        return ResultsLayoutMobile;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _userdataqueries = require("@rp/react/tanstack-api/user-data-queries");
const _basecomponents = require("@rp/react/web/common/base-components");
const _compositecomponents = require("@rp/react/web/common/composite-components");
const _hooks = require("@rp/react/web/common/hooks");
const _layout = require("@rp/react/web/common/layout");
const _providers = require("@rp/react/web/common/providers");
const _resultsstorycard = require("@rp/react/web/common/results-story-card");
const _searchautosuggestinput = require("@rp/react/web/common/search-autosuggest-input");
const _cqsquerybar = require("@rp/react/web/cqs-query-bar");
const _documentviewer = require("@rp/react/web/document-viewer");
const _core = require("@rp/react/web/mui/core");
const _useHandleCqsChange = require("../../hooks/useHandleCqsChange");
const _HomeHeadermobile = require("../Home/HomeHeader.mobile");
const ResultsLayoutMobile = ({ handleOnChange, handleOnExclude, expression, name, saveStatus, onAddToWatchlist, isPublic, onHandleOpenModal, editable = false })=>{
    const [{ document }] = (0, _hooks.useHashParams)();
    const handleChangeQuery = (0, _useHandleCqsChange.useHandleCqsChange)();
    const { queryBar, savedQuery } = (0, _providers.useQueryContext)();
    const [isOpen, setIsOpen] = (0, _react.useState)(false);
    const { isIOS } = (0, _hooks.useDeviceInfo)();
    const isSaved = saveStatus === "saved";
    const title = isSaved ? name : "Untitled Search";
    const selectedItems = expression ? (0, _userdataqueries.getExpressionIds)(expression, {
        format: "suggestionId",
        includeMacros: true
    }) : [];
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
        children: [
            document ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_HomeHeadermobile.HomeHeaderMobile, {
                showSuggestionBar: true,
                isOpenDocument: true
            }) : /*#__PURE__*/ (0, _jsxruntime.jsxs)(_basecomponents.HideOnScroll, {
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_layout.FollowMobileHeader, {
                        name: title,
                        isPublic: isPublic,
                        savedQuery: savedQuery,
                        editable: editable
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_cqsquerybar.CqsQueryBar, {
                        searchActions: {
                            setIsOpen
                        },
                        query: queryBar,
                        onHandleOpenModal: onHandleOpenModal
                    })
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_documentviewer.DocumentViewerPage, {
                backTitle: "Back to Results",
                expression: expression,
                onChange: handleOnChange,
                onExclude: handleOnExclude,
                rpjsonHeaderOffset: 0,
                contentContainerProps: {
                    disableGutters: true
                },
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Grid, {
                    container: true,
                    pb: _compositecomponents.MOBILE_PAGE_B_PADDING,
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Grid, {
                        item: true,
                        xs: 12,
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_resultsstorycard.StoryCardResults, {
                            onAddToWatchlist: onAddToWatchlist
                        }, savedQuery.query.scope)
                    })
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_searchautosuggestinput.AutoCompleteMobile, {
                onClose: ()=>{
                    /**
           * HACK for IOS browser
           * we should find a proper way of fixing this defect
           * https://ravenpack.atlassian.net/browse/RPX-2159
           */ if (isIOS) {
                        setTimeout(()=>window.scrollTo({
                                top: 0
                            }));
                    }
                },
                excludeQueryTypes: [
                    "savedSearch"
                ],
                selectedItems: selectedItems,
                onChange: handleChangeQuery,
                searchActions: {
                    isOpen,
                    setIsOpen
                }
            })
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,