{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/adapters/src/lib/web/customer-io.ts"],"sourcesContent":["import { AnalyticsBrowser } from \"@customerio/cdp-analytics-browser\"\nimport { environment } from \"@rp/common/environment\"\nimport { CustomerIOUserData, CustomerIoEventProperties } from \"../adapters.type\"\nimport { stringifyData } from \"../stringifyData\"\n\nlet analytics: AnalyticsBrowser\n\nexport const customerIoInit = (env: string) => {\n  const { writeKey, hostName } = environment.customerIo\n  if (env === \"testing\" || !writeKey) return\n  analytics = new AnalyticsBrowser()\n  analytics.load(\n    {\n      writeKey,\n      cdnURL: `https://${hostName}`,\n    },\n    {\n      integrations: {\n        \"Customer.io Data Pipelines\": {\n          apiHost: `${hostName}/v1`,\n          protocol: \"https\",\n        },\n      },\n    },\n  )\n}\n\nexport const customerIoIdentify = (user: CustomerIOUserData) => {\n  analytics?.identify(user.userId, {\n    company: {\n      id: user.companyId,\n    },\n    platform: \"web\",\n  })\n}\n\nexport const customerIoTrack = (eventData: { name: string; data: CustomerIoEventProperties }) => {\n  // Don't track login and userAuthenticated events here\n  if ([\"rp.login\", \"rp.userAuthenticated\"].includes(eventData.name)) return\n\n  const stringifiedData = stringifyData(eventData.data)\n  const enrichedData = { ...stringifiedData, platform: \"web\", platform_type: null }\n\n  analytics?.track(eventData.name, enrichedData)\n}\n\nexport const customerIoPageView = async (\n  pageName?: string,\n  properties?: CustomerIoEventProperties | (() => Promise<CustomerIoEventProperties>),\n) => {\n  const props = typeof properties === \"function\" ? await properties() : properties\n  analytics?.page(pageName, props)\n}\n\nexport const customerIOLogout = () => {\n  customerIoTrack({ name: \"logout\", data: {} })\n  analytics?.reset()\n}\n"],"names":["customerIOLogout","customerIoIdentify","customerIoInit","customerIoPageView","customerIoTrack","analytics","env","writeKey","hostName","environment","customerIo","AnalyticsBrowser","load","cdnURL","integrations","apiHost","protocol","user","identify","userId","company","id","companyId","platform","eventData","includes","name","stringifiedData","stringifyData","data","enrichedData","platform_type","track","pageName","properties","props","page","reset"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;;;;;;;;IAsDaA,gBAAgB;eAAhBA;;IA3BAC,kBAAkB;eAAlBA;;IApBAC,cAAc;eAAdA;;IAuCAC,kBAAkB;eAAlBA;;IAVAC,eAAe;eAAfA;;;qCApCoB;6BACL;+BAEE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAE9B,IAAIC;AAEG,MAAMH,iBAAiB,CAACI;IAC7B,MAAM,EAAEC,QAAQ,EAAEC,QAAQ,EAAE,GAAGC,wBAAW,CAACC,UAAU;IACrD,IAAIJ,QAAQ,aAAa,CAACC,UAAU;IACpCF,YAAY,IAAIM,qCAAgB;IAChCN,UAAUO,IAAI,CACZ;QACEL;QACAM,QAAQ,CAAC,QAAQ,EAAEL,SAAS,CAAC;IAC/B,GACA;QACEM,cAAc;YACZ,8BAA8B;gBAC5BC,SAAS,CAAC,EAAEP,SAAS,GAAG,CAAC;gBACzBQ,UAAU;YACZ;QACF;IACF;AAEJ;AAEO,MAAMf,qBAAqB,CAACgB;IACjCZ,sBAAAA,gCAAAA,UAAWa,QAAQ,CAACD,KAAKE,MAAM,EAAE;QAC/BC,SAAS;YACPC,IAAIJ,KAAKK,SAAS;QACpB;QACAC,UAAU;IACZ;AACF;AAEO,MAAMnB,kBAAkB,CAACoB;IAC9B,sDAAsD;IACtD,IAAI;QAAC;QAAY;KAAuB,CAACC,QAAQ,CAACD,UAAUE,IAAI,GAAG;IAEnE,MAAMC,kBAAkBC,IAAAA,4BAAa,EAACJ,UAAUK,IAAI;IACpD,MAAMC,eAAe,wCAAKH;QAAiBJ,UAAU;QAAOQ,eAAe;;IAE3E1B,sBAAAA,gCAAAA,UAAW2B,KAAK,CAACR,UAAUE,IAAI,EAAEI;AACnC;AAEO,MAAM3B,qBAAqB,OAChC8B,UACAC;IAEA,MAAMC,QAAQ,OAAOD,eAAe,aAAa,MAAMA,eAAeA;IACtE7B,sBAAAA,gCAAAA,UAAW+B,IAAI,CAACH,UAAUE;AAC5B;AAEO,MAAMnC,mBAAmB;IAC9BI,gBAAgB;QAAEsB,MAAM;QAAUG,MAAM,CAAC;IAAE;IAC3CxB,sBAAAA,gCAAAA,UAAWgC,KAAK;AAClB"}