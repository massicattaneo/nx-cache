{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/tanstack-api/brief/src/brief.types.ts"],"sourcesContent":["import { CqsScope, NotificationSchedule } from \"@rp/common/api-types\"\n\n// Config\n\ntype BriefConfigModes = \"email\"\n\ntype BriefConfigAPIScheduleDay = \"mon\" | \"tue\" | \"wed\" | \"thu\" | \"fri\" | \"sat\" | \"sun\"\n\ntype BriefSchedule = {\n  days: Array<BriefConfigAPIScheduleDay>\n  hour: number\n  minute: number\n  timezone: string\n}\n\ntype BriefConfig = {\n  briefName: string\n  dateCreated: string\n  deliveryModes: Array<BriefConfigModes>\n  email: string\n  id: string\n  lastUpdated: string\n  schedule: BriefSchedule\n  userId: string\n  watchlistIds: Array<string>\n  overview: string | null\n}\n\ntype BriefConfigForm = {\n  name: string\n  schedule: NotificationSchedule\n  watchlistId: string\n}\n\ntype BriefConfigAPISchedule = {\n  timezone: string\n  days: Array<BriefConfigAPIScheduleDay>\n  hour: number\n  minute: number\n}\n\ntype BriefConfigAPI = {\n  brief_name: string\n  user_id: string\n  watchlist_ids: Array<string>\n  email: string\n  delivery_modes: Array<BriefConfigModes>\n  schedule: BriefConfigAPISchedule\n}\n\ntype BriefConfigGetAllResponse = {\n  results: Array<BriefConfig>\n}\n\n// Report\n\ntype BriefReportEntityInfo = {\n  companyType: string\n  country: string\n  description: string\n  entityType: string\n  id: string\n  industry: string\n  industryGroup: string\n  name: string\n  sector: string\n  ticker: string\n}\n\ntype BriefReportCompanyReport = {\n  cleanFinalReport: string\n  entityId: string\n  entityInfo: BriefReportEntityInfo\n}\n\ntype CqsAttribution = {\n  refId: number\n  documentId: string\n  headline: string\n  sourceKey: string\n  sourceName: string\n  sourceRank?: number\n  rpProviderId: string\n  url?: string\n  chunkId: number\n  text: string\n  highlights: Array<{ pnum: number; snum: number }>\n  imageUrl?: string\n  documentScope: CqsScope\n  ts: string\n  contentType?: string\n  language?: string\n}\n\ntype BriefSources = Record<string, CqsAttribution>\n\ntype BriefReport = {\n  briefId: string\n  entityReports: Array<BriefReportCompanyReport>\n  introduction: string\n  isEmpty: boolean\n  reportDate: string\n  reportId: string\n  reportTitle: string\n  watchlistId: string\n  watchlistName: string\n  sources?: BriefSources\n}\n\ntype BriefReportGetResponse = {\n  report: BriefReport | null\n  nextReportDate: string\n  errorCode?: string\n}\n\ntype BriefReportQueryData = {\n  data: BriefReportGetResponse | null\n  isLoading: boolean\n  isError: boolean\n}\n\nenum BriefAPIError {\n  BRIEF_REPORT_STILL_LOADING = \"BRIEF_REPORT_STILL_LOADING\",\n  BRIEF_REPORT_NOT_FOUND = \"BRIEF_REPORT_NOT_FOUND\",\n}\n\nexport { BriefAPIError }\n\nexport type {\n  BriefConfig,\n  BriefConfigAPISchedule,\n  BriefConfigForm,\n  BriefConfigGetAllResponse,\n  BriefConfigModes,\n  BriefConfigAPI,\n  BriefConfigAPIScheduleDay,\n  BriefReport,\n  BriefReportCompanyReport,\n  BriefReportGetResponse,\n  BriefReportQueryData,\n  BriefSchedule,\n  BriefSources,\n  CqsAttribution,\n}\n"],"names":["BriefAPIError"],"rangeMappings":";;;;;;;;;;;;;;","mappings":";;;;+BA8HSA;;;eAAAA;;;;UALJA;;;GAAAA,kBAAAA"}