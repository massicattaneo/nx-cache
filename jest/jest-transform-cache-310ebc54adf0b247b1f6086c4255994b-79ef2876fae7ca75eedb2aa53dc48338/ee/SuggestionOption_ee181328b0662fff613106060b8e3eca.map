{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/search-autosuggest-input/src/lib/SuggestionInput/SuggestionOption.tsx"],"sourcesContent":["import match from \"autosuggest-highlight/match\"\nimport parse from \"autosuggest-highlight/parse\"\nimport { Typography } from \"@mui/material\"\nimport { EllipsisTooltip } from \"@rp/react/web/common/composite-components\"\nimport { SuggestionImage } from \"./SuggestionImage\"\nimport {\n  HightLightText,\n  SuggestionKeywordStyled,\n  SuggestionLabel,\n  SuggestionLeftStyled,\n  SuggestionOptionStyled,\n  SuggestionTickerTextStyled,\n  SuggestionTypeTextStyled,\n  labelTextStyle,\n} from \"./SuggestionOption.styles\"\n\ntype SuggestionOptionType = {\n  label: string\n  ticker?: string\n  showTickers?: boolean\n  isKeyword?: boolean\n  highlightValue: string\n  typeDesc?: string\n  entityType?: string\n  description?: string\n  type: string\n  altName?: string\n  name?: string\n  nested?: \"default\" | \"last\"\n  metadata4?: string\n  category?: string\n}\n\nexport const SuggestionOption = ({\n  label,\n  ticker,\n  showTickers,\n  isKeyword,\n  highlightValue = \"\",\n  typeDesc,\n  entityType,\n  description,\n  type,\n  altName,\n  nested,\n  name,\n  metadata4,\n  category,\n}: SuggestionOptionType) => {\n  const displayLabel = altName || name || label\n  const matches = match(displayLabel, highlightValue)\n  const parts = parse(displayLabel, matches)\n  const keywordLabel = \"Keyword\"\n\n  return (\n    <SuggestionOptionStyled key={displayLabel} data-testid=\"container\">\n      <SuggestionLeftStyled>\n        {isKeyword ? (\n          <SuggestionKeywordStyled>\n            <HightLightText component={\"span\"} highlight>\n              {highlightValue}\n            </HightLightText>\n          </SuggestionKeywordStyled>\n        ) : (\n          <SuggestionLabel>\n            <div>\n              <SuggestionImage\n                nested={nested}\n                metadata4={metadata4}\n                displayLabel={displayLabel}\n                type={type}\n                category={category}\n                entityType={entityType}\n              />\n              <EllipsisTooltip\n                tooltipText={displayLabel}\n                typographyProps={{ style: labelTextStyle, component: \"span\" }}\n              >\n                {parts.map((part, i) => (\n                  <HightLightText component=\"span\" key={i} highlight={part.highlight}>\n                    {part.text}\n                  </HightLightText>\n                ))}\n              </EllipsisTooltip>\n              {showTickers && ticker ? (\n                <SuggestionTickerTextStyled component=\"span\" data-testid=\"suggestion-ticker\">\n                  {ticker}\n                </SuggestionTickerTextStyled>\n              ) : null}\n            </div>\n            {description && !nested ? (\n              <Typography sx={{ height: \"48px\", overflow: \"hidden\" }}>{description}</Typography>\n            ) : null}\n          </SuggestionLabel>\n        )}\n      </SuggestionLeftStyled>\n      <SuggestionTypeTextStyled>{isKeyword ? keywordLabel : typeDesc}</SuggestionTypeTextStyled>\n    </SuggestionOptionStyled>\n  )\n}\n"],"names":["SuggestionOption","label","ticker","showTickers","isKeyword","highlightValue","typeDesc","entityType","description","type","altName","nested","name","metadata4","category","displayLabel","matches","match","parts","parse","keywordLabel","SuggestionOptionStyled","data-testid","SuggestionLeftStyled","SuggestionKeywordStyled","HightLightText","component","highlight","SuggestionLabel","div","SuggestionImage","EllipsisTooltip","tooltipText","typographyProps","style","labelTextStyle","map","part","i","text","SuggestionTickerTextStyled","Typography","sx","height","overflow","SuggestionTypeTextStyled"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAiCaA;;;eAAAA;;;;8DAjCK;8DACA;0BACS;qCACK;iCACA;wCAUzB;;;;;;AAmBA,MAAMA,mBAAmB,CAAC,EAC/BC,KAAK,EACLC,MAAM,EACNC,WAAW,EACXC,SAAS,EACTC,iBAAiB,EAAE,EACnBC,QAAQ,EACRC,UAAU,EACVC,WAAW,EACXC,IAAI,EACJC,OAAO,EACPC,MAAM,EACNC,IAAI,EACJC,SAAS,EACTC,QAAQ,EACa;IACrB,MAAMC,eAAeL,WAAWE,QAAQX;IACxC,MAAMe,UAAUC,IAAAA,cAAK,EAACF,cAAcV;IACpC,MAAMa,QAAQC,IAAAA,cAAK,EAACJ,cAAcC;IAClC,MAAMI,eAAe;IAErB,qBACE,sBAACC,8CAAsB;QAAoBC,eAAY;;0BACrD,qBAACC,4CAAoB;0BAClBnB,0BACC,qBAACoB,+CAAuB;8BACtB,cAAA,qBAACC,sCAAc;wBAACC,WAAW;wBAAQC,SAAS;kCACzCtB;;mCAIL,sBAACuB,uCAAe;;sCACd,sBAACC;;8CACC,qBAACC,gCAAe;oCACdnB,QAAQA;oCACRE,WAAWA;oCACXE,cAAcA;oCACdN,MAAMA;oCACNK,UAAUA;oCACVP,YAAYA;;8CAEd,qBAACwB,oCAAe;oCACdC,aAAajB;oCACbkB,iBAAiB;wCAAEC,OAAOC,sCAAc;wCAAET,WAAW;oCAAO;8CAE3DR,MAAMkB,GAAG,CAAC,CAACC,MAAMC,kBAChB,qBAACb,sCAAc;4CAACC,WAAU;4CAAeC,WAAWU,KAAKV,SAAS;sDAC/DU,KAAKE,IAAI;2CAD0BD;;gCAKzCnC,eAAeD,uBACd,qBAACsC,kDAA0B;oCAACd,WAAU;oCAAOJ,eAAY;8CACtDpB;qCAED;;;wBAELM,eAAe,CAACG,uBACf,qBAAC8B,oBAAU;4BAACC,IAAI;gCAAEC,QAAQ;gCAAQC,UAAU;4BAAS;sCAAIpC;6BACvD;;;;0BAIV,qBAACqC,gDAAwB;0BAAEzC,YAAYgB,eAAed;;;OAzC3BS;AA4CjC"}