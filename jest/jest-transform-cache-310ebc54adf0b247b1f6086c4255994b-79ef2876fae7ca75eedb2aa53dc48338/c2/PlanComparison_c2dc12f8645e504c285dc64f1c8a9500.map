{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/composite-components/src/PlanComparison/PlanComparison.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport { useUser } from \"@clerk/clerk-react\"\nimport {\n  BRIEF_FEATURE_NAME,\n  FILES_FEATURE_NAME,\n  WATCHLIST_ENTITIES_FEATURE_NAME,\n  WATCHLIST_FEATURE_NAME,\n  WATCHLIST_FINANCIAL_DATA_FEATURE_NAME,\n} from \"@rp/common/settings\"\nimport { BigdataIconWhiteRibbon, BigdataLogoWhite } from \"@rp/react/common/assets\"\nimport { contactSalesCustomerIo, planComparisonCustomerIo } from \"@rp/react/common/customer-io\"\nimport { useSubmitForm } from \"@rp/react/tanstack-api/contact-sales\"\nimport { useModal } from \"@rp/react/web/common/providers\"\nimport { Box, Button, FormHelperText, IconButton, Stack, Typography } from \"@rp/react/web/mui/core\"\nimport { CheckCircle, Close, ScheduleSendOutlined } from \"@rp/react/web/mui/icons\"\n\ntype Feature = {\n  text: string\n}\n\ntype PlanProps = {\n  title: string\n  description: string\n  price: string\n  ctaText: string\n  ctaAction: () => void\n  features: Array<Feature>\n  type: \"standard\" | \"business\"\n}\nconst PlanCard = ({ title, description, price, ctaText, ctaAction, features, type }: PlanProps) => (\n  <Box\n    sx={{\n      flex: 1,\n      backgroundColor: \"transparent\",\n      borderRadius: 2,\n      border: \"1px solid rgba(255, 255, 255, 0.1)\",\n      p: 2,\n      display: \"flex\",\n      flexDirection: \"column\",\n      gap: 5,\n      maxWidth: \"500px\",\n    }}\n  >\n    <Stack>\n      <Stack sx={{ height: 85, mb: 2 }}>\n        <Typography variant=\"h5\" sx={{ fontWeight: 500 }}>\n          {title}\n        </Typography>\n        <Typography sx={{ color: \"text.secondary\" }}>{description}</Typography>{\" \"}\n      </Stack>\n      <Typography variant=\"h5\" sx={{ fontWeight: 500, mb: 2 }}>\n        {price}\n      </Typography>\n      <Button\n        variant={type === \"standard\" ? \"contained\" : \"contained\"}\n        onClick={ctaAction}\n        sx={{\n          py: 1,\n          px: 4,\n          borderRadius: 4,\n          textTransform: \"none\",\n          backgroundColor: type === \"standard\" ? \"#0589FF33\" : undefined,\n          color: type === \"standard\" ? \"#4CA7F9\" : undefined,\n        }}\n      >\n        {ctaText}\n      </Button>\n    </Stack>\n    <Stack spacing={2}>\n      {features.map((feature, index) => (\n        <Stack key={index} direction=\"row\" spacing={1.5} alignItems=\"center\">\n          <CheckCircle sx={{ color: \"#3182ce\", fontSize: 20 }} />\n          <Typography sx={{ color: \"text.secondary\" }}>{feature.text}</Typography>\n        </Stack>\n      ))}\n    </Stack>\n  </Box>\n)\n\nconst standardFeatures = [\n  { text: \"Unlimited chat\" },\n  { text: \"Access to web content\" },\n  { text: \"Create one watchlist and one brief\" },\n  { text: \"Add up to 10 items into a watchlist\" },\n  { text: \"Upload a few files\" },\n]\n\nconst businessFeatures = [\n  { text: \"Everything in Free\" },\n  { text: \"Increased file upload ability\" },\n  { text: \"Access to premium news\" },\n  { text: \"Full financial data access (pricing, estimates, sentiment, earnings, and more)\" },\n  { text: \"Create unlimited watchlists and up to 5 briefs\" },\n  { text: \"Collaboration features for teams\" },\n  { text: \"In-app support available\" },\n]\n\nconst subTitleMessageMap = (featureName: string) => {\n  switch (featureName.toLowerCase()) {\n    case WATCHLIST_FEATURE_NAME:\n      return `You've reached the limit of watchlists created on the Free plan.\n              Upgrade to the Business plan to create unlimited watchlists\n              and unlock the full power of tracking and analyzing your portfolio.`\n    case WATCHLIST_ENTITIES_FEATURE_NAME:\n      return `You've reached the limit of items added to watchlist on the Free plan.\n              Upgrade to the Business plan to create unlimited watchlists\n              and unlock the full power of tracking and analyzing your portfolio.`\n    case BRIEF_FEATURE_NAME:\n      return `You've reached the limit of briefs on the Free plan.\n              Upgrade to the Business plan to create up to 5 briefs,\n              keeping you updated with insights from the latest news.`\n    case FILES_FEATURE_NAME:\n      return `You’ve reached the limit for uploading private files on the Free plan. Upgrade to the Business plan to upload more files and gain insights from your personal content.`\n    case WATCHLIST_FINANCIAL_DATA_FEATURE_NAME:\n      return `Upgrade to our Pro Plan and unlock unlimited access to watchlists — ask questions, get real-time insights, and dive deeper into the information that matters most to you.`\n    default:\n      return `Unlock the full power of Bigdata.com. Create and customize your own watchlists, follow\n              curated ones from top analysts, generate daily briefs, and access even more powerful\n              features.`\n  }\n}\n\nconst PlanComparison = ({ featureName }: { featureName: string }) => {\n  const { user } = useUser()\n  const { mutate } = useSubmitForm()\n\n  const [demoSent, setDemoSent] = useState(false)\n  const [showError, setShowError] = useState(false)\n\n  const {\n    planComparisonModal: { handleClose },\n  } = useModal()\n\n  useEffect(() => {\n    planComparisonCustomerIo.Modal.open(featureName)\n  }, [featureName])\n\n  const submitRequest = () => {\n    const demoValues = {\n      name: `${user?.firstName} ${user?.lastName}`,\n      company: user?.organizationMemberships[0]?.organization?.name\n        ? user?.organizationMemberships[0].organization.name\n        : \"\",\n      email: user?.emailAddresses ? `${user.emailAddresses}` : \"\",\n      message: \"request to upgrade to pro\",\n      phone: \"\",\n    }\n\n    mutate(demoValues, {\n      onSuccess() {\n        contactSalesCustomerIo.contactSalesFormSubmitted()\n        setDemoSent(true)\n      },\n      onError() {\n        setShowError(true)\n      },\n    })\n  }\n\n  return demoSent ? (\n    <Stack\n      sx={{\n        backgroundColor: \"#2b2b2b\",\n        maxHeight: \"92vh\",\n        overflow: \"auto\",\n        borderRadius: 4,\n        px: 10,\n        py: 6,\n        width: \"800px\",\n      }}\n    >\n      <Header />\n\n      <Stack alignItems=\"center\" justifyContent=\"center\" sx={{ py: 4 }}>\n        <Stack\n          sx={theme => ({ background: theme.palette.primary.background })}\n          p=\"2px\"\n          borderRadius=\"5px\"\n          width=\"50px\"\n          height=\"50px\"\n          alignItems=\"center\"\n          justifyContent={\"center\"}\n        >\n          <ScheduleSendOutlined fontSize=\"large\" color=\"primary\" />\n        </Stack>\n        {showError ? (\n          <Stack textAlign=\"center\" sx={{ py: 2 }}>\n            <FormHelperText error sx={{ fontSize: \"48px\", fontWeight: 700 }}>\n              An error Occurred. Please try again later\n            </FormHelperText>\n          </Stack>\n        ) : (\n          <Stack textAlign=\"center\" sx={{ py: 2 }}>\n            <Typography variant=\"h1\" fontSize=\"32px\" fontWeight={700}>\n              Request sent successfully!\n            </Typography>\n            <Typography variant=\"body1\" color=\"text.secondary\" fontSize=\"18px\">\n              We will contact you soon!\n            </Typography>\n          </Stack>\n        )}\n      </Stack>\n    </Stack>\n  ) : (\n    <Stack\n      sx={{ backgroundColor: \"#2b2b2b\", maxHeight: \"92vh\", overflow: \"auto\", borderRadius: 4 }}\n    >\n      <Box\n        sx={{\n          textAlign: \"center\",\n          p: 4,\n          maxWidth: \"800px\",\n          mx: \"auto\",\n        }}\n      >\n        <Typography\n          variant=\"h4\"\n          sx={{\n            mb: 2,\n            fontWeight: 500,\n          }}\n        >\n          <Box\n            sx={{\n              justifyContent: \"center\",\n              display: \"flex\",\n              flexDirection: \"row\",\n              height: \"30px\",\n              mb: 3,\n              px: 1.5,\n              mt: \"20px\",\n            }}\n          >\n            <Header />\n          </Box>\n        </Typography>\n        <Typography\n          sx={{\n            color: \"text.secondary\",\n            lineHeight: 1.5,\n          }}\n        >\n          {subTitleMessageMap(featureName ? featureName : \"\")}\n        </Typography>\n      </Box>\n      <Stack\n        direction={{ xs: \"column\", md: \"row\" }}\n        spacing={3}\n        sx={{\n          px: 4,\n          pb: 4,\n          maxWidth: \"1200px\",\n          mx: \"auto\",\n          width: \"100%\",\n        }}\n      >\n        <PlanCard\n          type=\"standard\"\n          title=\"Standard\"\n          description=\"Use for free, no credit card needed.\"\n          price=\"Free\"\n          ctaText=\"Continue with Free\"\n          ctaAction={() => {\n            handleClose()\n            planComparisonCustomerIo.Modal.freePlan()\n          }}\n          features={standardFeatures}\n        />\n        <PlanCard\n          type=\"business\"\n          title=\"Business\"\n          description=\"Unlock the full capabilities of Bigdata and access premium news and financial content sources.\"\n          price=\"Pro\"\n          ctaText=\"Book a Demo\"\n          ctaAction={() => {\n            planComparisonCustomerIo.Modal.bookDemo(featureName)\n            submitRequest()\n          }}\n          features={businessFeatures}\n        />\n      </Stack>\n    </Stack>\n  )\n}\n\nconst Header = () => {\n  const {\n    planComparisonModal: { handleClose },\n  } = useModal()\n\n  return (\n    <Stack\n      direction=\"row\"\n      justifyContent=\"space-between\"\n      sx={{\n        height: 56,\n        zIndex: 10,\n        flexGrow: 1,\n        width: \"100%\",\n      }}\n    >\n      <Stack> </Stack>\n      <Stack direction=\"row\">\n        <BigdataIconWhiteRibbon\n          style={{ marginRight: 6 }}\n          height={32}\n          data-testid=\"create-chat-logo\"\n          width={32}\n        />{\" \"}\n        <BigdataLogoWhite width={140} height={44} data-testid=\"bigdata-logo\" />\n      </Stack>\n      <Stack>\n        <IconButton\n          data-testid={\"close-plan-modal\"}\n          sx={{\n            position: \"relative\",\n            top: -40,\n            right: -70,\n          }}\n          onClick={() => {\n            handleClose()\n          }}\n        >\n          <Close sx={{ color: \"text.primary\" }} />\n        </IconButton>\n      </Stack>\n    </Stack>\n  )\n}\n\nexport { PlanComparison }\n"],"names":["PlanComparison","PlanCard","title","description","price","ctaText","ctaAction","features","type","Box","sx","flex","backgroundColor","borderRadius","border","p","display","flexDirection","gap","maxWidth","Stack","height","mb","Typography","variant","fontWeight","color","Button","onClick","py","px","textTransform","undefined","spacing","map","feature","index","direction","alignItems","CheckCircle","fontSize","text","standardFeatures","businessFeatures","subTitleMessageMap","featureName","toLowerCase","WATCHLIST_FEATURE_NAME","WATCHLIST_ENTITIES_FEATURE_NAME","BRIEF_FEATURE_NAME","FILES_FEATURE_NAME","WATCHLIST_FINANCIAL_DATA_FEATURE_NAME","user","useUser","mutate","useSubmitForm","demoSent","setDemoSent","useState","showError","setShowError","planComparisonModal","handleClose","useModal","useEffect","planComparisonCustomerIo","Modal","open","submitRequest","demoValues","name","firstName","lastName","company","organizationMemberships","organization","email","emailAddresses","message","phone","onSuccess","contactSalesCustomerIo","contactSalesFormSubmitted","onError","maxHeight","overflow","width","Header","justifyContent","theme","background","palette","primary","ScheduleSendOutlined","textAlign","FormHelperText","error","mx","mt","lineHeight","xs","md","pb","freePlan","bookDemo","zIndex","flexGrow","BigdataIconWhiteRibbon","style","marginRight","data-testid","BigdataLogoWhite","IconButton","position","top","right","Close"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}