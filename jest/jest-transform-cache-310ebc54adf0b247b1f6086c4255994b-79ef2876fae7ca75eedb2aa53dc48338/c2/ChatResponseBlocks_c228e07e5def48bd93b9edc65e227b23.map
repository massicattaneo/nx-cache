{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/chat/src/lib/Chat/Chat/ChatResponse/ChatResponseBlocks/ChatResponseBlocks.tsx"],"sourcesContent":["import { SummaryState, createChunkMap } from \"@rp/react/common/hooks\"\nimport { StoredResponseBlockList } from \"@rp/react/tanstack-api/chat\"\nimport { Box } from \"@rp/react/web/mui/core\"\nimport { OnUserInteractionProps } from \"../ChatResponse\"\nimport { CollapsableBlock } from \"./CollapsableBlock\"\nimport { EngineBlock } from \"./EngineBlock\"\nimport { TextBlock } from \"./TextBlock\"\n\ntype ChunkMap = ReturnType<typeof createChunkMap>[\"chunkMap\"]\ntype ExternalMap = ReturnType<typeof createChunkMap>[\"externalMap\"]\n\ntype Props = {\n  responseBlocks: StoredResponseBlockList | SummaryState[\"responseBlocks\"]\n  mode: \"current\" | \"history\"\n  inlineAttributionProps: {\n    chunkMap: ChunkMap\n    externalMap: ExternalMap\n    onUserInteraction: (props: OnUserInteractionProps) => void\n  }\n}\n\nconst ChatResponseBlocks = ({ responseBlocks, mode, inlineAttributionProps }: Props) => {\n  return (\n    <Box>\n      {responseBlocks.map((block, index) => {\n        switch (block.type) {\n          case \"COLLAPSE\":\n            return (\n              <CollapsableBlock\n                key={block.title}\n                title={block.title}\n                isReady={mode === \"history\"}\n                contents={block.content.value}\n                inlineAttributionProps={inlineAttributionProps}\n              />\n            )\n\n          case \"TEXT\":\n            return (\n              <TextBlock\n                key={index}\n                isReady={mode === \"history\"}\n                contents={block.value}\n                inlineAttributionProps={inlineAttributionProps}\n              />\n            )\n\n          case \"ENGINE\":\n            return <EngineBlock key={index} content={block.answer} />\n          default:\n            return null\n        }\n      })}\n    </Box>\n  )\n}\n\nexport { ChatResponseBlocks }\n"],"names":["ChatResponseBlocks","responseBlocks","mode","inlineAttributionProps","Box","map","block","index","type","CollapsableBlock","title","isReady","contents","content","value","TextBlock","EngineBlock","answer"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAyDSA;;;eAAAA;;;;sBAvDW;kCAEa;6BACL;2BACF;AAe1B,MAAMA,qBAAqB,CAAC,EAAEC,cAAc,EAAEC,IAAI,EAAEC,sBAAsB,EAAS;IACjF,qBACE,qBAACC,SAAG;kBACDH,eAAeI,GAAG,CAAC,CAACC,OAAOC;YAC1B,OAAQD,MAAME,IAAI;gBAChB,KAAK;oBACH,qBACE,qBAACC,kCAAgB;wBAEfC,OAAOJ,MAAMI,KAAK;wBAClBC,SAAST,SAAS;wBAClBU,UAAUN,MAAMO,OAAO,CAACC,KAAK;wBAC7BX,wBAAwBA;uBAJnBG,MAAMI,KAAK;gBAQtB,KAAK;oBACH,qBACE,qBAACK,oBAAS;wBAERJ,SAAST,SAAS;wBAClBU,UAAUN,MAAMQ,KAAK;wBACrBX,wBAAwBA;uBAHnBI;gBAOX,KAAK;oBACH,qBAAO,qBAACS,wBAAW;wBAAaH,SAASP,MAAMW,MAAM;uBAA5BV;gBAC3B;oBACE,OAAO;YACX;QACF;;AAGN"}