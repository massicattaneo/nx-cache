63e977c3ef63d68838dba5ea9680b8e4
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "RealTimeAudit", {
    enumerable: true,
    get: function() {
        return RealTimeAudit;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _compositecomponents = require("@rp/react/web/common/composite-components");
const _core = require("@rp/react/web/mui/core");
const _icons = require("@rp/react/web/mui/icons");
const _QueryChip = require("./QueryChip");
const _SourceChip = require("./SourceChip");
const _StatusMessage = require("./StatusMessage");
const _getSourcesForAudit = require("./getSourcesForAudit");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const MAX_QUERIES = 3;
const MAX_SOURCES = 6;
const CHECK_CIRCLE_CLASS = "check-circle-audit";
const RealTimeAudit = ({ status, auditTraces, engineSources, renderCard, externalMap, chunkMap, onUserInteraction, stopped, variant, isOpen, setIsOpen })=>{
    const isMobile = variant === "mobile";
    const { step } = status;
    const wasEverOpened = (0, _react.useRef)(false);
    const isCollapsed = isOpen === undefined ? step === "completed" : !isOpen;
    const [isShowingAllQueries, setIsShowingAllQueries] = (0, _react.useState)(false);
    const [isShowingAllSources, setIsShowingAllSources] = (0, _react.useState)(false);
    const queries = status.queries.map((query)=>{
        var _auditTraces_find;
        return {
            query: query.query,
            trace: (_auditTraces_find = auditTraces.find((trace)=>trace.queryId === query.queryId)) === null || _auditTraces_find === void 0 ? void 0 : _auditTraces_find.results
        };
    });
    const displayQueries = isShowingAllQueries ? queries : queries.slice(0, MAX_QUERIES);
    const sources = (0, _getSourcesForAudit.getSourcesForAudit)(engineSources, auditTraces);
    const displaySources = isShowingAllSources ? sources : sources.slice(0, MAX_SOURCES);
    const toggleOpen = ()=>{
        wasEverOpened.current = true;
        setIsOpen();
    };
    const shouldDisableHeightAnimation = step === "completed" && isOpen && !wasEverOpened.current;
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
        role: "region",
        "aria-label": "Real-time audit",
        sx: {
            mx: isMobile ? 2 : 0,
            border: "1px solid",
            borderColor: step === "completed" && !isCollapsed ? "text.primary" : "outline.border",
            p: 2,
            py: 1.5,
            borderRadius: 2,
            ml: isMobile ? undefined : 7,
            mb: 2,
            minHeight: 50,
            "&:hover": {
                borderColor: isCollapsed ? "text.primary" : undefined
            },
            [`&:hover .${CHECK_CIRCLE_CLASS}`]: {
                color: isCollapsed ? "primary.main" : undefined
            },
            "&:hover p": {
                color: isCollapsed ? "text.primary" : undefined
            }
        },
        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_compositecomponents.AutoAnimateHeight, {
            sx: {
                transition: shouldDisableHeightAnimation ? undefined : "height 0.3s"
            },
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                    sx: {
                        display: "flex",
                        alignItems: "center",
                        justifyContent: "space-between",
                        cursor: "pointer"
                    },
                    onClick: toggleOpen,
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                            sx: {
                                display: "flex",
                                gap: 1,
                                color: step === "completed" && !isCollapsed ? "text.primary" : "text.secondary",
                                alignItems: "center"
                            },
                            children: [
                                step === "completed" || stopped ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.CheckCircle, {
                                    fontSize: "small",
                                    color: isCollapsed ? "inherit" : "primary",
                                    className: CHECK_CIRCLE_CLASS
                                }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.CircularProgress, {
                                        color: "inherit",
                                        size: 16
                                    })
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_StatusMessage.StatusMessage, {
                                    message: stopped ? "Research paused" : status === null || status === void 0 ? void 0 : status.message,
                                    completed: step === "completed"
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.KeyboardArrowDown, {
                            sx: {
                                color: step === "completed" && !isCollapsed ? "text.primary" : "text.secondary",
                                transform: isCollapsed ? undefined : "rotateZ(180deg)"
                            }
                        })
                    ]
                }),
                !isCollapsed && queries.length > 0 ? /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                    sx: {
                        pt: 2
                    },
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                            color: "text.secondary",
                            children: "Searching"
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                            sx: {
                                display: "flex",
                                gap: 2,
                                flexWrap: "wrap",
                                pt: 1
                            },
                            children: [
                                displayQueries.map((query)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_QueryChip.QueryChip, {
                                        renderCard: renderCard,
                                        query: query.query,
                                        trace: query.trace
                                    }, query.query)),
                                !isShowingAllQueries && MAX_QUERIES < queries.length ? /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                                    onClick: ()=>setIsShowingAllQueries(true),
                                    sx: {
                                        p: 1,
                                        borderRadius: 1,
                                        fontSize: 16,
                                        display: "flex",
                                        gap: 0.5,
                                        cursor: "pointer",
                                        bgcolor: "overlay.surface",
                                        outline: "1px solid",
                                        outlineColor: "transparent",
                                        height: "fit-content",
                                        "&:hover": {
                                            bgcolor: "elevation.dp06",
                                            outlineColor: "outline.border"
                                        }
                                    },
                                    children: [
                                        "+",
                                        queries.length - MAX_QUERIES
                                    ]
                                }) : null
                            ]
                        })
                    ]
                }) : null,
                !isCollapsed && sources.length > 0 ? /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                    sx: {
                        pt: 2
                    },
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                            color: "text.secondary",
                            children: "Analyzing"
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                            sx: {
                                display: "flex",
                                gap: 2,
                                flexWrap: "wrap",
                                pt: 1
                            },
                            children: [
                                displaySources.map((source)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_SourceChip.SourceChip, _object_spread_props(_object_spread({}, source), {
                                        onUserInteraction: onUserInteraction,
                                        chunkMap: chunkMap,
                                        externalMap: externalMap
                                    }), source.sourceId)),
                                !isShowingAllSources && MAX_SOURCES < sources.length ? /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                                    onClick: ()=>setIsShowingAllSources(true),
                                    sx: {
                                        p: 1,
                                        borderRadius: 1,
                                        fontSize: 16,
                                        display: "flex",
                                        gap: 0.5,
                                        cursor: "pointer",
                                        bgcolor: "overlay.surface",
                                        outline: "1px solid",
                                        outlineColor: "transparent",
                                        "&:hover": {
                                            bgcolor: "elevation.dp06",
                                            outlineColor: "outline.border"
                                        }
                                    },
                                    children: [
                                        "+",
                                        sources.length - MAX_SOURCES
                                    ]
                                }) : null
                            ]
                        })
                    ]
                }) : null,
                !isCollapsed && (step === "concluding" || step === "completed") ? /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                    sx: {
                        pt: 2
                    },
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                            sx: {
                                mb: 1
                            },
                            color: "text.secondary",
                            children: "Concluding"
                        }),
                        step === "completed" ? /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                            sx: {
                                p: 1,
                                borderRadius: 1,
                                bgcolor: "overlay.surface",
                                fontSize: 16,
                                display: "flex",
                                gap: 0.5,
                                color: "text.secondary",
                                width: "fit-content"
                            },
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.LibraryBooks, {}),
                                "Sufficient information analyzed"
                            ]
                        }) : null
                    ]
                }) : null
            ]
        })
    });
};

//# sourceMappingURL=data:application/json;base64,