{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/chat/src/lib/Chat/Chat/ChatResponse/RealTimeAudit/RealTimeAudit.tsx"],"sourcesContent":["import React, { useRef, useState } from \"react\"\nimport { CqsChunkStory } from \"@rp/common/api-types\"\nimport { SummaryState, createChunkMap } from \"@rp/react/common/hooks\"\nimport { StoredAuditTrace } from \"@rp/react/tanstack-api/chat\"\nimport { LlmEngineSource } from \"@rp/react/tanstack-api/llm-summary\"\nimport { AutoAnimateHeight } from \"@rp/react/web/common/composite-components\"\nimport { Box, CircularProgress, Typography } from \"@rp/react/web/mui/core\"\nimport { CheckCircle, KeyboardArrowDown, LibraryBooks } from \"@rp/react/web/mui/icons\"\nimport { OnUserInteractionProps } from \"../ChatResponse\"\nimport { QueryChip } from \"./QueryChip\"\nimport { SourceChip } from \"./SourceChip\"\nimport { StatusMessage } from \"./StatusMessage\"\nimport { getSourcesForAudit } from \"./getSourcesForAudit\"\n\nconst MAX_QUERIES = 3\nconst MAX_SOURCES = 6\nconst CHECK_CIRCLE_CLASS = \"check-circle-audit\"\n\ntype OptionallyIdAuditTrace = StoredAuditTrace & { queryId?: number }\n\ntype Props = {\n  status: SummaryState[\"statusData\"]\n  renderCard: (story: CqsChunkStory, index: number) => React.ReactElement\n  auditTraces: Array<OptionallyIdAuditTrace>\n  engineSources: Array<LlmEngineSource>\n  chunkMap: ReturnType<typeof createChunkMap>[\"chunkMap\"]\n  externalMap: ReturnType<typeof createChunkMap>[\"externalMap\"]\n  onUserInteraction: (props: OnUserInteractionProps) => void\n  stopped: boolean\n  variant: \"desktop\" | \"mobile\"\n  isOpen?: boolean\n  setIsOpen: () => void\n}\n\nconst RealTimeAudit = ({\n  status,\n  auditTraces,\n  engineSources,\n  renderCard,\n  externalMap,\n  chunkMap,\n  onUserInteraction,\n  stopped,\n  variant,\n  isOpen,\n  setIsOpen,\n}: Props) => {\n  const isMobile = variant === \"mobile\"\n  const { step } = status\n  const wasEverOpened = useRef(false)\n\n  const isCollapsed = isOpen === undefined ? step === \"completed\" : !isOpen\n  const [isShowingAllQueries, setIsShowingAllQueries] = useState(false)\n  const [isShowingAllSources, setIsShowingAllSources] = useState(false)\n\n  const queries = status.queries.map(query => ({\n    query: query.query,\n    trace: auditTraces.find(trace => trace.queryId === query.queryId)?.results,\n  }))\n  const displayQueries = isShowingAllQueries ? queries : queries.slice(0, MAX_QUERIES)\n\n  const sources = getSourcesForAudit(engineSources, auditTraces)\n  const displaySources = isShowingAllSources ? sources : sources.slice(0, MAX_SOURCES)\n\n  const toggleOpen = () => {\n    wasEverOpened.current = true\n    setIsOpen()\n  }\n\n  const shouldDisableHeightAnimation = step === \"completed\" && isOpen && !wasEverOpened.current\n\n  return (\n    <Box\n      role=\"region\"\n      aria-label=\"Real-time audit\"\n      sx={{\n        mx: isMobile ? 2 : 0,\n        border: \"1px solid\",\n        borderColor: step === \"completed\" && !isCollapsed ? \"text.primary\" : \"outline.border\",\n        p: 2,\n        py: 1.5,\n        borderRadius: 2,\n        ml: isMobile ? undefined : 7,\n        mb: 2,\n        minHeight: 50,\n\n        \"&:hover\": {\n          borderColor: isCollapsed ? \"text.primary\" : undefined,\n        },\n        [`&:hover .${CHECK_CIRCLE_CLASS}`]: {\n          color: isCollapsed ? \"primary.main\" : undefined,\n        },\n        \"&:hover p\": {\n          color: isCollapsed ? \"text.primary\" : undefined,\n        },\n      }}\n    >\n      <AutoAnimateHeight\n        sx={{ transition: shouldDisableHeightAnimation ? undefined : \"height 0.3s\" }}\n      >\n        <Box\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            cursor: \"pointer\",\n          }}\n          onClick={toggleOpen}\n        >\n          <Box\n            sx={{\n              display: \"flex\",\n              gap: 1,\n              color: step === \"completed\" && !isCollapsed ? \"text.primary\" : \"text.secondary\",\n              alignItems: \"center\",\n            }}\n          >\n            {step === \"completed\" || stopped ? (\n              <CheckCircle\n                fontSize=\"small\"\n                color={isCollapsed ? \"inherit\" : \"primary\"}\n                className={CHECK_CIRCLE_CLASS}\n              />\n            ) : (\n              <Box>\n                <CircularProgress color=\"inherit\" size={16} />\n              </Box>\n            )}\n            <StatusMessage\n              message={stopped ? \"Research paused\" : status?.message}\n              completed={step === \"completed\"}\n            />\n          </Box>\n\n          <KeyboardArrowDown\n            sx={{\n              color: step === \"completed\" && !isCollapsed ? \"text.primary\" : \"text.secondary\",\n              transform: isCollapsed ? undefined : \"rotateZ(180deg)\",\n            }}\n          />\n        </Box>\n\n        {!isCollapsed && queries.length > 0 ? (\n          <Box sx={{ pt: 2 }}>\n            <Typography color=\"text.secondary\">Searching</Typography>\n            <Box sx={{ display: \"flex\", gap: 2, flexWrap: \"wrap\", pt: 1 }}>\n              {displayQueries.map(query => (\n                <QueryChip\n                  key={query.query}\n                  renderCard={renderCard}\n                  query={query.query}\n                  trace={query.trace}\n                />\n              ))}\n              {!isShowingAllQueries && MAX_QUERIES < queries.length ? (\n                <Box\n                  onClick={() => setIsShowingAllQueries(true)}\n                  sx={{\n                    p: 1,\n                    borderRadius: 1,\n                    fontSize: 16,\n                    display: \"flex\",\n                    gap: 0.5,\n                    cursor: \"pointer\",\n                    bgcolor: \"overlay.surface\",\n                    outline: \"1px solid\",\n                    outlineColor: \"transparent\",\n                    height: \"fit-content\",\n\n                    \"&:hover\": {\n                      bgcolor: \"elevation.dp06\",\n                      outlineColor: \"outline.border\",\n                    },\n                  }}\n                >\n                  +{queries.length - MAX_QUERIES}\n                </Box>\n              ) : null}\n            </Box>\n          </Box>\n        ) : null}\n\n        {!isCollapsed && sources.length > 0 ? (\n          <Box sx={{ pt: 2 }}>\n            <Typography color=\"text.secondary\">Analyzing</Typography>\n            <Box sx={{ display: \"flex\", gap: 2, flexWrap: \"wrap\", pt: 1 }}>\n              {displaySources.map(source => (\n                <SourceChip\n                  key={source.sourceId}\n                  {...source}\n                  onUserInteraction={onUserInteraction}\n                  chunkMap={chunkMap}\n                  externalMap={externalMap}\n                />\n              ))}\n              {!isShowingAllSources && MAX_SOURCES < sources.length ? (\n                <Box\n                  onClick={() => setIsShowingAllSources(true)}\n                  sx={{\n                    p: 1,\n                    borderRadius: 1,\n                    fontSize: 16,\n                    display: \"flex\",\n                    gap: 0.5,\n                    cursor: \"pointer\",\n                    bgcolor: \"overlay.surface\",\n                    outline: \"1px solid\",\n                    outlineColor: \"transparent\",\n\n                    \"&:hover\": {\n                      bgcolor: \"elevation.dp06\",\n                      outlineColor: \"outline.border\",\n                    },\n                  }}\n                >\n                  +{sources.length - MAX_SOURCES}\n                </Box>\n              ) : null}\n            </Box>\n          </Box>\n        ) : null}\n\n        {!isCollapsed && (step === \"concluding\" || step === \"completed\") ? (\n          <Box sx={{ pt: 2 }}>\n            <Typography sx={{ mb: 1 }} color=\"text.secondary\">\n              Concluding\n            </Typography>\n            {step === \"completed\" ? (\n              <Box\n                sx={{\n                  p: 1,\n                  borderRadius: 1,\n                  bgcolor: \"overlay.surface\",\n                  fontSize: 16,\n                  display: \"flex\",\n                  gap: 0.5,\n                  color: \"text.secondary\",\n                  width: \"fit-content\",\n                }}\n              >\n                <LibraryBooks />\n                Sufficient information analyzed\n              </Box>\n            ) : null}\n          </Box>\n        ) : null}\n      </AutoAnimateHeight>\n    </Box>\n  )\n}\nexport { RealTimeAudit }\n"],"names":["RealTimeAudit","MAX_QUERIES","MAX_SOURCES","CHECK_CIRCLE_CLASS","status","auditTraces","engineSources","renderCard","externalMap","chunkMap","onUserInteraction","stopped","variant","isOpen","setIsOpen","isMobile","step","wasEverOpened","useRef","isCollapsed","undefined","isShowingAllQueries","setIsShowingAllQueries","useState","isShowingAllSources","setIsShowingAllSources","queries","map","query","trace","find","queryId","results","displayQueries","slice","sources","getSourcesForAudit","displaySources","toggleOpen","current","shouldDisableHeightAnimation","Box","role","aria-label","sx","mx","border","borderColor","p","py","borderRadius","ml","mb","minHeight","color","AutoAnimateHeight","transition","display","alignItems","justifyContent","cursor","onClick","gap","CheckCircle","fontSize","className","CircularProgress","size","StatusMessage","message","completed","KeyboardArrowDown","transform","length","pt","Typography","flexWrap","QueryChip","bgcolor","outline","outlineColor","height","source","SourceChip","sourceId","width","LibraryBooks"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}