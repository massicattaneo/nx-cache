{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/watchlists/src/lib/WatchlistDataTabs/CustomDataView/hooks/useColumnCategories.ts"],"sourcesContent":["import { useMemo } from \"react\"\nimport { FinanceDataTabs } from \"../../../hooks/useWatchlistsFinanceDataTabNavigation\"\nimport { watchlistDataTables } from \"../../tables\"\n\nexport function useColumnCategories(searchQuery: string) {\n  // Get all available categories (excluding custom and smartGrid)\n  const availableCategories = useMemo(() => {\n    const allCategories = Object.keys(watchlistDataTables).filter(\n      (key): key is FinanceDataTabs => key !== \"custom\" && key !== \"smartGrid\",\n    ) as Array<FinanceDataTabs>\n\n    // If there's no search query, return all categories\n    if (!searchQuery.trim()) {\n      return allCategories\n    }\n\n    // Filter categories that have at least one matching column\n    const query = searchQuery.toLowerCase()\n    return allCategories.filter(category => {\n      const table = watchlistDataTables[category]\n      if (!table) return false\n\n      // Check if any column in this category matches the search\n      return table.columns.some(columnDef => {\n        // Skip built-in columns\n        if (columnDef.id === \"ticker\" || columnDef.id === \"name\" || columnDef.id === \"actions\") {\n          return false\n        }\n\n        if (columnDef.meta?.endpoint && columnDef.meta?.columnKeys) {\n          return columnDef.meta.columnKeys.some((columnKey: string | number | symbol) => {\n            const displayName = columnDef.meta?.menuLabel || String(columnKey)\n            return (\n              displayName.toLowerCase().includes(query) ||\n              String(columnKey).toLowerCase().includes(query)\n            )\n          })\n        }\n        return false\n      })\n    })\n  }, [searchQuery])\n\n  return { availableCategories }\n}\n"],"names":["useColumnCategories","searchQuery","availableCategories","useMemo","allCategories","Object","keys","watchlistDataTables","filter","key","trim","query","toLowerCase","category","table","columns","some","columnDef","id","meta","endpoint","columnKeys","columnKey","displayName","menuLabel","String","includes"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAIgBA;;;eAAAA;;;uBAJQ;wBAEY;AAE7B,SAASA,oBAAoBC,WAAmB;IACrD,gEAAgE;IAChE,MAAMC,sBAAsBC,IAAAA,cAAO,EAAC;QAClC,MAAMC,gBAAgBC,OAAOC,IAAI,CAACC,2BAAmB,EAAEC,MAAM,CAC3D,CAACC,MAAgCA,QAAQ,YAAYA,QAAQ;QAG/D,oDAAoD;QACpD,IAAI,CAACR,YAAYS,IAAI,IAAI;YACvB,OAAON;QACT;QAEA,2DAA2D;QAC3D,MAAMO,QAAQV,YAAYW,WAAW;QACrC,OAAOR,cAAcI,MAAM,CAACK,CAAAA;YAC1B,MAAMC,QAAQP,2BAAmB,CAACM,SAAS;YAC3C,IAAI,CAACC,OAAO,OAAO;YAEnB,0DAA0D;YAC1D,OAAOA,MAAMC,OAAO,CAACC,IAAI,CAACC,CAAAA;oBAMpBA,iBAA4BA;gBALhC,wBAAwB;gBACxB,IAAIA,UAAUC,EAAE,KAAK,YAAYD,UAAUC,EAAE,KAAK,UAAUD,UAAUC,EAAE,KAAK,WAAW;oBACtF,OAAO;gBACT;gBAEA,IAAID,EAAAA,kBAAAA,UAAUE,IAAI,cAAdF,sCAAAA,gBAAgBG,QAAQ,OAAIH,mBAAAA,UAAUE,IAAI,cAAdF,uCAAAA,iBAAgBI,UAAU,GAAE;oBAC1D,OAAOJ,UAAUE,IAAI,CAACE,UAAU,CAACL,IAAI,CAAC,CAACM;4BACjBL;wBAApB,MAAMM,cAAcN,EAAAA,kBAAAA,UAAUE,IAAI,cAAdF,sCAAAA,gBAAgBO,SAAS,KAAIC,OAAOH;wBACxD,OACEC,YAAYX,WAAW,GAAGc,QAAQ,CAACf,UACnCc,OAAOH,WAAWV,WAAW,GAAGc,QAAQ,CAACf;oBAE7C;gBACF;gBACA,OAAO;YACT;QACF;IACF,GAAG;QAACV;KAAY;IAEhB,OAAO;QAAEC;IAAoB;AAC/B"}