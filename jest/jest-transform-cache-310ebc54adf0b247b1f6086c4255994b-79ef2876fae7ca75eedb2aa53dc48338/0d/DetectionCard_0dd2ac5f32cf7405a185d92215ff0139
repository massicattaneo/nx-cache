a614701c88a28a0d6f5da2fa3f61c432
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "DetectionCard", {
    enumerable: true,
    get: function() {
        return DetectionCard;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _documentviewer = require("@rp/react/web/common/document-viewer");
const _rpjson = require("@rp/react/web/rpjson");
const _Detectionsstyles = require("./Detections.styles");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const DetectionCard = ({ rpjsonDocument, onClick, detection, selected = false })=>{
    const { key, pnum, snum, queryType } = detection;
    const highlights = (0, _documentviewer.useEntitiesStyles)([
        key
    ], true);
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_Detectionsstyles.DetectionCardContainer, {
        selected: selected,
        onClick: ()=>onClick(key),
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_rpjson.RpJsonAnnotationStyles, {
            highlights: [
                "entity",
                "rp_topic"
            ].includes(queryType) ? highlights : [],
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_rpjson.RpJsonParagraph, {
                paragraphNumber: pnum,
                rpjson: rpjsonDocument,
                sentenceNumber: snum,
                markupDetections: true
            })
        })
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2Rpc2NvdmVyeS1zaWRlYmFyL2RvY3VtZW50LWRpc2NvdmVyeS9zcmMvbGliL0RldGVjdGlvbnMvRGV0ZWN0aW9uQ2FyZC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgeyBScEpzb25Eb2N1bWVudCB9IGZyb20gXCJAcnAvcmVhY3QvcnBqc29uL3R5cGVzXCJcbmltcG9ydCB7IHVzZUVudGl0aWVzU3R5bGVzIH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvY29tbW9uL2RvY3VtZW50LXZpZXdlclwiXG4vLyBQYWNrYWdlc1xuaW1wb3J0IHsgUnBKc29uQW5ub3RhdGlvblN0eWxlcywgUnBKc29uUGFyYWdyYXBoIH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvcnBqc29uXCJcbi8vIFN0eWxlc1xuaW1wb3J0IHsgRGV0ZWN0aW9uQ2FyZENvbnRhaW5lciB9IGZyb20gXCIuL0RldGVjdGlvbnMuc3R5bGVzXCJcblxudHlwZSBQcm9wcyA9IHtcbiAgcnBqc29uRG9jdW1lbnQ6IFJwSnNvbkRvY3VtZW50XG4gIGRldGVjdGlvbjoge1xuICAgIHF1ZXJ5VHlwZTogc3RyaW5nXG4gICAga2V5OiBzdHJpbmdcbiAgICBwbnVtOiBudW1iZXJcbiAgICBzbnVtOiBudW1iZXJcbiAgfVxuICBvbkNsaWNrOiAoZW50aXR5SWQ6IHN0cmluZykgPT4gdm9pZFxuICBzZWxlY3RlZD86IGJvb2xlYW5cbn1cblxuY29uc3QgRGV0ZWN0aW9uQ2FyZCA9ICh7IHJwanNvbkRvY3VtZW50LCBvbkNsaWNrLCBkZXRlY3Rpb24sIHNlbGVjdGVkID0gZmFsc2UgfTogUHJvcHMpID0+IHtcbiAgY29uc3QgeyBrZXksIHBudW0sIHNudW0sIHF1ZXJ5VHlwZSB9ID0gZGV0ZWN0aW9uXG4gIGNvbnN0IGhpZ2hsaWdodHMgPSB1c2VFbnRpdGllc1N0eWxlcyhba2V5XSwgdHJ1ZSlcblxuICByZXR1cm4gKFxuICAgIDxEZXRlY3Rpb25DYXJkQ29udGFpbmVyIHNlbGVjdGVkPXtzZWxlY3RlZH0gb25DbGljaz17KCkgPT4gb25DbGljayhrZXkpfT5cbiAgICAgIDxScEpzb25Bbm5vdGF0aW9uU3R5bGVzXG4gICAgICAgIGhpZ2hsaWdodHM9e1tcImVudGl0eVwiLCBcInJwX3RvcGljXCJdLmluY2x1ZGVzKHF1ZXJ5VHlwZSkgPyBoaWdobGlnaHRzIDogW119XG4gICAgICA+XG4gICAgICAgIDxScEpzb25QYXJhZ3JhcGhcbiAgICAgICAgICBwYXJhZ3JhcGhOdW1iZXI9e3BudW19XG4gICAgICAgICAgcnBqc29uPXtycGpzb25Eb2N1bWVudH1cbiAgICAgICAgICBzZW50ZW5jZU51bWJlcj17c251bX1cbiAgICAgICAgICBtYXJrdXBEZXRlY3Rpb25zXG4gICAgICAgIC8+XG4gICAgICA8L1JwSnNvbkFubm90YXRpb25TdHlsZXM+XG4gICAgPC9EZXRlY3Rpb25DYXJkQ29udGFpbmVyPlxuICApXG59XG5cbmV4cG9ydCB7IERldGVjdGlvbkNhcmQgfVxuIl0sIm5hbWVzIjpbIkRldGVjdGlvbkNhcmQiLCJycGpzb25Eb2N1bWVudCIsIm9uQ2xpY2siLCJkZXRlY3Rpb24iLCJzZWxlY3RlZCIsImtleSIsInBudW0iLCJzbnVtIiwicXVlcnlUeXBlIiwiaGlnaGxpZ2h0cyIsInVzZUVudGl0aWVzU3R5bGVzIiwiRGV0ZWN0aW9uQ2FyZENvbnRhaW5lciIsIlJwSnNvbkFubm90YXRpb25TdHlsZXMiLCJpbmNsdWRlcyIsIlJwSnNvblBhcmFncmFwaCIsInBhcmFncmFwaE51bWJlciIsInJwanNvbiIsInNlbnRlbmNlTnVtYmVyIiwibWFya3VwRGV0ZWN0aW9ucyJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkF3Q1NBOzs7ZUFBQUE7Ozs7OERBeENTO2dDQUVnQjt3QkFFc0I7a0NBRWpCOzs7Ozs7QUFjdkMsTUFBTUEsZ0JBQWdCLENBQUMsRUFBRUMsY0FBYyxFQUFFQyxPQUFPLEVBQUVDLFNBQVMsRUFBRUMsV0FBVyxLQUFLLEVBQVM7SUFDcEYsTUFBTSxFQUFFQyxHQUFHLEVBQUVDLElBQUksRUFBRUMsSUFBSSxFQUFFQyxTQUFTLEVBQUUsR0FBR0w7SUFDdkMsTUFBTU0sYUFBYUMsSUFBQUEsaUNBQWlCLEVBQUM7UUFBQ0w7S0FBSSxFQUFFO0lBRTVDLHFCQUNFLHFCQUFDTSx3Q0FBc0I7UUFBQ1AsVUFBVUE7UUFBVUYsU0FBUyxJQUFNQSxRQUFRRztrQkFDakUsY0FBQSxxQkFBQ08sOEJBQXNCO1lBQ3JCSCxZQUFZO2dCQUFDO2dCQUFVO2FBQVcsQ0FBQ0ksUUFBUSxDQUFDTCxhQUFhQyxhQUFhLEVBQUU7c0JBRXhFLGNBQUEscUJBQUNLLHVCQUFlO2dCQUNkQyxpQkFBaUJUO2dCQUNqQlUsUUFBUWY7Z0JBQ1JnQixnQkFBZ0JWO2dCQUNoQlcsZ0JBQWdCOzs7O0FBSzFCIn0=