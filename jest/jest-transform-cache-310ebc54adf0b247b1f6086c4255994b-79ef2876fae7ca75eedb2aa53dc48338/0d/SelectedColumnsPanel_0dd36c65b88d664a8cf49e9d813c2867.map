{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/watchlists/src/lib/WatchlistDataTabs/CustomDataView/components/SelectedColumnsPanel.tsx"],"sourcesContent":["import React, { useMemo } from \"react\"\nimport { ReOrderableList } from \"@rp/react/web/common/composite-components\"\nimport { Box, Typography } from \"@rp/react/web/mui/core\"\nimport { ViewColumn } from \"@rp/react/web/mui/icons\"\nimport { SelectedColumnWithId } from \"../types\"\nimport { SelectedColumnItem } from \"./SelectedColumnItem\"\n\ntype SelectedColumnsPanelProps = {\n  selectedColumns: Array<SelectedColumnWithId>\n  onReorderColumns: (reorderedColumns: Array<SelectedColumnWithId>) => void\n  onDeleteColumn: (column: SelectedColumnWithId) => void\n}\n\nfunction SelectedColumnsPanel({\n  selectedColumns,\n  onReorderColumns,\n  onDeleteColumn,\n}: SelectedColumnsPanelProps) {\n  // Create memoized component with delete handler\n  const ListItemWithDelete = useMemo(() => {\n    return React.forwardRef<\n      unknown,\n      { item: SelectedColumnWithId; dragOptions?: unknown; componentProps?: unknown }\n    >((props, ref) => {\n      return (\n        <SelectedColumnItem\n          {...props}\n          ref={ref as React.Ref<HTMLDivElement>}\n          onDelete={onDeleteColumn}\n        />\n      )\n    })\n  }, [onDeleteColumn])\n\n  // Create memoized preview component\n  const PreviewListItem = useMemo(() => {\n    return ({ item }: { item: SelectedColumnWithId }) => (\n      <SelectedColumnItem item={item} variant=\"preview\" />\n    )\n  }, [])\n\n  return (\n    <Box\n      sx={{\n        width: 275,\n        border: 1,\n        borderColor: \"divider\",\n        borderRadius: 2,\n        p: 2,\n        overflow: \"auto\",\n        backgroundColor: \"elevation.dp08\",\n      }}\n    >\n      {selectedColumns.length === 0 ? (\n        <Box\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            height: \"100%\",\n            border: \"2px\",\n            borderColor: \"divider\",\n            borderRadius: 2,\n            color: \"text.secondary\",\n          }}\n        >\n          <Box sx={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", gap: 1 }}>\n            <ViewColumn sx={{ fontSize: 24 }} />\n            <Typography variant=\"body2\" sx={{ color: \"text.secondary\", textAlign: \"center\" }}>\n              The columns you select <br /> will appear here\n            </Typography>\n          </Box>\n        </Box>\n      ) : (\n        <>\n          <Typography\n            variant=\"body2\"\n            sx={{\n              mb: 2,\n              color: \"text.secondary\",\n              fontWeight: 500,\n              textTransform: \"uppercase\",\n              letterSpacing: 0.5,\n              fontSize: \"0.75rem\",\n            }}\n          >\n            COLUMN ORDER\n          </Typography>\n          <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n            <ReOrderableList\n              list={selectedColumns}\n              ListItem={ListItemWithDelete}\n              PreviewListItem={PreviewListItem}\n              onDrop={onReorderColumns}\n            />\n          </Box>\n        </>\n      )}\n    </Box>\n  )\n}\n\nexport { SelectedColumnsPanel }\n"],"names":["SelectedColumnsPanel","selectedColumns","onReorderColumns","onDeleteColumn","ListItemWithDelete","useMemo","React","forwardRef","props","ref","SelectedColumnItem","onDelete","PreviewListItem","item","variant","Box","sx","width","border","borderColor","borderRadius","p","overflow","backgroundColor","length","display","alignItems","justifyContent","height","color","flexDirection","gap","ViewColumn","fontSize","Typography","textAlign","br","mb","fontWeight","textTransform","letterSpacing","ReOrderableList","list","ListItem","onDrop"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAsGSA;;;eAAAA;;;;+DAtGsB;qCACC;sBACA;uBACL;oCAEQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQnC,SAASA,qBAAqB,EAC5BC,eAAe,EACfC,gBAAgB,EAChBC,cAAc,EACY;IAC1B,gDAAgD;IAChD,MAAMC,qBAAqBC,IAAAA,cAAO,EAAC;QACjC,qBAAOC,cAAK,CAACC,UAAU,CAGrB,CAACC,OAAOC;YACR,qBACE,qBAACC,sCAAkB,0CACbF;gBACJC,KAAKA;gBACLE,UAAUR;;QAGhB;IACF,GAAG;QAACA;KAAe;IAEnB,oCAAoC;IACpC,MAAMS,kBAAkBP,IAAAA,cAAO,EAAC;QAC9B,OAAO,CAAC,EAAEQ,IAAI,EAAkC,iBAC9C,qBAACH,sCAAkB;gBAACG,MAAMA;gBAAMC,SAAQ;;IAE5C,GAAG,EAAE;IAEL,qBACE,qBAACC,SAAG;QACFC,IAAI;YACFC,OAAO;YACPC,QAAQ;YACRC,aAAa;YACbC,cAAc;YACdC,GAAG;YACHC,UAAU;YACVC,iBAAiB;QACnB;kBAECtB,gBAAgBuB,MAAM,KAAK,kBAC1B,qBAACT,SAAG;YACFC,IAAI;gBACFS,SAAS;gBACTC,YAAY;gBACZC,gBAAgB;gBAChBC,QAAQ;gBACRV,QAAQ;gBACRC,aAAa;gBACbC,cAAc;gBACdS,OAAO;YACT;sBAEA,cAAA,sBAACd,SAAG;gBAACC,IAAI;oBAAES,SAAS;oBAAQK,eAAe;oBAAUJ,YAAY;oBAAUK,KAAK;gBAAE;;kCAChF,qBAACC,iBAAU;wBAAChB,IAAI;4BAAEiB,UAAU;wBAAG;;kCAC/B,sBAACC,gBAAU;wBAACpB,SAAQ;wBAAQE,IAAI;4BAAEa,OAAO;4BAAkBM,WAAW;wBAAS;;4BAAG;0CACzD,qBAACC;4BAAK;;;;;2BAKnC;;8BACE,qBAACF,gBAAU;oBACTpB,SAAQ;oBACRE,IAAI;wBACFqB,IAAI;wBACJR,OAAO;wBACPS,YAAY;wBACZC,eAAe;wBACfC,eAAe;wBACfP,UAAU;oBACZ;8BACD;;8BAGD,qBAAClB,SAAG;oBAACC,IAAI;wBAAES,SAAS;wBAAQK,eAAe;wBAAUC,KAAK;oBAAE;8BAC1D,cAAA,qBAACU,oCAAe;wBACdC,MAAMzC;wBACN0C,UAAUvC;wBACVQ,iBAAiBA;wBACjBgC,QAAQ1C;;;;;;AAOtB"}