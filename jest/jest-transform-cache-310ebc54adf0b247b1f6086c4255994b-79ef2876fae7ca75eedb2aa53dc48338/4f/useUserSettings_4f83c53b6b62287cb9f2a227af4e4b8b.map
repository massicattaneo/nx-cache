{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/hooks/src/useUserSettings.ts"],"sourcesContent":["import { useCallback, useMemo } from \"react\"\nimport { useLocalStorage } from \"./useLocalStorage\"\n\ntype UserSettingsPage =\n  | \"savedSearches\"\n  | \"recentSearches\"\n  | \"publicSearches\"\n  | \"publicWatchlists\"\n  | \"files\"\n  | \"userWatchlists\"\n  | \"watchlistTable\"\n  | \"findResults\"\n  | \"notifications\"\n  | \"chats\"\n\ntype SelectedSort<T> = {\n  field: keyof T\n  direction: \"desc\" | \"asc\"\n}\n\ntype UserSettings<T> = {\n  sorting: Record<UserSettingsPage, SelectedSort<T>>\n}\n\ntype DefaultSorting = Record<string, string | number>\n\nconst LOCAL_STORAGE_KEY = \"userSettings\"\nconst DEFAULT_SETTINGS: UserSettings<DefaultSorting> = {\n  sorting: {\n    files: {\n      field: \"date\",\n      direction: \"desc\",\n    },\n    savedSearches: {\n      field: \"lastExecuted\",\n      direction: \"desc\",\n    },\n    recentSearches: {\n      field: \"lastExecuted\",\n      direction: \"desc\",\n    },\n    publicSearches: {\n      field: \"lastExecuted\",\n      direction: \"desc\",\n    },\n    publicWatchlists: {\n      field: \"lastUpdated\",\n      direction: \"desc\",\n    },\n    watchlistTable: {\n      field: \"name\",\n      direction: \"asc\",\n    },\n    userWatchlists: {\n      field: \"name\",\n      direction: \"asc\",\n    },\n    findResults: {\n      field: \"lastUpdated\",\n      direction: \"desc\",\n    },\n    notifications: {\n      field: \"name\",\n      direction: \"asc\",\n    },\n    chats: {\n      field: \"dateCreated\",\n      direction: \"desc\",\n    },\n  },\n}\n\nfunction useUserSettings<T extends DefaultSorting>() {\n  const [userSettings, setUserSettings] = useLocalStorage<UserSettings<T>>(\n    LOCAL_STORAGE_KEY,\n    DEFAULT_SETTINGS,\n  )\n\n  const setSorting = useCallback(\n    (page: UserSettingsPage, value: SelectedSort<T>) => {\n      setUserSettings({\n        ...userSettings,\n        sorting: {\n          ...userSettings.sorting,\n          [page]: value,\n        },\n      })\n    },\n    [setUserSettings, userSettings],\n  )\n\n  // Each time we add a new setting, it will be undefined on localStorage\n  const safeUserSettings: UserSettings<T> = useMemo(\n    () => ({ sorting: { ...DEFAULT_SETTINGS.sorting, ...userSettings.sorting } }),\n    [userSettings],\n  )\n\n  return {\n    userSettings: safeUserSettings,\n    actions: {\n      setSorting,\n    },\n  }\n}\n\nexport { useUserSettings }\n"],"names":["useUserSettings","LOCAL_STORAGE_KEY","DEFAULT_SETTINGS","sorting","files","field","direction","savedSearches","recentSearches","publicSearches","publicWatchlists","watchlistTable","userWatchlists","findResults","notifications","chats","userSettings","setUserSettings","useLocalStorage","setSorting","useCallback","page","value","safeUserSettings","useMemo","actions"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAyGSA;;;eAAAA;;;uBAzG4B;iCACL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBhC,MAAMC,oBAAoB;AAC1B,MAAMC,mBAAiD;IACrDC,SAAS;QACPC,OAAO;YACLC,OAAO;YACPC,WAAW;QACb;QACAC,eAAe;YACbF,OAAO;YACPC,WAAW;QACb;QACAE,gBAAgB;YACdH,OAAO;YACPC,WAAW;QACb;QACAG,gBAAgB;YACdJ,OAAO;YACPC,WAAW;QACb;QACAI,kBAAkB;YAChBL,OAAO;YACPC,WAAW;QACb;QACAK,gBAAgB;YACdN,OAAO;YACPC,WAAW;QACb;QACAM,gBAAgB;YACdP,OAAO;YACPC,WAAW;QACb;QACAO,aAAa;YACXR,OAAO;YACPC,WAAW;QACb;QACAQ,eAAe;YACbT,OAAO;YACPC,WAAW;QACb;QACAS,OAAO;YACLV,OAAO;YACPC,WAAW;QACb;IACF;AACF;AAEA,SAASN;IACP,MAAM,CAACgB,cAAcC,gBAAgB,GAAGC,IAAAA,gCAAe,EACrDjB,mBACAC;IAGF,MAAMiB,aAAaC,IAAAA,kBAAW,EAC5B,CAACC,MAAwBC;QACvBL,gBAAgB,wCACXD;YACHb,SAAS,wCACJa,aAAab,OAAO;gBACvB,CAACkB,KAAK,EAAEC;;;IAGd,GACA;QAACL;QAAiBD;KAAa;IAGjC,uEAAuE;IACvE,MAAMO,mBAAoCC,IAAAA,cAAO,EAC/C,IAAO,CAAA;YAAErB,SAAS,mBAAKD,iBAAiBC,OAAO,EAAKa,aAAab,OAAO;QAAG,CAAA,GAC3E;QAACa;KAAa;IAGhB,OAAO;QACLA,cAAcO;QACdE,SAAS;YACPN;QACF;IACF;AACF"}