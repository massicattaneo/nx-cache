334ec0b0b200186e846c1c2814c5abfc
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "useInitUserSessions", {
    enumerable: true,
    get: function() {
        return useInitUserSessions;
    }
});
const _react = require("react");
const _datefns = require("date-fns");
const _clerkreact = require("@clerk/clerk-react");
const _browserrum = require("@datadog/browser-rum");
const _adapters = require("@rp/adapters");
const _providers = require("@rp/react/common/providers");
const _hooks = require("@rp/react/web/common/hooks");
const _utils = require("@rp/react/web/common/vendors/utils");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function useInitUserSessions() {
    var _user_organizationMemberships_, _user_organizationMemberships_1, _user_primaryEmailAddress, _quota_subscriptionRenewalDate;
    const { isMobile } = (0, _hooks.useDeviceInfo)();
    const { user } = (0, _clerkreact.useUser)();
    const { quota } = (0, _providers.useAccount)();
    var _user_organizationMemberships__organization_name;
    const companyName = (_user_organizationMemberships__organization_name = user === null || user === void 0 ? void 0 : (_user_organizationMemberships_ = user.organizationMemberships[0]) === null || _user_organizationMemberships_ === void 0 ? void 0 : _user_organizationMemberships_.organization.name) !== null && _user_organizationMemberships__organization_name !== void 0 ? _user_organizationMemberships__organization_name : "";
    var _user_organizationMemberships__organization_id;
    const companyId = (_user_organizationMemberships__organization_id = user === null || user === void 0 ? void 0 : (_user_organizationMemberships_1 = user.organizationMemberships[0]) === null || _user_organizationMemberships_1 === void 0 ? void 0 : _user_organizationMemberships_1.organization.id) !== null && _user_organizationMemberships__organization_id !== void 0 ? _user_organizationMemberships__organization_id : "";
    var _user_id;
    const userId = (_user_id = user === null || user === void 0 ? void 0 : user.id) !== null && _user_id !== void 0 ? _user_id : "";
    var _user_primaryEmailAddress_emailAddress;
    const userEmail = (_user_primaryEmailAddress_emailAddress = user === null || user === void 0 ? void 0 : (_user_primaryEmailAddress = user.primaryEmailAddress) === null || _user_primaryEmailAddress === void 0 ? void 0 : _user_primaryEmailAddress.emailAddress) !== null && _user_primaryEmailAddress_emailAddress !== void 0 ? _user_primaryEmailAddress_emailAddress : "";
    var _user_fullName;
    const userName = (_user_fullName = user === null || user === void 0 ? void 0 : user.fullName) !== null && _user_fullName !== void 0 ? _user_fullName : "";
    var _user_createdAt;
    const userCreatedAt = (0, _datefns.getUnixTime)(new Date((_user_createdAt = user === null || user === void 0 ? void 0 : user.createdAt) !== null && _user_createdAt !== void 0 ? _user_createdAt : ""));
    var _user_firstName;
    const firstName = (_user_firstName = user === null || user === void 0 ? void 0 : user.firstName) !== null && _user_firstName !== void 0 ? _user_firstName : "";
    var _user_lastName;
    const lastName = (_user_lastName = user === null || user === void 0 ? void 0 : user.lastName) !== null && _user_lastName !== void 0 ? _user_lastName : "";
    var _quota_subscriptionStatus;
    const subscriptionStatus = (_quota_subscriptionStatus = quota === null || quota === void 0 ? void 0 : quota.subscriptionStatus) !== null && _quota_subscriptionStatus !== void 0 ? _quota_subscriptionStatus : "";
    var _quota_subscriptionSource;
    const subscriptionSource = (_quota_subscriptionSource = quota === null || quota === void 0 ? void 0 : quota.subscriptionSource) !== null && _quota_subscriptionSource !== void 0 ? _quota_subscriptionSource : "";
    var _quota_subscriptionRenewalDate_toString;
    const subscriptionRenewalDate = (_quota_subscriptionRenewalDate_toString = quota === null || quota === void 0 ? void 0 : (_quota_subscriptionRenewalDate = quota.subscriptionRenewalDate) === null || _quota_subscriptionRenewalDate === void 0 ? void 0 : _quota_subscriptionRenewalDate.toString()) !== null && _quota_subscriptionRenewalDate_toString !== void 0 ? _quota_subscriptionRenewalDate_toString : "";
    const { hasEntitlement } = (0, _providers.useAccount)();
    const enableIntercomLauncher = hasEntitlement("support:intercom");
    const tagManagerUser = (0, _react.useMemo)(()=>{
        return _object_spread({
            userId,
            // intercomHash: user.id, // This makes the connection insecure and should be fixed!
            userName,
            userEmail,
            userCreatedAt,
            subscriptionStatus,
            subscriptionSource,
            subscriptionRenewalDate
        }, companyId ? {
            companyId
        } : {}, companyName ? {
            companyName
        } : {});
    }, [
        userId,
        userName,
        userEmail,
        userCreatedAt,
        companyId,
        companyName,
        subscriptionStatus,
        subscriptionSource,
        subscriptionRenewalDate
    ]);
    const hotjarUser = (0, _react.useMemo)(()=>{
        return {
            userEmail,
            firstName,
            lastName,
            companyName
        };
    }, [
        userEmail,
        firstName,
        lastName,
        companyName
    ]);
    const sentryUser = (0, _react.useMemo)(()=>{
        return {
            id: userId,
            companyId
        };
    }, [
        companyId,
        userId
    ]);
    const dataDogUser = (0, _react.useMemo)(()=>{
        return {
            id: userId,
            companyId
        };
    }, [
        userId,
        companyId
    ]);
    (0, _react.useEffect)(()=>{
        if (!tagManagerUser.userId) return;
        _utils.tagManagerEvents.login(tagManagerUser);
        (0, _utils.identifyHotjar)(hotjarUser);
        (0, _utils.identifySentryUser)(sentryUser);
        (0, _utils.identifyDatadogUser)(dataDogUser);
        return ()=>{
            _utils.tagManagerEvents.logout();
            _adapters.adapters.customerIo.logout();
            _browserrum.datadogRum.clearUser();
        };
    }, [
        tagManagerUser,
        hotjarUser,
        sentryUser,
        dataDogUser
    ]);
    (0, _react.useEffect)(()=>{
        if (!enableIntercomLauncher) {
            return;
        }
        isMobile ? _utils.tagManagerEvents.isMobile() : _utils.tagManagerEvents.isDesktop();
    }, [
        enableIntercomLauncher,
        isMobile
    ]);
    return null;
}

//# sourceMappingURL=data:application/json;base64,