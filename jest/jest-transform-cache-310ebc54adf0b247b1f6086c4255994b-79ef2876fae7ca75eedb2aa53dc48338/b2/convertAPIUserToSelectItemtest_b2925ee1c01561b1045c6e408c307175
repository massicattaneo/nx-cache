bdbb1f128b25f41f49c68705bc7ca2eb
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _file = require("@rp/react/tanstack-api/file");
const _convertAPIUserToSelectItem = require("./convertAPIUserToSelectItem");
describe("convertAPIUserToSelectItem", ()=>{
    const selectItems = _file.mockPrivateSharedContentOwners.map(_convertAPIUserToSelectItem.convertAPIUserToSelectItem);
    it("should convert API users to a select items", ()=>{
        expect(selectItems).toStrictEqual([
            {
                label: "Carol Carpenter",
                value: "user-id-0"
            },
            {
                label: "Henry Hilton",
                value: "user-id-1"
            },
            {
                label: "Alice Anderson",
                value: "user-id-2"
            },
            {
                label: "Frank Franklin",
                value: "user-id-3"
            },
            {
                label: "Dave Donaldson",
                value: "user-id-4"
            },
            {
                label: "Bob Baker",
                value: "user-id-5"
            },
            {
                label: "Gertrude Gould",
                value: "user-id-6"
            },
            {
                label: "Ellen Ellis",
                value: "user-id-7"
            }
        ]);
    });
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2FwcHMvY2xpZW50LXdlYi9zcmMvYXBwL3BhZ2VzL0ZpbGVzL0ZpbGVzVjIvdXRpbHMvY29udmVydEFQSVVzZXJUb1NlbGVjdEl0ZW0udGVzdC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBtb2NrUHJpdmF0ZVNoYXJlZENvbnRlbnRPd25lcnMgfSBmcm9tIFwiQHJwL3JlYWN0L3RhbnN0YWNrLWFwaS9maWxlXCJcbmltcG9ydCB7IGNvbnZlcnRBUElVc2VyVG9TZWxlY3RJdGVtIH0gZnJvbSBcIi4vY29udmVydEFQSVVzZXJUb1NlbGVjdEl0ZW1cIlxuXG5kZXNjcmliZShcImNvbnZlcnRBUElVc2VyVG9TZWxlY3RJdGVtXCIsICgpID0+IHtcbiAgY29uc3Qgc2VsZWN0SXRlbXMgPSBtb2NrUHJpdmF0ZVNoYXJlZENvbnRlbnRPd25lcnMubWFwKGNvbnZlcnRBUElVc2VyVG9TZWxlY3RJdGVtKVxuXG4gIGl0KFwic2hvdWxkIGNvbnZlcnQgQVBJIHVzZXJzIHRvIGEgc2VsZWN0IGl0ZW1zXCIsICgpID0+IHtcbiAgICBleHBlY3Qoc2VsZWN0SXRlbXMpLnRvU3RyaWN0RXF1YWwoW1xuICAgICAgeyBsYWJlbDogXCJDYXJvbCBDYXJwZW50ZXJcIiwgdmFsdWU6IFwidXNlci1pZC0wXCIgfSxcbiAgICAgIHsgbGFiZWw6IFwiSGVucnkgSGlsdG9uXCIsIHZhbHVlOiBcInVzZXItaWQtMVwiIH0sXG4gICAgICB7IGxhYmVsOiBcIkFsaWNlIEFuZGVyc29uXCIsIHZhbHVlOiBcInVzZXItaWQtMlwiIH0sXG4gICAgICB7IGxhYmVsOiBcIkZyYW5rIEZyYW5rbGluXCIsIHZhbHVlOiBcInVzZXItaWQtM1wiIH0sXG4gICAgICB7IGxhYmVsOiBcIkRhdmUgRG9uYWxkc29uXCIsIHZhbHVlOiBcInVzZXItaWQtNFwiIH0sXG4gICAgICB7IGxhYmVsOiBcIkJvYiBCYWtlclwiLCB2YWx1ZTogXCJ1c2VyLWlkLTVcIiB9LFxuICAgICAgeyBsYWJlbDogXCJHZXJ0cnVkZSBHb3VsZFwiLCB2YWx1ZTogXCJ1c2VyLWlkLTZcIiB9LFxuICAgICAgeyBsYWJlbDogXCJFbGxlbiBFbGxpc1wiLCB2YWx1ZTogXCJ1c2VyLWlkLTdcIiB9LFxuICAgIF0pXG4gIH0pXG59KVxuIl0sIm5hbWVzIjpbImRlc2NyaWJlIiwic2VsZWN0SXRlbXMiLCJtb2NrUHJpdmF0ZVNoYXJlZENvbnRlbnRPd25lcnMiLCJtYXAiLCJjb252ZXJ0QVBJVXNlclRvU2VsZWN0SXRlbSIsIml0IiwiZXhwZWN0IiwidG9TdHJpY3RFcXVhbCIsImxhYmVsIiwidmFsdWUiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7c0JBQStDOzRDQUNKO0FBRTNDQSxTQUFTLDhCQUE4QjtJQUNyQyxNQUFNQyxjQUFjQyxvQ0FBOEIsQ0FBQ0MsR0FBRyxDQUFDQyxzREFBMEI7SUFFakZDLEdBQUcsOENBQThDO1FBQy9DQyxPQUFPTCxhQUFhTSxhQUFhLENBQUM7WUFDaEM7Z0JBQUVDLE9BQU87Z0JBQW1CQyxPQUFPO1lBQVk7WUFDL0M7Z0JBQUVELE9BQU87Z0JBQWdCQyxPQUFPO1lBQVk7WUFDNUM7Z0JBQUVELE9BQU87Z0JBQWtCQyxPQUFPO1lBQVk7WUFDOUM7Z0JBQUVELE9BQU87Z0JBQWtCQyxPQUFPO1lBQVk7WUFDOUM7Z0JBQUVELE9BQU87Z0JBQWtCQyxPQUFPO1lBQVk7WUFDOUM7Z0JBQUVELE9BQU87Z0JBQWFDLE9BQU87WUFBWTtZQUN6QztnQkFBRUQsT0FBTztnQkFBa0JDLE9BQU87WUFBWTtZQUM5QztnQkFBRUQsT0FBTztnQkFBZUMsT0FBTztZQUFZO1NBQzVDO0lBQ0g7QUFDRiJ9