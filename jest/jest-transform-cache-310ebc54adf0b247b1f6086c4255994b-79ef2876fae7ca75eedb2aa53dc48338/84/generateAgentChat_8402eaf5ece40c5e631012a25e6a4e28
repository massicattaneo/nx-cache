16928e180b4984f5ecc1cda334611df1
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "generateAgentChatMessages", {
    enumerable: true,
    get: function() {
        return generateAgentChatMessages;
    }
});
const _generateDate = require("./generateDate");
const _generateId = require("./generateId");
const generateAgentChatMessages = (props)=>{
    return {
        complete: ()=>({
                type: "COMPLETE",
                requestId: props.requestId,
                "x-amz-requestid": null
            }),
        answer: (getParts = (content)=>[
                {
                    content
                }
            ])=>{
            return getParts(props.content).map(({ content })=>({
                    type: "ANSWER",
                    requestId: props.requestId,
                    text: content,
                    "x-amz-requestid": null,
                    answerId: "1"
                }));
        },
        thinking: (thinkingId, thinkingContent)=>({
                type: "THINKING",
                requestId: props.requestId,
                thinkingId,
                text: thinkingContent,
                "x-amz-requestid": null
            }),
        action: (actionId, toolName)=>({
                type: "ACTION",
                requestId: props.requestId,
                actionAuditsId: actionId,
                toolName,
                "x-amz-requestid": null
            }),
        actionAudit: (actionAuditId, toolName, query)=>({
                type: "AUDIT",
                actionAuditsId: actionAuditId,
                requestId: props.requestId,
                "x-amz-requestid": null,
                trace: {
                    auditType: "SearchAuditV1",
                    query: {
                        text: query.query
                    },
                    toolId: toolName,
                    results: [
                        {
                            type: "CQS",
                            values: query.documents.map((document)=>({
                                    documentScope: "news",
                                    hd: document.hd,
                                    id: (0, _generateId.generateId)(),
                                    language: "English",
                                    srcKey: "5A5702",
                                    srcName: "Benzinga",
                                    chunks: [
                                        {
                                            cnum: 1,
                                            id: (0, _generateId.generateId)(),
                                            sentences: [
                                                {
                                                    pnum: 1,
                                                    snum: 1
                                                }
                                            ],
                                            text: "Test sentence",
                                            relevance: 0
                                        }
                                    ],
                                    rpProviderId: "BZG",
                                    ts: (0, _generateDate.generateDate)()
                                }))
                        }
                    ]
                }
            })
    };
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvZGV2ZWxvcG1lbnQvc3JjL2xpYi9kYXRhYmFzZS9nZW5lcmF0b3JzL2dlbmVyYXRlQWdlbnRDaGF0LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHogfSBmcm9tIFwiem9kXCJcbmltcG9ydCB7IGJpZ2RhdGFTY2hlbWFzIH0gZnJvbSBcIkBycC9jb21tb24vY29udHJhY3RzXCJcbmltcG9ydCB7IGdlbmVyYXRlRGF0ZSB9IGZyb20gXCIuL2dlbmVyYXRlRGF0ZVwiXG5pbXBvcnQgeyBnZW5lcmF0ZUlkIH0gZnJvbSBcIi4vZ2VuZXJhdGVJZFwiXG5cbnR5cGUgTWVzc2FnZXMgPSB7XG4gIHJlcXVlc3RJZDogc3RyaW5nXG4gIGNvbnRlbnQ6IHN0cmluZ1xufVxuXG50eXBlIFF1ZXJ5ID0ge1xuICBxdWVyeTogc3RyaW5nXG4gIGRvY3VtZW50czogQXJyYXk8eyBoZDogc3RyaW5nIH0+XG59XG5cbmNvbnN0IGdlbmVyYXRlQWdlbnRDaGF0TWVzc2FnZXMgPSAocHJvcHM6IE1lc3NhZ2VzKSA9PiB7XG4gIHJldHVybiB7XG4gICAgY29tcGxldGU6ICgpOiB6LmluZmVyPHR5cGVvZiBiaWdkYXRhU2NoZW1hcy5zdF9hZ2VudHNfQ29tcGxldGVXU1Jlc3BvbnNlPiA9PiAoe1xuICAgICAgdHlwZTogXCJDT01QTEVURVwiLFxuICAgICAgcmVxdWVzdElkOiBwcm9wcy5yZXF1ZXN0SWQsXG4gICAgICBcIngtYW16LXJlcXVlc3RpZFwiOiBudWxsLFxuICAgIH0pLFxuICAgIGFuc3dlcjogKFxuICAgICAgZ2V0UGFydHMgPSAoY29udGVudDogc3RyaW5nKSA9PiBbeyBjb250ZW50IH1dLFxuICAgICk6IEFycmF5PHouaW5mZXI8dHlwZW9mIGJpZ2RhdGFTY2hlbWFzLnN0X2FnZW50c19BbnN3ZXJXU1Jlc3BvbnNlPj4gPT4ge1xuICAgICAgcmV0dXJuIGdldFBhcnRzKHByb3BzLmNvbnRlbnQpLm1hcCgoeyBjb250ZW50IH0pID0+ICh7XG4gICAgICAgIHR5cGU6IFwiQU5TV0VSXCIsXG4gICAgICAgIHJlcXVlc3RJZDogcHJvcHMucmVxdWVzdElkLFxuICAgICAgICB0ZXh0OiBjb250ZW50LFxuICAgICAgICBcIngtYW16LXJlcXVlc3RpZFwiOiBudWxsLFxuICAgICAgICBhbnN3ZXJJZDogXCIxXCIsXG4gICAgICB9KSlcbiAgICB9LFxuICAgIHRoaW5raW5nOiAoXG4gICAgICB0aGlua2luZ0lkOiBzdHJpbmcsXG4gICAgICB0aGlua2luZ0NvbnRlbnQ6IHN0cmluZyxcbiAgICApOiB6LmluZmVyPHR5cGVvZiBiaWdkYXRhU2NoZW1hcy5zdF9hZ2VudHNfVGhpbmtpbmdXU1Jlc3BvbnNlPiA9PiAoe1xuICAgICAgdHlwZTogXCJUSElOS0lOR1wiLFxuICAgICAgcmVxdWVzdElkOiBwcm9wcy5yZXF1ZXN0SWQsXG4gICAgICB0aGlua2luZ0lkLFxuICAgICAgdGV4dDogdGhpbmtpbmdDb250ZW50LFxuICAgICAgXCJ4LWFtei1yZXF1ZXN0aWRcIjogbnVsbCxcbiAgICB9KSxcblxuICAgIGFjdGlvbjogKFxuICAgICAgYWN0aW9uSWQ6IHN0cmluZyxcbiAgICAgIHRvb2xOYW1lOiBzdHJpbmcsXG4gICAgKTogei5pbmZlcjx0eXBlb2YgYmlnZGF0YVNjaGVtYXMuc3RfYWdlbnRzX0FjdGlvbldTUmVzcG9uc2U+ID0+ICh7XG4gICAgICB0eXBlOiBcIkFDVElPTlwiLFxuICAgICAgcmVxdWVzdElkOiBwcm9wcy5yZXF1ZXN0SWQsXG4gICAgICBhY3Rpb25BdWRpdHNJZDogYWN0aW9uSWQsXG4gICAgICB0b29sTmFtZSxcbiAgICAgIFwieC1hbXotcmVxdWVzdGlkXCI6IG51bGwsXG4gICAgfSksXG5cbiAgICBhY3Rpb25BdWRpdDogKFxuICAgICAgYWN0aW9uQXVkaXRJZDogc3RyaW5nLFxuICAgICAgdG9vbE5hbWU6IHN0cmluZyxcbiAgICAgIHF1ZXJ5OiBRdWVyeSxcbiAgICApOiB6LmluZmVyPHR5cGVvZiBiaWdkYXRhU2NoZW1hcy5zdF9hZ2VudHNfVG9vbEF1ZGl0V1NSZXNwb25zZT4gPT4gKHtcbiAgICAgIHR5cGU6IFwiQVVESVRcIixcbiAgICAgIGFjdGlvbkF1ZGl0c0lkOiBhY3Rpb25BdWRpdElkLFxuICAgICAgcmVxdWVzdElkOiBwcm9wcy5yZXF1ZXN0SWQsXG4gICAgICBcIngtYW16LXJlcXVlc3RpZFwiOiBudWxsLFxuICAgICAgdHJhY2U6IHtcbiAgICAgICAgYXVkaXRUeXBlOiBcIlNlYXJjaEF1ZGl0VjFcIixcbiAgICAgICAgcXVlcnk6IHsgdGV4dDogcXVlcnkucXVlcnkgfSxcbiAgICAgICAgdG9vbElkOiB0b29sTmFtZSxcbiAgICAgICAgcmVzdWx0czogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6IFwiQ1FTXCIsXG4gICAgICAgICAgICB2YWx1ZXM6IHF1ZXJ5LmRvY3VtZW50cy5tYXAoZG9jdW1lbnQgPT4gKHtcbiAgICAgICAgICAgICAgZG9jdW1lbnRTY29wZTogXCJuZXdzXCIsXG4gICAgICAgICAgICAgIGhkOiBkb2N1bWVudC5oZCxcbiAgICAgICAgICAgICAgaWQ6IGdlbmVyYXRlSWQoKSxcbiAgICAgICAgICAgICAgbGFuZ3VhZ2U6IFwiRW5nbGlzaFwiLFxuICAgICAgICAgICAgICBzcmNLZXk6IFwiNUE1NzAyXCIsXG4gICAgICAgICAgICAgIHNyY05hbWU6IFwiQmVuemluZ2FcIixcbiAgICAgICAgICAgICAgY2h1bmtzOiBbXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgY251bTogMSxcbiAgICAgICAgICAgICAgICAgIGlkOiBnZW5lcmF0ZUlkKCksXG4gICAgICAgICAgICAgICAgICBzZW50ZW5jZXM6IFt7IHBudW06IDEsIHNudW06IDEgfV0sXG4gICAgICAgICAgICAgICAgICB0ZXh0OiBcIlRlc3Qgc2VudGVuY2VcIixcbiAgICAgICAgICAgICAgICAgIHJlbGV2YW5jZTogMCxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICBycFByb3ZpZGVySWQ6IFwiQlpHXCIsXG4gICAgICAgICAgICAgIHRzOiBnZW5lcmF0ZURhdGUoKSxcbiAgICAgICAgICAgIH0pKSxcbiAgICAgICAgICB9LFxuICAgICAgICBdLFxuICAgICAgfSxcbiAgICB9KSxcbiAgfVxufVxuXG5leHBvcnQgeyBnZW5lcmF0ZUFnZW50Q2hhdE1lc3NhZ2VzIH1cbiJdLCJuYW1lcyI6WyJnZW5lcmF0ZUFnZW50Q2hhdE1lc3NhZ2VzIiwicHJvcHMiLCJjb21wbGV0ZSIsInR5cGUiLCJyZXF1ZXN0SWQiLCJhbnN3ZXIiLCJnZXRQYXJ0cyIsImNvbnRlbnQiLCJtYXAiLCJ0ZXh0IiwiYW5zd2VySWQiLCJ0aGlua2luZyIsInRoaW5raW5nSWQiLCJ0aGlua2luZ0NvbnRlbnQiLCJhY3Rpb24iLCJhY3Rpb25JZCIsInRvb2xOYW1lIiwiYWN0aW9uQXVkaXRzSWQiLCJhY3Rpb25BdWRpdCIsImFjdGlvbkF1ZGl0SWQiLCJxdWVyeSIsInRyYWNlIiwiYXVkaXRUeXBlIiwidG9vbElkIiwicmVzdWx0cyIsInZhbHVlcyIsImRvY3VtZW50cyIsImRvY3VtZW50IiwiZG9jdW1lbnRTY29wZSIsImhkIiwiaWQiLCJnZW5lcmF0ZUlkIiwibGFuZ3VhZ2UiLCJzcmNLZXkiLCJzcmNOYW1lIiwiY2h1bmtzIiwiY251bSIsInNlbnRlbmNlcyIsInBudW0iLCJzbnVtIiwicmVsZXZhbmNlIiwicnBQcm92aWRlcklkIiwidHMiLCJnZW5lcmF0ZURhdGUiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBaUdTQTs7O2VBQUFBOzs7OEJBL0ZvQjs0QkFDRjtBQVkzQixNQUFNQSw0QkFBNEIsQ0FBQ0M7SUFDakMsT0FBTztRQUNMQyxVQUFVLElBQW9FLENBQUE7Z0JBQzVFQyxNQUFNO2dCQUNOQyxXQUFXSCxNQUFNRyxTQUFTO2dCQUMxQixtQkFBbUI7WUFDckIsQ0FBQTtRQUNBQyxRQUFRLENBQ05DLFdBQVcsQ0FBQ0MsVUFBb0I7Z0JBQUM7b0JBQUVBO2dCQUFRO2FBQUU7WUFFN0MsT0FBT0QsU0FBU0wsTUFBTU0sT0FBTyxFQUFFQyxHQUFHLENBQUMsQ0FBQyxFQUFFRCxPQUFPLEVBQUUsR0FBTSxDQUFBO29CQUNuREosTUFBTTtvQkFDTkMsV0FBV0gsTUFBTUcsU0FBUztvQkFDMUJLLE1BQU1GO29CQUNOLG1CQUFtQjtvQkFDbkJHLFVBQVU7Z0JBQ1osQ0FBQTtRQUNGO1FBQ0FDLFVBQVUsQ0FDUkMsWUFDQUMsa0JBQ2lFLENBQUE7Z0JBQ2pFVixNQUFNO2dCQUNOQyxXQUFXSCxNQUFNRyxTQUFTO2dCQUMxQlE7Z0JBQ0FILE1BQU1JO2dCQUNOLG1CQUFtQjtZQUNyQixDQUFBO1FBRUFDLFFBQVEsQ0FDTkMsVUFDQUMsV0FDK0QsQ0FBQTtnQkFDL0RiLE1BQU07Z0JBQ05DLFdBQVdILE1BQU1HLFNBQVM7Z0JBQzFCYSxnQkFBZ0JGO2dCQUNoQkM7Z0JBQ0EsbUJBQW1CO1lBQ3JCLENBQUE7UUFFQUUsYUFBYSxDQUNYQyxlQUNBSCxVQUNBSSxRQUNrRSxDQUFBO2dCQUNsRWpCLE1BQU07Z0JBQ05jLGdCQUFnQkU7Z0JBQ2hCZixXQUFXSCxNQUFNRyxTQUFTO2dCQUMxQixtQkFBbUI7Z0JBQ25CaUIsT0FBTztvQkFDTEMsV0FBVztvQkFDWEYsT0FBTzt3QkFBRVgsTUFBTVcsTUFBTUEsS0FBSztvQkFBQztvQkFDM0JHLFFBQVFQO29CQUNSUSxTQUFTO3dCQUNQOzRCQUNFckIsTUFBTTs0QkFDTnNCLFFBQVFMLE1BQU1NLFNBQVMsQ0FBQ2xCLEdBQUcsQ0FBQ21CLENBQUFBLFdBQWEsQ0FBQTtvQ0FDdkNDLGVBQWU7b0NBQ2ZDLElBQUlGLFNBQVNFLEVBQUU7b0NBQ2ZDLElBQUlDLElBQUFBLHNCQUFVO29DQUNkQyxVQUFVO29DQUNWQyxRQUFRO29DQUNSQyxTQUFTO29DQUNUQyxRQUFRO3dDQUNOOzRDQUNFQyxNQUFNOzRDQUNOTixJQUFJQyxJQUFBQSxzQkFBVTs0Q0FDZE0sV0FBVztnREFBQztvREFBRUMsTUFBTTtvREFBR0MsTUFBTTtnREFBRTs2Q0FBRTs0Q0FDakM5QixNQUFNOzRDQUNOK0IsV0FBVzt3Q0FDYjtxQ0FDRDtvQ0FDREMsY0FBYztvQ0FDZEMsSUFBSUMsSUFBQUEsMEJBQVk7Z0NBQ2xCLENBQUE7d0JBQ0Y7cUJBQ0Q7Z0JBQ0g7WUFDRixDQUFBO0lBQ0Y7QUFDRiJ9