{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/common/brief/src/utils/scheduleDays.utils.ts"],"sourcesContent":["import isEqual from \"lodash/isEqual\"\nimport { BriefConfigAPISchedule, BriefConfigAPIScheduleDay } from \"@rp/react/tanstack-api/brief\"\n\ntype DayLabels = { short: string; long: string }\n\nconst daysMapping: Record<BriefConfigAPIScheduleDay, DayLabels> = {\n  mon: { short: \"Mon\", long: \"Monday\" },\n  tue: { short: \"Tue\", long: \"Tuesday\" },\n  wed: { short: \"Wed\", long: \"Wednesday\" },\n  thu: { short: \"Thu\", long: \"Thursday\" },\n  fri: { short: \"Fri\", long: \"Friday\" },\n  sat: { short: \"Sat\", long: \"Saturday\" },\n  sun: { short: \"Sun\", long: \"Sunday\" },\n}\n\nconst weekdays: Array<BriefConfigAPIScheduleDay> = [\"mon\", \"tue\", \"wed\", \"thu\", \"fri\"]\nconst allDays: Array<BriefConfigAPIScheduleDay> = [\"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\", \"sun\"]\n\nconst formatDaysToText = (days: Array<BriefConfigAPIScheduleDay>) => {\n  const sortedDays = days.sort((a, b) => allDays.indexOf(a) - allDays.indexOf(b))\n\n  if (isEqual(sortedDays, weekdays)) {\n    return \"Weekdays\"\n  }\n\n  if (sortedDays.length === 7) {\n    return \"Daily\"\n  }\n\n  if (sortedDays.length === 1) {\n    return daysMapping[sortedDays[0]].long\n  }\n\n  const daysTextList = sortedDays.map(day => daysMapping[day].short)\n\n  return daysTextList.join(\", \")\n}\n\nconst convertScheduleDaysToCronExpDays = (days: Array<BriefConfigAPIScheduleDay>): string => {\n  if (isEqual(days, weekdays)) {\n    return \"MON,TUE,WED,THU,FRI\"\n  }\n\n  if (days.length === 7) {\n    return \"?\"\n  }\n\n  if (days.length === 0) {\n    return \"*\"\n  }\n\n  return days.join(\",\").toUpperCase()\n}\n\nconst convertScheduleToCronExp = (schedule: BriefConfigAPISchedule | undefined): string =>\n  schedule\n    ? `${schedule.minute} ${schedule.hour} * * ${convertScheduleDaysToCronExpDays(schedule.days)}`\n    : \"\"\n\nexport { formatDaysToText, convertScheduleToCronExp, convertScheduleDaysToCronExpDays }\n"],"names":["convertScheduleDaysToCronExpDays","convertScheduleToCronExp","formatDaysToText","daysMapping","mon","short","long","tue","wed","thu","fri","sat","sun","weekdays","allDays","days","sortedDays","sort","a","b","indexOf","isEqual","length","daysTextList","map","day","join","toUpperCase","schedule","minute","hour"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;;;;;;;;IA2DqDA,gCAAgC;eAAhCA;;IAA1BC,wBAAwB;eAAxBA;;IAAlBC,gBAAgB;eAAhBA;;;gEA3DW;;;;;;AAKpB,MAAMC,cAA4D;IAChEC,KAAK;QAAEC,OAAO;QAAOC,MAAM;IAAS;IACpCC,KAAK;QAAEF,OAAO;QAAOC,MAAM;IAAU;IACrCE,KAAK;QAAEH,OAAO;QAAOC,MAAM;IAAY;IACvCG,KAAK;QAAEJ,OAAO;QAAOC,MAAM;IAAW;IACtCI,KAAK;QAAEL,OAAO;QAAOC,MAAM;IAAS;IACpCK,KAAK;QAAEN,OAAO;QAAOC,MAAM;IAAW;IACtCM,KAAK;QAAEP,OAAO;QAAOC,MAAM;IAAS;AACtC;AAEA,MAAMO,WAA6C;IAAC;IAAO;IAAO;IAAO;IAAO;CAAM;AACtF,MAAMC,UAA4C;IAAC;IAAO;IAAO;IAAO;IAAO;IAAO;IAAO;CAAM;AAEnG,MAAMZ,mBAAmB,CAACa;IACxB,MAAMC,aAAaD,KAAKE,IAAI,CAAC,CAACC,GAAGC,IAAML,QAAQM,OAAO,CAACF,KAAKJ,QAAQM,OAAO,CAACD;IAE5E,IAAIE,IAAAA,gBAAO,EAACL,YAAYH,WAAW;QACjC,OAAO;IACT;IAEA,IAAIG,WAAWM,MAAM,KAAK,GAAG;QAC3B,OAAO;IACT;IAEA,IAAIN,WAAWM,MAAM,KAAK,GAAG;QAC3B,OAAOnB,WAAW,CAACa,UAAU,CAAC,EAAE,CAAC,CAACV,IAAI;IACxC;IAEA,MAAMiB,eAAeP,WAAWQ,GAAG,CAACC,CAAAA,MAAOtB,WAAW,CAACsB,IAAI,CAACpB,KAAK;IAEjE,OAAOkB,aAAaG,IAAI,CAAC;AAC3B;AAEA,MAAM1B,mCAAmC,CAACe;IACxC,IAAIM,IAAAA,gBAAO,EAACN,MAAMF,WAAW;QAC3B,OAAO;IACT;IAEA,IAAIE,KAAKO,MAAM,KAAK,GAAG;QACrB,OAAO;IACT;IAEA,IAAIP,KAAKO,MAAM,KAAK,GAAG;QACrB,OAAO;IACT;IAEA,OAAOP,KAAKW,IAAI,CAAC,KAAKC,WAAW;AACnC;AAEA,MAAM1B,2BAA2B,CAAC2B,WAChCA,WACI,CAAC,EAAEA,SAASC,MAAM,CAAC,CAAC,EAAED,SAASE,IAAI,CAAC,KAAK,EAAE9B,iCAAiC4B,SAASb,IAAI,EAAE,CAAC,GAC5F"}