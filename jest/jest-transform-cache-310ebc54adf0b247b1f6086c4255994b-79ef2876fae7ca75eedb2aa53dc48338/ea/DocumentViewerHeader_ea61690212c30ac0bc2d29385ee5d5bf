a06a954d01a41c99963660dca08d6521
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "DocumentViewerHeader", {
    enumerable: true,
    get: function() {
        return DocumentViewerHeader;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _reactuse = require("react-use");
const _core = require("@rp/react/web/mui/core");
const _DocumentViewerHeaderstyles = require("./DocumentViewerHeader.styles");
const _DocumentViewerMetadata = require("./DocumentViewerMetadata");
const SCROLL_LIMIT = 30;
const DURATION = 0.225;
const DocumentViewerHeader = ({ namespace, language, documentScope, fileExtension, onChange, rpjson, markSentences, areMatchesLoading, onArrowsClick, matchesCount, currentMatch, onMatchesChange, enableMatches, actions, value, foundCount, disableShrinking = false, customBackground })=>{
    const { y: scrollY } = (0, _reactuse.useWindowScroll)();
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_DocumentViewerHeaderstyles.DocumentViewerHeaderContainer, {
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_DocumentViewerHeaderstyles.DocumentViewerTitleContainer, {
                sx: {
                    backgroundColor: customBackground
                },
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                    sx: {
                        maxWidth: "100%"
                    },
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Collapse, {
                            in: !disableShrinking && scrollY > SCROLL_LIMIT,
                            timeout: DURATION,
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_DocumentViewerHeaderstyles.DocumentTitleSmall, {
                                rpjson: rpjson
                            })
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Collapse, {
                            in: disableShrinking || scrollY < SCROLL_LIMIT,
                            timeout: DURATION,
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_DocumentViewerHeaderstyles.DocumentTitleLarge, {
                                    rpjson: rpjson
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_DocumentViewerHeaderstyles.DocumentViewerSubheader, {
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_DocumentViewerMetadata.DocumentViewerMetadata, {
                                        namespace: namespace,
                                        rpjson: rpjson,
                                        documentScope: documentScope,
                                        language: language,
                                        fileExtension: fileExtension
                                    })
                                })
                            ]
                        })
                    ]
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_DocumentViewerHeaderstyles.RpJsonToolbarStyled, {
                value: value,
                onChange: onChange,
                markSentences: markSentences,
                areMatchesLoading: areMatchesLoading,
                actions: actions,
                onArrowsClick: onArrowsClick,
                matchesCount: matchesCount,
                currentMatch: currentMatch,
                onMatchesChange: onMatchesChange,
                enableMatches: enableMatches,
                foundCount: foundCount,
                customBackgroundColor: customBackground
            })
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2RvY3VtZW50LXZpZXdlci9zcmMvbGliL0RvY3VtZW50Vmlld2VySGVhZGVyLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VXaW5kb3dTY3JvbGwgfSBmcm9tIFwicmVhY3QtdXNlXCJcbmltcG9ydCB7IEJveCwgQ29sbGFwc2UgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9tdWkvY29yZVwiXG5pbXBvcnQgeyBScEpzb25Ub29sYmFyUHJvcHMgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9ycGpzb25cIlxuaW1wb3J0IHtcbiAgRG9jdW1lbnRUaXRsZUxhcmdlLFxuICBEb2N1bWVudFRpdGxlU21hbGwsXG4gIERvY3VtZW50Vmlld2VySGVhZGVyQ29udGFpbmVyLFxuICBEb2N1bWVudFZpZXdlclN1YmhlYWRlcixcbiAgRG9jdW1lbnRWaWV3ZXJUaXRsZUNvbnRhaW5lcixcbiAgUnBKc29uVG9vbGJhclN0eWxlZCxcbn0gZnJvbSBcIi4vRG9jdW1lbnRWaWV3ZXJIZWFkZXIuc3R5bGVzXCJcbmltcG9ydCB7IERvY3VtZW50Vmlld2VyTWV0YWRhdGEsIERvY3VtZW50Vmlld2VyTWV0YWRhdGFQcm9wcyB9IGZyb20gXCIuL0RvY3VtZW50Vmlld2VyTWV0YWRhdGFcIlxuXG50eXBlIFByb3BzID0gUnBKc29uVG9vbGJhclByb3BzICZcbiAgRG9jdW1lbnRWaWV3ZXJNZXRhZGF0YVByb3BzICYgeyBkaXNhYmxlU2hyaW5raW5nPzogYm9vbGVhbjsgY3VzdG9tQmFja2dyb3VuZD86IHN0cmluZyB9XG5cbmNvbnN0IFNDUk9MTF9MSU1JVCA9IDMwXG5jb25zdCBEVVJBVElPTiA9IDAuMjI1XG5cbmNvbnN0IERvY3VtZW50Vmlld2VySGVhZGVyID0gKHtcbiAgbmFtZXNwYWNlLFxuICBsYW5ndWFnZSxcbiAgZG9jdW1lbnRTY29wZSxcbiAgZmlsZUV4dGVuc2lvbixcbiAgb25DaGFuZ2UsXG4gIHJwanNvbixcbiAgbWFya1NlbnRlbmNlcyxcbiAgYXJlTWF0Y2hlc0xvYWRpbmcsXG4gIG9uQXJyb3dzQ2xpY2ssXG4gIG1hdGNoZXNDb3VudCxcbiAgY3VycmVudE1hdGNoLFxuICBvbk1hdGNoZXNDaGFuZ2UsXG4gIGVuYWJsZU1hdGNoZXMsXG4gIGFjdGlvbnMsXG4gIHZhbHVlLFxuICBmb3VuZENvdW50LFxuICBkaXNhYmxlU2hyaW5raW5nID0gZmFsc2UsXG4gIGN1c3RvbUJhY2tncm91bmQsXG59OiBQcm9wcykgPT4ge1xuICBjb25zdCB7IHk6IHNjcm9sbFkgfSA9IHVzZVdpbmRvd1Njcm9sbCgpXG4gIHJldHVybiAoXG4gICAgPERvY3VtZW50Vmlld2VySGVhZGVyQ29udGFpbmVyPlxuICAgICAgPERvY3VtZW50Vmlld2VyVGl0bGVDb250YWluZXIgc3g9e3sgYmFja2dyb3VuZENvbG9yOiBjdXN0b21CYWNrZ3JvdW5kIH19PlxuICAgICAgICA8Qm94IHN4PXt7IG1heFdpZHRoOiBcIjEwMCVcIiB9fT5cbiAgICAgICAgICA8Q29sbGFwc2UgaW49eyFkaXNhYmxlU2hyaW5raW5nICYmIHNjcm9sbFkgPiBTQ1JPTExfTElNSVR9IHRpbWVvdXQ9e0RVUkFUSU9OfT5cbiAgICAgICAgICAgIDxEb2N1bWVudFRpdGxlU21hbGwgcnBqc29uPXtycGpzb259IC8+XG4gICAgICAgICAgPC9Db2xsYXBzZT5cbiAgICAgICAgICA8Q29sbGFwc2UgaW49e2Rpc2FibGVTaHJpbmtpbmcgfHwgc2Nyb2xsWSA8IFNDUk9MTF9MSU1JVH0gdGltZW91dD17RFVSQVRJT059PlxuICAgICAgICAgICAgPERvY3VtZW50VGl0bGVMYXJnZSBycGpzb249e3JwanNvbn0gLz5cbiAgICAgICAgICAgIDxEb2N1bWVudFZpZXdlclN1YmhlYWRlcj5cbiAgICAgICAgICAgICAgPERvY3VtZW50Vmlld2VyTWV0YWRhdGFcbiAgICAgICAgICAgICAgICBuYW1lc3BhY2U9e25hbWVzcGFjZX1cbiAgICAgICAgICAgICAgICBycGpzb249e3JwanNvbn1cbiAgICAgICAgICAgICAgICBkb2N1bWVudFNjb3BlPXtkb2N1bWVudFNjb3BlfVxuICAgICAgICAgICAgICAgIGxhbmd1YWdlPXtsYW5ndWFnZX1cbiAgICAgICAgICAgICAgICBmaWxlRXh0ZW5zaW9uPXtmaWxlRXh0ZW5zaW9ufVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9Eb2N1bWVudFZpZXdlclN1YmhlYWRlcj5cbiAgICAgICAgICA8L0NvbGxhcHNlPlxuICAgICAgICA8L0JveD5cbiAgICAgIDwvRG9jdW1lbnRWaWV3ZXJUaXRsZUNvbnRhaW5lcj5cbiAgICAgIDxScEpzb25Ub29sYmFyU3R5bGVkXG4gICAgICAgIHZhbHVlPXt2YWx1ZX1cbiAgICAgICAgb25DaGFuZ2U9e29uQ2hhbmdlfVxuICAgICAgICBtYXJrU2VudGVuY2VzPXttYXJrU2VudGVuY2VzfVxuICAgICAgICBhcmVNYXRjaGVzTG9hZGluZz17YXJlTWF0Y2hlc0xvYWRpbmd9XG4gICAgICAgIGFjdGlvbnM9e2FjdGlvbnN9XG4gICAgICAgIG9uQXJyb3dzQ2xpY2s9e29uQXJyb3dzQ2xpY2t9XG4gICAgICAgIG1hdGNoZXNDb3VudD17bWF0Y2hlc0NvdW50fVxuICAgICAgICBjdXJyZW50TWF0Y2g9e2N1cnJlbnRNYXRjaH1cbiAgICAgICAgb25NYXRjaGVzQ2hhbmdlPXtvbk1hdGNoZXNDaGFuZ2V9XG4gICAgICAgIGVuYWJsZU1hdGNoZXM9e2VuYWJsZU1hdGNoZXN9XG4gICAgICAgIGZvdW5kQ291bnQ9e2ZvdW5kQ291bnR9XG4gICAgICAgIGN1c3RvbUJhY2tncm91bmRDb2xvcj17Y3VzdG9tQmFja2dyb3VuZH1cbiAgICAgIC8+XG4gICAgPC9Eb2N1bWVudFZpZXdlckhlYWRlckNvbnRhaW5lcj5cbiAgKVxufVxuXG5leHBvcnQgeyBEb2N1bWVudFZpZXdlckhlYWRlciB9XG4iXSwibmFtZXMiOlsiRG9jdW1lbnRWaWV3ZXJIZWFkZXIiLCJTQ1JPTExfTElNSVQiLCJEVVJBVElPTiIsIm5hbWVzcGFjZSIsImxhbmd1YWdlIiwiZG9jdW1lbnRTY29wZSIsImZpbGVFeHRlbnNpb24iLCJvbkNoYW5nZSIsInJwanNvbiIsIm1hcmtTZW50ZW5jZXMiLCJhcmVNYXRjaGVzTG9hZGluZyIsIm9uQXJyb3dzQ2xpY2siLCJtYXRjaGVzQ291bnQiLCJjdXJyZW50TWF0Y2giLCJvbk1hdGNoZXNDaGFuZ2UiLCJlbmFibGVNYXRjaGVzIiwiYWN0aW9ucyIsInZhbHVlIiwiZm91bmRDb3VudCIsImRpc2FibGVTaHJpbmtpbmciLCJjdXN0b21CYWNrZ3JvdW5kIiwieSIsInNjcm9sbFkiLCJ1c2VXaW5kb3dTY3JvbGwiLCJEb2N1bWVudFZpZXdlckhlYWRlckNvbnRhaW5lciIsIkRvY3VtZW50Vmlld2VyVGl0bGVDb250YWluZXIiLCJzeCIsImJhY2tncm91bmRDb2xvciIsIkJveCIsIm1heFdpZHRoIiwiQ29sbGFwc2UiLCJpbiIsInRpbWVvdXQiLCJEb2N1bWVudFRpdGxlU21hbGwiLCJEb2N1bWVudFRpdGxlTGFyZ2UiLCJEb2N1bWVudFZpZXdlclN1YmhlYWRlciIsIkRvY3VtZW50Vmlld2VyTWV0YWRhdGEiLCJScEpzb25Ub29sYmFyU3R5bGVkIiwiY3VzdG9tQmFja2dyb3VuZENvbG9yIl0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQStFU0E7OztlQUFBQTs7OzswQkEvRXVCO3NCQUNGOzRDQVN2Qjt3Q0FDNkQ7QUFLcEUsTUFBTUMsZUFBZTtBQUNyQixNQUFNQyxXQUFXO0FBRWpCLE1BQU1GLHVCQUF1QixDQUFDLEVBQzVCRyxTQUFTLEVBQ1RDLFFBQVEsRUFDUkMsYUFBYSxFQUNiQyxhQUFhLEVBQ2JDLFFBQVEsRUFDUkMsTUFBTSxFQUNOQyxhQUFhLEVBQ2JDLGlCQUFpQixFQUNqQkMsYUFBYSxFQUNiQyxZQUFZLEVBQ1pDLFlBQVksRUFDWkMsZUFBZSxFQUNmQyxhQUFhLEVBQ2JDLE9BQU8sRUFDUEMsS0FBSyxFQUNMQyxVQUFVLEVBQ1ZDLG1CQUFtQixLQUFLLEVBQ3hCQyxnQkFBZ0IsRUFDVjtJQUNOLE1BQU0sRUFBRUMsR0FBR0MsT0FBTyxFQUFFLEdBQUdDLElBQUFBLHlCQUFlO0lBQ3RDLHFCQUNFLHNCQUFDQyx5REFBNkI7OzBCQUM1QixxQkFBQ0Msd0RBQTRCO2dCQUFDQyxJQUFJO29CQUFFQyxpQkFBaUJQO2dCQUFpQjswQkFDcEUsY0FBQSxzQkFBQ1EsU0FBRztvQkFBQ0YsSUFBSTt3QkFBRUcsVUFBVTtvQkFBTzs7c0NBQzFCLHFCQUFDQyxjQUFROzRCQUFDQyxJQUFJLENBQUNaLG9CQUFvQkcsVUFBVXJCOzRCQUFjK0IsU0FBUzlCO3NDQUNsRSxjQUFBLHFCQUFDK0IsOENBQWtCO2dDQUFDekIsUUFBUUE7OztzQ0FFOUIsc0JBQUNzQixjQUFROzRCQUFDQyxJQUFJWixvQkFBb0JHLFVBQVVyQjs0QkFBYytCLFNBQVM5Qjs7OENBQ2pFLHFCQUFDZ0MsOENBQWtCO29DQUFDMUIsUUFBUUE7OzhDQUM1QixxQkFBQzJCLG1EQUF1Qjs4Q0FDdEIsY0FBQSxxQkFBQ0MsOENBQXNCO3dDQUNyQmpDLFdBQVdBO3dDQUNYSyxRQUFRQTt3Q0FDUkgsZUFBZUE7d0NBQ2ZELFVBQVVBO3dDQUNWRSxlQUFlQTs7Ozs7Ozs7MEJBTXpCLHFCQUFDK0IsK0NBQW1CO2dCQUNsQnBCLE9BQU9BO2dCQUNQVixVQUFVQTtnQkFDVkUsZUFBZUE7Z0JBQ2ZDLG1CQUFtQkE7Z0JBQ25CTSxTQUFTQTtnQkFDVEwsZUFBZUE7Z0JBQ2ZDLGNBQWNBO2dCQUNkQyxjQUFjQTtnQkFDZEMsaUJBQWlCQTtnQkFDakJDLGVBQWVBO2dCQUNmRyxZQUFZQTtnQkFDWm9CLHVCQUF1QmxCOzs7O0FBSS9CIn0=