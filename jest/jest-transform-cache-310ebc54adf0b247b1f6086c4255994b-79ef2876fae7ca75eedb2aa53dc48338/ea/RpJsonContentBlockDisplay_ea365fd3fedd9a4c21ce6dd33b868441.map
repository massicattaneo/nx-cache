{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/rpjson/src/lib/components/RpJsonContentBlockDisplay/RpJsonContentBlockDisplay.tsx"],"sourcesContent":["import { uniqueIdIterator } from \"@rp/react/common/rpjson\"\nimport { RpJsonDocument } from \"@rp/react/rpjson/types\"\nimport { EnhancedDocumentTypes, EnhancedEntity, EnhancedTextBlock } from \"@rp/react/rpjson/types\"\nimport { createReactElements } from \"../../create-react-elements\"\nimport { ReactDocumentPerformanceOptions } from \"../../create-react-elements/create-react-elements.types\"\nimport { HighlightItem } from \"../../styles\"\nimport { RpJsonAnnotationStyles } from \"../RpJsonAnnotationStyles\"\n\ntype RpJsonContentBlockProps = {\n  block: { text: string; entities?: Array<Omit<EnhancedEntity, \"id\">> }\n  finds?: Array<string | RegExp>\n  markupDetections?: ReactDocumentPerformanceOptions[\"markupDetections\"]\n  className?: string\n  rpjson?: RpJsonDocument\n  highlights?: Array<HighlightItem>\n}\n\nconst RpJsonContentBlockDisplay = ({\n  block,\n  finds = [],\n  markupDetections = false,\n  className = \"\",\n  highlights = [],\n}: RpJsonContentBlockProps) => {\n  const idIterator = uniqueIdIterator()\n\n  const enhancedBlock: EnhancedTextBlock = {\n    type: EnhancedDocumentTypes.PARAGRAPH,\n    id: idIterator(),\n    tree: [],\n    textStartAt: 0,\n    paragraphNumber: 1,\n    ...block,\n    entities: block.entities?.map(item => ({ ...item, id: idIterator() })) ?? [],\n    sentences: [],\n  }\n\n  const toRender = {\n    type: \"PAGE\",\n    content: [enhancedBlock],\n    id: idIterator(),\n    tree: [],\n  }\n\n  return (\n    <div className={className}>\n      <RpJsonAnnotationStyles highlights={highlights}>\n        {createReactElements(\n          toRender,\n          {},\n          {\n            idIterator: idIterator,\n            finds,\n            performance: { markupDetections },\n          },\n        )}\n      </RpJsonAnnotationStyles>\n    </div>\n  )\n}\n\nexport { RpJsonContentBlockDisplay }\n"],"names":["RpJsonContentBlockDisplay","block","finds","markupDetections","className","highlights","idIterator","uniqueIdIterator","enhancedBlock","type","EnhancedDocumentTypes","PARAGRAPH","id","tree","textStartAt","paragraphNumber","entities","map","item","sentences","toRender","content","div","RpJsonAnnotationStyles","createReactElements","performance"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BA6DSA;;;eAAAA;;;;wBA7DwB;uBAEwC;qCACrC;wCAGG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWvC,MAAMA,4BAA4B,CAAC,EACjCC,KAAK,EACLC,QAAQ,EAAE,EACVC,mBAAmB,KAAK,EACxBC,YAAY,EAAE,EACdC,aAAa,EAAE,EACS;QAUZJ;IATZ,MAAMK,aAAaC,IAAAA,wBAAgB;QASvBN;IAPZ,MAAMO,gBAAmC;QACvCC,MAAMC,4BAAqB,CAACC,SAAS;QACrCC,IAAIN;QACJO,MAAM,EAAE;QACRC,aAAa;QACbC,iBAAiB;OACdd;QACHe,UAAUf,CAAAA,uBAAAA,kBAAAA,MAAMe,QAAQ,cAAdf,sCAAAA,gBAAgBgB,GAAG,CAACC,CAAAA,OAAS,wCAAKA;gBAAMN,IAAIN;6BAA5CL,iCAAAA,sBAAgE,EAAE;QAC5EkB,WAAW,EAAE;;IAGf,MAAMC,WAAW;QACfX,MAAM;QACNY,SAAS;YAACb;SAAc;QACxBI,IAAIN;QACJO,MAAM,EAAE;IACV;IAEA,qBACE,qBAACS;QAAIlB,WAAWA;kBACd,cAAA,qBAACmB,8CAAsB;YAAClB,YAAYA;sBACjCmB,IAAAA,wCAAmB,EAClBJ,UACA,CAAC,GACD;gBACEd,YAAYA;gBACZJ;gBACAuB,aAAa;oBAAEtB;gBAAiB;YAClC;;;AAKV"}