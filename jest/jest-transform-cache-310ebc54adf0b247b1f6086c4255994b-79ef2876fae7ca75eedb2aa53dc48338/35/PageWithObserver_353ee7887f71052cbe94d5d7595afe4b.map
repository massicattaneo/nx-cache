{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/document-viewer/src/lib/DocumentViewerPage/PageWithObserver.tsx"],"sourcesContent":["import { useCallback, useState } from \"react\"\nimport { Page } from \"react-pdf\"\nimport { BoundingBox } from \"@rp/common/api-types\"\nimport { useIntersectionObserver } from \"@rp/react/web/common/hooks\"\nimport { useInitialScrollPage } from \"./hooks/useInitialScrollPage\"\nimport { usePageSourceHighlight } from \"./hooks/usePageSourceHighlight\"\n\ntype PageWithObserverProps = {\n  className?: string\n  onRenderSuccess?: () => void\n  pageNumber: number\n  scale: number\n  setPageVisibility: (pageNumber: number, isIntersecting: boolean) => void\n  width: number\n  initPage: number\n  boundingBox: BoundingBox\n  isPaneView: boolean\n}\n\nconst observerConfig = {\n  rootMargin: \"-45%\",\n}\n\nconst observerConfigPane = {\n  rootMargin: \"-60% 0% -35% 0%\",\n}\n\nconst PageWithObserver = ({\n  className,\n  onRenderSuccess,\n  pageNumber,\n  scale,\n  setPageVisibility,\n  width,\n  initPage,\n  boundingBox,\n  isPaneView,\n}: PageWithObserverProps) => {\n  const [page, setPage] = useState<HTMLCanvasElement | null>(null)\n  useInitialScrollPage({ page, pageNumber, initPage })\n  const [isPageLoading, setIsPageLoading] = useState(true)\n\n  const onIntersectionChange = useCallback(\n    ([entry]: Array<IntersectionObserverEntry>) => {\n      setPageVisibility(pageNumber, entry.isIntersecting)\n    },\n    [pageNumber, setPageVisibility],\n  )\n\n  useIntersectionObserver(\n    page,\n    isPaneView ? observerConfigPane : observerConfig,\n    onIntersectionChange,\n  )\n  usePageSourceHighlight({\n    boundingBox,\n    page,\n    pageNumber,\n    isPageLoading,\n  })\n\n  const handleRenderSuccess = useCallback(() => {\n    setIsPageLoading(false)\n    onRenderSuccess?.()\n  }, [onRenderSuccess])\n\n  return (\n    <Page\n      canvasRef={setPage}\n      className={className}\n      loading=\"\" // if not it will show the default loading message\n      onRenderSuccess={handleRenderSuccess}\n      pageNumber={pageNumber}\n      scale={scale}\n      width={width}\n    />\n  )\n}\n\nexport { PageWithObserver }\n"],"names":["PageWithObserver","observerConfig","rootMargin","observerConfigPane","className","onRenderSuccess","pageNumber","scale","setPageVisibility","width","initPage","boundingBox","isPaneView","page","setPage","useState","useInitialScrollPage","isPageLoading","setIsPageLoading","onIntersectionChange","useCallback","entry","isIntersecting","useIntersectionObserver","usePageSourceHighlight","handleRenderSuccess","Page","canvasRef","loading"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BA+ESA;;;eAAAA;;;;uBA/E6B;0BACjB;uBAEmB;sCACH;wCACE;AAcvC,MAAMC,iBAAiB;IACrBC,YAAY;AACd;AAEA,MAAMC,qBAAqB;IACzBD,YAAY;AACd;AAEA,MAAMF,mBAAmB,CAAC,EACxBI,SAAS,EACTC,eAAe,EACfC,UAAU,EACVC,KAAK,EACLC,iBAAiB,EACjBC,KAAK,EACLC,QAAQ,EACRC,WAAW,EACXC,UAAU,EACY;IACtB,MAAM,CAACC,MAAMC,QAAQ,GAAGC,IAAAA,eAAQ,EAA2B;IAC3DC,IAAAA,0CAAoB,EAAC;QAAEH;QAAMP;QAAYI;IAAS;IAClD,MAAM,CAACO,eAAeC,iBAAiB,GAAGH,IAAAA,eAAQ,EAAC;IAEnD,MAAMI,uBAAuBC,IAAAA,kBAAW,EACtC,CAAC,CAACC,MAAwC;QACxCb,kBAAkBF,YAAYe,MAAMC,cAAc;IACpD,GACA;QAAChB;QAAYE;KAAkB;IAGjCe,IAAAA,8BAAuB,EACrBV,MACAD,aAAaT,qBAAqBF,gBAClCkB;IAEFK,IAAAA,8CAAsB,EAAC;QACrBb;QACAE;QACAP;QACAW;IACF;IAEA,MAAMQ,sBAAsBL,IAAAA,kBAAW,EAAC;QACtCF,iBAAiB;QACjBb,4BAAAA,sCAAAA;IACF,GAAG;QAACA;KAAgB;IAEpB,qBACE,qBAACqB,cAAI;QACHC,WAAWb;QACXV,WAAWA;QACXwB,SAAQ,GAAG,kDAAkD;;QAC7DvB,iBAAiBoB;QACjBnB,YAAYA;QACZC,OAAOA;QACPE,OAAOA;;AAGb"}