{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/common/hooks/src/lib/useSSE.ts"],"sourcesContent":["import { useCallback, useEffect, useRef } from \"react\"\nimport { adapters } from \"@rp/adapters\"\nimport { XHRSource } from \"@rp/common/utils\"\n\ntype XHREventSource = ReturnType<typeof XHRSource>[\"eventTarget\"]\n\ntype Props = {\n  url: string\n  onMessage: (event: MessageEvent, disposeConnection: () => void) => void\n  onError: (disposeConnection: () => void) => void\n  enabled: boolean\n  getBody: () => XMLHttpRequestBodyInit\n}\n\nfunction useSSE({ url, onError, getBody, onMessage, enabled }: Props) {\n  const eventSource = useRef<XHREventSource | null>(null)\n\n  const disposeConnection = useCallback(function disposeWebsocket(): void {\n    if (eventSource.current) {\n      eventSource.current.close()\n      eventSource.current = null\n    }\n  }, [])\n\n  const setupConnection = useCallback(\n    async function setupConnection(): Promise<void> {\n      if (!enabled || eventSource.current) {\n        return disposeConnection()\n      }\n\n      const token = await adapters.api.getClerkToken()\n\n      if (token) {\n        const { eventTarget: newEventSource, send } = XHRSource(url, {\n          body: getBody(),\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json\",\n          },\n        })\n\n        if (eventSource.current !== null) {\n          disposeConnection()\n        }\n\n        eventSource.current = newEventSource\n\n        newEventSource.addEventListener(\"open\", () => {\n          if (newEventSource !== eventSource.current) {\n            newEventSource.close()\n            return\n          }\n        })\n\n        newEventSource.addEventListener(\"message\", event => {\n          if (newEventSource !== eventSource.current) {\n            newEventSource.close()\n            return\n          }\n\n          if (event instanceof MessageEvent) {\n            onMessage(event, disposeConnection)\n          }\n        })\n\n        newEventSource.addEventListener(\"error\", () => onError(disposeConnection))\n\n        if (eventSource.current === newEventSource) {\n          send()\n        }\n      }\n    },\n    [disposeConnection, enabled, getBody, onError, onMessage, url],\n  )\n\n  useEffect(() => {\n    if (enabled) {\n      setupConnection()\n    }\n    return () => {\n      disposeConnection()\n    }\n  }, [getBody, url, disposeConnection, enabled, setupConnection])\n}\n\nexport { useSSE }\n"],"names":["useSSE","url","onError","getBody","onMessage","enabled","eventSource","useRef","disposeConnection","useCallback","disposeWebsocket","current","close","setupConnection","token","adapters","api","getClerkToken","eventTarget","newEventSource","send","XHRSource","body","method","headers","Authorization","addEventListener","event","MessageEvent","useEffect"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAsFSA;;;eAAAA;;;uBAtFsC;0BACtB;uBACC;AAY1B,SAASA,OAAO,EAAEC,GAAG,EAAEC,OAAO,EAAEC,OAAO,EAAEC,SAAS,EAAEC,OAAO,EAAS;IAClE,MAAMC,cAAcC,IAAAA,aAAM,EAAwB;IAElD,MAAMC,oBAAoBC,IAAAA,kBAAW,EAAC,SAASC;QAC7C,IAAIJ,YAAYK,OAAO,EAAE;YACvBL,YAAYK,OAAO,CAACC,KAAK;YACzBN,YAAYK,OAAO,GAAG;QACxB;IACF,GAAG,EAAE;IAEL,MAAME,kBAAkBJ,IAAAA,kBAAW,EACjC,eAAeI;QACb,IAAI,CAACR,WAAWC,YAAYK,OAAO,EAAE;YACnC,OAAOH;QACT;QAEA,MAAMM,QAAQ,MAAMC,kBAAQ,CAACC,GAAG,CAACC,aAAa;QAE9C,IAAIH,OAAO;YACT,MAAM,EAAEI,aAAaC,cAAc,EAAEC,IAAI,EAAE,GAAGC,IAAAA,gBAAS,EAACpB,KAAK;gBAC3DqB,MAAMnB;gBACNoB,QAAQ;gBACRC,SAAS;oBACPC,eAAe,CAAC,OAAO,EAAEX,MAAM,CAAC;oBAChC,gBAAgB;gBAClB;YACF;YAEA,IAAIR,YAAYK,OAAO,KAAK,MAAM;gBAChCH;YACF;YAEAF,YAAYK,OAAO,GAAGQ;YAEtBA,eAAeO,gBAAgB,CAAC,QAAQ;gBACtC,IAAIP,mBAAmBb,YAAYK,OAAO,EAAE;oBAC1CQ,eAAeP,KAAK;oBACpB;gBACF;YACF;YAEAO,eAAeO,gBAAgB,CAAC,WAAWC,CAAAA;gBACzC,IAAIR,mBAAmBb,YAAYK,OAAO,EAAE;oBAC1CQ,eAAeP,KAAK;oBACpB;gBACF;gBAEA,IAAIe,iBAAiBC,cAAc;oBACjCxB,UAAUuB,OAAOnB;gBACnB;YACF;YAEAW,eAAeO,gBAAgB,CAAC,SAAS,IAAMxB,QAAQM;YAEvD,IAAIF,YAAYK,OAAO,KAAKQ,gBAAgB;gBAC1CC;YACF;QACF;IACF,GACA;QAACZ;QAAmBH;QAASF;QAASD;QAASE;QAAWH;KAAI;IAGhE4B,IAAAA,gBAAS,EAAC;QACR,IAAIxB,SAAS;YACXQ;QACF;QACA,OAAO;YACLL;QACF;IACF,GAAG;QAACL;QAASF;QAAKO;QAAmBH;QAASQ;KAAgB;AAChE"}