{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/watchlists/src/lib/WatchlistDataTabs/tables/balanceSheet.tsx"],"sourcesContent":["import { AccountBalanceWallet } from \"@rp/react/web/mui/icons\"\nimport \"@tanstack/react-table\"\nimport { companyBalanceStatement } from \"../endpoints/companyBalanceStatement\"\nimport { companyKeyMetrics } from \"../endpoints/companyKeyMetrics\"\nimport { companyRatios } from \"../endpoints/companyRatios\"\nimport { genericTable } from \"../genericTable\"\nimport { createCacheHeaderInfo } from \"../utils/cacheTimeHelper\"\n\nconst balanceSheet = genericTable({\n  tableName: \"balanceSheet\",\n  tableLabel: \"Balance Sheet\",\n  tableIcon: <AccountBalanceWallet />,\n  defaultVisible: [\n    { endpoint: \"companyBalanceStatement\", columnKey: [\"fiscalYear\", \"period\"] },\n    { endpoint: \"companyBalanceStatement\", columnKey: \"totalAssets\" },\n    { endpoint: \"companyBalanceStatement\", columnKey: \"totalLiabilities\" },\n    { endpoint: \"companyBalanceStatement\", columnKey: \"totalEquity\" },\n    { endpoint: \"companyBalanceStatement\", columnKey: \"totalDebt\" },\n  ],\n  headerInfo: createCacheHeaderInfo(\"Balance Sheet\"),\n  columns: [\n    companyBalanceStatement.fiscalYearAndPeriod(\"balanceSheet\"),\n    companyBalanceStatement.cashAndEquivalents(\"balanceSheet\"), // cash_and_cash_equivalents\n    companyBalanceStatement.shorttermInvestments(\"balanceSheet\"), // short_term_investments\n    companyBalanceStatement.cashAndShorttermInvestments(\"balanceSheet\"), // cash_and_short_term_investments\n    companyBalanceStatement.netReceivables(\"balanceSheet\"), // net_receivables\n    companyBalanceStatement.accountsReceivables(\"balanceSheet\"), // accounts_receivables\n    companyBalanceStatement.otherReceivables(\"balanceSheet\"), // other_receivables\n    companyBalanceStatement.inventory(\"balanceSheet\"),\n    companyBalanceStatement.prepaids(\"balanceSheet\"),\n    companyBalanceStatement.otherCurrentAssets(\"balanceSheet\"),\n    companyBalanceStatement.totalCurrentAssets(\"balanceSheet\"),\n    companyBalanceStatement.propertyPlantAndEquipmentNet(\"balanceSheet\"),\n    companyBalanceStatement.goodwill(\"balanceSheet\"),\n    companyBalanceStatement.intangibleAssets(\"balanceSheet\"),\n    companyBalanceStatement.goodwillAndIntangibles(\"balanceSheet\"), // goodwill_and_intangible_assets\n    companyBalanceStatement.longtermInvestments(\"balanceSheet\"),\n    companyBalanceStatement.taxAssets(\"balanceSheet\"),\n    companyBalanceStatement.otherNoncurrentAssets(\"balanceSheet\"),\n    companyBalanceStatement.totalNoncurrentAssets(\"balanceSheet\"),\n    companyBalanceStatement.otherAssets(\"balanceSheet\"),\n    companyBalanceStatement.totalAssets(\"balanceSheet\"),\n    companyBalanceStatement.totalPayables(\"balanceSheet\"),\n    companyBalanceStatement.accountsPayable(\"balanceSheet\"), // account_payables\n    companyBalanceStatement.otherPayables(\"balanceSheet\"),\n    companyBalanceStatement.accruedExpenses(\"balanceSheet\"),\n    companyBalanceStatement.shorttermDebt(\"balanceSheet\"),\n    companyBalanceStatement.capitalLeaseObligationsCurrent(\"balanceSheet\"),\n    companyBalanceStatement.taxPayables(\"balanceSheet\"),\n    companyBalanceStatement.deferredRevenue(\"balanceSheet\"),\n    companyBalanceStatement.otherCurrentLiabilities(\"balanceSheet\"),\n    companyBalanceStatement.totalCurrentLiabilities(\"balanceSheet\"),\n    companyBalanceStatement.longtermDebt(\"balanceSheet\"),\n    companyBalanceStatement.deferredRevenueNoncurrent(\"balanceSheet\"),\n    companyBalanceStatement.deferredTaxLiabilitiesNoncurrent(\"balanceSheet\"),\n    companyBalanceStatement.otherNoncurrentLiabilities(\"balanceSheet\"),\n    companyBalanceStatement.totalNoncurrentLiabilities(\"balanceSheet\"),\n    companyBalanceStatement.otherLiabilities(\"balanceSheet\"),\n    companyBalanceStatement.capitalLeaseObligations(\"balanceSheet\"),\n    companyBalanceStatement.totalLiabilities(\"balanceSheet\"),\n    companyBalanceStatement.treasuryStock(\"balanceSheet\"),\n    companyBalanceStatement.preferredStock(\"balanceSheet\"),\n    companyBalanceStatement.commonStock(\"balanceSheet\"),\n    companyBalanceStatement.retainedEarnings(\"balanceSheet\"),\n    companyBalanceStatement.additionalPaidinCapital(\"balanceSheet\"), // additional_paid_in_capital\n    companyBalanceStatement.accumulatedOtherIncomeLoss(\"balanceSheet\"), // accumulated_other_comprehensive_income_loss\n    companyBalanceStatement.otherTotalStockholdersEquity(\"balanceSheet\"),\n    companyBalanceStatement.totalStockholdersEquity(\"balanceSheet\"),\n    companyBalanceStatement.totalEquity(\"balanceSheet\"),\n    companyBalanceStatement.minorityInterest(\"balanceSheet\"),\n    companyBalanceStatement.totalLiabilitiesAndEquity(\"balanceSheet\"), // total_liabilities_and_total_equity\n    companyBalanceStatement.totalInvestments(\"balanceSheet\"),\n    companyBalanceStatement.totalDebt(\"balanceSheet\"),\n    companyBalanceStatement.netDebt(\"balanceSheet\"),\n    companyKeyMetrics.netCurrentAssetValueTtm(\"balanceSheet\"),\n    companyKeyMetrics.tangibleAssetValueTtm(\"balanceSheet\"),\n    companyRatios.debtToMarketCapTtm(\"balanceSheet\"),\n    companyRatios.interestDebtPerShareTtm(\"balanceSheet\"),\n    companyKeyMetrics.workingCapitalTtm(\"balanceSheet\"),\n  ],\n})\n\nexport { balanceSheet }\n"],"names":["balanceSheet","genericTable","tableName","tableLabel","tableIcon","AccountBalanceWallet","defaultVisible","endpoint","columnKey","headerInfo","createCacheHeaderInfo","columns","companyBalanceStatement","fiscalYearAndPeriod","cashAndEquivalents","shorttermInvestments","cashAndShorttermInvestments","netReceivables","accountsReceivables","otherReceivables","inventory","prepaids","otherCurrentAssets","totalCurrentAssets","propertyPlantAndEquipmentNet","goodwill","intangibleAssets","goodwillAndIntangibles","longtermInvestments","taxAssets","otherNoncurrentAssets","totalNoncurrentAssets","otherAssets","totalAssets","totalPayables","accountsPayable","otherPayables","accruedExpenses","shorttermDebt","capitalLeaseObligationsCurrent","taxPayables","deferredRevenue","otherCurrentLiabilities","totalCurrentLiabilities","longtermDebt","deferredRevenueNoncurrent","deferredTaxLiabilitiesNoncurrent","otherNoncurrentLiabilities","totalNoncurrentLiabilities","otherLiabilities","capitalLeaseObligations","totalLiabilities","treasuryStock","preferredStock","commonStock","retainedEarnings","additionalPaidinCapital","accumulatedOtherIncomeLoss","otherTotalStockholdersEquity","totalStockholdersEquity","totalEquity","minorityInterest","totalLiabilitiesAndEquity","totalInvestments","totalDebt","netDebt","companyKeyMetrics","netCurrentAssetValueTtm","tangibleAssetValueTtm","companyRatios","debtToMarketCapTtm","interestDebtPerShareTtm","workingCapitalTtm"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}