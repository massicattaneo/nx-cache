{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/apps/client-web/src/app/components/Hub/Files/FilesList/utils/handleFileRowCheckboxChangeFunc.test.ts"],"sourcesContent":["import { FileRowType } from \"@rp/common/utils\"\nimport { useFileActions } from \"@rp/react/web/common/files\"\nimport { SelectedFile } from \"../../Files\"\nimport { handleFileRowCheckboxChangeFunc } from \"./handleFileRowCheckboxChangeFunc\"\n\nconst mockSelectedFiles = [\n  { id: \"file-id-1\", shared: true },\n  { id: \"file-id-2\", shared: false },\n  { id: \"file-id-3\", shared: true },\n]\n\nconst mockActions = {\n  open: { onClick: jest.fn() },\n  close: { onClick: jest.fn() },\n} as unknown as ReturnType<typeof useFileActions>[\"actions\"]\n\nconst mockOpenChatPane = jest.fn()\n\nlet selectedFilesSetterResponse: Array<SelectedFile>\nconst mockSetSelectedFiles = jest.fn().mockImplementation(cb => {\n  selectedFilesSetterResponse = cb(mockSelectedFiles)\n})\n\nconst mockItem = {\n  id: \"123\",\n  name: \"test\",\n  status: \"completed\",\n  shared: true,\n  size: 321,\n  date: \"2025-01-01\",\n  type: \"pdf\",\n  sharedWith: [\"Alice\"],\n  owner: \"Bob\",\n} as FileRowType\n\nbeforeEach(jest.clearAllMocks)\n\ndescribe(\"handleFileRowCheckboxChangeFunc\", () => {\n  describe(\"isSelected and isFileOpen\", () => {\n    const isSelected = true\n    const isThisFileOpen = true\n    beforeEach(() => {\n      handleFileRowCheckboxChangeFunc({\n        actions: mockActions,\n        checked: true,\n        isSelected,\n        isThisFileOpen,\n        item: mockItem,\n        openChatPane: mockOpenChatPane,\n        setSelectedFiles: mockSetSelectedFiles,\n        shared: true,\n      })\n    })\n\n    it(\"should call actions.close.onClick\", () => {\n      expect(mockActions.close.onClick).toHaveBeenCalledTimes(1)\n    })\n\n    it(\"should not call actions.open.onClick\", () => {\n      expect(mockActions.open.onClick).not.toHaveBeenCalled()\n    })\n\n    it(\"should not call openChatPane\", () => {\n      expect(mockOpenChatPane).not.toHaveBeenCalled()\n    })\n\n    it(\"should call setSelected and setState properly\", () => {\n      expect(mockSetSelectedFiles).toHaveBeenCalled()\n      expect(selectedFilesSetterResponse).toStrictEqual([\n        ...mockSelectedFiles,\n        { id: \"123\", shared: true },\n      ])\n    })\n  })\n  describe(\"!isSelected\", () => {\n    const isSelected = false\n    beforeEach(() => {\n      handleFileRowCheckboxChangeFunc({\n        actions: mockActions,\n        checked: true,\n        isSelected,\n        isThisFileOpen: true,\n        item: mockItem,\n        openChatPane: mockOpenChatPane,\n        setSelectedFiles: mockSetSelectedFiles,\n        shared: true,\n      })\n    })\n\n    it(\"should not call actions.close.onClick\", () => {\n      expect(mockActions.close.onClick).not.toHaveBeenCalled()\n    })\n\n    it(\"should call actions.open.onClick with the correct arguments\", () => {\n      expect(mockActions.open.onClick).toHaveBeenCalledTimes(1)\n      expect(mockActions.open.onClick).toHaveBeenCalledWith(mockItem)\n    })\n\n    it(\"should call openChatPane\", () => {\n      expect(mockOpenChatPane).toHaveBeenCalledTimes(1)\n    })\n\n    it(\"should call setSelected and setState properly\", () => {\n      expect(mockSetSelectedFiles).toHaveBeenCalled()\n      expect(selectedFilesSetterResponse).toStrictEqual([\n        ...mockSelectedFiles,\n        { id: \"123\", shared: true },\n      ])\n    })\n  })\n\n  describe(\"isSelected and !isFileOpen\", () => {\n    describe(\"checked\", () => {\n      const isSelected = true\n      const isThisFileOpen = false\n      const checked = true\n      beforeEach(() => {\n        handleFileRowCheckboxChangeFunc({\n          actions: mockActions,\n          checked,\n          isSelected,\n          isThisFileOpen,\n          item: mockItem,\n          openChatPane: mockOpenChatPane,\n          setSelectedFiles: mockSetSelectedFiles,\n          shared: true,\n        })\n      })\n\n      it(\"should not call actions.close.onClick\", () => {\n        expect(mockActions.close.onClick).not.toHaveBeenCalled()\n      })\n\n      it(\"should not call actions.open.onClick\", () => {\n        expect(mockActions.open.onClick).not.toHaveBeenCalled()\n      })\n\n      it(\"should not call openChatPane\", () => {\n        expect(mockOpenChatPane).not.toHaveBeenCalled()\n      })\n\n      it(\"should call setSelected and setState properly\", () => {\n        expect(mockSetSelectedFiles).toHaveBeenCalled()\n        expect(selectedFilesSetterResponse).toStrictEqual([\n          ...mockSelectedFiles,\n          { id: \"123\", shared: true },\n        ])\n      })\n    })\n    describe(\"!checked\", () => {\n      const isSelected = true\n      const isThisFileOpen = false\n      const checked = false\n      beforeEach(() => {\n        handleFileRowCheckboxChangeFunc({\n          actions: mockActions,\n          checked,\n          isSelected,\n          isThisFileOpen,\n          item: { ...mockItem, id: mockSelectedFiles[1].id },\n          openChatPane: mockOpenChatPane,\n          setSelectedFiles: mockSetSelectedFiles,\n          shared: true,\n        })\n      })\n\n      it(\"should not call actions.close.onClick\", () => {\n        expect(mockActions.close.onClick).not.toHaveBeenCalled()\n      })\n\n      it(\"should not call actions.open.onClick\", () => {\n        expect(mockActions.open.onClick).not.toHaveBeenCalled()\n      })\n\n      it(\"should not call openChatPane\", () => {\n        expect(mockOpenChatPane).not.toHaveBeenCalled()\n      })\n\n      it(\"should call setSelected and setState properly\", () => {\n        expect(mockSetSelectedFiles).toHaveBeenCalled()\n        expect(selectedFilesSetterResponse).toStrictEqual([\n          mockSelectedFiles[0],\n          mockSelectedFiles[2],\n        ])\n      })\n    })\n  })\n})\n"],"names":["mockSelectedFiles","id","shared","mockActions","open","onClick","jest","fn","close","mockOpenChatPane","selectedFilesSetterResponse","mockSetSelectedFiles","mockImplementation","cb","mockItem","name","status","size","date","type","sharedWith","owner","beforeEach","clearAllMocks","describe","isSelected","isThisFileOpen","handleFileRowCheckboxChangeFunc","actions","checked","item","openChatPane","setSelectedFiles","it","expect","toHaveBeenCalledTimes","not","toHaveBeenCalled","toStrictEqual","toHaveBeenCalledWith"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;iDAGgD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEhD,MAAMA,oBAAoB;IACxB;QAAEC,IAAI;QAAaC,QAAQ;IAAK;IAChC;QAAED,IAAI;QAAaC,QAAQ;IAAM;IACjC;QAAED,IAAI;QAAaC,QAAQ;IAAK;CACjC;AAED,MAAMC,cAAc;IAClBC,MAAM;QAAEC,SAASC,KAAKC,EAAE;IAAG;IAC3BC,OAAO;QAAEH,SAASC,KAAKC,EAAE;IAAG;AAC9B;AAEA,MAAME,mBAAmBH,KAAKC,EAAE;AAEhC,IAAIG;AACJ,MAAMC,uBAAuBL,KAAKC,EAAE,GAAGK,kBAAkB,CAACC,CAAAA;IACxDH,8BAA8BG,GAAGb;AACnC;AAEA,MAAMc,WAAW;IACfb,IAAI;IACJc,MAAM;IACNC,QAAQ;IACRd,QAAQ;IACRe,MAAM;IACNC,MAAM;IACNC,MAAM;IACNC,YAAY;QAAC;KAAQ;IACrBC,OAAO;AACT;AAEAC,WAAWhB,KAAKiB,aAAa;AAE7BC,SAAS,mCAAmC;IAC1CA,SAAS,6BAA6B;QACpC,MAAMC,aAAa;QACnB,MAAMC,iBAAiB;QACvBJ,WAAW;YACTK,IAAAA,gEAA+B,EAAC;gBAC9BC,SAASzB;gBACT0B,SAAS;gBACTJ;gBACAC;gBACAI,MAAMhB;gBACNiB,cAActB;gBACduB,kBAAkBrB;gBAClBT,QAAQ;YACV;QACF;QAEA+B,GAAG,qCAAqC;YACtCC,OAAO/B,YAAYK,KAAK,CAACH,OAAO,EAAE8B,qBAAqB,CAAC;QAC1D;QAEAF,GAAG,wCAAwC;YACzCC,OAAO/B,YAAYC,IAAI,CAACC,OAAO,EAAE+B,GAAG,CAACC,gBAAgB;QACvD;QAEAJ,GAAG,gCAAgC;YACjCC,OAAOzB,kBAAkB2B,GAAG,CAACC,gBAAgB;QAC/C;QAEAJ,GAAG,iDAAiD;YAClDC,OAAOvB,sBAAsB0B,gBAAgB;YAC7CH,OAAOxB,6BAA6B4B,aAAa,CAAC;mBAC7CtC;gBACH;oBAAEC,IAAI;oBAAOC,QAAQ;gBAAK;aAC3B;QACH;IACF;IACAsB,SAAS,eAAe;QACtB,MAAMC,aAAa;QACnBH,WAAW;YACTK,IAAAA,gEAA+B,EAAC;gBAC9BC,SAASzB;gBACT0B,SAAS;gBACTJ;gBACAC,gBAAgB;gBAChBI,MAAMhB;gBACNiB,cAActB;gBACduB,kBAAkBrB;gBAClBT,QAAQ;YACV;QACF;QAEA+B,GAAG,yCAAyC;YAC1CC,OAAO/B,YAAYK,KAAK,CAACH,OAAO,EAAE+B,GAAG,CAACC,gBAAgB;QACxD;QAEAJ,GAAG,+DAA+D;YAChEC,OAAO/B,YAAYC,IAAI,CAACC,OAAO,EAAE8B,qBAAqB,CAAC;YACvDD,OAAO/B,YAAYC,IAAI,CAACC,OAAO,EAAEkC,oBAAoB,CAACzB;QACxD;QAEAmB,GAAG,4BAA4B;YAC7BC,OAAOzB,kBAAkB0B,qBAAqB,CAAC;QACjD;QAEAF,GAAG,iDAAiD;YAClDC,OAAOvB,sBAAsB0B,gBAAgB;YAC7CH,OAAOxB,6BAA6B4B,aAAa,CAAC;mBAC7CtC;gBACH;oBAAEC,IAAI;oBAAOC,QAAQ;gBAAK;aAC3B;QACH;IACF;IAEAsB,SAAS,8BAA8B;QACrCA,SAAS,WAAW;YAClB,MAAMC,aAAa;YACnB,MAAMC,iBAAiB;YACvB,MAAMG,UAAU;YAChBP,WAAW;gBACTK,IAAAA,gEAA+B,EAAC;oBAC9BC,SAASzB;oBACT0B;oBACAJ;oBACAC;oBACAI,MAAMhB;oBACNiB,cAActB;oBACduB,kBAAkBrB;oBAClBT,QAAQ;gBACV;YACF;YAEA+B,GAAG,yCAAyC;gBAC1CC,OAAO/B,YAAYK,KAAK,CAACH,OAAO,EAAE+B,GAAG,CAACC,gBAAgB;YACxD;YAEAJ,GAAG,wCAAwC;gBACzCC,OAAO/B,YAAYC,IAAI,CAACC,OAAO,EAAE+B,GAAG,CAACC,gBAAgB;YACvD;YAEAJ,GAAG,gCAAgC;gBACjCC,OAAOzB,kBAAkB2B,GAAG,CAACC,gBAAgB;YAC/C;YAEAJ,GAAG,iDAAiD;gBAClDC,OAAOvB,sBAAsB0B,gBAAgB;gBAC7CH,OAAOxB,6BAA6B4B,aAAa,CAAC;uBAC7CtC;oBACH;wBAAEC,IAAI;wBAAOC,QAAQ;oBAAK;iBAC3B;YACH;QACF;QACAsB,SAAS,YAAY;YACnB,MAAMC,aAAa;YACnB,MAAMC,iBAAiB;YACvB,MAAMG,UAAU;YAChBP,WAAW;gBACTK,IAAAA,gEAA+B,EAAC;oBAC9BC,SAASzB;oBACT0B;oBACAJ;oBACAC;oBACAI,MAAM,wCAAKhB;wBAAUb,IAAID,iBAAiB,CAAC,EAAE,CAACC,EAAE;;oBAChD8B,cAActB;oBACduB,kBAAkBrB;oBAClBT,QAAQ;gBACV;YACF;YAEA+B,GAAG,yCAAyC;gBAC1CC,OAAO/B,YAAYK,KAAK,CAACH,OAAO,EAAE+B,GAAG,CAACC,gBAAgB;YACxD;YAEAJ,GAAG,wCAAwC;gBACzCC,OAAO/B,YAAYC,IAAI,CAACC,OAAO,EAAE+B,GAAG,CAACC,gBAAgB;YACvD;YAEAJ,GAAG,gCAAgC;gBACjCC,OAAOzB,kBAAkB2B,GAAG,CAACC,gBAAgB;YAC/C;YAEAJ,GAAG,iDAAiD;gBAClDC,OAAOvB,sBAAsB0B,gBAAgB;gBAC7CH,OAAOxB,6BAA6B4B,aAAa,CAAC;oBAChDtC,iBAAiB,CAAC,EAAE;oBACpBA,iBAAiB,CAAC,EAAE;iBACrB;YACH;QACF;IACF;AACF"}