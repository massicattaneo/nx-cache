dc4bd0cbe2adb2017d673247f2c12a93
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "useFeatureAtom", {
    enumerable: true,
    get: function() {
        return useFeatureAtom;
    }
});
const _jotai = require("jotai");
const _utils = require("jotai/utils");
const _clerkreact = require("@clerk/clerk-react");
const _environment = require("@rp/common/environment");
const featureFlagsFamily = (0, _utils.atomFamily)((name)=>(0, _utils.atomWithStorage)(name, _environment.environment.flags[name]));
const useFeatureAtom = (name)=>{
    var _user_user_publicMetadata, _user_user;
    // This allows us to give users early access to features
    // without having to deploy a new version of the app
    const user = (0, _clerkreact.useUser)();
    var _user_user_publicMetadata_earlyAccess;
    const earlyAccess = (_user_user_publicMetadata_earlyAccess = (_user_user = user.user) === null || _user_user === void 0 ? void 0 : (_user_user_publicMetadata = _user_user.publicMetadata) === null || _user_user_publicMetadata === void 0 ? void 0 : _user_user_publicMetadata.earlyAccess) !== null && _user_user_publicMetadata_earlyAccess !== void 0 ? _user_user_publicMetadata_earlyAccess : [];
    const atomResult = (0, _jotai.useAtom)(featureFlagsFamily(name));
    const overRideValue = earlyAccess.includes(name);
    if (overRideValue) {
        const isSet = localStorage.getItem(name);
        if (isSet === null) localStorage.setItem(name, "true");
    }
    return overRideValue ? [
        overRideValue,
        atomResult[1]
    ] : atomResult;
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2FwcHMvY2xpZW50LXdlYi9zcmMvYXBwL2F0b21zL2ZlYXR1cmUtZmxhZ3MudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlQXRvbSB9IGZyb20gXCJqb3RhaVwiXG5pbXBvcnQgeyBhdG9tRmFtaWx5LCBhdG9tV2l0aFN0b3JhZ2UgfSBmcm9tIFwiam90YWkvdXRpbHNcIlxuaW1wb3J0IHsgdXNlVXNlciB9IGZyb20gXCJAY2xlcmsvY2xlcmstcmVhY3RcIlxuaW1wb3J0IHsgZW52aXJvbm1lbnQgfSBmcm9tIFwiQHJwL2NvbW1vbi9lbnZpcm9ubWVudFwiXG5pbXBvcnQgeyBGZWF0dXJlc0ZsYWdzIH0gZnJvbSBcIkBycC9jb21tb24vZW52aXJvbm1lbnQvdHlwZXNcIlxuXG5jb25zdCBmZWF0dXJlRmxhZ3NGYW1pbHkgPSBhdG9tRmFtaWx5KChuYW1lOiBGZWF0dXJlc0ZsYWdzKSA9PlxuICBhdG9tV2l0aFN0b3JhZ2U8Ym9vbGVhbj4obmFtZSwgZW52aXJvbm1lbnQuZmxhZ3NbbmFtZV0pLFxuKVxuXG5jb25zdCB1c2VGZWF0dXJlQXRvbSA9IChuYW1lOiBGZWF0dXJlc0ZsYWdzKSA9PiB7XG4gIC8vIFRoaXMgYWxsb3dzIHVzIHRvIGdpdmUgdXNlcnMgZWFybHkgYWNjZXNzIHRvIGZlYXR1cmVzXG4gIC8vIHdpdGhvdXQgaGF2aW5nIHRvIGRlcGxveSBhIG5ldyB2ZXJzaW9uIG9mIHRoZSBhcHBcbiAgY29uc3QgdXNlciA9IHVzZVVzZXIoKVxuICBjb25zdCBlYXJseUFjY2VzcyA9IHVzZXIudXNlcj8ucHVibGljTWV0YWRhdGE/LmVhcmx5QWNjZXNzID8/IFtdXG4gIGNvbnN0IGF0b21SZXN1bHQgPSB1c2VBdG9tKGZlYXR1cmVGbGFnc0ZhbWlseShuYW1lKSlcbiAgY29uc3Qgb3ZlclJpZGVWYWx1ZSA9IGVhcmx5QWNjZXNzLmluY2x1ZGVzKG5hbWUpXG4gIGlmIChvdmVyUmlkZVZhbHVlKSB7XG4gICAgY29uc3QgaXNTZXQgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShuYW1lKVxuICAgIGlmIChpc1NldCA9PT0gbnVsbCkgbG9jYWxTdG9yYWdlLnNldEl0ZW0obmFtZSwgXCJ0cnVlXCIpXG4gIH1cblxuICByZXR1cm4gb3ZlclJpZGVWYWx1ZSA/IChbb3ZlclJpZGVWYWx1ZSwgYXRvbVJlc3VsdFsxXV0gYXMgY29uc3QpIDogYXRvbVJlc3VsdFxufVxuXG5leHBvcnQgeyB1c2VGZWF0dXJlQXRvbSB9XG4iXSwibmFtZXMiOlsidXNlRmVhdHVyZUF0b20iLCJmZWF0dXJlRmxhZ3NGYW1pbHkiLCJhdG9tRmFtaWx5IiwibmFtZSIsImF0b21XaXRoU3RvcmFnZSIsImVudmlyb25tZW50IiwiZmxhZ3MiLCJ1c2VyIiwidXNlVXNlciIsImVhcmx5QWNjZXNzIiwicHVibGljTWV0YWRhdGEiLCJhdG9tUmVzdWx0IiwidXNlQXRvbSIsIm92ZXJSaWRlVmFsdWUiLCJpbmNsdWRlcyIsImlzU2V0IiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsInNldEl0ZW0iXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBeUJTQTs7O2VBQUFBOzs7dUJBekJlO3VCQUNvQjs0QkFDcEI7NkJBQ0k7QUFHNUIsTUFBTUMscUJBQXFCQyxJQUFBQSxpQkFBVSxFQUFDLENBQUNDLE9BQ3JDQyxJQUFBQSxzQkFBZSxFQUFVRCxNQUFNRSx3QkFBVyxDQUFDQyxLQUFLLENBQUNILEtBQUs7QUFHeEQsTUFBTUgsaUJBQWlCLENBQUNHO1FBSUZJLDJCQUFBQTtJQUhwQix3REFBd0Q7SUFDeEQsb0RBQW9EO0lBQ3BELE1BQU1BLE9BQU9DLElBQUFBLG1CQUFPO1FBQ0FEO0lBQXBCLE1BQU1FLGNBQWNGLENBQUFBLHlDQUFBQSxhQUFBQSxLQUFLQSxJQUFJLGNBQVRBLGtDQUFBQSw0QkFBQUEsV0FBV0csY0FBYyxjQUF6QkgsZ0RBQUFBLDBCQUEyQkUsV0FBVyxjQUF0Q0YsbURBQUFBLHdDQUEwQyxFQUFFO0lBQ2hFLE1BQU1JLGFBQWFDLElBQUFBLGNBQU8sRUFBQ1gsbUJBQW1CRTtJQUM5QyxNQUFNVSxnQkFBZ0JKLFlBQVlLLFFBQVEsQ0FBQ1g7SUFDM0MsSUFBSVUsZUFBZTtRQUNqQixNQUFNRSxRQUFRQyxhQUFhQyxPQUFPLENBQUNkO1FBQ25DLElBQUlZLFVBQVUsTUFBTUMsYUFBYUUsT0FBTyxDQUFDZixNQUFNO0lBQ2pEO0lBRUEsT0FBT1UsZ0JBQWlCO1FBQUNBO1FBQWVGLFVBQVUsQ0FBQyxFQUFFO0tBQUMsR0FBYUE7QUFDckUifQ==