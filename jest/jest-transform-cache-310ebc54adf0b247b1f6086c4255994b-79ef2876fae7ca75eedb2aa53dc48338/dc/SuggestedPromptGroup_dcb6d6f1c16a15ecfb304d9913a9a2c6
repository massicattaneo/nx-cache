32c0a7f70bdc6b6ee1ce1bfa9a9d6ef3
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "SuggestedPromptGroup", {
    enumerable: true,
    get: function() {
        return SuggestedPromptGroup;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _hooks = require("@rp/react/web/common/hooks");
const _core = require("@rp/react/web/mui/core");
const _NavBars = require("../NavBars");
const _SuggestedPromptCard = require("./SuggestedPromptCard");
const DESKTOP_SCROLL_OFFSET = 150;
const MOBILE_SCROLL_OFFSET = 230;
const SuggestedPromptGroup = ({ prompts, onPromptClick, initialNumber = 9, showMoreAmount = 9 })=>{
    const [maxNumber, setMaxNumber] = (0, _react.useState)(initialNumber);
    const { isMobile, safeArea } = (0, _hooks.useDeviceInfo)();
    const scrollOffset = isMobile ? MOBILE_SCROLL_OFFSET : DESKTOP_SCROLL_OFFSET;
    const ref = (0, _react.useRef)(null);
    const areMorePrompts = prompts.length > maxNumber;
    const collapseGroup = (0, _react.useCallback)(()=>{
        var _ref_current;
        setMaxNumber(initialNumber);
        const scrollAmount = (_ref_current = ref.current) === null || _ref_current === void 0 ? void 0 : _ref_current.getBoundingClientRect().y;
        if (scrollAmount && scrollAmount < 0) {
            window.scrollBy({
                top: scrollAmount - scrollOffset,
                behavior: "smooth"
            });
        }
    }, [
        initialNumber,
        scrollOffset
    ]);
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
        sx: {
            pt: 1,
            pb: `calc(${isMobile ? _NavBars.BOTTOM_NAV_HEIGHT : 20}px + ${safeArea.bottom})`,
            display: "flex",
            flexDirection: "column",
            justifyContent: "center"
        },
        ref: ref,
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Grid, {
                container: true,
                spacing: 2.5,
                children: prompts.slice(0, maxNumber).map((prompt)=>!prompt.blocked && /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Grid, {
                        item: true,
                        xs: 12,
                        md: 4,
                        sx: {
                            "& > div": {
                                minHeight: isMobile ? 0 : undefined
                            }
                        },
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_SuggestedPromptCard.SuggestedPromptCard, {
                            prompt: prompt,
                            onPromptClick: onPromptClick
                        })
                    }, prompt.label))
            }),
            prompts.length > initialNumber && areMorePrompts ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.ButtonBase, {
                sx: {
                    mt: 2.5
                },
                disableRipple: true,
                onClick: ()=>areMorePrompts ? setMaxNumber((prev)=>prev + showMoreAmount) : collapseGroup(),
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                    sx: {
                        color: "text.secondary",
                        "&:hover": {
                            color: "text.primary"
                        }
                    },
                    children: "Show more"
                })
            }) : null
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9jb21wb3NpdGUtY29tcG9uZW50cy9zcmMvU3VnZ2VzdGVkUHJvbXB0cy9TdWdnZXN0ZWRQcm9tcHRHcm91cC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlQ2FsbGJhY2ssIHVzZVJlZiwgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IHsgQ3VyYXRlZFN1Z2dlc3RlZFByb21wdCB9IGZyb20gXCJAcnAvcmVhY3QvY29tbW9uL2hvb2tzXCJcbmltcG9ydCB7IHVzZURldmljZUluZm8gfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9jb21tb24vaG9va3NcIlxuaW1wb3J0IHsgQm94LCBCdXR0b25CYXNlLCBHcmlkLCBUeXBvZ3JhcGh5IH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvbXVpL2NvcmVcIlxuaW1wb3J0IHsgQk9UVE9NX05BVl9IRUlHSFQgfSBmcm9tIFwiLi4vTmF2QmFyc1wiXG5pbXBvcnQgeyBTdWdnZXN0ZWRQcm9tcHRDYXJkIH0gZnJvbSBcIi4vU3VnZ2VzdGVkUHJvbXB0Q2FyZFwiXG5cbnR5cGUgUHJvcHMgPSB7XG4gIHByb21wdHM6IEFycmF5PEN1cmF0ZWRTdWdnZXN0ZWRQcm9tcHQ+XG4gIG9uUHJvbXB0Q2xpY2s6IChwcm9tcHQ6IEN1cmF0ZWRTdWdnZXN0ZWRQcm9tcHQpID0+IHZvaWRcbiAgaW5pdGlhbE51bWJlcj86IG51bWJlclxuICBzaG93TW9yZUFtb3VudD86IG51bWJlclxufVxuXG5jb25zdCBERVNLVE9QX1NDUk9MTF9PRkZTRVQgPSAxNTBcbmNvbnN0IE1PQklMRV9TQ1JPTExfT0ZGU0VUID0gMjMwXG5cbmNvbnN0IFN1Z2dlc3RlZFByb21wdEdyb3VwID0gKHtcbiAgcHJvbXB0cyxcbiAgb25Qcm9tcHRDbGljayxcbiAgaW5pdGlhbE51bWJlciA9IDksXG4gIHNob3dNb3JlQW1vdW50ID0gOSxcbn06IFByb3BzKSA9PiB7XG4gIGNvbnN0IFttYXhOdW1iZXIsIHNldE1heE51bWJlcl0gPSB1c2VTdGF0ZShpbml0aWFsTnVtYmVyKVxuICBjb25zdCB7IGlzTW9iaWxlLCBzYWZlQXJlYSB9ID0gdXNlRGV2aWNlSW5mbygpXG4gIGNvbnN0IHNjcm9sbE9mZnNldCA9IGlzTW9iaWxlID8gTU9CSUxFX1NDUk9MTF9PRkZTRVQgOiBERVNLVE9QX1NDUk9MTF9PRkZTRVRcbiAgY29uc3QgcmVmID0gdXNlUmVmPEhUTUxEaXZFbGVtZW50PihudWxsKVxuXG4gIGNvbnN0IGFyZU1vcmVQcm9tcHRzID0gcHJvbXB0cy5sZW5ndGggPiBtYXhOdW1iZXJcbiAgY29uc3QgY29sbGFwc2VHcm91cCA9IHVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICBzZXRNYXhOdW1iZXIoaW5pdGlhbE51bWJlcilcblxuICAgIGNvbnN0IHNjcm9sbEFtb3VudCA9IHJlZi5jdXJyZW50Py5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS55XG4gICAgaWYgKHNjcm9sbEFtb3VudCAmJiBzY3JvbGxBbW91bnQgPCAwKSB7XG4gICAgICB3aW5kb3cuc2Nyb2xsQnkoeyB0b3A6IHNjcm9sbEFtb3VudCAtIHNjcm9sbE9mZnNldCwgYmVoYXZpb3I6IFwic21vb3RoXCIgfSlcbiAgICB9XG4gIH0sIFtpbml0aWFsTnVtYmVyLCBzY3JvbGxPZmZzZXRdKVxuXG4gIHJldHVybiAoXG4gICAgPEJveFxuICAgICAgc3g9e3tcbiAgICAgICAgcHQ6IDEsXG4gICAgICAgIHBiOiBgY2FsYygke2lzTW9iaWxlID8gQk9UVE9NX05BVl9IRUlHSFQgOiAyMH1weCArICR7c2FmZUFyZWEuYm90dG9tfSlgLFxuICAgICAgICBkaXNwbGF5OiBcImZsZXhcIixcbiAgICAgICAgZmxleERpcmVjdGlvbjogXCJjb2x1bW5cIixcbiAgICAgICAganVzdGlmeUNvbnRlbnQ6IFwiY2VudGVyXCIsXG4gICAgICB9fVxuICAgICAgcmVmPXtyZWZ9XG4gICAgPlxuICAgICAgPEdyaWQgY29udGFpbmVyIHNwYWNpbmc9ezIuNX0+XG4gICAgICAgIHtwcm9tcHRzLnNsaWNlKDAsIG1heE51bWJlcikubWFwKFxuICAgICAgICAgIHByb21wdCA9PlxuICAgICAgICAgICAgIXByb21wdC5ibG9ja2VkICYmIChcbiAgICAgICAgICAgICAgPEdyaWRcbiAgICAgICAgICAgICAgICBpdGVtXG4gICAgICAgICAgICAgICAgeHM9ezEyfVxuICAgICAgICAgICAgICAgIG1kPXs0fVxuICAgICAgICAgICAgICAgIGtleT17cHJvbXB0LmxhYmVsfVxuICAgICAgICAgICAgICAgIHN4PXt7XG4gICAgICAgICAgICAgICAgICBcIiYgPiBkaXZcIjoge1xuICAgICAgICAgICAgICAgICAgICBtaW5IZWlnaHQ6IGlzTW9iaWxlID8gMCA6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDxTdWdnZXN0ZWRQcm9tcHRDYXJkIHByb21wdD17cHJvbXB0fSBvblByb21wdENsaWNrPXtvblByb21wdENsaWNrfSAvPlxuICAgICAgICAgICAgICA8L0dyaWQ+XG4gICAgICAgICAgICApLFxuICAgICAgICApfVxuICAgICAgPC9HcmlkPlxuICAgICAge3Byb21wdHMubGVuZ3RoID4gaW5pdGlhbE51bWJlciAmJiBhcmVNb3JlUHJvbXB0cyA/IChcbiAgICAgICAgPEJ1dHRvbkJhc2VcbiAgICAgICAgICBzeD17eyBtdDogMi41IH19XG4gICAgICAgICAgZGlzYWJsZVJpcHBsZVxuICAgICAgICAgIG9uQ2xpY2s9eygpID0+XG4gICAgICAgICAgICBhcmVNb3JlUHJvbXB0cyA/IHNldE1heE51bWJlcihwcmV2ID0+IHByZXYgKyBzaG93TW9yZUFtb3VudCkgOiBjb2xsYXBzZUdyb3VwKClcbiAgICAgICAgICB9XG4gICAgICAgID5cbiAgICAgICAgICA8VHlwb2dyYXBoeVxuICAgICAgICAgICAgc3g9e3tcbiAgICAgICAgICAgICAgY29sb3I6IFwidGV4dC5zZWNvbmRhcnlcIixcbiAgICAgICAgICAgICAgXCImOmhvdmVyXCI6IHtcbiAgICAgICAgICAgICAgICBjb2xvcjogXCJ0ZXh0LnByaW1hcnlcIixcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH19XG4gICAgICAgICAgPlxuICAgICAgICAgICAgU2hvdyBtb3JlXG4gICAgICAgICAgPC9UeXBvZ3JhcGh5PlxuICAgICAgICA8L0J1dHRvbkJhc2U+XG4gICAgICApIDogbnVsbH1cbiAgICA8L0JveD5cbiAgKVxufVxuZXhwb3J0IHsgU3VnZ2VzdGVkUHJvbXB0R3JvdXAgfVxuIl0sIm5hbWVzIjpbIlN1Z2dlc3RlZFByb21wdEdyb3VwIiwiREVTS1RPUF9TQ1JPTExfT0ZGU0VUIiwiTU9CSUxFX1NDUk9MTF9PRkZTRVQiLCJwcm9tcHRzIiwib25Qcm9tcHRDbGljayIsImluaXRpYWxOdW1iZXIiLCJzaG93TW9yZUFtb3VudCIsIm1heE51bWJlciIsInNldE1heE51bWJlciIsInVzZVN0YXRlIiwiaXNNb2JpbGUiLCJzYWZlQXJlYSIsInVzZURldmljZUluZm8iLCJzY3JvbGxPZmZzZXQiLCJyZWYiLCJ1c2VSZWYiLCJhcmVNb3JlUHJvbXB0cyIsImxlbmd0aCIsImNvbGxhcHNlR3JvdXAiLCJ1c2VDYWxsYmFjayIsInNjcm9sbEFtb3VudCIsImN1cnJlbnQiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJ5Iiwid2luZG93Iiwic2Nyb2xsQnkiLCJ0b3AiLCJiZWhhdmlvciIsIkJveCIsInN4IiwicHQiLCJwYiIsIkJPVFRPTV9OQVZfSEVJR0hUIiwiYm90dG9tIiwiZGlzcGxheSIsImZsZXhEaXJlY3Rpb24iLCJqdXN0aWZ5Q29udGVudCIsIkdyaWQiLCJjb250YWluZXIiLCJzcGFjaW5nIiwic2xpY2UiLCJtYXAiLCJwcm9tcHQiLCJibG9ja2VkIiwiaXRlbSIsInhzIiwibWQiLCJtaW5IZWlnaHQiLCJ1bmRlZmluZWQiLCJTdWdnZXN0ZWRQcm9tcHRDYXJkIiwibGFiZWwiLCJCdXR0b25CYXNlIiwibXQiLCJkaXNhYmxlUmlwcGxlIiwib25DbGljayIsInByZXYiLCJUeXBvZ3JhcGh5IiwiY29sb3IiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQTRGU0E7OztlQUFBQTs7Ozt1QkE1RnFDO3VCQUVoQjtzQkFDb0I7eUJBQ2hCO3FDQUNFO0FBU3BDLE1BQU1DLHdCQUF3QjtBQUM5QixNQUFNQyx1QkFBdUI7QUFFN0IsTUFBTUYsdUJBQXVCLENBQUMsRUFDNUJHLE9BQU8sRUFDUEMsYUFBYSxFQUNiQyxnQkFBZ0IsQ0FBQyxFQUNqQkMsaUJBQWlCLENBQUMsRUFDWjtJQUNOLE1BQU0sQ0FBQ0MsV0FBV0MsYUFBYSxHQUFHQyxJQUFBQSxlQUFRLEVBQUNKO0lBQzNDLE1BQU0sRUFBRUssUUFBUSxFQUFFQyxRQUFRLEVBQUUsR0FBR0MsSUFBQUEsb0JBQWE7SUFDNUMsTUFBTUMsZUFBZUgsV0FBV1IsdUJBQXVCRDtJQUN2RCxNQUFNYSxNQUFNQyxJQUFBQSxhQUFNLEVBQWlCO0lBRW5DLE1BQU1DLGlCQUFpQmIsUUFBUWMsTUFBTSxHQUFHVjtJQUN4QyxNQUFNVyxnQkFBZ0JDLElBQUFBLGtCQUFXLEVBQUM7WUFHWEw7UUFGckJOLGFBQWFIO1FBRWIsTUFBTWUsZ0JBQWVOLGVBQUFBLElBQUlPLE9BQU8sY0FBWFAsbUNBQUFBLGFBQWFRLHFCQUFxQixHQUFHQyxDQUFDO1FBQzNELElBQUlILGdCQUFnQkEsZUFBZSxHQUFHO1lBQ3BDSSxPQUFPQyxRQUFRLENBQUM7Z0JBQUVDLEtBQUtOLGVBQWVQO2dCQUFjYyxVQUFVO1lBQVM7UUFDekU7SUFDRixHQUFHO1FBQUN0QjtRQUFlUTtLQUFhO0lBRWhDLHFCQUNFLHNCQUFDZSxTQUFHO1FBQ0ZDLElBQUk7WUFDRkMsSUFBSTtZQUNKQyxJQUFJLENBQUMsS0FBSyxFQUFFckIsV0FBV3NCLDBCQUFpQixHQUFHLEdBQUcsS0FBSyxFQUFFckIsU0FBU3NCLE1BQU0sQ0FBQyxDQUFDLENBQUM7WUFDdkVDLFNBQVM7WUFDVEMsZUFBZTtZQUNmQyxnQkFBZ0I7UUFDbEI7UUFDQXRCLEtBQUtBOzswQkFFTCxxQkFBQ3VCLFVBQUk7Z0JBQUNDLFNBQVM7Z0JBQUNDLFNBQVM7MEJBQ3RCcEMsUUFBUXFDLEtBQUssQ0FBQyxHQUFHakMsV0FBV2tDLEdBQUcsQ0FDOUJDLENBQUFBLFNBQ0UsQ0FBQ0EsT0FBT0MsT0FBTyxrQkFDYixxQkFBQ04sVUFBSTt3QkFDSE8sSUFBSTt3QkFDSkMsSUFBSTt3QkFDSkMsSUFBSTt3QkFFSmpCLElBQUk7NEJBQ0YsV0FBVztnQ0FDVGtCLFdBQVdyQyxXQUFXLElBQUlzQzs0QkFDNUI7d0JBQ0Y7a0NBRUEsY0FBQSxxQkFBQ0Msd0NBQW1COzRCQUFDUCxRQUFRQTs0QkFBUXRDLGVBQWVBOzt1QkFQL0NzQyxPQUFPUSxLQUFLOztZQVkxQi9DLFFBQVFjLE1BQU0sR0FBR1osaUJBQWlCVywrQkFDakMscUJBQUNtQyxnQkFBVTtnQkFDVHRCLElBQUk7b0JBQUV1QixJQUFJO2dCQUFJO2dCQUNkQyxhQUFhO2dCQUNiQyxTQUFTLElBQ1B0QyxpQkFBaUJSLGFBQWErQyxDQUFBQSxPQUFRQSxPQUFPakQsa0JBQWtCWTswQkFHakUsY0FBQSxxQkFBQ3NDLGdCQUFVO29CQUNUM0IsSUFBSTt3QkFDRjRCLE9BQU87d0JBQ1AsV0FBVzs0QkFDVEEsT0FBTzt3QkFDVDtvQkFDRjs4QkFDRDs7aUJBSUQ7OztBQUdWIn0=