{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/discovery-sidebar/src/GenericGroup/GroupTitle.tsx"],"sourcesContent":["import { useState } from \"react\"\nimport { DiscoveryPanelGroup } from \"@rp/react/tanstack-api/discovery-panel-config\"\nimport { GroupTitleStyled } from \"@rp/react/web/common/composite-components\"\nimport { useDeviceInfo } from \"@rp/react/web/common/hooks\"\nimport { tagManagerEvents } from \"@rp/react/web/common/vendors/utils\"\nimport { IconEntity } from \"@rp/react/web/icons\"\nimport {\n  Box,\n  ButtonBase,\n  FormControlLabel,\n  Popover,\n  Radio,\n  RadioGroup,\n  Typography,\n  styled,\n} from \"@rp/react/web/mui/core\"\nimport { Sort } from \"@rp/react/web/mui/icons\"\nimport { GroupByMenuStyled, GroupByTitleLabel } from \"./Group.styles\"\n\ntype Props = {\n  icon?: string\n  title: string\n  subtitle?: string\n  groups?: Array<DiscoveryPanelGroup>\n  groupBy?: string\n  onGroupByChange?: (category: string, group: string) => void\n  showShort?: boolean\n  groupId: string\n}\n\nconst GroupIcon = styled(IconEntity)(({ theme }) => ({\n  width: theme.spacing(2),\n  height: theme.spacing(2),\n  marginLeft: theme.spacing(1),\n}))\n\nconst GroupTitle = ({\n  icon,\n  title,\n  subtitle,\n  groups = [],\n  groupBy = \"\",\n  groupId,\n  onGroupByChange = () => {},\n}: Props) => {\n  const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | undefined>(undefined)\n  const { isMobile } = useDeviceInfo()\n  const openPopMenu = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const closePopMenu = () => {\n    setAnchorEl(undefined)\n  }\n\n  const handleChange = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    onGroupByChange(groupId, ev.target.value)\n    closePopMenu()\n\n    const newLabel = groups.find(item => item.group === ev.target.value)?.label\n\n    tagManagerEvents.dpGrouping({\n      category: groupId,\n      groupBy: newLabel ?? \"default\",\n    })\n  }\n\n  return (\n    <>\n      <Box display=\"flex\" alignItems=\"center\" mb={1} justifyContent=\"space-between\">\n        <GroupTitleStyled flexGrow={groupBy ? 0 : 1}>\n          {icon ? <GroupIcon icon={icon} /> : null}\n          <Typography>{title}</Typography>\n        </GroupTitleStyled>\n        {groupBy ? (\n          <GroupByTitleLabel>\n            by {groups.find(item => item.group === groupBy)?.label}\n          </GroupByTitleLabel>\n        ) : null}\n        <Box\n          component=\"legend\"\n          display=\"flex\"\n          alignItems=\"center\"\n          sx={{ px: 0, opacity: anchorEl ? \"1 !important\" : undefined }}\n        >\n          {groups.length > 1 ? (\n            <ButtonBase\n              onClick={openPopMenu}\n              disableRipple\n              sx={{\n                color: anchorEl ? \"text.primary\" : \"text.disabled\",\n                transition: \"color 0.2s ease-in-out\",\n                \"&:hover\": { color: \"text.primary\" },\n              }}\n            >\n              <Typography sx={{ fontSize: 12, mr: 0.5 }}>Group by</Typography>\n              <Sort fontSize=\"small\" />\n            </ButtonBase>\n          ) : null}\n        </Box>\n        {isMobile || !subtitle ? null : (\n          <Box display=\"flex\" alignItems=\"center\">\n            <Typography\n              minWidth={90}\n              fontSize={14}\n              textTransform=\"uppercase\"\n              color=\"text.secondary\"\n            >\n              {subtitle}\n            </Typography>\n          </Box>\n        )}\n      </Box>\n      <Popover\n        open={anchorEl !== undefined}\n        anchorOrigin={{\n          horizontal: \"right\",\n          vertical: \"bottom\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\",\n        }}\n        anchorEl={anchorEl}\n        sx={{ zIndex: 7 }}\n        onClose={closePopMenu}\n      >\n        <GroupByMenuStyled>\n          <Typography color=\"text.secondary\">GROUP BY</Typography>\n          <RadioGroup value={groupBy} onChange={handleChange}>\n            {groups.map(group => (\n              <FormControlLabel\n                key={group.group}\n                value={group.group || \"\"}\n                control={<Radio size=\"small\" />}\n                label={group.label}\n              />\n            ))}\n          </RadioGroup>\n        </GroupByMenuStyled>\n      </Popover>\n    </>\n  )\n}\n\nexport { GroupTitle }\n"],"names":["GroupTitle","GroupIcon","styled","IconEntity","theme","width","spacing","height","marginLeft","icon","title","subtitle","groups","groupBy","groupId","onGroupByChange","anchorEl","setAnchorEl","useState","undefined","isMobile","useDeviceInfo","openPopMenu","event","currentTarget","closePopMenu","handleChange","ev","target","value","newLabel","find","item","group","label","tagManagerEvents","dpGrouping","category","Box","display","alignItems","mb","justifyContent","GroupTitleStyled","flexGrow","Typography","GroupByTitleLabel","component","sx","px","opacity","length","ButtonBase","onClick","disableRipple","color","transition","fontSize","mr","Sort","minWidth","textTransform","Popover","open","anchorOrigin","horizontal","vertical","transformOrigin","zIndex","onClose","GroupByMenuStyled","RadioGroup","onChange","map","FormControlLabel","control","Radio","size"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}