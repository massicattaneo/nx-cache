f36c9a0b922d0878de57c21e75e4f6c2
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "WatchlistChip", {
    enumerable: true,
    get: function() {
        return WatchlistChip;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _watchlist = require("@rp/react/tanstack-api/watchlist");
const _hooks = require("@rp/react/web/common/hooks");
const _utils = require("@rp/react/web/common/vendors/utils");
const _icons = require("@rp/react/web/icons");
const _core = require("@rp/react/web/mui/core");
const _NameDisplay = require("../NameDisplay");
const _WatchlistDropdown = require("../dropdowns/WatchlistDropdown");
const _BaseChip = require("./BaseChip");
const _Chipstyles = require("./Chip.styles");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const WatchlistChip = /*#__PURE__*/ (0, _react.forwardRef)(({ filter, onRemove, query }, ref)=>{
    const [anchorEl, setAnchorEl] = (0, _react.useState)(null);
    const data = (0, _watchlist.useWatchlist)(filter.value);
    const open = Boolean(anchorEl);
    (0, _hooks.useDisableIOSTouch)(open);
    (0, _hooks.useDisableIOSTouch)(open);
    const handleClick = (event)=>{
        setAnchorEl(event.currentTarget);
    };
    const handleClose = ()=>{
        setAnchorEl(null);
    };
    const handleOperationChange = (operation)=>{
        var _query_id, _query_saveStatus;
        _utils.tagManagerEvents.queryRefinement({
            action: "changeOperation",
            component: "queryBar",
            queryId: (_query_id = query === null || query === void 0 ? void 0 : query.id) !== null && _query_id !== void 0 ? _query_id : "",
            queryType: "watchlist",
            savedStatus: (_query_saveStatus = query === null || query === void 0 ? void 0 : query.saveStatus) !== null && _query_saveStatus !== void 0 ? _query_saveStatus : "unsaved"
        });
        query === null || query === void 0 ? void 0 : query.actions.expression.updateFilter(filter.id, (filter)=>{
            if (!Array.isArray(filter.value)) {
                return _object_spread_props(_object_spread({}, filter), {
                    operation
                });
            }
            return filter;
        });
        handleClose();
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_BaseChip.BaseChip, {
                icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.QueryIcon, {
                    icon: "watchlist"
                }),
                onRemove: onRemove,
                clickable: true,
                onClick: handleClick,
                selected: query && open,
                ref: ref,
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_Chipstyles.ChipLabel, {
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_NameDisplay.NameDisplay, {
                        filterType: "watchlist",
                        entityId: filter.value,
                        data: data
                    })
                })
            }),
            query ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Popover, {
                open: open,
                anchorEl: anchorEl,
                onClose: handleClose,
                anchorOrigin: {
                    vertical: "bottom",
                    horizontal: "left"
                },
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_WatchlistDropdown.WatchlistDropdown, {
                    filter: filter,
                    onChange: handleOperationChange
                })
            }) : null
        ]
    });
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2Nxcy1xdWVyeS1iYXIvc3JjL2xpYi9jaGlwcy9XYXRjaGxpc3RDaGlwLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNb3VzZUV2ZW50LCBmb3J3YXJkUmVmLCB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgeyBScHFsRmxhdEFycmF5SWRGaWx0ZXIgfSBmcm9tIFwiQHJwL2NvbW1vbi9hcGktdHlwZXNcIlxuaW1wb3J0IHsgdXNlV2F0Y2hsaXN0IH0gZnJvbSBcIkBycC9yZWFjdC90YW5zdGFjay1hcGkvd2F0Y2hsaXN0XCJcbmltcG9ydCB7IHVzZURpc2FibGVJT1NUb3VjaCB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL2NvbW1vbi9ob29rc1wiXG5pbXBvcnQgeyB0YWdNYW5hZ2VyRXZlbnRzIH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvY29tbW9uL3ZlbmRvcnMvdXRpbHNcIlxuaW1wb3J0IHsgUXVlcnlJY29uIH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvaWNvbnNcIlxuaW1wb3J0IHsgUG9wb3ZlciB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL211aS9jb3JlXCJcbmltcG9ydCB7IE5hbWVEaXNwbGF5IH0gZnJvbSBcIi4uL05hbWVEaXNwbGF5XCJcbmltcG9ydCB7IENxc1F1ZXJ5QmFyQ29udGV4dCB9IGZyb20gXCIuLi9jcXMtcXVlcnktYmFyLnR5cGVzXCJcbmltcG9ydCB7IFdhdGNobGlzdERyb3Bkb3duIH0gZnJvbSBcIi4uL2Ryb3Bkb3ducy9XYXRjaGxpc3REcm9wZG93blwiXG5pbXBvcnQgeyBCYXNlQ2hpcCB9IGZyb20gXCIuL0Jhc2VDaGlwXCJcbmltcG9ydCB7IENoaXBMYWJlbCB9IGZyb20gXCIuL0NoaXAuc3R5bGVzXCJcblxudHlwZSBXYXRjaGxpc3RDaGlwUHJvcHMgPSB7XG4gIGZpbHRlcjogUnBxbEZsYXRBcnJheUlkRmlsdGVyXG4gIG9uUmVtb3ZlPzogKCkgPT4gdm9pZFxuICBxdWVyeT86IENxc1F1ZXJ5QmFyQ29udGV4dFxufVxuXG5jb25zdCBXYXRjaGxpc3RDaGlwID0gZm9yd2FyZFJlZjxIVE1MRGl2RWxlbWVudCwgV2F0Y2hsaXN0Q2hpcFByb3BzPihcbiAgKHsgZmlsdGVyLCBvblJlbW92ZSwgcXVlcnkgfSwgcmVmKSA9PiB7XG4gICAgY29uc3QgW2FuY2hvckVsLCBzZXRBbmNob3JFbF0gPSB1c2VTdGF0ZTxIVE1MRWxlbWVudCB8IG51bGw+KG51bGwpXG4gICAgY29uc3QgZGF0YSA9IHVzZVdhdGNobGlzdChmaWx0ZXIudmFsdWUpXG4gICAgY29uc3Qgb3BlbiA9IEJvb2xlYW4oYW5jaG9yRWwpXG4gICAgdXNlRGlzYWJsZUlPU1RvdWNoKG9wZW4pXG5cbiAgICB1c2VEaXNhYmxlSU9TVG91Y2gob3BlbilcblxuICAgIGNvbnN0IGhhbmRsZUNsaWNrID0gKGV2ZW50OiBNb3VzZUV2ZW50PEhUTUxFbGVtZW50PikgPT4ge1xuICAgICAgc2V0QW5jaG9yRWwoZXZlbnQuY3VycmVudFRhcmdldClcbiAgICB9XG5cbiAgICBjb25zdCBoYW5kbGVDbG9zZSA9ICgpID0+IHtcbiAgICAgIHNldEFuY2hvckVsKG51bGwpXG4gICAgfVxuXG4gICAgY29uc3QgaGFuZGxlT3BlcmF0aW9uQ2hhbmdlID0gKG9wZXJhdGlvbjogc3RyaW5nKSA9PiB7XG4gICAgICB0YWdNYW5hZ2VyRXZlbnRzLnF1ZXJ5UmVmaW5lbWVudCh7XG4gICAgICAgIGFjdGlvbjogXCJjaGFuZ2VPcGVyYXRpb25cIixcbiAgICAgICAgY29tcG9uZW50OiBcInF1ZXJ5QmFyXCIsXG4gICAgICAgIHF1ZXJ5SWQ6IHF1ZXJ5Py5pZCA/PyBcIlwiLFxuICAgICAgICBxdWVyeVR5cGU6IFwid2F0Y2hsaXN0XCIsXG4gICAgICAgIHNhdmVkU3RhdHVzOiBxdWVyeT8uc2F2ZVN0YXR1cyA/PyBcInVuc2F2ZWRcIixcbiAgICAgIH0pXG5cbiAgICAgIHF1ZXJ5Py5hY3Rpb25zLmV4cHJlc3Npb24udXBkYXRlRmlsdGVyKGZpbHRlci5pZCwgZmlsdGVyID0+IHtcbiAgICAgICAgaWYgKCFBcnJheS5pc0FycmF5KGZpbHRlci52YWx1ZSkpIHtcbiAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgLi4uZmlsdGVyLFxuICAgICAgICAgICAgb3BlcmF0aW9uLFxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmlsdGVyXG4gICAgICB9KVxuICAgICAgaGFuZGxlQ2xvc2UoKVxuICAgIH1cblxuICAgIHJldHVybiAoXG4gICAgICA8PlxuICAgICAgICA8QmFzZUNoaXBcbiAgICAgICAgICBpY29uPXs8UXVlcnlJY29uIGljb249XCJ3YXRjaGxpc3RcIiAvPn1cbiAgICAgICAgICBvblJlbW92ZT17b25SZW1vdmV9XG4gICAgICAgICAgY2xpY2thYmxlXG4gICAgICAgICAgb25DbGljaz17aGFuZGxlQ2xpY2t9XG4gICAgICAgICAgc2VsZWN0ZWQ9e3F1ZXJ5ICYmIG9wZW59XG4gICAgICAgICAgcmVmPXtyZWZ9XG4gICAgICAgID5cbiAgICAgICAgICA8Q2hpcExhYmVsPlxuICAgICAgICAgICAgPE5hbWVEaXNwbGF5IGZpbHRlclR5cGU9XCJ3YXRjaGxpc3RcIiBlbnRpdHlJZD17ZmlsdGVyLnZhbHVlfSBkYXRhPXtkYXRhfSAvPlxuICAgICAgICAgIDwvQ2hpcExhYmVsPlxuICAgICAgICA8L0Jhc2VDaGlwPlxuICAgICAgICB7cXVlcnkgPyAoXG4gICAgICAgICAgPFBvcG92ZXJcbiAgICAgICAgICAgIG9wZW49e29wZW59XG4gICAgICAgICAgICBhbmNob3JFbD17YW5jaG9yRWx9XG4gICAgICAgICAgICBvbkNsb3NlPXtoYW5kbGVDbG9zZX1cbiAgICAgICAgICAgIGFuY2hvck9yaWdpbj17eyB2ZXJ0aWNhbDogXCJib3R0b21cIiwgaG9yaXpvbnRhbDogXCJsZWZ0XCIgfX1cbiAgICAgICAgICA+XG4gICAgICAgICAgICA8V2F0Y2hsaXN0RHJvcGRvd24gZmlsdGVyPXtmaWx0ZXJ9IG9uQ2hhbmdlPXtoYW5kbGVPcGVyYXRpb25DaGFuZ2V9IC8+XG4gICAgICAgICAgPC9Qb3BvdmVyPlxuICAgICAgICApIDogbnVsbH1cbiAgICAgIDwvPlxuICAgIClcbiAgfSxcbilcblxuZXhwb3J0IHsgV2F0Y2hsaXN0Q2hpcCB9XG5leHBvcnQgdHlwZSB7IFdhdGNobGlzdENoaXBQcm9wcyB9XG4iXSwibmFtZXMiOlsiV2F0Y2hsaXN0Q2hpcCIsImZvcndhcmRSZWYiLCJmaWx0ZXIiLCJvblJlbW92ZSIsInF1ZXJ5IiwicmVmIiwiYW5jaG9yRWwiLCJzZXRBbmNob3JFbCIsInVzZVN0YXRlIiwiZGF0YSIsInVzZVdhdGNobGlzdCIsInZhbHVlIiwib3BlbiIsIkJvb2xlYW4iLCJ1c2VEaXNhYmxlSU9TVG91Y2giLCJoYW5kbGVDbGljayIsImV2ZW50IiwiY3VycmVudFRhcmdldCIsImhhbmRsZUNsb3NlIiwiaGFuZGxlT3BlcmF0aW9uQ2hhbmdlIiwib3BlcmF0aW9uIiwidGFnTWFuYWdlckV2ZW50cyIsInF1ZXJ5UmVmaW5lbWVudCIsImFjdGlvbiIsImNvbXBvbmVudCIsInF1ZXJ5SWQiLCJpZCIsInF1ZXJ5VHlwZSIsInNhdmVkU3RhdHVzIiwic2F2ZVN0YXR1cyIsImFjdGlvbnMiLCJleHByZXNzaW9uIiwidXBkYXRlRmlsdGVyIiwiQXJyYXkiLCJpc0FycmF5IiwiQmFzZUNoaXAiLCJpY29uIiwiUXVlcnlJY29uIiwiY2xpY2thYmxlIiwib25DbGljayIsInNlbGVjdGVkIiwiQ2hpcExhYmVsIiwiTmFtZURpc3BsYXkiLCJmaWx0ZXJUeXBlIiwiZW50aXR5SWQiLCJQb3BvdmVyIiwib25DbG9zZSIsImFuY2hvck9yaWdpbiIsInZlcnRpY2FsIiwiaG9yaXpvbnRhbCIsIldhdGNobGlzdERyb3Bkb3duIiwib25DaGFuZ2UiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQXNGU0E7OztlQUFBQTs7Ozt1QkF0RndDOzJCQUVwQjt1QkFDTTt1QkFDRjt1QkFDUDtzQkFDRjs2QkFDSTttQ0FFTTswQkFDVDs0QkFDQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFRMUIsTUFBTUEsOEJBQWdCQyxJQUFBQSxpQkFBVSxFQUM5QixDQUFDLEVBQUVDLE1BQU0sRUFBRUMsUUFBUSxFQUFFQyxLQUFLLEVBQUUsRUFBRUM7SUFDNUIsTUFBTSxDQUFDQyxVQUFVQyxZQUFZLEdBQUdDLElBQUFBLGVBQVEsRUFBcUI7SUFDN0QsTUFBTUMsT0FBT0MsSUFBQUEsdUJBQVksRUFBQ1IsT0FBT1MsS0FBSztJQUN0QyxNQUFNQyxPQUFPQyxRQUFRUDtJQUNyQlEsSUFBQUEseUJBQWtCLEVBQUNGO0lBRW5CRSxJQUFBQSx5QkFBa0IsRUFBQ0Y7SUFFbkIsTUFBTUcsY0FBYyxDQUFDQztRQUNuQlQsWUFBWVMsTUFBTUMsYUFBYTtJQUNqQztJQUVBLE1BQU1DLGNBQWM7UUFDbEJYLFlBQVk7SUFDZDtJQUVBLE1BQU1ZLHdCQUF3QixDQUFDQztZQUlsQmhCLFdBRUlBO1FBTGZpQix1QkFBZ0IsQ0FBQ0MsZUFBZSxDQUFDO1lBQy9CQyxRQUFRO1lBQ1JDLFdBQVc7WUFDWEMsU0FBU3JCLENBQUFBLFlBQUFBLGtCQUFBQSw0QkFBQUEsTUFBT3NCLEVBQUUsY0FBVHRCLHVCQUFBQSxZQUFhO1lBQ3RCdUIsV0FBVztZQUNYQyxhQUFheEIsQ0FBQUEsb0JBQUFBLGtCQUFBQSw0QkFBQUEsTUFBT3lCLFVBQVUsY0FBakJ6QiwrQkFBQUEsb0JBQXFCO1FBQ3BDO1FBRUFBLGtCQUFBQSw0QkFBQUEsTUFBTzBCLE9BQU8sQ0FBQ0MsVUFBVSxDQUFDQyxZQUFZLENBQUM5QixPQUFPd0IsRUFBRSxFQUFFeEIsQ0FBQUE7WUFDaEQsSUFBSSxDQUFDK0IsTUFBTUMsT0FBTyxDQUFDaEMsT0FBT1MsS0FBSyxHQUFHO2dCQUNoQyxPQUFPLHdDQUNGVDtvQkFDSGtCOztZQUVKO1lBQ0EsT0FBT2xCO1FBQ1Q7UUFDQWdCO0lBQ0Y7SUFFQSxxQkFDRTs7MEJBQ0UscUJBQUNpQixrQkFBUTtnQkFDUEMsb0JBQU0scUJBQUNDLGdCQUFTO29CQUFDRCxNQUFLOztnQkFDdEJqQyxVQUFVQTtnQkFDVm1DLFNBQVM7Z0JBQ1RDLFNBQVN4QjtnQkFDVHlCLFVBQVVwQyxTQUFTUTtnQkFDbkJQLEtBQUtBOzBCQUVMLGNBQUEscUJBQUNvQyxxQkFBUzs4QkFDUixjQUFBLHFCQUFDQyx3QkFBVzt3QkFBQ0MsWUFBVzt3QkFBWUMsVUFBVTFDLE9BQU9TLEtBQUs7d0JBQUVGLE1BQU1BOzs7O1lBR3JFTCxzQkFDQyxxQkFBQ3lDLGFBQU87Z0JBQ05qQyxNQUFNQTtnQkFDTk4sVUFBVUE7Z0JBQ1Z3QyxTQUFTNUI7Z0JBQ1Q2QixjQUFjO29CQUFFQyxVQUFVO29CQUFVQyxZQUFZO2dCQUFPOzBCQUV2RCxjQUFBLHFCQUFDQyxvQ0FBaUI7b0JBQUNoRCxRQUFRQTtvQkFBUWlELFVBQVVoQzs7aUJBRTdDOzs7QUFHViJ9