d37afd36709b039a6f63eba45fed1c55
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "profilesProcedure", {
    enumerable: true,
    get: function() {
        return profilesProcedure;
    }
});
const _zod = require("zod");
const _contracts = require("@rp/common/contracts");
const _users = require("../../../database/generators/users");
const _trpcMocks = require("../../../msw/trpcMocks");
const _bigdataapiprocedure = require("../bigdata-api-procedure");
const profilesProcedure = {
    me: _bigdataapiprocedure.bigdataApiProcedure.meta({
        openapi: {
            method: "GET",
            path: "/profiles/me"
        }
    }).output(_contracts.bigdataSchemas.st_profiles_MyProfileResponse).query(async ()=>_trpcMocks.trpcMocks.profilesMe()),
    userQuotas: _bigdataapiprocedure.bigdataApiProcedure.meta({
        openapi: {
            method: "GET",
            path: "/profiles/users/:id"
        }
    }).input(_zod.z.object({
        id: _zod.z.string()
    })).output(_contracts.bigdataSchemas.st_profiles_FullUserProfileResponse).query(async ()=>{
        return {
            id: _users.userOwner.ownerUserId,
            organizationId: _users.userOwner.organization.id,
            userQuota: _trpcMocks.trpcMocks.profilesMe().userQuota,
            userConsumed: _trpcMocks.trpcMocks.profilesMe().userConsumed,
            dateCreated: "2024-03-06T12:18:49.569000",
            lastUpdated: "2024-07-24T13:33:56.466375"
        };
    }),
    organizationQuotas: _bigdataapiprocedure.bigdataApiProcedure.meta({
        openapi: {
            method: "GET",
            path: "/profiles/organizations/:id"
        }
    }).input(_zod.z.object({
        id: _zod.z.string()
    })).output(_contracts.bigdataSchemas.st_profiles_FullOrganizationProfileResponse).query(async ()=>{
        return {
            id: _users.userOwner.ownerUserId,
            organizationQuota: _trpcMocks.trpcMocks.profilesMe().organizationQuota,
            appContentAccessPolicies: _trpcMocks.trpcMocks.profilesMe().contentAccessPolicies,
            sdkContentAccessPolicies: _trpcMocks.trpcMocks.profilesMe().contentAccessPolicies,
            appFeatureAccessPolicies: _trpcMocks.trpcMocks.profilesMe().featureAccessPolicies,
            sdkFeatureAccessPolicies: _trpcMocks.trpcMocks.profilesMe().featureAccessPolicies,
            subscriptionStatus: _trpcMocks.trpcMocks.profilesMe().subscriptionStatus,
            subscriptionRenewalDate: _trpcMocks.trpcMocks.profilesMe().subscriptionRenewalDate,
            subscriptionSource: _trpcMocks.trpcMocks.profilesMe().subscriptionSource,
            subscriptionModification: _trpcMocks.trpcMocks.profilesMe().subscriptionModification,
            entitlements: [],
            dateCreated: "2024-03-06T12:45:04.321000",
            lastUpdated: "2025-03-04T08:19:55.286400",
            organizationConsumed: _trpcMocks.trpcMocks.profilesMe().organizationConsumed
        };
    })
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvZGV2ZWxvcG1lbnQvc3JjL2xpYi90cnBjL2JpZ2RhdGEtYXBpL3Byb2NlZHVyZXMvcHJvZmlsZXMtcHJvY2VkdXJlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHogfSBmcm9tIFwiem9kXCJcbmltcG9ydCB7IGJpZ2RhdGFTY2hlbWFzIH0gZnJvbSBcIkBycC9jb21tb24vY29udHJhY3RzXCJcbmltcG9ydCB7IHVzZXJPd25lciB9IGZyb20gXCIuLi8uLi8uLi9kYXRhYmFzZS9nZW5lcmF0b3JzL3VzZXJzXCJcbmltcG9ydCB7IHRycGNNb2NrcyB9IGZyb20gXCIuLi8uLi8uLi9tc3cvdHJwY01vY2tzXCJcbmltcG9ydCB7IGJpZ2RhdGFBcGlQcm9jZWR1cmUgfSBmcm9tIFwiLi4vYmlnZGF0YS1hcGktcHJvY2VkdXJlXCJcblxuZXhwb3J0IGNvbnN0IHByb2ZpbGVzUHJvY2VkdXJlID0ge1xuICBtZTogYmlnZGF0YUFwaVByb2NlZHVyZVxuICAgIC5tZXRhKHsgb3BlbmFwaTogeyBtZXRob2Q6IFwiR0VUXCIsIHBhdGg6IFwiL3Byb2ZpbGVzL21lXCIgfSB9KVxuICAgIC5vdXRwdXQoYmlnZGF0YVNjaGVtYXMuc3RfcHJvZmlsZXNfTXlQcm9maWxlUmVzcG9uc2UpXG4gICAgLnF1ZXJ5KGFzeW5jICgpID0+IHRycGNNb2Nrcy5wcm9maWxlc01lKCkpLFxuICB1c2VyUXVvdGFzOiBiaWdkYXRhQXBpUHJvY2VkdXJlXG4gICAgLm1ldGEoeyBvcGVuYXBpOiB7IG1ldGhvZDogXCJHRVRcIiwgcGF0aDogXCIvcHJvZmlsZXMvdXNlcnMvOmlkXCIgfSB9KVxuICAgIC5pbnB1dCh6Lm9iamVjdCh7IGlkOiB6LnN0cmluZygpIH0pKVxuICAgIC5vdXRwdXQoYmlnZGF0YVNjaGVtYXMuc3RfcHJvZmlsZXNfRnVsbFVzZXJQcm9maWxlUmVzcG9uc2UpXG4gICAgLnF1ZXJ5KGFzeW5jICgpID0+IHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGlkOiB1c2VyT3duZXIub3duZXJVc2VySWQsXG4gICAgICAgIG9yZ2FuaXphdGlvbklkOiB1c2VyT3duZXIub3JnYW5pemF0aW9uLmlkLFxuICAgICAgICB1c2VyUXVvdGE6IHRycGNNb2Nrcy5wcm9maWxlc01lKCkudXNlclF1b3RhLFxuICAgICAgICB1c2VyQ29uc3VtZWQ6IHRycGNNb2Nrcy5wcm9maWxlc01lKCkudXNlckNvbnN1bWVkLFxuICAgICAgICBkYXRlQ3JlYXRlZDogXCIyMDI0LTAzLTA2VDEyOjE4OjQ5LjU2OTAwMFwiLFxuICAgICAgICBsYXN0VXBkYXRlZDogXCIyMDI0LTA3LTI0VDEzOjMzOjU2LjQ2NjM3NVwiLFxuICAgICAgfVxuICAgIH0pLFxuICBvcmdhbml6YXRpb25RdW90YXM6IGJpZ2RhdGFBcGlQcm9jZWR1cmVcbiAgICAubWV0YSh7IG9wZW5hcGk6IHsgbWV0aG9kOiBcIkdFVFwiLCBwYXRoOiBcIi9wcm9maWxlcy9vcmdhbml6YXRpb25zLzppZFwiIH0gfSlcbiAgICAuaW5wdXQoei5vYmplY3QoeyBpZDogei5zdHJpbmcoKSB9KSlcbiAgICAub3V0cHV0KGJpZ2RhdGFTY2hlbWFzLnN0X3Byb2ZpbGVzX0Z1bGxPcmdhbml6YXRpb25Qcm9maWxlUmVzcG9uc2UpXG4gICAgLnF1ZXJ5KGFzeW5jICgpID0+IHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGlkOiB1c2VyT3duZXIub3duZXJVc2VySWQsXG4gICAgICAgIG9yZ2FuaXphdGlvblF1b3RhOiB0cnBjTW9ja3MucHJvZmlsZXNNZSgpLm9yZ2FuaXphdGlvblF1b3RhLFxuICAgICAgICBhcHBDb250ZW50QWNjZXNzUG9saWNpZXM6IHRycGNNb2Nrcy5wcm9maWxlc01lKCkuY29udGVudEFjY2Vzc1BvbGljaWVzLFxuICAgICAgICBzZGtDb250ZW50QWNjZXNzUG9saWNpZXM6IHRycGNNb2Nrcy5wcm9maWxlc01lKCkuY29udGVudEFjY2Vzc1BvbGljaWVzLFxuICAgICAgICBhcHBGZWF0dXJlQWNjZXNzUG9saWNpZXM6IHRycGNNb2Nrcy5wcm9maWxlc01lKCkuZmVhdHVyZUFjY2Vzc1BvbGljaWVzLFxuICAgICAgICBzZGtGZWF0dXJlQWNjZXNzUG9saWNpZXM6IHRycGNNb2Nrcy5wcm9maWxlc01lKCkuZmVhdHVyZUFjY2Vzc1BvbGljaWVzLFxuICAgICAgICBzdWJzY3JpcHRpb25TdGF0dXM6IHRycGNNb2Nrcy5wcm9maWxlc01lKCkuc3Vic2NyaXB0aW9uU3RhdHVzLFxuICAgICAgICBzdWJzY3JpcHRpb25SZW5ld2FsRGF0ZTogdHJwY01vY2tzLnByb2ZpbGVzTWUoKS5zdWJzY3JpcHRpb25SZW5ld2FsRGF0ZSxcbiAgICAgICAgc3Vic2NyaXB0aW9uU291cmNlOiB0cnBjTW9ja3MucHJvZmlsZXNNZSgpLnN1YnNjcmlwdGlvblNvdXJjZSxcbiAgICAgICAgc3Vic2NyaXB0aW9uTW9kaWZpY2F0aW9uOiB0cnBjTW9ja3MucHJvZmlsZXNNZSgpLnN1YnNjcmlwdGlvbk1vZGlmaWNhdGlvbixcbiAgICAgICAgZW50aXRsZW1lbnRzOiBbXSxcbiAgICAgICAgZGF0ZUNyZWF0ZWQ6IFwiMjAyNC0wMy0wNlQxMjo0NTowNC4zMjEwMDBcIixcbiAgICAgICAgbGFzdFVwZGF0ZWQ6IFwiMjAyNS0wMy0wNFQwODoxOTo1NS4yODY0MDBcIixcbiAgICAgICAgb3JnYW5pemF0aW9uQ29uc3VtZWQ6IHRycGNNb2Nrcy5wcm9maWxlc01lKCkub3JnYW5pemF0aW9uQ29uc3VtZWQsXG4gICAgICB9XG4gICAgfSksXG59XG4iXSwibmFtZXMiOlsicHJvZmlsZXNQcm9jZWR1cmUiLCJtZSIsImJpZ2RhdGFBcGlQcm9jZWR1cmUiLCJtZXRhIiwib3BlbmFwaSIsIm1ldGhvZCIsInBhdGgiLCJvdXRwdXQiLCJiaWdkYXRhU2NoZW1hcyIsInN0X3Byb2ZpbGVzX015UHJvZmlsZVJlc3BvbnNlIiwicXVlcnkiLCJ0cnBjTW9ja3MiLCJwcm9maWxlc01lIiwidXNlclF1b3RhcyIsImlucHV0IiwieiIsIm9iamVjdCIsImlkIiwic3RyaW5nIiwic3RfcHJvZmlsZXNfRnVsbFVzZXJQcm9maWxlUmVzcG9uc2UiLCJ1c2VyT3duZXIiLCJvd25lclVzZXJJZCIsIm9yZ2FuaXphdGlvbklkIiwib3JnYW5pemF0aW9uIiwidXNlclF1b3RhIiwidXNlckNvbnN1bWVkIiwiZGF0ZUNyZWF0ZWQiLCJsYXN0VXBkYXRlZCIsIm9yZ2FuaXphdGlvblF1b3RhcyIsInN0X3Byb2ZpbGVzX0Z1bGxPcmdhbml6YXRpb25Qcm9maWxlUmVzcG9uc2UiLCJvcmdhbml6YXRpb25RdW90YSIsImFwcENvbnRlbnRBY2Nlc3NQb2xpY2llcyIsImNvbnRlbnRBY2Nlc3NQb2xpY2llcyIsInNka0NvbnRlbnRBY2Nlc3NQb2xpY2llcyIsImFwcEZlYXR1cmVBY2Nlc3NQb2xpY2llcyIsImZlYXR1cmVBY2Nlc3NQb2xpY2llcyIsInNka0ZlYXR1cmVBY2Nlc3NQb2xpY2llcyIsInN1YnNjcmlwdGlvblN0YXR1cyIsInN1YnNjcmlwdGlvblJlbmV3YWxEYXRlIiwic3Vic2NyaXB0aW9uU291cmNlIiwic3Vic2NyaXB0aW9uTW9kaWZpY2F0aW9uIiwiZW50aXRsZW1lbnRzIiwib3JnYW5pemF0aW9uQ29uc3VtZWQiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkFNYUE7OztlQUFBQTs7O3FCQU5LOzJCQUNhO3VCQUNMOzJCQUNBO3FDQUNVO0FBRTdCLE1BQU1BLG9CQUFvQjtJQUMvQkMsSUFBSUMsd0NBQW1CLENBQ3BCQyxJQUFJLENBQUM7UUFBRUMsU0FBUztZQUFFQyxRQUFRO1lBQU9DLE1BQU07UUFBZTtJQUFFLEdBQ3hEQyxNQUFNLENBQUNDLHlCQUFjLENBQUNDLDZCQUE2QixFQUNuREMsS0FBSyxDQUFDLFVBQVlDLG9CQUFTLENBQUNDLFVBQVU7SUFDekNDLFlBQVlYLHdDQUFtQixDQUM1QkMsSUFBSSxDQUFDO1FBQUVDLFNBQVM7WUFBRUMsUUFBUTtZQUFPQyxNQUFNO1FBQXNCO0lBQUUsR0FDL0RRLEtBQUssQ0FBQ0MsTUFBQyxDQUFDQyxNQUFNLENBQUM7UUFBRUMsSUFBSUYsTUFBQyxDQUFDRyxNQUFNO0lBQUcsSUFDaENYLE1BQU0sQ0FBQ0MseUJBQWMsQ0FBQ1csbUNBQW1DLEVBQ3pEVCxLQUFLLENBQUM7UUFDTCxPQUFPO1lBQ0xPLElBQUlHLGdCQUFTLENBQUNDLFdBQVc7WUFDekJDLGdCQUFnQkYsZ0JBQVMsQ0FBQ0csWUFBWSxDQUFDTixFQUFFO1lBQ3pDTyxXQUFXYixvQkFBUyxDQUFDQyxVQUFVLEdBQUdZLFNBQVM7WUFDM0NDLGNBQWNkLG9CQUFTLENBQUNDLFVBQVUsR0FBR2EsWUFBWTtZQUNqREMsYUFBYTtZQUNiQyxhQUFhO1FBQ2Y7SUFDRjtJQUNGQyxvQkFBb0IxQix3Q0FBbUIsQ0FDcENDLElBQUksQ0FBQztRQUFFQyxTQUFTO1lBQUVDLFFBQVE7WUFBT0MsTUFBTTtRQUE4QjtJQUFFLEdBQ3ZFUSxLQUFLLENBQUNDLE1BQUMsQ0FBQ0MsTUFBTSxDQUFDO1FBQUVDLElBQUlGLE1BQUMsQ0FBQ0csTUFBTTtJQUFHLElBQ2hDWCxNQUFNLENBQUNDLHlCQUFjLENBQUNxQiwyQ0FBMkMsRUFDakVuQixLQUFLLENBQUM7UUFDTCxPQUFPO1lBQ0xPLElBQUlHLGdCQUFTLENBQUNDLFdBQVc7WUFDekJTLG1CQUFtQm5CLG9CQUFTLENBQUNDLFVBQVUsR0FBR2tCLGlCQUFpQjtZQUMzREMsMEJBQTBCcEIsb0JBQVMsQ0FBQ0MsVUFBVSxHQUFHb0IscUJBQXFCO1lBQ3RFQywwQkFBMEJ0QixvQkFBUyxDQUFDQyxVQUFVLEdBQUdvQixxQkFBcUI7WUFDdEVFLDBCQUEwQnZCLG9CQUFTLENBQUNDLFVBQVUsR0FBR3VCLHFCQUFxQjtZQUN0RUMsMEJBQTBCekIsb0JBQVMsQ0FBQ0MsVUFBVSxHQUFHdUIscUJBQXFCO1lBQ3RFRSxvQkFBb0IxQixvQkFBUyxDQUFDQyxVQUFVLEdBQUd5QixrQkFBa0I7WUFDN0RDLHlCQUF5QjNCLG9CQUFTLENBQUNDLFVBQVUsR0FBRzBCLHVCQUF1QjtZQUN2RUMsb0JBQW9CNUIsb0JBQVMsQ0FBQ0MsVUFBVSxHQUFHMkIsa0JBQWtCO1lBQzdEQywwQkFBMEI3QixvQkFBUyxDQUFDQyxVQUFVLEdBQUc0Qix3QkFBd0I7WUFDekVDLGNBQWMsRUFBRTtZQUNoQmYsYUFBYTtZQUNiQyxhQUFhO1lBQ2JlLHNCQUFzQi9CLG9CQUFTLENBQUNDLFVBQVUsR0FBRzhCLG9CQUFvQjtRQUNuRTtJQUNGO0FBQ0oifQ==