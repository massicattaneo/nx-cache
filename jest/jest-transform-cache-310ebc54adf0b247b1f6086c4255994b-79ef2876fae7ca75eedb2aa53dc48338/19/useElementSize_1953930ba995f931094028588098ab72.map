{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/hooks/src/useElementSize.ts"],"sourcesContent":["import { useEffect, useState } from \"react\"\n\nconst observeElementSize = (fixedRef: Element, onResize: ResizeObserverCallback) => {\n  const resizeObserver = new ResizeObserver(onResize)\n  resizeObserver.observe(fixedRef)\n  return () => resizeObserver.unobserve(fixedRef)\n}\n\nconst useElementSize = (element: Element | null) => {\n  const [height, setHeight] = useState<number>(element?.clientHeight || 0)\n  const [width, setWidth] = useState<number>(element?.clientWidth || 0)\n\n  useEffect(() => {\n    if (!element) return\n    setHeight(element.clientHeight)\n    setWidth(element.clientWidth)\n    return observeElementSize(element, () => {\n      setHeight(element.clientHeight)\n      setWidth(element.clientWidth)\n    })\n  }, [element])\n\n  return { height, width }\n}\n\nexport { useElementSize }\n"],"names":["useElementSize","observeElementSize","fixedRef","onResize","resizeObserver","ResizeObserver","observe","unobserve","element","height","setHeight","useState","clientHeight","width","setWidth","clientWidth","useEffect"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAyBSA;;;eAAAA;;;uBAzB2B;AAEpC,MAAMC,qBAAqB,CAACC,UAAmBC;IAC7C,MAAMC,iBAAiB,IAAIC,eAAeF;IAC1CC,eAAeE,OAAO,CAACJ;IACvB,OAAO,IAAME,eAAeG,SAAS,CAACL;AACxC;AAEA,MAAMF,iBAAiB,CAACQ;IACtB,MAAM,CAACC,QAAQC,UAAU,GAAGC,IAAAA,eAAQ,EAASH,CAAAA,oBAAAA,8BAAAA,QAASI,YAAY,KAAI;IACtE,MAAM,CAACC,OAAOC,SAAS,GAAGH,IAAAA,eAAQ,EAASH,CAAAA,oBAAAA,8BAAAA,QAASO,WAAW,KAAI;IAEnEC,IAAAA,gBAAS,EAAC;QACR,IAAI,CAACR,SAAS;QACdE,UAAUF,QAAQI,YAAY;QAC9BE,SAASN,QAAQO,WAAW;QAC5B,OAAOd,mBAAmBO,SAAS;YACjCE,UAAUF,QAAQI,YAAY;YAC9BE,SAASN,QAAQO,WAAW;QAC9B;IACF,GAAG;QAACP;KAAQ;IAEZ,OAAO;QAAEC;QAAQI;IAAM;AACzB"}