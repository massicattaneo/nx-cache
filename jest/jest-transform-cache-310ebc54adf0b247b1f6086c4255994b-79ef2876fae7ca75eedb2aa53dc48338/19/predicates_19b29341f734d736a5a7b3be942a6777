60ed3277c6ba9162fb7a2724eb12589e
// Used for MouseEvent.buttons (note the s on the end).
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    eventShouldEndDrag: function() {
        return eventShouldEndDrag;
    },
    eventShouldStartDrag: function() {
        return eventShouldStartDrag;
    },
    isTouchEvent: function() {
        return isTouchEvent;
    }
});
const MouseButtons = {
    Left: 1,
    Right: 2,
    Center: 4
};
// Used for e.button (note the lack of an s on the end).
const MouseButton = {
    Left: 0,
    Center: 1,
    Right: 2
};
function eventShouldStartDrag(e) {
    // For touch events, button will be undefined. If e.button is defined,
    // then it should be MouseButton.Left.
    return e.button === undefined || e.button === MouseButton.Left;
}
function eventShouldEndDrag(e) {
    // Touch events will have buttons be undefined, while mouse events will have e.buttons's left button
    // bit field unset if the left mouse button has been released
    return e.buttons === undefined || (e.buttons & MouseButtons.Left) === 0;
}
function isTouchEvent(e) {
    return !!e.targetTouches;
} //# sourceMappingURL=predicates.js.map

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlscy9wcmVkaWNhdGVzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFVzZWQgZm9yIE1vdXNlRXZlbnQuYnV0dG9ucyAobm90ZSB0aGUgcyBvbiB0aGUgZW5kKS5cbmNvbnN0IE1vdXNlQnV0dG9ucyA9IHtcblx0TGVmdDogMSxcblx0UmlnaHQ6IDIsXG5cdENlbnRlcjogNCxcbn1cblxuLy8gVXNlZCBmb3IgZS5idXR0b24gKG5vdGUgdGhlIGxhY2sgb2YgYW4gcyBvbiB0aGUgZW5kKS5cbmNvbnN0IE1vdXNlQnV0dG9uID0ge1xuXHRMZWZ0OiAwLFxuXHRDZW50ZXI6IDEsXG5cdFJpZ2h0OiAyLFxufVxuXG4vKipcbiAqIE9ubHkgdG91Y2ggZXZlbnRzIGFuZCBtb3VzZSBldmVudHMgd2hlcmUgdGhlIGxlZnQgYnV0dG9uIGlzIHByZXNzZWQgc2hvdWxkIGluaXRpYXRlIGEgZHJhZy5cbiAqIEBwYXJhbSB7TW91c2VFdmVudCB8IFRvdWNoRXZlbnR9IGUgVGhlIGV2ZW50XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBldmVudFNob3VsZFN0YXJ0RHJhZyhlOiBNb3VzZUV2ZW50KTogYm9vbGVhbiB7XG5cdC8vIEZvciB0b3VjaCBldmVudHMsIGJ1dHRvbiB3aWxsIGJlIHVuZGVmaW5lZC4gSWYgZS5idXR0b24gaXMgZGVmaW5lZCxcblx0Ly8gdGhlbiBpdCBzaG91bGQgYmUgTW91c2VCdXR0b24uTGVmdC5cblx0cmV0dXJuIGUuYnV0dG9uID09PSB1bmRlZmluZWQgfHwgZS5idXR0b24gPT09IE1vdXNlQnV0dG9uLkxlZnRcbn1cblxuLyoqXG4gKiBPbmx5IHRvdWNoIGV2ZW50cyBhbmQgbW91c2UgZXZlbnRzIHdoZXJlIHRoZSBsZWZ0IG1vdXNlIGJ1dHRvbiBpcyBubyBsb25nZXIgaGVsZCBzaG91bGQgZW5kIGEgZHJhZy5cbiAqIEl0J3MgcG9zc2libGUgdGhlIHVzZXIgbW91c2UgZG93bnMgd2l0aCB0aGUgbGVmdCBtb3VzZSBidXR0b24sIHRoZW4gbW91c2UgZG93biBhbmQgdXBzIHdpdGggdGhlIHJpZ2h0IG1vdXNlIGJ1dHRvbi5cbiAqIFdlIGRvbid0IHdhbnQgcmVsZWFzaW5nIHRoZSByaWdodCBtb3VzZSBidXR0b24gdG8gZW5kIHRoZSBkcmFnLlxuICogQHBhcmFtIHtNb3VzZUV2ZW50IHwgVG91Y2hFdmVudH0gZSBUaGUgZXZlbnRcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGV2ZW50U2hvdWxkRW5kRHJhZyhlOiBNb3VzZUV2ZW50KTogYm9vbGVhbiB7XG5cdC8vIFRvdWNoIGV2ZW50cyB3aWxsIGhhdmUgYnV0dG9ucyBiZSB1bmRlZmluZWQsIHdoaWxlIG1vdXNlIGV2ZW50cyB3aWxsIGhhdmUgZS5idXR0b25zJ3MgbGVmdCBidXR0b25cblx0Ly8gYml0IGZpZWxkIHVuc2V0IGlmIHRoZSBsZWZ0IG1vdXNlIGJ1dHRvbiBoYXMgYmVlbiByZWxlYXNlZFxuXHRyZXR1cm4gZS5idXR0b25zID09PSB1bmRlZmluZWQgfHwgKGUuYnV0dG9ucyAmIE1vdXNlQnV0dG9ucy5MZWZ0KSA9PT0gMFxufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNUb3VjaEV2ZW50KFxuXHRlOiBUb3VjaCB8IFRvdWNoRXZlbnQgfCBNb3VzZUV2ZW50LFxuKTogZSBpcyBUb3VjaEV2ZW50IHtcblx0cmV0dXJuICEhKGUgYXMgVG91Y2hFdmVudCkudGFyZ2V0VG91Y2hlc1xufVxuIl0sIm5hbWVzIjpbImV2ZW50U2hvdWxkRW5kRHJhZyIsImV2ZW50U2hvdWxkU3RhcnREcmFnIiwiaXNUb3VjaEV2ZW50IiwiTW91c2VCdXR0b25zIiwiTGVmdCIsIlJpZ2h0IiwiQ2VudGVyIiwiTW91c2VCdXR0b24iLCJlIiwiYnV0dG9uIiwidW5kZWZpbmVkIiwiYnV0dG9ucyIsInRhcmdldFRvdWNoZXMiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiJBQUFBLHVEQUF1RDs7Ozs7Ozs7Ozs7O0lBOEJ2Q0Esa0JBQWtCO2VBQWxCQTs7SUFaQUMsb0JBQW9CO2VBQXBCQTs7SUFrQkFDLFlBQVk7ZUFBWkE7OztBQW5DaEIsTUFBTUMsZUFBZTtJQUNwQkMsTUFBTTtJQUNOQyxPQUFPO0lBQ1BDLFFBQVE7O0FBR1Qsd0RBQXdEO0FBQ3hELE1BQU1DLGNBQWM7SUFDbkJILE1BQU07SUFDTkUsUUFBUTtJQUNSRCxPQUFPOztBQU9ELFNBQVNKLHFCQUFxQk8sQ0FBYTtJQUNqRCxzRUFBc0U7SUFDdEUsc0NBQXNDO0lBQ3RDLE9BQU9BLEVBQUVDLE1BQU0sS0FBS0MsYUFBYUYsRUFBRUMsTUFBTSxLQUFLRixZQUFZSCxJQUFJOztBQVN4RCxTQUFTSixtQkFBbUJRLENBQWE7SUFDL0Msb0dBQW9HO0lBQ3BHLDZEQUE2RDtJQUM3RCxPQUFPQSxFQUFFRyxPQUFPLEtBQUtELGFBQWEsQUFBQ0YsQ0FBQUEsRUFBRUcsT0FBTyxHQUFHUixhQUFhQyxJQUFJLEFBQUpBLE1BQVU7O0FBR2hFLFNBQVNGLGFBQ2ZNLENBQWtDO0lBRWxDLE9BQU8sQ0FBQyxDQUFDQSxFQUFrQkksYUFBYSJ9