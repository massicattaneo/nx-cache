2fb9a556d48a0b065dd35818c93c7df0
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    createNativeDragSource: function() {
        return createNativeDragSource;
    },
    matchNativeItemType: function() {
        return matchNativeItemType;
    }
});
const _NativeDragSource = require("./NativeDragSource.js");
const _nativeTypesConfig = require("./nativeTypesConfig.js");
function createNativeDragSource(type, dataTransfer) {
    const config = _nativeTypesConfig.nativeTypesConfig[type];
    if (!config) {
        throw new Error(`native type ${type} has no configuration`);
    }
    const result = new _NativeDragSource.NativeDragSource(config);
    result.loadDataTransfer(dataTransfer);
    return result;
}
function matchNativeItemType(dataTransfer) {
    if (!dataTransfer) {
        return null;
    }
    const dataTransferTypes = Array.prototype.slice.call(dataTransfer.types || []);
    return Object.keys(_nativeTypesConfig.nativeTypesConfig).filter((nativeItemType)=>{
        const typeConfig = _nativeTypesConfig.nativeTypesConfig[nativeItemType];
        if (!(typeConfig === null || typeConfig === void 0 ? void 0 : typeConfig.matchesTypes)) {
            return false;
        }
        return typeConfig.matchesTypes.some((t)=>dataTransferTypes.indexOf(t) > -1);
    })[0] || null;
} //# sourceMappingURL=index.js.map

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9OYXRpdmVEcmFnU291cmNlcy9pbmRleC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOYXRpdmVEcmFnU291cmNlIH0gZnJvbSAnLi9OYXRpdmVEcmFnU291cmNlLmpzJ1xuaW1wb3J0IHsgbmF0aXZlVHlwZXNDb25maWcgfSBmcm9tICcuL25hdGl2ZVR5cGVzQ29uZmlnLmpzJ1xuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlTmF0aXZlRHJhZ1NvdXJjZShcblx0dHlwZTogc3RyaW5nLFxuXHRkYXRhVHJhbnNmZXI/OiBEYXRhVHJhbnNmZXIsXG4pOiBOYXRpdmVEcmFnU291cmNlIHtcblx0Y29uc3QgY29uZmlnID0gbmF0aXZlVHlwZXNDb25maWdbdHlwZV1cblx0aWYgKCFjb25maWcpIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoYG5hdGl2ZSB0eXBlICR7dHlwZX0gaGFzIG5vIGNvbmZpZ3VyYXRpb25gKVxuXHR9XG5cdGNvbnN0IHJlc3VsdCA9IG5ldyBOYXRpdmVEcmFnU291cmNlKGNvbmZpZylcblx0cmVzdWx0LmxvYWREYXRhVHJhbnNmZXIoZGF0YVRyYW5zZmVyKVxuXHRyZXR1cm4gcmVzdWx0XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBtYXRjaE5hdGl2ZUl0ZW1UeXBlKFxuXHRkYXRhVHJhbnNmZXI6IERhdGFUcmFuc2ZlciB8IG51bGwsXG4pOiBzdHJpbmcgfCBudWxsIHtcblx0aWYgKCFkYXRhVHJhbnNmZXIpIHtcblx0XHRyZXR1cm4gbnVsbFxuXHR9XG5cblx0Y29uc3QgZGF0YVRyYW5zZmVyVHlwZXMgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChkYXRhVHJhbnNmZXIudHlwZXMgfHwgW10pXG5cdHJldHVybiAoXG5cdFx0T2JqZWN0LmtleXMobmF0aXZlVHlwZXNDb25maWcpLmZpbHRlcigobmF0aXZlSXRlbVR5cGUpID0+IHtcblx0XHRcdGNvbnN0IHR5cGVDb25maWcgPSBuYXRpdmVUeXBlc0NvbmZpZ1tuYXRpdmVJdGVtVHlwZV1cblx0XHRcdGlmICghdHlwZUNvbmZpZz8ubWF0Y2hlc1R5cGVzKSB7XG5cdFx0XHRcdHJldHVybiBmYWxzZVxuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHR5cGVDb25maWcubWF0Y2hlc1R5cGVzLnNvbWUoXG5cdFx0XHRcdCh0KSA9PiBkYXRhVHJhbnNmZXJUeXBlcy5pbmRleE9mKHQpID4gLTEsXG5cdFx0XHQpXG5cdFx0fSlbMF0gfHwgbnVsbFxuXHQpXG59XG4iXSwibmFtZXMiOlsiY3JlYXRlTmF0aXZlRHJhZ1NvdXJjZSIsIm1hdGNoTmF0aXZlSXRlbVR5cGUiLCJ0eXBlIiwiZGF0YVRyYW5zZmVyIiwiY29uZmlnIiwibmF0aXZlVHlwZXNDb25maWciLCJFcnJvciIsInJlc3VsdCIsIk5hdGl2ZURyYWdTb3VyY2UiLCJsb2FkRGF0YVRyYW5zZmVyIiwiZGF0YVRyYW5zZmVyVHlwZXMiLCJBcnJheSIsInByb3RvdHlwZSIsInNsaWNlIiwiY2FsbCIsInR5cGVzIiwiT2JqZWN0Iiwia2V5cyIsImZpbHRlciIsIm5hdGl2ZUl0ZW1UeXBlIiwidHlwZUNvbmZpZyIsIm1hdGNoZXNUeXBlcyIsInNvbWUiLCJ0IiwiaW5kZXhPZiJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztJQUdnQkEsc0JBQXNCO2VBQXRCQTs7SUFhQUMsbUJBQW1CO2VBQW5CQTs7O2tDQWhCaUI7bUNBQ0M7QUFFM0IsU0FBU0QsdUJBQ2ZFLElBQVksRUFDWkMsWUFBMkI7SUFFM0IsTUFBTUMsU0FBU0Msb0NBQWlCLENBQUNILEtBQUs7SUFDdEMsSUFBSSxDQUFDRSxRQUFRO1FBQ1osTUFBTSxJQUFJRSxNQUFNLENBQUMsWUFBWSxFQUFFSixLQUFLLHFCQUFxQixDQUFDOztJQUUzRCxNQUFNSyxTQUFTLElBQUlDLGtDQUFnQixDQUFDSjtJQUNwQ0csT0FBT0UsZ0JBQWdCLENBQUNOO0lBQ3hCLE9BQU9JOztBQUdELFNBQVNOLG9CQUNmRSxZQUFpQztJQUVqQyxJQUFJLENBQUNBLGNBQWM7UUFDbEIsT0FBTzs7SUFHUixNQUFNTyxvQkFBb0JDLE1BQU1DLFNBQVMsQ0FBQ0MsS0FBSyxDQUFDQyxJQUFJLENBQUNYLGFBQWFZLEtBQUssSUFBSSxFQUFFO0lBQzdFLE9BQ0NDLE9BQU9DLElBQUksQ0FBQ1osb0NBQWlCLEVBQUVhLE1BQU0sQ0FBQyxDQUFDQztRQUN0QyxNQUFNQyxhQUFhZixvQ0FBaUIsQ0FBQ2MsZUFBZTtRQUNwRCxJQUFJLENBQUNDLENBQUFBLGVBQVUsUUFBVkEsZUFBVSxLQUFBLElBQVZBLEtBQUFBLElBQUFBLFdBQVlDLFlBQVksQUFBWkEsR0FBYztZQUM5QixPQUFPOztRQUVSLE9BQU9ELFdBQVdDLFlBQVksQ0FBQ0MsSUFBSSxDQUNsQyxDQUFDQyxJQUFNYixrQkFBa0JjLE9BQU8sQ0FBQ0QsS0FBSyxDQUFDO01BRXZDLENBQUMsRUFBRSxJQUFJIn0=