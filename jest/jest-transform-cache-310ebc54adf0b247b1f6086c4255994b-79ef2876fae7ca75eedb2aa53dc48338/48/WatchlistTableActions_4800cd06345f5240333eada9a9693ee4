f14b81e17a3dad0f8a88d0bc4fe761df
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    WatchlistTableDesktopActions: function() {
        return WatchlistTableDesktopActions;
    },
    WatchlistTableMobilesActions: function() {
        return WatchlistTableMobilesActions;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _reactrouterdom = require("react-router-dom");
const _clerkreact = require("@clerk/clerk-react");
const _providers = require("@rp/react/common/providers");
const _basecomponents = require("@rp/react/web/common/base-components");
const _core = require("@rp/react/web/mui/core");
const _router = require("@rp/react/web/router");
const _watchlists = require("@rp/react/web/watchlists");
function EditButton({ onClick }) {
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
        component: "nav",
        className: "hover-action",
        sx: {
            "& button": {
                height: 30,
                fontSize: 12,
                letterSpacing: 1,
                opacity: 0,
                mr: 1
            }
        },
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Button, {
            onClick: (event)=>{
                event.stopPropagation();
                onClick();
            },
            variant: "text-outlined",
            sx: {
                mr: 1,
                fontSize: "12px",
                padding: "4px 10px"
            },
            children: "Edit Watchlist"
        })
    });
}
function ChatButton({ onClick, icon }) {
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.RPTooltip, {
        title: "Chat",
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.IconButton, {
            onClick: (ev)=>{
                ev.stopPropagation();
                ev.preventDefault();
                onClick(ev);
            },
            children: icon
        })
    });
}
const WatchlistTableDesktopActions = ({ item, actions, openMenu, setOpenMenu })=>{
    const navigate = (0, _reactrouterdom.useNavigate)();
    const { user } = (0, _clerkreact.useUser)();
    // TODO: If we could split the chat functionality we could
    // move it inside the the ChatButton since it only depends
    // only on the watchlist id.
    const { chat } = (0, _watchlists.useWatchlistsActions)();
    const { hasEntitlement } = (0, _providers.useAccount)();
    const isOwner = (user === null || user === void 0 ? void 0 : user.id) === item.ownerUserId;
    const hasWritePermission = item.shared.company.permission === "write";
    const canEdit = isOwner || hasWritePermission;
    const canChat = hasEntitlement("chat:watchlist");
    const handleEditClick = ()=>{
        navigate((0, _reactrouterdom.generatePath)(_router.WATCHLIST_EDIT, {
            id: item.id
        }), {
            state: {
                comingFrom: "watchlists"
            }
        });
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
        sx: {
            display: "flex",
            justifyContent: "right",
            alignItems: "center"
        },
        children: [
            canEdit ? /*#__PURE__*/ (0, _jsxruntime.jsx)(EditButton, {
                onClick: handleEditClick
            }) : null,
            canChat ? /*#__PURE__*/ (0, _jsxruntime.jsx)(ChatButton, {
                onClick: ()=>chat.onClick(item),
                icon: chat.icon
            }) : null,
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.ActionsMenu, {
                open: openMenu,
                setOpen: setOpenMenu,
                actions: actions,
                item: item
            })
        ]
    });
};
const WatchlistTableMobilesActions = ({ item, actions })=>{
    const [open, setOpen] = (0, _react.useState)(false);
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
        sx: {
            display: "flex",
            justifyContent: "right",
            alignItems: "center"
        },
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.ActionsMenu, {
            open: open,
            setOpen: setOpen,
            actions: actions,
            item: item
        })
    });
};

//# sourceMappingURL=data:application/json;base64,