{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/tanstack-api/file/src/hooks/usePatchFile.ts"],"sourcesContent":["import { AxiosError } from \"axios\"\nimport { useUser } from \"@clerk/clerk-react\"\nimport { adapters } from \"@rp/adapters\"\nimport { FileCollection, FileRowType } from \"@rp/common/utils\"\nimport { filesCustomerIo } from \"@rp/react/common/customer-io\"\nimport { InfiniteData, useMutation, useQueryClient } from \"@tanstack/react-query\"\nimport { UpdateContext, UpdateFile } from \"../file.types\"\nimport { getMetadata } from \"../services/getMetadata\"\nimport { patch } from \"../services/patch\"\nimport { filesQueryKeys } from \"../utils\"\nimport { validateFields } from \"../utils/validateFields\"\n\n// Update an existing file\nconst usePatchFile = (fileId: string) => {\n  const { user } = useUser()\n  const queryClient = useQueryClient()\n\n  const onMutate = async (fields: UpdateFile) => {\n    queryClient.setQueriesData<InfiniteData<FileCollection>>(\n      { queryKey: filesQueryKeys.paginated() },\n      data => {\n        if (!data) return data\n        return {\n          ...data,\n          pages: data.pages.map(page => {\n            return {\n              results: page.results.map(file => {\n                if (file.file_id === fileId) {\n                  return {\n                    ...file,\n                    file_name: fields.file_name ?? file.file_name,\n                    shared_with: fields.shared_with ?? file.shared_with,\n                  }\n                }\n\n                return file\n              }),\n            }\n          }),\n        }\n      },\n    )\n    queryClient.setQueryData<FileRowType>(filesQueryKeys.metadata(fileId), data => {\n      if (!data) return data\n      return {\n        ...data,\n        sharedWith: fields.shared_with ?? data?.sharedWith,\n        name: fields.file_name ?? data?.name,\n      }\n    })\n  }\n\n  const onError = () => {\n    queryClient.invalidateQueries({ queryKey: filesQueryKeys.metadata(fileId) })\n    queryClient.invalidateQueries({ queryKey: filesQueryKeys.paginated() })\n  }\n\n  return useMutation<FileRowType, AxiosError, UpdateFile, UpdateContext>({\n    mutationFn: async fields => {\n      const verifiedFields = await validateFields(fileId, fields, queryClient)\n      const originalFile = await getMetadata(fileId, queryClient)\n      return patch({ fileId, fields: verifiedFields }, originalFile)\n    },\n    onMutate,\n    onError,\n    onSuccess: (result: FileRowType, fields) => {\n      const updatedFields: Array<\"fileName\" | \"sharedWith\"> = []\n      if (fields.file_name) updatedFields.push(\"fileName\")\n      if (fields.shared_with) updatedFields.push(\"sharedWith\")\n      filesCustomerIo.filesApi.edited({\n        fileId: result.id,\n        ownerId: result.owner,\n        updatedById: user?.id ?? \"\",\n        origin: adapters.platform.name,\n        sharedWith: result.sharedWith,\n        updatedFields,\n        timestamp: Date.now() * 1000,\n      })\n      queryClient.setQueryData<FileRowType>(filesQueryKeys.metadata(result.id), result)\n      queryClient.refetchQueries({ queryKey: filesQueryKeys.file, exact: true })\n      queryClient.refetchQueries({ queryKey: filesQueryKeys.paginated() })\n    },\n  })\n}\n\nexport { usePatchFile }\n"],"names":["usePatchFile","fileId","user","useUser","queryClient","useQueryClient","onMutate","fields","setQueriesData","queryKey","filesQueryKeys","paginated","data","pages","map","page","results","file","file_id","file_name","shared_with","setQueryData","metadata","sharedWith","name","onError","invalidateQueries","useMutation","mutationFn","verifiedFields","validateFields","originalFile","getMetadata","patch","onSuccess","result","updatedFields","push","filesCustomerIo","filesApi","edited","id","ownerId","owner","updatedById","origin","adapters","platform","timestamp","Date","now","refetchQueries","exact"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}