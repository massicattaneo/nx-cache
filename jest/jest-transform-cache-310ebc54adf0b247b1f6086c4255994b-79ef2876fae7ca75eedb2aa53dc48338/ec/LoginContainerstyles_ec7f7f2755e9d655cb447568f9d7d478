a28f06f5cd550041eac7e94d05ebc412
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "StyledLoginContainer", {
    enumerable: true,
    get: function() {
        return StyledLoginContainer;
    }
});
const _theme = require("@rp/react/theme");
const _hooks = require("@rp/react/web/common/hooks");
const _core = require("@rp/react/web/mui/core");
const StyledLoginContainer = (0, _theme.styled)(_core.Box)(({ theme })=>{
    const { isMobile } = (0, _hooks.useDeviceInfo)();
    const mobilePadding = isMobile ? 16 : 0;
    return {
        paddingTop: "5vh",
        paddingLeft: mobilePadding,
        paddingRight: mobilePadding,
        display: "flex",
        flexDirection: "column",
        alignItems: "center",
        justifyContent: "center",
        width: isMobile ? "100vw" : "50%",
        // maxWidth: 450,
        // margin: theme.spacing(4),
        marginLeft: 4,
        borderRadius: 12,
        "& form": {
            width: "100%",
            display: "flex",
            flexDirection: "column",
            marginBottom: theme.spacing(2)
        },
        "& .MuiTextField-root": {
            width: isMobile ? "100%" : 400
        },
        "& input": {
            padding: "10px 12px",
            "&::placeholder": {
                color: theme.palette.text.primary
            }
        },
        "& label": {
            marginTop: theme.spacing(3),
            marginBottom: theme.spacing(0.5)
        },
        "& label, & .Mui-focused fieldset": {
            borderColor: `${theme.palette.text.primary} !important`,
            color: `${theme.palette.text.primary} !important`
        },
        "& a": {
            color: theme.palette.primary.main,
            textDecoration: "none",
            marginLeft: "4px",
            cursor: "pointer"
        },
        "& a:hover": {
            textDecoration: "underline"
        }
    };
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9jb21wb3NpdGUtY29tcG9uZW50cy9zcmMvTG9naW4vTG9naW5Db250YWluZXIuc3R5bGVzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHN0eWxlZCB9IGZyb20gXCJAcnAvcmVhY3QvdGhlbWVcIlxuaW1wb3J0IHsgdXNlRGV2aWNlSW5mbyB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL2NvbW1vbi9ob29rc1wiXG5pbXBvcnQgeyBCb3ggfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9tdWkvY29yZVwiXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRMb2dpbkNvbnRhaW5lciA9IHN0eWxlZChCb3gpKCh7IHRoZW1lIH0pID0+IHtcbiAgY29uc3QgeyBpc01vYmlsZSB9ID0gdXNlRGV2aWNlSW5mbygpXG4gIGNvbnN0IG1vYmlsZVBhZGRpbmcgPSBpc01vYmlsZSA/IDE2IDogMFxuICByZXR1cm4ge1xuICAgIHBhZGRpbmdUb3A6IFwiNXZoXCIsXG4gICAgcGFkZGluZ0xlZnQ6IG1vYmlsZVBhZGRpbmcsXG4gICAgcGFkZGluZ1JpZ2h0OiBtb2JpbGVQYWRkaW5nLFxuICAgIGRpc3BsYXk6IFwiZmxleFwiLFxuICAgIGZsZXhEaXJlY3Rpb246IFwiY29sdW1uXCIsXG4gICAgYWxpZ25JdGVtczogXCJjZW50ZXJcIixcbiAgICBqdXN0aWZ5Q29udGVudDogXCJjZW50ZXJcIixcbiAgICB3aWR0aDogaXNNb2JpbGUgPyBcIjEwMHZ3XCIgOiBcIjUwJVwiLFxuXG4gICAgLy8gbWF4V2lkdGg6IDQ1MCxcbiAgICAvLyBtYXJnaW46IHRoZW1lLnNwYWNpbmcoNCksXG4gICAgbWFyZ2luTGVmdDogNCxcbiAgICBib3JkZXJSYWRpdXM6IDEyLFxuXG4gICAgXCImIGZvcm1cIjoge1xuICAgICAgd2lkdGg6IFwiMTAwJVwiLFxuICAgICAgZGlzcGxheTogXCJmbGV4XCIsXG4gICAgICBmbGV4RGlyZWN0aW9uOiBcImNvbHVtblwiLFxuICAgICAgbWFyZ2luQm90dG9tOiB0aGVtZS5zcGFjaW5nKDIpLFxuICAgIH0sXG4gICAgXCImIC5NdWlUZXh0RmllbGQtcm9vdFwiOiB7XG4gICAgICB3aWR0aDogaXNNb2JpbGUgPyBcIjEwMCVcIiA6IDQwMCxcbiAgICB9LFxuICAgIFwiJiBpbnB1dFwiOiB7XG4gICAgICBwYWRkaW5nOiBcIjEwcHggMTJweFwiLFxuICAgICAgXCImOjpwbGFjZWhvbGRlclwiOiB7XG4gICAgICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLnRleHQucHJpbWFyeSxcbiAgICAgIH0sXG4gICAgfSxcbiAgICBcIiYgbGFiZWxcIjoge1xuICAgICAgbWFyZ2luVG9wOiB0aGVtZS5zcGFjaW5nKDMpLFxuICAgICAgbWFyZ2luQm90dG9tOiB0aGVtZS5zcGFjaW5nKDAuNSksXG4gICAgfSxcbiAgICBcIiYgbGFiZWwsICYgLk11aS1mb2N1c2VkIGZpZWxkc2V0XCI6IHtcbiAgICAgIGJvcmRlckNvbG9yOiBgJHt0aGVtZS5wYWxldHRlLnRleHQucHJpbWFyeX0gIWltcG9ydGFudGAsXG4gICAgICBjb2xvcjogYCR7dGhlbWUucGFsZXR0ZS50ZXh0LnByaW1hcnl9ICFpbXBvcnRhbnRgLFxuICAgIH0sXG4gICAgXCImIGFcIjoge1xuICAgICAgY29sb3I6IHRoZW1lLnBhbGV0dGUucHJpbWFyeS5tYWluLFxuICAgICAgdGV4dERlY29yYXRpb246IFwibm9uZVwiLFxuICAgICAgbWFyZ2luTGVmdDogXCI0cHhcIixcbiAgICAgIGN1cnNvcjogXCJwb2ludGVyXCIsXG4gICAgfSxcbiAgICBcIiYgYTpob3ZlclwiOiB7XG4gICAgICB0ZXh0RGVjb3JhdGlvbjogXCJ1bmRlcmxpbmVcIixcbiAgICB9LFxuICB9XG59KVxuIl0sIm5hbWVzIjpbIlN0eWxlZExvZ2luQ29udGFpbmVyIiwic3R5bGVkIiwiQm94IiwidGhlbWUiLCJpc01vYmlsZSIsInVzZURldmljZUluZm8iLCJtb2JpbGVQYWRkaW5nIiwicGFkZGluZ1RvcCIsInBhZGRpbmdMZWZ0IiwicGFkZGluZ1JpZ2h0IiwiZGlzcGxheSIsImZsZXhEaXJlY3Rpb24iLCJhbGlnbkl0ZW1zIiwianVzdGlmeUNvbnRlbnQiLCJ3aWR0aCIsIm1hcmdpbkxlZnQiLCJib3JkZXJSYWRpdXMiLCJtYXJnaW5Cb3R0b20iLCJzcGFjaW5nIiwicGFkZGluZyIsImNvbG9yIiwicGFsZXR0ZSIsInRleHQiLCJwcmltYXJ5IiwibWFyZ2luVG9wIiwiYm9yZGVyQ29sb3IiLCJtYWluIiwidGV4dERlY29yYXRpb24iLCJjdXJzb3IiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBSWFBOzs7ZUFBQUE7Ozt1QkFKVTt1QkFDTztzQkFDVjtBQUViLE1BQU1BLHVCQUF1QkMsSUFBQUEsYUFBTSxFQUFDQyxTQUFHLEVBQUUsQ0FBQyxFQUFFQyxLQUFLLEVBQUU7SUFDeEQsTUFBTSxFQUFFQyxRQUFRLEVBQUUsR0FBR0MsSUFBQUEsb0JBQWE7SUFDbEMsTUFBTUMsZ0JBQWdCRixXQUFXLEtBQUs7SUFDdEMsT0FBTztRQUNMRyxZQUFZO1FBQ1pDLGFBQWFGO1FBQ2JHLGNBQWNIO1FBQ2RJLFNBQVM7UUFDVEMsZUFBZTtRQUNmQyxZQUFZO1FBQ1pDLGdCQUFnQjtRQUNoQkMsT0FBT1YsV0FBVyxVQUFVO1FBRTVCLGlCQUFpQjtRQUNqQiw0QkFBNEI7UUFDNUJXLFlBQVk7UUFDWkMsY0FBYztRQUVkLFVBQVU7WUFDUkYsT0FBTztZQUNQSixTQUFTO1lBQ1RDLGVBQWU7WUFDZk0sY0FBY2QsTUFBTWUsT0FBTyxDQUFDO1FBQzlCO1FBQ0Esd0JBQXdCO1lBQ3RCSixPQUFPVixXQUFXLFNBQVM7UUFDN0I7UUFDQSxXQUFXO1lBQ1RlLFNBQVM7WUFDVCxrQkFBa0I7Z0JBQ2hCQyxPQUFPakIsTUFBTWtCLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDQyxPQUFPO1lBQ25DO1FBQ0Y7UUFDQSxXQUFXO1lBQ1RDLFdBQVdyQixNQUFNZSxPQUFPLENBQUM7WUFDekJELGNBQWNkLE1BQU1lLE9BQU8sQ0FBQztRQUM5QjtRQUNBLG9DQUFvQztZQUNsQ08sYUFBYSxDQUFDLEVBQUV0QixNQUFNa0IsT0FBTyxDQUFDQyxJQUFJLENBQUNDLE9BQU8sQ0FBQyxXQUFXLENBQUM7WUFDdkRILE9BQU8sQ0FBQyxFQUFFakIsTUFBTWtCLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDQyxPQUFPLENBQUMsV0FBVyxDQUFDO1FBQ25EO1FBQ0EsT0FBTztZQUNMSCxPQUFPakIsTUFBTWtCLE9BQU8sQ0FBQ0UsT0FBTyxDQUFDRyxJQUFJO1lBQ2pDQyxnQkFBZ0I7WUFDaEJaLFlBQVk7WUFDWmEsUUFBUTtRQUNWO1FBQ0EsYUFBYTtZQUNYRCxnQkFBZ0I7UUFDbEI7SUFDRjtBQUNGIn0=