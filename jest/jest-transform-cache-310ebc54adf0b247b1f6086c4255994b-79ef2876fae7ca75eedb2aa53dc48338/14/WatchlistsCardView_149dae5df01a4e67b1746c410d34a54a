006ae8c08c15a3cded49c045dce0adbf
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "WatchlistsCardView", {
    enumerable: true,
    get: function() {
        return WatchlistsCardView;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _reactrouterdom = require("react-router-dom");
const _clerkreact = require("@clerk/clerk-react");
const _settings = require("@rp/common/settings");
const _hooks = require("@rp/react/common/hooks");
const _providers = require("@rp/react/common/providers");
const _watchlist = require("@rp/react/tanstack-api/watchlist");
const _basecomponents = require("@rp/react/web/common/base-components");
const _compositecomponents = require("@rp/react/web/common/composite-components");
const _headercomponents = require("@rp/react/web/common/header-components");
const _providers1 = require("@rp/react/web/common/providers");
const _core = require("@rp/react/web/mui/core");
const _router = require("@rp/react/web/router");
const _useWatchlistsFilterTerm = require("../hooks/useWatchlistsFilterTerm");
const _useWatchlistsTabNavigation = require("../hooks/useWatchlistsTabNavigation");
const _CommunityWatchlists = require("./CommunityWatchlists");
const _CompanyWatchlists = require("./CompanyWatchlists");
const _FavoriteWatchlists = require("./FavoriteWatchlists");
const _FindWatchlists = require("./FindWatchlists");
const _MyWatchlists = require("./MyWatchlists");
const _ThematicWatchlists = require("./ThematicWatchlists");
const _WatchlistCardViewTabs = require("./WatchlistCardViewTabs");
const _WatchlistsCardHeader = require("./WatchlistsCardHeader");
const _WatchlistsCardViewToggles = require("./WatchlistsCardViewToggles");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const WatchlistsCardView = ({ modeView, setModeView })=>{
    var _user_organizationMemberships_;
    const { user } = (0, _clerkreact.useUser)();
    const navigate = (0, _reactrouterdom.useNavigate)();
    const hasSelectedTab = (0, _react.useRef)(false);
    const { canShare } = (0, _providers.useAccount)();
    const [ref, setRef] = (0, _react.useState)(null);
    const { filterTerm, setFilterTerm } = (0, _useWatchlistsFilterTerm.useWatchlistsFilterTerm)();
    const { tabValue, handleChange } = (0, _useWatchlistsTabNavigation.useWatchlistsTabNavigation)(null);
    const { data, isLoading } = (0, _watchlist.useAllWatchlists)();
    const { data: members, isLoading: isLoadingMembers } = (0, _hooks.useClerkOrganizationMemberships)();
    (0, _react.useEffect)(()=>{
        if (!hasSelectedTab.current && data && tabValue === null) {
            hasSelectedTab.current = true;
            handleChange((data === null || data === void 0 ? void 0 : data.some((wl)=>wl.isFavorite)) ? "favorites" : "my-watchlists");
        }
    }, [
        data,
        handleChange,
        tabValue
    ]);
    const organization = user === null || user === void 0 ? void 0 : (_user_organizationMemberships_ = user.organizationMemberships[0]) === null || _user_organizationMemberships_ === void 0 ? void 0 : _user_organizationMemberships_.organization;
    var _organization_name;
    const organizationName = (_organization_name = organization === null || organization === void 0 ? void 0 : organization.name) !== null && _organization_name !== void 0 ? _organization_name : "Company's Watchlists";
    const dataWithMembers = (0, _react.useMemo)(()=>{
        return data === null || data === void 0 ? void 0 : data.map((w)=>{
            const member = members === null || members === void 0 ? void 0 : members.find((m)=>m.publicUserData.userId === w.ownerUserId);
            return _object_spread_props(_object_spread({}, w), {
                owner: member
            });
        });
    }, [
        data,
        members
    ]);
    const mine = (0, _react.useMemo)(()=>dataWithMembers === null || dataWithMembers === void 0 ? void 0 : dataWithMembers.filter((w)=>w.ownerUserId === (user === null || user === void 0 ? void 0 : user.id)), [
        dataWithMembers,
        user
    ]);
    const favorites = (0, _react.useMemo)(()=>dataWithMembers === null || dataWithMembers === void 0 ? void 0 : dataWithMembers.filter((w)=>w.isFavorite), [
        dataWithMembers
    ]);
    const companyShared = (0, _react.useMemo)(()=>dataWithMembers === null || dataWithMembers === void 0 ? void 0 : dataWithMembers.filter((w)=>w.ownerUserId !== (user === null || user === void 0 ? void 0 : user.id) && w.shared.company.permission !== "undefined" && w.shared.company.organizationId === (organization === null || organization === void 0 ? void 0 : organization.id)), [
        dataWithMembers,
        organization === null || organization === void 0 ? void 0 : organization.id,
        user === null || user === void 0 ? void 0 : user.id
    ]);
    const community = (0, _react.useMemo)(()=>dataWithMembers === null || dataWithMembers === void 0 ? void 0 : dataWithMembers.filter((w)=>{
            var _w_global;
            return ((_w_global = w.global) === null || _w_global === void 0 ? void 0 : _w_global.status) === "published" && w.global.type === "community";
        }), [
        dataWithMembers
    ]);
    const thematic = (0, _react.useMemo)(()=>dataWithMembers === null || dataWithMembers === void 0 ? void 0 : dataWithMembers.filter((w)=>{
            var _w_global;
            return ((_w_global = w.global) === null || _w_global === void 0 ? void 0 : _w_global.status) === "published" && w.global.type === "thematic";
        }), [
        dataWithMembers
    ]);
    const onCardClick = (0, _react.useCallback)((watchlist)=>{
        var _watchlist_id;
        navigate((0, _reactrouterdom.generatePath)(_router.WATCHLIST_ID_ROUTE, {
            id: (_watchlist_id = watchlist === null || watchlist === void 0 ? void 0 : watchlist.id) !== null && _watchlist_id !== void 0 ? _watchlist_id : ""
        }));
    }, [
        navigate
    ]);
    const { quota } = (0, _providers.useAccount)();
    const { planComparisonModal: { handleOpen: planComparisonHandleOpen } } = (0, _providers1.useModal)();
    const hasMetWatchlistLimit = (0, _hooks.useIsWatchlistLimitMet)(quota);
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
        sx: {
            display: "flex",
            flex: 1,
            width: "100%",
            flexDirection: "column",
            height: "100%"
        },
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_headercomponents.HtmlPageHead, {
                title: "Watchlists"
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_WatchlistsCardHeader.WatchlistsCardHeader, {
                filterTerm: filterTerm,
                setFilterTerm: setFilterTerm
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.CardGradientBackground, {}),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_compositecomponents.MaxWidthContainer, {
                ref: setRef,
                sx: {
                    alignItems: "center",
                    flexDirection: "column",
                    display: "flex",
                    position: "relative",
                    zIndex: 1
                },
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_WatchlistsCardViewToggles.WatchlistsCardViewToggles, {
                        modeView: modeView,
                        setModeView: setModeView
                    }),
                    !filterTerm && /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                        sx: {
                            my: "50px"
                        },
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_WatchlistCardViewTabs.WatchlistsCardViewTabs, {
                            organizationName: organizationName,
                            tabValue: tabValue,
                            handleChange: handleChange,
                            canShare: canShare
                        })
                    }),
                    filterTerm && /*#__PURE__*/ (0, _jsxruntime.jsx)(_FindWatchlists.FindWatchlists, {
                        modeView: modeView,
                        data: dataWithMembers,
                        isLoading: isLoading || isLoadingMembers,
                        onCardClick: onCardClick,
                        containerEl: ref,
                        filterTerm: filterTerm
                    }),
                    (tabValue === "my-watchlists" || tabValue === null) && !filterTerm && /*#__PURE__*/ (0, _jsxruntime.jsx)(_MyWatchlists.MyWatchlists, {
                        modeView: modeView,
                        onNewWatchlistClick: ()=>{
                            hasMetWatchlistLimit ? planComparisonHandleOpen(_settings.WATCHLIST_FEATURE_NAME) : navigate(_router.WATCHLIST_NEW);
                        },
                        isLoading: tabValue === null,
                        data: mine,
                        onCardClick: onCardClick,
                        containerEl: ref,
                        initialLines: 3
                    }),
                    tabValue === "favorites" && !filterTerm && /*#__PURE__*/ (0, _jsxruntime.jsx)(_FavoriteWatchlists.FavoriteWatchlists, {
                        modeView: modeView,
                        data: favorites,
                        onCardClick: onCardClick,
                        containerEl: ref,
                        initialLines: 3
                    }),
                    tabValue === "public-watchlists" && !filterTerm && /*#__PURE__*/ (0, _jsxruntime.jsx)(_CompanyWatchlists.CompanyWatchlists, {
                        modeView: modeView,
                        data: companyShared,
                        onCardClick: onCardClick,
                        containerEl: ref,
                        organizationName: organizationName
                    }),
                    tabValue === "community-watchlists" && !filterTerm && /*#__PURE__*/ (0, _jsxruntime.jsx)(_CommunityWatchlists.CommunityWatchlists, {
                        modeView: modeView,
                        data: community,
                        onCardClick: onCardClick,
                        containerEl: ref
                    }),
                    tabValue === "thematic-watchlists" && !filterTerm && /*#__PURE__*/ (0, _jsxruntime.jsx)(_ThematicWatchlists.ThematicWatchlists, {
                        modeView: modeView,
                        data: thematic,
                        onCardClick: onCardClick,
                        containerEl: ref
                    })
                ]
            })
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,