c5a687fd6f6c2680427dad1434612739
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "RpJsonGroup", {
    enumerable: true,
    get: function() {
        return RpJsonGroup;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _discoverysidebar = require("@rp/react/web/common/discovery-sidebar");
const RpJsonGroup = ({ isLoading, disableCheckbox, disableWatchlist, onChange, onClick, onExclude, widgetActions, widgetCategory, onAddToWatchlist })=>{
    const groupByFamilies = widgetCategory.groups.length > 1 && widgetCategory.groupBy;
    if (!isLoading && widgetCategory.filters.length === 0) return null;
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_discoverysidebar.GroupTitle, {
                title: widgetCategory.label,
                icon: widgetCategory.icon,
                groups: widgetCategory.groups,
                groupBy: widgetCategory.groupBy,
                onGroupByChange: widgetActions.setGroupBy,
                groupId: widgetCategory.id
            }),
            isLoading ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_discoverysidebar.LoadingFilter, {}) : groupByFamilies ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_discoverysidebar.ShowMoreFamilies, {
                widgetCategory: widgetCategory,
                onChange: onChange,
                onClick: onClick,
                widgetActions: widgetActions,
                disableCheckbox: disableCheckbox,
                disableWatchlist: disableWatchlist,
                onExclude: onExclude
            }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_discoverysidebar.FilterDisplay, {
                filters: widgetCategory.filters,
                disableCheckbox: disableCheckbox,
                disableWatchlist: disableWatchlist,
                onChange: onChange,
                onClick: onClick,
                showMore: widgetCategory.showMore.find((item)=>item === "") !== undefined,
                toggleShowMore: ()=>{
                    widgetActions.toggleShowMore(widgetCategory.id);
                },
                onAddToWatchlist: onAddToWatchlist,
                onExclude: onExclude
            })
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2Rpc2NvdmVyeS1zaWRlYmFyL2RvY3VtZW50LWRpc2NvdmVyeS9zcmMvbGliL1JwSnNvbkdyb3VwL1JwSnNvbkdyb3VwLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDcXNJdGVtIH0gZnJvbSBcIkBycC9jb21tb24vYXBpLXR5cGVzXCJcbmltcG9ydCB7IFdhdGNobGlzdCB9IGZyb20gXCJAcnAvY29tbW9uL2FwaS10eXBlc1wiXG5pbXBvcnQge1xuICBDYXRlZ29yeVdpZGdldEFjdGlvbnMsXG4gIEZpbHRlckRpc3BsYXksXG4gIEdyb3VwVGl0bGUsXG4gIExvYWRpbmdGaWx0ZXIsXG4gIFNob3dNb3JlRmFtaWxpZXMsXG4gIFdpZGdldENhdGVnb3J5LFxufSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9jb21tb24vZGlzY292ZXJ5LXNpZGViYXJcIlxuXG50eXBlIFJwSnNvbkdyb3VwUHJvcHMgPSB7XG4gIGlzTG9hZGluZz86IGJvb2xlYW5cbiAgZGlzYWJsZUNoZWNrYm94PzogYm9vbGVhblxuICBkaXNhYmxlV2F0Y2hsaXN0PzogYm9vbGVhblxuICBvbkNoYW5nZT86IChpdGVtOiBDcXNJdGVtKSA9PiB2b2lkXG4gIG9uQ2xpY2s/OiAoaXRlbTogQ3FzSXRlbSkgPT4gdm9pZFxuICBvbkV4Y2x1ZGU/OiAoaXRlbTogQ3FzSXRlbSkgPT4gdm9pZFxuICB3aWRnZXRBY3Rpb25zOiBDYXRlZ29yeVdpZGdldEFjdGlvbnNcbiAgd2lkZ2V0Q2F0ZWdvcnk6IFdpZGdldENhdGVnb3J5XG4gIG9uQWRkVG9XYXRjaGxpc3Q/OiAod2F0Y2hsaXN0OiBXYXRjaGxpc3QpID0+IHZvaWRcbn1cblxuY29uc3QgUnBKc29uR3JvdXAgPSAoe1xuICBpc0xvYWRpbmcsXG4gIGRpc2FibGVDaGVja2JveCxcbiAgZGlzYWJsZVdhdGNobGlzdCxcbiAgb25DaGFuZ2UsXG4gIG9uQ2xpY2ssXG4gIG9uRXhjbHVkZSxcbiAgd2lkZ2V0QWN0aW9ucyxcbiAgd2lkZ2V0Q2F0ZWdvcnksXG4gIG9uQWRkVG9XYXRjaGxpc3QsXG59OiBScEpzb25Hcm91cFByb3BzKSA9PiB7XG4gIGNvbnN0IGdyb3VwQnlGYW1pbGllcyA9IHdpZGdldENhdGVnb3J5Lmdyb3Vwcy5sZW5ndGggPiAxICYmIHdpZGdldENhdGVnb3J5Lmdyb3VwQnlcbiAgaWYgKCFpc0xvYWRpbmcgJiYgd2lkZ2V0Q2F0ZWdvcnkuZmlsdGVycy5sZW5ndGggPT09IDApIHJldHVybiBudWxsXG4gIHJldHVybiAoXG4gICAgPGRpdj5cbiAgICAgIDxHcm91cFRpdGxlXG4gICAgICAgIHRpdGxlPXt3aWRnZXRDYXRlZ29yeS5sYWJlbH1cbiAgICAgICAgaWNvbj17d2lkZ2V0Q2F0ZWdvcnkuaWNvbn1cbiAgICAgICAgZ3JvdXBzPXt3aWRnZXRDYXRlZ29yeS5ncm91cHN9XG4gICAgICAgIGdyb3VwQnk9e3dpZGdldENhdGVnb3J5Lmdyb3VwQnl9XG4gICAgICAgIG9uR3JvdXBCeUNoYW5nZT17d2lkZ2V0QWN0aW9ucy5zZXRHcm91cEJ5fVxuICAgICAgICBncm91cElkPXt3aWRnZXRDYXRlZ29yeS5pZH1cbiAgICAgIC8+XG4gICAgICB7aXNMb2FkaW5nID8gKFxuICAgICAgICA8TG9hZGluZ0ZpbHRlciAvPlxuICAgICAgKSA6IGdyb3VwQnlGYW1pbGllcyA/IChcbiAgICAgICAgPFNob3dNb3JlRmFtaWxpZXNcbiAgICAgICAgICB3aWRnZXRDYXRlZ29yeT17d2lkZ2V0Q2F0ZWdvcnl9XG4gICAgICAgICAgb25DaGFuZ2U9e29uQ2hhbmdlfVxuICAgICAgICAgIG9uQ2xpY2s9e29uQ2xpY2t9XG4gICAgICAgICAgd2lkZ2V0QWN0aW9ucz17d2lkZ2V0QWN0aW9uc31cbiAgICAgICAgICBkaXNhYmxlQ2hlY2tib3g9e2Rpc2FibGVDaGVja2JveH1cbiAgICAgICAgICBkaXNhYmxlV2F0Y2hsaXN0PXtkaXNhYmxlV2F0Y2hsaXN0fVxuICAgICAgICAgIG9uRXhjbHVkZT17b25FeGNsdWRlfVxuICAgICAgICAvPlxuICAgICAgKSA6IChcbiAgICAgICAgPEZpbHRlckRpc3BsYXlcbiAgICAgICAgICBmaWx0ZXJzPXt3aWRnZXRDYXRlZ29yeS5maWx0ZXJzfVxuICAgICAgICAgIGRpc2FibGVDaGVja2JveD17ZGlzYWJsZUNoZWNrYm94fVxuICAgICAgICAgIGRpc2FibGVXYXRjaGxpc3Q9e2Rpc2FibGVXYXRjaGxpc3R9XG4gICAgICAgICAgb25DaGFuZ2U9e29uQ2hhbmdlfVxuICAgICAgICAgIG9uQ2xpY2s9e29uQ2xpY2t9XG4gICAgICAgICAgc2hvd01vcmU9e3dpZGdldENhdGVnb3J5LnNob3dNb3JlLmZpbmQoaXRlbSA9PiBpdGVtID09PSBcIlwiKSAhPT0gdW5kZWZpbmVkfVxuICAgICAgICAgIHRvZ2dsZVNob3dNb3JlPXsoKSA9PiB7XG4gICAgICAgICAgICB3aWRnZXRBY3Rpb25zLnRvZ2dsZVNob3dNb3JlKHdpZGdldENhdGVnb3J5LmlkKVxuICAgICAgICAgIH19XG4gICAgICAgICAgb25BZGRUb1dhdGNobGlzdD17b25BZGRUb1dhdGNobGlzdH1cbiAgICAgICAgICBvbkV4Y2x1ZGU9e29uRXhjbHVkZX1cbiAgICAgICAgLz5cbiAgICAgICl9XG4gICAgPC9kaXY+XG4gIClcbn1cblxuZXhwb3J0IHsgUnBKc29uR3JvdXAgfVxuIl0sIm5hbWVzIjpbIlJwSnNvbkdyb3VwIiwiaXNMb2FkaW5nIiwiZGlzYWJsZUNoZWNrYm94IiwiZGlzYWJsZVdhdGNobGlzdCIsIm9uQ2hhbmdlIiwib25DbGljayIsIm9uRXhjbHVkZSIsIndpZGdldEFjdGlvbnMiLCJ3aWRnZXRDYXRlZ29yeSIsIm9uQWRkVG9XYXRjaGxpc3QiLCJncm91cEJ5RmFtaWxpZXMiLCJncm91cHMiLCJsZW5ndGgiLCJncm91cEJ5IiwiZmlsdGVycyIsImRpdiIsIkdyb3VwVGl0bGUiLCJ0aXRsZSIsImxhYmVsIiwiaWNvbiIsIm9uR3JvdXBCeUNoYW5nZSIsInNldEdyb3VwQnkiLCJncm91cElkIiwiaWQiLCJMb2FkaW5nRmlsdGVyIiwiU2hvd01vcmVGYW1pbGllcyIsIkZpbHRlckRpc3BsYXkiLCJzaG93TW9yZSIsImZpbmQiLCJpdGVtIiwidW5kZWZpbmVkIiwidG9nZ2xlU2hvd01vcmUiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQTZFU0E7OztlQUFBQTs7OztrQ0FwRUY7QUFjUCxNQUFNQSxjQUFjLENBQUMsRUFDbkJDLFNBQVMsRUFDVEMsZUFBZSxFQUNmQyxnQkFBZ0IsRUFDaEJDLFFBQVEsRUFDUkMsT0FBTyxFQUNQQyxTQUFTLEVBQ1RDLGFBQWEsRUFDYkMsY0FBYyxFQUNkQyxnQkFBZ0IsRUFDQztJQUNqQixNQUFNQyxrQkFBa0JGLGVBQWVHLE1BQU0sQ0FBQ0MsTUFBTSxHQUFHLEtBQUtKLGVBQWVLLE9BQU87SUFDbEYsSUFBSSxDQUFDWixhQUFhTyxlQUFlTSxPQUFPLENBQUNGLE1BQU0sS0FBSyxHQUFHLE9BQU87SUFDOUQscUJBQ0Usc0JBQUNHOzswQkFDQyxxQkFBQ0MsNEJBQVU7Z0JBQ1RDLE9BQU9ULGVBQWVVLEtBQUs7Z0JBQzNCQyxNQUFNWCxlQUFlVyxJQUFJO2dCQUN6QlIsUUFBUUgsZUFBZUcsTUFBTTtnQkFDN0JFLFNBQVNMLGVBQWVLLE9BQU87Z0JBQy9CTyxpQkFBaUJiLGNBQWNjLFVBQVU7Z0JBQ3pDQyxTQUFTZCxlQUFlZSxFQUFFOztZQUUzQnRCLDBCQUNDLHFCQUFDdUIsK0JBQWEsUUFDWmQsZ0NBQ0YscUJBQUNlLGtDQUFnQjtnQkFDZmpCLGdCQUFnQkE7Z0JBQ2hCSixVQUFVQTtnQkFDVkMsU0FBU0E7Z0JBQ1RFLGVBQWVBO2dCQUNmTCxpQkFBaUJBO2dCQUNqQkMsa0JBQWtCQTtnQkFDbEJHLFdBQVdBOytCQUdiLHFCQUFDb0IsK0JBQWE7Z0JBQ1paLFNBQVNOLGVBQWVNLE9BQU87Z0JBQy9CWixpQkFBaUJBO2dCQUNqQkMsa0JBQWtCQTtnQkFDbEJDLFVBQVVBO2dCQUNWQyxTQUFTQTtnQkFDVHNCLFVBQVVuQixlQUFlbUIsUUFBUSxDQUFDQyxJQUFJLENBQUNDLENBQUFBLE9BQVFBLFNBQVMsUUFBUUM7Z0JBQ2hFQyxnQkFBZ0I7b0JBQ2R4QixjQUFjd0IsY0FBYyxDQUFDdkIsZUFBZWUsRUFBRTtnQkFDaEQ7Z0JBQ0FkLGtCQUFrQkE7Z0JBQ2xCSCxXQUFXQTs7OztBQUtyQiJ9