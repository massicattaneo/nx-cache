43eeef84b146fe3d87a5155148b1c5be
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    SuggestedPromptsFilters: function() {
        return SuggestedPromptsFilters;
    },
    getButtonLabel: function() {
        return getButtonLabel;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _i18next = require("i18next");
const _apitypes = require("@rp/common/api-types");
const _core = require("@rp/react/web/mui/core");
const _icons = require("@rp/react/web/mui/icons");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const getButtonLabel = (values, emptyLabel)=>{
    const selectedLabels = Object.entries(values).filter(([_, value])=>value).map((entry)=>entry[0]);
    if (selectedLabels.length === 0) {
        return [
            emptyLabel,
            ""
        ];
    }
    return selectedLabels.length > 1 ? [
        `${selectedLabels[0]},`,
        ` +${selectedLabels.length - 1}`
    ] : [
        selectedLabels[0],
        ""
    ];
};
const SuggestedPromptsFilters = ({ textInputValue, onTextInputChange, selectedTasks, selectedTopics, selectedScopes, onTopicsChange, onSelectedTasks, onSelectedScopes, topics, enabledDatasets })=>{
    const [openMenu, setOpenMenu] = (0, _react.useState)();
    const topicsMenuButtonRef = (0, _react.useRef)(null);
    const tasksMenuButtonRef = (0, _react.useRef)(null);
    const scopesMenuButtonRef = (0, _react.useRef)(null);
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.InputBase, {
                sx: {
                    backgroundColor: "overlay.surface",
                    py: 1,
                    pl: 1,
                    pr: 2,
                    borderRadius: 2,
                    mb: 1.5
                },
                startAdornment: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.Search, {
                    sx: {
                        p: 0.5,
                        pt: 0.25,
                        color: "text.disabled"
                    }
                }),
                endAdornment: textInputValue.length > 1 ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.ButtonBase, {
                    sx: {
                        pl: 1
                    },
                    onClick: ()=>onTextInputChange(""),
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.Close, {
                        sx: {
                            fontSize: 18
                        }
                    })
                }) : null,
                placeholder: (0, _i18next.t)("promptsLibrary.findAPrompt"),
                fullWidth: true,
                value: textInputValue,
                onChange: (event)=>onTextInputChange(event.target.value)
            }),
            textInputValue.length === 0 ? /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                sx: {
                    display: "flex",
                    gap: 1.5,
                    py: 1.5
                },
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.ButtonBase, {
                        sx: {
                            bgcolor: "overlay.surface",
                            py: 0.5,
                            px: 1,
                            borderRadius: 1
                        },
                        ref: scopesMenuButtonRef,
                        onClick: ()=>setOpenMenu("sources"),
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                                sx: {
                                    color: "grey.300",
                                    mr: 0.5
                                },
                                children: getButtonLabel(enabledDatasets.reduce((acc, val)=>{
                                    var _selectedScopes_val_id;
                                    return _object_spread_props(_object_spread({}, acc), {
                                        [val.label]: (_selectedScopes_val_id = selectedScopes[val.id]) !== null && _selectedScopes_val_id !== void 0 ? _selectedScopes_val_id : false
                                    });
                                }, {}), "Select a source").join("")
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.ArrowDropDown, {})
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Menu, {
                        open: openMenu === "sources",
                        anchorEl: scopesMenuButtonRef.current,
                        onClose: ()=>setOpenMenu(undefined),
                        children: enabledDatasets.map((scope)=>/*#__PURE__*/ {
                            var _selectedScopes_scope_id;
                            return (0, _jsxruntime.jsxs)(_core.MenuItem, {
                                dense: true,
                                sx: {
                                    pl: 0.5,
                                    fontSize: 16
                                },
                                onClick: ()=>onSelectedScopes([
                                        scope.id
                                    ]),
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Checkbox, {
                                        checked: (_selectedScopes_scope_id = selectedScopes[scope.id]) !== null && _selectedScopes_scope_id !== void 0 ? _selectedScopes_scope_id : false,
                                        sx: {
                                            height: 32,
                                            width: 32,
                                            mx: 0.5
                                        }
                                    }),
                                    scope.label
                                ]
                            }, scope.id);
                        })
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.ButtonBase, {
                        sx: {
                            bgcolor: "overlay.surface",
                            py: 0.5,
                            px: 1,
                            borderRadius: 1
                        },
                        ref: topicsMenuButtonRef,
                        onClick: ()=>setOpenMenu("topics"),
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                                sx: {
                                    color: "grey.300",
                                    mr: 0.5
                                },
                                children: getButtonLabel(selectedTopics, "Select a topic").join("")
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.ArrowDropDown, {})
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Menu, {
                        open: openMenu === "topics",
                        anchorEl: topicsMenuButtonRef.current,
                        onClose: ()=>setOpenMenu(undefined),
                        slotProps: {
                            paper: {
                                sx: (theme)=>_object_spread_props(_object_spread({}, theme.onHoverScrollbarStyles), {
                                        "&:hover": _object_spread({}, theme.scrollbarStyles)
                                    })
                            }
                        },
                        children: topics.map((topic)=>/*#__PURE__*/ {
                            var _selectedTopics_topic;
                            return (0, _jsxruntime.jsxs)(_core.MenuItem, {
                                dense: true,
                                sx: {
                                    pl: 0.5,
                                    fontSize: 16
                                },
                                onClick: ()=>onTopicsChange([
                                        topic
                                    ]),
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Checkbox, {
                                        checked: (_selectedTopics_topic = selectedTopics[topic]) !== null && _selectedTopics_topic !== void 0 ? _selectedTopics_topic : false,
                                        sx: {
                                            height: 32,
                                            width: 32,
                                            mx: 0.5
                                        }
                                    }),
                                    topic
                                ]
                            }, topic);
                        })
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.ButtonBase, {
                                sx: {
                                    bgcolor: "overlay.surface",
                                    py: 0.5,
                                    px: 1,
                                    borderRadius: 1
                                },
                                ref: tasksMenuButtonRef,
                                onClick: ()=>setOpenMenu("tasks"),
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                                        sx: {
                                            color: "grey.300",
                                            mr: 0.5
                                        },
                                        children: getButtonLabel(selectedTasks, "Select a task").join("")
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.ArrowDropDown, {})
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Menu, {
                                open: openMenu === "tasks",
                                anchorEl: tasksMenuButtonRef.current,
                                onClose: ()=>setOpenMenu(undefined),
                                children: _apitypes.Task.map((task)=>/*#__PURE__*/ {
                                    var _selectedTasks_task;
                                    return (0, _jsxruntime.jsxs)(_core.MenuItem, {
                                        dense: true,
                                        sx: {
                                            pl: 0.5,
                                            fontSize: 16
                                        },
                                        onClick: ()=>onSelectedTasks([
                                                task
                                            ]),
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Checkbox, {
                                                checked: (_selectedTasks_task = selectedTasks[task]) !== null && _selectedTasks_task !== void 0 ? _selectedTasks_task : false,
                                                sx: {
                                                    height: 32,
                                                    width: 32,
                                                    mx: 0.5
                                                }
                                            }),
                                            task
                                        ]
                                    }, task);
                                })
                            })
                        ]
                    })
                ]
            }) : null
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9jb21wb3NpdGUtY29tcG9uZW50cy9zcmMvU3VnZ2VzdGVkUHJvbXB0cy9TdWdnZXN0ZWRQcm9tcHRzRmlsdGVycy50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlUmVmLCB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgeyB0IH0gZnJvbSBcImkxOG5leHRcIlxuaW1wb3J0IHsgRGF0YXNldCwgRGF0YXNldFNjb3BlLCBUYXNrIH0gZnJvbSBcIkBycC9jb21tb24vYXBpLXR5cGVzXCJcbmltcG9ydCB7XG4gIEJveCxcbiAgQnV0dG9uQmFzZSxcbiAgQ2hlY2tib3gsXG4gIElucHV0QmFzZSxcbiAgTWVudSxcbiAgTWVudUl0ZW0sXG4gIFR5cG9ncmFwaHksXG59IGZyb20gXCJAcnAvcmVhY3Qvd2ViL211aS9jb3JlXCJcbmltcG9ydCB7IEFycm93RHJvcERvd24sIENsb3NlLCBTZWFyY2ggfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9tdWkvaWNvbnNcIlxuXG50eXBlIFByb3BzID0ge1xuICB0ZXh0SW5wdXRWYWx1ZTogc3RyaW5nXG4gIG9uVGV4dElucHV0Q2hhbmdlOiAodmFsdWU6IHN0cmluZykgPT4gdm9pZFxuICBzZWxlY3RlZFRvcGljczogUmVjb3JkPHN0cmluZywgYm9vbGVhbj5cbiAgc2VsZWN0ZWRUYXNrczogUmVjb3JkPHN0cmluZywgYm9vbGVhbj5cbiAgc2VsZWN0ZWRTY29wZXM6IFJlY29yZDxEYXRhc2V0U2NvcGUsIGJvb2xlYW4+XG4gIG9uVG9waWNzQ2hhbmdlOiAodG9waWNzOiBBcnJheTxzdHJpbmc+KSA9PiB2b2lkXG4gIG9uU2VsZWN0ZWRUYXNrczogKHRhc2tzOiBBcnJheTxzdHJpbmc+KSA9PiB2b2lkXG4gIG9uU2VsZWN0ZWRTY29wZXM6ICh0YXNrczogQXJyYXk8c3RyaW5nPikgPT4gdm9pZFxuICB0b3BpY3M6IEFycmF5PHN0cmluZz5cbiAgZW5hYmxlZERhdGFzZXRzOiBBcnJheTxEYXRhc2V0PERhdGFzZXRTY29wZT4+XG59XG5cbmNvbnN0IGdldEJ1dHRvbkxhYmVsID0gKHZhbHVlczogUmVjb3JkPHN0cmluZywgYm9vbGVhbj4sIGVtcHR5TGFiZWw6IHN0cmluZykgPT4ge1xuICBjb25zdCBzZWxlY3RlZExhYmVscyA9IE9iamVjdC5lbnRyaWVzKHZhbHVlcylcbiAgICAuZmlsdGVyKChbXywgdmFsdWVdKSA9PiB2YWx1ZSlcbiAgICAubWFwKGVudHJ5ID0+IGVudHJ5WzBdKVxuXG4gIGlmIChzZWxlY3RlZExhYmVscy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gW2VtcHR5TGFiZWwsIFwiXCJdXG4gIH1cblxuICByZXR1cm4gc2VsZWN0ZWRMYWJlbHMubGVuZ3RoID4gMVxuICAgID8gW2Ake3NlbGVjdGVkTGFiZWxzWzBdfSxgLCBgICske3NlbGVjdGVkTGFiZWxzLmxlbmd0aCAtIDF9YF1cbiAgICA6IFtzZWxlY3RlZExhYmVsc1swXSwgXCJcIl1cbn1cblxuY29uc3QgU3VnZ2VzdGVkUHJvbXB0c0ZpbHRlcnMgPSAoe1xuICB0ZXh0SW5wdXRWYWx1ZSxcbiAgb25UZXh0SW5wdXRDaGFuZ2UsXG4gIHNlbGVjdGVkVGFza3MsXG4gIHNlbGVjdGVkVG9waWNzLFxuICBzZWxlY3RlZFNjb3BlcyxcbiAgb25Ub3BpY3NDaGFuZ2UsXG4gIG9uU2VsZWN0ZWRUYXNrcyxcbiAgb25TZWxlY3RlZFNjb3BlcyxcbiAgdG9waWNzLFxuICBlbmFibGVkRGF0YXNldHMsXG59OiBQcm9wcykgPT4ge1xuICBjb25zdCBbb3Blbk1lbnUsIHNldE9wZW5NZW51XSA9IHVzZVN0YXRlPFwidG9waWNzXCIgfCBcInRhc2tzXCIgfCBcInNvdXJjZXNcIiB8IHVuZGVmaW5lZD4oKVxuICBjb25zdCB0b3BpY3NNZW51QnV0dG9uUmVmID0gdXNlUmVmPEhUTUxCdXR0b25FbGVtZW50PihudWxsKVxuICBjb25zdCB0YXNrc01lbnVCdXR0b25SZWYgPSB1c2VSZWY8SFRNTEJ1dHRvbkVsZW1lbnQ+KG51bGwpXG5cbiAgY29uc3Qgc2NvcGVzTWVudUJ1dHRvblJlZiA9IHVzZVJlZjxIVE1MQnV0dG9uRWxlbWVudD4obnVsbClcbiAgcmV0dXJuIChcbiAgICA8Qm94PlxuICAgICAgPElucHV0QmFzZVxuICAgICAgICBzeD17eyBiYWNrZ3JvdW5kQ29sb3I6IFwib3ZlcmxheS5zdXJmYWNlXCIsIHB5OiAxLCBwbDogMSwgcHI6IDIsIGJvcmRlclJhZGl1czogMiwgbWI6IDEuNSB9fVxuICAgICAgICBzdGFydEFkb3JubWVudD17PFNlYXJjaCBzeD17eyBwOiAwLjUsIHB0OiAwLjI1LCBjb2xvcjogXCJ0ZXh0LmRpc2FibGVkXCIgfX0gLz59XG4gICAgICAgIGVuZEFkb3JubWVudD17XG4gICAgICAgICAgdGV4dElucHV0VmFsdWUubGVuZ3RoID4gMSA/IChcbiAgICAgICAgICAgIDxCdXR0b25CYXNlIHN4PXt7IHBsOiAxIH19IG9uQ2xpY2s9eygpID0+IG9uVGV4dElucHV0Q2hhbmdlKFwiXCIpfT5cbiAgICAgICAgICAgICAgPENsb3NlIHN4PXt7IGZvbnRTaXplOiAxOCB9fSAvPlxuICAgICAgICAgICAgPC9CdXR0b25CYXNlPlxuICAgICAgICAgICkgOiBudWxsXG4gICAgICAgIH1cbiAgICAgICAgcGxhY2Vob2xkZXI9e3QoXCJwcm9tcHRzTGlicmFyeS5maW5kQVByb21wdFwiKX1cbiAgICAgICAgZnVsbFdpZHRoXG4gICAgICAgIHZhbHVlPXt0ZXh0SW5wdXRWYWx1ZX1cbiAgICAgICAgb25DaGFuZ2U9e2V2ZW50ID0+IG9uVGV4dElucHV0Q2hhbmdlKGV2ZW50LnRhcmdldC52YWx1ZSl9XG4gICAgICAvPlxuICAgICAge3RleHRJbnB1dFZhbHVlLmxlbmd0aCA9PT0gMCA/IChcbiAgICAgICAgPEJveCBzeD17eyBkaXNwbGF5OiBcImZsZXhcIiwgZ2FwOiAxLjUsIHB5OiAxLjUgfX0+XG4gICAgICAgICAgPEJ1dHRvbkJhc2VcbiAgICAgICAgICAgIHN4PXt7IGJnY29sb3I6IFwib3ZlcmxheS5zdXJmYWNlXCIsIHB5OiAwLjUsIHB4OiAxLCBib3JkZXJSYWRpdXM6IDEgfX1cbiAgICAgICAgICAgIHJlZj17c2NvcGVzTWVudUJ1dHRvblJlZn1cbiAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHNldE9wZW5NZW51KFwic291cmNlc1wiKX1cbiAgICAgICAgICA+XG4gICAgICAgICAgICA8VHlwb2dyYXBoeSBzeD17eyBjb2xvcjogXCJncmV5LjMwMFwiLCBtcjogMC41IH19PlxuICAgICAgICAgICAgICB7Z2V0QnV0dG9uTGFiZWwoXG4gICAgICAgICAgICAgICAgZW5hYmxlZERhdGFzZXRzLnJlZHVjZSgoYWNjLCB2YWwpID0+IHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiB7IC4uLmFjYywgW3ZhbC5sYWJlbF06IHNlbGVjdGVkU2NvcGVzW3ZhbC5pZF0gPz8gZmFsc2UgfVxuICAgICAgICAgICAgICAgIH0sIHt9KSxcbiAgICAgICAgICAgICAgICBcIlNlbGVjdCBhIHNvdXJjZVwiLFxuICAgICAgICAgICAgICApLmpvaW4oXCJcIil9XG4gICAgICAgICAgICA8L1R5cG9ncmFwaHk+XG4gICAgICAgICAgICA8QXJyb3dEcm9wRG93biAvPlxuICAgICAgICAgIDwvQnV0dG9uQmFzZT5cbiAgICAgICAgICA8TWVudVxuICAgICAgICAgICAgb3Blbj17b3Blbk1lbnUgPT09IFwic291cmNlc1wifVxuICAgICAgICAgICAgYW5jaG9yRWw9e3Njb3Blc01lbnVCdXR0b25SZWYuY3VycmVudH1cbiAgICAgICAgICAgIG9uQ2xvc2U9eygpID0+IHNldE9wZW5NZW51KHVuZGVmaW5lZCl9XG4gICAgICAgICAgPlxuICAgICAgICAgICAge2VuYWJsZWREYXRhc2V0cy5tYXAoc2NvcGUgPT4gKFxuICAgICAgICAgICAgICA8TWVudUl0ZW1cbiAgICAgICAgICAgICAgICBrZXk9e3Njb3BlLmlkfVxuICAgICAgICAgICAgICAgIGRlbnNlXG4gICAgICAgICAgICAgICAgc3g9e3tcbiAgICAgICAgICAgICAgICAgIHBsOiAwLjUsXG4gICAgICAgICAgICAgICAgICBmb250U2l6ZTogMTYsXG4gICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBvblNlbGVjdGVkU2NvcGVzKFtzY29wZS5pZF0pfVxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgPENoZWNrYm94XG4gICAgICAgICAgICAgICAgICBjaGVja2VkPXtzZWxlY3RlZFNjb3Blc1tzY29wZS5pZF0gPz8gZmFsc2V9XG4gICAgICAgICAgICAgICAgICBzeD17eyBoZWlnaHQ6IDMyLCB3aWR0aDogMzIsIG14OiAwLjUgfX1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIHtzY29wZS5sYWJlbH1cbiAgICAgICAgICAgICAgPC9NZW51SXRlbT5cbiAgICAgICAgICAgICkpfVxuICAgICAgICAgIDwvTWVudT5cbiAgICAgICAgICA8QnV0dG9uQmFzZVxuICAgICAgICAgICAgc3g9e3sgYmdjb2xvcjogXCJvdmVybGF5LnN1cmZhY2VcIiwgcHk6IDAuNSwgcHg6IDEsIGJvcmRlclJhZGl1czogMSB9fVxuICAgICAgICAgICAgcmVmPXt0b3BpY3NNZW51QnV0dG9uUmVmfVxuICAgICAgICAgICAgb25DbGljaz17KCkgPT4gc2V0T3Blbk1lbnUoXCJ0b3BpY3NcIil9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPFR5cG9ncmFwaHkgc3g9e3sgY29sb3I6IFwiZ3JleS4zMDBcIiwgbXI6IDAuNSB9fT5cbiAgICAgICAgICAgICAge2dldEJ1dHRvbkxhYmVsKHNlbGVjdGVkVG9waWNzLCBcIlNlbGVjdCBhIHRvcGljXCIpLmpvaW4oXCJcIil9XG4gICAgICAgICAgICA8L1R5cG9ncmFwaHk+XG4gICAgICAgICAgICA8QXJyb3dEcm9wRG93biAvPlxuICAgICAgICAgIDwvQnV0dG9uQmFzZT5cbiAgICAgICAgICA8TWVudVxuICAgICAgICAgICAgb3Blbj17b3Blbk1lbnUgPT09IFwidG9waWNzXCJ9XG4gICAgICAgICAgICBhbmNob3JFbD17dG9waWNzTWVudUJ1dHRvblJlZi5jdXJyZW50fVxuICAgICAgICAgICAgb25DbG9zZT17KCkgPT4gc2V0T3Blbk1lbnUodW5kZWZpbmVkKX1cbiAgICAgICAgICAgIHNsb3RQcm9wcz17e1xuICAgICAgICAgICAgICBwYXBlcjoge1xuICAgICAgICAgICAgICAgIHN4OiB0aGVtZSA9PiAoe1xuICAgICAgICAgICAgICAgICAgLi4udGhlbWUub25Ib3ZlclNjcm9sbGJhclN0eWxlcyxcbiAgICAgICAgICAgICAgICAgIFwiJjpob3ZlclwiOiB7XG4gICAgICAgICAgICAgICAgICAgIC4uLnRoZW1lLnNjcm9sbGJhclN0eWxlcyxcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9fVxuICAgICAgICAgID5cbiAgICAgICAgICAgIHt0b3BpY3MubWFwKHRvcGljID0+IChcbiAgICAgICAgICAgICAgPE1lbnVJdGVtXG4gICAgICAgICAgICAgICAga2V5PXt0b3BpY31cbiAgICAgICAgICAgICAgICBkZW5zZVxuICAgICAgICAgICAgICAgIHN4PXt7XG4gICAgICAgICAgICAgICAgICBwbDogMC41LFxuICAgICAgICAgICAgICAgICAgZm9udFNpemU6IDE2LFxuICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gb25Ub3BpY3NDaGFuZ2UoW3RvcGljXSl9XG4gICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICA8Q2hlY2tib3hcbiAgICAgICAgICAgICAgICAgIGNoZWNrZWQ9e3NlbGVjdGVkVG9waWNzW3RvcGljXSA/PyBmYWxzZX1cbiAgICAgICAgICAgICAgICAgIHN4PXt7IGhlaWdodDogMzIsIHdpZHRoOiAzMiwgbXg6IDAuNSB9fVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAge3RvcGljfVxuICAgICAgICAgICAgICA8L01lbnVJdGVtPlxuICAgICAgICAgICAgKSl9XG4gICAgICAgICAgPC9NZW51PlxuICAgICAgICAgIDw+XG4gICAgICAgICAgICA8QnV0dG9uQmFzZVxuICAgICAgICAgICAgICBzeD17eyBiZ2NvbG9yOiBcIm92ZXJsYXkuc3VyZmFjZVwiLCBweTogMC41LCBweDogMSwgYm9yZGVyUmFkaXVzOiAxIH19XG4gICAgICAgICAgICAgIHJlZj17dGFza3NNZW51QnV0dG9uUmVmfVxuICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBzZXRPcGVuTWVudShcInRhc2tzXCIpfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICA8VHlwb2dyYXBoeSBzeD17eyBjb2xvcjogXCJncmV5LjMwMFwiLCBtcjogMC41IH19PlxuICAgICAgICAgICAgICAgIHtnZXRCdXR0b25MYWJlbChzZWxlY3RlZFRhc2tzLCBcIlNlbGVjdCBhIHRhc2tcIikuam9pbihcIlwiKX1cbiAgICAgICAgICAgICAgPC9UeXBvZ3JhcGh5PlxuICAgICAgICAgICAgICA8QXJyb3dEcm9wRG93biAvPlxuICAgICAgICAgICAgPC9CdXR0b25CYXNlPlxuICAgICAgICAgICAgPE1lbnVcbiAgICAgICAgICAgICAgb3Blbj17b3Blbk1lbnUgPT09IFwidGFza3NcIn1cbiAgICAgICAgICAgICAgYW5jaG9yRWw9e3Rhc2tzTWVudUJ1dHRvblJlZi5jdXJyZW50fVxuICAgICAgICAgICAgICBvbkNsb3NlPXsoKSA9PiBzZXRPcGVuTWVudSh1bmRlZmluZWQpfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICB7VGFzay5tYXAodGFzayA9PiAoXG4gICAgICAgICAgICAgICAgPE1lbnVJdGVtXG4gICAgICAgICAgICAgICAgICBrZXk9e3Rhc2t9XG4gICAgICAgICAgICAgICAgICBkZW5zZVxuICAgICAgICAgICAgICAgICAgc3g9e3tcbiAgICAgICAgICAgICAgICAgICAgcGw6IDAuNSxcbiAgICAgICAgICAgICAgICAgICAgZm9udFNpemU6IDE2LFxuICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IG9uU2VsZWN0ZWRUYXNrcyhbdGFza10pfVxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgIDxDaGVja2JveFxuICAgICAgICAgICAgICAgICAgICBjaGVja2VkPXtzZWxlY3RlZFRhc2tzW3Rhc2tdID8/IGZhbHNlfVxuICAgICAgICAgICAgICAgICAgICBzeD17eyBoZWlnaHQ6IDMyLCB3aWR0aDogMzIsIG14OiAwLjUgfX1cbiAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICB7dGFza31cbiAgICAgICAgICAgICAgICA8L01lbnVJdGVtPlxuICAgICAgICAgICAgICApKX1cbiAgICAgICAgICAgIDwvTWVudT5cbiAgICAgICAgICA8Lz5cbiAgICAgICAgPC9Cb3g+XG4gICAgICApIDogbnVsbH1cbiAgICA8L0JveD5cbiAgKVxufVxuZXhwb3J0IHsgU3VnZ2VzdGVkUHJvbXB0c0ZpbHRlcnMsIGdldEJ1dHRvbkxhYmVsIH1cbiJdLCJuYW1lcyI6WyJTdWdnZXN0ZWRQcm9tcHRzRmlsdGVycyIsImdldEJ1dHRvbkxhYmVsIiwidmFsdWVzIiwiZW1wdHlMYWJlbCIsInNlbGVjdGVkTGFiZWxzIiwiT2JqZWN0IiwiZW50cmllcyIsImZpbHRlciIsIl8iLCJ2YWx1ZSIsIm1hcCIsImVudHJ5IiwibGVuZ3RoIiwidGV4dElucHV0VmFsdWUiLCJvblRleHRJbnB1dENoYW5nZSIsInNlbGVjdGVkVGFza3MiLCJzZWxlY3RlZFRvcGljcyIsInNlbGVjdGVkU2NvcGVzIiwib25Ub3BpY3NDaGFuZ2UiLCJvblNlbGVjdGVkVGFza3MiLCJvblNlbGVjdGVkU2NvcGVzIiwidG9waWNzIiwiZW5hYmxlZERhdGFzZXRzIiwib3Blbk1lbnUiLCJzZXRPcGVuTWVudSIsInVzZVN0YXRlIiwidG9waWNzTWVudUJ1dHRvblJlZiIsInVzZVJlZiIsInRhc2tzTWVudUJ1dHRvblJlZiIsInNjb3Blc01lbnVCdXR0b25SZWYiLCJCb3giLCJJbnB1dEJhc2UiLCJzeCIsImJhY2tncm91bmRDb2xvciIsInB5IiwicGwiLCJwciIsImJvcmRlclJhZGl1cyIsIm1iIiwic3RhcnRBZG9ybm1lbnQiLCJTZWFyY2giLCJwIiwicHQiLCJjb2xvciIsImVuZEFkb3JubWVudCIsIkJ1dHRvbkJhc2UiLCJvbkNsaWNrIiwiQ2xvc2UiLCJmb250U2l6ZSIsInBsYWNlaG9sZGVyIiwidCIsImZ1bGxXaWR0aCIsIm9uQ2hhbmdlIiwiZXZlbnQiLCJ0YXJnZXQiLCJkaXNwbGF5IiwiZ2FwIiwiYmdjb2xvciIsInB4IiwicmVmIiwiVHlwb2dyYXBoeSIsIm1yIiwicmVkdWNlIiwiYWNjIiwidmFsIiwibGFiZWwiLCJpZCIsImpvaW4iLCJBcnJvd0Ryb3BEb3duIiwiTWVudSIsIm9wZW4iLCJhbmNob3JFbCIsImN1cnJlbnQiLCJvbkNsb3NlIiwidW5kZWZpbmVkIiwic2NvcGUiLCJNZW51SXRlbSIsImRlbnNlIiwiQ2hlY2tib3giLCJjaGVja2VkIiwiaGVpZ2h0Iiwid2lkdGgiLCJteCIsInNsb3RQcm9wcyIsInBhcGVyIiwidGhlbWUiLCJvbkhvdmVyU2Nyb2xsYmFyU3R5bGVzIiwic2Nyb2xsYmFyU3R5bGVzIiwidG9waWMiLCJUYXNrIiwidGFzayJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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