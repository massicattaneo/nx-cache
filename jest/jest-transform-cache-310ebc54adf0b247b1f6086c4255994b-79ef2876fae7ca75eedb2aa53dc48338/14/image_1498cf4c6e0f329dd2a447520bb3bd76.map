{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/node_modules/mdast-util-to-markdown/lib/handle/image.js"],"sourcesContent":["/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\nimage.peek = imagePeek\n\n/**\n * @param {Image} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function image(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('image')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  value += tracker.move(\n    state.safe(node.alt, {before: value, after: ']', ...tracker.current()})\n  )\n  value += tracker.move('](')\n\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n  exit()\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imagePeek() {\n  return '!'\n}\n"],"names":["image","peek","imagePeek","node","_","state","info","quote","checkQuote","suffix","exit","enter","subexit","tracker","createTracker","value","move","safe","alt","before","after","current","url","title","test"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA;;;;;CAKC;;;;+BAaeA;;;eAAAA;;;4BAXS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEzBA,MAAMC,IAAI,GAAGC;AASN,SAASF,MAAMG,IAAI,EAAEC,CAAC,EAAEC,KAAK,EAAEC,IAAI;IACxC,MAAMC,QAAQC,IAAAA,sBAAU,EAACH;IACzB,MAAMI,SAASF,UAAU,MAAM,UAAU;IACzC,MAAMG,OAAOL,MAAMM,KAAK,CAAC;IACzB,IAAIC,UAAUP,MAAMM,KAAK,CAAC;IAC1B,MAAME,UAAUR,MAAMS,aAAa,CAACR;IACpC,IAAIS,QAAQF,QAAQG,IAAI,CAAC;IACzBD,SAASF,QAAQG,IAAI,CACnBX,MAAMY,IAAI,CAACd,KAAKe,GAAG,EAAE;QAACC,QAAQJ;QAAOK,OAAO;OAAQP,QAAQQ,OAAO;IAErEN,SAASF,QAAQG,IAAI,CAAC;IAEtBJ;IAEA,IAEE,AADA,0CAA0C;IACzC,CAACT,KAAKmB,GAAG,IAAInB,KAAKoB,KAAK,IACxB,iDAAiD;IACjD,eAAeC,IAAI,CAACrB,KAAKmB,GAAG,GAC5B;QACAV,UAAUP,MAAMM,KAAK,CAAC;QACtBI,SAASF,QAAQG,IAAI,CAAC;QACtBD,SAASF,QAAQG,IAAI,CACnBX,MAAMY,IAAI,CAACd,KAAKmB,GAAG,EAAE;YAACH,QAAQJ;YAAOK,OAAO;WAAQP,QAAQQ,OAAO;QAErEN,SAASF,QAAQG,IAAI,CAAC;IACxB,OAAO;QACL,kCAAkC;QAClCJ,UAAUP,MAAMM,KAAK,CAAC;QACtBI,SAASF,QAAQG,IAAI,CACnBX,MAAMY,IAAI,CAACd,KAAKmB,GAAG,EAAE;YACnBH,QAAQJ;YACRK,OAAOjB,KAAKoB,KAAK,GAAG,MAAM;WACvBV,QAAQQ,OAAO;IAGxB;IAEAT;IAEA,IAAIT,KAAKoB,KAAK,EAAE;QACdX,UAAUP,MAAMM,KAAK,CAAC,CAAC,KAAK,EAAEF,OAAO,CAAC;QACtCM,SAASF,QAAQG,IAAI,CAAC,MAAMT;QAC5BQ,SAASF,QAAQG,IAAI,CACnBX,MAAMY,IAAI,CAACd,KAAKoB,KAAK,EAAE;YACrBJ,QAAQJ;YACRK,OAAOb;WACJM,QAAQQ,OAAO;QAGtBN,SAASF,QAAQG,IAAI,CAACT;QACtBK;IACF;IAEAG,SAASF,QAAQG,IAAI,CAAC;IACtBN;IAEA,OAAOK;AACT;AAEA;;CAEC,GACD,SAASb;IACP,OAAO;AACT"}