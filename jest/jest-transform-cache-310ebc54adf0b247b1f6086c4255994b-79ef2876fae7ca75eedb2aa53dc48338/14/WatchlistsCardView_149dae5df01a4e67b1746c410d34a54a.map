{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/watchlists/src/lib/WatchlistsCardView/WatchlistsCardView.tsx"],"sourcesContent":["import { Dispatch, SetStateAction, useCallback, useEffect, useMemo, useRef, useState } from \"react\"\nimport { generatePath, useNavigate } from \"react-router-dom\"\nimport { useUser } from \"@clerk/clerk-react\"\nimport { Watchlist } from \"@rp/common/api-types\"\nimport { WATCHLIST_FEATURE_NAME } from \"@rp/common/settings\"\nimport { useClerkOrganizationMemberships, useIsWatchlistLimitMet } from \"@rp/react/common/hooks\"\nimport { useAccount } from \"@rp/react/common/providers\"\nimport { useAllWatchlists } from \"@rp/react/tanstack-api/watchlist\"\nimport { CardGradientBackground } from \"@rp/react/web/common/base-components\"\nimport { MaxWidthContainer } from \"@rp/react/web/common/composite-components\"\nimport { HtmlPageHead } from \"@rp/react/web/common/header-components\"\nimport { useModal } from \"@rp/react/web/common/providers\"\nimport { Box } from \"@rp/react/web/mui/core\"\nimport { WATCHLIST_ID_ROUTE, WATCHLIST_NEW } from \"@rp/react/web/router\"\nimport { useWatchlistsFilterTerm } from \"../hooks/useWatchlistsFilterTerm\"\nimport { useWatchlistsTabNavigation } from \"../hooks/useWatchlistsTabNavigation\"\nimport { CommunityWatchlists } from \"./CommunityWatchlists\"\nimport { CompanyWatchlists } from \"./CompanyWatchlists\"\nimport { FavoriteWatchlists } from \"./FavoriteWatchlists\"\nimport { FindWatchlists } from \"./FindWatchlists\"\nimport { MyWatchlists } from \"./MyWatchlists\"\nimport { ThematicWatchlists } from \"./ThematicWatchlists\"\nimport { WatchlistsCardViewTabs } from \"./WatchlistCardViewTabs\"\nimport { WatchlistsCardHeader } from \"./WatchlistsCardHeader\"\nimport { WatchlistsCardViewToggles } from \"./WatchlistsCardViewToggles\"\n\ntype Props = {\n  modeView: \"card\" | \"list\"\n  setModeView: Dispatch<SetStateAction<\"card\" | \"list\">>\n}\n\nexport const WatchlistsCardView = ({ modeView, setModeView }: Props) => {\n  const { user } = useUser()\n  const navigate = useNavigate()\n  const hasSelectedTab = useRef(false)\n  const { canShare } = useAccount()\n  const [ref, setRef] = useState<HTMLDivElement | null>(null)\n  const { filterTerm, setFilterTerm } = useWatchlistsFilterTerm()\n  const { tabValue, handleChange } = useWatchlistsTabNavigation(null)\n  const { data, isLoading } = useAllWatchlists()\n  const { data: members, isLoading: isLoadingMembers } = useClerkOrganizationMemberships()\n\n  useEffect(() => {\n    if (!hasSelectedTab.current && data && tabValue === null) {\n      hasSelectedTab.current = true\n      handleChange(data?.some(wl => wl.isFavorite) ? \"favorites\" : \"my-watchlists\")\n    }\n  }, [data, handleChange, tabValue])\n  const organization = user?.organizationMemberships[0]?.organization\n  const organizationName = organization?.name ?? \"Company's Watchlists\"\n\n  const dataWithMembers = useMemo(() => {\n    return data?.map(w => {\n      const member = members?.find(m => m.publicUserData.userId === w.ownerUserId)\n      return {\n        ...w,\n        owner: member,\n      }\n    })\n  }, [data, members])\n  const mine = useMemo(\n    () => dataWithMembers?.filter(w => w.ownerUserId === user?.id),\n    [dataWithMembers, user],\n  )\n  const favorites = useMemo(() => dataWithMembers?.filter(w => w.isFavorite), [dataWithMembers])\n  const companyShared = useMemo(\n    () =>\n      dataWithMembers?.filter(\n        w =>\n          w.ownerUserId !== user?.id &&\n          w.shared.company.permission !== \"undefined\" &&\n          w.shared.company.organizationId === organization?.id,\n      ),\n    [dataWithMembers, organization?.id, user?.id],\n  )\n  const community = useMemo(\n    () =>\n      dataWithMembers?.filter(\n        w => w.global?.status === \"published\" && w.global.type === \"community\",\n      ),\n    [dataWithMembers],\n  )\n  const thematic = useMemo(\n    () =>\n      dataWithMembers?.filter(\n        w => w.global?.status === \"published\" && w.global.type === \"thematic\",\n      ),\n    [dataWithMembers],\n  )\n\n  const onCardClick = useCallback(\n    (watchlist: Watchlist) => {\n      navigate(generatePath(WATCHLIST_ID_ROUTE, { id: watchlist?.id ?? \"\" }))\n    },\n    [navigate],\n  )\n\n  const { quota } = useAccount()\n  const {\n    planComparisonModal: { handleOpen: planComparisonHandleOpen },\n  } = useModal()\n  const hasMetWatchlistLimit = useIsWatchlistLimitMet(quota)\n\n  return (\n    <Box sx={{ display: \"flex\", flex: 1, width: \"100%\", flexDirection: \"column\", height: \"100%\" }}>\n      <HtmlPageHead title=\"Watchlists\" />\n      <WatchlistsCardHeader filterTerm={filterTerm} setFilterTerm={setFilterTerm} />\n      <CardGradientBackground />\n      <MaxWidthContainer\n        ref={setRef}\n        sx={{\n          alignItems: \"center\",\n          flexDirection: \"column\",\n          display: \"flex\",\n          position: \"relative\",\n          zIndex: 1,\n        }}\n      >\n        <WatchlistsCardViewToggles modeView={modeView} setModeView={setModeView} />\n        {!filterTerm && (\n          <Box sx={{ my: \"50px\" }}>\n            <WatchlistsCardViewTabs\n              organizationName={organizationName}\n              tabValue={tabValue}\n              handleChange={handleChange}\n              canShare={canShare}\n            />\n          </Box>\n        )}\n\n        {filterTerm && (\n          <FindWatchlists\n            modeView={modeView}\n            data={dataWithMembers}\n            isLoading={isLoading || isLoadingMembers}\n            onCardClick={onCardClick}\n            containerEl={ref}\n            filterTerm={filterTerm}\n          />\n        )}\n        {(tabValue === \"my-watchlists\" || tabValue === null) && !filterTerm && (\n          <MyWatchlists\n            modeView={modeView}\n            onNewWatchlistClick={() => {\n              hasMetWatchlistLimit\n                ? planComparisonHandleOpen(WATCHLIST_FEATURE_NAME)\n                : navigate(WATCHLIST_NEW)\n            }}\n            isLoading={tabValue === null}\n            data={mine}\n            onCardClick={onCardClick}\n            containerEl={ref}\n            initialLines={3}\n          />\n        )}\n        {tabValue === \"favorites\" && !filterTerm && (\n          <FavoriteWatchlists\n            modeView={modeView}\n            data={favorites}\n            onCardClick={onCardClick}\n            containerEl={ref}\n            initialLines={3}\n          />\n        )}\n        {tabValue === \"public-watchlists\" && !filterTerm && (\n          <CompanyWatchlists\n            modeView={modeView}\n            data={companyShared}\n            onCardClick={onCardClick}\n            containerEl={ref}\n            organizationName={organizationName}\n          />\n        )}\n        {tabValue === \"community-watchlists\" && !filterTerm && (\n          <CommunityWatchlists\n            modeView={modeView}\n            data={community}\n            onCardClick={onCardClick}\n            containerEl={ref}\n          />\n        )}\n        {tabValue === \"thematic-watchlists\" && !filterTerm && (\n          <ThematicWatchlists\n            modeView={modeView}\n            data={thematic}\n            onCardClick={onCardClick}\n            containerEl={ref}\n          />\n        )}\n      </MaxWidthContainer>\n    </Box>\n  )\n}\n"],"names":["WatchlistsCardView","modeView","setModeView","user","useUser","navigate","useNavigate","hasSelectedTab","useRef","canShare","useAccount","ref","setRef","useState","filterTerm","setFilterTerm","useWatchlistsFilterTerm","tabValue","handleChange","useWatchlistsTabNavigation","data","isLoading","useAllWatchlists","members","isLoadingMembers","useClerkOrganizationMemberships","useEffect","current","some","wl","isFavorite","organization","organizationMemberships","organizationName","name","dataWithMembers","useMemo","map","w","member","find","m","publicUserData","userId","ownerUserId","owner","mine","filter","id","favorites","companyShared","shared","company","permission","organizationId","community","global","status","type","thematic","onCardClick","useCallback","watchlist","generatePath","WATCHLIST_ID_ROUTE","quota","planComparisonModal","handleOpen","planComparisonHandleOpen","useModal","hasMetWatchlistLimit","useIsWatchlistLimitMet","Box","sx","display","flex","width","flexDirection","height","HtmlPageHead","title","WatchlistsCardHeader","CardGradientBackground","MaxWidthContainer","alignItems","position","zIndex","WatchlistsCardViewToggles","my","WatchlistsCardViewTabs","FindWatchlists","containerEl","MyWatchlists","onNewWatchlistClick","WATCHLIST_FEATURE_NAME","WATCHLIST_NEW","initialLines","FavoriteWatchlists","CompanyWatchlists","CommunityWatchlists","ThematicWatchlists"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BA+BaA;;;eAAAA;;;;uBA/B+E;gCAClD;4BAClB;0BAEe;uBACiC;2BAC7C;2BACM;gCACM;qCACL;kCACL;4BACJ;sBACL;wBAC8B;yCACV;4CACG;qCACP;mCACF;oCACC;gCACJ;8BACF;oCACM;uCACI;sCACF;2CACK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOnC,MAAMA,qBAAqB,CAAC,EAAEC,QAAQ,EAAEC,WAAW,EAAS;QAiB5CC;IAhBrB,MAAM,EAAEA,IAAI,EAAE,GAAGC,IAAAA,mBAAO;IACxB,MAAMC,WAAWC,IAAAA,2BAAW;IAC5B,MAAMC,iBAAiBC,IAAAA,aAAM,EAAC;IAC9B,MAAM,EAAEC,QAAQ,EAAE,GAAGC,IAAAA,qBAAU;IAC/B,MAAM,CAACC,KAAKC,OAAO,GAAGC,IAAAA,eAAQ,EAAwB;IACtD,MAAM,EAAEC,UAAU,EAAEC,aAAa,EAAE,GAAGC,IAAAA,gDAAuB;IAC7D,MAAM,EAAEC,QAAQ,EAAEC,YAAY,EAAE,GAAGC,IAAAA,sDAA0B,EAAC;IAC9D,MAAM,EAAEC,IAAI,EAAEC,SAAS,EAAE,GAAGC,IAAAA,2BAAgB;IAC5C,MAAM,EAAEF,MAAMG,OAAO,EAAEF,WAAWG,gBAAgB,EAAE,GAAGC,IAAAA,sCAA+B;IAEtFC,IAAAA,gBAAS,EAAC;QACR,IAAI,CAACnB,eAAeoB,OAAO,IAAIP,QAAQH,aAAa,MAAM;YACxDV,eAAeoB,OAAO,GAAG;YACzBT,aAAaE,CAAAA,iBAAAA,2BAAAA,KAAMQ,IAAI,CAACC,CAAAA,KAAMA,GAAGC,UAAU,KAAI,cAAc;QAC/D;IACF,GAAG;QAACV;QAAMF;QAAcD;KAAS;IACjC,MAAMc,eAAe5B,iBAAAA,4BAAAA,iCAAAA,KAAM6B,uBAAuB,CAAC,EAAE,cAAhC7B,qDAAAA,+BAAkC4B,YAAY;QAC1CA;IAAzB,MAAME,mBAAmBF,CAAAA,qBAAAA,yBAAAA,mCAAAA,aAAcG,IAAI,cAAlBH,gCAAAA,qBAAsB;IAE/C,MAAMI,kBAAkBC,IAAAA,cAAO,EAAC;QAC9B,OAAOhB,iBAAAA,2BAAAA,KAAMiB,GAAG,CAACC,CAAAA;YACf,MAAMC,SAAShB,oBAAAA,8BAAAA,QAASiB,IAAI,CAACC,CAAAA,IAAKA,EAAEC,cAAc,CAACC,MAAM,KAAKL,EAAEM,WAAW;YAC3E,OAAO,wCACFN;gBACHO,OAAON;;QAEX;IACF,GAAG;QAACnB;QAAMG;KAAQ;IAClB,MAAMuB,OAAOV,IAAAA,cAAO,EAClB,IAAMD,4BAAAA,sCAAAA,gBAAiBY,MAAM,CAACT,CAAAA,IAAKA,EAAEM,WAAW,MAAKzC,iBAAAA,2BAAAA,KAAM6C,EAAE,IAC7D;QAACb;QAAiBhC;KAAK;IAEzB,MAAM8C,YAAYb,IAAAA,cAAO,EAAC,IAAMD,4BAAAA,sCAAAA,gBAAiBY,MAAM,CAACT,CAAAA,IAAKA,EAAER,UAAU,GAAG;QAACK;KAAgB;IAC7F,MAAMe,gBAAgBd,IAAAA,cAAO,EAC3B,IACED,4BAAAA,sCAAAA,gBAAiBY,MAAM,CACrBT,CAAAA,IACEA,EAAEM,WAAW,MAAKzC,iBAAAA,2BAAAA,KAAM6C,EAAE,KAC1BV,EAAEa,MAAM,CAACC,OAAO,CAACC,UAAU,KAAK,eAChCf,EAAEa,MAAM,CAACC,OAAO,CAACE,cAAc,MAAKvB,yBAAAA,mCAAAA,aAAciB,EAAE,IAE1D;QAACb;QAAiBJ,yBAAAA,mCAAAA,aAAciB,EAAE;QAAE7C,iBAAAA,2BAAAA,KAAM6C,EAAE;KAAC;IAE/C,MAAMO,YAAYnB,IAAAA,cAAO,EACvB,IACED,4BAAAA,sCAAAA,gBAAiBY,MAAM,CACrBT,CAAAA;gBAAKA;mBAAAA,EAAAA,YAAAA,EAAEkB,MAAM,cAARlB,gCAAAA,UAAUmB,MAAM,MAAK,eAAenB,EAAEkB,MAAM,CAACE,IAAI,KAAK;YAE/D;QAACvB;KAAgB;IAEnB,MAAMwB,WAAWvB,IAAAA,cAAO,EACtB,IACED,4BAAAA,sCAAAA,gBAAiBY,MAAM,CACrBT,CAAAA;gBAAKA;mBAAAA,EAAAA,YAAAA,EAAEkB,MAAM,cAARlB,gCAAAA,UAAUmB,MAAM,MAAK,eAAenB,EAAEkB,MAAM,CAACE,IAAI,KAAK;YAE/D;QAACvB;KAAgB;IAGnB,MAAMyB,cAAcC,IAAAA,kBAAW,EAC7B,CAACC;YACiDA;QAAhDzD,SAAS0D,IAAAA,4BAAY,EAACC,0BAAkB,EAAE;YAAEhB,IAAIc,CAAAA,gBAAAA,sBAAAA,gCAAAA,UAAWd,EAAE,cAAbc,2BAAAA,gBAAiB;QAAG;IACtE,GACA;QAACzD;KAAS;IAGZ,MAAM,EAAE4D,KAAK,EAAE,GAAGvD,IAAAA,qBAAU;IAC5B,MAAM,EACJwD,qBAAqB,EAAEC,YAAYC,wBAAwB,EAAE,EAC9D,GAAGC,IAAAA,oBAAQ;IACZ,MAAMC,uBAAuBC,IAAAA,6BAAsB,EAACN;IAEpD,qBACE,sBAACO,SAAG;QAACC,IAAI;YAAEC,SAAS;YAAQC,MAAM;YAAGC,OAAO;YAAQC,eAAe;YAAUC,QAAQ;QAAO;;0BAC1F,qBAACC,8BAAY;gBAACC,OAAM;;0BACpB,qBAACC,0CAAoB;gBAACnE,YAAYA;gBAAYC,eAAeA;;0BAC7D,qBAACmE,sCAAsB;0BACvB,sBAACC,sCAAiB;gBAChBxE,KAAKC;gBACL6D,IAAI;oBACFW,YAAY;oBACZP,eAAe;oBACfH,SAAS;oBACTW,UAAU;oBACVC,QAAQ;gBACV;;kCAEA,qBAACC,oDAAyB;wBAACtF,UAAUA;wBAAUC,aAAaA;;oBAC3D,CAACY,4BACA,qBAAC0D,SAAG;wBAACC,IAAI;4BAAEe,IAAI;wBAAO;kCACpB,cAAA,qBAACC,6CAAsB;4BACrBxD,kBAAkBA;4BAClBhB,UAAUA;4BACVC,cAAcA;4BACdT,UAAUA;;;oBAKfK,4BACC,qBAAC4E,8BAAc;wBACbzF,UAAUA;wBACVmB,MAAMe;wBACNd,WAAWA,aAAaG;wBACxBoC,aAAaA;wBACb+B,aAAahF;wBACbG,YAAYA;;oBAGdG,CAAAA,aAAa,mBAAmBA,aAAa,IAAG,KAAM,CAACH,4BACvD,qBAAC8E,0BAAY;wBACX3F,UAAUA;wBACV4F,qBAAqB;4BACnBvB,uBACIF,yBAAyB0B,gCAAsB,IAC/CzF,SAAS0F,qBAAa;wBAC5B;wBACA1E,WAAWJ,aAAa;wBACxBG,MAAM0B;wBACNc,aAAaA;wBACb+B,aAAahF;wBACbqF,cAAc;;oBAGjB/E,aAAa,eAAe,CAACH,4BAC5B,qBAACmF,sCAAkB;wBACjBhG,UAAUA;wBACVmB,MAAM6B;wBACNW,aAAaA;wBACb+B,aAAahF;wBACbqF,cAAc;;oBAGjB/E,aAAa,uBAAuB,CAACH,4BACpC,qBAACoF,oCAAiB;wBAChBjG,UAAUA;wBACVmB,MAAM8B;wBACNU,aAAaA;wBACb+B,aAAahF;wBACbsB,kBAAkBA;;oBAGrBhB,aAAa,0BAA0B,CAACH,4BACvC,qBAACqF,wCAAmB;wBAClBlG,UAAUA;wBACVmB,MAAMmC;wBACNK,aAAaA;wBACb+B,aAAahF;;oBAGhBM,aAAa,yBAAyB,CAACH,4BACtC,qBAACsF,sCAAkB;wBACjBnG,UAAUA;wBACVmB,MAAMuC;wBACNC,aAAaA;wBACb+B,aAAahF;;;;;;AAMzB"}