989b678ee4e3b1bc625be5dcc5688a39
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    DocumentTextContainer: function() {
        return DocumentTextContainer;
    },
    DocumentViewerContainerBase: function() {
        return DocumentViewerContainerBase;
    },
    DocumentViewerControls: function() {
        return DocumentViewerControls;
    },
    DocumentViewerHeader: function() {
        return DocumentViewerHeader;
    },
    DocumentViewerSearchBar: function() {
        return DocumentViewerSearchBar;
    },
    DocumentViewerSearchBarControls: function() {
        return DocumentViewerSearchBarControls;
    },
    DocumentViewerSubheader: function() {
        return DocumentViewerSubheader;
    }
});
const _theme = require("@rp/react/theme");
const _core = require("@rp/react/web/mui/core");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const DocumentTextContainer = (0, _theme.styled)("div")(({ theme })=>{
    const contentBlockDefaults = {
        fontWeight: 400,
        fontSize: theme.typography.body1.fontSize,
        lineHeight: "24px",
        margin: 0,
        marginTop: theme.spacing(1)
    };
    return {
        overflow: "hidden",
        height: "100%",
        width: "100%",
        "&>div": _object_spread({
            maxHeight: "100%",
            width: "100%",
            display: "flex",
            flexDirection: "column",
            color: theme.palette.grey[200],
            overflowY: "auto",
            overflowX: "hidden"
        }, theme.scrollbarStyles),
        // Content blocks
        // HEADING
        "& h3": _object_spread_props(_object_spread({}, contentBlockDefaults), {
            color: "#A4D9FF"
        }),
        // Add spacing on top of HEADINGS
        "& * + h3": {
            marginTop: theme.spacing(4)
        },
        // PARAGRAPH
        "& p": _object_spread({}, contentBlockDefaults),
        // But remove margin from paragraphs inside list items and tables
        "& li>p, & td>p": {
            marginTop: 0
        },
        // TABLE
        "& table": {
            borderCollapse: "collapse",
            marginTop: theme.spacing(2)
        },
        "& td": {
            color: "white",
            background: theme.palette.grey[700],
            boxShadow: "inset 0px -1px 0px #515151",
            padding: theme.spacing(2)
        },
        // FOOTER
        "& h5": _object_spread_props(_object_spread({}, contentBlockDefaults), {
            fontSize: theme.typography.caption.fontSize
        }),
        // LISTS
        "& ul, & ol": {
            paddingInlineStart: theme.spacing(3)
        }
    };
});
const DocumentViewerContainerBase = (0, _theme.styled)(_core.Paper)(({ theme })=>({
        backgroundColor: theme.palette.grey[700],
        border: "1px solid #7F7F7F",
        borderRadius: 4,
        padding: 16,
        paddingBottom: 0,
        width: "100%",
        height: "100%",
        display: "flex",
        flexDirection: "column"
    }));
const DocumentViewerHeader = (0, _theme.styled)("div", {
    shouldForwardProp: (prop)=>prop !== "headlineBackgroundColor"
})(({ theme, headlineBackgroundColor })=>({
        position: "relative",
        display: "flex",
        alignItems: "flex-start",
        marginTop: theme.spacing(2),
        marginBottom: theme.spacing(2),
        flexShrink: 0,
        flexDirection: "column",
        // HEADLINE
        "& h4": {
            fontSize: theme.typography.h5.fontSize,
            lineHeight: "32px",
            fontWeight: 700,
            margin: 0,
            backgroundColor: headlineBackgroundColor,
            display: "inline"
        },
        // Close button
        "& button": {
            position: "absolute",
            top: 0,
            right: 0
        }
    }));
const DocumentViewerSubheader = (0, _theme.styled)("div")(({ theme })=>({
        display: "flex",
        width: "100%",
        justifyContent: "space-between",
        marginTop: 4,
        color: theme.palette.grey[300],
        alignItems: "center"
    }));
const DocumentViewerControls = (0, _theme.styled)("div")(({ theme })=>({
        width: "100%",
        display: "flex",
        alignItems: "end",
        justifyContent: "center",
        marginTop: theme.spacing(1.5)
    }));
const DocumentViewerSearchBar = (0, _theme.styled)(_core.TextField)(({ theme })=>({
        marginBottom: theme.spacing(1.5),
        "& input": {
            fontSize: theme.typography.body2.fontSize,
            padding: theme.spacing(1.25)
        },
        "& svg": {
            padding: 0,
            color: theme.palette.grey[300],
            fontSize: 18
        }
    }));
const DocumentViewerSearchBarControls = (0, _theme.styled)("div")(({ theme })=>({
        display: "flex",
        color: theme.palette.grey[300],
        paddingLeft: 10,
        alignItems: "center",
        "& > div": {
            borderLeft: `1px solid ${theme.palette.grey[400]}`,
            marginLeft: 10,
            paddingLeft: theme.spacing(0.75),
            display: "flex"
        },
        "& button": {
            padding: theme.spacing(0.5),
            "&:hover": {
                backgroundColor: "transparent",
                color: theme.palette.primary.main
            }
        }
    }));

//# sourceMappingURL=data:application/json;base64,