{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/watchlists/src/lib/WatchlistDataTabs/endpoints/companyPriceTarget/percentageDifference.tsx"],"sourcesContent":["import { WatchlistDataTablePercentageCell } from \"../../WatchlistDataTableCells/WatchlistDataTablePercentageCell\"\nimport { genericColumn } from \"../../genericColumn\"\n\nfunction percentageDifference(tableName: string) {\n  const title = \"% Difference\"\n  return genericColumn({\n    endpoint: \"companyPriceTarget\",\n    columnKeys: [\"percentageDifference\"],\n    size: 110,\n    title,\n    enableSorting: true,\n    enableHiding: true,\n    tooltip: \"Percentage difference between Average Price Target and Latest Price\",\n    extraFinanceData: entityIds => ({ companyQuote: { entityIds } }),\n    cell: info => {\n      const targetConsensus =\n        info.row.original.financialData.companyPriceTarget?.data?.targetConsensus\n      const currentPrice = info.row.original.financialData.companyQuote?.data?.price\n\n      let percentageDiff: number | undefined\n      if (targetConsensus && currentPrice && currentPrice !== 0) {\n        percentageDiff = ((targetConsensus - currentPrice) / currentPrice) * 100\n      }\n\n      return (\n        <WatchlistDataTablePercentageCell\n          queryResult={info.row.original.financialData.companyPriceTarget}\n          tooltip={\"Explain the percentage difference to target\"}\n          onClick={() => {\n            info.row.original.onChatWithCell?.({\n              prompt: `Explain how the current market price of ${info.row.original.entityInfo.name} compares to analyst price targets and what factors might contribute to this difference.`,\n              value: percentageDiff,\n              entityInfo: info.row.original.entityInfo,\n              columnName: `${tableName}: ${title}`,\n            })\n          }}\n          value={percentageDiff}\n        />\n      )\n    },\n  })\n}\n\nexport { percentageDifference }\n"],"names":["percentageDifference","tableName","title","genericColumn","endpoint","columnKeys","size","enableSorting","enableHiding","tooltip","extraFinanceData","entityIds","companyQuote","cell","info","targetConsensus","row","original","financialData","companyPriceTarget","data","currentPrice","price","percentageDiff","WatchlistDataTablePercentageCell","queryResult","onClick","onChatWithCell","prompt","entityInfo","name","value","columnName"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BA2CSA;;;eAAAA;;;;kDA3CwC;+BACnB;AAE9B,SAASA,qBAAqBC,SAAiB;IAC7C,MAAMC,QAAQ;IACd,OAAOC,IAAAA,4BAAa,EAAC;QACnBC,UAAU;QACVC,YAAY;YAAC;SAAuB;QACpCC,MAAM;QACNJ;QACAK,eAAe;QACfC,cAAc;QACdC,SAAS;QACTC,kBAAkBC,CAAAA,YAAc,CAAA;gBAAEC,cAAc;oBAAED;gBAAU;YAAE,CAAA;QAC9DE,MAAMC,CAAAA;gBAEFA,0DAAAA,qDACmBA,oDAAAA;YAFrB,MAAMC,mBACJD,sDAAAA,KAAKE,GAAG,CAACC,QAAQ,CAACC,aAAa,CAACC,kBAAkB,cAAlDL,2EAAAA,2DAAAA,oDAAoDM,IAAI,cAAxDN,+EAAAA,yDAA0DC,eAAe;YAC3E,MAAMM,gBAAeP,gDAAAA,KAAKE,GAAG,CAACC,QAAQ,CAACC,aAAa,CAACN,YAAY,cAA5CE,qEAAAA,qDAAAA,8CAA8CM,IAAI,cAAlDN,yEAAAA,mDAAoDQ,KAAK;YAE9E,IAAIC;YACJ,IAAIR,mBAAmBM,gBAAgBA,iBAAiB,GAAG;gBACzDE,iBAAiB,AAAER,CAAAA,kBAAkBM,YAAW,IAAKA,eAAgB;YACvE;YAEA,qBACE,qBAACG,kEAAgC;gBAC/BC,aAAaX,KAAKE,GAAG,CAACC,QAAQ,CAACC,aAAa,CAACC,kBAAkB;gBAC/DV,SAAS;gBACTiB,SAAS;wBACPZ,mCAAAA;qBAAAA,oCAAAA,CAAAA,qBAAAA,KAAKE,GAAG,CAACC,QAAQ,EAACU,cAAc,cAAhCb,wDAAAA,uCAAAA,oBAAmC;wBACjCc,QAAQ,CAAC,wCAAwC,EAAEd,KAAKE,GAAG,CAACC,QAAQ,CAACY,UAAU,CAACC,IAAI,CAAC,wFAAwF,CAAC;wBAC9KC,OAAOR;wBACPM,YAAYf,KAAKE,GAAG,CAACC,QAAQ,CAACY,UAAU;wBACxCG,YAAY,CAAC,EAAE/B,UAAU,EAAE,EAAEC,MAAM,CAAC;oBACtC;gBACF;gBACA6B,OAAOR;;QAGb;IACF;AACF"}