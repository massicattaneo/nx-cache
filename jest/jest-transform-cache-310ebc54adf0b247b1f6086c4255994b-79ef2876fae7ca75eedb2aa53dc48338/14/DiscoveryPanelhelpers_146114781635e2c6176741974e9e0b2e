ef44e9db77d61924b0e86089ec40dda3
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    getGroupFamilies: function() {
        return getGroupFamilies;
    },
    isGroup: function() {
        return isGroup;
    }
});
const _utils = require("@rp/common/utils");
const isGroup = (group)=>{
    return [
        "group1",
        "group2",
        "group3",
        "group4",
        "group5"
    ].includes(group || "");
};
const getGroupFamilies = (filters, groupBy)=>{
    const families = filters.map((filter)=>isGroup(groupBy) ? filter[groupBy] : "").filter((str, index, array)=>array.indexOf(str) === index).filter((str)=>str);
    return families.map((family)=>{
        const familyFilters = filters.filter((filter)=>isGroup(groupBy) ? filter[groupBy] === family : false);
        const [first] = familyFilters;
        return {
            family,
            label: first.queryType === "rp_topic" ? (0, _utils.formatTopicGroupToLabel)(family) : family !== null && family !== void 0 ? family : "",
            volume: familyFilters.reduce((total, filter)=>total + filter.volume, 0),
            filters: familyFilters
        };
    }).sort((first, second)=>second.volume - first.volume);
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9kaXNjb3Zlcnktc2lkZWJhci9zcmMvaG9va3MvRGlzY292ZXJ5UGFuZWwuaGVscGVycy50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ3FzSXRlbSB9IGZyb20gXCJAcnAvY29tbW9uL2FwaS10eXBlc1wiXG5pbXBvcnQgeyBmb3JtYXRUb3BpY0dyb3VwVG9MYWJlbCB9IGZyb20gXCJAcnAvY29tbW9uL3V0aWxzXCJcblxudHlwZSBHcm91cCA9IFwiZ3JvdXAxXCIgfCBcImdyb3VwMlwiIHwgXCJncm91cDNcIiB8IFwiZ3JvdXA0XCIgfCBcImdyb3VwNVwiXG5cbmNvbnN0IGlzR3JvdXAgPSAoZ3JvdXA6IHN0cmluZyB8IG51bGwpOiBncm91cCBpcyBHcm91cCA9PiB7XG4gIHJldHVybiBbXCJncm91cDFcIiwgXCJncm91cDJcIiwgXCJncm91cDNcIiwgXCJncm91cDRcIiwgXCJncm91cDVcIl0uaW5jbHVkZXMoZ3JvdXAgfHwgXCJcIilcbn1cblxuY29uc3QgZ2V0R3JvdXBGYW1pbGllcyA9IChmaWx0ZXJzOiBBcnJheTxDcXNJdGVtPiwgZ3JvdXBCeTogc3RyaW5nKSA9PiB7XG4gIGNvbnN0IGZhbWlsaWVzID0gZmlsdGVyc1xuICAgIC5tYXAoZmlsdGVyID0+IChpc0dyb3VwKGdyb3VwQnkpID8gZmlsdGVyW2dyb3VwQnldIDogXCJcIikpXG4gICAgLmZpbHRlcigoc3RyLCBpbmRleCwgYXJyYXkpID0+IGFycmF5LmluZGV4T2Yoc3RyKSA9PT0gaW5kZXgpXG4gICAgLmZpbHRlcihzdHIgPT4gc3RyKVxuXG4gIHJldHVybiBmYW1pbGllc1xuICAgIC5tYXAoZmFtaWx5ID0+IHtcbiAgICAgIGNvbnN0IGZhbWlseUZpbHRlcnMgPSBmaWx0ZXJzLmZpbHRlcihmaWx0ZXIgPT5cbiAgICAgICAgaXNHcm91cChncm91cEJ5KSA/IGZpbHRlcltncm91cEJ5XSA9PT0gZmFtaWx5IDogZmFsc2UsXG4gICAgICApXG4gICAgICBjb25zdCBbZmlyc3RdID0gZmFtaWx5RmlsdGVyc1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgZmFtaWx5LFxuICAgICAgICBsYWJlbDogZmlyc3QucXVlcnlUeXBlID09PSBcInJwX3RvcGljXCIgPyBmb3JtYXRUb3BpY0dyb3VwVG9MYWJlbChmYW1pbHkpIDogZmFtaWx5ID8/IFwiXCIsXG4gICAgICAgIHZvbHVtZTogZmFtaWx5RmlsdGVycy5yZWR1Y2UoKHRvdGFsLCBmaWx0ZXIpID0+IHRvdGFsICsgZmlsdGVyLnZvbHVtZSwgMCksXG4gICAgICAgIGZpbHRlcnM6IGZhbWlseUZpbHRlcnMsXG4gICAgICB9XG4gICAgfSlcbiAgICAuc29ydCgoZmlyc3QsIHNlY29uZCkgPT4gc2Vjb25kLnZvbHVtZSAtIGZpcnN0LnZvbHVtZSlcbn1cblxuZXhwb3J0IHsgZ2V0R3JvdXBGYW1pbGllcywgaXNHcm91cCB9XG4iXSwibmFtZXMiOlsiZ2V0R3JvdXBGYW1pbGllcyIsImlzR3JvdXAiLCJncm91cCIsImluY2x1ZGVzIiwiZmlsdGVycyIsImdyb3VwQnkiLCJmYW1pbGllcyIsIm1hcCIsImZpbHRlciIsInN0ciIsImluZGV4IiwiYXJyYXkiLCJpbmRleE9mIiwiZmFtaWx5IiwiZmFtaWx5RmlsdGVycyIsImZpcnN0IiwibGFiZWwiLCJxdWVyeVR5cGUiLCJmb3JtYXRUb3BpY0dyb3VwVG9MYWJlbCIsInZvbHVtZSIsInJlZHVjZSIsInRvdGFsIiwic29ydCIsInNlY29uZCJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztJQStCU0EsZ0JBQWdCO2VBQWhCQTs7SUFBa0JDLE9BQU87ZUFBUEE7Ozt1QkE5QmE7QUFJeEMsTUFBTUEsVUFBVSxDQUFDQztJQUNmLE9BQU87UUFBQztRQUFVO1FBQVU7UUFBVTtRQUFVO0tBQVMsQ0FBQ0MsUUFBUSxDQUFDRCxTQUFTO0FBQzlFO0FBRUEsTUFBTUYsbUJBQW1CLENBQUNJLFNBQXlCQztJQUNqRCxNQUFNQyxXQUFXRixRQUNkRyxHQUFHLENBQUNDLENBQUFBLFNBQVdQLFFBQVFJLFdBQVdHLE1BQU0sQ0FBQ0gsUUFBUSxHQUFHLElBQ3BERyxNQUFNLENBQUMsQ0FBQ0MsS0FBS0MsT0FBT0MsUUFBVUEsTUFBTUMsT0FBTyxDQUFDSCxTQUFTQyxPQUNyREYsTUFBTSxDQUFDQyxDQUFBQSxNQUFPQTtJQUVqQixPQUFPSCxTQUNKQyxHQUFHLENBQUNNLENBQUFBO1FBQ0gsTUFBTUMsZ0JBQWdCVixRQUFRSSxNQUFNLENBQUNBLENBQUFBLFNBQ25DUCxRQUFRSSxXQUFXRyxNQUFNLENBQUNILFFBQVEsS0FBS1EsU0FBUztRQUVsRCxNQUFNLENBQUNFLE1BQU0sR0FBR0Q7UUFDaEIsT0FBTztZQUNMRDtZQUNBRyxPQUFPRCxNQUFNRSxTQUFTLEtBQUssYUFBYUMsSUFBQUEsOEJBQXVCLEVBQUNMLFVBQVVBLG1CQUFBQSxvQkFBQUEsU0FBVTtZQUNwRk0sUUFBUUwsY0FBY00sTUFBTSxDQUFDLENBQUNDLE9BQU9iLFNBQVdhLFFBQVFiLE9BQU9XLE1BQU0sRUFBRTtZQUN2RWYsU0FBU1U7UUFDWDtJQUNGLEdBQ0NRLElBQUksQ0FBQyxDQUFDUCxPQUFPUSxTQUFXQSxPQUFPSixNQUFNLEdBQUdKLE1BQU1JLE1BQU07QUFDekQifQ==