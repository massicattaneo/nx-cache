0c1aec208519d9147bf1bbdc46723e4f
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "percentageDifference", {
    enumerable: true,
    get: function() {
        return percentageDifference;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _WatchlistDataTablePercentageCell = require("../../WatchlistDataTableCells/WatchlistDataTablePercentageCell");
const _genericColumn = require("../../genericColumn");
function percentageDifference(tableName) {
    const title = "% Difference";
    return (0, _genericColumn.genericColumn)({
        endpoint: "companyPriceTarget",
        columnKeys: [
            "percentageDifference"
        ],
        size: 110,
        title,
        enableSorting: true,
        enableHiding: true,
        tooltip: "Percentage difference between Average Price Target and Latest Price",
        extraFinanceData: (entityIds)=>({
                companyQuote: {
                    entityIds
                }
            }),
        cell: (info)=>{
            var _info_row_original_financialData_companyPriceTarget_data, _info_row_original_financialData_companyPriceTarget, _info_row_original_financialData_companyQuote_data, _info_row_original_financialData_companyQuote;
            const targetConsensus = (_info_row_original_financialData_companyPriceTarget = info.row.original.financialData.companyPriceTarget) === null || _info_row_original_financialData_companyPriceTarget === void 0 ? void 0 : (_info_row_original_financialData_companyPriceTarget_data = _info_row_original_financialData_companyPriceTarget.data) === null || _info_row_original_financialData_companyPriceTarget_data === void 0 ? void 0 : _info_row_original_financialData_companyPriceTarget_data.targetConsensus;
            const currentPrice = (_info_row_original_financialData_companyQuote = info.row.original.financialData.companyQuote) === null || _info_row_original_financialData_companyQuote === void 0 ? void 0 : (_info_row_original_financialData_companyQuote_data = _info_row_original_financialData_companyQuote.data) === null || _info_row_original_financialData_companyQuote_data === void 0 ? void 0 : _info_row_original_financialData_companyQuote_data.price;
            let percentageDiff;
            if (targetConsensus && currentPrice && currentPrice !== 0) {
                percentageDiff = (targetConsensus - currentPrice) / currentPrice * 100;
            }
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_WatchlistDataTablePercentageCell.WatchlistDataTablePercentageCell, {
                queryResult: info.row.original.financialData.companyPriceTarget,
                tooltip: "Explain the percentage difference to target",
                onClick: ()=>{
                    var _info_row_original_onChatWithCell, _info_row_original;
                    (_info_row_original_onChatWithCell = (_info_row_original = info.row.original).onChatWithCell) === null || _info_row_original_onChatWithCell === void 0 ? void 0 : _info_row_original_onChatWithCell.call(_info_row_original, {
                        prompt: `Explain how the current market price of ${info.row.original.entityInfo.name} compares to analyst price targets and what factors might contribute to this difference.`,
                        value: percentageDiff,
                        entityInfo: info.row.original.entityInfo,
                        columnName: `${tableName}: ${title}`
                    });
                },
                value: percentageDiff
            });
        }
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL3dhdGNobGlzdHMvc3JjL2xpYi9XYXRjaGxpc3REYXRhVGFicy9lbmRwb2ludHMvY29tcGFueVByaWNlVGFyZ2V0L3BlcmNlbnRhZ2VEaWZmZXJlbmNlLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBXYXRjaGxpc3REYXRhVGFibGVQZXJjZW50YWdlQ2VsbCB9IGZyb20gXCIuLi8uLi9XYXRjaGxpc3REYXRhVGFibGVDZWxscy9XYXRjaGxpc3REYXRhVGFibGVQZXJjZW50YWdlQ2VsbFwiXG5pbXBvcnQgeyBnZW5lcmljQ29sdW1uIH0gZnJvbSBcIi4uLy4uL2dlbmVyaWNDb2x1bW5cIlxuXG5mdW5jdGlvbiBwZXJjZW50YWdlRGlmZmVyZW5jZSh0YWJsZU5hbWU6IHN0cmluZykge1xuICBjb25zdCB0aXRsZSA9IFwiJSBEaWZmZXJlbmNlXCJcbiAgcmV0dXJuIGdlbmVyaWNDb2x1bW4oe1xuICAgIGVuZHBvaW50OiBcImNvbXBhbnlQcmljZVRhcmdldFwiLFxuICAgIGNvbHVtbktleXM6IFtcInBlcmNlbnRhZ2VEaWZmZXJlbmNlXCJdLFxuICAgIHNpemU6IDExMCxcbiAgICB0aXRsZSxcbiAgICBlbmFibGVTb3J0aW5nOiB0cnVlLFxuICAgIGVuYWJsZUhpZGluZzogdHJ1ZSxcbiAgICB0b29sdGlwOiBcIlBlcmNlbnRhZ2UgZGlmZmVyZW5jZSBiZXR3ZWVuIEF2ZXJhZ2UgUHJpY2UgVGFyZ2V0IGFuZCBMYXRlc3QgUHJpY2VcIixcbiAgICBleHRyYUZpbmFuY2VEYXRhOiBlbnRpdHlJZHMgPT4gKHsgY29tcGFueVF1b3RlOiB7IGVudGl0eUlkcyB9IH0pLFxuICAgIGNlbGw6IGluZm8gPT4ge1xuICAgICAgY29uc3QgdGFyZ2V0Q29uc2Vuc3VzID1cbiAgICAgICAgaW5mby5yb3cub3JpZ2luYWwuZmluYW5jaWFsRGF0YS5jb21wYW55UHJpY2VUYXJnZXQ/LmRhdGE/LnRhcmdldENvbnNlbnN1c1xuICAgICAgY29uc3QgY3VycmVudFByaWNlID0gaW5mby5yb3cub3JpZ2luYWwuZmluYW5jaWFsRGF0YS5jb21wYW55UXVvdGU/LmRhdGE/LnByaWNlXG5cbiAgICAgIGxldCBwZXJjZW50YWdlRGlmZjogbnVtYmVyIHwgdW5kZWZpbmVkXG4gICAgICBpZiAodGFyZ2V0Q29uc2Vuc3VzICYmIGN1cnJlbnRQcmljZSAmJiBjdXJyZW50UHJpY2UgIT09IDApIHtcbiAgICAgICAgcGVyY2VudGFnZURpZmYgPSAoKHRhcmdldENvbnNlbnN1cyAtIGN1cnJlbnRQcmljZSkgLyBjdXJyZW50UHJpY2UpICogMTAwXG4gICAgICB9XG5cbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxXYXRjaGxpc3REYXRhVGFibGVQZXJjZW50YWdlQ2VsbFxuICAgICAgICAgIHF1ZXJ5UmVzdWx0PXtpbmZvLnJvdy5vcmlnaW5hbC5maW5hbmNpYWxEYXRhLmNvbXBhbnlQcmljZVRhcmdldH1cbiAgICAgICAgICB0b29sdGlwPXtcIkV4cGxhaW4gdGhlIHBlcmNlbnRhZ2UgZGlmZmVyZW5jZSB0byB0YXJnZXRcIn1cbiAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICBpbmZvLnJvdy5vcmlnaW5hbC5vbkNoYXRXaXRoQ2VsbD8uKHtcbiAgICAgICAgICAgICAgcHJvbXB0OiBgRXhwbGFpbiBob3cgdGhlIGN1cnJlbnQgbWFya2V0IHByaWNlIG9mICR7aW5mby5yb3cub3JpZ2luYWwuZW50aXR5SW5mby5uYW1lfSBjb21wYXJlcyB0byBhbmFseXN0IHByaWNlIHRhcmdldHMgYW5kIHdoYXQgZmFjdG9ycyBtaWdodCBjb250cmlidXRlIHRvIHRoaXMgZGlmZmVyZW5jZS5gLFxuICAgICAgICAgICAgICB2YWx1ZTogcGVyY2VudGFnZURpZmYsXG4gICAgICAgICAgICAgIGVudGl0eUluZm86IGluZm8ucm93Lm9yaWdpbmFsLmVudGl0eUluZm8sXG4gICAgICAgICAgICAgIGNvbHVtbk5hbWU6IGAke3RhYmxlTmFtZX06ICR7dGl0bGV9YCxcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgfX1cbiAgICAgICAgICB2YWx1ZT17cGVyY2VudGFnZURpZmZ9XG4gICAgICAgIC8+XG4gICAgICApXG4gICAgfSxcbiAgfSlcbn1cblxuZXhwb3J0IHsgcGVyY2VudGFnZURpZmZlcmVuY2UgfVxuIl0sIm5hbWVzIjpbInBlcmNlbnRhZ2VEaWZmZXJlbmNlIiwidGFibGVOYW1lIiwidGl0bGUiLCJnZW5lcmljQ29sdW1uIiwiZW5kcG9pbnQiLCJjb2x1bW5LZXlzIiwic2l6ZSIsImVuYWJsZVNvcnRpbmciLCJlbmFibGVIaWRpbmciLCJ0b29sdGlwIiwiZXh0cmFGaW5hbmNlRGF0YSIsImVudGl0eUlkcyIsImNvbXBhbnlRdW90ZSIsImNlbGwiLCJpbmZvIiwidGFyZ2V0Q29uc2Vuc3VzIiwicm93Iiwib3JpZ2luYWwiLCJmaW5hbmNpYWxEYXRhIiwiY29tcGFueVByaWNlVGFyZ2V0IiwiZGF0YSIsImN1cnJlbnRQcmljZSIsInByaWNlIiwicGVyY2VudGFnZURpZmYiLCJXYXRjaGxpc3REYXRhVGFibGVQZXJjZW50YWdlQ2VsbCIsInF1ZXJ5UmVzdWx0Iiwib25DbGljayIsIm9uQ2hhdFdpdGhDZWxsIiwicHJvbXB0IiwiZW50aXR5SW5mbyIsIm5hbWUiLCJ2YWx1ZSIsImNvbHVtbk5hbWUiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQTJDU0E7OztlQUFBQTs7OztrREEzQ3dDOytCQUNuQjtBQUU5QixTQUFTQSxxQkFBcUJDLFNBQWlCO0lBQzdDLE1BQU1DLFFBQVE7SUFDZCxPQUFPQyxJQUFBQSw0QkFBYSxFQUFDO1FBQ25CQyxVQUFVO1FBQ1ZDLFlBQVk7WUFBQztTQUF1QjtRQUNwQ0MsTUFBTTtRQUNOSjtRQUNBSyxlQUFlO1FBQ2ZDLGNBQWM7UUFDZEMsU0FBUztRQUNUQyxrQkFBa0JDLENBQUFBLFlBQWMsQ0FBQTtnQkFBRUMsY0FBYztvQkFBRUQ7Z0JBQVU7WUFBRSxDQUFBO1FBQzlERSxNQUFNQyxDQUFBQTtnQkFFRkEsMERBQUFBLHFEQUNtQkEsb0RBQUFBO1lBRnJCLE1BQU1DLG1CQUNKRCxzREFBQUEsS0FBS0UsR0FBRyxDQUFDQyxRQUFRLENBQUNDLGFBQWEsQ0FBQ0Msa0JBQWtCLGNBQWxETCwyRUFBQUEsMkRBQUFBLG9EQUFvRE0sSUFBSSxjQUF4RE4sK0VBQUFBLHlEQUEwREMsZUFBZTtZQUMzRSxNQUFNTSxnQkFBZVAsZ0RBQUFBLEtBQUtFLEdBQUcsQ0FBQ0MsUUFBUSxDQUFDQyxhQUFhLENBQUNOLFlBQVksY0FBNUNFLHFFQUFBQSxxREFBQUEsOENBQThDTSxJQUFJLGNBQWxETix5RUFBQUEsbURBQW9EUSxLQUFLO1lBRTlFLElBQUlDO1lBQ0osSUFBSVIsbUJBQW1CTSxnQkFBZ0JBLGlCQUFpQixHQUFHO2dCQUN6REUsaUJBQWlCLEFBQUVSLENBQUFBLGtCQUFrQk0sWUFBVyxJQUFLQSxlQUFnQjtZQUN2RTtZQUVBLHFCQUNFLHFCQUFDRyxrRUFBZ0M7Z0JBQy9CQyxhQUFhWCxLQUFLRSxHQUFHLENBQUNDLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDQyxrQkFBa0I7Z0JBQy9EVixTQUFTO2dCQUNUaUIsU0FBUzt3QkFDUFosbUNBQUFBO3FCQUFBQSxvQ0FBQUEsQ0FBQUEscUJBQUFBLEtBQUtFLEdBQUcsQ0FBQ0MsUUFBUSxFQUFDVSxjQUFjLGNBQWhDYix3REFBQUEsdUNBQUFBLG9CQUFtQzt3QkFDakNjLFFBQVEsQ0FBQyx3Q0FBd0MsRUFBRWQsS0FBS0UsR0FBRyxDQUFDQyxRQUFRLENBQUNZLFVBQVUsQ0FBQ0MsSUFBSSxDQUFDLHdGQUF3RixDQUFDO3dCQUM5S0MsT0FBT1I7d0JBQ1BNLFlBQVlmLEtBQUtFLEdBQUcsQ0FBQ0MsUUFBUSxDQUFDWSxVQUFVO3dCQUN4Q0csWUFBWSxDQUFDLEVBQUUvQixVQUFVLEVBQUUsRUFBRUMsTUFBTSxDQUFDO29CQUN0QztnQkFDRjtnQkFDQTZCLE9BQU9SOztRQUdiO0lBQ0Y7QUFDRiJ9