a823e41088610b916fd281aa6d92984d
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "handleThinkingMessage", {
    enumerable: true,
    get: function() {
        return handleThinkingMessage;
    }
});
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function handleThinkingMessage(agentState, data) {
    var _data_thinkingId;
    const thinkingId = (_data_thinkingId = data.thinkingId) !== null && _data_thinkingId !== void 0 ? _data_thinkingId : "";
    const existingThinkingIndex = agentState.frames.findIndex((frame)=>frame.type === "thinking" && frame.thinkingId === thinkingId);
    if (existingThinkingIndex !== -1) {
        // Update existing thinking entry
        const updatedFrames = [
            ...agentState.frames
        ];
        const existing = updatedFrames[existingThinkingIndex];
        if (existing.type === "thinking") {
            var _data_text;
            updatedFrames[existingThinkingIndex] = _object_spread_props(_object_spread({}, existing), {
                thinkingStream: [
                    ...existing.thinkingStream || [],
                    (_data_text = data.text) !== null && _data_text !== void 0 ? _data_text : ""
                ]
            });
            var _data_requestId;
            return _object_spread_props(_object_spread({}, agentState), {
                frames: updatedFrames,
                isLoading: false,
                error: undefined,
                requestId: (_data_requestId = data.requestId) !== null && _data_requestId !== void 0 ? _data_requestId : agentState.requestId
            });
        }
    }
    var _data_text1, _data_requestId1;
    // Add new thinking entry
    return _object_spread_props(_object_spread({}, agentState), {
        frames: [
            ...agentState.frames,
            {
                type: "thinking",
                thinkingId: thinkingId,
                thinkingStream: [
                    (_data_text1 = data.text) !== null && _data_text1 !== void 0 ? _data_text1 : ""
                ]
            }
        ],
        isLoading: false,
        requestId: (_data_requestId1 = data.requestId) !== null && _data_requestId1 !== void 0 ? _data_requestId1 : agentState.requestId
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3QvY29tbW9uL2hvb2tzL3NyYy9saWIvdXNlQWdlbnQvaGFuZGxlcnMvaGFuZGxlVGhpbmtpbmdNZXNzYWdlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFnZW50TWVzc2FnZVN0YXRlLCBUaGlua2luZ01lc3NhZ2UgfSBmcm9tIFwiLi4vdXNlQWdlbnQudHlwZXNcIlxuXG5mdW5jdGlvbiBoYW5kbGVUaGlua2luZ01lc3NhZ2UoXG4gIGFnZW50U3RhdGU6IEFnZW50TWVzc2FnZVN0YXRlLFxuICBkYXRhOiBUaGlua2luZ01lc3NhZ2UsXG4pOiBBZ2VudE1lc3NhZ2VTdGF0ZSB7XG4gIGNvbnN0IHRoaW5raW5nSWQgPSBkYXRhLnRoaW5raW5nSWQgPz8gXCJcIlxuICBjb25zdCBleGlzdGluZ1RoaW5raW5nSW5kZXggPSBhZ2VudFN0YXRlLmZyYW1lcy5maW5kSW5kZXgoXG4gICAgZnJhbWUgPT4gZnJhbWUudHlwZSA9PT0gXCJ0aGlua2luZ1wiICYmIGZyYW1lLnRoaW5raW5nSWQgPT09IHRoaW5raW5nSWQsXG4gIClcbiAgaWYgKGV4aXN0aW5nVGhpbmtpbmdJbmRleCAhPT0gLTEpIHtcbiAgICAvLyBVcGRhdGUgZXhpc3RpbmcgdGhpbmtpbmcgZW50cnlcbiAgICBjb25zdCB1cGRhdGVkRnJhbWVzID0gWy4uLmFnZW50U3RhdGUuZnJhbWVzXVxuICAgIGNvbnN0IGV4aXN0aW5nID0gdXBkYXRlZEZyYW1lc1tleGlzdGluZ1RoaW5raW5nSW5kZXhdXG5cbiAgICBpZiAoZXhpc3RpbmcudHlwZSA9PT0gXCJ0aGlua2luZ1wiKSB7XG4gICAgICB1cGRhdGVkRnJhbWVzW2V4aXN0aW5nVGhpbmtpbmdJbmRleF0gPSB7XG4gICAgICAgIC4uLmV4aXN0aW5nLFxuICAgICAgICB0aGlua2luZ1N0cmVhbTogWy4uLihleGlzdGluZy50aGlua2luZ1N0cmVhbSB8fCBbXSksIGRhdGEudGV4dCA/PyBcIlwiXSxcbiAgICAgIH1cbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLmFnZW50U3RhdGUsXG4gICAgICAgIGZyYW1lczogdXBkYXRlZEZyYW1lcyxcbiAgICAgICAgaXNMb2FkaW5nOiBmYWxzZSxcbiAgICAgICAgZXJyb3I6IHVuZGVmaW5lZCxcbiAgICAgICAgcmVxdWVzdElkOiBkYXRhLnJlcXVlc3RJZCA/PyBhZ2VudFN0YXRlLnJlcXVlc3RJZCxcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgLy8gQWRkIG5ldyB0aGlua2luZyBlbnRyeVxuICByZXR1cm4ge1xuICAgIC4uLmFnZW50U3RhdGUsXG4gICAgZnJhbWVzOiBbXG4gICAgICAuLi5hZ2VudFN0YXRlLmZyYW1lcyxcbiAgICAgIHtcbiAgICAgICAgdHlwZTogXCJ0aGlua2luZ1wiLFxuICAgICAgICB0aGlua2luZ0lkOiB0aGlua2luZ0lkLFxuICAgICAgICB0aGlua2luZ1N0cmVhbTogW2RhdGEudGV4dCA/PyBcIlwiXSxcbiAgICAgIH0sXG4gICAgXSxcbiAgICBpc0xvYWRpbmc6IGZhbHNlLFxuICAgIHJlcXVlc3RJZDogZGF0YS5yZXF1ZXN0SWQgPz8gYWdlbnRTdGF0ZS5yZXF1ZXN0SWQsXG4gIH1cbn1cblxuZXhwb3J0IHsgaGFuZGxlVGhpbmtpbmdNZXNzYWdlIH1cbiJdLCJuYW1lcyI6WyJoYW5kbGVUaGlua2luZ01lc3NhZ2UiLCJhZ2VudFN0YXRlIiwiZGF0YSIsInRoaW5raW5nSWQiLCJleGlzdGluZ1RoaW5raW5nSW5kZXgiLCJmcmFtZXMiLCJmaW5kSW5kZXgiLCJmcmFtZSIsInR5cGUiLCJ1cGRhdGVkRnJhbWVzIiwiZXhpc3RpbmciLCJ0aGlua2luZ1N0cmVhbSIsInRleHQiLCJpc0xvYWRpbmciLCJlcnJvciIsInVuZGVmaW5lZCIsInJlcXVlc3RJZCJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBNkNTQTs7O2VBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBM0NULFNBQVNBLHNCQUNQQyxVQUE2QixFQUM3QkMsSUFBcUI7UUFFRkE7SUFBbkIsTUFBTUMsYUFBYUQsQ0FBQUEsbUJBQUFBLEtBQUtDLFVBQVUsY0FBZkQsOEJBQUFBLG1CQUFtQjtJQUN0QyxNQUFNRSx3QkFBd0JILFdBQVdJLE1BQU0sQ0FBQ0MsU0FBUyxDQUN2REMsQ0FBQUEsUUFBU0EsTUFBTUMsSUFBSSxLQUFLLGNBQWNELE1BQU1KLFVBQVUsS0FBS0E7SUFFN0QsSUFBSUMsMEJBQTBCLENBQUMsR0FBRztRQUNoQyxpQ0FBaUM7UUFDakMsTUFBTUssZ0JBQWdCO2VBQUlSLFdBQVdJLE1BQU07U0FBQztRQUM1QyxNQUFNSyxXQUFXRCxhQUFhLENBQUNMLHNCQUFzQjtRQUVyRCxJQUFJTSxTQUFTRixJQUFJLEtBQUssWUFBWTtnQkFHdUJOO1lBRnZETyxhQUFhLENBQUNMLHNCQUFzQixHQUFHLHdDQUNsQ007Z0JBQ0hDLGdCQUFnQjt1QkFBS0QsU0FBU0MsY0FBYyxJQUFJLEVBQUU7b0JBQUdULENBQUFBLGFBQUFBLEtBQUtVLElBQUksY0FBVFYsd0JBQUFBLGFBQWE7aUJBQUc7O2dCQU8xREE7WUFMYixPQUFPLHdDQUNGRDtnQkFDSEksUUFBUUk7Z0JBQ1JJLFdBQVc7Z0JBQ1hDLE9BQU9DO2dCQUNQQyxXQUFXZCxDQUFBQSxrQkFBQUEsS0FBS2MsU0FBUyxjQUFkZCw2QkFBQUEsa0JBQWtCRCxXQUFXZSxTQUFTOztRQUVyRDtJQUNGO1FBU3VCZCxhQUlWQTtJQVpiLHlCQUF5QjtJQUN6QixPQUFPLHdDQUNGRDtRQUNISSxRQUFRO2VBQ0hKLFdBQVdJLE1BQU07WUFDcEI7Z0JBQ0VHLE1BQU07Z0JBQ05MLFlBQVlBO2dCQUNaUSxnQkFBZ0I7b0JBQUNULENBQUFBLGNBQUFBLEtBQUtVLElBQUksY0FBVFYseUJBQUFBLGNBQWE7aUJBQUc7WUFDbkM7U0FDRDtRQUNEVyxXQUFXO1FBQ1hHLFdBQVdkLENBQUFBLG1CQUFBQSxLQUFLYyxTQUFTLGNBQWRkLDhCQUFBQSxtQkFBa0JELFdBQVdlLFNBQVM7O0FBRXJEIn0=