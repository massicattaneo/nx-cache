42fc48590a47fc037cee82d95968c325
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    USER_DATA_WATCHLIST_ROOT: function() {
        return USER_DATA_WATCHLIST_ROOT;
    },
    getWatchlistAnalyticsProps: function() {
        return getWatchlistAnalyticsProps;
    },
    getWatchlistById: function() {
        return getWatchlistById;
    },
    watchlistQueryKeys: function() {
        return watchlistQueryKeys;
    }
});
const _axiosclient = require("@rp/react/axios-client");
const USER_DATA_WATCHLIST_ROOT = "/user-data/watchlists";
const getWatchlistById = async (watchlistId)=>{
    const { data } = await _axiosclient.axiosClient.get(`${USER_DATA_WATCHLIST_ROOT}/${watchlistId}`);
    return data;
};
const getGlobalWatchlistData = async (watchlist)=>{
    var _watchlist_global, _watchlist_global1;
    if (((_watchlist_global = watchlist.global) === null || _watchlist_global === void 0 ? void 0 : _watchlist_global.status) !== "published") return undefined;
    return {
        watchlistName: watchlist.name,
        watchlistGlobalType: (_watchlist_global1 = watchlist.global) === null || _watchlist_global1 === void 0 ? void 0 : _watchlist_global1.type
    };
};
const watchlistQueryKeys = {
    all: (ownership)=>ownership ? [
            "watchlists",
            ownership
        ] : [
            "watchlists"
        ],
    watchlist: (watchlistId)=>[
            "watchlist",
            watchlistId
        ]
};
const getWatchlistAnalyticsProps = async (watchlist, queryClient)=>{
    if (!watchlist) return undefined;
    if (typeof watchlist === "string") {
        try {
            const data = await queryClient.fetchQuery({
                queryKey: watchlistQueryKeys.watchlist(watchlist),
                queryFn: ()=>getWatchlistById(watchlist)
            });
            return getGlobalWatchlistData(data);
        } catch (e) {
            return undefined;
        }
    } else {
        return getGlobalWatchlistData(watchlist);
    }
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3QvdGFuc3RhY2stYXBpL2NvbW1vbi9zcmMvaW5kZXgudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgV2F0Y2hsaXN0LCBXYXRjaGxpc3RPd25lcnNoaXAgfSBmcm9tIFwiQHJwL2NvbW1vbi9hcGktdHlwZXNcIlxuaW1wb3J0IHsgYXhpb3NDbGllbnQgfSBmcm9tIFwiQHJwL3JlYWN0L2F4aW9zLWNsaWVudFwiXG5pbXBvcnQgeyBRdWVyeUNsaWVudCB9IGZyb20gXCJAdGFuc3RhY2svcmVhY3QtcXVlcnlcIlxuXG5leHBvcnQgY29uc3QgVVNFUl9EQVRBX1dBVENITElTVF9ST09UID0gXCIvdXNlci1kYXRhL3dhdGNobGlzdHNcIlxuXG5leHBvcnQgY29uc3QgZ2V0V2F0Y2hsaXN0QnlJZCA9IGFzeW5jICh3YXRjaGxpc3RJZDogc3RyaW5nKSA9PiB7XG4gIGNvbnN0IHsgZGF0YSB9ID0gYXdhaXQgYXhpb3NDbGllbnQuZ2V0PFdhdGNobGlzdD4oYCR7VVNFUl9EQVRBX1dBVENITElTVF9ST09UfS8ke3dhdGNobGlzdElkfWApXG4gIHJldHVybiBkYXRhXG59XG5cbmNvbnN0IGdldEdsb2JhbFdhdGNobGlzdERhdGEgPSBhc3luYyAod2F0Y2hsaXN0OiBXYXRjaGxpc3QpID0+IHtcbiAgaWYgKHdhdGNobGlzdC5nbG9iYWw/LnN0YXR1cyAhPT0gXCJwdWJsaXNoZWRcIikgcmV0dXJuIHVuZGVmaW5lZFxuICByZXR1cm4ge1xuICAgIHdhdGNobGlzdE5hbWU6IHdhdGNobGlzdC5uYW1lLFxuICAgIHdhdGNobGlzdEdsb2JhbFR5cGU6IHdhdGNobGlzdC5nbG9iYWw/LnR5cGUsXG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IHdhdGNobGlzdFF1ZXJ5S2V5cyA9IHtcbiAgYWxsOiAob3duZXJzaGlwPzogV2F0Y2hsaXN0T3duZXJzaGlwKSA9PlxuICAgIG93bmVyc2hpcCA/IChbXCJ3YXRjaGxpc3RzXCIsIG93bmVyc2hpcF0gYXMgY29uc3QpIDogKFtcIndhdGNobGlzdHNcIl0gYXMgY29uc3QpLFxuICB3YXRjaGxpc3Q6ICh3YXRjaGxpc3RJZDogc3RyaW5nKSA9PiBbXCJ3YXRjaGxpc3RcIiwgd2F0Y2hsaXN0SWRdIGFzIGNvbnN0LFxufVxuXG5leHBvcnQgY29uc3QgZ2V0V2F0Y2hsaXN0QW5hbHl0aWNzUHJvcHMgPSBhc3luYyAoXG4gIHdhdGNobGlzdDogV2F0Y2hsaXN0IHwgc3RyaW5nIHwgdW5kZWZpbmVkLFxuICBxdWVyeUNsaWVudDogUXVlcnlDbGllbnQsXG4pOiBQcm9taXNlPFxuICB8IHtcbiAgICAgIHdhdGNobGlzdE5hbWU/OiBzdHJpbmdcbiAgICAgIHdhdGNobGlzdEdsb2JhbFR5cGU/OiBzdHJpbmdcbiAgICB9XG4gIHwgdW5kZWZpbmVkXG4+ID0+IHtcbiAgaWYgKCF3YXRjaGxpc3QpIHJldHVybiB1bmRlZmluZWRcbiAgaWYgKHR5cGVvZiB3YXRjaGxpc3QgPT09IFwic3RyaW5nXCIpIHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHF1ZXJ5Q2xpZW50LmZldGNoUXVlcnkoe1xuICAgICAgICBxdWVyeUtleTogd2F0Y2hsaXN0UXVlcnlLZXlzLndhdGNobGlzdCh3YXRjaGxpc3QpLFxuICAgICAgICBxdWVyeUZuOiAoKSA9PiBnZXRXYXRjaGxpc3RCeUlkKHdhdGNobGlzdCksXG4gICAgICB9KVxuICAgICAgcmV0dXJuIGdldEdsb2JhbFdhdGNobGlzdERhdGEoZGF0YSlcbiAgICB9IGNhdGNoIHtcbiAgICAgIHJldHVybiB1bmRlZmluZWRcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGdldEdsb2JhbFdhdGNobGlzdERhdGEod2F0Y2hsaXN0KVxuICB9XG59XG4iXSwibmFtZXMiOlsiVVNFUl9EQVRBX1dBVENITElTVF9ST09UIiwiZ2V0V2F0Y2hsaXN0QW5hbHl0aWNzUHJvcHMiLCJnZXRXYXRjaGxpc3RCeUlkIiwid2F0Y2hsaXN0UXVlcnlLZXlzIiwid2F0Y2hsaXN0SWQiLCJkYXRhIiwiYXhpb3NDbGllbnQiLCJnZXQiLCJnZXRHbG9iYWxXYXRjaGxpc3REYXRhIiwid2F0Y2hsaXN0IiwiZ2xvYmFsIiwic3RhdHVzIiwidW5kZWZpbmVkIiwid2F0Y2hsaXN0TmFtZSIsIm5hbWUiLCJ3YXRjaGxpc3RHbG9iYWxUeXBlIiwidHlwZSIsImFsbCIsIm93bmVyc2hpcCIsInF1ZXJ5Q2xpZW50IiwiZmV0Y2hRdWVyeSIsInF1ZXJ5S2V5IiwicXVlcnlGbiJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7SUFJYUEsd0JBQXdCO2VBQXhCQTs7SUFxQkFDLDBCQUEwQjtlQUExQkE7O0lBbkJBQyxnQkFBZ0I7ZUFBaEJBOztJQWFBQyxrQkFBa0I7ZUFBbEJBOzs7NkJBbEJlO0FBR3JCLE1BQU1ILDJCQUEyQjtBQUVqQyxNQUFNRSxtQkFBbUIsT0FBT0U7SUFDckMsTUFBTSxFQUFFQyxJQUFJLEVBQUUsR0FBRyxNQUFNQyx3QkFBVyxDQUFDQyxHQUFHLENBQVksQ0FBQyxFQUFFUCx5QkFBeUIsQ0FBQyxFQUFFSSxZQUFZLENBQUM7SUFDOUYsT0FBT0M7QUFDVDtBQUVBLE1BQU1HLHlCQUF5QixPQUFPQztRQUNoQ0EsbUJBR21CQTtJQUh2QixJQUFJQSxFQUFBQSxvQkFBQUEsVUFBVUMsTUFBTSxjQUFoQkQsd0NBQUFBLGtCQUFrQkUsTUFBTSxNQUFLLGFBQWEsT0FBT0M7SUFDckQsT0FBTztRQUNMQyxlQUFlSixVQUFVSyxJQUFJO1FBQzdCQyxtQkFBbUIsR0FBRU4scUJBQUFBLFVBQVVDLE1BQU0sY0FBaEJELHlDQUFBQSxtQkFBa0JPLElBQUk7SUFDN0M7QUFDRjtBQUVPLE1BQU1iLHFCQUFxQjtJQUNoQ2MsS0FBSyxDQUFDQyxZQUNKQSxZQUFhO1lBQUM7WUFBY0E7U0FBVSxHQUFjO1lBQUM7U0FBYTtJQUNwRVQsV0FBVyxDQUFDTCxjQUF3QjtZQUFDO1lBQWFBO1NBQVk7QUFDaEU7QUFFTyxNQUFNSCw2QkFBNkIsT0FDeENRLFdBQ0FVO0lBUUEsSUFBSSxDQUFDVixXQUFXLE9BQU9HO0lBQ3ZCLElBQUksT0FBT0gsY0FBYyxVQUFVO1FBQ2pDLElBQUk7WUFDRixNQUFNSixPQUFPLE1BQU1jLFlBQVlDLFVBQVUsQ0FBQztnQkFDeENDLFVBQVVsQixtQkFBbUJNLFNBQVMsQ0FBQ0E7Z0JBQ3ZDYSxTQUFTLElBQU1wQixpQkFBaUJPO1lBQ2xDO1lBQ0EsT0FBT0QsdUJBQXVCSDtRQUNoQyxFQUFFLFVBQU07WUFDTixPQUFPTztRQUNUO0lBQ0YsT0FBTztRQUNMLE9BQU9KLHVCQUF1QkM7SUFDaEM7QUFDRiJ9