2ed127cf37464ed6be6b9f06e336e82b
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "useSnapshot", {
    enumerable: true,
    get: function() {
        return useSnapshot;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _material = require("@mui/material");
const _axiosclient = require("@rp/react/axios-client");
const _reactquery = require("@tanstack/react-query");
const _Snackbar = require("../Snackbar");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
const postSnapshot = async ({ snapshotData })=>{
    const { name, query, queryId } = snapshotData;
    const { data } = await _axiosclient.axiosClient.post(`cqs/annotate-query?&query_id=${queryId}&query_name=${name}`, _object_spread({}, query));
    return data;
};
const useSnapshot = ()=>{
    const { enqueueSuccess, enqueueError } = (0, _Snackbar.useSnackbar)();
    return (0, _reactquery.useMutation)({
        mutationFn: postSnapshot,
        onSuccess: ()=>{
            enqueueSuccess(/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Typography, {
                        variant: "subtitle2",
                        children: "Your dataset has been generated in Argilla."
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Typography, {
                        variant: "subtitle2",
                        children: [
                            "In a few minutes it will be available for annotation at theÂ ",
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("a", {
                                style: {
                                    fontWeight: "bold",
                                    color: "blue"
                                },
                                href: "https://argilla.dev.nvirginia.ml.ravenpack.com/datasets/?workspace=query_annotations",
                                target: "_blank",
                                rel: "noreferrer",
                                children: "link."
                            })
                        ]
                    })
                ]
            }), {
                autoHideDuration: 5000
            });
        },
        onError: ()=>{
            enqueueError("An error occurred generating the snapshot, please try again");
        }
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9wcm92aWRlcnMvc3JjL0ZlZWRiYWNrQ29udGV4dC91c2VTbmFwc2hvdC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVHlwb2dyYXBoeSB9IGZyb20gXCJAbXVpL21hdGVyaWFsXCJcbmltcG9ydCB7IENxc1NlYXJjaFF1ZXJ5IH0gZnJvbSBcIkBycC9jb21tb24vYXBpLXR5cGVzXCJcbmltcG9ydCB7IGF4aW9zQ2xpZW50IH0gZnJvbSBcIkBycC9yZWFjdC9heGlvcy1jbGllbnRcIlxuaW1wb3J0IHsgdXNlTXV0YXRpb24gfSBmcm9tIFwiQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5XCJcbmltcG9ydCB7IHVzZVNuYWNrYmFyIH0gZnJvbSBcIi4uL1NuYWNrYmFyXCJcblxudHlwZSBTbmFwc2hvdFByb3BzID0ge1xuICBzbmFwc2hvdERhdGE6IHtcbiAgICBuYW1lOiBzdHJpbmcgfCB1bmRlZmluZWRcbiAgICBxdWVyeTogQ3FzU2VhcmNoUXVlcnlcbiAgICBxdWVyeUlkOiBzdHJpbmdcbiAgfVxufVxuXG5jb25zdCBwb3N0U25hcHNob3QgPSBhc3luYyAoeyBzbmFwc2hvdERhdGEgfTogU25hcHNob3RQcm9wcykgPT4ge1xuICBjb25zdCB7IG5hbWUsIHF1ZXJ5LCBxdWVyeUlkIH0gPSBzbmFwc2hvdERhdGFcblxuICBjb25zdCB7IGRhdGEgfSA9IGF3YWl0IGF4aW9zQ2xpZW50LnBvc3QoXG4gICAgYGNxcy9hbm5vdGF0ZS1xdWVyeT8mcXVlcnlfaWQ9JHtxdWVyeUlkfSZxdWVyeV9uYW1lPSR7bmFtZX1gLFxuICAgIHtcbiAgICAgIC4uLnF1ZXJ5LFxuICAgIH0sXG4gIClcbiAgcmV0dXJuIGRhdGFcbn1cblxuY29uc3QgdXNlU25hcHNob3QgPSAoKSA9PiB7XG4gIGNvbnN0IHsgZW5xdWV1ZVN1Y2Nlc3MsIGVucXVldWVFcnJvciB9ID0gdXNlU25hY2tiYXIoKVxuICByZXR1cm4gdXNlTXV0YXRpb24oe1xuICAgIG11dGF0aW9uRm46IHBvc3RTbmFwc2hvdCxcbiAgICBvblN1Y2Nlc3M6ICgpID0+IHtcbiAgICAgIGVucXVldWVTdWNjZXNzKFxuICAgICAgICA8ZGl2PlxuICAgICAgICAgIDxUeXBvZ3JhcGh5IHZhcmlhbnQ9XCJzdWJ0aXRsZTJcIj5Zb3VyIGRhdGFzZXQgaGFzIGJlZW4gZ2VuZXJhdGVkIGluIEFyZ2lsbGEuPC9UeXBvZ3JhcGh5PlxuICAgICAgICAgIDxUeXBvZ3JhcGh5IHZhcmlhbnQ9XCJzdWJ0aXRsZTJcIj5cbiAgICAgICAgICAgIEluIGEgZmV3IG1pbnV0ZXMgaXQgd2lsbCBiZSBhdmFpbGFibGUgZm9yIGFubm90YXRpb24gYXQgdGhlJm5ic3A7XG4gICAgICAgICAgICA8YVxuICAgICAgICAgICAgICBzdHlsZT17eyBmb250V2VpZ2h0OiBcImJvbGRcIiwgY29sb3I6IFwiYmx1ZVwiIH19XG4gICAgICAgICAgICAgIGhyZWY9XCJodHRwczovL2FyZ2lsbGEuZGV2Lm52aXJnaW5pYS5tbC5yYXZlbnBhY2suY29tL2RhdGFzZXRzLz93b3Jrc3BhY2U9cXVlcnlfYW5ub3RhdGlvbnNcIlxuICAgICAgICAgICAgICB0YXJnZXQ9XCJfYmxhbmtcIlxuICAgICAgICAgICAgICByZWw9XCJub3JlZmVycmVyXCJcbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgbGluay5cbiAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICA8L1R5cG9ncmFwaHk+XG4gICAgICAgIDwvZGl2PixcbiAgICAgICAgeyBhdXRvSGlkZUR1cmF0aW9uOiA1MDAwIH0sXG4gICAgICApXG4gICAgfSxcbiAgICBvbkVycm9yOiAoKSA9PiB7XG4gICAgICBlbnF1ZXVlRXJyb3IoXCJBbiBlcnJvciBvY2N1cnJlZCBnZW5lcmF0aW5nIHRoZSBzbmFwc2hvdCwgcGxlYXNlIHRyeSBhZ2FpblwiKVxuICAgIH0sXG4gIH0pXG59XG5cbmV4cG9ydCB7IHVzZVNuYXBzaG90IH1cbmV4cG9ydCB0eXBlIHsgU25hcHNob3RQcm9wcyB9XG4iXSwibmFtZXMiOlsidXNlU25hcHNob3QiLCJwb3N0U25hcHNob3QiLCJzbmFwc2hvdERhdGEiLCJuYW1lIiwicXVlcnkiLCJxdWVyeUlkIiwiZGF0YSIsImF4aW9zQ2xpZW50IiwicG9zdCIsImVucXVldWVTdWNjZXNzIiwiZW5xdWV1ZUVycm9yIiwidXNlU25hY2tiYXIiLCJ1c2VNdXRhdGlvbiIsIm11dGF0aW9uRm4iLCJvblN1Y2Nlc3MiLCJkaXYiLCJUeXBvZ3JhcGh5IiwidmFyaWFudCIsImEiLCJzdHlsZSIsImZvbnRXZWlnaHQiLCJjb2xvciIsImhyZWYiLCJ0YXJnZXQiLCJyZWwiLCJhdXRvSGlkZUR1cmF0aW9uIiwib25FcnJvciJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBdURTQTs7O2VBQUFBOzs7OzBCQXZEa0I7NkJBRUM7NEJBQ0E7MEJBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBVTVCLE1BQU1DLGVBQWUsT0FBTyxFQUFFQyxZQUFZLEVBQWlCO0lBQ3pELE1BQU0sRUFBRUMsSUFBSSxFQUFFQyxLQUFLLEVBQUVDLE9BQU8sRUFBRSxHQUFHSDtJQUVqQyxNQUFNLEVBQUVJLElBQUksRUFBRSxHQUFHLE1BQU1DLHdCQUFXLENBQUNDLElBQUksQ0FDckMsQ0FBQyw2QkFBNkIsRUFBRUgsUUFBUSxZQUFZLEVBQUVGLEtBQUssQ0FBQyxFQUM1RCxtQkFDS0M7SUFHUCxPQUFPRTtBQUNUO0FBRUEsTUFBTU4sY0FBYztJQUNsQixNQUFNLEVBQUVTLGNBQWMsRUFBRUMsWUFBWSxFQUFFLEdBQUdDLElBQUFBLHFCQUFXO0lBQ3BELE9BQU9DLElBQUFBLHVCQUFXLEVBQUM7UUFDakJDLFlBQVlaO1FBQ1phLFdBQVc7WUFDVEwsNkJBQ0Usc0JBQUNNOztrQ0FDQyxxQkFBQ0Msb0JBQVU7d0JBQUNDLFNBQVE7a0NBQVk7O2tDQUNoQyxzQkFBQ0Qsb0JBQVU7d0JBQUNDLFNBQVE7OzRCQUFZOzBDQUU5QixxQkFBQ0M7Z0NBQ0NDLE9BQU87b0NBQUVDLFlBQVk7b0NBQVFDLE9BQU87Z0NBQU87Z0NBQzNDQyxNQUFLO2dDQUNMQyxRQUFPO2dDQUNQQyxLQUFJOzBDQUNMOzs7OztnQkFLTDtnQkFBRUMsa0JBQWtCO1lBQUs7UUFFN0I7UUFDQUMsU0FBUztZQUNQaEIsYUFBYTtRQUNmO0lBQ0Y7QUFDRiJ9