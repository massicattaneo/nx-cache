{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/composite-components/src/LoginForm/LoginForm.tsx"],"sourcesContent":["import { AxiosError } from \"axios\"\nimport { useForm } from \"react-hook-form\"\nimport { useDeviceInfo } from \"@rp/react/web/common/hooks\"\nimport { InputLabel, TextField, Typography } from \"@rp/react/web/mui/core\"\nimport { FormWrapper, SubmitButton } from \"./LoginForm.styles\"\nimport { isValidEmail } from \"./login-utils\"\n\nconst DEFAULT_ERROR_MESSAGE = \"An unknown error has occurred\"\n\ntype FormData = {\n  email: string\n  password: string\n}\n\n// Helpers\nconst displayError = (error: unknown) => {\n  if (error instanceof AxiosError) {\n    return error.response?.data?.error ?? DEFAULT_ERROR_MESSAGE\n  } else if (typeof error === \"string\" && error !== \"\") {\n    return error\n  }\n  return DEFAULT_ERROR_MESSAGE\n}\n\ntype Props = {\n  onSubmit: ({ email, password }: FormData) => void\n  isPending: boolean\n  isError: boolean\n  error: unknown\n}\n\nconst LoginForm = ({ onSubmit, isPending, isError, error }: Props) => {\n  const { isIOS, isSafari } = useDeviceInfo()\n  const isIOSAutofill = isIOS && isSafari\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<FormData>()\n\n  const hasEmailError = errors.email !== undefined\n  const hasPasswordError = errors.password !== undefined\n\n  return (\n    <FormWrapper>\n      <form onSubmit={handleSubmit(onSubmit)} noValidate>\n        <InputLabel>Email Address</InputLabel>\n        <TextField\n          autoComplete=\"email\"\n          autoFocus\n          error={hasEmailError}\n          fullWidth\n          helperText={hasEmailError ? \"Please enter a valid email address\" : \"\"}\n          margin=\"normal\"\n          style={{ backgroundColor: \"transparent\" }}\n          type=\"email\"\n          variant=\"outlined\"\n          inputProps={{\n            \"data-testid\": \"login-email\",\n            sx: {\n              \"&:autofill\": {\n                WebkitTextFillColor: isIOSAutofill ? \"black\" : undefined,\n              },\n            },\n          }}\n          {...register(\"email\", { required: true, validate: isValidEmail })}\n        />\n        <InputLabel>Password</InputLabel>\n        <TextField\n          autoComplete=\"current-password\"\n          error={hasPasswordError}\n          fullWidth\n          helperText={hasPasswordError ? \"Please enter a password\" : \"\"}\n          margin=\"normal\"\n          style={{ backgroundColor: \"transparent\" }}\n          type=\"password\"\n          variant=\"outlined\"\n          role=\"password\"\n          inputProps={{\n            \"data-testid\": \"login-password\",\n            sx: {\n              \"&:autofill\": {\n                WebkitTextFillColor: isIOSAutofill ? \"black\" : undefined,\n              },\n            },\n          }}\n          {...register(\"password\", { required: true })}\n        />\n        <SubmitButton disabled={isPending} fullWidth type=\"submit\" variant=\"contained\">\n          <Typography>{isPending ? \"Logging in...\" : \"Log in\"}</Typography>\n        </SubmitButton>\n      </form>\n      {isError ? <Typography color=\"error\">{displayError(error)}</Typography> : null}\n    </FormWrapper>\n  )\n}\n\nexport { LoginForm, DEFAULT_ERROR_MESSAGE }\n"],"names":["DEFAULT_ERROR_MESSAGE","LoginForm","displayError","error","AxiosError","response","data","onSubmit","isPending","isError","isIOS","isSafari","useDeviceInfo","isIOSAutofill","register","handleSubmit","formState","errors","useForm","hasEmailError","email","undefined","hasPasswordError","password","FormWrapper","form","noValidate","InputLabel","TextField","autoComplete","autoFocus","fullWidth","helperText","margin","style","backgroundColor","type","variant","inputProps","sx","WebkitTextFillColor","required","validate","isValidEmail","role","SubmitButton","disabled","Typography","color"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;;;;;;;;IAiGoBA,qBAAqB;eAArBA;;IAAXC,SAAS;eAATA;;;;uBAjGkB;+BACH;uBACM;sBACoB;iCACR;4BACb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAE7B,MAAMD,wBAAwB;AAO9B,UAAU;AACV,MAAME,eAAe,CAACC;IACpB,IAAIA,iBAAiBC,iBAAU,EAAE;YACxBD,sBAAAA;YAAAA;QAAP,OAAOA,CAAAA,8BAAAA,kBAAAA,MAAME,QAAQ,cAAdF,uCAAAA,uBAAAA,gBAAgBG,IAAI,cAApBH,2CAAAA,qBAAsBA,KAAK,cAA3BA,wCAAAA,6BAA+BH;IACxC,OAAO,IAAI,OAAOG,UAAU,YAAYA,UAAU,IAAI;QACpD,OAAOA;IACT;IACA,OAAOH;AACT;AASA,MAAMC,YAAY,CAAC,EAAEM,QAAQ,EAAEC,SAAS,EAAEC,OAAO,EAAEN,KAAK,EAAS;IAC/D,MAAM,EAAEO,KAAK,EAAEC,QAAQ,EAAE,GAAGC,IAAAA,oBAAa;IACzC,MAAMC,gBAAgBH,SAASC;IAC/B,MAAM,EACJG,QAAQ,EACRC,YAAY,EACZC,WAAW,EAAEC,MAAM,EAAE,EACtB,GAAGC,IAAAA,sBAAO;IAEX,MAAMC,gBAAgBF,OAAOG,KAAK,KAAKC;IACvC,MAAMC,mBAAmBL,OAAOM,QAAQ,KAAKF;IAE7C,qBACE,sBAACG,4BAAW;;0BACV,sBAACC;gBAAKlB,UAAUQ,aAAaR;gBAAWmB,UAAU;;kCAChD,qBAACC,gBAAU;kCAAC;;kCACZ,qBAACC,eAAS;wBACRC,cAAa;wBACbC,SAAS;wBACT3B,OAAOgB;wBACPY,SAAS;wBACTC,YAAYb,gBAAgB,uCAAuC;wBACnEc,QAAO;wBACPC,OAAO;4BAAEC,iBAAiB;wBAAc;wBACxCC,MAAK;wBACLC,SAAQ;wBACRC,YAAY;4BACV,eAAe;4BACfC,IAAI;gCACF,cAAc;oCACZC,qBAAqB3B,gBAAgB,UAAUQ;gCACjD;4BACF;wBACF;uBACIP,SAAS,SAAS;wBAAE2B,UAAU;wBAAMC,UAAUC,wBAAY;oBAAC;kCAEjE,qBAAChB,gBAAU;kCAAC;;kCACZ,qBAACC,eAAS;wBACRC,cAAa;wBACb1B,OAAOmB;wBACPS,SAAS;wBACTC,YAAYV,mBAAmB,4BAA4B;wBAC3DW,QAAO;wBACPC,OAAO;4BAAEC,iBAAiB;wBAAc;wBACxCC,MAAK;wBACLC,SAAQ;wBACRO,MAAK;wBACLN,YAAY;4BACV,eAAe;4BACfC,IAAI;gCACF,cAAc;oCACZC,qBAAqB3B,gBAAgB,UAAUQ;gCACjD;4BACF;wBACF;uBACIP,SAAS,YAAY;wBAAE2B,UAAU;oBAAK;kCAE5C,qBAACI,6BAAY;wBAACC,UAAUtC;wBAAWuB,SAAS;wBAACK,MAAK;wBAASC,SAAQ;kCACjE,cAAA,qBAACU,gBAAU;sCAAEvC,YAAY,kBAAkB;;;;;YAG9CC,wBAAU,qBAACsC,gBAAU;gBAACC,OAAM;0BAAS9C,aAAaC;iBAAuB;;;AAGhF"}