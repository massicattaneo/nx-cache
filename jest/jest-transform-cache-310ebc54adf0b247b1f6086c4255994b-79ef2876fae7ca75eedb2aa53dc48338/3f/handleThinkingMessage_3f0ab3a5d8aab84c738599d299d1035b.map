{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/common/hooks/src/lib/useAgent/handlers/handleThinkingMessage.ts"],"sourcesContent":["import { AgentMessageState, ThinkingMessage } from \"../useAgent.types\"\n\nfunction handleThinkingMessage(\n  agentState: AgentMessageState,\n  data: ThinkingMessage,\n): AgentMessageState {\n  const thinkingId = data.thinkingId ?? \"\"\n  const existingThinkingIndex = agentState.frames.findIndex(\n    frame => frame.type === \"thinking\" && frame.thinkingId === thinkingId,\n  )\n  if (existingThinkingIndex !== -1) {\n    // Update existing thinking entry\n    const updatedFrames = [...agentState.frames]\n    const existing = updatedFrames[existingThinkingIndex]\n\n    if (existing.type === \"thinking\") {\n      updatedFrames[existingThinkingIndex] = {\n        ...existing,\n        thinkingStream: [...(existing.thinkingStream || []), data.text ?? \"\"],\n      }\n      return {\n        ...agentState,\n        frames: updatedFrames,\n        isLoading: false,\n        error: undefined,\n        requestId: data.requestId ?? agentState.requestId,\n      }\n    }\n  }\n  // Add new thinking entry\n  return {\n    ...agentState,\n    frames: [\n      ...agentState.frames,\n      {\n        type: \"thinking\",\n        thinkingId: thinkingId,\n        thinkingStream: [data.text ?? \"\"],\n      },\n    ],\n    isLoading: false,\n    requestId: data.requestId ?? agentState.requestId,\n  }\n}\n\nexport { handleThinkingMessage }\n"],"names":["handleThinkingMessage","agentState","data","thinkingId","existingThinkingIndex","frames","findIndex","frame","type","updatedFrames","existing","thinkingStream","text","isLoading","error","undefined","requestId"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BA6CSA;;;eAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA3CT,SAASA,sBACPC,UAA6B,EAC7BC,IAAqB;QAEFA;IAAnB,MAAMC,aAAaD,CAAAA,mBAAAA,KAAKC,UAAU,cAAfD,8BAAAA,mBAAmB;IACtC,MAAME,wBAAwBH,WAAWI,MAAM,CAACC,SAAS,CACvDC,CAAAA,QAASA,MAAMC,IAAI,KAAK,cAAcD,MAAMJ,UAAU,KAAKA;IAE7D,IAAIC,0BAA0B,CAAC,GAAG;QAChC,iCAAiC;QACjC,MAAMK,gBAAgB;eAAIR,WAAWI,MAAM;SAAC;QAC5C,MAAMK,WAAWD,aAAa,CAACL,sBAAsB;QAErD,IAAIM,SAASF,IAAI,KAAK,YAAY;gBAGuBN;YAFvDO,aAAa,CAACL,sBAAsB,GAAG,wCAClCM;gBACHC,gBAAgB;uBAAKD,SAASC,cAAc,IAAI,EAAE;oBAAGT,CAAAA,aAAAA,KAAKU,IAAI,cAATV,wBAAAA,aAAa;iBAAG;;gBAO1DA;YALb,OAAO,wCACFD;gBACHI,QAAQI;gBACRI,WAAW;gBACXC,OAAOC;gBACPC,WAAWd,CAAAA,kBAAAA,KAAKc,SAAS,cAAdd,6BAAAA,kBAAkBD,WAAWe,SAAS;;QAErD;IACF;QASuBd,aAIVA;IAZb,yBAAyB;IACzB,OAAO,wCACFD;QACHI,QAAQ;eACHJ,WAAWI,MAAM;YACpB;gBACEG,MAAM;gBACNL,YAAYA;gBACZQ,gBAAgB;oBAACT,CAAAA,cAAAA,KAAKU,IAAI,cAATV,yBAAAA,cAAa;iBAAG;YACnC;SACD;QACDW,WAAW;QACXG,WAAWd,CAAAA,mBAAAA,KAAKc,SAAS,cAAdd,8BAAAA,mBAAkBD,WAAWe,SAAS;;AAErD"}