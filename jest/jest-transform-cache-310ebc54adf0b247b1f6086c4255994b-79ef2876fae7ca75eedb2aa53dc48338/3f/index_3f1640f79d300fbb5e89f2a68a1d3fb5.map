{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/tanstack-api/common/src/index.ts"],"sourcesContent":["import { Watchlist, WatchlistOwnership } from \"@rp/common/api-types\"\nimport { axiosClient } from \"@rp/react/axios-client\"\nimport { QueryClient } from \"@tanstack/react-query\"\n\nexport const USER_DATA_WATCHLIST_ROOT = \"/user-data/watchlists\"\n\nexport const getWatchlistById = async (watchlistId: string) => {\n  const { data } = await axiosClient.get<Watchlist>(`${USER_DATA_WATCHLIST_ROOT}/${watchlistId}`)\n  return data\n}\n\nconst getGlobalWatchlistData = async (watchlist: Watchlist) => {\n  if (watchlist.global?.status !== \"published\") return undefined\n  return {\n    watchlistName: watchlist.name,\n    watchlistGlobalType: watchlist.global?.type,\n  }\n}\n\nexport const watchlistQueryKeys = {\n  all: (ownership?: WatchlistOwnership) =>\n    ownership ? ([\"watchlists\", ownership] as const) : ([\"watchlists\"] as const),\n  watchlist: (watchlistId: string) => [\"watchlist\", watchlistId] as const,\n}\n\nexport const getWatchlistAnalyticsProps = async (\n  watchlist: Watchlist | string | undefined,\n  queryClient: QueryClient,\n): Promise<\n  | {\n      watchlistName?: string\n      watchlistGlobalType?: string\n    }\n  | undefined\n> => {\n  if (!watchlist) return undefined\n  if (typeof watchlist === \"string\") {\n    try {\n      const data = await queryClient.fetchQuery({\n        queryKey: watchlistQueryKeys.watchlist(watchlist),\n        queryFn: () => getWatchlistById(watchlist),\n      })\n      return getGlobalWatchlistData(data)\n    } catch {\n      return undefined\n    }\n  } else {\n    return getGlobalWatchlistData(watchlist)\n  }\n}\n"],"names":["USER_DATA_WATCHLIST_ROOT","getWatchlistAnalyticsProps","getWatchlistById","watchlistQueryKeys","watchlistId","data","axiosClient","get","getGlobalWatchlistData","watchlist","global","status","undefined","watchlistName","name","watchlistGlobalType","type","all","ownership","queryClient","fetchQuery","queryKey","queryFn"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;;;;;;;;IAIaA,wBAAwB;eAAxBA;;IAqBAC,0BAA0B;eAA1BA;;IAnBAC,gBAAgB;eAAhBA;;IAaAC,kBAAkB;eAAlBA;;;6BAlBe;AAGrB,MAAMH,2BAA2B;AAEjC,MAAME,mBAAmB,OAAOE;IACrC,MAAM,EAAEC,IAAI,EAAE,GAAG,MAAMC,wBAAW,CAACC,GAAG,CAAY,CAAC,EAAEP,yBAAyB,CAAC,EAAEI,YAAY,CAAC;IAC9F,OAAOC;AACT;AAEA,MAAMG,yBAAyB,OAAOC;QAChCA,mBAGmBA;IAHvB,IAAIA,EAAAA,oBAAAA,UAAUC,MAAM,cAAhBD,wCAAAA,kBAAkBE,MAAM,MAAK,aAAa,OAAOC;IACrD,OAAO;QACLC,eAAeJ,UAAUK,IAAI;QAC7BC,mBAAmB,GAAEN,qBAAAA,UAAUC,MAAM,cAAhBD,yCAAAA,mBAAkBO,IAAI;IAC7C;AACF;AAEO,MAAMb,qBAAqB;IAChCc,KAAK,CAACC,YACJA,YAAa;YAAC;YAAcA;SAAU,GAAc;YAAC;SAAa;IACpET,WAAW,CAACL,cAAwB;YAAC;YAAaA;SAAY;AAChE;AAEO,MAAMH,6BAA6B,OACxCQ,WACAU;IAQA,IAAI,CAACV,WAAW,OAAOG;IACvB,IAAI,OAAOH,cAAc,UAAU;QACjC,IAAI;YACF,MAAMJ,OAAO,MAAMc,YAAYC,UAAU,CAAC;gBACxCC,UAAUlB,mBAAmBM,SAAS,CAACA;gBACvCa,SAAS,IAAMpB,iBAAiBO;YAClC;YACA,OAAOD,uBAAuBH;QAChC,EAAE,UAAM;YACN,OAAOO;QACT;IACF,OAAO;QACL,OAAOJ,uBAAuBC;IAChC;AACF"}