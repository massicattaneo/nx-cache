{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/watchlist-editor/src/WatchlistCategoryFilter.tsx"],"sourcesContent":["import { useEffect, useMemo, useRef, useState } from \"react\"\nimport { SwiperRef, SwiperSlide, useSwiper } from \"swiper/react\"\nimport { DiscoveryPanelCategory } from \"@rp/react/tanstack-api/discovery-panel-config\"\nimport { SwiperWithFadingArrows } from \"@rp/react/web/common/composite-components\"\nimport { IconEntity } from \"@rp/react/web/icons\"\nimport { Box, Chip, Typography } from \"@rp/react/web/mui/core\"\n\ntype CategoryChipProps = {\n  label: string | undefined\n  selectedCategory: string | undefined\n  setSelectedCategory: (category: string | undefined) => void\n  icon?: string\n  count: number | undefined\n  index: number\n}\n\nconst CategoryChip = ({\n  label,\n  selectedCategory,\n  setSelectedCategory,\n  icon,\n  count,\n  index,\n}: CategoryChipProps) => {\n  const swiper = useSwiper()\n\n  return (\n    <Chip\n      label={\n        <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 1 }}>\n          {label ?? \"All\"}\n          {count ? (\n            <Typography variant=\"caption\" component=\"span\" lineHeight={1}>\n              ({formatter.format(count)})\n            </Typography>\n          ) : undefined}\n        </Box>\n      }\n      icon={icon ? <IconEntity icon={icon} /> : undefined}\n      sx={{\n        pl: icon ? 0.75 : undefined,\n        fontSize: 16,\n        \"&, &:hover, &:focus\": {\n          backgroundColor: selectedCategory === label ? \"primary.main\" : \"transparent\",\n          color: selectedCategory === label ? \"common.black\" : undefined,\n          border: selectedCategory === label ? undefined : \"1px solid rgba(255, 255, 255, 0.12)\",\n        },\n\n        \"& svg\": {\n          fontSize: 16,\n          color: selectedCategory === label ? \"#121212 !important\" : undefined,\n        },\n\n        \"& span span\": {\n          color: selectedCategory === label ? \"common.black\" : \"text.secondary\",\n        },\n      }}\n      onClick={() => {\n        setSelectedCategory(label)\n        swiper.slideTo(index)\n      }}\n    />\n  )\n}\n\ntype Props = {\n  categories: Array<DiscoveryPanelCategory>\n  counts: Record<string, number>\n  onChange: (newCategory: string | undefined) => void\n}\n\nconst ALL_VALUE = undefined\nconst formatter = Intl.NumberFormat(\"en\", { notation: \"compact\" })\n\nconst WatchlistCategoryFilter = ({ categories, counts, onChange }: Props) => {\n  const swiperRef = useRef<SwiperRef>(null)\n  const [selectedCategory, setSelectedCategory] = useState<string | undefined>(ALL_VALUE)\n  const watchlistCategories = useMemo(\n    () => categories.filter(category => category.watchlistFilter),\n    [categories],\n  )\n\n  useEffect(() => {\n    swiperRef.current?.swiper.update()\n  }, [categories, counts])\n\n  useEffect(() => {\n    onChange(selectedCategory)\n    swiperRef.current?.swiper.update()\n  }, [selectedCategory, onChange])\n\n  return (\n    <Box\n      sx={{\n        gap: 1,\n        maxWidth: \"100%\",\n        overflow: \"auto\",\n        position: \"relative\",\n      }}\n    >\n      <SwiperWithFadingArrows\n        bgColor=\"#1E1E1E\"\n        height={32}\n        ref={swiperRef}\n        slidesPerGroup={1}\n        spaceBetween={8}\n      >\n        <SwiperSlide>\n          <CategoryChip\n            label={ALL_VALUE}\n            selectedCategory={selectedCategory}\n            setSelectedCategory={setSelectedCategory}\n            count={counts.All}\n            index={0}\n          />\n        </SwiperSlide>\n        {watchlistCategories.map((category, index) => {\n          return (\n            <SwiperSlide key={category.category}>\n              <CategoryChip\n                label={category.label}\n                selectedCategory={selectedCategory}\n                setSelectedCategory={setSelectedCategory}\n                count={counts[category.label]}\n                icon={category.icon}\n                index={index}\n              />\n            </SwiperSlide>\n          )\n        })}\n      </SwiperWithFadingArrows>\n    </Box>\n  )\n}\n\nexport { WatchlistCategoryFilter }\n"],"names":["WatchlistCategoryFilter","CategoryChip","label","selectedCategory","setSelectedCategory","icon","count","index","swiper","useSwiper","Chip","Box","sx","display","alignItems","gap","Typography","variant","component","lineHeight","formatter","format","undefined","IconEntity","pl","fontSize","backgroundColor","color","border","onClick","slideTo","ALL_VALUE","Intl","NumberFormat","notation","categories","counts","onChange","swiperRef","useRef","useState","watchlistCategories","useMemo","filter","category","watchlistFilter","useEffect","current","update","maxWidth","overflow","position","SwiperWithFadingArrows","bgColor","height","ref","slidesPerGroup","spaceBetween","SwiperSlide","All","map"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAuISA;;;eAAAA;;;;uBAvI4C;wBACH;qCAEX;uBACZ;sBACW;AAWtC,MAAMC,eAAe,CAAC,EACpBC,KAAK,EACLC,gBAAgB,EAChBC,mBAAmB,EACnBC,IAAI,EACJC,KAAK,EACLC,KAAK,EACa;IAClB,MAAMC,SAASC,IAAAA,iBAAS;IAExB,qBACE,qBAACC,UAAI;QACHR,qBACE,sBAACS,SAAG;YAACC,IAAI;gBAAEC,SAAS;gBAAQC,YAAY;gBAAUC,KAAK;YAAE;;gBACtDb,kBAAAA,mBAAAA,QAAS;gBACTI,sBACC,sBAACU,gBAAU;oBAACC,SAAQ;oBAAUC,WAAU;oBAAOC,YAAY;;wBAAG;wBAC1DC,UAAUC,MAAM,CAACf;wBAAO;;qBAE1BgB;;;QAGRjB,MAAMA,qBAAO,qBAACkB,iBAAU;YAAClB,MAAMA;aAAWiB;QAC1CV,IAAI;YACFY,IAAInB,OAAO,OAAOiB;YAClBG,UAAU;YACV,uBAAuB;gBACrBC,iBAAiBvB,qBAAqBD,QAAQ,iBAAiB;gBAC/DyB,OAAOxB,qBAAqBD,QAAQ,iBAAiBoB;gBACrDM,QAAQzB,qBAAqBD,QAAQoB,YAAY;YACnD;YAEA,SAAS;gBACPG,UAAU;gBACVE,OAAOxB,qBAAqBD,QAAQ,uBAAuBoB;YAC7D;YAEA,eAAe;gBACbK,OAAOxB,qBAAqBD,QAAQ,iBAAiB;YACvD;QACF;QACA2B,SAAS;YACPzB,oBAAoBF;YACpBM,OAAOsB,OAAO,CAACvB;QACjB;;AAGN;AAQA,MAAMwB,YAAYT;AAClB,MAAMF,YAAYY,KAAKC,YAAY,CAAC,MAAM;IAAEC,UAAU;AAAU;AAEhE,MAAMlC,0BAA0B,CAAC,EAAEmC,UAAU,EAAEC,MAAM,EAAEC,QAAQ,EAAS;IACtE,MAAMC,YAAYC,IAAAA,aAAM,EAAY;IACpC,MAAM,CAACpC,kBAAkBC,oBAAoB,GAAGoC,IAAAA,eAAQ,EAAqBT;IAC7E,MAAMU,sBAAsBC,IAAAA,cAAO,EACjC,IAAMP,WAAWQ,MAAM,CAACC,CAAAA,WAAYA,SAASC,eAAe,GAC5D;QAACV;KAAW;IAGdW,IAAAA,gBAAS,EAAC;YACRR;SAAAA,qBAAAA,UAAUS,OAAO,cAAjBT,yCAAAA,mBAAmB9B,MAAM,CAACwC,MAAM;IAClC,GAAG;QAACb;QAAYC;KAAO;IAEvBU,IAAAA,gBAAS,EAAC;YAERR;QADAD,SAASlC;SACTmC,qBAAAA,UAAUS,OAAO,cAAjBT,yCAAAA,mBAAmB9B,MAAM,CAACwC,MAAM;IAClC,GAAG;QAAC7C;QAAkBkC;KAAS;IAE/B,qBACE,qBAAC1B,SAAG;QACFC,IAAI;YACFG,KAAK;YACLkC,UAAU;YACVC,UAAU;YACVC,UAAU;QACZ;kBAEA,cAAA,sBAACC,2CAAsB;YACrBC,SAAQ;YACRC,QAAQ;YACRC,KAAKjB;YACLkB,gBAAgB;YAChBC,cAAc;;8BAEd,qBAACC,mBAAW;8BACV,cAAA,qBAACzD;wBACCC,OAAO6B;wBACP5B,kBAAkBA;wBAClBC,qBAAqBA;wBACrBE,OAAO8B,OAAOuB,GAAG;wBACjBpD,OAAO;;;gBAGVkC,oBAAoBmB,GAAG,CAAC,CAAChB,UAAUrC;oBAClC,qBACE,qBAACmD,mBAAW;kCACV,cAAA,qBAACzD;4BACCC,OAAO0C,SAAS1C,KAAK;4BACrBC,kBAAkBA;4BAClBC,qBAAqBA;4BACrBE,OAAO8B,MAAM,CAACQ,SAAS1C,KAAK,CAAC;4BAC7BG,MAAMuC,SAASvC,IAAI;4BACnBE,OAAOA;;uBAPOqC,SAASA,QAAQ;gBAWvC;;;;AAIR"}