5ce49a7b8d500ce688b5cdb010e0b6f6
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "WatchlistAverageChangePercentageChip", {
    enumerable: true,
    get: function() {
        return WatchlistAverageChangePercentageChip;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _basecomponents = require("@rp/react/web/common/base-components");
const _core = require("@rp/react/web/mui/core");
const _icons = require("@rp/react/web/mui/icons");
const positive = {
    color: "green.500",
    backgroundColor: "green.A700",
    direction: "Up",
    icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.TrendingUp, {
        sx: {
            fontSize: 16
        }
    })
};
const negative = {
    color: "red.500",
    backgroundColor: "red.A700",
    direction: "Down",
    icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.TrendingDown, {
        sx: {
            fontSize: 16
        }
    })
};
const WatchlistAverageChangePercentageChip = ({ averageChangePercentage, isLoading = false, hideBackground = false })=>{
    if (isLoading) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Skeleton, {
            width: 70,
            height: 20,
            sx: {
                my: 0.5
            }
        });
    }
    if (averageChangePercentage === 0 || averageChangePercentage === null) {
        return null;
    }
    const performance = averageChangePercentage >= 0 ? positive : negative;
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.RPTooltip, {
        title: "Average daily percentage change of the watchlist.",
        placement: "top",
        PopperProps: {
            sx: {
                textAlign: "center"
            }
        },
        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Typography, {
            sx: {
                backgroundColor: hideBackground ? undefined : performance.backgroundColor,
                color: performance.color,
                alignItems: "center",
                borderRadius: "5px",
                display: "flex",
                fontSize: 12,
                fontWeight: 700,
                gap: 0.5,
                letterSpacing: "0.25px",
                lineHeight: "16px",
                padding: hideBackground ? "6px 0px" : "6px 10px"
            },
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                    children: performance.direction
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                    children: [
                        averageChangePercentage.toFixed(2),
                        "%"
                    ]
                }),
                performance.icon
            ]
        })
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi93YXRjaGxpc3RzL3NyYy9XYXRjaGxpc3RBdmVyYWdlUGVyY2VudGFnZUNoYW5nZS9XYXRjaGxpc3RBdmVyYWdlUGVyY2VudGFnZUNoYW5nZS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSlNYIH0gZnJvbSBcInJlYWN0XCJcbmltcG9ydCB7IFJQVG9vbHRpcCB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL2NvbW1vbi9iYXNlLWNvbXBvbmVudHNcIlxuaW1wb3J0IHsgU2tlbGV0b24sIFR5cG9ncmFwaHkgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9tdWkvY29yZVwiXG5pbXBvcnQgeyBUcmVuZGluZ0Rvd24sIFRyZW5kaW5nVXAgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9tdWkvaWNvbnNcIlxuXG50eXBlIFdhdGNobGlzdFBlcmZvcm1hbmNlID0ge1xuICBjb2xvcjogc3RyaW5nXG4gIGJhY2tncm91bmRDb2xvcjogc3RyaW5nXG4gIGRpcmVjdGlvbjogc3RyaW5nXG4gIGljb24/OiBKU1guRWxlbWVudFxufVxuXG5jb25zdCBwb3NpdGl2ZSA9IHtcbiAgY29sb3I6IFwiZ3JlZW4uNTAwXCIsXG4gIGJhY2tncm91bmRDb2xvcjogXCJncmVlbi5BNzAwXCIsXG4gIGRpcmVjdGlvbjogXCJVcFwiLFxuICBpY29uOiA8VHJlbmRpbmdVcCBzeD17eyBmb250U2l6ZTogMTYgfX0gLz4sXG59XG5cbmNvbnN0IG5lZ2F0aXZlID0ge1xuICBjb2xvcjogXCJyZWQuNTAwXCIsXG4gIGJhY2tncm91bmRDb2xvcjogXCJyZWQuQTcwMFwiLFxuICBkaXJlY3Rpb246IFwiRG93blwiLFxuICBpY29uOiA8VHJlbmRpbmdEb3duIHN4PXt7IGZvbnRTaXplOiAxNiB9fSAvPixcbn1cblxudHlwZSBQcm9wcyA9IHtcbiAgYXZlcmFnZUNoYW5nZVBlcmNlbnRhZ2U6IG51bWJlciB8IG51bGxcbiAgaXNMb2FkaW5nPzogYm9vbGVhblxuICBoaWRlQmFja2dyb3VuZD86IGJvb2xlYW5cbn1cblxuY29uc3QgV2F0Y2hsaXN0QXZlcmFnZUNoYW5nZVBlcmNlbnRhZ2VDaGlwID0gKHtcbiAgYXZlcmFnZUNoYW5nZVBlcmNlbnRhZ2UsXG4gIGlzTG9hZGluZyA9IGZhbHNlLFxuICBoaWRlQmFja2dyb3VuZCA9IGZhbHNlLFxufTogUHJvcHMpID0+IHtcbiAgaWYgKGlzTG9hZGluZykge1xuICAgIHJldHVybiA8U2tlbGV0b24gd2lkdGg9ezcwfSBoZWlnaHQ9ezIwfSBzeD17eyBteTogMC41IH19IC8+XG4gIH1cbiAgaWYgKGF2ZXJhZ2VDaGFuZ2VQZXJjZW50YWdlID09PSAwIHx8IGF2ZXJhZ2VDaGFuZ2VQZXJjZW50YWdlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIG51bGxcbiAgfVxuXG4gIGNvbnN0IHBlcmZvcm1hbmNlOiBXYXRjaGxpc3RQZXJmb3JtYW5jZSA9IGF2ZXJhZ2VDaGFuZ2VQZXJjZW50YWdlID49IDAgPyBwb3NpdGl2ZSA6IG5lZ2F0aXZlXG5cbiAgcmV0dXJuIChcbiAgICA8UlBUb29sdGlwXG4gICAgICB0aXRsZT1cIkF2ZXJhZ2UgZGFpbHkgcGVyY2VudGFnZSBjaGFuZ2Ugb2YgdGhlIHdhdGNobGlzdC5cIlxuICAgICAgcGxhY2VtZW50PVwidG9wXCJcbiAgICAgIFBvcHBlclByb3BzPXt7IHN4OiB7IHRleHRBbGlnbjogXCJjZW50ZXJcIiB9IH19XG4gICAgPlxuICAgICAgPFR5cG9ncmFwaHlcbiAgICAgICAgc3g9e3tcbiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IGhpZGVCYWNrZ3JvdW5kID8gdW5kZWZpbmVkIDogcGVyZm9ybWFuY2UuYmFja2dyb3VuZENvbG9yLFxuICAgICAgICAgIGNvbG9yOiBwZXJmb3JtYW5jZS5jb2xvcixcbiAgICAgICAgICBhbGlnbkl0ZW1zOiBcImNlbnRlclwiLFxuICAgICAgICAgIGJvcmRlclJhZGl1czogXCI1cHhcIixcbiAgICAgICAgICBkaXNwbGF5OiBcImZsZXhcIixcbiAgICAgICAgICBmb250U2l6ZTogMTIsXG4gICAgICAgICAgZm9udFdlaWdodDogNzAwLFxuICAgICAgICAgIGdhcDogMC41LFxuICAgICAgICAgIGxldHRlclNwYWNpbmc6IFwiMC4yNXB4XCIsXG4gICAgICAgICAgbGluZUhlaWdodDogXCIxNnB4XCIsXG4gICAgICAgICAgcGFkZGluZzogaGlkZUJhY2tncm91bmQgPyBcIjZweCAwcHhcIiA6IFwiNnB4IDEwcHhcIixcbiAgICAgICAgfX1cbiAgICAgID5cbiAgICAgICAgPHNwYW4+e3BlcmZvcm1hbmNlLmRpcmVjdGlvbn08L3NwYW4+XG4gICAgICAgIDxzcGFuPnthdmVyYWdlQ2hhbmdlUGVyY2VudGFnZS50b0ZpeGVkKDIpfSU8L3NwYW4+XG4gICAgICAgIHtwZXJmb3JtYW5jZS5pY29ufVxuICAgICAgPC9UeXBvZ3JhcGh5PlxuICAgIDwvUlBUb29sdGlwPlxuICApXG59XG5cbmV4cG9ydCB7IFdhdGNobGlzdEF2ZXJhZ2VDaGFuZ2VQZXJjZW50YWdlQ2hpcCB9XG4iXSwibmFtZXMiOlsiV2F0Y2hsaXN0QXZlcmFnZUNoYW5nZVBlcmNlbnRhZ2VDaGlwIiwicG9zaXRpdmUiLCJjb2xvciIsImJhY2tncm91bmRDb2xvciIsImRpcmVjdGlvbiIsImljb24iLCJUcmVuZGluZ1VwIiwic3giLCJmb250U2l6ZSIsIm5lZ2F0aXZlIiwiVHJlbmRpbmdEb3duIiwiYXZlcmFnZUNoYW5nZVBlcmNlbnRhZ2UiLCJpc0xvYWRpbmciLCJoaWRlQmFja2dyb3VuZCIsIlNrZWxldG9uIiwid2lkdGgiLCJoZWlnaHQiLCJteSIsInBlcmZvcm1hbmNlIiwiUlBUb29sdGlwIiwidGl0bGUiLCJwbGFjZW1lbnQiLCJQb3BwZXJQcm9wcyIsInRleHRBbGlnbiIsIlR5cG9ncmFwaHkiLCJ1bmRlZmluZWQiLCJhbGlnbkl0ZW1zIiwiYm9yZGVyUmFkaXVzIiwiZGlzcGxheSIsImZvbnRXZWlnaHQiLCJnYXAiLCJsZXR0ZXJTcGFjaW5nIiwibGluZUhlaWdodCIsInBhZGRpbmciLCJzcGFuIiwidG9GaXhlZCJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBMkVTQTs7O2VBQUFBOzs7O2dDQTFFaUI7c0JBQ1c7dUJBQ0k7QUFTekMsTUFBTUMsV0FBVztJQUNmQyxPQUFPO0lBQ1BDLGlCQUFpQjtJQUNqQkMsV0FBVztJQUNYQyxvQkFBTSxxQkFBQ0MsaUJBQVU7UUFBQ0MsSUFBSTtZQUFFQyxVQUFVO1FBQUc7O0FBQ3ZDO0FBRUEsTUFBTUMsV0FBVztJQUNmUCxPQUFPO0lBQ1BDLGlCQUFpQjtJQUNqQkMsV0FBVztJQUNYQyxvQkFBTSxxQkFBQ0ssbUJBQVk7UUFBQ0gsSUFBSTtZQUFFQyxVQUFVO1FBQUc7O0FBQ3pDO0FBUUEsTUFBTVIsdUNBQXVDLENBQUMsRUFDNUNXLHVCQUF1QixFQUN2QkMsWUFBWSxLQUFLLEVBQ2pCQyxpQkFBaUIsS0FBSyxFQUNoQjtJQUNOLElBQUlELFdBQVc7UUFDYixxQkFBTyxxQkFBQ0UsY0FBUTtZQUFDQyxPQUFPO1lBQUlDLFFBQVE7WUFBSVQsSUFBSTtnQkFBRVUsSUFBSTtZQUFJOztJQUN4RDtJQUNBLElBQUlOLDRCQUE0QixLQUFLQSw0QkFBNEIsTUFBTTtRQUNyRSxPQUFPO0lBQ1Q7SUFFQSxNQUFNTyxjQUFvQ1AsMkJBQTJCLElBQUlWLFdBQVdRO0lBRXBGLHFCQUNFLHFCQUFDVSx5QkFBUztRQUNSQyxPQUFNO1FBQ05DLFdBQVU7UUFDVkMsYUFBYTtZQUFFZixJQUFJO2dCQUFFZ0IsV0FBVztZQUFTO1FBQUU7a0JBRTNDLGNBQUEsc0JBQUNDLGdCQUFVO1lBQ1RqQixJQUFJO2dCQUNGSixpQkFBaUJVLGlCQUFpQlksWUFBWVAsWUFBWWYsZUFBZTtnQkFDekVELE9BQU9nQixZQUFZaEIsS0FBSztnQkFDeEJ3QixZQUFZO2dCQUNaQyxjQUFjO2dCQUNkQyxTQUFTO2dCQUNUcEIsVUFBVTtnQkFDVnFCLFlBQVk7Z0JBQ1pDLEtBQUs7Z0JBQ0xDLGVBQWU7Z0JBQ2ZDLFlBQVk7Z0JBQ1pDLFNBQVNwQixpQkFBaUIsWUFBWTtZQUN4Qzs7OEJBRUEscUJBQUNxQjs4QkFBTWhCLFlBQVlkLFNBQVM7OzhCQUM1QixzQkFBQzhCOzt3QkFBTXZCLHdCQUF3QndCLE9BQU8sQ0FBQzt3QkFBRzs7O2dCQUN6Q2pCLFlBQVliLElBQUk7Ozs7QUFJekIifQ==