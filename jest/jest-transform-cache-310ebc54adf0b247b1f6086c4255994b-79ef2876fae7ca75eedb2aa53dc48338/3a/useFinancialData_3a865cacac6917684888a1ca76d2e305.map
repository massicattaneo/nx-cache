{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/tanstack-api/financial-data/src/useFinancialData.ts"],"sourcesContent":["import { useMemo } from \"react\"\nimport { AxiosError } from \"axios\"\nimport { z } from \"zod\"\nimport {\n  financialDataEndpoints,\n  financialDataSchemas,\n  useFinancialDataInputSchema,\n} from \"@rp/common/zod-contracts/financial-data\"\nimport { UseQueryResult, useQueries } from \"@tanstack/react-query\"\nimport { bulkFetcher } from \"./bulkFetcher\"\n\ntype Fetchers = {\n  [K in z.infer<typeof financialDataEndpoints>]: ReturnType<typeof bulkFetcher>\n}\n\ntype StaleTime = {\n  [K in z.infer<typeof financialDataEndpoints>]: number\n}\n\ntype UseDataOutput = Record<\n  string,\n  Partial<{\n    [K in z.infer<typeof financialDataEndpoints>]: UseQueryResult<\n      z.infer<typeof financialDataSchemas[K]>\n    >\n  }>\n>\n\nconst staleTime: StaleTime = {\n  companyQuote: 1000 * 60, // 1 minute\n  companyLatestSurprise: 1000 * 60 * 60 * 3, // 3 hours\n  companyPriceChanges: 1000 * 60, // 1 minute\n  companySentiment: 1000 * 60 * 60 * 24, // 24 hours\n  companyPriceTarget: 1000 * 60 * 60 * 3, // 3 hours\n  companyAnalystRatings: 1000 * 60 * 60 * 3, // 3 hours\n  companyIncomeStatement: 1000 * 60 * 60 * 3, // 3 hours\n  companyCashFlowStatement: 1000 * 60 * 60 * 3, // 3 hours\n  companyBalanceStatement: 1000 * 60 * 60 * 3, // 3 hours\n  companyKeyMetrics: 1000 * 60 * 60 * 3, // 3 hours\n  companyRatios: 1000 * 60 * 60 * 3, // 3 hours\n  companyCurrency: 1000 * 60 * 60 * 24, // 24 hours\n}\n\nconst bulkFetchers = financialDataEndpoints.options.reduce((acc, endpoint) => {\n  return {\n    ...acc,\n    [endpoint]: bulkFetcher(endpoint),\n  }\n}, {} as Fetchers)\n\nfunction useFinancialData(body: z.infer<typeof useFinancialDataInputSchema>): UseDataOutput {\n  const allQueries = useMemo(() => {\n    return financialDataEndpoints.options.flatMap(endpoint => {\n      const entityIds = body[endpoint]?.entityIds ?? []\n      return entityIds.map(entityId => ({\n        queryKey: [\"financial-data\", endpoint, entityId],\n        queryFn: async () => bulkFetchers[endpoint](entityId),\n        staleTime: staleTime[endpoint],\n        refetchInterval: staleTime[endpoint],\n        refetchOnWindowFocus: true,\n        keepPreviousData: true,\n        retry: (attempt: number, error: unknown) => {\n          if (!(error instanceof AxiosError)) return true\n          return attempt < 3 && [500, 502, 503, 504, 408, 429].includes(error.response?.status ?? 0)\n        },\n        retryDelay: (attempt: number, error: AxiosError) => {\n          if (error.response?.status === 429) return 1000 * 60 // 1 minute for rate limiting\n          return Math.min(2000 * 1.5 ** attempt, 5000)\n        },\n      }))\n    })\n  }, [body])\n\n  const results = useQueries({ queries: allQueries })\n\n  return useMemo(() => {\n    const ids = financialDataEndpoints.options\n      .map(ep => body[ep]?.entityIds ?? [])\n      .flat()\n      .filter((value, index, self) => self.indexOf(value) === index)\n    return ids.reduce((acc, entityId) => {\n      return {\n        ...acc,\n        [entityId]: financialDataEndpoints.options.reduce((endpointAcc, endpoint) => {\n          const index = allQueries.findIndex(\n            item => item.queryKey[1] === endpoint && item.queryKey[2] === entityId,\n          )\n          const result = results[index]\n          if (!result) return endpointAcc\n          return Object.assign(endpointAcc, { [endpoint]: result })\n        }, {}),\n      }\n    }, {})\n  }, [allQueries, body, results])\n}\n\nexport { useFinancialData }\n"],"names":["useFinancialData","staleTime","companyQuote","companyLatestSurprise","companyPriceChanges","companySentiment","companyPriceTarget","companyAnalystRatings","companyIncomeStatement","companyCashFlowStatement","companyBalanceStatement","companyKeyMetrics","companyRatios","companyCurrency","bulkFetchers","financialDataEndpoints","options","reduce","acc","endpoint","bulkFetcher","body","allQueries","useMemo","flatMap","entityIds","map","entityId","queryKey","queryFn","refetchInterval","refetchOnWindowFocus","keepPreviousData","retry","attempt","error","AxiosError","includes","response","status","retryDelay","Math","min","results","useQueries","queries","ids","ep","flat","filter","value","index","self","indexOf","endpointAcc","findIndex","item","result","Object","assign"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}