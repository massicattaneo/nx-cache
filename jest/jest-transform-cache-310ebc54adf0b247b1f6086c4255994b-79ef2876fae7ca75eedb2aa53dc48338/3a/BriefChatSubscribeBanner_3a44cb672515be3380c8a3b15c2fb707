e4ca7f2568c732a7cd869867c52ce26c
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "BriefChatSubscribeBanner", {
    enumerable: true,
    get: function() {
        return BriefChatSubscribeBanner;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _reactrouterdom = require("react-router-dom");
const _material = require("@mui/material");
const _brief = require("@rp/react/tanstack-api/brief");
const _watchlist = require("@rp/react/tanstack-api/watchlist");
const _hooks = require("@rp/react/web/common/hooks");
const _core = require("@rp/react/web/mui/core");
const _icons = require("@rp/react/web/mui/icons");
const _router = require("@rp/react/web/router");
const sessionKey = (watchlistId)=>`brief-chat-subscribe-banner-${watchlistId || ""}`;
const BriefChatSubscribeBanner = ({ show, watchlistId = "", parentScrollContainer, rootMargin })=>{
    const [closed, setClosed] = (0, _react.useState)(false);
    const navigate = (0, _reactrouterdom.useNavigate)();
    const { data: briefConfigs } = (0, _brief.useUserBriefConfigs)();
    const { entities, isLoadingWatchlist, isLoadingEntities } = (0, _watchlist.useWatchlistEntities)(watchlistId);
    const hasCompanies = entities.some((item)=>item.category === "Companies");
    const [ref, setRef] = (0, _react.useState)(null);
    const subscribedBrief = briefConfigs === null || briefConfigs === void 0 ? void 0 : briefConfigs.find((brief)=>brief.watchlistIds.includes(watchlistId));
    const isBannerClosed = sessionStorage.getItem(sessionKey(watchlistId)) === "true";
    const [isOnScreen, setIsOnScreen] = (0, _react.useState)(false);
    const onIntersectionChange = (0, _react.useCallback)(([entry])=>{
        setIsOnScreen((prev)=>prev || entry.isIntersecting);
    }, []);
    (0, _hooks.useIntersectionObserver)(ref, {
        root: parentScrollContainer,
        rootMargin
    }, onIntersectionChange);
    if (!show || subscribedBrief || isBannerClosed || closed || isLoadingWatchlist || isLoadingEntities || !hasCompanies) return null;
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Box, {
        ref: setRef,
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Slide, {
            direction: "right",
            in: isOnScreen,
            mountOnEnter: true,
            unmountOnExit: true,
            timeout: 500,
            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Box, {
                sx: {
                    backgroundColor: "elevation.dp06",
                    mx: 2,
                    p: 1.5,
                    display: "flex",
                    alignItems: "center",
                    gap: 1,
                    borderRadius: 2,
                    my: 3
                },
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                        sx: {
                            fontSize: 14,
                            flexGrow: 1,
                            pl: 1
                        },
                        children: "Get email updates on your watchlist."
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Button, {
                        sx: {
                            height: 28
                        },
                        startIcon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.NotificationAddOutlined, {}),
                        variant: "contained-light",
                        size: "small",
                        onClick: ()=>navigate(`${_router.BRIEF_ROUTE_CREATE}?watchlist-id=${watchlistId}`),
                        children: "Subscribe"
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.IconButton, {
                        size: "small",
                        onClick: ()=>{
                            sessionStorage.setItem(sessionKey(watchlistId), "true");
                            setClosed(true);
                        },
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.Close, {})
                    })
                ]
            })
        })
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NoYXQvc3JjL2xpYi9CcmllZkNoYXRTdWJzY3JpYmVCYW5uZXIvQnJpZWZDaGF0U3Vic2NyaWJlQmFubmVyLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VDYWxsYmFjaywgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IHsgdXNlTmF2aWdhdGUgfSBmcm9tIFwicmVhY3Qtcm91dGVyLWRvbVwiXG5pbXBvcnQgeyBCb3ggfSBmcm9tIFwiQG11aS9tYXRlcmlhbFwiXG5pbXBvcnQgeyB1c2VVc2VyQnJpZWZDb25maWdzIH0gZnJvbSBcIkBycC9yZWFjdC90YW5zdGFjay1hcGkvYnJpZWZcIlxuaW1wb3J0IHsgdXNlV2F0Y2hsaXN0RW50aXRpZXMgfSBmcm9tIFwiQHJwL3JlYWN0L3RhbnN0YWNrLWFwaS93YXRjaGxpc3RcIlxuaW1wb3J0IHsgdXNlSW50ZXJzZWN0aW9uT2JzZXJ2ZXIgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9jb21tb24vaG9va3NcIlxuaW1wb3J0IHsgQnV0dG9uLCBJY29uQnV0dG9uLCBTbGlkZSwgVHlwb2dyYXBoeSB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL211aS9jb3JlXCJcbmltcG9ydCB7IENsb3NlLCBOb3RpZmljYXRpb25BZGRPdXRsaW5lZCB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL211aS9pY29uc1wiXG5pbXBvcnQgeyBCUklFRl9ST1VURV9DUkVBVEUgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9yb3V0ZXJcIlxuXG50eXBlIFByb3BzID0ge1xuICBzaG93OiBib29sZWFuXG4gIHdhdGNobGlzdElkOiBzdHJpbmcgfCB1bmRlZmluZWRcbiAgcGFyZW50U2Nyb2xsQ29udGFpbmVyOiBIVE1MRGl2RWxlbWVudCB8IG51bGxcbiAgcm9vdE1hcmdpbj86IHN0cmluZ1xufVxuXG5jb25zdCBzZXNzaW9uS2V5ID0gKHdhdGNobGlzdElkOiBzdHJpbmcgfCB1bmRlZmluZWQpID0+XG4gIGBicmllZi1jaGF0LXN1YnNjcmliZS1iYW5uZXItJHt3YXRjaGxpc3RJZCB8fCBcIlwifWBcblxuZXhwb3J0IGNvbnN0IEJyaWVmQ2hhdFN1YnNjcmliZUJhbm5lciA9ICh7XG4gIHNob3csXG4gIHdhdGNobGlzdElkID0gXCJcIixcbiAgcGFyZW50U2Nyb2xsQ29udGFpbmVyLFxuICByb290TWFyZ2luLFxufTogUHJvcHMpID0+IHtcbiAgY29uc3QgW2Nsb3NlZCwgc2V0Q2xvc2VkXSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBuYXZpZ2F0ZSA9IHVzZU5hdmlnYXRlKClcbiAgY29uc3QgeyBkYXRhOiBicmllZkNvbmZpZ3MgfSA9IHVzZVVzZXJCcmllZkNvbmZpZ3MoKVxuICBjb25zdCB7IGVudGl0aWVzLCBpc0xvYWRpbmdXYXRjaGxpc3QsIGlzTG9hZGluZ0VudGl0aWVzIH0gPSB1c2VXYXRjaGxpc3RFbnRpdGllcyh3YXRjaGxpc3RJZClcbiAgY29uc3QgaGFzQ29tcGFuaWVzID0gZW50aXRpZXMuc29tZShpdGVtID0+IGl0ZW0uY2F0ZWdvcnkgPT09IFwiQ29tcGFuaWVzXCIpXG4gIGNvbnN0IFtyZWYsIHNldFJlZl0gPSB1c2VTdGF0ZTxIVE1MRGl2RWxlbWVudCB8IG51bGw+KG51bGwpXG4gIGNvbnN0IHN1YnNjcmliZWRCcmllZiA9IGJyaWVmQ29uZmlncz8uZmluZChicmllZiA9PiBicmllZi53YXRjaGxpc3RJZHMuaW5jbHVkZXMod2F0Y2hsaXN0SWQpKVxuICBjb25zdCBpc0Jhbm5lckNsb3NlZCA9IHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oc2Vzc2lvbktleSh3YXRjaGxpc3RJZCkpID09PSBcInRydWVcIlxuICBjb25zdCBbaXNPblNjcmVlbiwgc2V0SXNPblNjcmVlbl0gPSB1c2VTdGF0ZShmYWxzZSlcbiAgY29uc3Qgb25JbnRlcnNlY3Rpb25DaGFuZ2UgPSB1c2VDYWxsYmFjaygoW2VudHJ5XTogQXJyYXk8SW50ZXJzZWN0aW9uT2JzZXJ2ZXJFbnRyeT4pID0+IHtcbiAgICBzZXRJc09uU2NyZWVuKHByZXYgPT4gcHJldiB8fCBlbnRyeS5pc0ludGVyc2VjdGluZylcbiAgfSwgW10pXG5cbiAgdXNlSW50ZXJzZWN0aW9uT2JzZXJ2ZXIoXG4gICAgcmVmLFxuICAgIHtcbiAgICAgIHJvb3Q6IHBhcmVudFNjcm9sbENvbnRhaW5lcixcbiAgICAgIHJvb3RNYXJnaW4sXG4gICAgfSxcbiAgICBvbkludGVyc2VjdGlvbkNoYW5nZSxcbiAgKVxuXG4gIGlmIChcbiAgICAhc2hvdyB8fFxuICAgIHN1YnNjcmliZWRCcmllZiB8fFxuICAgIGlzQmFubmVyQ2xvc2VkIHx8XG4gICAgY2xvc2VkIHx8XG4gICAgaXNMb2FkaW5nV2F0Y2hsaXN0IHx8XG4gICAgaXNMb2FkaW5nRW50aXRpZXMgfHxcbiAgICAhaGFzQ29tcGFuaWVzXG4gIClcbiAgICByZXR1cm4gbnVsbFxuXG4gIHJldHVybiAoXG4gICAgPEJveCByZWY9e3NldFJlZn0+XG4gICAgICA8U2xpZGUgZGlyZWN0aW9uPVwicmlnaHRcIiBpbj17aXNPblNjcmVlbn0gbW91bnRPbkVudGVyIHVubW91bnRPbkV4aXQgdGltZW91dD17NTAwfT5cbiAgICAgICAgPEJveFxuICAgICAgICAgIHN4PXt7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwiZWxldmF0aW9uLmRwMDZcIixcbiAgICAgICAgICAgIG14OiAyLFxuICAgICAgICAgICAgcDogMS41LFxuICAgICAgICAgICAgZGlzcGxheTogXCJmbGV4XCIsXG4gICAgICAgICAgICBhbGlnbkl0ZW1zOiBcImNlbnRlclwiLFxuICAgICAgICAgICAgZ2FwOiAxLFxuICAgICAgICAgICAgYm9yZGVyUmFkaXVzOiAyLFxuICAgICAgICAgICAgbXk6IDMsXG4gICAgICAgICAgfX1cbiAgICAgICAgPlxuICAgICAgICAgIDxUeXBvZ3JhcGh5IHN4PXt7IGZvbnRTaXplOiAxNCwgZmxleEdyb3c6IDEsIHBsOiAxIH19PlxuICAgICAgICAgICAgR2V0IGVtYWlsIHVwZGF0ZXMgb24geW91ciB3YXRjaGxpc3QuXG4gICAgICAgICAgPC9UeXBvZ3JhcGh5PlxuICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgIHN4PXt7IGhlaWdodDogMjggfX1cbiAgICAgICAgICAgIHN0YXJ0SWNvbj17PE5vdGlmaWNhdGlvbkFkZE91dGxpbmVkIC8+fVxuICAgICAgICAgICAgdmFyaWFudD1cImNvbnRhaW5lZC1saWdodFwiXG4gICAgICAgICAgICBzaXplPVwic21hbGxcIlxuICAgICAgICAgICAgb25DbGljaz17KCkgPT4gbmF2aWdhdGUoYCR7QlJJRUZfUk9VVEVfQ1JFQVRFfT93YXRjaGxpc3QtaWQ9JHt3YXRjaGxpc3RJZH1gKX1cbiAgICAgICAgICA+XG4gICAgICAgICAgICBTdWJzY3JpYmVcbiAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICA8SWNvbkJ1dHRvblxuICAgICAgICAgICAgc2l6ZT1cInNtYWxsXCJcbiAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgICAgc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbShzZXNzaW9uS2V5KHdhdGNobGlzdElkKSwgXCJ0cnVlXCIpXG4gICAgICAgICAgICAgIHNldENsb3NlZCh0cnVlKVxuICAgICAgICAgICAgfX1cbiAgICAgICAgICA+XG4gICAgICAgICAgICA8Q2xvc2UgLz5cbiAgICAgICAgICA8L0ljb25CdXR0b24+XG4gICAgICAgIDwvQm94PlxuICAgICAgPC9TbGlkZT5cbiAgICA8L0JveD5cbiAgKVxufVxuIl0sIm5hbWVzIjpbIkJyaWVmQ2hhdFN1YnNjcmliZUJhbm5lciIsInNlc3Npb25LZXkiLCJ3YXRjaGxpc3RJZCIsInNob3ciLCJwYXJlbnRTY3JvbGxDb250YWluZXIiLCJyb290TWFyZ2luIiwiY2xvc2VkIiwic2V0Q2xvc2VkIiwidXNlU3RhdGUiLCJuYXZpZ2F0ZSIsInVzZU5hdmlnYXRlIiwiZGF0YSIsImJyaWVmQ29uZmlncyIsInVzZVVzZXJCcmllZkNvbmZpZ3MiLCJlbnRpdGllcyIsImlzTG9hZGluZ1dhdGNobGlzdCIsImlzTG9hZGluZ0VudGl0aWVzIiwidXNlV2F0Y2hsaXN0RW50aXRpZXMiLCJoYXNDb21wYW5pZXMiLCJzb21lIiwiaXRlbSIsImNhdGVnb3J5IiwicmVmIiwic2V0UmVmIiwic3Vic2NyaWJlZEJyaWVmIiwiZmluZCIsImJyaWVmIiwid2F0Y2hsaXN0SWRzIiwiaW5jbHVkZXMiLCJpc0Jhbm5lckNsb3NlZCIsInNlc3Npb25TdG9yYWdlIiwiZ2V0SXRlbSIsImlzT25TY3JlZW4iLCJzZXRJc09uU2NyZWVuIiwib25JbnRlcnNlY3Rpb25DaGFuZ2UiLCJ1c2VDYWxsYmFjayIsImVudHJ5IiwicHJldiIsImlzSW50ZXJzZWN0aW5nIiwidXNlSW50ZXJzZWN0aW9uT2JzZXJ2ZXIiLCJyb290IiwiQm94IiwiU2xpZGUiLCJkaXJlY3Rpb24iLCJpbiIsIm1vdW50T25FbnRlciIsInVubW91bnRPbkV4aXQiLCJ0aW1lb3V0Iiwic3giLCJiYWNrZ3JvdW5kQ29sb3IiLCJteCIsInAiLCJkaXNwbGF5IiwiYWxpZ25JdGVtcyIsImdhcCIsImJvcmRlclJhZGl1cyIsIm15IiwiVHlwb2dyYXBoeSIsImZvbnRTaXplIiwiZmxleEdyb3ciLCJwbCIsIkJ1dHRvbiIsImhlaWdodCIsInN0YXJ0SWNvbiIsIk5vdGlmaWNhdGlvbkFkZE91dGxpbmVkIiwidmFyaWFudCIsInNpemUiLCJvbkNsaWNrIiwiQlJJRUZfUk9VVEVfQ1JFQVRFIiwiSWNvbkJ1dHRvbiIsInNldEl0ZW0iLCJDbG9zZSJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkFvQmFBOzs7ZUFBQUE7Ozs7dUJBcEJ5QjtnQ0FDVjswQkFDUjt1QkFDZ0I7MkJBQ0M7dUJBQ0c7c0JBQ2M7dUJBQ1A7d0JBQ1o7QUFTbkMsTUFBTUMsYUFBYSxDQUFDQyxjQUNsQixDQUFDLDRCQUE0QixFQUFFQSxlQUFlLEdBQUcsQ0FBQztBQUU3QyxNQUFNRiwyQkFBMkIsQ0FBQyxFQUN2Q0csSUFBSSxFQUNKRCxjQUFjLEVBQUUsRUFDaEJFLHFCQUFxQixFQUNyQkMsVUFBVSxFQUNKO0lBQ04sTUFBTSxDQUFDQyxRQUFRQyxVQUFVLEdBQUdDLElBQUFBLGVBQVEsRUFBQztJQUNyQyxNQUFNQyxXQUFXQyxJQUFBQSwyQkFBVztJQUM1QixNQUFNLEVBQUVDLE1BQU1DLFlBQVksRUFBRSxHQUFHQyxJQUFBQSwwQkFBbUI7SUFDbEQsTUFBTSxFQUFFQyxRQUFRLEVBQUVDLGtCQUFrQixFQUFFQyxpQkFBaUIsRUFBRSxHQUFHQyxJQUFBQSwrQkFBb0IsRUFBQ2Y7SUFDakYsTUFBTWdCLGVBQWVKLFNBQVNLLElBQUksQ0FBQ0MsQ0FBQUEsT0FBUUEsS0FBS0MsUUFBUSxLQUFLO0lBQzdELE1BQU0sQ0FBQ0MsS0FBS0MsT0FBTyxHQUFHZixJQUFBQSxlQUFRLEVBQXdCO0lBQ3RELE1BQU1nQixrQkFBa0JaLHlCQUFBQSxtQ0FBQUEsYUFBY2EsSUFBSSxDQUFDQyxDQUFBQSxRQUFTQSxNQUFNQyxZQUFZLENBQUNDLFFBQVEsQ0FBQzFCO0lBQ2hGLE1BQU0yQixpQkFBaUJDLGVBQWVDLE9BQU8sQ0FBQzlCLFdBQVdDLGtCQUFrQjtJQUMzRSxNQUFNLENBQUM4QixZQUFZQyxjQUFjLEdBQUd6QixJQUFBQSxlQUFRLEVBQUM7SUFDN0MsTUFBTTBCLHVCQUF1QkMsSUFBQUEsa0JBQVcsRUFBQyxDQUFDLENBQUNDLE1BQXdDO1FBQ2pGSCxjQUFjSSxDQUFBQSxPQUFRQSxRQUFRRCxNQUFNRSxjQUFjO0lBQ3BELEdBQUcsRUFBRTtJQUVMQyxJQUFBQSw4QkFBdUIsRUFDckJqQixLQUNBO1FBQ0VrQixNQUFNcEM7UUFDTkM7SUFDRixHQUNBNkI7SUFHRixJQUNFLENBQUMvQixRQUNEcUIsbUJBQ0FLLGtCQUNBdkIsVUFDQVMsc0JBQ0FDLHFCQUNBLENBQUNFLGNBRUQsT0FBTztJQUVULHFCQUNFLHFCQUFDdUIsYUFBRztRQUFDbkIsS0FBS0M7a0JBQ1IsY0FBQSxxQkFBQ21CLFdBQUs7WUFBQ0MsV0FBVTtZQUFRQyxJQUFJWjtZQUFZYSxZQUFZO1lBQUNDLGFBQWE7WUFBQ0MsU0FBUztzQkFDM0UsY0FBQSxzQkFBQ04sYUFBRztnQkFDRk8sSUFBSTtvQkFDRkMsaUJBQWlCO29CQUNqQkMsSUFBSTtvQkFDSkMsR0FBRztvQkFDSEMsU0FBUztvQkFDVEMsWUFBWTtvQkFDWkMsS0FBSztvQkFDTEMsY0FBYztvQkFDZEMsSUFBSTtnQkFDTjs7a0NBRUEscUJBQUNDLGdCQUFVO3dCQUFDVCxJQUFJOzRCQUFFVSxVQUFVOzRCQUFJQyxVQUFVOzRCQUFHQyxJQUFJO3dCQUFFO2tDQUFHOztrQ0FHdEQscUJBQUNDLFlBQU07d0JBQ0xiLElBQUk7NEJBQUVjLFFBQVE7d0JBQUc7d0JBQ2pCQyx5QkFBVyxxQkFBQ0MsOEJBQXVCO3dCQUNuQ0MsU0FBUTt3QkFDUkMsTUFBSzt3QkFDTEMsU0FBUyxJQUFNMUQsU0FBUyxDQUFDLEVBQUUyRCwwQkFBa0IsQ0FBQyxjQUFjLEVBQUVsRSxZQUFZLENBQUM7a0NBQzVFOztrQ0FHRCxxQkFBQ21FLGdCQUFVO3dCQUNUSCxNQUFLO3dCQUNMQyxTQUFTOzRCQUNQckMsZUFBZXdDLE9BQU8sQ0FBQ3JFLFdBQVdDLGNBQWM7NEJBQ2hESyxVQUFVO3dCQUNaO2tDQUVBLGNBQUEscUJBQUNnRSxZQUFLOzs7Ozs7QUFNbEIifQ==