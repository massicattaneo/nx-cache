a795f633f474ab18e1dbe613dae8e5d6
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "MovableRow", {
    enumerable: true,
    get: function() {
        return MovableRow;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _reactdnd = require("react-dnd");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const layerStyles = {
    position: "fixed",
    pointerEvents: "none",
    zIndex: 100,
    left: 0,
    top: 0,
    width: "100%",
    height: "100%"
};
function getItemStyles(initialOffset, currentOffset) {
    if (!initialOffset || !currentOffset) {
        return {
            display: "none"
        };
    }
    const transform = `translateY(${currentOffset.y}px)`;
    return {
        transform,
        WebkitTransform: transform
    };
}
function MovableRow({ Preview, width, left }) {
    const { isDragging, item, initialOffset, currentOffset } = (0, _reactdnd.useDragLayer)((monitor)=>({
            item: monitor.getItem(),
            itemType: monitor.getItemType(),
            initialOffset: monitor.getInitialSourceClientOffset(),
            currentOffset: monitor.getSourceClientOffset(),
            isDragging: monitor.isDragging()
        }));
    if (!isDragging) return null;
    var _width, _left;
    return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
        style: _object_spread_props(_object_spread({}, layerStyles, getItemStyles(initialOffset, currentOffset)), {
            width: (_width = width === null || width === void 0 ? void 0 : width()) !== null && _width !== void 0 ? _width : layerStyles.width,
            left: (_left = left === null || left === void 0 ? void 0 : left()) !== null && _left !== void 0 ? _left : layerStyles.width
        }),
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(Preview, _object_spread({}, item))
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9jb21wb3NpdGUtY29tcG9uZW50cy9zcmMvUmVPcmRlcmFibGVMaXN0L01vdmFibGVSb3cudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENTU1Byb3BlcnRpZXMsIEZvcndhcmRSZWZFeG90aWNDb21wb25lbnQsIEpTWCB9IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgeyB1c2VEcmFnTGF5ZXIgfSBmcm9tIFwicmVhY3QtZG5kXCJcbmltcG9ydCB0eXBlIHsgWFlDb29yZCB9IGZyb20gXCJyZWFjdC1kbmRcIlxuXG5jb25zdCBsYXllclN0eWxlczogQ1NTUHJvcGVydGllcyA9IHtcbiAgcG9zaXRpb246IFwiZml4ZWRcIixcbiAgcG9pbnRlckV2ZW50czogXCJub25lXCIsXG4gIHpJbmRleDogMTAwLFxuICBsZWZ0OiAwLFxuICB0b3A6IDAsXG4gIHdpZHRoOiBcIjEwMCVcIixcbiAgaGVpZ2h0OiBcIjEwMCVcIixcbn1cblxuZnVuY3Rpb24gZ2V0SXRlbVN0eWxlcyhpbml0aWFsT2Zmc2V0OiBYWUNvb3JkIHwgbnVsbCwgY3VycmVudE9mZnNldDogWFlDb29yZCB8IG51bGwpIHtcbiAgaWYgKCFpbml0aWFsT2Zmc2V0IHx8ICFjdXJyZW50T2Zmc2V0KSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGRpc3BsYXk6IFwibm9uZVwiLFxuICAgIH1cbiAgfVxuXG4gIGNvbnN0IHRyYW5zZm9ybSA9IGB0cmFuc2xhdGVZKCR7Y3VycmVudE9mZnNldC55fXB4KWBcbiAgcmV0dXJuIHtcbiAgICB0cmFuc2Zvcm0sXG4gICAgV2Via2l0VHJhbnNmb3JtOiB0cmFuc2Zvcm0sXG4gIH1cbn1cblxudHlwZSBNb3ZhYmxlUm93UHJvcHM8Um93VHlwZT4gPSB7XG4gIHdpZHRoPzogKCkgPT4gbnVtYmVyIHwgdW5kZWZpbmVkXG4gIGxlZnQ/OiAoKSA9PiBudW1iZXIgfCB1bmRlZmluZWRcbiAgUHJldmlldzpcbiAgICB8IEZvcndhcmRSZWZFeG90aWNDb21wb25lbnQ8eyBpdGVtOiBSb3dUeXBlIH0+XG4gICAgfCAoKHsgaXRlbSB9OiB7IGl0ZW06IFJvd1R5cGUgfSkgPT4gSlNYLkVsZW1lbnQpXG59XG5cbmZ1bmN0aW9uIE1vdmFibGVSb3c8Um93VHlwZT4oeyBQcmV2aWV3LCB3aWR0aCwgbGVmdCB9OiBNb3ZhYmxlUm93UHJvcHM8Um93VHlwZT4pIHtcbiAgY29uc3QgeyBpc0RyYWdnaW5nLCBpdGVtLCBpbml0aWFsT2Zmc2V0LCBjdXJyZW50T2Zmc2V0IH0gPSB1c2VEcmFnTGF5ZXIobW9uaXRvciA9PiAoe1xuICAgIGl0ZW06IG1vbml0b3IuZ2V0SXRlbSgpLFxuICAgIGl0ZW1UeXBlOiBtb25pdG9yLmdldEl0ZW1UeXBlKCksXG4gICAgaW5pdGlhbE9mZnNldDogbW9uaXRvci5nZXRJbml0aWFsU291cmNlQ2xpZW50T2Zmc2V0KCksXG4gICAgY3VycmVudE9mZnNldDogbW9uaXRvci5nZXRTb3VyY2VDbGllbnRPZmZzZXQoKSxcbiAgICBpc0RyYWdnaW5nOiBtb25pdG9yLmlzRHJhZ2dpbmcoKSxcbiAgfSkpXG5cbiAgaWYgKCFpc0RyYWdnaW5nKSByZXR1cm4gbnVsbFxuXG4gIHJldHVybiAoXG4gICAgPGRpdlxuICAgICAgc3R5bGU9e3tcbiAgICAgICAgLi4ubGF5ZXJTdHlsZXMsXG4gICAgICAgIC4uLmdldEl0ZW1TdHlsZXMoaW5pdGlhbE9mZnNldCwgY3VycmVudE9mZnNldCksXG4gICAgICAgIHdpZHRoOiB3aWR0aD8uKCkgPz8gbGF5ZXJTdHlsZXMud2lkdGgsXG4gICAgICAgIGxlZnQ6IGxlZnQ/LigpID8/IGxheWVyU3R5bGVzLndpZHRoLFxuICAgICAgfX1cbiAgICA+XG4gICAgICA8UHJldmlldyB7Li4uaXRlbX0gLz5cbiAgICA8L2Rpdj5cbiAgKVxufVxuXG5leHBvcnQgeyBNb3ZhYmxlUm93IH1cbiJdLCJuYW1lcyI6WyJNb3ZhYmxlUm93IiwibGF5ZXJTdHlsZXMiLCJwb3NpdGlvbiIsInBvaW50ZXJFdmVudHMiLCJ6SW5kZXgiLCJsZWZ0IiwidG9wIiwid2lkdGgiLCJoZWlnaHQiLCJnZXRJdGVtU3R5bGVzIiwiaW5pdGlhbE9mZnNldCIsImN1cnJlbnRPZmZzZXQiLCJkaXNwbGF5IiwidHJhbnNmb3JtIiwieSIsIldlYmtpdFRyYW5zZm9ybSIsIlByZXZpZXciLCJpc0RyYWdnaW5nIiwiaXRlbSIsInVzZURyYWdMYXllciIsIm1vbml0b3IiLCJnZXRJdGVtIiwiaXRlbVR5cGUiLCJnZXRJdGVtVHlwZSIsImdldEluaXRpYWxTb3VyY2VDbGllbnRPZmZzZXQiLCJnZXRTb3VyY2VDbGllbnRPZmZzZXQiLCJkaXYiLCJzdHlsZSJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBNkRTQTs7O2VBQUFBOzs7OzBCQTVEb0I7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRzdCLE1BQU1DLGNBQTZCO0lBQ2pDQyxVQUFVO0lBQ1ZDLGVBQWU7SUFDZkMsUUFBUTtJQUNSQyxNQUFNO0lBQ05DLEtBQUs7SUFDTEMsT0FBTztJQUNQQyxRQUFRO0FBQ1Y7QUFFQSxTQUFTQyxjQUFjQyxhQUE2QixFQUFFQyxhQUE2QjtJQUNqRixJQUFJLENBQUNELGlCQUFpQixDQUFDQyxlQUFlO1FBQ3BDLE9BQU87WUFDTEMsU0FBUztRQUNYO0lBQ0Y7SUFFQSxNQUFNQyxZQUFZLENBQUMsV0FBVyxFQUFFRixjQUFjRyxDQUFDLENBQUMsR0FBRyxDQUFDO0lBQ3BELE9BQU87UUFDTEQ7UUFDQUUsaUJBQWlCRjtJQUNuQjtBQUNGO0FBVUEsU0FBU2IsV0FBb0IsRUFBRWdCLE9BQU8sRUFBRVQsS0FBSyxFQUFFRixJQUFJLEVBQTRCO0lBQzdFLE1BQU0sRUFBRVksVUFBVSxFQUFFQyxJQUFJLEVBQUVSLGFBQWEsRUFBRUMsYUFBYSxFQUFFLEdBQUdRLElBQUFBLHNCQUFZLEVBQUNDLENBQUFBLFVBQVksQ0FBQTtZQUNsRkYsTUFBTUUsUUFBUUMsT0FBTztZQUNyQkMsVUFBVUYsUUFBUUcsV0FBVztZQUM3QmIsZUFBZVUsUUFBUUksNEJBQTRCO1lBQ25EYixlQUFlUyxRQUFRSyxxQkFBcUI7WUFDNUNSLFlBQVlHLFFBQVFILFVBQVU7UUFDaEMsQ0FBQTtJQUVBLElBQUksQ0FBQ0EsWUFBWSxPQUFPO1FBT1hWLFFBQ0RGO0lBTloscUJBQ0UscUJBQUNxQjtRQUNDQyxPQUFPLHdDQUNGMUIsYUFDQVEsY0FBY0MsZUFBZUM7WUFDaENKLE9BQU9BLENBQUFBLFNBQUFBLGtCQUFBQSw0QkFBQUEscUJBQUFBLG9CQUFBQSxTQUFhTixZQUFZTSxLQUFLO1lBQ3JDRixNQUFNQSxDQUFBQSxRQUFBQSxpQkFBQUEsMkJBQUFBLG9CQUFBQSxtQkFBQUEsUUFBWUosWUFBWU0sS0FBSzs7a0JBR3JDLGNBQUEscUJBQUNTLDRCQUFZRTs7QUFHbkIifQ==