09926a4ba3a8ab10c4fd4ff21a6f3ab2
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    getEmptySuggestion: function() {
        return getEmptySuggestion;
    },
    isCompanySuggestion: function() {
        return isCompanySuggestion;
    },
    isETFSuggestion: function() {
        return isETFSuggestion;
    },
    isEnhancedCqsItemSuggestion: function() {
        return isEnhancedCqsItemSuggestion;
    },
    isEnhancedEntityAutoSuggestion: function() {
        return isEnhancedEntityAutoSuggestion;
    },
    isEnhancedMacroAutoSuggestion: function() {
        return isEnhancedMacroAutoSuggestion;
    },
    isEnhancedSuggestionWithSubsidiaries: function() {
        return isEnhancedSuggestionWithSubsidiaries;
    },
    isEntitySuggestion: function() {
        return isEntitySuggestion;
    },
    isKeywordAutoSuggestion: function() {
        return isKeywordAutoSuggestion;
    },
    isMacroSearchSuggestion: function() {
        return isMacroSearchSuggestion;
    },
    isRecentSearchAutoSuggestion: function() {
        return isRecentSearchAutoSuggestion;
    },
    isSavedSearchSuggestion: function() {
        return isSavedSearchSuggestion;
    },
    isSourceSuggestion: function() {
        return isSourceSuggestion;
    }
});
const isMacroSearchSuggestion = (suggestion)=>{
    return "groups" in suggestion;
};
const isSavedSearchSuggestion = (suggestion)=>{
    return "queryType" in suggestion && suggestion.queryType === "savedSearch";
};
const isSourceSuggestion = (suggestion)=>{
    return "queryType" in suggestion && suggestion.queryType === "source";
};
const isCompanySuggestion = (suggestion)=>{
    return "category" in suggestion && suggestion.category === "Companies";
};
const isETFSuggestion = (suggestion)=>{
    return "category" in suggestion && suggestion.category === "ETFs";
};
const isEntitySuggestion = (suggestion)=>{
    return "entityType" in suggestion;
};
const getEmptySuggestion = (key)=>{
    const empty = {
        key,
        name: "",
        typeDesc: "",
        queryType: "entity",
        entityType: "",
        type: "",
        label: "",
        value: "",
        id: ""
    };
    return empty;
};
const isEnhancedEntityAutoSuggestion = (item)=>item.type === "entity";
const isEnhancedCqsItemSuggestion = (item)=>"queryType" in item;
const isEnhancedMacroAutoSuggestion = (item)=>item.type.startsWith("macro_");
const isEnhancedSuggestionWithSubsidiaries = (suggestion)=>{
    return Array.isArray(suggestion.subsidiaries);
};
const isKeywordAutoSuggestion = (item)=>item.type === "keyword";
const isRecentSearchAutoSuggestion = (item)=>item.type === "recent";

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3QvdGFuc3RhY2stYXBpL3N1Z2dlc3Rpb24vc3JjL3N1Z2dlc3Rpb24udHlwZS1ndWFyZHMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ29tcGFueVN1Z2dlc3Rpb24sXG4gIEVuaGFuY2VkQ3FzSXRlbVN1Z2dlc3Rpb24sXG4gIEVuaGFuY2VkRW50aXR5U3VnZ2VzdGlvbixcbiAgRW5oYW5jZWRNYWNyb1NlYXJjaFN1Z2dlc3Rpb24sXG4gIEVuaGFuY2VkU3VnZ2VzdGlvbixcbiAgRW5oYW5jZWRTdWdnZXN0aW9uV2l0aFN1YnNpZGlhcmllcyxcbiAgRW50aXR5U3VnZ2VzdGlvbixcbiAgS2V5d29yZFN1Z2dlc3Rpb24sXG4gIE1hY3JvU2VhcmNoU3VnZ2VzdGlvbixcbiAgUmVjZW50U2VhcmNoU3VnZ2VzdGlvbixcbiAgU2F2ZWRTZWFyY2hTdWdnZXN0aW9uLFxuICBTdWdnZXN0aW9uLFxufSBmcm9tIFwiLi9zdWdnZXN0aW9uLnR5cGVzXCJcblxuY29uc3QgaXNNYWNyb1NlYXJjaFN1Z2dlc3Rpb24gPSAoc3VnZ2VzdGlvbjogU3VnZ2VzdGlvbik6IHN1Z2dlc3Rpb24gaXMgTWFjcm9TZWFyY2hTdWdnZXN0aW9uID0+IHtcbiAgcmV0dXJuIFwiZ3JvdXBzXCIgaW4gc3VnZ2VzdGlvblxufVxuXG5jb25zdCBpc1NhdmVkU2VhcmNoU3VnZ2VzdGlvbiA9IChcbiAgc3VnZ2VzdGlvbjogRW5oYW5jZWRTdWdnZXN0aW9uLFxuKTogc3VnZ2VzdGlvbiBpcyBFbmhhbmNlZFN1Z2dlc3Rpb24gJiBTYXZlZFNlYXJjaFN1Z2dlc3Rpb24gPT4ge1xuICByZXR1cm4gXCJxdWVyeVR5cGVcIiBpbiBzdWdnZXN0aW9uICYmIHN1Z2dlc3Rpb24ucXVlcnlUeXBlID09PSBcInNhdmVkU2VhcmNoXCJcbn1cblxuY29uc3QgaXNTb3VyY2VTdWdnZXN0aW9uID0gKFxuICBzdWdnZXN0aW9uOiBFbmhhbmNlZFN1Z2dlc3Rpb24sXG4pOiBzdWdnZXN0aW9uIGlzIEVuaGFuY2VkU3VnZ2VzdGlvbiAmIEVudGl0eVN1Z2dlc3Rpb24gPT4ge1xuICByZXR1cm4gXCJxdWVyeVR5cGVcIiBpbiBzdWdnZXN0aW9uICYmIHN1Z2dlc3Rpb24ucXVlcnlUeXBlID09PSBcInNvdXJjZVwiXG59XG5cbmNvbnN0IGlzQ29tcGFueVN1Z2dlc3Rpb24gPSAoXG4gIHN1Z2dlc3Rpb246IEVuaGFuY2VkU3VnZ2VzdGlvbiB8IEVudGl0eVN1Z2dlc3Rpb24sXG4pOiBzdWdnZXN0aW9uIGlzIEVuaGFuY2VkU3VnZ2VzdGlvbiAmIENvbXBhbnlTdWdnZXN0aW9uID0+IHtcbiAgcmV0dXJuIFwiY2F0ZWdvcnlcIiBpbiBzdWdnZXN0aW9uICYmIHN1Z2dlc3Rpb24uY2F0ZWdvcnkgPT09IFwiQ29tcGFuaWVzXCJcbn1cblxuY29uc3QgaXNFVEZTdWdnZXN0aW9uID0gKFxuICBzdWdnZXN0aW9uOiBFbmhhbmNlZFN1Z2dlc3Rpb24sXG4pOiBzdWdnZXN0aW9uIGlzIEVuaGFuY2VkU3VnZ2VzdGlvbiAmIENvbXBhbnlTdWdnZXN0aW9uID0+IHtcbiAgcmV0dXJuIFwiY2F0ZWdvcnlcIiBpbiBzdWdnZXN0aW9uICYmIHN1Z2dlc3Rpb24uY2F0ZWdvcnkgPT09IFwiRVRGc1wiXG59XG5cbmNvbnN0IGlzRW50aXR5U3VnZ2VzdGlvbiA9IChcbiAgc3VnZ2VzdGlvbjogRW5oYW5jZWRTdWdnZXN0aW9uIHwgRW50aXR5U3VnZ2VzdGlvbixcbik6IHN1Z2dlc3Rpb24gaXMgRW50aXR5U3VnZ2VzdGlvbiA9PiB7XG4gIHJldHVybiBcImVudGl0eVR5cGVcIiBpbiBzdWdnZXN0aW9uXG59XG5cbmNvbnN0IGdldEVtcHR5U3VnZ2VzdGlvbiA9IChrZXk6IHN0cmluZykgPT4ge1xuICBjb25zdCBlbXB0eTogRW5oYW5jZWRTdWdnZXN0aW9uID0ge1xuICAgIGtleSxcbiAgICBuYW1lOiBcIlwiLFxuICAgIHR5cGVEZXNjOiBcIlwiLFxuICAgIHF1ZXJ5VHlwZTogXCJlbnRpdHlcIixcbiAgICBlbnRpdHlUeXBlOiBcIlwiLFxuICAgIHR5cGU6IFwiXCIsXG4gICAgbGFiZWw6IFwiXCIsXG4gICAgdmFsdWU6IFwiXCIsXG4gICAgaWQ6IFwiXCIsXG4gIH1cbiAgcmV0dXJuIGVtcHR5XG59XG5cbmNvbnN0IGlzRW5oYW5jZWRFbnRpdHlBdXRvU3VnZ2VzdGlvbiA9IChcbiAgaXRlbTogRW5oYW5jZWRTdWdnZXN0aW9uLFxuKTogaXRlbSBpcyBFbmhhbmNlZEVudGl0eVN1Z2dlc3Rpb24gPT4gaXRlbS50eXBlID09PSBcImVudGl0eVwiXG5jb25zdCBpc0VuaGFuY2VkQ3FzSXRlbVN1Z2dlc3Rpb24gPSAoaXRlbTogRW5oYW5jZWRTdWdnZXN0aW9uKTogaXRlbSBpcyBFbmhhbmNlZENxc0l0ZW1TdWdnZXN0aW9uID0+XG4gIFwicXVlcnlUeXBlXCIgaW4gaXRlbVxuY29uc3QgaXNFbmhhbmNlZE1hY3JvQXV0b1N1Z2dlc3Rpb24gPSAoXG4gIGl0ZW06IEVuaGFuY2VkU3VnZ2VzdGlvbixcbik6IGl0ZW0gaXMgRW5oYW5jZWRNYWNyb1NlYXJjaFN1Z2dlc3Rpb24gPT4gaXRlbS50eXBlLnN0YXJ0c1dpdGgoXCJtYWNyb19cIilcbmNvbnN0IGlzRW5oYW5jZWRTdWdnZXN0aW9uV2l0aFN1YnNpZGlhcmllcyA9IChcbiAgc3VnZ2VzdGlvbjogRW5oYW5jZWRTdWdnZXN0aW9uIHwgRW5oYW5jZWRTdWdnZXN0aW9uV2l0aFN1YnNpZGlhcmllcyxcbik6IHN1Z2dlc3Rpb24gaXMgRW5oYW5jZWRTdWdnZXN0aW9uV2l0aFN1YnNpZGlhcmllcyA9PiB7XG4gIHJldHVybiBBcnJheS5pc0FycmF5KChzdWdnZXN0aW9uIGFzIEVuaGFuY2VkU3VnZ2VzdGlvbldpdGhTdWJzaWRpYXJpZXMpLnN1YnNpZGlhcmllcylcbn1cbmNvbnN0IGlzS2V5d29yZEF1dG9TdWdnZXN0aW9uID0gKGl0ZW06IEVuaGFuY2VkU3VnZ2VzdGlvbik6IGl0ZW0gaXMgS2V5d29yZFN1Z2dlc3Rpb24gPT5cbiAgaXRlbS50eXBlID09PSBcImtleXdvcmRcIlxuY29uc3QgaXNSZWNlbnRTZWFyY2hBdXRvU3VnZ2VzdGlvbiA9IChpdGVtOiBFbmhhbmNlZFN1Z2dlc3Rpb24pOiBpdGVtIGlzIFJlY2VudFNlYXJjaFN1Z2dlc3Rpb24gPT5cbiAgaXRlbS50eXBlID09PSBcInJlY2VudFwiXG5cbmV4cG9ydCB7XG4gIGlzTWFjcm9TZWFyY2hTdWdnZXN0aW9uLFxuICBpc0NvbXBhbnlTdWdnZXN0aW9uLFxuICBpc1NvdXJjZVN1Z2dlc3Rpb24sXG4gIGdldEVtcHR5U3VnZ2VzdGlvbixcbiAgaXNTYXZlZFNlYXJjaFN1Z2dlc3Rpb24sXG4gIGlzRW5oYW5jZWRFbnRpdHlBdXRvU3VnZ2VzdGlvbixcbiAgaXNFbmhhbmNlZE1hY3JvQXV0b1N1Z2dlc3Rpb24sXG4gIGlzS2V5d29yZEF1dG9TdWdnZXN0aW9uLFxuICBpc1JlY2VudFNlYXJjaEF1dG9TdWdnZXN0aW9uLFxuICBpc0VuaGFuY2VkQ3FzSXRlbVN1Z2dlc3Rpb24sXG4gIGlzRW5oYW5jZWRTdWdnZXN0aW9uV2l0aFN1YnNpZGlhcmllcyxcbiAgaXNFbnRpdHlTdWdnZXN0aW9uLFxuICBpc0VURlN1Z2dlc3Rpb24sXG59XG4iXSwibmFtZXMiOlsiZ2V0RW1wdHlTdWdnZXN0aW9uIiwiaXNDb21wYW55U3VnZ2VzdGlvbiIsImlzRVRGU3VnZ2VzdGlvbiIsImlzRW5oYW5jZWRDcXNJdGVtU3VnZ2VzdGlvbiIsImlzRW5oYW5jZWRFbnRpdHlBdXRvU3VnZ2VzdGlvbiIsImlzRW5oYW5jZWRNYWNyb0F1dG9TdWdnZXN0aW9uIiwiaXNFbmhhbmNlZFN1Z2dlc3Rpb25XaXRoU3Vic2lkaWFyaWVzIiwiaXNFbnRpdHlTdWdnZXN0aW9uIiwiaXNLZXl3b3JkQXV0b1N1Z2dlc3Rpb24iLCJpc01hY3JvU2VhcmNoU3VnZ2VzdGlvbiIsImlzUmVjZW50U2VhcmNoQXV0b1N1Z2dlc3Rpb24iLCJpc1NhdmVkU2VhcmNoU3VnZ2VzdGlvbiIsImlzU291cmNlU3VnZ2VzdGlvbiIsInN1Z2dlc3Rpb24iLCJxdWVyeVR5cGUiLCJjYXRlZ29yeSIsImtleSIsImVtcHR5IiwibmFtZSIsInR5cGVEZXNjIiwiZW50aXR5VHlwZSIsInR5cGUiLCJsYWJlbCIsInZhbHVlIiwiaWQiLCJpdGVtIiwic3RhcnRzV2l0aCIsIkFycmF5IiwiaXNBcnJheSIsInN1YnNpZGlhcmllcyJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0lBc0ZFQSxrQkFBa0I7ZUFBbEJBOztJQUZBQyxtQkFBbUI7ZUFBbkJBOztJQVdBQyxlQUFlO2VBQWZBOztJQUhBQywyQkFBMkI7ZUFBM0JBOztJQUpBQyw4QkFBOEI7ZUFBOUJBOztJQUNBQyw2QkFBNkI7ZUFBN0JBOztJQUlBQyxvQ0FBb0M7ZUFBcENBOztJQUNBQyxrQkFBa0I7ZUFBbEJBOztJQUpBQyx1QkFBdUI7ZUFBdkJBOztJQVBBQyx1QkFBdUI7ZUFBdkJBOztJQVFBQyw0QkFBNEI7ZUFBNUJBOztJQUpBQyx1QkFBdUI7ZUFBdkJBOztJQUZBQyxrQkFBa0I7ZUFBbEJBOzs7QUF0RUYsTUFBTUgsMEJBQTBCLENBQUNJO0lBQy9CLE9BQU8sWUFBWUE7QUFDckI7QUFFQSxNQUFNRiwwQkFBMEIsQ0FDOUJFO0lBRUEsT0FBTyxlQUFlQSxjQUFjQSxXQUFXQyxTQUFTLEtBQUs7QUFDL0Q7QUFFQSxNQUFNRixxQkFBcUIsQ0FDekJDO0lBRUEsT0FBTyxlQUFlQSxjQUFjQSxXQUFXQyxTQUFTLEtBQUs7QUFDL0Q7QUFFQSxNQUFNYixzQkFBc0IsQ0FDMUJZO0lBRUEsT0FBTyxjQUFjQSxjQUFjQSxXQUFXRSxRQUFRLEtBQUs7QUFDN0Q7QUFFQSxNQUFNYixrQkFBa0IsQ0FDdEJXO0lBRUEsT0FBTyxjQUFjQSxjQUFjQSxXQUFXRSxRQUFRLEtBQUs7QUFDN0Q7QUFFQSxNQUFNUixxQkFBcUIsQ0FDekJNO0lBRUEsT0FBTyxnQkFBZ0JBO0FBQ3pCO0FBRUEsTUFBTWIscUJBQXFCLENBQUNnQjtJQUMxQixNQUFNQyxRQUE0QjtRQUNoQ0Q7UUFDQUUsTUFBTTtRQUNOQyxVQUFVO1FBQ1ZMLFdBQVc7UUFDWE0sWUFBWTtRQUNaQyxNQUFNO1FBQ05DLE9BQU87UUFDUEMsT0FBTztRQUNQQyxJQUFJO0lBQ047SUFDQSxPQUFPUDtBQUNUO0FBRUEsTUFBTWIsaUNBQWlDLENBQ3JDcUIsT0FDcUNBLEtBQUtKLElBQUksS0FBSztBQUNyRCxNQUFNbEIsOEJBQThCLENBQUNzQixPQUNuQyxlQUFlQTtBQUNqQixNQUFNcEIsZ0NBQWdDLENBQ3BDb0IsT0FDMENBLEtBQUtKLElBQUksQ0FBQ0ssVUFBVSxDQUFDO0FBQ2pFLE1BQU1wQix1Q0FBdUMsQ0FDM0NPO0lBRUEsT0FBT2MsTUFBTUMsT0FBTyxDQUFDLEFBQUNmLFdBQWtEZ0IsWUFBWTtBQUN0RjtBQUNBLE1BQU1yQiwwQkFBMEIsQ0FBQ2lCLE9BQy9CQSxLQUFLSixJQUFJLEtBQUs7QUFDaEIsTUFBTVgsK0JBQStCLENBQUNlLE9BQ3BDQSxLQUFLSixJQUFJLEtBQUsifQ==