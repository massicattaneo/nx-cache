4746ccc5b9727aa6bb7adbf207af35ce
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "CompletedFilesChip", {
    enumerable: true,
    get: function() {
        return CompletedFilesChip;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _utils = require("@rp/common/utils");
const _compositecomponents = require("@rp/react/web/common/composite-components");
const _hooks = require("@rp/react/web/common/hooks");
const _icons = require("@rp/react/web/icons");
const _core = require("@rp/react/web/mui/core");
const _icons1 = require("@rp/react/web/mui/icons");
const _ChatFilterChip = require("../ChatFilterChip");
const CompletedFilesChip = ({ files, loadingFiles, onRemove, openFilesModal })=>{
    const { isMobile } = (0, _hooks.useDeviceInfo)();
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_ChatFilterChip.ChatFilterChip, {
        label: files.length + loadingFiles.length > 1 ? "Files:" : "File:",
        onClose: ()=>{
            onRemove(files.concat(loadingFiles).map((file)=>file.id));
        },
        onClick: openFilesModal,
        children: [
            files.map((file, index)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                    sx: {
                        display: "flex",
                        gap: 1,
                        maxWidth: isMobile ? "calc(100vw - 175px)" : undefined
                    },
                    children: [
                        (0, _utils.isFileStatusError)(file.status) || file.error ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons1.WarningOutlined, {
                            color: "error"
                        }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.FileIcon, {
                            extension: file.type
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.EllipsisTooltip, {
                            tooltipText: file.name,
                            tooltipProps: {
                                PopperProps: {
                                    placement: "top"
                                }
                            },
                            typographyProps: {
                                sx: {
                                    maxWidth: 300
                                }
                            },
                            children: file.name
                        }, file.id),
                        index !== files.length - 1 ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                            sx: {
                                color: "grey.A100"
                            },
                            children: "|"
                        }) : null
                    ]
                }, file.id)),
            loadingFiles.map((file, index)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                    sx: {
                        display: "flex",
                        alignItems: "center"
                    },
                    children: [
                        index !== 0 || files.length !== 0 ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                            sx: {
                                color: "grey.A100",
                                mr: 0.25
                            },
                            children: "|"
                        }) : null,
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.CircularProgress, {
                            sx: {
                                mr: 1
                            },
                            size: 18
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.EllipsisTooltip, {
                            tooltipText: file.name,
                            tooltipProps: {
                                PopperProps: {
                                    placement: "top"
                                }
                            },
                            typographyProps: {
                                sx: {
                                    color: "grey.300",
                                    maxWidth: 300
                                }
                            },
                            children: file.name
                        }, file.id)
                    ]
                }, file.id))
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NoYXQvc3JjL2xpYi9DaGF0L0NoYXRJbnB1dC9DaGF0SW5wdXRGaWx0ZXJzL0NoYXRGaWxlcy9Db21wbGV0ZWRGaWxlc0NoaXAudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzRmlsZVN0YXR1c0Vycm9yIH0gZnJvbSBcIkBycC9jb21tb24vdXRpbHNcIlxuaW1wb3J0IHsgRmlsZVJvd1R5cGUgfSBmcm9tIFwiQHJwL2NvbW1vbi91dGlsc1wiXG5pbXBvcnQgeyBFbGxpcHNpc1Rvb2x0aXAgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9jb21tb24vY29tcG9zaXRlLWNvbXBvbmVudHNcIlxuaW1wb3J0IHsgdXNlRGV2aWNlSW5mbyB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL2NvbW1vbi9ob29rc1wiXG5pbXBvcnQgeyBGaWxlSWNvbiB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL2ljb25zXCJcbmltcG9ydCB7IEJveCwgQ2lyY3VsYXJQcm9ncmVzcywgVHlwb2dyYXBoeSB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL211aS9jb3JlXCJcbmltcG9ydCB7IFdhcm5pbmdPdXRsaW5lZCB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL211aS9pY29uc1wiXG5pbXBvcnQgeyBDaGF0RmlsdGVyQ2hpcCB9IGZyb20gXCIuLi9DaGF0RmlsdGVyQ2hpcFwiXG5cbnR5cGUgUHJvcHMgPSB7XG4gIGZpbGVzOiBBcnJheTxGaWxlUm93VHlwZT5cbiAgbG9hZGluZ0ZpbGVzOiBBcnJheTxGaWxlUm93VHlwZT5cbiAgb25SZW1vdmU6IChmaWxlczogQXJyYXk8c3RyaW5nPikgPT4gdm9pZFxuICBvcGVuRmlsZXNNb2RhbDogKCkgPT4gdm9pZFxufVxuXG5jb25zdCBDb21wbGV0ZWRGaWxlc0NoaXAgPSAoeyBmaWxlcywgbG9hZGluZ0ZpbGVzLCBvblJlbW92ZSwgb3BlbkZpbGVzTW9kYWwgfTogUHJvcHMpID0+IHtcbiAgY29uc3QgeyBpc01vYmlsZSB9ID0gdXNlRGV2aWNlSW5mbygpXG5cbiAgcmV0dXJuIChcbiAgICA8Q2hhdEZpbHRlckNoaXBcbiAgICAgIGxhYmVsPXtmaWxlcy5sZW5ndGggKyBsb2FkaW5nRmlsZXMubGVuZ3RoID4gMSA/IFwiRmlsZXM6XCIgOiBcIkZpbGU6XCJ9XG4gICAgICBvbkNsb3NlPXsoKSA9PiB7XG4gICAgICAgIG9uUmVtb3ZlKGZpbGVzLmNvbmNhdChsb2FkaW5nRmlsZXMpLm1hcChmaWxlID0+IGZpbGUuaWQpKVxuICAgICAgfX1cbiAgICAgIG9uQ2xpY2s9e29wZW5GaWxlc01vZGFsfVxuICAgID5cbiAgICAgIHtmaWxlcy5tYXAoKGZpbGUsIGluZGV4KSA9PiAoXG4gICAgICAgIDxCb3hcbiAgICAgICAgICBrZXk9e2ZpbGUuaWR9XG4gICAgICAgICAgc3g9e3sgZGlzcGxheTogXCJmbGV4XCIsIGdhcDogMSwgbWF4V2lkdGg6IGlzTW9iaWxlID8gXCJjYWxjKDEwMHZ3IC0gMTc1cHgpXCIgOiB1bmRlZmluZWQgfX1cbiAgICAgICAgPlxuICAgICAgICAgIHtpc0ZpbGVTdGF0dXNFcnJvcihmaWxlLnN0YXR1cykgfHwgZmlsZS5lcnJvciA/IChcbiAgICAgICAgICAgIDxXYXJuaW5nT3V0bGluZWQgY29sb3I9XCJlcnJvclwiIC8+XG4gICAgICAgICAgKSA6IChcbiAgICAgICAgICAgIDxGaWxlSWNvbiBleHRlbnNpb249e2ZpbGUudHlwZX0gLz5cbiAgICAgICAgICApfVxuICAgICAgICAgIDxFbGxpcHNpc1Rvb2x0aXBcbiAgICAgICAgICAgIHRvb2x0aXBUZXh0PXtmaWxlLm5hbWV9XG4gICAgICAgICAgICBrZXk9e2ZpbGUuaWR9XG4gICAgICAgICAgICB0b29sdGlwUHJvcHM9e3tcbiAgICAgICAgICAgICAgUG9wcGVyUHJvcHM6IHsgcGxhY2VtZW50OiBcInRvcFwiIH0sXG4gICAgICAgICAgICB9fVxuICAgICAgICAgICAgdHlwb2dyYXBoeVByb3BzPXt7XG4gICAgICAgICAgICAgIHN4OiB7XG4gICAgICAgICAgICAgICAgbWF4V2lkdGg6IDMwMCxcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH19XG4gICAgICAgICAgPlxuICAgICAgICAgICAge2ZpbGUubmFtZX1cbiAgICAgICAgICA8L0VsbGlwc2lzVG9vbHRpcD5cbiAgICAgICAgICB7aW5kZXggIT09IGZpbGVzLmxlbmd0aCAtIDEgPyAoXG4gICAgICAgICAgICA8VHlwb2dyYXBoeSBzeD17eyBjb2xvcjogXCJncmV5LkExMDBcIiB9fT58PC9UeXBvZ3JhcGh5PlxuICAgICAgICAgICkgOiBudWxsfVxuICAgICAgICA8L0JveD5cbiAgICAgICkpfVxuICAgICAge2xvYWRpbmdGaWxlcy5tYXAoKGZpbGUsIGluZGV4KSA9PiAoXG4gICAgICAgIDxCb3ggc3g9e3sgZGlzcGxheTogXCJmbGV4XCIsIGFsaWduSXRlbXM6IFwiY2VudGVyXCIgfX0ga2V5PXtmaWxlLmlkfT5cbiAgICAgICAgICB7aW5kZXggIT09IDAgfHwgZmlsZXMubGVuZ3RoICE9PSAwID8gKFxuICAgICAgICAgICAgPFR5cG9ncmFwaHkgc3g9e3sgY29sb3I6IFwiZ3JleS5BMTAwXCIsIG1yOiAwLjI1IH19Pnw8L1R5cG9ncmFwaHk+XG4gICAgICAgICAgKSA6IG51bGx9XG4gICAgICAgICAgPENpcmN1bGFyUHJvZ3Jlc3Mgc3g9e3sgbXI6IDEgfX0gc2l6ZT17MTh9IC8+XG4gICAgICAgICAgPEVsbGlwc2lzVG9vbHRpcFxuICAgICAgICAgICAgdG9vbHRpcFRleHQ9e2ZpbGUubmFtZX1cbiAgICAgICAgICAgIGtleT17ZmlsZS5pZH1cbiAgICAgICAgICAgIHRvb2x0aXBQcm9wcz17e1xuICAgICAgICAgICAgICBQb3BwZXJQcm9wczogeyBwbGFjZW1lbnQ6IFwidG9wXCIgfSxcbiAgICAgICAgICAgIH19XG4gICAgICAgICAgICB0eXBvZ3JhcGh5UHJvcHM9e3tcbiAgICAgICAgICAgICAgc3g6IHtcbiAgICAgICAgICAgICAgICBjb2xvcjogXCJncmV5LjMwMFwiLFxuICAgICAgICAgICAgICAgIG1heFdpZHRoOiAzMDAsXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9fVxuICAgICAgICAgID5cbiAgICAgICAgICAgIHtmaWxlLm5hbWV9XG4gICAgICAgICAgPC9FbGxpcHNpc1Rvb2x0aXA+XG4gICAgICAgIDwvQm94PlxuICAgICAgKSl9XG4gICAgPC9DaGF0RmlsdGVyQ2hpcD5cbiAgKVxufVxuZXhwb3J0IHsgQ29tcGxldGVkRmlsZXNDaGlwIH1cbiJdLCJuYW1lcyI6WyJDb21wbGV0ZWRGaWxlc0NoaXAiLCJmaWxlcyIsImxvYWRpbmdGaWxlcyIsIm9uUmVtb3ZlIiwib3BlbkZpbGVzTW9kYWwiLCJpc01vYmlsZSIsInVzZURldmljZUluZm8iLCJDaGF0RmlsdGVyQ2hpcCIsImxhYmVsIiwibGVuZ3RoIiwib25DbG9zZSIsImNvbmNhdCIsIm1hcCIsImZpbGUiLCJpZCIsIm9uQ2xpY2siLCJpbmRleCIsIkJveCIsInN4IiwiZGlzcGxheSIsImdhcCIsIm1heFdpZHRoIiwidW5kZWZpbmVkIiwiaXNGaWxlU3RhdHVzRXJyb3IiLCJzdGF0dXMiLCJlcnJvciIsIldhcm5pbmdPdXRsaW5lZCIsImNvbG9yIiwiRmlsZUljb24iLCJleHRlbnNpb24iLCJ0eXBlIiwiRWxsaXBzaXNUb29sdGlwIiwidG9vbHRpcFRleHQiLCJuYW1lIiwidG9vbHRpcFByb3BzIiwiUG9wcGVyUHJvcHMiLCJwbGFjZW1lbnQiLCJ0eXBvZ3JhcGh5UHJvcHMiLCJUeXBvZ3JhcGh5IiwiYWxpZ25JdGVtcyIsIm1yIiwiQ2lyY3VsYXJQcm9ncmVzcyIsInNpemUiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQWtGU0E7OztlQUFBQTs7Ozt1QkFsRnlCO3FDQUVGO3VCQUNGO3VCQUNMO3NCQUN5Qjt3QkFDbEI7Z0NBQ0Q7QUFTL0IsTUFBTUEscUJBQXFCLENBQUMsRUFBRUMsS0FBSyxFQUFFQyxZQUFZLEVBQUVDLFFBQVEsRUFBRUMsY0FBYyxFQUFTO0lBQ2xGLE1BQU0sRUFBRUMsUUFBUSxFQUFFLEdBQUdDLElBQUFBLG9CQUFhO0lBRWxDLHFCQUNFLHNCQUFDQyw4QkFBYztRQUNiQyxPQUFPUCxNQUFNUSxNQUFNLEdBQUdQLGFBQWFPLE1BQU0sR0FBRyxJQUFJLFdBQVc7UUFDM0RDLFNBQVM7WUFDUFAsU0FBU0YsTUFBTVUsTUFBTSxDQUFDVCxjQUFjVSxHQUFHLENBQUNDLENBQUFBLE9BQVFBLEtBQUtDLEVBQUU7UUFDekQ7UUFDQUMsU0FBU1g7O1lBRVJILE1BQU1XLEdBQUcsQ0FBQyxDQUFDQyxNQUFNRyxzQkFDaEIsc0JBQUNDLFNBQUc7b0JBRUZDLElBQUk7d0JBQUVDLFNBQVM7d0JBQVFDLEtBQUs7d0JBQUdDLFVBQVVoQixXQUFXLHdCQUF3QmlCO29CQUFVOzt3QkFFckZDLElBQUFBLHdCQUFpQixFQUFDVixLQUFLVyxNQUFNLEtBQUtYLEtBQUtZLEtBQUssaUJBQzNDLHFCQUFDQyx1QkFBZTs0QkFBQ0MsT0FBTTsyQ0FFdkIscUJBQUNDLGVBQVE7NEJBQUNDLFdBQVdoQixLQUFLaUIsSUFBSTs7c0NBRWhDLHFCQUFDQyxvQ0FBZTs0QkFDZEMsYUFBYW5CLEtBQUtvQixJQUFJOzRCQUV0QkMsY0FBYztnQ0FDWkMsYUFBYTtvQ0FBRUMsV0FBVztnQ0FBTTs0QkFDbEM7NEJBQ0FDLGlCQUFpQjtnQ0FDZm5CLElBQUk7b0NBQ0ZHLFVBQVU7Z0NBQ1o7NEJBQ0Y7c0NBRUNSLEtBQUtvQixJQUFJOzJCQVZMcEIsS0FBS0MsRUFBRTt3QkFZYkUsVUFBVWYsTUFBTVEsTUFBTSxHQUFHLGtCQUN4QixxQkFBQzZCLGdCQUFVOzRCQUFDcEIsSUFBSTtnQ0FBRVMsT0FBTzs0QkFBWTtzQ0FBRzs2QkFDdEM7O21CQXhCQ2QsS0FBS0MsRUFBRTtZQTJCZlosYUFBYVUsR0FBRyxDQUFDLENBQUNDLE1BQU1HLHNCQUN2QixzQkFBQ0MsU0FBRztvQkFBQ0MsSUFBSTt3QkFBRUMsU0FBUzt3QkFBUW9CLFlBQVk7b0JBQVM7O3dCQUM5Q3ZCLFVBQVUsS0FBS2YsTUFBTVEsTUFBTSxLQUFLLGtCQUMvQixxQkFBQzZCLGdCQUFVOzRCQUFDcEIsSUFBSTtnQ0FBRVMsT0FBTztnQ0FBYWEsSUFBSTs0QkFBSztzQ0FBRzs2QkFDaEQ7c0NBQ0oscUJBQUNDLHNCQUFnQjs0QkFBQ3ZCLElBQUk7Z0NBQUVzQixJQUFJOzRCQUFFOzRCQUFHRSxNQUFNOztzQ0FDdkMscUJBQUNYLG9DQUFlOzRCQUNkQyxhQUFhbkIsS0FBS29CLElBQUk7NEJBRXRCQyxjQUFjO2dDQUNaQyxhQUFhO29DQUFFQyxXQUFXO2dDQUFNOzRCQUNsQzs0QkFDQUMsaUJBQWlCO2dDQUNmbkIsSUFBSTtvQ0FDRlMsT0FBTztvQ0FDUE4sVUFBVTtnQ0FDWjs0QkFDRjtzQ0FFQ1IsS0FBS29CLElBQUk7MkJBWExwQixLQUFLQyxFQUFFOzttQkFQeUNELEtBQUtDLEVBQUU7OztBQXdCeEUifQ==