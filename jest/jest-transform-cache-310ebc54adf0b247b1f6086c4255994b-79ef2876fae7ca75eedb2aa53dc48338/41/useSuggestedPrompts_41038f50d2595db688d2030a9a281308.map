{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/common/hooks/src/lib/useSuggestedPrompts/useSuggestedPrompts.tsx"],"sourcesContent":["import { useMemo } from \"react\"\nimport { filterSuggestedPrompts } from \"./filterSuggestedPrompts\"\nimport { Filters, SuggestedPromptsData } from \"./suggestedPrompts.types\"\nimport { usePrompts } from \"./usePrompts\"\n\nconst useSuggestedPrompts = (filters?: Filters) => {\n  const { data: promptsData, ...restPrompts } = usePrompts()\n\n  const memoFilters = useMemo(() => {\n    const memo: Filters = {\n      textFilter: filters?.textFilter,\n      watchlistPrompts: filters?.watchlistPrompts,\n      includeTopics: filters?.includeTopics,\n      includeTask: filters?.includeTask,\n      includeScopes: filters?.includeScopes,\n      datasets: filters?.datasets,\n      includeDatasets: filters?.includeDatasets,\n      isFreeTierEnabled: filters?.isFreeTierEnabled,\n      hasEntitlement: filters?.hasEntitlement,\n      timestamp: filters?.timestamp,\n    }\n    return memo\n    // TODO: memoize hasEntitlement to add it as a dependency\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    filters?.datasets,\n    filters?.includeDatasets,\n    filters?.includeScopes,\n    filters?.includeTask,\n    filters?.includeTopics,\n    filters?.isFreeTierEnabled,\n    filters?.textFilter,\n    filters?.timestamp,\n    filters?.watchlistPrompts,\n  ])\n\n  // TODO refactor\n  const data: SuggestedPromptsData | undefined = useMemo(() => {\n    if (!promptsData?.prompts) return undefined\n    const prompts = filterSuggestedPrompts(promptsData, memoFilters)\n    return {\n      topics: {\n        Popular: promptsData.topics[\"Popular\"],\n        ...promptsData.topics,\n      },\n      prompts: prompts.prompts,\n    }\n  }, [memoFilters, promptsData])\n\n  return {\n    isLoading: restPrompts.isLoading,\n    data,\n    refetchPrompts: restPrompts.refetch,\n    isRefetching: restPrompts.isRefetching,\n  }\n}\n\nexport { useSuggestedPrompts }\n"],"names":["useSuggestedPrompts","filters","usePrompts","data","promptsData","restPrompts","memoFilters","useMemo","memo","textFilter","watchlistPrompts","includeTopics","includeTask","includeScopes","datasets","includeDatasets","isFreeTierEnabled","hasEntitlement","timestamp","prompts","undefined","filterSuggestedPrompts","topics","Popular","isLoading","refetchPrompts","refetch","isRefetching"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAyDSA;;;eAAAA;;;uBAzDe;wCACe;4BAEZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAE3B,MAAMA,sBAAsB,CAACC;IAC3B,MAA8CC,eAAAA,IAAAA,sBAAU,KAAlD,EAAEC,MAAMC,WAAW,EAAkB,GAAGF,cAAhBG,yCAAgBH;QAAtCC;;IAER,MAAMG,cAAcC,IAAAA,cAAO,EAAC;QAC1B,MAAMC,OAAgB;YACpBC,UAAU,EAAER,oBAAAA,8BAAAA,QAASQ,UAAU;YAC/BC,gBAAgB,EAAET,oBAAAA,8BAAAA,QAASS,gBAAgB;YAC3CC,aAAa,EAAEV,oBAAAA,8BAAAA,QAASU,aAAa;YACrCC,WAAW,EAAEX,oBAAAA,8BAAAA,QAASW,WAAW;YACjCC,aAAa,EAAEZ,oBAAAA,8BAAAA,QAASY,aAAa;YACrCC,QAAQ,EAAEb,oBAAAA,8BAAAA,QAASa,QAAQ;YAC3BC,eAAe,EAAEd,oBAAAA,8BAAAA,QAASc,eAAe;YACzCC,iBAAiB,EAAEf,oBAAAA,8BAAAA,QAASe,iBAAiB;YAC7CC,cAAc,EAAEhB,oBAAAA,8BAAAA,QAASgB,cAAc;YACvCC,SAAS,EAAEjB,oBAAAA,8BAAAA,QAASiB,SAAS;QAC/B;QACA,OAAOV;IACP,yDAAyD;IACzD,uDAAuD;IACzD,GAAG;QACDP,oBAAAA,8BAAAA,QAASa,QAAQ;QACjBb,oBAAAA,8BAAAA,QAASc,eAAe;QACxBd,oBAAAA,8BAAAA,QAASY,aAAa;QACtBZ,oBAAAA,8BAAAA,QAASW,WAAW;QACpBX,oBAAAA,8BAAAA,QAASU,aAAa;QACtBV,oBAAAA,8BAAAA,QAASe,iBAAiB;QAC1Bf,oBAAAA,8BAAAA,QAASQ,UAAU;QACnBR,oBAAAA,8BAAAA,QAASiB,SAAS;QAClBjB,oBAAAA,8BAAAA,QAASS,gBAAgB;KAC1B;IAED,gBAAgB;IAChB,MAAMP,OAAyCI,IAAAA,cAAO,EAAC;QACrD,IAAI,EAACH,wBAAAA,kCAAAA,YAAae,OAAO,GAAE,OAAOC;QAClC,MAAMD,UAAUE,IAAAA,8CAAsB,EAACjB,aAAaE;QACpD,OAAO;YACLgB,QAAQ;gBACNC,SAASnB,YAAYkB,MAAM,CAAC,UAAU;eACnClB,YAAYkB,MAAM;YAEvBH,SAASA,QAAQA,OAAO;QAC1B;IACF,GAAG;QAACb;QAAaF;KAAY;IAE7B,OAAO;QACLoB,WAAWnB,YAAYmB,SAAS;QAChCrB;QACAsB,gBAAgBpB,YAAYqB,OAAO;QACnCC,cAActB,YAAYsB,YAAY;IACxC;AACF"}