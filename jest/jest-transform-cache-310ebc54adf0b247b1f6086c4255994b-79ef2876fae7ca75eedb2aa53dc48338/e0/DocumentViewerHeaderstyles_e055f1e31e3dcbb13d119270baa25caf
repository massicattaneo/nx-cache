82b67323224f778e39ef831b7d14c619
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    DocumentTitleLarge: function() {
        return DocumentTitleLarge;
    },
    DocumentTitleSmall: function() {
        return DocumentTitleSmall;
    },
    DocumentViewerHeaderContainer: function() {
        return DocumentViewerHeaderContainer;
    },
    DocumentViewerSubheader: function() {
        return DocumentViewerSubheader;
    },
    DocumentViewerTitleContainer: function() {
        return DocumentViewerTitleContainer;
    },
    RpJsonToolbarStyled: function() {
        return RpJsonToolbarStyled;
    }
});
const _theme = require("@rp/react/theme");
const _hooks = require("@rp/react/web/common/hooks");
const _core = require("@rp/react/web/mui/core");
const _rpjson = require("@rp/react/web/rpjson");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const DocumentViewerHeaderContainer = (0, _theme.styled)("div", {
    name: "ContentStyled"
})(()=>({
        "& hr": {
            border: "none"
        }
    }));
const DocumentViewerTitleContainer = (0, _theme.styled)(_core.Box)(({ theme })=>{
    const { isMobile } = (0, _hooks.useDeviceInfo)();
    return {
        background: theme.palette.surface.main,
        display: "flex",
        alignItems: "flex-start",
        flexShrink: 0,
        flexDirection: "column",
        paddingTop: theme.spacing(2),
        paddingBottom: theme.spacing(0.5),
        paddingRight: isMobile ? theme.spacing(2) : theme.spacing(4)
    };
});
const commonDocumentTitleStyles = {
    fontSize: 26,
    fontWeight: "bold",
    padding: 0,
    margin: 0,
    marginBottom: "12px"
};
const DocumentTitleSmall = (0, _theme.styled)(_rpjson.RpJsonTitleDisplay)({
    "& p": _object_spread_props(_object_spread({}, commonDocumentTitleStyles), {
        wordBreak: "break-word",
        whiteSpace: "nowrap",
        overflow: "hidden",
        textOverflow: "ellipsis"
    })
});
const DocumentTitleLarge = (0, _theme.styled)(_rpjson.RpJsonTitleDisplay)({
    "& p": _object_spread({}, commonDocumentTitleStyles)
});
const DocumentViewerSubheader = (0, _theme.styled)("div")(({ theme })=>({
        display: "flex",
        justifyContent: "space-between",
        alignItems: "center",
        width: "100%",
        "& > div": {
            marginBlock: theme.spacing(1.5)
        }
    }));
const RpJsonToolbarStyled = (0, _theme.styled)(_rpjson.RpJsonToolbar, {
    shouldForwardProp: (prop)=>prop !== "shouldDisplayControls"
})(({ customBackgroundColor, theme })=>({
        "&": {
            backgroundColor: customBackgroundColor !== null && customBackgroundColor !== void 0 ? customBackgroundColor : theme.palette.surface.main,
            paddingBottom: theme.spacing(1.5),
            paddingRight: theme.spacing(4),
            width: "100%"
        },
        "& .MuiFormControl-root": {
            background: theme.palette.grey[700],
            "& fieldset": {
                borderColor: "transparent"
            },
            "&:hover fieldset": {
                borderColor: theme.palette.grey[300],
                cursor: "pointer"
            },
            "& .Mui-focused fieldset, &:hover .Mui-focused fieldset": {
                borderColor: theme.palette.primary.main,
                cursor: "pointer",
                borderWidth: "1px"
            }
        },
        "& button": {
            background: theme.palette.grey[900],
            color: theme.palette.grey[100],
            borderRadius: "4px"
        },
        "& button svg, & .MuiCheckbox-root svg": {
            width: "16px"
        }
    }));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2RvY3VtZW50LXZpZXdlci9zcmMvbGliL0RvY3VtZW50Vmlld2VySGVhZGVyLnN0eWxlcy50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc3R5bGVkIH0gZnJvbSBcIkBycC9yZWFjdC90aGVtZVwiXG5pbXBvcnQgeyB1c2VEZXZpY2VJbmZvIH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvY29tbW9uL2hvb2tzXCJcbmltcG9ydCB7IEJveCB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL211aS9jb3JlXCJcbmltcG9ydCB7IFJwSnNvblRpdGxlRGlzcGxheSwgUnBKc29uVG9vbGJhciB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL3JwanNvblwiXG5cbmNvbnN0IERvY3VtZW50Vmlld2VySGVhZGVyQ29udGFpbmVyID0gc3R5bGVkKFwiZGl2XCIsIHsgbmFtZTogXCJDb250ZW50U3R5bGVkXCIgfSkoKCkgPT4gKHtcbiAgXCImIGhyXCI6IHtcbiAgICBib3JkZXI6IFwibm9uZVwiLFxuICB9LFxufSkpXG5cbmNvbnN0IERvY3VtZW50Vmlld2VyVGl0bGVDb250YWluZXIgPSBzdHlsZWQoQm94KSgoeyB0aGVtZSB9KSA9PiB7XG4gIGNvbnN0IHsgaXNNb2JpbGUgfSA9IHVzZURldmljZUluZm8oKVxuICByZXR1cm4ge1xuICAgIGJhY2tncm91bmQ6IHRoZW1lLnBhbGV0dGUuc3VyZmFjZS5tYWluLFxuICAgIGRpc3BsYXk6IFwiZmxleFwiLFxuICAgIGFsaWduSXRlbXM6IFwiZmxleC1zdGFydFwiLFxuICAgIGZsZXhTaHJpbms6IDAsXG4gICAgZmxleERpcmVjdGlvbjogXCJjb2x1bW5cIixcbiAgICBwYWRkaW5nVG9wOiB0aGVtZS5zcGFjaW5nKDIpLFxuICAgIHBhZGRpbmdCb3R0b206IHRoZW1lLnNwYWNpbmcoMC41KSxcbiAgICBwYWRkaW5nUmlnaHQ6IGlzTW9iaWxlID8gdGhlbWUuc3BhY2luZygyKSA6IHRoZW1lLnNwYWNpbmcoNCksXG4gIH1cbn0pXG5cbmNvbnN0IGNvbW1vbkRvY3VtZW50VGl0bGVTdHlsZXMgPSB7XG4gIGZvbnRTaXplOiAyNixcbiAgZm9udFdlaWdodDogXCJib2xkXCIsXG4gIHBhZGRpbmc6IDAsXG4gIG1hcmdpbjogMCxcbiAgbWFyZ2luQm90dG9tOiBcIjEycHhcIixcbn1cblxuY29uc3QgRG9jdW1lbnRUaXRsZVNtYWxsID0gc3R5bGVkKFJwSnNvblRpdGxlRGlzcGxheSkoe1xuICBcIiYgcFwiOiB7XG4gICAgLi4uY29tbW9uRG9jdW1lbnRUaXRsZVN0eWxlcyxcbiAgICB3b3JkQnJlYWs6IFwiYnJlYWstd29yZFwiLFxuICAgIHdoaXRlU3BhY2U6IFwibm93cmFwXCIsXG4gICAgb3ZlcmZsb3c6IFwiaGlkZGVuXCIsXG4gICAgdGV4dE92ZXJmbG93OiBcImVsbGlwc2lzXCIsXG4gIH0sXG59KVxuXG5jb25zdCBEb2N1bWVudFRpdGxlTGFyZ2UgPSBzdHlsZWQoUnBKc29uVGl0bGVEaXNwbGF5KSh7XG4gIFwiJiBwXCI6IHtcbiAgICAuLi5jb21tb25Eb2N1bWVudFRpdGxlU3R5bGVzLFxuICB9LFxufSlcblxuY29uc3QgRG9jdW1lbnRWaWV3ZXJTdWJoZWFkZXIgPSBzdHlsZWQoXCJkaXZcIikoKHsgdGhlbWUgfSkgPT4gKHtcbiAgZGlzcGxheTogXCJmbGV4XCIsXG4gIGp1c3RpZnlDb250ZW50OiBcInNwYWNlLWJldHdlZW5cIixcbiAgYWxpZ25JdGVtczogXCJjZW50ZXJcIixcbiAgd2lkdGg6IFwiMTAwJVwiLFxuXG4gIFwiJiA+IGRpdlwiOiB7XG4gICAgbWFyZ2luQmxvY2s6IHRoZW1lLnNwYWNpbmcoMS41KSxcbiAgfSxcbn0pKVxuXG5jb25zdCBScEpzb25Ub29sYmFyU3R5bGVkID0gc3R5bGVkKFJwSnNvblRvb2xiYXIsIHtcbiAgc2hvdWxkRm9yd2FyZFByb3A6IHByb3AgPT4gcHJvcCAhPT0gXCJzaG91bGREaXNwbGF5Q29udHJvbHNcIixcbn0pPHsgY3VzdG9tQmFja2dyb3VuZENvbG9yPzogc3RyaW5nIH0+KCh7IGN1c3RvbUJhY2tncm91bmRDb2xvciwgdGhlbWUgfSkgPT4gKHtcbiAgXCImXCI6IHtcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IGN1c3RvbUJhY2tncm91bmRDb2xvciA/PyB0aGVtZS5wYWxldHRlLnN1cmZhY2UubWFpbixcbiAgICBwYWRkaW5nQm90dG9tOiB0aGVtZS5zcGFjaW5nKDEuNSksXG4gICAgcGFkZGluZ1JpZ2h0OiB0aGVtZS5zcGFjaW5nKDQpLFxuICAgIHdpZHRoOiBcIjEwMCVcIixcbiAgfSxcbiAgXCImIC5NdWlGb3JtQ29udHJvbC1yb290XCI6IHtcbiAgICBiYWNrZ3JvdW5kOiB0aGVtZS5wYWxldHRlLmdyZXlbNzAwXSxcbiAgICBcIiYgZmllbGRzZXRcIjoge1xuICAgICAgYm9yZGVyQ29sb3I6IFwidHJhbnNwYXJlbnRcIixcbiAgICB9LFxuICAgIFwiJjpob3ZlciBmaWVsZHNldFwiOiB7XG4gICAgICBib3JkZXJDb2xvcjogdGhlbWUucGFsZXR0ZS5ncmV5WzMwMF0sXG4gICAgICBjdXJzb3I6IFwicG9pbnRlclwiLFxuICAgIH0sXG4gICAgXCImIC5NdWktZm9jdXNlZCBmaWVsZHNldCwgJjpob3ZlciAuTXVpLWZvY3VzZWQgZmllbGRzZXRcIjoge1xuICAgICAgYm9yZGVyQ29sb3I6IHRoZW1lLnBhbGV0dGUucHJpbWFyeS5tYWluLFxuICAgICAgY3Vyc29yOiBcInBvaW50ZXJcIixcbiAgICAgIGJvcmRlcldpZHRoOiBcIjFweFwiLFxuICAgIH0sXG4gIH0sXG4gIFwiJiBidXR0b25cIjoge1xuICAgIGJhY2tncm91bmQ6IHRoZW1lLnBhbGV0dGUuZ3JleVs5MDBdLFxuICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLmdyZXlbMTAwXSxcbiAgICBib3JkZXJSYWRpdXM6IFwiNHB4XCIsXG4gIH0sXG4gIFwiJiBidXR0b24gc3ZnLCAmIC5NdWlDaGVja2JveC1yb290IHN2Z1wiOiB7XG4gICAgd2lkdGg6IFwiMTZweFwiLFxuICB9LFxufSkpXG5cbmV4cG9ydCB7XG4gIERvY3VtZW50Vmlld2VySGVhZGVyQ29udGFpbmVyLFxuICBEb2N1bWVudFZpZXdlclRpdGxlQ29udGFpbmVyLFxuICBEb2N1bWVudFRpdGxlU21hbGwsXG4gIERvY3VtZW50VGl0bGVMYXJnZSxcbiAgRG9jdW1lbnRWaWV3ZXJTdWJoZWFkZXIsXG4gIFJwSnNvblRvb2xiYXJTdHlsZWQsXG59XG4iXSwibmFtZXMiOlsiRG9jdW1lbnRUaXRsZUxhcmdlIiwiRG9jdW1lbnRUaXRsZVNtYWxsIiwiRG9jdW1lbnRWaWV3ZXJIZWFkZXJDb250YWluZXIiLCJEb2N1bWVudFZpZXdlclN1YmhlYWRlciIsIkRvY3VtZW50Vmlld2VyVGl0bGVDb250YWluZXIiLCJScEpzb25Ub29sYmFyU3R5bGVkIiwic3R5bGVkIiwibmFtZSIsImJvcmRlciIsIkJveCIsInRoZW1lIiwiaXNNb2JpbGUiLCJ1c2VEZXZpY2VJbmZvIiwiYmFja2dyb3VuZCIsInBhbGV0dGUiLCJzdXJmYWNlIiwibWFpbiIsImRpc3BsYXkiLCJhbGlnbkl0ZW1zIiwiZmxleFNocmluayIsImZsZXhEaXJlY3Rpb24iLCJwYWRkaW5nVG9wIiwic3BhY2luZyIsInBhZGRpbmdCb3R0b20iLCJwYWRkaW5nUmlnaHQiLCJjb21tb25Eb2N1bWVudFRpdGxlU3R5bGVzIiwiZm9udFNpemUiLCJmb250V2VpZ2h0IiwicGFkZGluZyIsIm1hcmdpbiIsIm1hcmdpbkJvdHRvbSIsIlJwSnNvblRpdGxlRGlzcGxheSIsIndvcmRCcmVhayIsIndoaXRlU3BhY2UiLCJvdmVyZmxvdyIsInRleHRPdmVyZmxvdyIsImp1c3RpZnlDb250ZW50Iiwid2lkdGgiLCJtYXJnaW5CbG9jayIsIlJwSnNvblRvb2xiYXIiLCJzaG91bGRGb3J3YXJkUHJvcCIsInByb3AiLCJjdXN0b21CYWNrZ3JvdW5kQ29sb3IiLCJiYWNrZ3JvdW5kQ29sb3IiLCJncmV5IiwiYm9yZGVyQ29sb3IiLCJjdXJzb3IiLCJwcmltYXJ5IiwiYm9yZGVyV2lkdGgiLCJjb2xvciIsImJvcmRlclJhZGl1cyJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0lBa0dFQSxrQkFBa0I7ZUFBbEJBOztJQURBQyxrQkFBa0I7ZUFBbEJBOztJQUZBQyw2QkFBNkI7ZUFBN0JBOztJQUlBQyx1QkFBdUI7ZUFBdkJBOztJQUhBQyw0QkFBNEI7ZUFBNUJBOztJQUlBQyxtQkFBbUI7ZUFBbkJBOzs7dUJBcEdxQjt1QkFDTztzQkFDVjt3QkFDOEI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRWxELE1BQU1ILGdDQUFnQ0ksSUFBQUEsYUFBTSxFQUFDLE9BQU87SUFBRUMsTUFBTTtBQUFnQixHQUFHLElBQU8sQ0FBQTtRQUNwRixRQUFRO1lBQ05DLFFBQVE7UUFDVjtJQUNGLENBQUE7QUFFQSxNQUFNSiwrQkFBK0JFLElBQUFBLGFBQU0sRUFBQ0csU0FBRyxFQUFFLENBQUMsRUFBRUMsS0FBSyxFQUFFO0lBQ3pELE1BQU0sRUFBRUMsUUFBUSxFQUFFLEdBQUdDLElBQUFBLG9CQUFhO0lBQ2xDLE9BQU87UUFDTEMsWUFBWUgsTUFBTUksT0FBTyxDQUFDQyxPQUFPLENBQUNDLElBQUk7UUFDdENDLFNBQVM7UUFDVEMsWUFBWTtRQUNaQyxZQUFZO1FBQ1pDLGVBQWU7UUFDZkMsWUFBWVgsTUFBTVksT0FBTyxDQUFDO1FBQzFCQyxlQUFlYixNQUFNWSxPQUFPLENBQUM7UUFDN0JFLGNBQWNiLFdBQVdELE1BQU1ZLE9BQU8sQ0FBQyxLQUFLWixNQUFNWSxPQUFPLENBQUM7SUFDNUQ7QUFDRjtBQUVBLE1BQU1HLDRCQUE0QjtJQUNoQ0MsVUFBVTtJQUNWQyxZQUFZO0lBQ1pDLFNBQVM7SUFDVEMsUUFBUTtJQUNSQyxjQUFjO0FBQ2hCO0FBRUEsTUFBTTdCLHFCQUFxQkssSUFBQUEsYUFBTSxFQUFDeUIsMEJBQWtCLEVBQUU7SUFDcEQsT0FBTyx3Q0FDRk47UUFDSE8sV0FBVztRQUNYQyxZQUFZO1FBQ1pDLFVBQVU7UUFDVkMsY0FBYzs7QUFFbEI7QUFFQSxNQUFNbkMscUJBQXFCTSxJQUFBQSxhQUFNLEVBQUN5QiwwQkFBa0IsRUFBRTtJQUNwRCxPQUFPLG1CQUNGTjtBQUVQO0FBRUEsTUFBTXRCLDBCQUEwQkcsSUFBQUEsYUFBTSxFQUFDLE9BQU8sQ0FBQyxFQUFFSSxLQUFLLEVBQUUsR0FBTSxDQUFBO1FBQzVETyxTQUFTO1FBQ1RtQixnQkFBZ0I7UUFDaEJsQixZQUFZO1FBQ1ptQixPQUFPO1FBRVAsV0FBVztZQUNUQyxhQUFhNUIsTUFBTVksT0FBTyxDQUFDO1FBQzdCO0lBQ0YsQ0FBQTtBQUVBLE1BQU1qQixzQkFBc0JDLElBQUFBLGFBQU0sRUFBQ2lDLHFCQUFhLEVBQUU7SUFDaERDLG1CQUFtQkMsQ0FBQUEsT0FBUUEsU0FBUztBQUN0QyxHQUF1QyxDQUFDLEVBQUVDLHFCQUFxQixFQUFFaEMsS0FBSyxFQUFFLEdBQU0sQ0FBQTtRQUM1RSxLQUFLO1lBQ0hpQyxpQkFBaUJELGtDQUFBQSxtQ0FBQUEsd0JBQXlCaEMsTUFBTUksT0FBTyxDQUFDQyxPQUFPLENBQUNDLElBQUk7WUFDcEVPLGVBQWViLE1BQU1ZLE9BQU8sQ0FBQztZQUM3QkUsY0FBY2QsTUFBTVksT0FBTyxDQUFDO1lBQzVCZSxPQUFPO1FBQ1Q7UUFDQSwwQkFBMEI7WUFDeEJ4QixZQUFZSCxNQUFNSSxPQUFPLENBQUM4QixJQUFJLENBQUMsSUFBSTtZQUNuQyxjQUFjO2dCQUNaQyxhQUFhO1lBQ2Y7WUFDQSxvQkFBb0I7Z0JBQ2xCQSxhQUFhbkMsTUFBTUksT0FBTyxDQUFDOEIsSUFBSSxDQUFDLElBQUk7Z0JBQ3BDRSxRQUFRO1lBQ1Y7WUFDQSwwREFBMEQ7Z0JBQ3hERCxhQUFhbkMsTUFBTUksT0FBTyxDQUFDaUMsT0FBTyxDQUFDL0IsSUFBSTtnQkFDdkM4QixRQUFRO2dCQUNSRSxhQUFhO1lBQ2Y7UUFDRjtRQUNBLFlBQVk7WUFDVm5DLFlBQVlILE1BQU1JLE9BQU8sQ0FBQzhCLElBQUksQ0FBQyxJQUFJO1lBQ25DSyxPQUFPdkMsTUFBTUksT0FBTyxDQUFDOEIsSUFBSSxDQUFDLElBQUk7WUFDOUJNLGNBQWM7UUFDaEI7UUFDQSx5Q0FBeUM7WUFDdkNiLE9BQU87UUFDVDtJQUNGLENBQUEifQ==