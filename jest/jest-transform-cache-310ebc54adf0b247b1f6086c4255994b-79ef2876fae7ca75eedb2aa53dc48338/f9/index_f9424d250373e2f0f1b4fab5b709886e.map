{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/node_modules/estree-util-is-identifier-name/lib/index.js"],"sourcesContent":["/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [jsx=false]\n *   Support JSX identifiers (default: `false`).\n */\n\nconst startRe = /[$_\\p{ID_Start}]/u\nconst contRe = /[$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst contReJsx = /[-$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst nameRe = /^[$_\\p{ID_Start}][$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\nconst nameReJsx = /^[$_\\p{ID_Start}][-$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Checks if the given code point can start an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @returns {boolean}\n *   Whether `code` can start an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function start(code) {\n  return code ? startRe.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given code point can continue an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `code` can continue an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function cont(code, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? contReJsx : contRe\n  return code ? re.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given value is a valid identifier name.\n *\n * @param {string} name\n *   Identifier to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `name` can be an identifier.\n */\nexport function name(name, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? nameReJsx : nameRe\n  return re.test(name)\n}\n"],"names":["cont","name","start","startRe","contRe","contReJsx","nameRe","nameReJsx","emptyOptions","code","test","String","fromCodePoint","options","settings","re","jsx"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA;;;;;CAKC;;;;;;;;;;;IAmCeA,IAAI;eAAJA;;IAgBAC,IAAI;eAAJA;;IA/BAC,KAAK;eAALA;;;AAlBhB,MAAMC,UAAU;AAChB,MAAMC,SAAS;AACf,MAAMC,YAAY;AAClB,MAAMC,SAAS;AACf,MAAMC,YAAY;AAElB,oBAAoB,GACpB,MAAMC,eAAe,CAAC;AAWf,SAASN,MAAMO,IAAI;IACxB,OAAOA,OAAON,QAAQO,IAAI,CAACC,OAAOC,aAAa,CAACH,SAAS;AAC3D;AAaO,SAAST,KAAKS,IAAI,EAAEI,OAAO;IAChC,MAAMC,WAAWD,WAAWL;IAC5B,MAAMO,KAAKD,SAASE,GAAG,GAAGX,YAAYD;IACtC,OAAOK,OAAOM,GAAGL,IAAI,CAACC,OAAOC,aAAa,CAACH,SAAS;AACtD;AAYO,SAASR,KAAKA,IAAI,EAAEY,OAAO;IAChC,MAAMC,WAAWD,WAAWL;IAC5B,MAAMO,KAAKD,SAASE,GAAG,GAAGT,YAAYD;IACtC,OAAOS,GAAGL,IAAI,CAACT;AACjB"}