{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/node_modules/mdast-util-to-hast/lib/handlers/list-item.js"],"sourcesContent":["/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === null || spread === undefined\n    ? node.children.length > 1\n    : spread\n}\n"],"names":["listItem","state","node","parent","results","all","loose","listLoose","listItemLoose","properties","children","checked","head","paragraph","type","tagName","unshift","length","value","disabled","className","index","child","push","tail","result","patch","applyData","spread","undefined"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA;;;;;;;CAOC,GAED,mDAAmD;AACnD;;;;;+BAcgBA;;;eAAAA;;;AAAT,SAASA,SAASC,KAAK,EAAEC,IAAI,EAAEC,MAAM;IAC1C,MAAMC,UAAUH,MAAMI,GAAG,CAACH;IAC1B,MAAMI,QAAQH,SAASI,UAAUJ,UAAUK,cAAcN;IACzD,uBAAuB,GACvB,MAAMO,aAAa,CAAC;IACpB,kCAAkC,GAClC,MAAMC,WAAW,EAAE;IAEnB,IAAI,OAAOR,KAAKS,OAAO,KAAK,WAAW;QACrC,MAAMC,OAAOR,OAAO,CAAC,EAAE;QACvB,oBAAoB,GACpB,IAAIS;QAEJ,IAAID,QAAQA,KAAKE,IAAI,KAAK,aAAaF,KAAKG,OAAO,KAAK,KAAK;YAC3DF,YAAYD;QACd,OAAO;YACLC,YAAY;gBAACC,MAAM;gBAAWC,SAAS;gBAAKN,YAAY,CAAC;gBAAGC,UAAU,EAAE;YAAA;YACxEN,QAAQY,OAAO,CAACH;QAClB;QAEA,IAAIA,UAAUH,QAAQ,CAACO,MAAM,GAAG,GAAG;YACjCJ,UAAUH,QAAQ,CAACM,OAAO,CAAC;gBAACF,MAAM;gBAAQI,OAAO;YAAG;QACtD;QAEAL,UAAUH,QAAQ,CAACM,OAAO,CAAC;YACzBF,MAAM;YACNC,SAAS;YACTN,YAAY;gBAACK,MAAM;gBAAYH,SAAST,KAAKS,OAAO;gBAAEQ,UAAU;YAAI;YACpET,UAAU,EAAE;QACd;QAEA,6DAA6D;QAC7D,8DAA8D;QAC9DD,WAAWW,SAAS,GAAG;YAAC;SAAiB;IAC3C;IAEA,IAAIC,QAAQ,CAAC;IAEb,MAAO,EAAEA,QAAQjB,QAAQa,MAAM,CAAE;QAC/B,MAAMK,QAAQlB,OAAO,CAACiB,MAAM;QAE5B,qEAAqE;QACrE,IACEf,SACAe,UAAU,KACVC,MAAMR,IAAI,KAAK,aACfQ,MAAMP,OAAO,KAAK,KAClB;YACAL,SAASa,IAAI,CAAC;gBAACT,MAAM;gBAAQI,OAAO;YAAI;QAC1C;QAEA,IAAII,MAAMR,IAAI,KAAK,aAAaQ,MAAMP,OAAO,KAAK,OAAO,CAACT,OAAO;YAC/DI,SAASa,IAAI,IAAID,MAAMZ,QAAQ;QACjC,OAAO;YACLA,SAASa,IAAI,CAACD;QAChB;IACF;IAEA,MAAME,OAAOpB,OAAO,CAACA,QAAQa,MAAM,GAAG,EAAE;IAExC,mBAAmB;IACnB,IAAIO,QAASlB,CAAAA,SAASkB,KAAKV,IAAI,KAAK,aAAaU,KAAKT,OAAO,KAAK,GAAE,GAAI;QACtEL,SAASa,IAAI,CAAC;YAACT,MAAM;YAAQI,OAAO;QAAI;IAC1C;IAEA,oBAAoB,GACpB,MAAMO,SAAS;QAACX,MAAM;QAAWC,SAAS;QAAMN;QAAYC;IAAQ;IACpET,MAAMyB,KAAK,CAACxB,MAAMuB;IAClB,OAAOxB,MAAM0B,SAAS,CAACzB,MAAMuB;AAC/B;AAEA;;;CAGC,GACD,SAASlB,UAAUL,IAAI;IACrB,IAAII,QAAQ;IACZ,IAAIJ,KAAKY,IAAI,KAAK,QAAQ;QACxBR,QAAQJ,KAAK0B,MAAM,IAAI;QACvB,MAAMlB,WAAWR,KAAKQ,QAAQ;QAC9B,IAAIW,QAAQ,CAAC;QAEb,MAAO,CAACf,SAAS,EAAEe,QAAQX,SAASO,MAAM,CAAE;YAC1CX,QAAQE,cAAcE,QAAQ,CAACW,MAAM;QACvC;IACF;IAEA,OAAOf;AACT;AAEA;;;CAGC,GACD,SAASE,cAAcN,IAAI;IACzB,MAAM0B,SAAS1B,KAAK0B,MAAM;IAE1B,OAAOA,WAAW,QAAQA,WAAWC,YACjC3B,KAAKQ,QAAQ,CAACO,MAAM,GAAG,IACvBW;AACN"}