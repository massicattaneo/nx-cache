0efd855693480f49eeab12e659945b29
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    isLlmDocumentSource: function() {
        return isLlmDocumentSource;
    },
    isLlmEngineSource: function() {
        return isLlmEngineSource;
    },
    isLlmErrorSummaryMessage: function() {
        return isLlmErrorSummaryMessage;
    },
    isLlmExternalSource: function() {
        return isLlmExternalSource;
    },
    isLlmStandardSource: function() {
        return isLlmStandardSource;
    }
});
const isLlmErrorSummaryMessage = (msg)=>{
    return msg.type === undefined;
};
const isLlmDocumentSource = (source)=>{
    return source.type === "DOCUMENT";
};
const isLlmExternalSource = (source)=>{
    return source.type === "EXTERNAL";
};
const isLlmEngineSource = (source)=>{
    return source.type === "ENGINE";
};
const isLlmStandardSource = (source)=>{
    return source.type === "DOCUMENT" || source.type === "EXTERNAL";
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3QvdGFuc3RhY2stYXBpL2xsbS1zdW1tYXJ5L3NyYy9sbG0tc3VtbWFyeS50eXBlcy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDcXNDaHVua1N0b3J5IH0gZnJvbSBcIkBycC9jb21tb24vYXBpLXR5cGVzXCJcblxudHlwZSBMbG1TdW1tYXJ5U291cmNlID0ge1xuICBpZDogc3RyaW5nXG4gIHNyY0tleTogc3RyaW5nXG4gIHNyY05hbWU6IHN0cmluZ1xuICBoZDogc3RyaW5nXG4gIGltYWdlVXJscz86IEFycmF5PHN0cmluZz4gfCBudWxsXG4gIGNodW5rcz86IENxc0NodW5rU3RvcnlbXCJjaHVua3NcIl1cbn1cblxudHlwZSBMbG1TdW1tYXJ5Q3FzU3RvcnkgPSBQaWNrPFxuICBDcXNDaHVua1N0b3J5LFxuICB8IFwiY2h1bmtzXCJcbiAgfCBcImRvY3VtZW50U2NvcGVcIlxuICB8IFwiaGRcIlxuICB8IFwiaWRcIlxuICB8IFwibGFuZ3VhZ2VcIlxuICB8IFwic3JjS2V5XCJcbiAgfCBcInNyY05hbWVcIlxuICB8IFwidHNcIlxuICB8IFwiY29udGVudFR5cGVcIlxuICB8IFwicnBQcm92aWRlcklkXCJcbiAgfCBcInVybFwiXG4+ICYgeyBkb2N1bWVudFR5cGU6IHN0cmluZyB8IG51bGwgfVxudHlwZSBMbG1FeHRlcm5hbFN0b3J5ID0ge1xuICBpZD86IHN0cmluZ1xuICBoZDogc3RyaW5nXG4gIHRleHQ6IHN0cmluZ1xuICBhY3Rpb246IHtcbiAgICB0eXBlOiBcIkVYVEVSTkFMXCJcbiAgICBuYW1lOiBzdHJpbmdcbiAgICBoZDogc3RyaW5nXG4gICAgdXJsOiBzdHJpbmdcbiAgICBmYXZpY29uVXJsOiBzdHJpbmdcbiAgfVxuICB0cz86IHN0cmluZ1xuICBtZXRhZGF0YT86IHVua25vd25cbn1cblxudHlwZSBMbG1FbmdpbmVTb3VyY2UgPSB7XG4gIHR5cGU6IFwiRU5HSU5FXCJcbiAgbmFtZTogc3RyaW5nXG4gIGZhdmljb25Vcmw6IHN0cmluZ1xuICBzcmNLZXk6IHN0cmluZ1xufVxuXG50eXBlIExsbUV4dGVybmFsU291cmNlID0ge1xuICB0eXBlOiBcIkVYVEVSTkFMXCJcbiAgbmFtZTogc3RyaW5nXG4gIGhkOiBzdHJpbmdcbiAgdXJsOiBzdHJpbmdcbiAgZmF2aWNvblVybDogc3RyaW5nXG59XG5cbnR5cGUgTGxtRG9jdW1lbnRTb3VyY2UgPSB7XG4gIHR5cGU6IFwiRE9DVU1FTlRcIlxuICBuYW1lOiBzdHJpbmdcbiAgaGQ6IHN0cmluZ1xuICBpZDogc3RyaW5nXG4gIHNyY0tleTogc3RyaW5nXG4gIHJwUHJvdmlkZXJJZD86IHN0cmluZ1xuICBpbWFnZVVybHM/OiBBcnJheTxzdHJpbmc+IHwgbnVsbFxuICB1cmw/OiBzdHJpbmdcbn1cblxudHlwZSBMbG1Tb3VyY2VzTWVzc2FnZSA9IHtcbiAgdHlwZTogXCJTT1VSQ0VTXCJcbiAgb3JpZ2luU291cmNlczogQXJyYXk8TGxtRXh0ZXJuYWxTb3VyY2UgfCBMbG1Eb2N1bWVudFNvdXJjZSB8IExsbUVuZ2luZVNvdXJjZT5cbiAgc291cmNlczogQXJyYXk8TGxtU3VtbWFyeVNvdXJjZT4gLy8gVGhpcyBpcyB1c2VkIGJ5IHRoZSBvbGQgY3FzIHN1bW1hcnkgLSAgYW5kIGl0IGlzIHJlbW92ZWQgZnJvbSBCRVxuICBtZXRhZGF0YT86IExsbVNvdXJjZXNNZXRhZGF0YVxufVxuXG50eXBlIExsbVF1ZXN0aW9uID0ge1xuICBxdWVyeTogc3RyaW5nXG4gIHN0b3JpZXM6IEFycmF5PENxc0NodW5rU3Rvcnk+XG59XG5cbnR5cGUgTGxtQ3FzVHJhY2UgPSB7XG4gIHR5cGU6IFwiQ1FTXCJcbiAgdmFsdWVzOiBBcnJheTxMbG1TdW1tYXJ5Q3FzU3Rvcnk+XG59XG5cbnR5cGUgTGxtRXh0ZXJuYWxUcmFjZSA9IHtcbiAgdHlwZTogXCJFWFRFUk5BTFwiXG4gIHZhbHVlczogQXJyYXk8TGxtRXh0ZXJuYWxTdG9yeT5cbn1cblxudHlwZSBMbG1BdWRpdFRyYWNlTWVzc2FnZSA9IHtcbiAgdHlwZTogXCJBVURJVF9UUkFDRVwiXG4gIHRyYWNlOiB7XG4gICAgcXVlcnk6IHsgdGV4dDogc3RyaW5nOyBmaWx0ZXJzPzogeyBlbnRpdGllcz86IHsgYWxsX29mPzogQXJyYXk8c3RyaW5nPiB9IH0gfVxuICAgIHJlc3VsdHM6IEFycmF5PExsbUNxc1RyYWNlIHwgTGxtRXh0ZXJuYWxUcmFjZT5cbiAgICBxdWVyeUlkOiBudW1iZXJcbiAgfVxufVxuXG50eXBlIExsbVByb2ZpbGluZ01lc3NhZ2UgPSB7XG4gIHR5cGU6IFwiUFJPRklMSU5HXCJcbiAgcmVxdWVzdElkOiBzdHJpbmdcbiAgbWVzc2FnZURlbHRhTXM/OiBudWxsXG4gIFwieC1hbXotcmVxdWVzdGlkP1wiOiBudWxsXG4gIHR0ZnQ6IG51bWJlclxuICB0aW1lVG9Db21wbGV0aW9uOiBudW1iZXJcbiAgcm91dGluZ1Jlc3BvbnNlVGltZTogbnVtYmVyXG4gIHNlYXJjaFJlc3BvbnNlVGltZTogbnVtYmVyXG4gIHNvdXJjZUltYWdlc1Jlc3BvbnNlVGltZTogbnVtYmVyXG4gIHNvdXJjZUltYWdlc0NvdW50OiBudW1iZXJcbiAgY3FzUmVzcG9uc2VUaW1lcz86IEFycmF5PG51bWJlcj4gfCBudWxsXG4gIGNxc1F1ZXJ5Q291bnQ6IG51bWJlclxuICBzZXJwUmVzcG9uc2VUaW1lcz86IEFycmF5PG51bWJlcj4gfCBudWxsXG4gIHNlcnBRdWVyeUNvdW50OiBudW1iZXJcbiAgc3VtbWFyaXplclR0ZnQ6IG51bWJlclxufVxuXG50eXBlIExsbVRleHRDb250ZW50ID0ge1xuICB0eXBlOiBcIlRFWFRcIlxuICB2YWx1ZTogc3RyaW5nXG59XG5cbi8vIFRoaXMgdHlwZSBkb2VzIG5vdCBhY3R1YWxseSBleGlzdFxudHlwZSBMbG1JZEJsb2NrID0ge1xuICB0eXBlOiBcIk5FWFRfSURcIlxuICBpZDogc3RyaW5nXG4gIGNvbnRlbnQ6IExsbVRleHRDb250ZW50XG59XG5cbnR5cGUgTGxtU3VtbWFyeU1lc3NhZ2UgPSB7XG4gIHR5cGU6IFwiTkVYVFwiIHwgXCJGQUlMRURcIiB8IFwiTk9fQ09OVEVOVFwiXG4gIGNvbnRlbnQ6IHN0cmluZ1xuICBibG9jaz86IExsbUlkQmxvY2sgfCBFbmdpbmVDaGFydENvbnRlbnRcbn1cblxudHlwZSBMbG1TdGF0dXNUZXh0TWVzc2FnZSA9IHtcbiAgdHlwZTogXCJTVEFUVVNcIlxuICBtZXNzYWdlOiBzdHJpbmdcbn1cblxudHlwZSBMbG1TdGF0dXNRdWVyeSA9IHtcbiAgdHlwZTogXCJTVEFUVVNfUVVFUllcIlxuICBxdWVyaWVzOiBBcnJheTx7IHF1ZXJ5OiBzdHJpbmc7IHF1ZXJ5SWQ6IG51bWJlciB9PlxufVxuXG50eXBlIExsbVN0YXR1c1Jlc2V0ID0ge1xuICB0eXBlOiBcIlNUQVRVU19SRVNFVFwiXG4gIG1lc3NhZ2U/OiBzdHJpbmdcbn1cblxudHlwZSBMbG1TdGF0dXNDb2xsYXBzZSA9IHtcbiAgdHlwZTogXCJTVEFUVVNfQ09MTEFQU0VcIlxuICB0aXRsZTogc3RyaW5nXG4gIGNvbnRlbnQ6IExsbVRleHRDb250ZW50XG59XG5cbnR5cGUgTGxtU3RhdHVzU291cmNlc0VuZCA9IHtcbiAgdHlwZTogXCJTVEFUVVNfQ09OQ0xVRElOR1wiXG4gIG1lc3NhZ2U/OiBzdHJpbmdcbn1cblxudHlwZSBMbG1TdGF0dXNNZXNzYWdlID1cbiAgfCBMbG1TdGF0dXNUZXh0TWVzc2FnZVxuICB8IExsbVN0YXR1c1Jlc2V0XG4gIHwgTGxtU3RhdHVzUXVlcnlcbiAgfCBMbG1TdGF0dXNTb3VyY2VzRW5kXG4gIHwgTGxtU3RhdHVzQ29sbGFwc2VcblxudHlwZSBFbmdpbmVDaGFydENvbnRlbnQgPSB7XG4gIHR5cGU6IFwiRU5HSU5FXCJcbiAgYW5zd2VyOiBzdHJpbmdcbiAgZXhwbGFpbmVyOiBzdHJpbmdcbiAgd2lkZ2V0U3BlYzogQXJyYXk8UmVjb3JkPHN0cmluZywgdW5rbm93bj4+IHwgbnVsbFxuICB3aWRnZXRTcGVjVXJsOiBzdHJpbmcgfCBudWxsXG4gIGlzU3VjY2Vzc2Z1bEFuc3dlcjogYm9vbGVhblxufVxuXG50eXBlIExsbU1ldGFkYXRhID0ge1xuICBpbWFnZVVybHM/OiBBcnJheTxzdHJpbmc+XG59XG5cbnR5cGUgTGxtU291cmNlc01ldGFkYXRhID0ge1xuICBbZG9jdW1lbnRJZDogc3RyaW5nXTogTGxtTWV0YWRhdGFcbn1cblxudHlwZSBMbG1Db21wbGV0ZWRTdW1tYXJ5TWVzc2FnZSA9IHtcbiAgdHlwZTogXCJDT01QTEVURVwiXG4gIGNvbnRlbnRCbG9jaz86IEVuZ2luZUNoYXJ0Q29udGVudFxuICBhdWRpdEJsb2Nrcz86IFN0b3JlZFJlc3BvbnNlQmxvY2tMaXN0XG4gIGludGVyYWN0aW9uVGltZXN0YW1wOiBzdHJpbmdcbn1cblxudHlwZSBMbG1FcnJvclN1bW1hcnlNZXNzYWdlID0ge1xuICB0eXBlOiB1bmRlZmluZWRcbiAgbWVzc2FnZTogc3RyaW5nXG59XG5cbnR5cGUgTExNRm9sbG93VXBNZXNzYWdlID0ge1xuICB0eXBlOiBcIkZPTExPV19VUFwiXG4gIGZvbGxvd1VwOiB7XG4gICAgcXVlcmllczogQXJyYXk8eyBxdWVyeTogc3RyaW5nIH0+XG4gIH1cbn1cblxudHlwZSBDb2xsYXBzYWJsZUJsb2NrID0ge1xuICB0eXBlOiBcIkNPTExBUFNFXCJcbiAgdGl0bGU6IHN0cmluZ1xuICBjb250ZW50OiBMbG1UZXh0Q29udGVudFxufVxudHlwZSBSZXNwb25zZUJsb2NrID0gRW5naW5lQ2hhcnRDb250ZW50IHwgTGxtVGV4dENvbnRlbnRcbnR5cGUgU3RvcmVkUmVzcG9uc2VCbG9ja0xpc3QgPSBBcnJheTxMbG1UZXh0Q29udGVudCB8IENvbGxhcHNhYmxlQmxvY2sgfCBFbmdpbmVDaGFydENvbnRlbnQ+XG5cbnR5cGUgTGxtTWVzc2FnZSA9XG4gIHwgTGxtU291cmNlc01lc3NhZ2VcbiAgfCBMbG1TdW1tYXJ5TWVzc2FnZVxuICB8IExsbUNvbXBsZXRlZFN1bW1hcnlNZXNzYWdlXG4gIHwgTGxtQXVkaXRUcmFjZU1lc3NhZ2VcbiAgfCBMbG1Qcm9maWxpbmdNZXNzYWdlXG4gIHwgTGxtRXJyb3JTdW1tYXJ5TWVzc2FnZVxuICB8IExsbVN0YXR1c01lc3NhZ2VcbiAgfCBMTE1Gb2xsb3dVcE1lc3NhZ2VcblxuZXhwb3J0IGNvbnN0IGlzTGxtRXJyb3JTdW1tYXJ5TWVzc2FnZSA9IChtc2c6IExsbU1lc3NhZ2UpOiBtc2cgaXMgTGxtRXJyb3JTdW1tYXJ5TWVzc2FnZSA9PiB7XG4gIHJldHVybiBtc2cudHlwZSA9PT0gdW5kZWZpbmVkXG59XG5cbmV4cG9ydCBjb25zdCBpc0xsbURvY3VtZW50U291cmNlID0gKFxuICBzb3VyY2U6IExsbURvY3VtZW50U291cmNlIHwgTGxtRXh0ZXJuYWxTb3VyY2UgfCBMbG1FbmdpbmVTb3VyY2UsXG4pOiBzb3VyY2UgaXMgTGxtRG9jdW1lbnRTb3VyY2UgPT4ge1xuICByZXR1cm4gc291cmNlLnR5cGUgPT09IFwiRE9DVU1FTlRcIlxufVxuXG5leHBvcnQgY29uc3QgaXNMbG1FeHRlcm5hbFNvdXJjZSA9IChcbiAgc291cmNlOiBMbG1Eb2N1bWVudFNvdXJjZSB8IExsbUV4dGVybmFsU291cmNlIHwgTGxtRW5naW5lU291cmNlLFxuKTogc291cmNlIGlzIExsbUV4dGVybmFsU291cmNlID0+IHtcbiAgcmV0dXJuIHNvdXJjZS50eXBlID09PSBcIkVYVEVSTkFMXCJcbn1cblxuZXhwb3J0IGNvbnN0IGlzTGxtRW5naW5lU291cmNlID0gKFxuICBzb3VyY2U6IExsbURvY3VtZW50U291cmNlIHwgTGxtRXh0ZXJuYWxTb3VyY2UgfCBMbG1FbmdpbmVTb3VyY2UsXG4pOiBzb3VyY2UgaXMgTGxtRW5naW5lU291cmNlID0+IHtcbiAgcmV0dXJuIHNvdXJjZS50eXBlID09PSBcIkVOR0lORVwiXG59XG5cbmV4cG9ydCBjb25zdCBpc0xsbVN0YW5kYXJkU291cmNlID0gKFxuICBzb3VyY2U6IExsbURvY3VtZW50U291cmNlIHwgTGxtRXh0ZXJuYWxTb3VyY2UgfCBMbG1FbmdpbmVTb3VyY2UsXG4pOiBzb3VyY2UgaXMgTGxtRG9jdW1lbnRTb3VyY2UgfCBMbG1FeHRlcm5hbFNvdXJjZSA9PiB7XG4gIHJldHVybiBzb3VyY2UudHlwZSA9PT0gXCJET0NVTUVOVFwiIHx8IHNvdXJjZS50eXBlID09PSBcIkVYVEVSTkFMXCJcbn1cblxuZXhwb3J0IHR5cGUge1xuICBMbG1TdW1tYXJ5U291cmNlLFxuICBMbG1Tb3VyY2VzTWVzc2FnZSxcbiAgTGxtU3VtbWFyeU1lc3NhZ2UsXG4gIExsbUF1ZGl0VHJhY2VNZXNzYWdlLFxuICBMbG1Qcm9maWxpbmdNZXNzYWdlLFxuICBMTE1Gb2xsb3dVcE1lc3NhZ2UsXG4gIExsbU1lc3NhZ2UsXG4gIExsbVF1ZXN0aW9uLFxuICBMbG1Eb2N1bWVudFNvdXJjZSxcbiAgTGxtRXh0ZXJuYWxTb3VyY2UsXG4gIExsbUVuZ2luZVNvdXJjZSxcbiAgTGxtU3VtbWFyeUNxc1N0b3J5LFxuICBMbG1FeHRlcm5hbFN0b3J5LFxuICBMbG1DcXNUcmFjZSxcbiAgTGxtRXh0ZXJuYWxUcmFjZSxcbiAgRW5naW5lQ2hhcnRDb250ZW50LFxuICBMbG1UZXh0Q29udGVudCxcbiAgTGxtU291cmNlc01ldGFkYXRhLFxuICBMbG1NZXRhZGF0YSxcbiAgTGxtU3RhdHVzTWVzc2FnZSxcbiAgTGxtU3RhdHVzVGV4dE1lc3NhZ2UsXG4gIExsbVN0YXR1c1F1ZXJ5LFxuICBMbG1TdGF0dXNSZXNldCxcbiAgTGxtU3RhdHVzU291cmNlc0VuZCxcbiAgTGxtSWRCbG9jayxcbiAgUmVzcG9uc2VCbG9jayxcbiAgU3RvcmVkUmVzcG9uc2VCbG9ja0xpc3QsXG4gIENvbGxhcHNhYmxlQmxvY2ssXG59XG4iXSwibmFtZXMiOlsiaXNMbG1Eb2N1bWVudFNvdXJjZSIsImlzTGxtRW5naW5lU291cmNlIiwiaXNMbG1FcnJvclN1bW1hcnlNZXNzYWdlIiwiaXNMbG1FeHRlcm5hbFNvdXJjZSIsImlzTGxtU3RhbmRhcmRTb3VyY2UiLCJtc2ciLCJ0eXBlIiwidW5kZWZpbmVkIiwic291cmNlIl0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztJQWdPYUEsbUJBQW1CO2VBQW5CQTs7SUFZQUMsaUJBQWlCO2VBQWpCQTs7SUFoQkFDLHdCQUF3QjtlQUF4QkE7O0lBVUFDLG1CQUFtQjtlQUFuQkE7O0lBWUFDLG1CQUFtQjtlQUFuQkE7OztBQXRCTixNQUFNRiwyQkFBMkIsQ0FBQ0c7SUFDdkMsT0FBT0EsSUFBSUMsSUFBSSxLQUFLQztBQUN0QjtBQUVPLE1BQU1QLHNCQUFzQixDQUNqQ1E7SUFFQSxPQUFPQSxPQUFPRixJQUFJLEtBQUs7QUFDekI7QUFFTyxNQUFNSCxzQkFBc0IsQ0FDakNLO0lBRUEsT0FBT0EsT0FBT0YsSUFBSSxLQUFLO0FBQ3pCO0FBRU8sTUFBTUwsb0JBQW9CLENBQy9CTztJQUVBLE9BQU9BLE9BQU9GLElBQUksS0FBSztBQUN6QjtBQUVPLE1BQU1GLHNCQUFzQixDQUNqQ0k7SUFFQSxPQUFPQSxPQUFPRixJQUFJLEtBQUssY0FBY0UsT0FBT0YsSUFBSSxLQUFLO0FBQ3ZEIn0=