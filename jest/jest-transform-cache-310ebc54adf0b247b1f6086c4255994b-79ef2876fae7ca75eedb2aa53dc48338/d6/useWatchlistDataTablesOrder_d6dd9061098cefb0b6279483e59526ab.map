{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/watchlists/src/lib/WatchlistDataTabs/useWatchlistDataTablesOrder.ts"],"sourcesContent":["import { Dispatch, SetStateAction, useCallback, useMemo } from \"react\"\nimport { useLocalStorage } from \"@rp/react/web/common/hooks\"\n\ntype Order = Array<string>\n\nfunction useWatchlistDataTablesOrder(\n  dataTab: string,\n  defaultOrder: Order,\n): [Order, Dispatch<SetStateAction<Order>>] {\n  const [allOrder, setAllOrder] = useLocalStorage<Record<string, Order>>(\n    \"watchlists.dataTabsOrder\",\n    {},\n  )\n\n  const setSort: Dispatch<SetStateAction<Order>> = useCallback(\n    sort => {\n      setAllOrder(prev => {\n        const toModify = prev[dataTab] || defaultOrder\n        const order = sort instanceof Function ? sort(toModify) : sort\n        return { ...prev, [dataTab]: order }\n      })\n    },\n    [dataTab, defaultOrder, setAllOrder],\n  )\n\n  const sort = useMemo(() => {\n    return allOrder[dataTab] || defaultOrder\n  }, [allOrder, dataTab, defaultOrder])\n\n  return [sort, setSort]\n}\n\nexport { useWatchlistDataTablesOrder }\n"],"names":["useWatchlistDataTablesOrder","dataTab","defaultOrder","allOrder","setAllOrder","useLocalStorage","setSort","useCallback","sort","prev","toModify","order","Function","useMemo"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAgCSA;;;eAAAA;;;uBAhCsD;uBAC/B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIhC,SAASA,4BACPC,OAAe,EACfC,YAAmB;IAEnB,MAAM,CAACC,UAAUC,YAAY,GAAGC,IAAAA,sBAAe,EAC7C,4BACA,CAAC;IAGH,MAAMC,UAA2CC,IAAAA,kBAAW,EAC1DC,CAAAA;QACEJ,YAAYK,CAAAA;YACV,MAAMC,WAAWD,IAAI,CAACR,QAAQ,IAAIC;YAClC,MAAMS,QAAQH,gBAAgBI,WAAWJ,KAAKE,YAAYF;YAC1D,OAAO,wCAAKC;gBAAM,CAACR,QAAQ,EAAEU;;QAC/B;IACF,GACA;QAACV;QAASC;QAAcE;KAAY;IAGtC,MAAMI,OAAOK,IAAAA,cAAO,EAAC;QACnB,OAAOV,QAAQ,CAACF,QAAQ,IAAIC;IAC9B,GAAG;QAACC;QAAUF;QAASC;KAAa;IAEpC,OAAO;QAACM;QAAMF;KAAQ;AACxB"}