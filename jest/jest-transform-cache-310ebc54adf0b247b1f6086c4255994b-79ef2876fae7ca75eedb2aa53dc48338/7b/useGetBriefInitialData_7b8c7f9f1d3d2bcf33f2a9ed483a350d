9ab364c1e6069a010ab17ee78dc7e2d5
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "useGetBriefInitialData", {
    enumerable: true,
    get: function() {
        return useGetBriefInitialData;
    }
});
const _react = require("react");
const _reactrouterdom = require("react-router-dom");
const _clerkreact = require("@clerk/clerk-react");
const _brief = require("@rp/react/tanstack-api/brief");
const _utils = require("../utils");
const useGetBriefInitialData = ({ isEdit })=>{
    const { briefId } = (0, _reactrouterdom.useParams)();
    const { data: briefConfig } = (0, _brief.useBriefConfigById)({
        briefId
    });
    const { isLoaded } = (0, _clerkreact.useUser)();
    const initialData = (0, _react.useMemo)(()=>{
        if (isEdit && !!briefConfig && isLoaded) {
            const initialBriefData = {
                name: briefConfig.briefName,
                schedule: {
                    schedulerExpression: (0, _utils.convertScheduleToCronExp)(briefConfig.schedule),
                    timezone: briefConfig.schedule.timezone,
                    destination: briefConfig.deliveryModes[0],
                    destinationParams: {
                        emails: [
                            briefConfig.email
                        ]
                    }
                },
                watchlistId: briefConfig.watchlistIds[0]
            };
            return {
                isLoadingInitialBriefData: false,
                initialBriefData
            };
        }
        return {
            isLoadingInitialBriefData: true,
            initialBriefData: null
        };
    }, [
        briefConfig,
        isEdit,
        isLoaded
    ]);
    var _briefConfig_id;
    return {
        isLoadingInitialBriefData: initialData.isLoadingInitialBriefData,
        initialBriefData: initialData.initialBriefData,
        briefConfigId: (_briefConfig_id = briefConfig === null || briefConfig === void 0 ? void 0 : briefConfig.id) !== null && _briefConfig_id !== void 0 ? _briefConfig_id : null
    };
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3QvY29tbW9uL2JyaWVmL3NyYy9ob29rcy91c2VHZXRCcmllZkluaXRpYWxEYXRhLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZU1lbW8gfSBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IHsgdXNlUGFyYW1zIH0gZnJvbSBcInJlYWN0LXJvdXRlci1kb21cIlxuaW1wb3J0IHsgdXNlVXNlciB9IGZyb20gXCJAY2xlcmsvY2xlcmstcmVhY3RcIlxuaW1wb3J0IHsgQnJpZWZDb25maWdGb3JtLCB1c2VCcmllZkNvbmZpZ0J5SWQgfSBmcm9tIFwiQHJwL3JlYWN0L3RhbnN0YWNrLWFwaS9icmllZlwiXG5pbXBvcnQgeyBjb252ZXJ0U2NoZWR1bGVUb0Nyb25FeHAgfSBmcm9tIFwiLi4vdXRpbHNcIlxuXG50eXBlIFVzZUdldEJyaWVmSW5pdGlhbERhdGFQcm9wcyA9IHtcbiAgaXNFZGl0OiBib29sZWFuXG59XG5cbnR5cGUgVXNlR2V0QnJpZWZJbml0aWFsRGF0YVN0YXRlID0ge1xuICBpc0xvYWRpbmdJbml0aWFsQnJpZWZEYXRhOiBib29sZWFuXG4gIGluaXRpYWxCcmllZkRhdGE6IEJyaWVmQ29uZmlnRm9ybSB8IG51bGxcbiAgYnJpZWZDb25maWdJZDogc3RyaW5nIHwgbnVsbFxufVxuXG5jb25zdCB1c2VHZXRCcmllZkluaXRpYWxEYXRhID0gKHtcbiAgaXNFZGl0LFxufTogVXNlR2V0QnJpZWZJbml0aWFsRGF0YVByb3BzKTogVXNlR2V0QnJpZWZJbml0aWFsRGF0YVN0YXRlID0+IHtcbiAgY29uc3QgeyBicmllZklkIH0gPSB1c2VQYXJhbXMoKVxuICBjb25zdCB7IGRhdGE6IGJyaWVmQ29uZmlnIH0gPSB1c2VCcmllZkNvbmZpZ0J5SWQoeyBicmllZklkIH0pXG4gIGNvbnN0IHsgaXNMb2FkZWQgfSA9IHVzZVVzZXIoKVxuXG4gIGNvbnN0IGluaXRpYWxEYXRhID0gdXNlTWVtbygoKSA9PiB7XG4gICAgaWYgKGlzRWRpdCAmJiAhIWJyaWVmQ29uZmlnICYmIGlzTG9hZGVkKSB7XG4gICAgICBjb25zdCBpbml0aWFsQnJpZWZEYXRhOiBCcmllZkNvbmZpZ0Zvcm0gPSB7XG4gICAgICAgIG5hbWU6IGJyaWVmQ29uZmlnLmJyaWVmTmFtZSxcbiAgICAgICAgc2NoZWR1bGU6IHtcbiAgICAgICAgICBzY2hlZHVsZXJFeHByZXNzaW9uOiBjb252ZXJ0U2NoZWR1bGVUb0Nyb25FeHAoYnJpZWZDb25maWcuc2NoZWR1bGUpLFxuICAgICAgICAgIHRpbWV6b25lOiBicmllZkNvbmZpZy5zY2hlZHVsZS50aW1lem9uZSxcbiAgICAgICAgICBkZXN0aW5hdGlvbjogYnJpZWZDb25maWcuZGVsaXZlcnlNb2Rlc1swXSxcbiAgICAgICAgICBkZXN0aW5hdGlvblBhcmFtczogeyBlbWFpbHM6IFticmllZkNvbmZpZy5lbWFpbF0gfSxcbiAgICAgICAgfSxcbiAgICAgICAgd2F0Y2hsaXN0SWQ6IGJyaWVmQ29uZmlnLndhdGNobGlzdElkc1swXSxcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHsgaXNMb2FkaW5nSW5pdGlhbEJyaWVmRGF0YTogZmFsc2UsIGluaXRpYWxCcmllZkRhdGEgfVxuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICBpc0xvYWRpbmdJbml0aWFsQnJpZWZEYXRhOiB0cnVlLFxuICAgICAgaW5pdGlhbEJyaWVmRGF0YTogbnVsbCxcbiAgICB9XG4gIH0sIFticmllZkNvbmZpZywgaXNFZGl0LCBpc0xvYWRlZF0pXG5cbiAgcmV0dXJuIHtcbiAgICBpc0xvYWRpbmdJbml0aWFsQnJpZWZEYXRhOiBpbml0aWFsRGF0YS5pc0xvYWRpbmdJbml0aWFsQnJpZWZEYXRhLFxuICAgIGluaXRpYWxCcmllZkRhdGE6IGluaXRpYWxEYXRhLmluaXRpYWxCcmllZkRhdGEsXG4gICAgYnJpZWZDb25maWdJZDogYnJpZWZDb25maWc/LmlkID8/IG51bGwsXG4gIH1cbn1cblxuZXhwb3J0IHsgdXNlR2V0QnJpZWZJbml0aWFsRGF0YSB9XG5leHBvcnQgdHlwZSB7IFVzZUdldEJyaWVmSW5pdGlhbERhdGFQcm9wcywgVXNlR2V0QnJpZWZJbml0aWFsRGF0YVN0YXRlIH1cbiJdLCJuYW1lcyI6WyJ1c2VHZXRCcmllZkluaXRpYWxEYXRhIiwiaXNFZGl0IiwiYnJpZWZJZCIsInVzZVBhcmFtcyIsImRhdGEiLCJicmllZkNvbmZpZyIsInVzZUJyaWVmQ29uZmlnQnlJZCIsImlzTG9hZGVkIiwidXNlVXNlciIsImluaXRpYWxEYXRhIiwidXNlTWVtbyIsImluaXRpYWxCcmllZkRhdGEiLCJuYW1lIiwiYnJpZWZOYW1lIiwic2NoZWR1bGUiLCJzY2hlZHVsZXJFeHByZXNzaW9uIiwiY29udmVydFNjaGVkdWxlVG9Dcm9uRXhwIiwidGltZXpvbmUiLCJkZXN0aW5hdGlvbiIsImRlbGl2ZXJ5TW9kZXMiLCJkZXN0aW5hdGlvblBhcmFtcyIsImVtYWlscyIsImVtYWlsIiwid2F0Y2hsaXN0SWQiLCJ3YXRjaGxpc3RJZHMiLCJpc0xvYWRpbmdJbml0aWFsQnJpZWZEYXRhIiwiYnJpZWZDb25maWdJZCIsImlkIl0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkFvRFNBOzs7ZUFBQUE7Ozt1QkFwRGU7Z0NBQ0U7NEJBQ0Y7dUJBQzRCO3VCQUNYO0FBWXpDLE1BQU1BLHlCQUF5QixDQUFDLEVBQzlCQyxNQUFNLEVBQ3NCO0lBQzVCLE1BQU0sRUFBRUMsT0FBTyxFQUFFLEdBQUdDLElBQUFBLHlCQUFTO0lBQzdCLE1BQU0sRUFBRUMsTUFBTUMsV0FBVyxFQUFFLEdBQUdDLElBQUFBLHlCQUFrQixFQUFDO1FBQUVKO0lBQVE7SUFDM0QsTUFBTSxFQUFFSyxRQUFRLEVBQUUsR0FBR0MsSUFBQUEsbUJBQU87SUFFNUIsTUFBTUMsY0FBY0MsSUFBQUEsY0FBTyxFQUFDO1FBQzFCLElBQUlULFVBQVUsQ0FBQyxDQUFDSSxlQUFlRSxVQUFVO1lBQ3ZDLE1BQU1JLG1CQUFvQztnQkFDeENDLE1BQU1QLFlBQVlRLFNBQVM7Z0JBQzNCQyxVQUFVO29CQUNSQyxxQkFBcUJDLElBQUFBLCtCQUF3QixFQUFDWCxZQUFZUyxRQUFRO29CQUNsRUcsVUFBVVosWUFBWVMsUUFBUSxDQUFDRyxRQUFRO29CQUN2Q0MsYUFBYWIsWUFBWWMsYUFBYSxDQUFDLEVBQUU7b0JBQ3pDQyxtQkFBbUI7d0JBQUVDLFFBQVE7NEJBQUNoQixZQUFZaUIsS0FBSzt5QkFBQztvQkFBQztnQkFDbkQ7Z0JBQ0FDLGFBQWFsQixZQUFZbUIsWUFBWSxDQUFDLEVBQUU7WUFDMUM7WUFFQSxPQUFPO2dCQUFFQywyQkFBMkI7Z0JBQU9kO1lBQWlCO1FBQzlEO1FBRUEsT0FBTztZQUNMYywyQkFBMkI7WUFDM0JkLGtCQUFrQjtRQUNwQjtJQUNGLEdBQUc7UUFBQ047UUFBYUo7UUFBUU07S0FBUztRQUtqQkY7SUFIakIsT0FBTztRQUNMb0IsMkJBQTJCaEIsWUFBWWdCLHlCQUF5QjtRQUNoRWQsa0JBQWtCRixZQUFZRSxnQkFBZ0I7UUFDOUNlLGVBQWVyQixDQUFBQSxrQkFBQUEsd0JBQUFBLGtDQUFBQSxZQUFhc0IsRUFBRSxjQUFmdEIsNkJBQUFBLGtCQUFtQjtJQUNwQztBQUNGIn0=