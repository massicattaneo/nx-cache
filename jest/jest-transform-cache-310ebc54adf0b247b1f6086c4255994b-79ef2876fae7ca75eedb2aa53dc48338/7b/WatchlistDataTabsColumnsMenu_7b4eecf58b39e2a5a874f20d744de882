d0132daef4a6fadf2fb5882cbe03c477
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    WATCHLIST_DATA_TABS_ADD_COLUMNS_BUTTON_ID: function() {
        return WATCHLIST_DATA_TABS_ADD_COLUMNS_BUTTON_ID;
    },
    WatchlistDataTabsColumnsMenu: function() {
        return WatchlistDataTabsColumnsMenu;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _customerio = require("@rp/react/common/customer-io");
const _basecomponents = require("@rp/react/web/common/base-components");
const _compositecomponents = require("@rp/react/web/common/composite-components");
const _layout = require("@rp/react/web/common/layout");
const _providers = require("@rp/react/web/common/providers");
const _core = require("@rp/react/web/mui/core");
const _icons = require("@rp/react/web/mui/icons");
const _WatchlistDataTabsColumnsMenuItem = require("./WatchlistDataTabsColumnsMenuItem");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function _object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const WATCHLIST_DATA_TABS_ADD_COLUMNS_BUTTON_ID = "watchlist-data-tabs-add-columns-button";
function WatchlistDataTabsColumnsMenu({ columns, onReset, selectAllColumns, setColumnOrder, currentTab }) {
    const [anchorEl, setAnchorEl] = (0, _react.useState)(null);
    const [filterTerm, setFilterTerm] = (0, _react.useState)("");
    const inputRef = (0, _react.useRef)(null);
    const open = Boolean(anchorEl);
    const theme = (0, _core.useTheme)();
    // Modal hook for custom columns
    const { customColumnsModal } = (0, _providers.useModal)();
    // Backward compatibility mapping
    const dataTab = currentTab !== null && currentTab !== void 0 ? currentTab : "pricing";
    const isCustomTab = currentTab === "custom";
    const handleClick = (e)=>{
        if (isCustomTab) {
            customColumnsModal.handleOpen();
        } else {
            setAnchorEl(e.currentTarget);
            setTimeout(()=>{
                var _inputRef_current;
                return (_inputRef_current = inputRef.current) === null || _inputRef_current === void 0 ? void 0 : _inputRef_current.focus();
            }, 0);
        }
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.RPTooltip, {
                title: "Customize Columns",
                placement: "bottom",
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.IconButton, {
                    id: WATCHLIST_DATA_TABS_ADD_COLUMNS_BUTTON_ID,
                    sx: {
                        backgroundColor: anchorEl ? "elevation.dp24" : "elevation.dp03",
                        borderRadius: 2,
                        "&:hover": {
                            backgroundColor: "elevation.dp24"
                        },
                        p: 0.5,
                        m: 0,
                        placeSelf: "end"
                    },
                    size: "small",
                    onClick: handleClick,
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.Add, {
                        sx: {
                            fontSize: 16
                        }
                    })
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Popover, {
                anchorEl: anchorEl,
                open: open,
                onClose: ()=>{
                    setAnchorEl(null);
                    setTimeout(()=>setFilterTerm(""), 100);
                },
                slotProps: {
                    paper: {
                        sx: {
                            backgroundColor: "elevation.dp08",
                            borderRadius: 2,
                            boxShadow: theme.shadows[6],
                            color: "#FFFDE9",
                            minWidth: 170,
                            ml: 1,
                            mt: 1
                        }
                    }
                },
                transformOrigin: {
                    vertical: "top",
                    horizontal: "left"
                },
                anchorOrigin: {
                    vertical: "bottom",
                    horizontal: "right"
                },
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_layout.SearchBar, {
                        size: "small",
                        placeholder: "Type column name",
                        variant: "outlined",
                        sx: {
                            outline: "none",
                            ".MuiInputBase-root": {
                                height: "38px",
                                backgroundColor: "transparent",
                                mx: 1,
                                my: 1
                            }
                        },
                        slotProps: {
                            input: {
                                startAdornment: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.Search, {}),
                                inputRef
                            }
                        },
                        value: filterTerm,
                        onChange: (e)=>{
                            setFilterTerm(e.target.value);
                        }
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.MenuList, {
                        sx: {
                            position: "relative",
                            maxHeight: "340px",
                            overflowY: "auto",
                            pt: 0
                        },
                        "aria-label": "Columns Menu",
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.ReOrderableList, {
                            list: columns.filter((col)=>col.getCanHide()).filter((col)=>{
                                var _col_columnDef_meta;
                                if (!filterTerm) return true;
                                var _col_columnDef_meta_menuLabel;
                                const label = (_col_columnDef_meta_menuLabel = (_col_columnDef_meta = col.columnDef.meta) === null || _col_columnDef_meta === void 0 ? void 0 : _col_columnDef_meta.menuLabel) !== null && _col_columnDef_meta_menuLabel !== void 0 ? _col_columnDef_meta_menuLabel : col.id;
                                return label.toLowerCase().includes(filterTerm.toLowerCase());
                            }),
                            ListItem: /*#__PURE__*/ _react.default.forwardRef((_param, ref)=>{
                                var { item, dragOptions, componentProps } = _param, rest = _object_without_properties(_param, [
                                    "item",
                                    "dragOptions",
                                    "componentProps"
                                ]);
                                return /*#__PURE__*/ (0, _jsxruntime.jsx)(_WatchlistDataTabsColumnsMenuItem.WatchlistDataTabsColumnsMenuItem, _object_spread({
                                    ref: ref,
                                    item: item,
                                    dragOptions: dragOptions,
                                    componentProps: componentProps,
                                    dataTab: dataTab
                                }, rest));
                            }),
                            PreviewListItem: ({ item })=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                                    sx: {
                                        backgroundColor: "elevation.dp24"
                                    },
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_WatchlistDataTabsColumnsMenuItem.WatchlistDataTabsColumnsMenuItem, {
                                        item: item,
                                        dataTab: dataTab
                                    })
                                }),
                            onDrop: (cols)=>{
                                let blocked = 0;
                                const ids = cols.map((col)=>col.id);
                                const newCols = columns.map((col, index)=>{
                                    if (col.getCanHide()) return ids[index - blocked];
                                    blocked++;
                                    return col.id;
                                });
                                setColumnOrder(newCols);
                                const newlyOrdered = columns.map((c)=>c.id).filter((id, idx)=>newCols[idx] === id && columns[idx].getIsVisible());
                                if (newlyOrdered.length > 0) {
                                    _customerio.watchlistCustomerIo.dataView.columnsModified({
                                        dataViewName: dataTab,
                                        columnsAdded: newlyOrdered
                                    });
                                }
                            }
                        })
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                        sx: {
                            mb: 1,
                            borderTop: "1px solid",
                            borderColor: "divider",
                            mt: 1,
                            pt: 1,
                            px: 1,
                            display: "flex"
                        },
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Button, {
                                disabled: columns.every((col)=>col.getIsVisible()),
                                variant: "text",
                                sx: {
                                    color: "text.secondary"
                                },
                                onClick: ()=>{
                                    selectAllColumns();
                                    _customerio.watchlistCustomerIo.dataView.columnsModified({
                                        dataViewName: dataTab,
                                        columnsAdded: "all"
                                    });
                                },
                                children: "Select All"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                                sx: {
                                    flexGrow: 1
                                }
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Button, {
                                variant: "text",
                                sx: {
                                    color: "text.secondary"
                                },
                                onClick: ()=>{
                                    onReset();
                                    const removed = columns.filter((col)=>col.getCanHide()).map((col)=>col.id);
                                    _customerio.watchlistCustomerIo.dataView.columnsModified({
                                        dataViewName: dataTab,
                                        columnsAdded: [],
                                        columnsRemoved: removed
                                    });
                                },
                                children: "Reset to Default"
                            })
                        ]
                    })
                ]
            })
        ]
    });
}

//# sourceMappingURL=data:application/json;base64,