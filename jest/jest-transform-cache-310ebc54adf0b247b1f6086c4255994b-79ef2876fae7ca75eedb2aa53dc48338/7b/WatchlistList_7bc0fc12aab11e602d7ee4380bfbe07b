54a508b58cb83288420448aebea4650b
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "WatchlistList", {
    enumerable: true,
    get: function() {
        return WatchlistList;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _reacthighlightwords = /*#__PURE__*/ _interop_require_default(require("react-highlight-words"));
const _watchlist = require("@rp/react/tanstack-api/watchlist");
const _core = require("@rp/react/web/mui/core");
const _icons = require("@rp/react/web/mui/icons");
const _LoadingWatchlistList = /*#__PURE__*/ _interop_require_default(require("./LoadingWatchlistList"));
const _WatchlistMenustyles = require("./WatchlistMenu.styles");
const _filterAndSortWatchlists = require("./filterAndSortWatchlists");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const WatchlistList = ({ onWatchlistClick })=>{
    const { data = [], isLoading: isLoadingWatchlists, error } = (0, _watchlist.useAllWatchlists)("user");
    const theme = (0, _core.useTheme)();
    const [nameFilter, setNameFilter] = (0, _react.useState)("");
    if (error) {
        return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_WatchlistMenustyles.WatchlistListContainer, {
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.TextField, {
                    placeholder: "Find Watchlist",
                    InputProps: {
                        startAdornment: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.Search, {})
                    }
                }),
                String(error)
            ]
        });
    }
    const watchlists = (0, _filterAndSortWatchlists.filterAndSortWatchlists)(data, nameFilter);
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_WatchlistMenustyles.WatchlistListContainer, {
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.TextField, {
                placeholder: "Find Watchlist",
                InputProps: {
                    startAdornment: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.Search, {})
                },
                value: nameFilter,
                onChange: (e)=>setNameFilter(e.target.value)
            }),
            isLoadingWatchlists ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_LoadingWatchlistList.default, {}) : /*#__PURE__*/ (0, _jsxruntime.jsx)("ul", {
                children: watchlists.map((watchlist)=>/*#__PURE__*/ (0, _jsxruntime.jsx)("li", {
                        onClick: ()=>onWatchlistClick(watchlist.id, watchlist.name),
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_reacthighlightwords.default, {
                            autoEscape: true,
                            highlightStyle: {
                                color: theme.palette.primary.light
                            },
                            highlightTag: "span",
                            searchWords: [
                                nameFilter
                            ],
                            textToHighlight: watchlist.name
                        })
                    }, watchlist.id))
            })
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9jb21wb3NpdGUtY29tcG9uZW50cy9zcmMvV2F0Y2hsaXN0TWVudS9XYXRjaGxpc3RMaXN0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgSGlnaGxpZ2h0ZXIgZnJvbSBcInJlYWN0LWhpZ2hsaWdodC13b3Jkc1wiXG4vLyBSZXNvdXJjZXNcbmltcG9ydCB7IHVzZUFsbFdhdGNobGlzdHMgfSBmcm9tIFwiQHJwL3JlYWN0L3RhbnN0YWNrLWFwaS93YXRjaGxpc3RcIlxuLy8gQ29tcG9uZW50c1xuaW1wb3J0IHsgVGV4dEZpZWxkLCB1c2VUaGVtZSB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL211aS9jb3JlXCJcbmltcG9ydCB7IFNlYXJjaCB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL211aS9pY29uc1wiXG5pbXBvcnQgTG9hZGluZ1dhdGNobGlzdExpc3QgZnJvbSBcIi4vTG9hZGluZ1dhdGNobGlzdExpc3RcIlxuLy8gU3R5bGVzXG5pbXBvcnQgeyBXYXRjaGxpc3RMaXN0Q29udGFpbmVyIH0gZnJvbSBcIi4vV2F0Y2hsaXN0TWVudS5zdHlsZXNcIlxuLy8gVXRpbFxuaW1wb3J0IHsgZmlsdGVyQW5kU29ydFdhdGNobGlzdHMgfSBmcm9tIFwiLi9maWx0ZXJBbmRTb3J0V2F0Y2hsaXN0c1wiXG5cbnR5cGUgUHJvcHMgPSB7XG4gIG9uV2F0Y2hsaXN0Q2xpY2s6ICh3YXRjaGxpc3RJZDogc3RyaW5nLCB3YXRjaGxpc3ROYW1lOiBzdHJpbmcpID0+IHZvaWRcbn1cblxuY29uc3QgV2F0Y2hsaXN0TGlzdCA9ICh7IG9uV2F0Y2hsaXN0Q2xpY2sgfTogUHJvcHMpID0+IHtcbiAgY29uc3QgeyBkYXRhID0gW10sIGlzTG9hZGluZzogaXNMb2FkaW5nV2F0Y2hsaXN0cywgZXJyb3IgfSA9IHVzZUFsbFdhdGNobGlzdHMoXCJ1c2VyXCIpXG4gIGNvbnN0IHRoZW1lID0gdXNlVGhlbWUoKVxuXG4gIGNvbnN0IFtuYW1lRmlsdGVyLCBzZXROYW1lRmlsdGVyXSA9IHVzZVN0YXRlKFwiXCIpXG4gIGlmIChlcnJvcikge1xuICAgIHJldHVybiAoXG4gICAgICA8V2F0Y2hsaXN0TGlzdENvbnRhaW5lcj5cbiAgICAgICAgPFRleHRGaWVsZCBwbGFjZWhvbGRlcj1cIkZpbmQgV2F0Y2hsaXN0XCIgSW5wdXRQcm9wcz17eyBzdGFydEFkb3JubWVudDogPFNlYXJjaCAvPiB9fSAvPlxuICAgICAgICB7U3RyaW5nKGVycm9yKX1cbiAgICAgIDwvV2F0Y2hsaXN0TGlzdENvbnRhaW5lcj5cbiAgICApXG4gIH1cblxuICBjb25zdCB3YXRjaGxpc3RzID0gZmlsdGVyQW5kU29ydFdhdGNobGlzdHMoZGF0YSwgbmFtZUZpbHRlcilcblxuICByZXR1cm4gKFxuICAgIDxXYXRjaGxpc3RMaXN0Q29udGFpbmVyPlxuICAgICAgPFRleHRGaWVsZFxuICAgICAgICBwbGFjZWhvbGRlcj1cIkZpbmQgV2F0Y2hsaXN0XCJcbiAgICAgICAgSW5wdXRQcm9wcz17eyBzdGFydEFkb3JubWVudDogPFNlYXJjaCAvPiB9fVxuICAgICAgICB2YWx1ZT17bmFtZUZpbHRlcn1cbiAgICAgICAgb25DaGFuZ2U9e2UgPT4gc2V0TmFtZUZpbHRlcihlLnRhcmdldC52YWx1ZSl9XG4gICAgICAvPlxuICAgICAge2lzTG9hZGluZ1dhdGNobGlzdHMgPyAoXG4gICAgICAgIDxMb2FkaW5nV2F0Y2hsaXN0TGlzdCAvPlxuICAgICAgKSA6IChcbiAgICAgICAgPHVsPlxuICAgICAgICAgIHt3YXRjaGxpc3RzLm1hcCh3YXRjaGxpc3QgPT4gKFxuICAgICAgICAgICAgPGxpIGtleT17d2F0Y2hsaXN0LmlkfSBvbkNsaWNrPXsoKSA9PiBvbldhdGNobGlzdENsaWNrKHdhdGNobGlzdC5pZCwgd2F0Y2hsaXN0Lm5hbWUpfT5cbiAgICAgICAgICAgICAgPEhpZ2hsaWdodGVyXG4gICAgICAgICAgICAgICAgYXV0b0VzY2FwZVxuICAgICAgICAgICAgICAgIGhpZ2hsaWdodFN0eWxlPXt7IGNvbG9yOiB0aGVtZS5wYWxldHRlLnByaW1hcnkubGlnaHQgfX1cbiAgICAgICAgICAgICAgICBoaWdobGlnaHRUYWc9XCJzcGFuXCJcbiAgICAgICAgICAgICAgICBzZWFyY2hXb3Jkcz17W25hbWVGaWx0ZXJdfVxuICAgICAgICAgICAgICAgIHRleHRUb0hpZ2hsaWdodD17d2F0Y2hsaXN0Lm5hbWV9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICkpfVxuICAgICAgICA8L3VsPlxuICAgICAgKX1cbiAgICA8L1dhdGNobGlzdExpc3RDb250YWluZXI+XG4gIClcbn1cblxuZXhwb3J0IHsgV2F0Y2hsaXN0TGlzdCB9XG4iXSwibmFtZXMiOlsiV2F0Y2hsaXN0TGlzdCIsIm9uV2F0Y2hsaXN0Q2xpY2siLCJkYXRhIiwiaXNMb2FkaW5nIiwiaXNMb2FkaW5nV2F0Y2hsaXN0cyIsImVycm9yIiwidXNlQWxsV2F0Y2hsaXN0cyIsInRoZW1lIiwidXNlVGhlbWUiLCJuYW1lRmlsdGVyIiwic2V0TmFtZUZpbHRlciIsInVzZVN0YXRlIiwiV2F0Y2hsaXN0TGlzdENvbnRhaW5lciIsIlRleHRGaWVsZCIsInBsYWNlaG9sZGVyIiwiSW5wdXRQcm9wcyIsInN0YXJ0QWRvcm5tZW50IiwiU2VhcmNoIiwiU3RyaW5nIiwid2F0Y2hsaXN0cyIsImZpbHRlckFuZFNvcnRXYXRjaGxpc3RzIiwidmFsdWUiLCJvbkNoYW5nZSIsImUiLCJ0YXJnZXQiLCJMb2FkaW5nV2F0Y2hsaXN0TGlzdCIsInVsIiwibWFwIiwid2F0Y2hsaXN0IiwibGkiLCJvbkNsaWNrIiwiaWQiLCJuYW1lIiwiSGlnaGxpZ2h0ZXIiLCJhdXRvRXNjYXBlIiwiaGlnaGxpZ2h0U3R5bGUiLCJjb2xvciIsInBhbGV0dGUiLCJwcmltYXJ5IiwibGlnaHQiLCJoaWdobGlnaHRUYWciLCJzZWFyY2hXb3JkcyIsInRleHRUb0hpZ2hsaWdodCJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQThEU0E7OztlQUFBQTs7Ozt1QkE5RGdCOzRFQUNEOzJCQUVTO3NCQUVHO3VCQUNiOzZFQUNVO3FDQUVNO3lDQUVDOzs7Ozs7QUFNeEMsTUFBTUEsZ0JBQWdCLENBQUMsRUFBRUMsZ0JBQWdCLEVBQVM7SUFDaEQsTUFBTSxFQUFFQyxPQUFPLEVBQUUsRUFBRUMsV0FBV0MsbUJBQW1CLEVBQUVDLEtBQUssRUFBRSxHQUFHQyxJQUFBQSwyQkFBZ0IsRUFBQztJQUM5RSxNQUFNQyxRQUFRQyxJQUFBQSxjQUFRO0lBRXRCLE1BQU0sQ0FBQ0MsWUFBWUMsY0FBYyxHQUFHQyxJQUFBQSxlQUFRLEVBQUM7SUFDN0MsSUFBSU4sT0FBTztRQUNULHFCQUNFLHNCQUFDTywyQ0FBc0I7OzhCQUNyQixxQkFBQ0MsZUFBUztvQkFBQ0MsYUFBWTtvQkFBaUJDLFlBQVk7d0JBQUVDLDhCQUFnQixxQkFBQ0MsYUFBTTtvQkFBSTs7Z0JBQ2hGQyxPQUFPYjs7O0lBR2Q7SUFFQSxNQUFNYyxhQUFhQyxJQUFBQSxnREFBdUIsRUFBQ2xCLE1BQU1PO0lBRWpELHFCQUNFLHNCQUFDRywyQ0FBc0I7OzBCQUNyQixxQkFBQ0MsZUFBUztnQkFDUkMsYUFBWTtnQkFDWkMsWUFBWTtvQkFBRUMsOEJBQWdCLHFCQUFDQyxhQUFNO2dCQUFJO2dCQUN6Q0ksT0FBT1o7Z0JBQ1BhLFVBQVVDLENBQUFBLElBQUtiLGNBQWNhLEVBQUVDLE1BQU0sQ0FBQ0gsS0FBSzs7WUFFNUNqQixvQ0FDQyxxQkFBQ3FCLDZCQUFvQixzQkFFckIscUJBQUNDOzBCQUNFUCxXQUFXUSxHQUFHLENBQUNDLENBQUFBLDBCQUNkLHFCQUFDQzt3QkFBc0JDLFNBQVMsSUFBTTdCLGlCQUFpQjJCLFVBQVVHLEVBQUUsRUFBRUgsVUFBVUksSUFBSTtrQ0FDakYsY0FBQSxxQkFBQ0MsNEJBQVc7NEJBQ1ZDLFVBQVU7NEJBQ1ZDLGdCQUFnQjtnQ0FBRUMsT0FBTzdCLE1BQU04QixPQUFPLENBQUNDLE9BQU8sQ0FBQ0MsS0FBSzs0QkFBQzs0QkFDckRDLGNBQWE7NEJBQ2JDLGFBQWE7Z0NBQUNoQzs2QkFBVzs0QkFDekJpQyxpQkFBaUJkLFVBQVVJLElBQUk7O3VCQU4xQkosVUFBVUcsRUFBRTs7OztBQWNqQyJ9