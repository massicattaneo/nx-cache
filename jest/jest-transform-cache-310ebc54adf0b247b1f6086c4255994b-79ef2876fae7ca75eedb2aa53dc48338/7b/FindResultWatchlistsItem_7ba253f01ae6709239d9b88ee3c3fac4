61a9b31dbbab4ac5e08593f671ec6e84
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "FindResultWatchlistsItem", {
    enumerable: true,
    get: function() {
        return FindResultWatchlistsItem;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _reactrouterdom = require("react-router-dom");
const _clerkreact = require("@clerk/clerk-react");
const _utils = require("@rp/common/utils");
const _providers = require("@rp/react/common/providers");
const _basecomponents = require("@rp/react/web/common/base-components");
const _compositecomponents = require("@rp/react/web/common/composite-components");
const _hooks = require("@rp/react/web/common/hooks");
const _core = require("@rp/react/web/mui/core");
const _router = require("@rp/react/web/router");
const _watchlists = require("@rp/react/web/watchlists");
const _getUserName = require("../../Searches/getUserName");
const _WatchlistTableActions = require("../WatchlistTableActions");
const FindResultWatchlistsItem = ({ item, columnsWidth, filterTerm })=>{
    var _user_primaryEmailAddress, _user_primaryEmailAddress1;
    const navigate = (0, _reactrouterdom.useNavigate)();
    const { user } = (0, _clerkreact.useUser)();
    const { chat, share, copy, search } = (0, _watchlists.useWatchlistsActions)();
    const { isMobile } = (0, _hooks.useDeviceInfo)();
    const [openMenu, setOpenMenu] = (0, _react.useState)(false);
    const { hasEntitlement } = (0, _providers.useAccount)();
    const mobileActions = hasEntitlement("search") ? [
        chat,
        share,
        copy,
        search
    ] : [
        chat,
        share,
        copy
    ];
    const desktopActions = hasEntitlement("search") ? [
        share,
        copy,
        search
    ] : [
        share,
        copy
    ];
    var _item_lastInteracted;
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.HubTableRow, {
        componentProps: {
            filterTerm
        },
        showCompanyIcon: item.shared.company.permission !== "undefined",
        selected: openMenu,
        onRowClick: ()=>{
            if (isMobile) {
                navigate(_router.WATCHLIST_EDIT.replace(":id", item.id));
            } else {
                navigate(_router.WATCHLIST_ID_ROUTE.replace(":id", item.id));
            }
        },
        mobileActions: /*#__PURE__*/ (0, _jsxruntime.jsx)(_WatchlistTableActions.WatchlistTableMobilesActions, {
            openMenu: openMenu,
            setOpenMenu: setOpenMenu,
            actions: mobileActions,
            item: item
        }),
        columnsWidth: columnsWidth,
        columns: [
            {
                text: item.name
            },
            {
                text: `${(0, _utils.formatTime)((_item_lastInteracted = item.lastInteracted) !== null && _item_lastInteracted !== void 0 ? _item_lastInteracted : item.lastUpdated)} Â· ${(0, _getUserName.getUserName)({
                    userEmail: user === null || user === void 0 ? void 0 : (_user_primaryEmailAddress = user.primaryEmailAddress) === null || _user_primaryEmailAddress === void 0 ? void 0 : _user_primaryEmailAddress.emailAddress,
                    userId: user === null || user === void 0 ? void 0 : user.id
                }, item)}`,
                node: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                    sx: {
                        display: "flex",
                        alignItems: "center",
                        gap: 1
                    },
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.UserAvatar, {
                            ownerName: item.ownerName
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.EllipsisTooltip, {
                            tooltipText: item.ownerName,
                            typographyProps: {
                                fontSize: 14
                            },
                            children: (0, _getUserName.getUserName)({
                                userEmail: user === null || user === void 0 ? void 0 : (_user_primaryEmailAddress1 = user.primaryEmailAddress) === null || _user_primaryEmailAddress1 === void 0 ? void 0 : _user_primaryEmailAddress1.emailAddress,
                                userId: user === null || user === void 0 ? void 0 : user.id
                            }, item)
                        })
                    ]
                })
            },
            {
                node: /*#__PURE__*/ (0, _jsxruntime.jsx)(_WatchlistTableActions.WatchlistTableDesktopActions, {
                    openMenu: openMenu,
                    setOpenMenu: setOpenMenu,
                    actions: desktopActions,
                    item: item
                })
            }
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,