7af40dfad572b13add5bc4281a9c2e24
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "theme", {
    enumerable: true,
    get: function() {
        return theme;
    }
});
const _styles = require("@mui/material/styles");
const _colors = /*#__PURE__*/ _interop_require_wildcard(require("./colors"));
require("./theme.modules");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const scrollbarStyles = {
    "&::-webkit-scrollbar": {
        width: "0.4em",
        height: "0.4em",
        backgroundColor: _colors.overlay.surface
    },
    "&::-webkit-scrollbar-thumb": {
        backgroundColor: _colors.text[500],
        borderRadius: 5,
        maxHeight: 10
    }
};
const onHoverScrollbarStyles = {
    "&::-webkit-scrollbar": {
        width: "0.4em",
        backgroundColor: "transparent"
    },
    "&::-webkit-scrollbar-track": {
        backgroundColor: "transparent"
    }
};
const theme = (0, _styles.createTheme)({
    breakpoints: {
        keys: [
            "xs",
            "smallMobile",
            "sm",
            "md",
            "lg",
            "xl"
        ],
        values: {
            xs: 0,
            smallMobile: 390,
            sm: 600,
            md: 900,
            lg: 1200,
            xl: 1440
        }
    },
    palette: _object_spread_props(_object_spread({
        mode: "dark"
    }, _colors), {
        white: "#FFFFFF",
        black: "#000000",
        primary: {
            light: _colors.RPprimary[200],
            main: _colors.RPprimary[500],
            dark: _colors.RPprimary[700],
            background: _colors.RPprimary[900],
            contrastText: _colors.surface.main
        },
        secondary: {
            light: _colors.secondary[200],
            main: _colors.secondary[500],
            dark: _colors.secondary[700],
            contrastText: _colors.text[200]
        },
        surfaces: {
            sideNavigation: _colors.grey[900],
            body: `transparent linear-gradient(180deg, ${_colors.grey[700]} 0%, ${_colors.surface.main} 100%)`
        },
        success: {
            light: _colors.green[200],
            main: _colors.green[500],
            dark: _colors.green[700],
            contrastText: _colors.text[200]
        },
        error: {
            light: _colors.red[200],
            main: _colors.red[500],
            dark: _colors.red[700],
            contrastText: _colors.text[200]
        },
        info: {
            light: _colors.blue[200],
            main: _colors.blue[500],
            dark: _colors.blue[700],
            contrastText: _colors.text[200]
        },
        warning: {
            light: _colors.yellow[200],
            main: _colors.yellow[500],
            dark: _colors.yellow[700],
            contrastText: _colors.surface.main
        },
        text: {
            primary: _colors.text[200],
            secondary: _colors.text[500],
            disabled: _colors.text.disabled
        },
        overlay: {
            red: _colors.overlay.red,
            blue: _colors.overlay.blue,
            yellow: _colors.overlay.yellow,
            green: _colors.overlay.green,
            surface: _colors.overlay.surface
        },
        gradients: {
            blue: _colors.gradients.blue,
            yellow: _colors.gradients.yellow,
            gray: _colors.gradients.gray,
            green: _colors.gradients.green,
            purple: _colors.gradients.purple,
            cream: _colors.gradients.cream,
            overlay: _colors.gradients.overlay
        },
        elevation: _object_spread({}, _colors.elevation),
        outline: {
            border: _colors.grey.A700,
            sidebar: "#414141"
        },
        queryBar: "#263238",
        visited: _colors.text.visited,
        green: _colors.green,
        textColor: {
            200: _colors.text[200],
            500: _colors.text[500],
            700: _colors.text[700]
        },
        blue: _colors.blue,
        grey: _colors.grey,
        red: _colors.red,
        yellow: _colors.yellow
    }),
    typography: {
        fontFamily: [
            "Lato",
            "sans-serif"
        ].join(",")
    },
    components: {
        MuiCssBaseline: {
            styleOverrides: {
                body: {
                    margin: 0,
                    WebkitFontSmoothing: "antialiased",
                    MozOsxFontSmoothing: "grayscale",
                    fontSize: "0.875rem"
                },
                html: {
                    colorScheme: "dark"
                }
            }
        },
        MuiLink: {
            defaultProps: {
                underline: "hover"
            }
        },
        MuiTextField: {
            styleOverrides: {
                root: {
                    borderRadius: 4,
                    width: "100%",
                    "&::placeholder": {
                        textOverflow: "ellipsis !important",
                        color: _colors.grey[200]
                    }
                }
            }
        },
        MuiInput: {
            styleOverrides: {
                root: {
                    minHeight: 44,
                    padding: "0 12px",
                    borderRadius: "4px 4px 0 0"
                },
                underline: {
                    "&:before": {
                        borderBottom: `2px solid ${_colors.grey[400]}`
                    }
                }
            }
        },
        MuiTooltip: {
            styleOverrides: {
                tooltip: {
                    fontSize: "14px",
                    boxShadow: "0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23)",
                    color: "white",
                    backgroundColor: _colors.grey[700]
                }
            }
        },
        MuiAutocomplete: {
            styleOverrides: {
                listbox: _object_spread_props(_object_spread({}, scrollbarStyles), {
                    backgroundColor: _colors.grey[700],
                    maxHeight: 300
                }),
                noOptions: {
                    backgroundColor: _colors.grey[700]
                },
                loading: {
                    backgroundColor: _colors.grey[700]
                }
            }
        },
        MuiPaper: {
            styleOverrides: {
                root: {
                    backgroundImage: "unset"
                }
            }
        },
        MuiIconButton: {
            styleOverrides: {
                root: {
                    color: _colors.text[200]
                }
            }
        },
        MuiChip: {
            styleOverrides: {
                deleteIcon: {
                    color: _colors.text[200]
                }
            }
        },
        MuiButton: {
            variants: [
                {
                    props: {
                        variant: "text-outlined"
                    },
                    style: {
                        border: `1px solid ${(0, _styles.alpha)(_colors.RPprimary[500], 0.06)}`,
                        color: _colors.RPprimary[500],
                        backgroundColor: (0, _styles.alpha)(_colors.RPprimary[500], 0.12),
                        "&:hover": {
                            border: `1px solid ${_colors.RPprimary[500]}`,
                            backgroundColor: (0, _styles.alpha)(_colors.RPprimary[500], 0.12)
                        }
                    }
                }
            ]
        },
        MuiToggleButtonGroup: {
            styleOverrides: {
                root: {
                    "& button.MuiToggleButtonGroup-grouped.Mui-selected": {
                        backgroundColor: (0, _styles.alpha)("#53a6fb", 0.2),
                        color: (0, _styles.alpha)("#ffffff", 0.87)
                    },
                    "& button.MuiToggleButtonGroup-grouped.Mui-selected:hover": {
                        backgroundColor: (0, _styles.alpha)("#53a6fb", 0.3)
                    },
                    "& button.MuiToggleButtonGroup-grouped:hover": {
                        backgroundColor: "rgba(255,255,255, 0.2)"
                    },
                    "& button.MuiToggleButtonGroup-grouped": {
                        lineHeight: "24px",
                        color: (0, _styles.alpha)("#ffffff", 0.7),
                        textTransform: "none",
                        fontSize: "16px",
                        padding: "4px 16px",
                        backgroundColor: "rgba(255,255,255, 0.08)",
                        border: "none"
                    }
                }
            }
        }
    },
    scrollbarStyles,
    onHoverScrollbarStyles
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3QvdGhlbWUvc3JjL2xpYi90aGVtZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhbHBoYSwgY3JlYXRlVGhlbWUgfSBmcm9tIFwiQG11aS9tYXRlcmlhbC9zdHlsZXNcIlxuaW1wb3J0ICogYXMgY29sb3JzIGZyb20gXCIuL2NvbG9yc1wiXG5pbXBvcnQgXCIuL3RoZW1lLm1vZHVsZXNcIlxuaW1wb3J0IHsgUlBUaGVtZVByb3BzIH0gZnJvbSBcIi4vdGhlbWUudHlwZXNcIlxuXG5jb25zdCBzY3JvbGxiYXJTdHlsZXMgPSB7XG4gIFwiJjo6LXdlYmtpdC1zY3JvbGxiYXJcIjoge1xuICAgIHdpZHRoOiBcIjAuNGVtXCIsXG4gICAgaGVpZ2h0OiBcIjAuNGVtXCIsXG4gICAgYmFja2dyb3VuZENvbG9yOiBjb2xvcnMub3ZlcmxheS5zdXJmYWNlLFxuICB9LFxuICBcIiY6Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iXCI6IHtcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IGNvbG9ycy50ZXh0WzUwMF0sXG4gICAgYm9yZGVyUmFkaXVzOiA1LFxuICAgIG1heEhlaWdodDogMTAsXG4gIH0sXG59XG5jb25zdCBvbkhvdmVyU2Nyb2xsYmFyU3R5bGVzID0ge1xuICBcIiY6Oi13ZWJraXQtc2Nyb2xsYmFyXCI6IHtcbiAgICB3aWR0aDogXCIwLjRlbVwiLFxuICAgIGJhY2tncm91bmRDb2xvcjogXCJ0cmFuc3BhcmVudFwiLFxuICB9LFxuICBcIiY6Oi13ZWJraXQtc2Nyb2xsYmFyLXRyYWNrXCI6IHtcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IFwidHJhbnNwYXJlbnRcIixcbiAgfSxcbn1cblxuZGVjbGFyZSBtb2R1bGUgXCJAbXVpL21hdGVyaWFsL3N0eWxlc1wiIHtcbiAgaW50ZXJmYWNlIEJyZWFrcG9pbnRPdmVycmlkZXMge1xuICAgIHhzOiB0cnVlIC8vIHJlbW92ZXMgdGhlIGB4c2AgYnJlYWtwb2ludFxuICAgIHNtOiB0cnVlXG4gICAgbWQ6IHRydWVcbiAgICBsZzogdHJ1ZVxuICAgIHhsOiB0cnVlXG4gICAgc21hbGxNb2JpbGU6IHRydWUgLy8gYWRkcyB0aGUgYG1vYmlsZWAgYnJlYWtwb2ludFxuICB9XG59XG5cbmNvbnN0IHRoZW1lOiBSUFRoZW1lUHJvcHMgPSBjcmVhdGVUaGVtZSh7XG4gIGJyZWFrcG9pbnRzOiB7XG4gICAga2V5czogW1wieHNcIiwgXCJzbWFsbE1vYmlsZVwiLCBcInNtXCIsIFwibWRcIiwgXCJsZ1wiLCBcInhsXCJdLFxuICAgIHZhbHVlczoge1xuICAgICAgeHM6IDAsXG4gICAgICBzbWFsbE1vYmlsZTogMzkwLFxuICAgICAgc206IDYwMCxcbiAgICAgIG1kOiA5MDAsXG4gICAgICBsZzogMTIwMCxcbiAgICAgIHhsOiAxNDQwLFxuICAgIH0sXG4gIH0sXG4gIHBhbGV0dGU6IHtcbiAgICBtb2RlOiBcImRhcmtcIixcbiAgICAuLi5jb2xvcnMsXG4gICAgd2hpdGU6IFwiI0ZGRkZGRlwiLFxuICAgIGJsYWNrOiBcIiMwMDAwMDBcIixcbiAgICBwcmltYXJ5OiB7XG4gICAgICBsaWdodDogY29sb3JzLlJQcHJpbWFyeVsyMDBdLFxuICAgICAgbWFpbjogY29sb3JzLlJQcHJpbWFyeVs1MDBdLFxuICAgICAgZGFyazogY29sb3JzLlJQcHJpbWFyeVs3MDBdLFxuICAgICAgYmFja2dyb3VuZDogY29sb3JzLlJQcHJpbWFyeVs5MDBdLFxuICAgICAgY29udHJhc3RUZXh0OiBjb2xvcnMuc3VyZmFjZS5tYWluLFxuICAgIH0sXG4gICAgc2Vjb25kYXJ5OiB7XG4gICAgICBsaWdodDogY29sb3JzLnNlY29uZGFyeVsyMDBdLFxuICAgICAgbWFpbjogY29sb3JzLnNlY29uZGFyeVs1MDBdLFxuICAgICAgZGFyazogY29sb3JzLnNlY29uZGFyeVs3MDBdLFxuICAgICAgY29udHJhc3RUZXh0OiBjb2xvcnMudGV4dFsyMDBdLFxuICAgIH0sXG4gICAgc3VyZmFjZXM6IHtcbiAgICAgIHNpZGVOYXZpZ2F0aW9uOiBjb2xvcnMuZ3JleVs5MDBdLFxuICAgICAgYm9keTogYHRyYW5zcGFyZW50IGxpbmVhci1ncmFkaWVudCgxODBkZWcsICR7Y29sb3JzLmdyZXlbNzAwXX0gMCUsICR7Y29sb3JzLnN1cmZhY2UubWFpbn0gMTAwJSlgLFxuICAgIH0sXG5cbiAgICBzdWNjZXNzOiB7XG4gICAgICBsaWdodDogY29sb3JzLmdyZWVuWzIwMF0sXG4gICAgICBtYWluOiBjb2xvcnMuZ3JlZW5bNTAwXSxcbiAgICAgIGRhcms6IGNvbG9ycy5ncmVlbls3MDBdLFxuICAgICAgY29udHJhc3RUZXh0OiBjb2xvcnMudGV4dFsyMDBdLFxuICAgIH0sXG4gICAgZXJyb3I6IHtcbiAgICAgIGxpZ2h0OiBjb2xvcnMucmVkWzIwMF0sXG4gICAgICBtYWluOiBjb2xvcnMucmVkWzUwMF0sXG4gICAgICBkYXJrOiBjb2xvcnMucmVkWzcwMF0sXG4gICAgICBjb250cmFzdFRleHQ6IGNvbG9ycy50ZXh0WzIwMF0sXG4gICAgfSxcbiAgICBpbmZvOiB7XG4gICAgICBsaWdodDogY29sb3JzLmJsdWVbMjAwXSxcbiAgICAgIG1haW46IGNvbG9ycy5ibHVlWzUwMF0sXG4gICAgICBkYXJrOiBjb2xvcnMuYmx1ZVs3MDBdLFxuICAgICAgY29udHJhc3RUZXh0OiBjb2xvcnMudGV4dFsyMDBdLFxuICAgIH0sXG4gICAgd2FybmluZzoge1xuICAgICAgbGlnaHQ6IGNvbG9ycy55ZWxsb3dbMjAwXSxcbiAgICAgIG1haW46IGNvbG9ycy55ZWxsb3dbNTAwXSxcbiAgICAgIGRhcms6IGNvbG9ycy55ZWxsb3dbNzAwXSxcbiAgICAgIGNvbnRyYXN0VGV4dDogY29sb3JzLnN1cmZhY2UubWFpbixcbiAgICB9LFxuICAgIHRleHQ6IHtcbiAgICAgIHByaW1hcnk6IGNvbG9ycy50ZXh0WzIwMF0sXG4gICAgICBzZWNvbmRhcnk6IGNvbG9ycy50ZXh0WzUwMF0sXG4gICAgICBkaXNhYmxlZDogY29sb3JzLnRleHQuZGlzYWJsZWQsXG4gICAgfSxcbiAgICBvdmVybGF5OiB7XG4gICAgICByZWQ6IGNvbG9ycy5vdmVybGF5LnJlZCxcbiAgICAgIGJsdWU6IGNvbG9ycy5vdmVybGF5LmJsdWUsXG4gICAgICB5ZWxsb3c6IGNvbG9ycy5vdmVybGF5LnllbGxvdyxcbiAgICAgIGdyZWVuOiBjb2xvcnMub3ZlcmxheS5ncmVlbixcbiAgICAgIHN1cmZhY2U6IGNvbG9ycy5vdmVybGF5LnN1cmZhY2UsXG4gICAgfSxcbiAgICBncmFkaWVudHM6IHtcbiAgICAgIGJsdWU6IGNvbG9ycy5ncmFkaWVudHMuYmx1ZSxcbiAgICAgIHllbGxvdzogY29sb3JzLmdyYWRpZW50cy55ZWxsb3csXG4gICAgICBncmF5OiBjb2xvcnMuZ3JhZGllbnRzLmdyYXksXG4gICAgICBncmVlbjogY29sb3JzLmdyYWRpZW50cy5ncmVlbixcbiAgICAgIHB1cnBsZTogY29sb3JzLmdyYWRpZW50cy5wdXJwbGUsXG4gICAgICBjcmVhbTogY29sb3JzLmdyYWRpZW50cy5jcmVhbSxcbiAgICAgIG92ZXJsYXk6IGNvbG9ycy5ncmFkaWVudHMub3ZlcmxheSxcbiAgICB9LFxuICAgIGVsZXZhdGlvbjoge1xuICAgICAgLi4uY29sb3JzLmVsZXZhdGlvbixcbiAgICB9LFxuICAgIG91dGxpbmU6IHtcbiAgICAgIGJvcmRlcjogY29sb3JzLmdyZXkuQTcwMCxcbiAgICAgIHNpZGViYXI6IFwiIzQxNDE0MVwiLFxuICAgIH0sXG4gICAgcXVlcnlCYXI6IFwiIzI2MzIzOFwiLCAvLyBRdWVyeSBiYXIgYmFja2dyb3VuZCBjb2xvclxuICAgIHZpc2l0ZWQ6IGNvbG9ycy50ZXh0LnZpc2l0ZWQsXG4gICAgZ3JlZW46IGNvbG9ycy5ncmVlbixcbiAgICB0ZXh0Q29sb3I6IHtcbiAgICAgIDIwMDogY29sb3JzLnRleHRbMjAwXSxcbiAgICAgIDUwMDogY29sb3JzLnRleHRbNTAwXSxcbiAgICAgIDcwMDogY29sb3JzLnRleHRbNzAwXSxcbiAgICB9LFxuICAgIGJsdWU6IGNvbG9ycy5ibHVlLFxuICAgIGdyZXk6IGNvbG9ycy5ncmV5LFxuICAgIHJlZDogY29sb3JzLnJlZCxcbiAgICB5ZWxsb3c6IGNvbG9ycy55ZWxsb3csXG4gIH0sXG4gIHR5cG9ncmFwaHk6IHtcbiAgICBmb250RmFtaWx5OiBbXCJMYXRvXCIsIFwic2Fucy1zZXJpZlwiXS5qb2luKFwiLFwiKSxcbiAgfSxcbiAgY29tcG9uZW50czoge1xuICAgIE11aUNzc0Jhc2VsaW5lOiB7XG4gICAgICBzdHlsZU92ZXJyaWRlczoge1xuICAgICAgICBib2R5OiB7XG4gICAgICAgICAgbWFyZ2luOiAwLFxuICAgICAgICAgIFdlYmtpdEZvbnRTbW9vdGhpbmc6IFwiYW50aWFsaWFzZWRcIixcbiAgICAgICAgICBNb3pPc3hGb250U21vb3RoaW5nOiBcImdyYXlzY2FsZVwiLFxuICAgICAgICAgIGZvbnRTaXplOiBcIjAuODc1cmVtXCIsXG4gICAgICAgIH0sXG4gICAgICAgIGh0bWw6IHtcbiAgICAgICAgICBjb2xvclNjaGVtZTogXCJkYXJrXCIsXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgIH0sXG4gICAgTXVpTGluazoge1xuICAgICAgZGVmYXVsdFByb3BzOiB7XG4gICAgICAgIHVuZGVybGluZTogXCJob3ZlclwiLFxuICAgICAgfSxcbiAgICB9LFxuICAgIE11aVRleHRGaWVsZDoge1xuICAgICAgc3R5bGVPdmVycmlkZXM6IHtcbiAgICAgICAgcm9vdDoge1xuICAgICAgICAgIGJvcmRlclJhZGl1czogNCxcbiAgICAgICAgICB3aWR0aDogXCIxMDAlXCIsXG4gICAgICAgICAgXCImOjpwbGFjZWhvbGRlclwiOiB7XG4gICAgICAgICAgICB0ZXh0T3ZlcmZsb3c6IFwiZWxsaXBzaXMgIWltcG9ydGFudFwiLFxuICAgICAgICAgICAgY29sb3I6IGNvbG9ycy5ncmV5WzIwMF0sXG4gICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgfSxcbiAgICBNdWlJbnB1dDoge1xuICAgICAgc3R5bGVPdmVycmlkZXM6IHtcbiAgICAgICAgcm9vdDoge1xuICAgICAgICAgIG1pbkhlaWdodDogNDQsXG4gICAgICAgICAgcGFkZGluZzogXCIwIDEycHhcIixcbiAgICAgICAgICBib3JkZXJSYWRpdXM6IFwiNHB4IDRweCAwIDBcIixcbiAgICAgICAgfSxcbiAgICAgICAgdW5kZXJsaW5lOiB7XG4gICAgICAgICAgXCImOmJlZm9yZVwiOiB7XG4gICAgICAgICAgICBib3JkZXJCb3R0b206IGAycHggc29saWQgJHtjb2xvcnMuZ3JleVs0MDBdfWAsXG4gICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgfSxcbiAgICBNdWlUb29sdGlwOiB7XG4gICAgICBzdHlsZU92ZXJyaWRlczoge1xuICAgICAgICB0b29sdGlwOiB7XG4gICAgICAgICAgZm9udFNpemU6IFwiMTRweFwiLFxuICAgICAgICAgIGJveFNoYWRvdzogXCIwIDEwcHggMjBweCByZ2JhKDAsMCwwLDAuMTkpLCAwIDZweCA2cHggcmdiYSgwLDAsMCwwLjIzKVwiLFxuICAgICAgICAgIGNvbG9yOiBcIndoaXRlXCIsXG4gICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBjb2xvcnMuZ3JleVs3MDBdLCAvLyBNVUkgZGVmYXVsdCBoYXMgYW4gYWxwaGEgaGVyZVxuICAgICAgICB9LFxuICAgICAgfSxcbiAgICB9LFxuICAgIE11aUF1dG9jb21wbGV0ZToge1xuICAgICAgc3R5bGVPdmVycmlkZXM6IHtcbiAgICAgICAgbGlzdGJveDoge1xuICAgICAgICAgIC4uLnNjcm9sbGJhclN0eWxlcyxcbiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IGNvbG9ycy5ncmV5WzcwMF0sXG4gICAgICAgICAgbWF4SGVpZ2h0OiAzMDAsXG4gICAgICAgIH0sXG5cbiAgICAgICAgbm9PcHRpb25zOiB7XG4gICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBjb2xvcnMuZ3JleVs3MDBdLFxuICAgICAgICB9LFxuICAgICAgICBsb2FkaW5nOiB7XG4gICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBjb2xvcnMuZ3JleVs3MDBdLFxuICAgICAgICB9LFxuICAgICAgfSxcbiAgICB9LFxuICAgIE11aVBhcGVyOiB7XG4gICAgICBzdHlsZU92ZXJyaWRlczogeyByb290OiB7IGJhY2tncm91bmRJbWFnZTogXCJ1bnNldFwiIH0gfSxcbiAgICB9LFxuICAgIE11aUljb25CdXR0b246IHtcbiAgICAgIHN0eWxlT3ZlcnJpZGVzOiB7IHJvb3Q6IHsgY29sb3I6IGNvbG9ycy50ZXh0WzIwMF0gfSB9LFxuICAgIH0sXG4gICAgTXVpQ2hpcDoge1xuICAgICAgc3R5bGVPdmVycmlkZXM6IHtcbiAgICAgICAgZGVsZXRlSWNvbjoge1xuICAgICAgICAgIGNvbG9yOiBjb2xvcnMudGV4dFsyMDBdLFxuICAgICAgICB9LFxuICAgICAgfSxcbiAgICB9LFxuICAgIE11aUJ1dHRvbjoge1xuICAgICAgdmFyaWFudHM6IFtcbiAgICAgICAge1xuICAgICAgICAgIHByb3BzOiB7IHZhcmlhbnQ6IFwidGV4dC1vdXRsaW5lZFwiIH0sXG4gICAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICAgIGJvcmRlcjogYDFweCBzb2xpZCAke2FscGhhKGNvbG9ycy5SUHByaW1hcnlbNTAwXSwgMC4wNil9YCxcbiAgICAgICAgICAgIGNvbG9yOiBjb2xvcnMuUlBwcmltYXJ5WzUwMF0sXG4gICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IGFscGhhKGNvbG9ycy5SUHByaW1hcnlbNTAwXSwgMC4xMiksXG4gICAgICAgICAgICBcIiY6aG92ZXJcIjoge1xuICAgICAgICAgICAgICBib3JkZXI6IGAxcHggc29saWQgJHtjb2xvcnMuUlBwcmltYXJ5WzUwMF19YCxcbiAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBhbHBoYShjb2xvcnMuUlBwcmltYXJ5WzUwMF0sIDAuMTIpLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgXSxcbiAgICB9LFxuICAgIE11aVRvZ2dsZUJ1dHRvbkdyb3VwOiB7XG4gICAgICBzdHlsZU92ZXJyaWRlczoge1xuICAgICAgICByb290OiB7XG4gICAgICAgICAgXCImIGJ1dHRvbi5NdWlUb2dnbGVCdXR0b25Hcm91cC1ncm91cGVkLk11aS1zZWxlY3RlZFwiOiB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IGFscGhhKFwiIzUzYTZmYlwiLCAwLjIpLFxuICAgICAgICAgICAgY29sb3I6IGFscGhhKFwiI2ZmZmZmZlwiLCAwLjg3KSxcbiAgICAgICAgICB9LFxuICAgICAgICAgIFwiJiBidXR0b24uTXVpVG9nZ2xlQnV0dG9uR3JvdXAtZ3JvdXBlZC5NdWktc2VsZWN0ZWQ6aG92ZXJcIjoge1xuICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBhbHBoYShcIiM1M2E2ZmJcIiwgMC4zKSxcbiAgICAgICAgICB9LFxuICAgICAgICAgIFwiJiBidXR0b24uTXVpVG9nZ2xlQnV0dG9uR3JvdXAtZ3JvdXBlZDpob3ZlclwiOiB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwicmdiYSgyNTUsMjU1LDI1NSwgMC4yKVwiLFxuICAgICAgICAgIH0sXG4gICAgICAgICAgXCImIGJ1dHRvbi5NdWlUb2dnbGVCdXR0b25Hcm91cC1ncm91cGVkXCI6IHtcbiAgICAgICAgICAgIGxpbmVIZWlnaHQ6IFwiMjRweFwiLFxuICAgICAgICAgICAgY29sb3I6IGFscGhhKFwiI2ZmZmZmZlwiLCAwLjcpLFxuICAgICAgICAgICAgdGV4dFRyYW5zZm9ybTogXCJub25lXCIsXG4gICAgICAgICAgICBmb250U2l6ZTogXCIxNnB4XCIsXG4gICAgICAgICAgICBwYWRkaW5nOiBcIjRweCAxNnB4XCIsXG4gICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwicmdiYSgyNTUsMjU1LDI1NSwgMC4wOClcIixcbiAgICAgICAgICAgIGJvcmRlcjogXCJub25lXCIsXG4gICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgfSxcbiAgfSxcbiAgc2Nyb2xsYmFyU3R5bGVzLFxuICBvbkhvdmVyU2Nyb2xsYmFyU3R5bGVzLFxufSlcblxuZXhwb3J0IHsgdGhlbWUgfVxuIl0sIm5hbWVzIjpbInRoZW1lIiwic2Nyb2xsYmFyU3R5bGVzIiwid2lkdGgiLCJoZWlnaHQiLCJiYWNrZ3JvdW5kQ29sb3IiLCJjb2xvcnMiLCJvdmVybGF5Iiwic3VyZmFjZSIsInRleHQiLCJib3JkZXJSYWRpdXMiLCJtYXhIZWlnaHQiLCJvbkhvdmVyU2Nyb2xsYmFyU3R5bGVzIiwiY3JlYXRlVGhlbWUiLCJicmVha3BvaW50cyIsImtleXMiLCJ2YWx1ZXMiLCJ4cyIsInNtYWxsTW9iaWxlIiwic20iLCJtZCIsImxnIiwieGwiLCJwYWxldHRlIiwibW9kZSIsIndoaXRlIiwiYmxhY2siLCJwcmltYXJ5IiwibGlnaHQiLCJSUHByaW1hcnkiLCJtYWluIiwiZGFyayIsImJhY2tncm91bmQiLCJjb250cmFzdFRleHQiLCJzZWNvbmRhcnkiLCJzdXJmYWNlcyIsInNpZGVOYXZpZ2F0aW9uIiwiZ3JleSIsImJvZHkiLCJzdWNjZXNzIiwiZ3JlZW4iLCJlcnJvciIsInJlZCIsImluZm8iLCJibHVlIiwid2FybmluZyIsInllbGxvdyIsImRpc2FibGVkIiwiZ3JhZGllbnRzIiwiZ3JheSIsInB1cnBsZSIsImNyZWFtIiwiZWxldmF0aW9uIiwib3V0bGluZSIsImJvcmRlciIsIkE3MDAiLCJzaWRlYmFyIiwicXVlcnlCYXIiLCJ2aXNpdGVkIiwidGV4dENvbG9yIiwidHlwb2dyYXBoeSIsImZvbnRGYW1pbHkiLCJqb2luIiwiY29tcG9uZW50cyIsIk11aUNzc0Jhc2VsaW5lIiwic3R5bGVPdmVycmlkZXMiLCJtYXJnaW4iLCJXZWJraXRGb250U21vb3RoaW5nIiwiTW96T3N4Rm9udFNtb290aGluZyIsImZvbnRTaXplIiwiaHRtbCIsImNvbG9yU2NoZW1lIiwiTXVpTGluayIsImRlZmF1bHRQcm9wcyIsInVuZGVybGluZSIsIk11aVRleHRGaWVsZCIsInJvb3QiLCJ0ZXh0T3ZlcmZsb3ciLCJjb2xvciIsIk11aUlucHV0IiwibWluSGVpZ2h0IiwicGFkZGluZyIsImJvcmRlckJvdHRvbSIsIk11aVRvb2x0aXAiLCJ0b29sdGlwIiwiYm94U2hhZG93IiwiTXVpQXV0b2NvbXBsZXRlIiwibGlzdGJveCIsIm5vT3B0aW9ucyIsImxvYWRpbmciLCJNdWlQYXBlciIsImJhY2tncm91bmRJbWFnZSIsIk11aUljb25CdXR0b24iLCJNdWlDaGlwIiwiZGVsZXRlSWNvbiIsIk11aUJ1dHRvbiIsInZhcmlhbnRzIiwicHJvcHMiLCJ2YXJpYW50Iiwic3R5bGUiLCJhbHBoYSIsIk11aVRvZ2dsZUJ1dHRvbkdyb3VwIiwibGluZUhlaWdodCIsInRleHRUcmFuc2Zvcm0iXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkErUVNBOzs7ZUFBQUE7Ozt3QkEvUTBCO2dFQUNYO1FBQ2pCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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