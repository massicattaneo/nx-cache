{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/node_modules/swiper/core/update/updateSlides.js"],"sourcesContent":["import { elementChildren, elementOuterSize, elementStyle, setCSSProperty } from '../../shared/utils.js';\nexport default function updateSlides() {\n  const swiper = this;\n  function getDirectionLabel(property) {\n    if (swiper.isHorizontal()) {\n      return property;\n    }\n    // prettier-ignore\n    return {\n      'width': 'height',\n      'margin-top': 'margin-left',\n      'margin-bottom ': 'margin-right',\n      'margin-left': 'margin-top',\n      'margin-right': 'margin-bottom',\n      'padding-left': 'padding-top',\n      'padding-right': 'padding-bottom',\n      'marginRight': 'marginBottom'\n    }[property];\n  }\n  function getDirectionPropertyValue(node, label) {\n    return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\n  }\n  const params = swiper.params;\n  const {\n    wrapperEl,\n    slidesEl,\n    size: swiperSize,\n    rtlTranslate: rtl,\n    wrongRTL\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = elementChildren(slidesEl, `.${swiper.params.slideClass}, swiper-slide`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.slidesGrid.length;\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n  } else if (typeof spaceBetween === 'string') {\n    spaceBetween = parseFloat(spaceBetween);\n  }\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  slides.forEach(slideEl => {\n    if (rtl) {\n      slideEl.style.marginLeft = '';\n    } else {\n      slideEl.style.marginRight = '';\n    }\n    slideEl.style.marginBottom = '';\n    slideEl.style.marginTop = '';\n  });\n\n  // reset cssMode offsets\n  if (params.centeredSlides && params.cssMode) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', '');\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', '');\n  }\n  const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\n  if (gridEnabled) {\n    swiper.grid.initSlides(slidesLength);\n  }\n\n  // Calc slides\n  let slideSize;\n  const shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(key => {\n    return typeof params.breakpoints[key].slidesPerView !== 'undefined';\n  }).length > 0;\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    let slide;\n    if (slides[i]) slide = slides[i];\n    if (gridEnabled) {\n      swiper.grid.updateSlide(i, slide, slidesLength, getDirectionLabel);\n    }\n    if (slides[i] && elementStyle(slide, 'display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      if (shouldResetSlideSize) {\n        slides[i].style[getDirectionLabel('width')] = ``;\n      }\n      const slideStyles = getComputedStyle(slide);\n      const currentTransform = slide.style.transform;\n      const currentWebKitTransform = slide.style.webkitTransform;\n      if (currentTransform) {\n        slide.style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal() ? elementOuterSize(slide, 'width', true) : elementOuterSize(slide, 'height', true);\n      } else {\n        // eslint-disable-next-line\n        const width = getDirectionPropertyValue(slideStyles, 'width');\n        const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n        const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n        const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n        const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n        const boxSizing = slideStyles.getPropertyValue('box-sizing');\n        if (boxSizing && boxSizing === 'border-box') {\n          slideSize = width + marginLeft + marginRight;\n        } else {\n          const {\n            clientWidth,\n            offsetWidth\n          } = slide;\n          slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n        }\n      }\n      if (currentTransform) {\n        slide.style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n      if (slides[i]) {\n        slides[i].style[getDirectionLabel('width')] = `${slideSize}px`;\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n    swiper.virtualSize += slideSize + spaceBetween;\n    prevSlideSize = slideSize;\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    wrapperEl.style.width = `${swiper.virtualSize + spaceBetween}px`;\n  }\n  if (params.setWrapperSize) {\n    wrapperEl.style[getDirectionLabel('width')] = `${swiper.virtualSize + spaceBetween}px`;\n  }\n  if (gridEnabled) {\n    swiper.grid.updateWrapperSize(slideSize, snapGrid, getDirectionLabel);\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    const newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (isVirtual && params.loop) {\n    const size = slidesSizesGrid[0] + spaceBetween;\n    if (params.slidesPerGroup > 1) {\n      const groups = Math.ceil((swiper.virtual.slidesBefore + swiper.virtual.slidesAfter) / params.slidesPerGroup);\n      const groupSize = size * params.slidesPerGroup;\n      for (let i = 0; i < groups; i += 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + groupSize);\n      }\n    }\n    for (let i = 0; i < swiper.virtual.slidesBefore + swiper.virtual.slidesAfter; i += 1) {\n      if (params.slidesPerGroup === 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + size);\n      }\n      slidesGrid.push(slidesGrid[slidesGrid.length - 1] + size);\n      swiper.virtualSize += size;\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n  if (spaceBetween !== 0) {\n    const key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\n    slides.filter((_, slideIndex) => {\n      if (!params.cssMode || params.loop) return true;\n      if (slideIndex === slides.length - 1) {\n        return false;\n      }\n      return true;\n    }).forEach(slideEl => {\n      slideEl.style[key] = `${spaceBetween}px`;\n    });\n  }\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (spaceBetween || 0);\n    });\n    allSlidesSize -= spaceBetween;\n    const maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map(snap => {\n      if (snap <= 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (spaceBetween || 0);\n    });\n    allSlidesSize -= spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n  Object.assign(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid\n  });\n  if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', `${-snapGrid[0]}px`);\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);\n    const addToSnapGrid = -swiper.snapGrid[0];\n    const addToSlidesGrid = -swiper.slidesGrid[0];\n    swiper.snapGrid = swiper.snapGrid.map(v => v + addToSnapGrid);\n    swiper.slidesGrid = swiper.slidesGrid.map(v => v + addToSlidesGrid);\n  }\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (!isVirtual && !params.cssMode && (params.effect === 'slide' || params.effect === 'fade')) {\n    const backFaceHiddenClass = `${params.containerModifierClass}backface-hidden`;\n    const hasClassBackfaceClassAdded = swiper.el.classList.contains(backFaceHiddenClass);\n    if (slidesLength <= params.maxBackfaceHiddenSlides) {\n      if (!hasClassBackfaceClassAdded) swiper.el.classList.add(backFaceHiddenClass);\n    } else if (hasClassBackfaceClassAdded) {\n      swiper.el.classList.remove(backFaceHiddenClass);\n    }\n  }\n}"],"names":["updateSlides","swiper","getDirectionLabel","property","isHorizontal","getDirectionPropertyValue","node","label","parseFloat","getPropertyValue","params","wrapperEl","slidesEl","size","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","length","elementChildren","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","call","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","spaceBetween","slidePosition","prevSlideSize","index","indexOf","replace","virtualSize","forEach","slideEl","style","marginLeft","marginRight","marginBottom","marginTop","centeredSlides","cssMode","setCSSProperty","gridEnabled","grid","rows","initSlides","slideSize","shouldResetSlideSize","slidesPerView","breakpoints","Object","keys","filter","key","i","slide","updateSlide","elementStyle","slideStyles","getComputedStyle","currentTransform","transform","currentWebKitTransform","webkitTransform","roundLengths","elementOuterSize","width","paddingLeft","paddingRight","boxSizing","clientWidth","offsetWidth","Math","floor","swiperSlideSize","push","abs","slidesPerGroup","min","slidesPerGroupSkip","max","effect","setWrapperSize","updateWrapperSize","newSlidesGrid","slidesGridItem","loop","groups","ceil","slidesBefore","slidesAfter","groupSize","_","slideIndex","centeredSlidesBounds","allSlidesSize","slideSizeValue","maxSnap","map","snap","centerInsufficientSlides","allSlidesOffset","snapIndex","assign","addToSnapGrid","addToSlidesGrid","v","emit","watchOverflow","checkOverflow","watchSlidesProgress","updateSlidesOffset","backFaceHiddenClass","containerModifierClass","hasClassBackfaceClassAdded","el","classList","contains","maxBackfaceHiddenSlides","add","remove"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}