{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/composite-components/src/WatchlistMenu/WatchlistList.tsx"],"sourcesContent":["import { useState } from \"react\"\nimport Highlighter from \"react-highlight-words\"\n// Resources\nimport { useAllWatchlists } from \"@rp/react/tanstack-api/watchlist\"\n// Components\nimport { TextField, useTheme } from \"@rp/react/web/mui/core\"\nimport { Search } from \"@rp/react/web/mui/icons\"\nimport LoadingWatchlistList from \"./LoadingWatchlistList\"\n// Styles\nimport { WatchlistListContainer } from \"./WatchlistMenu.styles\"\n// Util\nimport { filterAndSortWatchlists } from \"./filterAndSortWatchlists\"\n\ntype Props = {\n  onWatchlistClick: (watchlistId: string, watchlistName: string) => void\n}\n\nconst WatchlistList = ({ onWatchlistClick }: Props) => {\n  const { data = [], isLoading: isLoadingWatchlists, error } = useAllWatchlists(\"user\")\n  const theme = useTheme()\n\n  const [nameFilter, setNameFilter] = useState(\"\")\n  if (error) {\n    return (\n      <WatchlistListContainer>\n        <TextField placeholder=\"Find Watchlist\" InputProps={{ startAdornment: <Search /> }} />\n        {String(error)}\n      </WatchlistListContainer>\n    )\n  }\n\n  const watchlists = filterAndSortWatchlists(data, nameFilter)\n\n  return (\n    <WatchlistListContainer>\n      <TextField\n        placeholder=\"Find Watchlist\"\n        InputProps={{ startAdornment: <Search /> }}\n        value={nameFilter}\n        onChange={e => setNameFilter(e.target.value)}\n      />\n      {isLoadingWatchlists ? (\n        <LoadingWatchlistList />\n      ) : (\n        <ul>\n          {watchlists.map(watchlist => (\n            <li key={watchlist.id} onClick={() => onWatchlistClick(watchlist.id, watchlist.name)}>\n              <Highlighter\n                autoEscape\n                highlightStyle={{ color: theme.palette.primary.light }}\n                highlightTag=\"span\"\n                searchWords={[nameFilter]}\n                textToHighlight={watchlist.name}\n              />\n            </li>\n          ))}\n        </ul>\n      )}\n    </WatchlistListContainer>\n  )\n}\n\nexport { WatchlistList }\n"],"names":["WatchlistList","onWatchlistClick","data","isLoading","isLoadingWatchlists","error","useAllWatchlists","theme","useTheme","nameFilter","setNameFilter","useState","WatchlistListContainer","TextField","placeholder","InputProps","startAdornment","Search","String","watchlists","filterAndSortWatchlists","value","onChange","e","target","LoadingWatchlistList","ul","map","watchlist","li","onClick","id","name","Highlighter","autoEscape","highlightStyle","color","palette","primary","light","highlightTag","searchWords","textToHighlight"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BA8DSA;;;eAAAA;;;;uBA9DgB;4EACD;2BAES;sBAEG;uBACb;6EACU;qCAEM;yCAEC;;;;;;AAMxC,MAAMA,gBAAgB,CAAC,EAAEC,gBAAgB,EAAS;IAChD,MAAM,EAAEC,OAAO,EAAE,EAAEC,WAAWC,mBAAmB,EAAEC,KAAK,EAAE,GAAGC,IAAAA,2BAAgB,EAAC;IAC9E,MAAMC,QAAQC,IAAAA,cAAQ;IAEtB,MAAM,CAACC,YAAYC,cAAc,GAAGC,IAAAA,eAAQ,EAAC;IAC7C,IAAIN,OAAO;QACT,qBACE,sBAACO,2CAAsB;;8BACrB,qBAACC,eAAS;oBAACC,aAAY;oBAAiBC,YAAY;wBAAEC,8BAAgB,qBAACC,aAAM;oBAAI;;gBAChFC,OAAOb;;;IAGd;IAEA,MAAMc,aAAaC,IAAAA,gDAAuB,EAAClB,MAAMO;IAEjD,qBACE,sBAACG,2CAAsB;;0BACrB,qBAACC,eAAS;gBACRC,aAAY;gBACZC,YAAY;oBAAEC,8BAAgB,qBAACC,aAAM;gBAAI;gBACzCI,OAAOZ;gBACPa,UAAUC,CAAAA,IAAKb,cAAca,EAAEC,MAAM,CAACH,KAAK;;YAE5CjB,oCACC,qBAACqB,6BAAoB,sBAErB,qBAACC;0BACEP,WAAWQ,GAAG,CAACC,CAAAA,0BACd,qBAACC;wBAAsBC,SAAS,IAAM7B,iBAAiB2B,UAAUG,EAAE,EAAEH,UAAUI,IAAI;kCACjF,cAAA,qBAACC,4BAAW;4BACVC,UAAU;4BACVC,gBAAgB;gCAAEC,OAAO7B,MAAM8B,OAAO,CAACC,OAAO,CAACC,KAAK;4BAAC;4BACrDC,cAAa;4BACbC,aAAa;gCAAChC;6BAAW;4BACzBiC,iBAAiBd,UAAUI,IAAI;;uBAN1BJ,UAAUG,EAAE;;;;AAcjC"}