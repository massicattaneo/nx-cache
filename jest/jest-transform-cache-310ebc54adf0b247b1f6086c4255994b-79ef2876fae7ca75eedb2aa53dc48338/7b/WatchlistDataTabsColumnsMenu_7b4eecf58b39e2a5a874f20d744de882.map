{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/watchlists/src/lib/WatchlistDataTabs/WatchlistDataTabsColumnsMenu.tsx"],"sourcesContent":["import { Dispatch, useRef, useState } from \"react\"\nimport React from \"react\"\nimport { SetStateAction } from \"jotai\"\nimport { watchlistCustomerIo } from \"@rp/react/common/customer-io\"\nimport { RPTooltip } from \"@rp/react/web/common/base-components\"\nimport { ReOrderableList } from \"@rp/react/web/common/composite-components\"\nimport { SearchBar } from \"@rp/react/web/common/layout\"\nimport { useModal } from \"@rp/react/web/common/providers\"\nimport { Box, Button, IconButton, MenuList, Popover, useTheme } from \"@rp/react/web/mui/core\"\nimport { Add, Search } from \"@rp/react/web/mui/icons\"\nimport { Column } from \"@tanstack/react-table\"\nimport { FinanceDataTabs } from \"../hooks/useWatchlistsFinanceDataTabNavigation\"\nimport { WatchlistDataTabsColumnsMenuItem } from \"./WatchlistDataTabsColumnsMenuItem\"\nimport { WatchlistDataTabsTableEntity } from \"./WatchlistDataTabsTable.types\"\n\nconst WATCHLIST_DATA_TABS_ADD_COLUMNS_BUTTON_ID = \"watchlist-data-tabs-add-columns-button\"\n\ntype Props = {\n  columns: Array<Column<WatchlistDataTabsTableEntity, unknown>>\n  onReset: () => void\n  selectAllColumns: () => void\n  setColumnOrder: Dispatch<SetStateAction<Array<string>>>\n  currentTab?: FinanceDataTabs\n}\n\nfunction WatchlistDataTabsColumnsMenu({\n  columns,\n  onReset,\n  selectAllColumns,\n  setColumnOrder,\n  currentTab,\n}: Props) {\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null)\n  const [filterTerm, setFilterTerm] = useState(\"\")\n  const inputRef = useRef<HTMLInputElement | null>(null)\n  const open = Boolean(anchorEl)\n  const theme = useTheme()\n\n  // Modal hook for custom columns\n  const { customColumnsModal } = useModal()\n\n  // Backward compatibility mapping\n  const dataTab = currentTab ?? \"pricing\"\n  const isCustomTab = currentTab === \"custom\"\n\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n    if (isCustomTab) {\n      customColumnsModal.handleOpen()\n    } else {\n      setAnchorEl(e.currentTarget)\n      setTimeout(() => inputRef.current?.focus(), 0)\n    }\n  }\n\n  return (\n    <>\n      <RPTooltip title=\"Customize Columns\" placement=\"bottom\">\n        <IconButton\n          id={WATCHLIST_DATA_TABS_ADD_COLUMNS_BUTTON_ID}\n          sx={{\n            backgroundColor: anchorEl ? \"elevation.dp24\" : \"elevation.dp03\",\n            borderRadius: 2,\n            \"&:hover\": {\n              backgroundColor: \"elevation.dp24\",\n            },\n            p: 0.5,\n            m: 0,\n            placeSelf: \"end\",\n          }}\n          size=\"small\"\n          onClick={handleClick}\n        >\n          <Add sx={{ fontSize: 16 }} />\n        </IconButton>\n      </RPTooltip>\n\n      <Popover\n        anchorEl={anchorEl}\n        open={open}\n        onClose={() => {\n          setAnchorEl(null)\n          setTimeout(() => setFilterTerm(\"\"), 100)\n        }}\n        slotProps={{\n          paper: {\n            sx: {\n              backgroundColor: \"elevation.dp08\",\n              borderRadius: 2,\n              boxShadow: theme.shadows[6],\n              color: \"#FFFDE9\",\n              minWidth: 170,\n              ml: 1,\n              mt: 1,\n            },\n          },\n        }}\n        transformOrigin={{ vertical: \"top\", horizontal: \"left\" }}\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\n      >\n        <SearchBar\n          size=\"small\"\n          placeholder=\"Type column name\"\n          variant=\"outlined\"\n          sx={{\n            outline: \"none\",\n            \".MuiInputBase-root\": {\n              height: \"38px\",\n              backgroundColor: \"transparent\",\n              mx: 1,\n              my: 1,\n            },\n          }}\n          slotProps={{\n            input: {\n              startAdornment: <Search />,\n              inputRef,\n            },\n          }}\n          value={filterTerm}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setFilterTerm(e.target.value)\n          }}\n        />\n        <MenuList\n          sx={{\n            position: \"relative\",\n            maxHeight: \"340px\",\n            overflowY: \"auto\",\n            pt: 0,\n          }}\n          aria-label=\"Columns Menu\"\n        >\n          <ReOrderableList\n            list={columns\n              .filter(col => col.getCanHide())\n              .filter(col => {\n                if (!filterTerm) return true\n                const label = col.columnDef.meta?.menuLabel ?? col.id\n                return label.toLowerCase().includes(filterTerm.toLowerCase())\n              })}\n            ListItem={React.forwardRef<\n              unknown,\n              {\n                item: Column<WatchlistDataTabsTableEntity, unknown>\n                dragOptions?: { disableDrag?: boolean; isDragging?: boolean }\n                componentProps?: { filterTerm?: string }\n              }\n            >(({ item, dragOptions, componentProps, ...rest }, ref) => (\n              <WatchlistDataTabsColumnsMenuItem\n                ref={ref}\n                item={item}\n                dragOptions={dragOptions}\n                componentProps={componentProps}\n                dataTab={dataTab}\n                {...rest}\n              />\n            ))}\n            PreviewListItem={({ item }) => (\n              <Box sx={{ backgroundColor: \"elevation.dp24\" }}>\n                <WatchlistDataTabsColumnsMenuItem item={item} dataTab={dataTab} />\n              </Box>\n            )}\n            onDrop={cols => {\n              let blocked = 0\n              const ids = cols.map(col => col.id)\n              const newCols = columns.map((col, index) => {\n                if (col.getCanHide()) return ids[index - blocked]\n                blocked++\n                return col.id\n              })\n              setColumnOrder(newCols)\n              const newlyOrdered = columns\n                .map(c => c.id)\n                .filter((id, idx) => newCols[idx] === id && columns[idx].getIsVisible())\n              if (newlyOrdered.length > 0) {\n                watchlistCustomerIo.dataView.columnsModified({\n                  dataViewName: dataTab,\n                  columnsAdded: newlyOrdered,\n                })\n              }\n            }}\n          />\n        </MenuList>\n        <Box\n          sx={{\n            mb: 1,\n            borderTop: \"1px solid\",\n            borderColor: \"divider\",\n            mt: 1,\n            pt: 1,\n            px: 1,\n            display: \"flex\",\n          }}\n        >\n          <Button\n            disabled={columns.every(col => col.getIsVisible())}\n            variant=\"text\"\n            sx={{ color: \"text.secondary\" }}\n            onClick={() => {\n              selectAllColumns()\n              watchlistCustomerIo.dataView.columnsModified({\n                dataViewName: dataTab,\n                columnsAdded: \"all\",\n              })\n            }}\n          >\n            Select All\n          </Button>\n          <Box sx={{ flexGrow: 1 }} />\n          <Button\n            variant=\"text\"\n            sx={{ color: \"text.secondary\" }}\n            onClick={() => {\n              onReset()\n              const removed = columns.filter(col => col.getCanHide()).map(col => col.id)\n              watchlistCustomerIo.dataView.columnsModified({\n                dataViewName: dataTab,\n                columnsAdded: [],\n                columnsRemoved: removed,\n              })\n            }}\n          >\n            Reset to Default\n          </Button>\n        </Box>\n      </Popover>\n    </>\n  )\n}\n\nexport { WatchlistDataTabsColumnsMenu, WATCHLIST_DATA_TABS_ADD_COLUMNS_BUTTON_ID }\n"],"names":["WATCHLIST_DATA_TABS_ADD_COLUMNS_BUTTON_ID","WatchlistDataTabsColumnsMenu","columns","onReset","selectAllColumns","setColumnOrder","currentTab","anchorEl","setAnchorEl","useState","filterTerm","setFilterTerm","inputRef","useRef","open","Boolean","theme","useTheme","customColumnsModal","useModal","dataTab","isCustomTab","handleClick","e","handleOpen","currentTarget","setTimeout","current","focus","RPTooltip","title","placement","IconButton","id","sx","backgroundColor","borderRadius","p","m","placeSelf","size","onClick","Add","fontSize","Popover","onClose","slotProps","paper","boxShadow","shadows","color","minWidth","ml","mt","transformOrigin","vertical","horizontal","anchorOrigin","SearchBar","placeholder","variant","outline","height","mx","my","input","startAdornment","Search","value","onChange","target","MenuList","position","maxHeight","overflowY","pt","aria-label","ReOrderableList","list","filter","col","getCanHide","label","columnDef","meta","menuLabel","toLowerCase","includes","ListItem","React","forwardRef","ref","item","dragOptions","componentProps","rest","WatchlistDataTabsColumnsMenuItem","PreviewListItem","Box","onDrop","cols","blocked","ids","map","newCols","index","newlyOrdered","c","idx","getIsVisible","length","watchlistCustomerIo","dataView","columnsModified","dataViewName","columnsAdded","mb","borderTop","borderColor","px","display","Button","disabled","every","flexGrow","removed","columnsRemoved"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}