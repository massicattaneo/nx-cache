71eb6abebf22f82c93d6a7044b8e85df
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "genericColumn", {
    enumerable: true,
    get: function() {
        return genericColumn;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _WatchlistDataTableHeaderCell = require("./WatchlistDataTableCells/WatchlistDataTableHeaderCell");
function genericColumn({ endpoint, columnKeys, tooltip, title, size, enableHiding, enableSorting, cell, extraFinanceData }) {
    return {
        id: `financialData.${endpoint}.${String(columnKeys.join("-"))}`,
        accessorFn: (row)=>{
            var _row_financialData_endpoint_data, _row_financialData_endpoint, _row_financialData;
            if (columnKeys.length === 1) return (_row_financialData = row.financialData) === null || _row_financialData === void 0 ? void 0 : (_row_financialData_endpoint = _row_financialData[endpoint]) === null || _row_financialData_endpoint === void 0 ? void 0 : (_row_financialData_endpoint_data = _row_financialData_endpoint.data) === null || _row_financialData_endpoint_data === void 0 ? void 0 : _row_financialData_endpoint_data[columnKeys[0]];
            let value = undefined;
            for (const columnKey of columnKeys){
                var _row_financialData_endpoint_data1, _row_financialData_endpoint1, _row_financialData1;
                const val = (_row_financialData1 = row.financialData) === null || _row_financialData1 === void 0 ? void 0 : (_row_financialData_endpoint1 = _row_financialData1[endpoint]) === null || _row_financialData_endpoint1 === void 0 ? void 0 : (_row_financialData_endpoint_data1 = _row_financialData_endpoint1.data) === null || _row_financialData_endpoint_data1 === void 0 ? void 0 : _row_financialData_endpoint_data1[columnKey];
                if (val === undefined) {
                    value = undefined;
                } else {
                    if (value === undefined) value = "";
                    value += val === null || val === void 0 ? void 0 : val.toString();
                }
            }
            return value;
        },
        header: ()=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_WatchlistDataTableHeaderCell.WatchlistDataTableHeaderCell, {
                title: title,
                tooltip: tooltip
            }),
        cell,
        size,
        meta: {
            menuLabel: title,
            endpoint,
            columnKeys,
            extraFinanceData
        },
        sortUndefined: "last",
        enableHiding: enableHiding !== null && enableHiding !== void 0 ? enableHiding : false,
        enableSorting: enableSorting !== null && enableSorting !== void 0 ? enableSorting : false
    };
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL3dhdGNobGlzdHMvc3JjL2xpYi9XYXRjaGxpc3REYXRhVGFicy9nZW5lcmljQ29sdW1uLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSZWFjdE5vZGUgfSBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IHsgeiB9IGZyb20gXCJ6b2RcIlxuaW1wb3J0IHtcbiAgZmluYW5jaWFsRGF0YUVuZHBvaW50cyxcbiAgZmluYW5jaWFsRGF0YVNjaGVtYXMsXG4gIHVzZUZpbmFuY2lhbERhdGFJbnB1dFNjaGVtYSxcbn0gZnJvbSBcIkBycC9jb21tb24vem9kLWNvbnRyYWN0cy9maW5hbmNpYWwtZGF0YVwiXG5pbXBvcnQgeyBDZWxsQ29udGV4dCwgQ29sdW1uRGVmIH0gZnJvbSBcIkB0YW5zdGFjay90YWJsZS1jb3JlXCJcbmltcG9ydCB7IFdhdGNobGlzdERhdGFUYWJsZUhlYWRlckNlbGwgfSBmcm9tIFwiLi9XYXRjaGxpc3REYXRhVGFibGVDZWxscy9XYXRjaGxpc3REYXRhVGFibGVIZWFkZXJDZWxsXCJcbmltcG9ydCB7IFdhdGNobGlzdERhdGFUYWJzVGFibGVFbnRpdHkgfSBmcm9tIFwiLi9XYXRjaGxpc3REYXRhVGFic1RhYmxlLnR5cGVzXCJcblxudHlwZSBFbmRwb2ludHMgPSB6LmluZmVyPHR5cGVvZiBmaW5hbmNpYWxEYXRhRW5kcG9pbnRzPlxuXG50eXBlIFByb3BzPEVuZHBvaW50IGV4dGVuZHMgRW5kcG9pbnRzPiA9IHtcbiAgZW5kcG9pbnQ6IEVuZHBvaW50XG4gIGNvbHVtbktleXM6IEFycmF5PGtleW9mIHouaW5mZXI8dHlwZW9mIGZpbmFuY2lhbERhdGFTY2hlbWFzW0VuZHBvaW50XT4+XG4gIHRvb2x0aXA/OiBzdHJpbmdcbiAgdGl0bGU6IHN0cmluZ1xuICBzaXplPzogbnVtYmVyXG4gIGVuYWJsZUhpZGluZz86IGJvb2xlYW5cbiAgZW5hYmxlU29ydGluZz86IGJvb2xlYW5cbiAgY2VsbDogKGluZm86IENlbGxDb250ZXh0PFdhdGNobGlzdERhdGFUYWJzVGFibGVFbnRpdHksIHVua25vd24+KSA9PiBSZWFjdE5vZGVcbiAgZXh0cmFGaW5hbmNlRGF0YT86IChlbnRpdHlJZHM6IEFycmF5PHN0cmluZz4pID0+IHouaW5mZXI8dHlwZW9mIHVzZUZpbmFuY2lhbERhdGFJbnB1dFNjaGVtYT5cbn1cblxuZnVuY3Rpb24gZ2VuZXJpY0NvbHVtbjxFbmRwb2ludCBleHRlbmRzIEVuZHBvaW50cz4oe1xuICBlbmRwb2ludCxcbiAgY29sdW1uS2V5cyxcbiAgdG9vbHRpcCxcbiAgdGl0bGUsXG4gIHNpemUsXG4gIGVuYWJsZUhpZGluZyxcbiAgZW5hYmxlU29ydGluZyxcbiAgY2VsbCxcbiAgZXh0cmFGaW5hbmNlRGF0YSxcbn06IFByb3BzPEVuZHBvaW50Pik6IENvbHVtbkRlZjxXYXRjaGxpc3REYXRhVGFic1RhYmxlRW50aXR5PiB7XG4gIHJldHVybiB7XG4gICAgaWQ6IGBmaW5hbmNpYWxEYXRhLiR7ZW5kcG9pbnR9LiR7U3RyaW5nKGNvbHVtbktleXMuam9pbihcIi1cIikpfWAsXG4gICAgYWNjZXNzb3JGbjogcm93ID0+IHtcbiAgICAgIGlmIChjb2x1bW5LZXlzLmxlbmd0aCA9PT0gMSkgcmV0dXJuIHJvdy5maW5hbmNpYWxEYXRhPy5bZW5kcG9pbnRdPy5kYXRhPy5bY29sdW1uS2V5c1swXV1cbiAgICAgIGxldCB2YWx1ZSA9IHVuZGVmaW5lZFxuICAgICAgZm9yIChjb25zdCBjb2x1bW5LZXkgb2YgY29sdW1uS2V5cykge1xuICAgICAgICBjb25zdCB2YWwgPSByb3cuZmluYW5jaWFsRGF0YT8uW2VuZHBvaW50XT8uZGF0YT8uW2NvbHVtbktleV1cbiAgICAgICAgaWYgKHZhbCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgdmFsdWUgPSB1bmRlZmluZWRcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkgdmFsdWUgPSBcIlwiXG4gICAgICAgICAgdmFsdWUgKz0gdmFsPy50b1N0cmluZygpXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiB2YWx1ZVxuICAgIH0sXG4gICAgaGVhZGVyOiAoKSA9PiA8V2F0Y2hsaXN0RGF0YVRhYmxlSGVhZGVyQ2VsbCB0aXRsZT17dGl0bGV9IHRvb2x0aXA9e3Rvb2x0aXB9IC8+LFxuICAgIGNlbGwsXG4gICAgc2l6ZSxcbiAgICBtZXRhOiB7XG4gICAgICBtZW51TGFiZWw6IHRpdGxlLFxuICAgICAgZW5kcG9pbnQsXG4gICAgICBjb2x1bW5LZXlzLFxuICAgICAgZXh0cmFGaW5hbmNlRGF0YSxcbiAgICB9LFxuICAgIHNvcnRVbmRlZmluZWQ6IFwibGFzdFwiLFxuICAgIGVuYWJsZUhpZGluZzogZW5hYmxlSGlkaW5nID8/IGZhbHNlLFxuICAgIGVuYWJsZVNvcnRpbmc6IGVuYWJsZVNvcnRpbmcgPz8gZmFsc2UsXG4gIH1cbn1cblxuZXhwb3J0IHsgZ2VuZXJpY0NvbHVtbiB9XG4iXSwibmFtZXMiOlsiZ2VuZXJpY0NvbHVtbiIsImVuZHBvaW50IiwiY29sdW1uS2V5cyIsInRvb2x0aXAiLCJ0aXRsZSIsInNpemUiLCJlbmFibGVIaWRpbmciLCJlbmFibGVTb3J0aW5nIiwiY2VsbCIsImV4dHJhRmluYW5jZURhdGEiLCJpZCIsIlN0cmluZyIsImpvaW4iLCJhY2Nlc3NvckZuIiwicm93IiwibGVuZ3RoIiwiZmluYW5jaWFsRGF0YSIsImRhdGEiLCJ2YWx1ZSIsInVuZGVmaW5lZCIsImNvbHVtbktleSIsInZhbCIsInRvU3RyaW5nIiwiaGVhZGVyIiwiV2F0Y2hsaXN0RGF0YVRhYmxlSGVhZGVyQ2VsbCIsIm1ldGEiLCJtZW51TGFiZWwiLCJzb3J0VW5kZWZpbmVkIl0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQW1FU0E7OztlQUFBQTs7Ozs4Q0EzRG9DO0FBaUI3QyxTQUFTQSxjQUEwQyxFQUNqREMsUUFBUSxFQUNSQyxVQUFVLEVBQ1ZDLE9BQU8sRUFDUEMsS0FBSyxFQUNMQyxJQUFJLEVBQ0pDLFlBQVksRUFDWkMsYUFBYSxFQUNiQyxJQUFJLEVBQ0pDLGdCQUFnQixFQUNBO0lBQ2hCLE9BQU87UUFDTEMsSUFBSSxDQUFDLGNBQWMsRUFBRVQsU0FBUyxDQUFDLEVBQUVVLE9BQU9ULFdBQVdVLElBQUksQ0FBQyxNQUFNLENBQUM7UUFDL0RDLFlBQVlDLENBQUFBO2dCQUMwQkEsa0NBQUFBLDZCQUFBQTtZQUFwQyxJQUFJWixXQUFXYSxNQUFNLEtBQUssR0FBRyxRQUFPRCxxQkFBQUEsSUFBSUUsYUFBYSxjQUFqQkYsMENBQUFBLDhCQUFBQSxrQkFBbUIsQ0FBQ2IsU0FBUyxjQUE3QmEsbURBQUFBLG1DQUFBQSw0QkFBK0JHLElBQUksY0FBbkNILHVEQUFBQSxnQ0FBcUMsQ0FBQ1osVUFBVSxDQUFDLEVBQUUsQ0FBQztZQUN4RixJQUFJZ0IsUUFBUUM7WUFDWixLQUFLLE1BQU1DLGFBQWFsQixXQUFZO29CQUN0QlksbUNBQUFBLDhCQUFBQTtnQkFBWixNQUFNTyxPQUFNUCxzQkFBQUEsSUFBSUUsYUFBYSxjQUFqQkYsMkNBQUFBLCtCQUFBQSxtQkFBbUIsQ0FBQ2IsU0FBUyxjQUE3QmEsb0RBQUFBLG9DQUFBQSw2QkFBK0JHLElBQUksY0FBbkNILHdEQUFBQSxpQ0FBcUMsQ0FBQ00sVUFBVTtnQkFDNUQsSUFBSUMsUUFBUUYsV0FBVztvQkFDckJELFFBQVFDO2dCQUNWLE9BQU87b0JBQ0wsSUFBSUQsVUFBVUMsV0FBV0QsUUFBUTtvQkFDakNBLFNBQVNHLGdCQUFBQSwwQkFBQUEsSUFBS0MsUUFBUTtnQkFDeEI7WUFDRjtZQUNBLE9BQU9KO1FBQ1Q7UUFDQUssUUFBUSxrQkFBTSxxQkFBQ0MsMERBQTRCO2dCQUFDcEIsT0FBT0E7Z0JBQU9ELFNBQVNBOztRQUNuRUs7UUFDQUg7UUFDQW9CLE1BQU07WUFDSkMsV0FBV3RCO1lBQ1hIO1lBQ0FDO1lBQ0FPO1FBQ0Y7UUFDQWtCLGVBQWU7UUFDZnJCLGNBQWNBLHlCQUFBQSwwQkFBQUEsZUFBZ0I7UUFDOUJDLGVBQWVBLDBCQUFBQSwyQkFBQUEsZ0JBQWlCO0lBQ2xDO0FBQ0YifQ==