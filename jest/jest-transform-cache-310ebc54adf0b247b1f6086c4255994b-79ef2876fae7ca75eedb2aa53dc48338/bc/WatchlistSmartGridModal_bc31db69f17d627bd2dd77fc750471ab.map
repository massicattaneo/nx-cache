{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/watchlists/src/lib/WatchlistSmartGrid/WatchlistSmartGridModal/WatchlistSmartGridModal.tsx"],"sourcesContent":["import { Dispatch, KeyboardEvent, SetStateAction, useEffect } from \"react\"\nimport { Controller, useForm } from \"react-hook-form\"\nimport { z } from \"zod\"\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport { CqsScopeSchema } from \"@rp/common/api-types\"\nimport { GenericModal } from \"@rp/react/web/common/composite-components\"\nimport { Divider, TextField, Typography } from \"@rp/react/web/mui/core\"\nimport { SmartGridColumn } from \"../WatchlistSmartGrid\"\nimport { CqsScopeSelector } from \"./CqsScopeSelector\"\nimport { SuggestedColumns } from \"./SuggestedColumns\"\nimport { TimeRangeSelector } from \"./TimeRangeSelector\"\nimport { FormSchema, FormValues } from \"./WatchlistSmartGridModal.utils\"\n\ntype Props = {\n  open: SmartGridColumn | null | undefined\n  setOpen: Dispatch<SetStateAction<SmartGridColumn | null | undefined>>\n  onAccept: (props: {\n    title: string\n    prompt: string\n    scope?: z.infer<typeof CqsScopeSchema>\n    timeRange: string\n    column?: SmartGridColumn | null\n  }) => void\n  sourceFilters: Partial<Record<string, boolean>>\n}\n\nfunction WatchlistSmartGridModal({ open, setOpen, onAccept, sourceFilters }: Props) {\n  const { setFocus, watch, reset, handleSubmit, control, setValue } = useForm<FormValues>({\n    resolver: zodResolver(FormSchema),\n    defaultValues: {\n      title: open?.title || \"\",\n      prompt: open?.prompt || \"\",\n      scope: open?.scope || \"auto\",\n      timeRange: open?.timeRange || \"last 30 days\",\n    },\n  })\n  const title = watch(\"title\")\n  const prompt = watch(\"prompt\")\n  const scope = watch(\"scope\")\n  const timeRange = watch(\"timeRange\")\n  const isSameScope = open?.scope === scope || (open?.scope === undefined && scope === \"auto\")\n  const isSameTimeRange = open?.timeRange === timeRange\n  const disabled =\n    title === open?.title && prompt === open?.prompt && isSameScope && isSameTimeRange\n\n  function submit() {\n    onAccept({\n      title,\n      prompt,\n      scope: scope === \"auto\" ? undefined : scope,\n      column: open,\n      timeRange,\n    })\n    reset()\n    setOpen(undefined)\n  }\n\n  const onKeyDown = (event: KeyboardEvent<HTMLDivElement | HTMLButtonElement>) => {\n    if ((event.metaKey || event.ctrlKey) && event.key === \"Enter\") {\n      event.preventDefault()\n      handleSubmit(submit)(event)\n    }\n  }\n\n  useEffect(() => {\n    if (open !== undefined) {\n      setTimeout(() => setFocus(\"title\"))\n    }\n  }, [open, setFocus])\n\n  return (\n    <GenericModal\n      title={open ? \"Edit Column\" : \"Add Column\"}\n      AcceptProps={{ disabled }}\n      onAccept={ev => {\n        handleSubmit(submit)(ev)\n      }}\n      onClose={() => setOpen(undefined)}\n      open={open !== undefined}\n    >\n      <Typography sx={{ mb: 2, color: \"text.secondary\" }}>\n        Create a custom column by defining a prompt. We will generate insight for each company\n      </Typography>\n      <Typography sx={{ mb: 1, color: \"text.secondary\", fontSize: 12 }}>DETAILS</Typography>\n      <Controller\n        name=\"title\"\n        control={control}\n        render={({ field }) => (\n          <TextField\n            label=\"Column Header\"\n            variant=\"outlined\"\n            fullWidth\n            margin=\"normal\"\n            size=\"small\"\n            value={field.value}\n            onChange={field.onChange}\n            onBlur={field.onBlur}\n            inputRef={field.ref}\n            name={field.name}\n          />\n        )}\n      />\n      <Controller\n        name=\"prompt\"\n        control={control}\n        render={({ field }) => (\n          <TextField\n            {...field}\n            sx={{ textarea: { p: 2 } }}\n            label=\"Column Prompt\"\n            variant=\"outlined\"\n            fullWidth\n            margin=\"normal\"\n            size=\"small\"\n            multiline\n            rows={3}\n            onKeyDown={onKeyDown}\n          />\n        )}\n      />\n      <Typography sx={{ mb: 1, color: \"text.secondary\", fontSize: 12 }}>\n        Suggested columns:\n      </Typography>\n      <SuggestedColumns\n        onKeyDown={onKeyDown}\n        onColumnClick={column => {\n          setValue(\"title\", column.title)\n          setValue(\"prompt\", column.prompt)\n          if (column.timeRange) {\n            setValue(\"timeRange\", column.timeRange)\n          } else {\n            setValue(\"timeRange\", \"last 30 days\")\n          }\n          if (column.sourceId) {\n            setValue(\"scope\", column.sourceId)\n          } else {\n            setValue(\"scope\", \"auto\")\n          }\n        }}\n      />\n      <Divider sx={{ my: 2 }} />\n      <Typography sx={{ mb: 1, color: \"text.secondary\", fontSize: 12 }}>TIME RANGE</Typography>\n      <TimeRangeSelector control={control} onKeyDown={onKeyDown} />\n      <Divider sx={{ my: 2 }} />\n      <Typography sx={{ mb: 1, color: \"text.secondary\", fontSize: 12 }}>SOURCE</Typography>\n      <CqsScopeSelector control={control} sourceFilters={sourceFilters} />\n    </GenericModal>\n  )\n}\n\nexport { WatchlistSmartGridModal }\n"],"names":["WatchlistSmartGridModal","open","setOpen","onAccept","sourceFilters","setFocus","watch","reset","handleSubmit","control","setValue","useForm","resolver","zodResolver","FormSchema","defaultValues","title","prompt","scope","timeRange","isSameScope","undefined","isSameTimeRange","disabled","submit","column","onKeyDown","event","metaKey","ctrlKey","key","preventDefault","useEffect","setTimeout","GenericModal","AcceptProps","ev","onClose","Typography","sx","mb","color","fontSize","Controller","name","render","field","TextField","label","variant","fullWidth","margin","size","value","onChange","onBlur","inputRef","ref","textarea","p","multiline","rows","SuggestedColumns","onColumnClick","sourceId","Divider","my","TimeRangeSelector","CqsScopeSelector"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}