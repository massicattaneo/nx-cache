2ad7ecb76cadef12a090e737fb928a1c
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "WatchlistSmartGridModal", {
    enumerable: true,
    get: function() {
        return WatchlistSmartGridModal;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _reacthookform = require("react-hook-form");
const _zod = require("@hookform/resolvers/zod");
const _compositecomponents = require("@rp/react/web/common/composite-components");
const _core = require("@rp/react/web/mui/core");
const _CqsScopeSelector = require("./CqsScopeSelector");
const _SuggestedColumns = require("./SuggestedColumns");
const _TimeRangeSelector = require("./TimeRangeSelector");
const _WatchlistSmartGridModalutils = require("./WatchlistSmartGridModal.utils");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function WatchlistSmartGridModal({ open, setOpen, onAccept, sourceFilters }) {
    const { setFocus, watch, reset, handleSubmit, control, setValue } = (0, _reacthookform.useForm)({
        resolver: (0, _zod.zodResolver)(_WatchlistSmartGridModalutils.FormSchema),
        defaultValues: {
            title: (open === null || open === void 0 ? void 0 : open.title) || "",
            prompt: (open === null || open === void 0 ? void 0 : open.prompt) || "",
            scope: (open === null || open === void 0 ? void 0 : open.scope) || "auto",
            timeRange: (open === null || open === void 0 ? void 0 : open.timeRange) || "last 30 days"
        }
    });
    const title = watch("title");
    const prompt = watch("prompt");
    const scope = watch("scope");
    const timeRange = watch("timeRange");
    const isSameScope = (open === null || open === void 0 ? void 0 : open.scope) === scope || (open === null || open === void 0 ? void 0 : open.scope) === undefined && scope === "auto";
    const isSameTimeRange = (open === null || open === void 0 ? void 0 : open.timeRange) === timeRange;
    const disabled = title === (open === null || open === void 0 ? void 0 : open.title) && prompt === (open === null || open === void 0 ? void 0 : open.prompt) && isSameScope && isSameTimeRange;
    function submit() {
        onAccept({
            title,
            prompt,
            scope: scope === "auto" ? undefined : scope,
            column: open,
            timeRange
        });
        reset();
        setOpen(undefined);
    }
    const onKeyDown = (event)=>{
        if ((event.metaKey || event.ctrlKey) && event.key === "Enter") {
            event.preventDefault();
            handleSubmit(submit)(event);
        }
    };
    (0, _react.useEffect)(()=>{
        if (open !== undefined) {
            setTimeout(()=>setFocus("title"));
        }
    }, [
        open,
        setFocus
    ]);
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_compositecomponents.GenericModal, {
        title: open ? "Edit Column" : "Add Column",
        AcceptProps: {
            disabled
        },
        onAccept: (ev)=>{
            handleSubmit(submit)(ev);
        },
        onClose: ()=>setOpen(undefined),
        open: open !== undefined,
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                sx: {
                    mb: 2,
                    color: "text.secondary"
                },
                children: "Create a custom column by defining a prompt. We will generate insight for each company"
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                sx: {
                    mb: 1,
                    color: "text.secondary",
                    fontSize: 12
                },
                children: "DETAILS"
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_reacthookform.Controller, {
                name: "title",
                control: control,
                render: ({ field })=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_core.TextField, {
                        label: "Column Header",
                        variant: "outlined",
                        fullWidth: true,
                        margin: "normal",
                        size: "small",
                        value: field.value,
                        onChange: field.onChange,
                        onBlur: field.onBlur,
                        inputRef: field.ref,
                        name: field.name
                    })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_reacthookform.Controller, {
                name: "prompt",
                control: control,
                render: ({ field })=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_core.TextField, _object_spread_props(_object_spread({}, field), {
                        sx: {
                            textarea: {
                                p: 2
                            }
                        },
                        label: "Column Prompt",
                        variant: "outlined",
                        fullWidth: true,
                        margin: "normal",
                        size: "small",
                        multiline: true,
                        rows: 3,
                        onKeyDown: onKeyDown
                    }))
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                sx: {
                    mb: 1,
                    color: "text.secondary",
                    fontSize: 12
                },
                children: "Suggested columns:"
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_SuggestedColumns.SuggestedColumns, {
                onKeyDown: onKeyDown,
                onColumnClick: (column)=>{
                    setValue("title", column.title);
                    setValue("prompt", column.prompt);
                    if (column.timeRange) {
                        setValue("timeRange", column.timeRange);
                    } else {
                        setValue("timeRange", "last 30 days");
                    }
                    if (column.sourceId) {
                        setValue("scope", column.sourceId);
                    } else {
                        setValue("scope", "auto");
                    }
                }
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Divider, {
                sx: {
                    my: 2
                }
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                sx: {
                    mb: 1,
                    color: "text.secondary",
                    fontSize: 12
                },
                children: "TIME RANGE"
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_TimeRangeSelector.TimeRangeSelector, {
                control: control,
                onKeyDown: onKeyDown
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Divider, {
                sx: {
                    my: 2
                }
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                sx: {
                    mb: 1,
                    color: "text.secondary",
                    fontSize: 12
                },
                children: "SOURCE"
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_CqsScopeSelector.CqsScopeSelector, {
                control: control,
                sourceFilters: sourceFilters
            })
        ]
    });
}

//# sourceMappingURL=data:application/json;base64,