{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/watchlists/src/lib/WatchlistDataTabs/genericColumn.tsx"],"sourcesContent":["import { ReactNode } from \"react\"\nimport { z } from \"zod\"\nimport {\n  financialDataEndpoints,\n  financialDataSchemas,\n  useFinancialDataInputSchema,\n} from \"@rp/common/zod-contracts/financial-data\"\nimport { CellContext, ColumnDef } from \"@tanstack/table-core\"\nimport { WatchlistDataTableHeaderCell } from \"./WatchlistDataTableCells/WatchlistDataTableHeaderCell\"\nimport { WatchlistDataTabsTableEntity } from \"./WatchlistDataTabsTable.types\"\n\ntype Endpoints = z.infer<typeof financialDataEndpoints>\n\ntype Props<Endpoint extends Endpoints> = {\n  endpoint: Endpoint\n  columnKeys: Array<keyof z.infer<typeof financialDataSchemas[Endpoint]>>\n  tooltip?: string\n  title: string\n  size?: number\n  enableHiding?: boolean\n  enableSorting?: boolean\n  cell: (info: CellContext<WatchlistDataTabsTableEntity, unknown>) => ReactNode\n  extraFinanceData?: (entityIds: Array<string>) => z.infer<typeof useFinancialDataInputSchema>\n}\n\nfunction genericColumn<Endpoint extends Endpoints>({\n  endpoint,\n  columnKeys,\n  tooltip,\n  title,\n  size,\n  enableHiding,\n  enableSorting,\n  cell,\n  extraFinanceData,\n}: Props<Endpoint>): ColumnDef<WatchlistDataTabsTableEntity> {\n  return {\n    id: `financialData.${endpoint}.${String(columnKeys.join(\"-\"))}`,\n    accessorFn: row => {\n      if (columnKeys.length === 1) return row.financialData?.[endpoint]?.data?.[columnKeys[0]]\n      let value = undefined\n      for (const columnKey of columnKeys) {\n        const val = row.financialData?.[endpoint]?.data?.[columnKey]\n        if (val === undefined) {\n          value = undefined\n        } else {\n          if (value === undefined) value = \"\"\n          value += val?.toString()\n        }\n      }\n      return value\n    },\n    header: () => <WatchlistDataTableHeaderCell title={title} tooltip={tooltip} />,\n    cell,\n    size,\n    meta: {\n      menuLabel: title,\n      endpoint,\n      columnKeys,\n      extraFinanceData,\n    },\n    sortUndefined: \"last\",\n    enableHiding: enableHiding ?? false,\n    enableSorting: enableSorting ?? false,\n  }\n}\n\nexport { genericColumn }\n"],"names":["genericColumn","endpoint","columnKeys","tooltip","title","size","enableHiding","enableSorting","cell","extraFinanceData","id","String","join","accessorFn","row","length","financialData","data","value","undefined","columnKey","val","toString","header","WatchlistDataTableHeaderCell","meta","menuLabel","sortUndefined"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAmESA;;;eAAAA;;;;8CA3DoC;AAiB7C,SAASA,cAA0C,EACjDC,QAAQ,EACRC,UAAU,EACVC,OAAO,EACPC,KAAK,EACLC,IAAI,EACJC,YAAY,EACZC,aAAa,EACbC,IAAI,EACJC,gBAAgB,EACA;IAChB,OAAO;QACLC,IAAI,CAAC,cAAc,EAAET,SAAS,CAAC,EAAEU,OAAOT,WAAWU,IAAI,CAAC,MAAM,CAAC;QAC/DC,YAAYC,CAAAA;gBAC0BA,kCAAAA,6BAAAA;YAApC,IAAIZ,WAAWa,MAAM,KAAK,GAAG,QAAOD,qBAAAA,IAAIE,aAAa,cAAjBF,0CAAAA,8BAAAA,kBAAmB,CAACb,SAAS,cAA7Ba,mDAAAA,mCAAAA,4BAA+BG,IAAI,cAAnCH,uDAAAA,gCAAqC,CAACZ,UAAU,CAAC,EAAE,CAAC;YACxF,IAAIgB,QAAQC;YACZ,KAAK,MAAMC,aAAalB,WAAY;oBACtBY,mCAAAA,8BAAAA;gBAAZ,MAAMO,OAAMP,sBAAAA,IAAIE,aAAa,cAAjBF,2CAAAA,+BAAAA,mBAAmB,CAACb,SAAS,cAA7Ba,oDAAAA,oCAAAA,6BAA+BG,IAAI,cAAnCH,wDAAAA,iCAAqC,CAACM,UAAU;gBAC5D,IAAIC,QAAQF,WAAW;oBACrBD,QAAQC;gBACV,OAAO;oBACL,IAAID,UAAUC,WAAWD,QAAQ;oBACjCA,SAASG,gBAAAA,0BAAAA,IAAKC,QAAQ;gBACxB;YACF;YACA,OAAOJ;QACT;QACAK,QAAQ,kBAAM,qBAACC,0DAA4B;gBAACpB,OAAOA;gBAAOD,SAASA;;QACnEK;QACAH;QACAoB,MAAM;YACJC,WAAWtB;YACXH;YACAC;YACAO;QACF;QACAkB,eAAe;QACfrB,cAAcA,yBAAAA,0BAAAA,eAAgB;QAC9BC,eAAeA,0BAAAA,2BAAAA,gBAAiB;IAClC;AACF"}