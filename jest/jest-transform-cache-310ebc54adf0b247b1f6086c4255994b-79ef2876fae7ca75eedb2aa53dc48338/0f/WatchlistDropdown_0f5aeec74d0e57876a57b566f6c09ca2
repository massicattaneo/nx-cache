c1cd028c5658de37437cc88c4cba2f2b
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "WatchlistDropdown", {
    enumerable: true,
    get: function() {
        return WatchlistDropdown;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _reactrouterdom = require("react-router-dom");
const _cqsbyids = require("@rp/react/tanstack-api/cqs-by-ids");
const _watchlist = require("@rp/react/tanstack-api/watchlist");
const _basecomponents = require("@rp/react/web/common/base-components");
const _hooks = require("@rp/react/web/common/hooks");
const _core = require("@rp/react/web/mui/core");
const _icons = require("@rp/react/web/mui/icons");
const _router = require("@rp/react/web/router");
const _AdvancedDropdown = require("./AdvancedDropdown");
const _CqsDropdownstyles = require("./CqsDropdown.styles");
const LoadingPopover = ()=>/*#__PURE__*/ (0, _jsxruntime.jsxs)(_CqsDropdownstyles.WatchlistTitleStyled, {
        style: {
            display: "inline-block"
        },
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Skeleton, {}),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Skeleton, {}),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Skeleton, {})
        ]
    });
const WatchlistEntities = ({ items })=>{
    const { addByIds, ids } = (0, _cqsbyids.useCqsByIdsContext)();
    (0, _react.useEffect)(()=>{
        addByIds(items.map((item)=>({
                queryType: "entity",
                key: item
            })));
    }, [
        items,
        addByIds
    ]);
    const entities = items.map((item)=>ids[item]).filter((entity)=>entity !== undefined);
    const sortedEntities = entities.sort((a, b)=>a.data.name.localeCompare(b.data.name));
    if (sortedEntities.length === 0) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
            sx: {
                height: 34,
                padding: "0 20px",
                marginBottom: "10px"
            },
            children: "This watchlist has no items"
        });
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_CqsDropdownstyles.DropdownScroll, {
        children: sortedEntities.map((entity)=>{
            var _entity_data, _entity_data1;
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_CqsDropdownstyles.DropdownItemContainer, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    children: [
                        entity.isError ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                            sx: {
                                fontSize: 14
                            },
                            children: "Error"
                        }) : null,
                        (entity === null || entity === void 0 ? void 0 : entity.isLoading) ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Skeleton, {
                            sx: {
                                display: "inline-block"
                            },
                            width: 50
                        }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                            sx: {
                                fontSize: 14,
                                overflow: "hidden",
                                textOverflow: "ellipsis"
                            },
                            children: entity === null || entity === void 0 ? void 0 : (_entity_data = entity.data) === null || _entity_data === void 0 ? void 0 : _entity_data.name
                        })
                    ]
                })
            }, entity === null || entity === void 0 ? void 0 : (_entity_data1 = entity.data) === null || _entity_data1 === void 0 ? void 0 : _entity_data1.key);
        })
    });
};
const AdvancedWatchlist = ({ filter, onChange })=>{
    const theme = (0, _core.useTheme)();
    const options = [
        "in",
        "not-in"
    ];
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.FormControl, {
                sx: {
                    padding: "0 20px"
                },
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.RadioGroup, {
                    defaultValue: "in",
                    name: "radio-buttons-group",
                    value: filter.operation,
                    onChange: (event, value)=>onChange(value),
                    children: options.map((opt)=>/*#__PURE__*/ {
                        var _operationLabel;
                        return (0, _jsxruntime.jsx)(_core.FormControlLabel, {
                            value: opt,
                            control: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Radio, {
                                size: "small"
                            }),
                            label: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                                sx: {
                                    fontSize: 14
                                },
                                children: (_operationLabel = (0, _AdvancedDropdown.operationLabel)({
                                    option: opt,
                                    isSingleValue: true
                                })) !== null && _operationLabel !== void 0 ? _operationLabel : opt
                            })
                        }, opt);
                    })
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)("hr", {
                style: {
                    margin: "10px 0px 20px",
                    borderColor: theme.palette.grey[600]
                }
            })
        ]
    });
};
function WatchlistDropdown({ filter, onChange }) {
    const navigate = (0, _reactrouterdom.useNavigate)();
    const { isMobile } = (0, _hooks.useDeviceInfo)();
    const { data, isLoading: isLoadingWatchlist, isError } = (0, _watchlist.useWatchlist)(filter.value);
    const { id = "", name = "", items = [] } = data || {};
    const title = `${name} ${items.length > 1 ? `(${items.length})` : ""}`;
    const handleRedirect = ()=>{
        if (isMobile) {
            navigate((0, _reactrouterdom.generatePath)(_router.WATCHLIST_EDIT, {
                id
            }));
        } else {
            navigate((0, _reactrouterdom.generatePath)(_router.WATCHLIST_ID_ROUTE, {
                id
            }));
        }
    };
    if (isError) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
            sx: {
                height: 34,
                padding: "0 20px",
                marginBottom: "10px"
            },
            children: "An error has occurred, please try again"
        });
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_CqsDropdownstyles.DropdownContainer, {
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(AdvancedWatchlist, {
                filter: filter,
                onChange: onChange
            }),
            isLoadingWatchlist ? /*#__PURE__*/ (0, _jsxruntime.jsx)(LoadingPopover, {}) : /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                style: {
                    width: isMobile ? undefined : "380px"
                },
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_CqsDropdownstyles.WatchlistTitleStyled, {
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_CqsDropdownstyles.DropdownTitle, {
                                sx: {
                                    marginBottom: 0,
                                    padding: "0"
                                },
                                children: [
                                    title,
                                    " "
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.RPTooltip, {
                                placement: "top",
                                title: "View Watchlist",
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.IconButton, {
                                    onClick: handleRedirect,
                                    size: "small",
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.OpenInNew, {
                                        sx: {
                                            fontSize: 20
                                        }
                                    })
                                })
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(WatchlistEntities, {
                        items: items
                    })
                ]
            })
        ]
    });
}

//# sourceMappingURL=data:application/json;base64,