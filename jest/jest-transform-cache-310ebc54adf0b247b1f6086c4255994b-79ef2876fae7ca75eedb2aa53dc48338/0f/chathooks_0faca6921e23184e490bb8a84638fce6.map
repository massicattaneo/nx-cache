{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/tanstack-api/chat/src/chat.hooks.ts"],"sourcesContent":["import { useCallback } from \"react\"\nimport { AxiosError } from \"axios\"\nimport { mapToISOTimestamp } from \"@rp/common/utils\"\nimport { axiosClient } from \"@rp/react/axios-client\"\nimport {\n  QueryClient,\n  useInfiniteQuery,\n  useMutation,\n  useQuery,\n  useQueryClient,\n} from \"@tanstack/react-query\"\nimport {\n  ChatListObject,\n  ChatObject,\n  ChatPatch,\n  CreateChat,\n  ListChatsParams,\n  PaginatedChatListResponse,\n  ShareChatBody,\n  ShareChatResponse,\n  UpdateContext,\n  UserInteraction,\n  isUserInteraction,\n} from \"./chat.types\"\nimport { enrichEngineCharWidgetSpec } from \"./enrichEngineCharWidgetSpec\"\n\nconst USE_QUERY_RETRY_DEFAULT = 3\n\n// -----------------\n// Query Keys\n// -----------------\n\nconst chatQueryKeys = {\n  all: () => [\"chats\"] as const,\n  chat: (chatId: string) => [\"chats\", chatId] as const,\n  paginatedList: (params?: ListChatsParams) => {\n    return params\n      ? ([\"paginatedChats\", \"paginatedList\", params] as const)\n      : ([\"paginatedChats\", \"paginatedList\"] as const)\n  },\n}\n\n// -----------------\n// Network Requests\n// -----------------\n\nconst CHAT_PATH = \"/user-data/chats\"\n\nconst renameChat = async ({ id, name }: ChatPatch) => {\n  const { data } = await axiosClient.patch(`${CHAT_PATH}/${id}`, { name })\n  return data\n}\n\nconst getAllChats = async () => {\n  const { data } = await axiosClient.get<Array<ChatListObject>>(`${CHAT_PATH}`)\n  return data\n}\n\nconst getAllPaginatedChats = async (params: ListChatsParams) => {\n  const { data } = await axiosClient.get<PaginatedChatListResponse>(`${CHAT_PATH}`, {\n    params: {\n      ...params,\n      limit: params?.limit,\n    },\n  })\n  return data\n}\n\nconst getChatById = async (queryClient: QueryClient, id: string) => {\n  const { data } = await axiosClient.get<ChatObject>(`${CHAT_PATH}/${id}`)\n  const interactions = await Promise.all(\n    data.interactions.map(interaction => {\n      return enrichEngineCharWidgetSpec(queryClient, interaction)\n    }),\n  )\n  return {\n    ...data,\n    interactions,\n  }\n}\n\nconst createChat = async (createChatBody: CreateChat) => {\n  const { data } = await axiosClient.post<ChatObject>(CHAT_PATH, createChatBody)\n  return data\n}\nconst deleteChat = async (id: string) => {\n  await axiosClient.delete<ChatObject>(`${CHAT_PATH}/${id}`)\n  return { id }\n}\nconst shareChat = async (shareChatData: ShareChatBody) => {\n  const { id } = shareChatData\n  const { data } = await axiosClient.post<ShareChatResponse>(`${CHAT_PATH}/${id}/share`, {\n    public: shareChatData.isPublic,\n  })\n\n  return data\n}\n\n// -----------------\n// Query Hooks\n// -----------------\n\nconst usePaginatedChats = (params: ListChatsParams = { limit: 20 }) => {\n  return useInfiniteQuery({\n    queryKey: chatQueryKeys.paginatedList(params),\n    queryFn: async ({ pageParam }) => {\n      const response = await getAllPaginatedChats(\n        pageParam === \"\"\n          ? params\n          : {\n              ...params,\n              cursor: pageParam,\n            },\n      )\n      return {\n        ...response,\n        items: response.items.map(chat => mapToISOTimestamp(chat)),\n      }\n    },\n    initialPageParam: \"\",\n    getNextPageParam: lastPage => {\n      return lastPage.cursor\n    },\n    gcTime: Infinity,\n    staleTime: Infinity,\n  })\n}\n\nconst useChat = (id?: string, disableRetry?: boolean) => {\n  const queryClient = useQueryClient()\n  const result = useQuery({\n    queryKey: chatQueryKeys.chat(id ?? \"error\"),\n    queryFn: key => getChatById(queryClient, key.queryKey[1]),\n    enabled: id !== undefined,\n    retry: disableRetry ? false : USE_QUERY_RETRY_DEFAULT,\n    staleTime: 24 * 60 * 60 * 1000,\n    select: chat => {\n      return {\n        ...chat,\n        interactions: chat.interactions.map(interaction => {\n          if (!isUserInteraction(interaction) || !interaction.auditTraces) {\n            return interaction\n          }\n\n          return {\n            ...interaction,\n            auditTraces: interaction.auditTraces.map(trace => ({\n              ...trace,\n              results: trace.results.map(result => {\n                if (result.type === \"CQS\") {\n                  return { ...result, values: result.values.map(mapToISOTimestamp) }\n                }\n\n                if (result.type === \"EXTERNAL\") {\n                  return { ...result, values: result.values.map(mapToISOTimestamp) }\n                }\n                return result\n              }),\n            })),\n          }\n        }),\n      }\n    },\n  })\n  const int = result.data?.interactions[result.data?.interactions.length - 1]\n  const lastWatchlistId = int && isUserInteraction(int) ? int.scopeWatchlistId : undefined\n  return { ...result, lastWatchlistId }\n}\n\nconst useCreateChat = () => {\n  const queryClient = useQueryClient()\n  return useMutation({\n    mutationFn: createChat,\n    onSuccess: data => {\n      queryClient.setQueryData(chatQueryKeys.chat(data.id), data)\n      queryClient.setQueryData<Array<ChatListObject>>(chatQueryKeys.all(), oldChats => {\n        if (!oldChats) return [data]\n        return [data, ...oldChats]\n      })\n      queryClient.setQueriesData(\n        { queryKey: chatQueryKeys.paginatedList() },\n        (old: { pages: Array<PaginatedChatListResponse> } | undefined) => {\n          if (!old?.pages) return old\n          return {\n            ...old,\n            pages: [\n              {\n                ...old.pages[0],\n                items: [data, ...old.pages[0].items],\n              },\n              ...old.pages.slice(1),\n            ],\n          }\n        },\n      )\n    },\n  })\n}\n\nconst useDeleteChat = () => {\n  const queryClient = useQueryClient()\n  return useMutation({\n    mutationFn: (id: string) => deleteChat(id),\n    onSuccess: data => {\n      queryClient.setQueryData<Array<ChatListObject>>(chatQueryKeys.all(), oldChats => {\n        if (!oldChats) return []\n        return oldChats.filter(chat => chat.id !== data.id)\n      })\n\n      queryClient.setQueriesData(\n        { queryKey: chatQueryKeys.paginatedList() },\n        (old: { pages: Array<PaginatedChatListResponse> } | undefined) => {\n          if (!old?.pages) return old\n          return {\n            ...old,\n            pages: old.pages.map((page: PaginatedChatListResponse) => ({\n              ...page,\n              items: page.items.filter((chat: ChatListObject) => chat.id !== data.id),\n            })),\n          }\n        },\n      )\n\n      queryClient.removeQueries({ queryKey: chatQueryKeys.chat(data.id) })\n    },\n  })\n}\n\nconst useChats = () => {\n  return useQuery({\n    queryKey: chatQueryKeys.all(),\n    queryFn: async () => getAllChats(),\n    gcTime: Infinity,\n    staleTime: Infinity,\n    select: chats => {\n      return chats.map(chat => mapToISOTimestamp(chat))\n    },\n  })\n}\n\nconst useOptimisticChat = () => {\n  const queryClient = useQueryClient()\n\n  const addInteraction = useCallback(\n    (chatId: string, interaction: UserInteraction) => {\n      queryClient.setQueryData<ChatObject>(chatQueryKeys.chat(chatId), prev => {\n        if (!prev) {\n          return prev\n        }\n\n        const prevCopy = { ...prev }\n        prevCopy.interactions =\n          prevCopy.interactions.length > 0 &&\n          prevCopy.interactions[prevCopy.interactions.length - 1].interactionTimestamp ===\n            interaction.interactionTimestamp\n            ? prevCopy.interactions\n            : [...prevCopy.interactions, interaction]\n\n        return prevCopy\n      })\n    },\n    [queryClient],\n  )\n\n  const removeLastInteraction = useCallback(\n    (chatId: string) => {\n      let removedInteraction: UserInteraction | undefined\n\n      queryClient.setQueryData(chatQueryKeys.chat(chatId), (prev: ChatObject | undefined) => {\n        if (!prev) {\n          return prev\n        }\n\n        const lastInteraction = prev.interactions[prev.interactions.length - 1]\n        if (lastInteraction !== undefined && isUserInteraction(lastInteraction)) {\n          removedInteraction = lastInteraction\n        }\n\n        const prevCopy = { ...prev }\n        prevCopy.interactions = prevCopy.interactions.slice(0, -1)\n        return prevCopy\n      })\n\n      return removedInteraction\n    },\n    [queryClient],\n  )\n\n  return { addInteraction, removeLastInteraction }\n}\n\nconst useShareChat = () => {\n  const queryClient = useQueryClient()\n\n  return useMutation({\n    mutationFn: shareChat,\n    onMutate: data => {\n      const previousChat = queryClient.getQueryData<ChatObject>(chatQueryKeys.chat(data.id))\n      queryClient.setQueryData(chatQueryKeys.chat(data.id), (prev: ChatObject | undefined) => {\n        if (!prev) return prev\n        return {\n          ...prev,\n          isPublic: data.isPublic,\n        }\n      })\n\n      queryClient.setQueriesData(\n        { queryKey: chatQueryKeys.paginatedList() },\n        (old: { pages: Array<PaginatedChatListResponse> } | undefined) => {\n          if (!old?.pages) return old\n          return {\n            ...old,\n            pages: old.pages.map(page => ({\n              ...page,\n              items: page.items.map(chat =>\n                chat.id === data.id ? { ...chat, isPublic: data.isPublic } : chat,\n              ),\n            })),\n          }\n        },\n      )\n\n      return [previousChat] as const\n    },\n\n    onError: (_, variables, context) => {\n      const [previousChat] = context ?? []\n      if (previousChat !== undefined) {\n        queryClient.setQueryData(chatQueryKeys.chat(variables.id), previousChat)\n      }\n    },\n  })\n}\n\nconst usePatchChat = () => {\n  const queryClient = useQueryClient()\n\n  const onMutate = async (patchChat: ChatPatch) => {\n    await queryClient.cancelQueries({ queryKey: chatQueryKeys.chat(patchChat.id) })\n    const previousChat = queryClient.getQueryData<ChatListObject>(chatQueryKeys.chat(patchChat.id))\n    queryClient.setQueryData<ChatListObject | undefined>(chatQueryKeys.chat(patchChat.id), prev => {\n      return !prev ? undefined : { ...prev, name: patchChat.name }\n    })\n    return { previousChat }\n  }\n\n  const onSuccess = (data: ChatListObject) => {\n    queryClient.setQueryData<Array<ChatListObject>>(chatQueryKeys.all(), oldChats => {\n      if (!oldChats) return []\n      return oldChats.map(chat => (chat.id === data.id ? { ...chat, name: data.name } : chat))\n    })\n    queryClient.setQueriesData(\n      { queryKey: chatQueryKeys.paginatedList() },\n      (old: { pages: Array<PaginatedChatListResponse> } | undefined) => {\n        if (!old?.pages) return old\n        return {\n          ...old,\n          pages: old.pages.map(page => ({\n            ...page,\n            items: page.items.map(chat =>\n              chat.id === data.id ? { ...chat, name: data.name } : chat,\n            ),\n          })),\n        }\n      },\n    )\n  }\n\n  return useMutation<ChatListObject, AxiosError, ChatPatch, UpdateContext>({\n    mutationFn: renameChat,\n    onMutate,\n    onSuccess,\n  })\n}\n\nexport {\n  chatQueryKeys,\n  usePaginatedChats,\n  useChat,\n  useChats,\n  useCreateChat,\n  useDeleteChat,\n  useOptimisticChat,\n  usePatchChat,\n  useShareChat,\n}\n"],"names":["chatQueryKeys","useChat","useChats","useCreateChat","useDeleteChat","useOptimisticChat","usePaginatedChats","usePatchChat","useShareChat","USE_QUERY_RETRY_DEFAULT","all","chat","chatId","paginatedList","params","CHAT_PATH","renameChat","id","name","data","axiosClient","patch","getAllChats","get","getAllPaginatedChats","limit","getChatById","queryClient","interactions","Promise","map","interaction","enrichEngineCharWidgetSpec","createChat","createChatBody","post","deleteChat","delete","shareChat","shareChatData","public","isPublic","useInfiniteQuery","queryKey","queryFn","pageParam","response","cursor","items","mapToISOTimestamp","initialPageParam","getNextPageParam","lastPage","gcTime","Infinity","staleTime","disableRetry","result","useQueryClient","useQuery","key","enabled","undefined","retry","select","isUserInteraction","auditTraces","trace","results","type","values","int","length","lastWatchlistId","scopeWatchlistId","useMutation","mutationFn","onSuccess","setQueryData","oldChats","setQueriesData","old","pages","slice","filter","page","removeQueries","chats","addInteraction","useCallback","prev","prevCopy","interactionTimestamp","removeLastInteraction","removedInteraction","lastInteraction","onMutate","previousChat","getQueryData","onError","_","variables","context","patchChat","cancelQueries"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}