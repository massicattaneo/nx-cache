{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/cqs-query-bar/src/lib/compareQueries.ts"],"sourcesContent":["import {\n  isRpqlFlatArrayFilter,\n  isRpqlFlatLogicalGroup,\n  isRpqlFlatMatchFilter,\n} from \"@rp/common/api-types\"\nimport { RpqlFlatArrayFilter, RpqlFlatFilter } from \"@rp/common/api-types\"\n\ntype ReducedFilters = Record<\n  string,\n  (RpqlFlatFilter & { macroFilters?: Array<RpqlFlatFilter | null> }) | null\n>\n\nconst reduceMacroContents = (filters: Array<RpqlFlatFilter | null>) => {\n  return filters.reduce((acc: Record<string, RpqlFlatArrayFilter>, filter) => {\n    if (!filter || !isRpqlFlatArrayFilter(filter)) {\n      throw new Error(\n        \"There was an error in the construction of the rpql flat filters: Invalid child as part of Macro\",\n      )\n    }\n\n    return { ...acc, [filter.id]: filter }\n  }, {})\n}\n\n// Checks if there are more items on the current query, and if there is only one extra, returns the id\nconst compareQueries = (currentQuery: ReducedFilters, previousQuery: ReducedFilters) => {\n  let selectedId: string | null = null\n\n  for (const [id, filter] of Object.entries(currentQuery)) {\n    const previousQueryFilter = previousQuery[id]\n    const interestingFilter = filter !== null && !isRpqlFlatLogicalGroup(filter)\n\n    if (\n      interestingFilter &&\n      isRpqlFlatMatchFilter(filter) &&\n      previousQueryFilter &&\n      isRpqlFlatMatchFilter(previousQueryFilter) &&\n      previousQueryFilter.value.length === filter.value.length\n    ) {\n      // Check if there is anything new inside the macro chip\n      const macroChildren = filter.macroFilters ? reduceMacroContents(filter.macroFilters) : {}\n      const previousMacroChildren = previousQueryFilter.macroFilters\n        ? reduceMacroContents(previousQueryFilter.macroFilters)\n        : {}\n      if (compareQueries(macroChildren, previousMacroChildren)) {\n        if (selectedId !== null) {\n          return null\n        }\n\n        selectedId = id\n      }\n    }\n\n    // Whole new chip added\n    else if (previousQueryFilter === undefined && interestingFilter) {\n      // If more than one change at the same time, invalid\n      if (selectedId !== null) {\n        return null\n      }\n      selectedId = id\n    }\n\n    // Value array updated\n    else if (\n      interestingFilter &&\n      previousQueryFilter &&\n      !isRpqlFlatLogicalGroup(previousQueryFilter)\n    ) {\n      // Probably we should check content, not only size incremented by 1\n      if (\n        (isRpqlFlatArrayFilter(filter) || isRpqlFlatMatchFilter(filter)) &&\n        (isRpqlFlatArrayFilter(previousQueryFilter) ||\n          isRpqlFlatMatchFilter(previousQueryFilter)) &&\n        filter.value.length === previousQueryFilter.value.length + 1\n      ) {\n        // If more than one change at the same time, invalid\n        if (selectedId !== null) {\n          return null\n        }\n\n        selectedId = id\n      }\n    }\n  }\n\n  return selectedId\n}\n\nexport { compareQueries }\n"],"names":["compareQueries","reduceMacroContents","filters","reduce","acc","filter","isRpqlFlatArrayFilter","Error","id","currentQuery","previousQuery","selectedId","Object","entries","previousQueryFilter","interestingFilter","isRpqlFlatLogicalGroup","isRpqlFlatMatchFilter","value","length","macroChildren","macroFilters","previousMacroChildren","undefined"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAwFSA;;;eAAAA;;;0BApFF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQP,MAAMC,sBAAsB,CAACC;IAC3B,OAAOA,QAAQC,MAAM,CAAC,CAACC,KAA0CC;QAC/D,IAAI,CAACA,UAAU,CAACC,IAAAA,+BAAqB,EAACD,SAAS;YAC7C,MAAM,IAAIE,MACR;QAEJ;QAEA,OAAO,wCAAKH;YAAK,CAACC,OAAOG,EAAE,CAAC,EAAEH;;IAChC,GAAG,CAAC;AACN;AAEA,sGAAsG;AACtG,MAAML,iBAAiB,CAACS,cAA8BC;IACpD,IAAIC,aAA4B;IAEhC,KAAK,MAAM,CAACH,IAAIH,OAAO,IAAIO,OAAOC,OAAO,CAACJ,cAAe;QACvD,MAAMK,sBAAsBJ,aAAa,CAACF,GAAG;QAC7C,MAAMO,oBAAoBV,WAAW,QAAQ,CAACW,IAAAA,gCAAsB,EAACX;QAErE,IACEU,qBACAE,IAAAA,+BAAqB,EAACZ,WACtBS,uBACAG,IAAAA,+BAAqB,EAACH,wBACtBA,oBAAoBI,KAAK,CAACC,MAAM,KAAKd,OAAOa,KAAK,CAACC,MAAM,EACxD;YACA,uDAAuD;YACvD,MAAMC,gBAAgBf,OAAOgB,YAAY,GAAGpB,oBAAoBI,OAAOgB,YAAY,IAAI,CAAC;YACxF,MAAMC,wBAAwBR,oBAAoBO,YAAY,GAC1DpB,oBAAoBa,oBAAoBO,YAAY,IACpD,CAAC;YACL,IAAIrB,eAAeoB,eAAeE,wBAAwB;gBACxD,IAAIX,eAAe,MAAM;oBACvB,OAAO;gBACT;gBAEAA,aAAaH;YACf;QACF,OAGK,IAAIM,wBAAwBS,aAAaR,mBAAmB;YAC/D,oDAAoD;YACpD,IAAIJ,eAAe,MAAM;gBACvB,OAAO;YACT;YACAA,aAAaH;QACf,OAGK,IACHO,qBACAD,uBACA,CAACE,IAAAA,gCAAsB,EAACF,sBACxB;YACA,mEAAmE;YACnE,IACE,AAACR,CAAAA,IAAAA,+BAAqB,EAACD,WAAWY,IAAAA,+BAAqB,EAACZ,OAAM,KAC7DC,CAAAA,IAAAA,+BAAqB,EAACQ,wBACrBG,IAAAA,+BAAqB,EAACH,oBAAmB,KAC3CT,OAAOa,KAAK,CAACC,MAAM,KAAKL,oBAAoBI,KAAK,CAACC,MAAM,GAAG,GAC3D;gBACA,oDAAoD;gBACpD,IAAIR,eAAe,MAAM;oBACvB,OAAO;gBACT;gBAEAA,aAAaH;YACf;QACF;IACF;IAEA,OAAOG;AACT"}