{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/adapters/src/lib/web/index.ts"],"sourcesContent":["import { Clerk } from \"@clerk/types\"\nimport { datadogRum } from \"@datadog/browser-rum\"\nimport * as Sentry from \"@sentry/react\"\nimport { Adapters, Config, EnvironmentName, NativeFile } from \"../adapters.type\"\nimport {\n  customerIOLogout,\n  customerIoIdentify,\n  customerIoInit,\n  customerIoPageView,\n  customerIoTrack,\n} from \"./customer-io\"\nimport { TA_EXTENSIONS } from \"./ta-extensions\"\n\nfunction utf8ToBase64(utf8Text: string): string {\n  const utf8Bytes = new TextEncoder().encode(utf8Text)\n  const binaryString = String.fromCharCode(...utf8Bytes)\n  return btoa(binaryString)\n}\n\nfunction base64ToUtf8(base64String: string): string {\n  const binaryString = atob(base64String)\n  const bytes = new Uint8Array([...binaryString].map(char => char.charCodeAt(0)))\n  return new TextDecoder(\"utf-8\").decode(bytes)\n}\n\nconst TEMPLATE_TOKEN = \"bigdata_web\"\n\ndeclare global {\n  interface Window {\n    Clerk?: Clerk\n  }\n}\n\nconst api: Adapters[\"api\"] = {\n  async getClerkToken() {\n    if (window.localStorage.getItem(\"integration-testing\")) return \"token\"\n    const token = await window?.Clerk?.session?.getToken({ template: TEMPLATE_TOKEN })\n    return token ?? \"\"\n  },\n}\n\nconst location: Adapters[\"location\"] = {\n  getOrigin: () => window.location.origin,\n  getAbsoluteBaseUrl: () =>\n    `${window.location.origin}${process.env[\"NX_PUBLIC_PUBLIC_URL\"] ?? \"/\"}`,\n  getRelativeBaseUrl: () => `${process.env[\"NX_PUBLIC_PUBLIC_URL\"] ?? \"/\"}`,\n}\n\nconst file: Adapters[\"file\"] = {\n  getTaExtension: () => TA_EXTENSIONS,\n  getSrc: (blob: File | NativeFile) => {\n    if (blob instanceof File) {\n      return window.URL.createObjectURL(blob)\n    }\n    return \"\"\n  },\n  formatData: (file: File | NativeFile) => {\n    if (file instanceof File) {\n      return file\n    }\n    return\n  },\n  size: async (file: File | NativeFile) => {\n    if (file instanceof File) {\n      return file.size\n    }\n    return 0\n  },\n  toBase64: (file: File | NativeFile) => {\n    return new Promise<string>((resolve, reject) => {\n      if (file instanceof File) {\n        const reader = new FileReader()\n        reader.readAsDataURL(file)\n        reader.onload = () => {\n          if (typeof reader.result === \"string\") {\n            const RFC_2397_REG_EXP = /^data:(.*?);base64,(.*)$/\n            const [_, _mimeType, base64String = \"\"] = reader.result.match(RFC_2397_REG_EXP) ?? []\n            return resolve(utf8ToBase64(base64ToUtf8(base64String)))\n          }\n          resolve(\"\")\n        }\n        reader.onerror = reject\n      } else {\n        resolve(\"\")\n      }\n    })\n  },\n}\n\nconst customerIo: Adapters[\"customerIo\"] = {\n  init: (config: Config | EnvironmentName) => {\n    if (typeof config === \"string\") {\n      return customerIoInit(config)\n    }\n  },\n  identify: customerIoIdentify,\n  track: customerIoTrack,\n  pageView: customerIoPageView,\n  logout: customerIOLogout,\n}\n\nconst asyncStorage: Adapters[\"asyncStorage\"] = {\n  storeDataAsyncStorage: async () => {},\n  getDataAsyncStorage: async () => \"\",\n}\n\nexport const adapters: Adapters = {\n  name: \"web\",\n  api,\n  location,\n  file,\n  customerIo,\n  asyncStorage,\n  platform: { name: \"web\", os: null },\n  isLocalEnv: () => !window.location.hostname.includes(\"bigdata.com\"),\n  reportError: async (error: Error, message?: string) => {\n    if (message) {\n      Sentry.withScope(scope => {\n        scope.setExtras({ type: message })\n        Sentry.captureException(error)\n      })\n    } else {\n      Sentry.captureException(error)\n    }\n    datadogRum.addError(error, { message })\n    return\n  },\n}\n"],"names":["adapters","utf8ToBase64","utf8Text","utf8Bytes","TextEncoder","encode","binaryString","String","fromCharCode","btoa","base64ToUtf8","base64String","atob","bytes","Uint8Array","map","char","charCodeAt","TextDecoder","decode","TEMPLATE_TOKEN","api","getClerkToken","window","localStorage","getItem","token","Clerk","session","getToken","template","location","getOrigin","origin","getAbsoluteBaseUrl","process","env","getRelativeBaseUrl","file","getTaExtension","TA_EXTENSIONS","getSrc","blob","File","URL","createObjectURL","formatData","size","toBase64","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","RFC_2397_REG_EXP","_","_mimeType","match","onerror","customerIo","init","config","customerIoInit","identify","customerIoIdentify","track","customerIoTrack","pageView","customerIoPageView","logout","customerIOLogout","asyncStorage","storeDataAsyncStorage","getDataAsyncStorage","name","platform","os","isLocalEnv","hostname","includes","reportError","error","message","Sentry","withScope","scope","setExtras","type","captureException","datadogRum","addError"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}