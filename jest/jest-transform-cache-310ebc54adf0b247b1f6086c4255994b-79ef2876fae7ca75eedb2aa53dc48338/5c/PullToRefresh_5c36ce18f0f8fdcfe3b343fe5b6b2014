76644d54c782321d4ccee38856e5f35b
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "PullToRefresh", {
    enumerable: true,
    get: function() {
        return PullToRefresh;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _core = require("@rp/react/web/mui/core");
const _LoadingSpinner = require("../LoadingSpinner");
const _RefreshIndicator = require("./RefreshIndicator");
const createTouchCoordinates = (x, y)=>({
        x,
        y
    });
const getTouchesCoordinatesFrom = (event)=>{
    return createTouchCoordinates(event.targetTouches[0].screenX, event.targetTouches[0].screenY);
};
const isDisabled = ()=>window.getComputedStyle(document.body).overflowY === "hidden";
const PullToRefresh = ()=>{
    const [dragStartPoint, setDragStartPoint] = (0, _react.useState)(createTouchCoordinates(0, 0));
    const [drag, setDrag] = (0, _react.useState)(0);
    const [isRefreshing, setIsRefreshing] = (0, _react.useState)(false);
    (0, _react.useEffect)(()=>{
        const start = (event)=>{
            if (isDisabled()) return;
            const { x, y } = getTouchesCoordinatesFrom(event);
            setDragStartPoint({
                x,
                y
            });
            setDrag(0);
        };
        document.addEventListener("touchstart", start, {
            passive: false
        });
        return ()=>document.removeEventListener("touchstart", start);
    }, []);
    (0, _react.useEffect)(()=>{
        const end = ()=>{
            if (isDisabled()) return;
            setDrag((prev)=>{
                if (prev > 120 && window.scrollY <= 0) {
                    setIsRefreshing(true);
                    setTimeout(()=>window.location.reload(), 500);
                }
                return 0;
            });
            setDragStartPoint(createTouchCoordinates(0, 0));
        };
        document.addEventListener("touchend", end, {
            passive: false
        });
        return ()=>document.removeEventListener("touchend", end);
    }, []);
    (0, _react.useEffect)(()=>{
        if (dragStartPoint.y === 0) return;
        const move = (event)=>{
            if (isDisabled()) return;
            const currentPoint = getTouchesCoordinatesFrom(event);
            setDrag(currentPoint.y - dragStartPoint.y);
        };
        document.addEventListener("touchmove", move, {
            passive: false
        });
        return ()=>{
            document.removeEventListener("touchmove", move);
        };
    }, [
        dragStartPoint.y
    ]);
    if (isRefreshing) return /*#__PURE__*/ (0, _jsxruntime.jsx)(_LoadingSpinner.LoadingSpinner, {
        fillBackground: true
    });
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_RefreshIndicator.RefreshIndicator, {
            size: 50,
            drag: drag
        })
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9iYXNlLWNvbXBvbmVudHMvc3JjL1B3YVB1bGxUb1JlZnJlc2gvUHVsbFRvUmVmcmVzaC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgeyBCb3ggfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9tdWkvY29yZVwiXG5pbXBvcnQgeyBMb2FkaW5nU3Bpbm5lciB9IGZyb20gXCIuLi9Mb2FkaW5nU3Bpbm5lclwiXG5pbXBvcnQgeyBSZWZyZXNoSW5kaWNhdG9yIH0gZnJvbSBcIi4vUmVmcmVzaEluZGljYXRvclwiXG5cbmNvbnN0IGNyZWF0ZVRvdWNoQ29vcmRpbmF0ZXMgPSAoeDogbnVtYmVyLCB5OiBudW1iZXIpID0+ICh7IHgsIHkgfSlcblxuY29uc3QgZ2V0VG91Y2hlc0Nvb3JkaW5hdGVzRnJvbSA9IChldmVudDogVG91Y2hFdmVudCkgPT4ge1xuICByZXR1cm4gY3JlYXRlVG91Y2hDb29yZGluYXRlcyhldmVudC50YXJnZXRUb3VjaGVzWzBdLnNjcmVlblgsIGV2ZW50LnRhcmdldFRvdWNoZXNbMF0uc2NyZWVuWSlcbn1cblxuY29uc3QgaXNEaXNhYmxlZCA9ICgpID0+IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGRvY3VtZW50LmJvZHkpLm92ZXJmbG93WSA9PT0gXCJoaWRkZW5cIlxuXG5jb25zdCBQdWxsVG9SZWZyZXNoID0gKCkgPT4ge1xuICBjb25zdCBbZHJhZ1N0YXJ0UG9pbnQsIHNldERyYWdTdGFydFBvaW50XSA9IHVzZVN0YXRlKGNyZWF0ZVRvdWNoQ29vcmRpbmF0ZXMoMCwgMCkpXG4gIGNvbnN0IFtkcmFnLCBzZXREcmFnXSA9IHVzZVN0YXRlKDApXG4gIGNvbnN0IFtpc1JlZnJlc2hpbmcsIHNldElzUmVmcmVzaGluZ10gPSB1c2VTdGF0ZShmYWxzZSlcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IHN0YXJ0ID0gKGV2ZW50OiBUb3VjaEV2ZW50KSA9PiB7XG4gICAgICBpZiAoaXNEaXNhYmxlZCgpKSByZXR1cm5cbiAgICAgIGNvbnN0IHsgeCwgeSB9ID0gZ2V0VG91Y2hlc0Nvb3JkaW5hdGVzRnJvbShldmVudClcbiAgICAgIHNldERyYWdTdGFydFBvaW50KHsgeCwgeSB9KVxuICAgICAgc2V0RHJhZygwKVxuICAgIH1cbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwidG91Y2hzdGFydFwiLCBzdGFydCwgeyBwYXNzaXZlOiBmYWxzZSB9KVxuICAgIHJldHVybiAoKSA9PiBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwidG91Y2hzdGFydFwiLCBzdGFydClcbiAgfSwgW10pXG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBlbmQgPSAoKSA9PiB7XG4gICAgICBpZiAoaXNEaXNhYmxlZCgpKSByZXR1cm5cbiAgICAgIHNldERyYWcocHJldiA9PiB7XG4gICAgICAgIGlmIChwcmV2ID4gMTIwICYmIHdpbmRvdy5zY3JvbGxZIDw9IDApIHtcbiAgICAgICAgICBzZXRJc1JlZnJlc2hpbmcodHJ1ZSlcbiAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKSwgNTAwKVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiAwXG4gICAgICB9KVxuICAgICAgc2V0RHJhZ1N0YXJ0UG9pbnQoY3JlYXRlVG91Y2hDb29yZGluYXRlcygwLCAwKSlcbiAgICB9XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInRvdWNoZW5kXCIsIGVuZCwgeyBwYXNzaXZlOiBmYWxzZSB9KVxuICAgIHJldHVybiAoKSA9PiBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwidG91Y2hlbmRcIiwgZW5kKVxuICB9LCBbXSlcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChkcmFnU3RhcnRQb2ludC55ID09PSAwKSByZXR1cm5cbiAgICBjb25zdCBtb3ZlID0gKGV2ZW50OiBUb3VjaEV2ZW50KSA9PiB7XG4gICAgICBpZiAoaXNEaXNhYmxlZCgpKSByZXR1cm5cbiAgICAgIGNvbnN0IGN1cnJlbnRQb2ludCA9IGdldFRvdWNoZXNDb29yZGluYXRlc0Zyb20oZXZlbnQpXG4gICAgICBzZXREcmFnKGN1cnJlbnRQb2ludC55IC0gZHJhZ1N0YXJ0UG9pbnQueSlcbiAgICB9XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInRvdWNobW92ZVwiLCBtb3ZlLCB7IHBhc3NpdmU6IGZhbHNlIH0pXG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ0b3VjaG1vdmVcIiwgbW92ZSlcbiAgICB9XG4gIH0sIFtkcmFnU3RhcnRQb2ludC55XSlcblxuICBpZiAoaXNSZWZyZXNoaW5nKSByZXR1cm4gPExvYWRpbmdTcGlubmVyIGZpbGxCYWNrZ3JvdW5kIC8+XG5cbiAgcmV0dXJuIChcbiAgICA8Qm94PlxuICAgICAgPFJlZnJlc2hJbmRpY2F0b3Igc2l6ZT17NTB9IGRyYWc9e2RyYWd9IC8+XG4gICAgPC9Cb3g+XG4gIClcbn1cblxuZXhwb3J0IHsgUHVsbFRvUmVmcmVzaCB9XG4iXSwibmFtZXMiOlsiUHVsbFRvUmVmcmVzaCIsImNyZWF0ZVRvdWNoQ29vcmRpbmF0ZXMiLCJ4IiwieSIsImdldFRvdWNoZXNDb29yZGluYXRlc0Zyb20iLCJldmVudCIsInRhcmdldFRvdWNoZXMiLCJzY3JlZW5YIiwic2NyZWVuWSIsImlzRGlzYWJsZWQiLCJ3aW5kb3ciLCJnZXRDb21wdXRlZFN0eWxlIiwiZG9jdW1lbnQiLCJib2R5Iiwib3ZlcmZsb3dZIiwiZHJhZ1N0YXJ0UG9pbnQiLCJzZXREcmFnU3RhcnRQb2ludCIsInVzZVN0YXRlIiwiZHJhZyIsInNldERyYWciLCJpc1JlZnJlc2hpbmciLCJzZXRJc1JlZnJlc2hpbmciLCJ1c2VFZmZlY3QiLCJzdGFydCIsImFkZEV2ZW50TGlzdGVuZXIiLCJwYXNzaXZlIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImVuZCIsInByZXYiLCJzY3JvbGxZIiwic2V0VGltZW91dCIsImxvY2F0aW9uIiwicmVsb2FkIiwibW92ZSIsImN1cnJlbnRQb2ludCIsIkxvYWRpbmdTcGlubmVyIiwiZmlsbEJhY2tncm91bmQiLCJCb3giLCJSZWZyZXNoSW5kaWNhdG9yIiwic2l6ZSJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBbUVTQTs7O2VBQUFBOzs7O3VCQW5FMkI7c0JBQ2hCO2dDQUNXO2tDQUNFO0FBRWpDLE1BQU1DLHlCQUF5QixDQUFDQyxHQUFXQyxJQUFlLENBQUE7UUFBRUQ7UUFBR0M7SUFBRSxDQUFBO0FBRWpFLE1BQU1DLDRCQUE0QixDQUFDQztJQUNqQyxPQUFPSix1QkFBdUJJLE1BQU1DLGFBQWEsQ0FBQyxFQUFFLENBQUNDLE9BQU8sRUFBRUYsTUFBTUMsYUFBYSxDQUFDLEVBQUUsQ0FBQ0UsT0FBTztBQUM5RjtBQUVBLE1BQU1DLGFBQWEsSUFBTUMsT0FBT0MsZ0JBQWdCLENBQUNDLFNBQVNDLElBQUksRUFBRUMsU0FBUyxLQUFLO0FBRTlFLE1BQU1kLGdCQUFnQjtJQUNwQixNQUFNLENBQUNlLGdCQUFnQkMsa0JBQWtCLEdBQUdDLElBQUFBLGVBQVEsRUFBQ2hCLHVCQUF1QixHQUFHO0lBQy9FLE1BQU0sQ0FBQ2lCLE1BQU1DLFFBQVEsR0FBR0YsSUFBQUEsZUFBUSxFQUFDO0lBQ2pDLE1BQU0sQ0FBQ0csY0FBY0MsZ0JBQWdCLEdBQUdKLElBQUFBLGVBQVEsRUFBQztJQUVqREssSUFBQUEsZ0JBQVMsRUFBQztRQUNSLE1BQU1DLFFBQVEsQ0FBQ2xCO1lBQ2IsSUFBSUksY0FBYztZQUNsQixNQUFNLEVBQUVQLENBQUMsRUFBRUMsQ0FBQyxFQUFFLEdBQUdDLDBCQUEwQkM7WUFDM0NXLGtCQUFrQjtnQkFBRWQ7Z0JBQUdDO1lBQUU7WUFDekJnQixRQUFRO1FBQ1Y7UUFDQVAsU0FBU1ksZ0JBQWdCLENBQUMsY0FBY0QsT0FBTztZQUFFRSxTQUFTO1FBQU07UUFDaEUsT0FBTyxJQUFNYixTQUFTYyxtQkFBbUIsQ0FBQyxjQUFjSDtJQUMxRCxHQUFHLEVBQUU7SUFFTEQsSUFBQUEsZ0JBQVMsRUFBQztRQUNSLE1BQU1LLE1BQU07WUFDVixJQUFJbEIsY0FBYztZQUNsQlUsUUFBUVMsQ0FBQUE7Z0JBQ04sSUFBSUEsT0FBTyxPQUFPbEIsT0FBT21CLE9BQU8sSUFBSSxHQUFHO29CQUNyQ1IsZ0JBQWdCO29CQUNoQlMsV0FBVyxJQUFNcEIsT0FBT3FCLFFBQVEsQ0FBQ0MsTUFBTSxJQUFJO2dCQUM3QztnQkFDQSxPQUFPO1lBQ1Q7WUFDQWhCLGtCQUFrQmYsdUJBQXVCLEdBQUc7UUFDOUM7UUFDQVcsU0FBU1ksZ0JBQWdCLENBQUMsWUFBWUcsS0FBSztZQUFFRixTQUFTO1FBQU07UUFDNUQsT0FBTyxJQUFNYixTQUFTYyxtQkFBbUIsQ0FBQyxZQUFZQztJQUN4RCxHQUFHLEVBQUU7SUFFTEwsSUFBQUEsZ0JBQVMsRUFBQztRQUNSLElBQUlQLGVBQWVaLENBQUMsS0FBSyxHQUFHO1FBQzVCLE1BQU04QixPQUFPLENBQUM1QjtZQUNaLElBQUlJLGNBQWM7WUFDbEIsTUFBTXlCLGVBQWU5QiwwQkFBMEJDO1lBQy9DYyxRQUFRZSxhQUFhL0IsQ0FBQyxHQUFHWSxlQUFlWixDQUFDO1FBQzNDO1FBQ0FTLFNBQVNZLGdCQUFnQixDQUFDLGFBQWFTLE1BQU07WUFBRVIsU0FBUztRQUFNO1FBQzlELE9BQU87WUFDTGIsU0FBU2MsbUJBQW1CLENBQUMsYUFBYU87UUFDNUM7SUFDRixHQUFHO1FBQUNsQixlQUFlWixDQUFDO0tBQUM7SUFFckIsSUFBSWlCLGNBQWMscUJBQU8scUJBQUNlLDhCQUFjO1FBQUNDLGNBQWM7O0lBRXZELHFCQUNFLHFCQUFDQyxTQUFHO2tCQUNGLGNBQUEscUJBQUNDLGtDQUFnQjtZQUFDQyxNQUFNO1lBQUlyQixNQUFNQTs7O0FBR3hDIn0=