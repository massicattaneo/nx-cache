9e4f771d932acaf057fea8523a9b5bff
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    ChatInputContainer: function() {
        return ChatInputContainer;
    },
    TextArea: function() {
        return TextArea;
    }
});
const _theme = require("@rp/react/theme");
const _hooks = require("@rp/react/web/common/hooks");
const _core = require("@rp/react/web/mui/core");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function shouldForwardProp(prop) {
    const customProps = [
        "isPopperOpen",
        "multiline",
        "displayAttachFiles",
        "controls",
        "hasAttachment",
        "isHomePageChat"
    ];
    return !customProps.includes(prop);
}
const ChatInputContainer = (0, _theme.styled)(_core.Box, {
    shouldForwardProp
})(({ theme, isPopperOpen, multiline, displayAttachFiles, controls = [], hasAttachment = false, isHomePageChat = false })=>{
    const { isMobile } = (0, _hooks.useDeviceInfo)();
    const paddingBottomDesktop = multiline ? 5 : 0;
    const paddingBottomMobile = multiline ? 5.5 : 0.5;
    const paddingRight = displayAttachFiles ? 9 : 7;
    const itemCount = controls.length;
    const baseButtonPadding = 5;
    const singleLinePaddingLeft = itemCount * baseButtonPadding + 1;
    const paddingLeft = multiline ? 2 : singleLinePaddingLeft;
    return isHomePageChat ? _object_spread_props(_object_spread({
        mb: 4,
        position: "relative",
        flexGrow: 1,
        paddingTop: theme.spacing(1.5),
        paddingBottom: theme.spacing(isMobile ? paddingBottomMobile : paddingBottomDesktop),
        paddingLeft: theme.spacing(paddingLeft),
        paddingRight: multiline ? theme.spacing(2) : theme.spacing(paddingRight),
        borderRadius: isPopperOpen || hasAttachment ? 0 : 8,
        borderTopLeftRadius: isPopperOpen && !hasAttachment ? 8 : undefined,
        borderTopRightRadius: isPopperOpen && !hasAttachment ? 8 : undefined,
        borderBottomLeftRadius: hasAttachment && !isPopperOpen ? 8 : undefined,
        borderBottomRightRadius: hasAttachment && !isPopperOpen ? 8 : undefined,
        backgroundColor: theme.palette.overlay.surface,
        border: "2px solid",
        borderColor: isPopperOpen ? "rgba(255, 255, 255, 0.3)" : "transparent",
        transition: "border-color 0.2s, padding 0.2s",
        fontFamily: theme.typography.fontFamily,
        fontSize: 16,
        overflow: "auto",
        lineHeight: isMobile ? 1.5 : 2,
        resize: "none",
        color: theme.palette.text.primary,
        borderBottom: isPopperOpen ? 0 : undefined,
        borderTop: hasAttachment ? 0 : undefined
    }, theme.scrollbarStyles), {
        "&:has(textarea:focus)": {
            outline: 0,
            borderColor: "rgba(255,255,255,0.3)"
        }
    }) : _object_spread_props(_object_spread({
        position: "relative",
        flexGrow: 1,
        paddingTop: theme.spacing(1.5),
        paddingBottom: theme.spacing(isMobile ? paddingBottomMobile : paddingBottomDesktop),
        paddingLeft: theme.spacing(paddingLeft),
        paddingRight: multiline ? theme.spacing(2) : theme.spacing(paddingRight),
        borderRadius: isPopperOpen || hasAttachment ? 0 : 8,
        borderBottomLeftRadius: isPopperOpen || hasAttachment ? 8 : undefined,
        borderBottomRightRadius: isPopperOpen || hasAttachment ? 8 : undefined,
        backgroundColor: theme.palette.overlay.surface,
        border: "2px solid",
        borderColor: isPopperOpen ? "rgba(255, 255, 255, 0.3)" : "transparent",
        transition: "border-color 0.2s, padding 0.2s",
        fontFamily: theme.typography.fontFamily,
        fontSize: 16,
        overflow: "auto",
        lineHeight: isMobile ? 1.5 : 2,
        resize: "none",
        color: theme.palette.text.primary,
        borderTop: isPopperOpen || hasAttachment ? 0 : undefined
    }, theme.scrollbarStyles), {
        "&:has(textarea:focus)": {
            outline: 0,
            borderColor: "rgba(255,255,255,0.3)"
        }
    });
});
const TextArea = (0, _theme.styled)(_core.TextareaAutosize)(({ theme })=>{
    const { isMobile } = (0, _hooks.useDeviceInfo)();
    return _object_spread_props(_object_spread({
        width: "100%",
        fontFamily: theme.typography.fontFamily,
        fontSize: 17,
        overflow: "auto",
        lineHeight: isMobile ? 1.5 : 2,
        resize: "none",
        color: theme.palette.text.primary,
        backgroundColor: "transparent",
        border: 0,
        padding: 0
    }, theme.scrollbarStyles), {
        "&:placeholder-shown": {
            textOverflow: "ellipsis",
            whiteSpace: "nowrap",
            overflow: "hidden"
        },
        "&:placeholder": {
            textOverflow: "ellipsis",
            whiteSpace: "nowrap",
            overflow: "hidden"
        },
        "&:focus": {
            outline: 0,
            borderColor: "rgba(255,255,255,0.3)"
        }
    });
});

//# sourceMappingURL=data:application/json;base64,