{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/rpql/src/lib/rpql-utils/addFilterToMap.ts"],"sourcesContent":["import { isRpqlFlatLogicalGroup, isRpqlFlatMatchFilter } from \"@rp/common/api-types\"\nimport { RpqlFilter } from \"@rp/common/api-types\"\nimport { RpqlFilterMap, RpqlFlatFilter } from \"@rp/common/api-types\"\nimport { flattenQuery } from \"./flattenQuery\"\n\nconst addFilterToMap = (\n  filterMap: RpqlFilterMap,\n  parent: RpqlFlatFilter | null,\n  filter: RpqlFilter,\n) => {\n  if (parent === null) return { error: \"Attempting to add to non-existing filter\", map: filterMap }\n  if (!isRpqlFlatLogicalGroup(parent) && !isRpqlFlatMatchFilter(parent))\n    return {\n      error: \"Filters can only be added to `and` or `or` filters, unless it is a macro search\",\n      map: filterMap,\n    }\n\n  const flatQuery = flattenQuery(filter)\n\n  const map: RpqlFilterMap = {\n    ...filterMap,\n    ...flatQuery.filterMap,\n    [parent.id]: { ...parent, value: [...parent.value, flatQuery.root] },\n  }\n  return { map }\n}\n\nexport { addFilterToMap }\n"],"names":["addFilterToMap","filterMap","parent","filter","error","map","isRpqlFlatLogicalGroup","isRpqlFlatMatchFilter","flatQuery","flattenQuery","id","value","root"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BA2BSA;;;eAAAA;;;0BA3BqD;8BAGjC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAE7B,MAAMA,iBAAiB,CACrBC,WACAC,QACAC;IAEA,IAAID,WAAW,MAAM,OAAO;QAAEE,OAAO;QAA4CC,KAAKJ;IAAU;IAChG,IAAI,CAACK,IAAAA,gCAAsB,EAACJ,WAAW,CAACK,IAAAA,+BAAqB,EAACL,SAC5D,OAAO;QACLE,OAAO;QACPC,KAAKJ;IACP;IAEF,MAAMO,YAAYC,IAAAA,0BAAY,EAACN;IAE/B,MAAME,MAAqB,wCACtBJ,WACAO,UAAUP,SAAS;QACtB,CAACC,OAAOQ,EAAE,CAAC,EAAE,wCAAKR;YAAQS,OAAO;mBAAIT,OAAOS,KAAK;gBAAEH,UAAUI,IAAI;aAAC;;;IAEpE,OAAO;QAAEP;IAAI;AACf"}