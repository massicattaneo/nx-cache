aa99ef847c238bd3260a61efebdc6c0c
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "addFilterToMap", {
    enumerable: true,
    get: function() {
        return addFilterToMap;
    }
});
const _apitypes = require("@rp/common/api-types");
const _flattenQuery = require("./flattenQuery");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const addFilterToMap = (filterMap, parent, filter)=>{
    if (parent === null) return {
        error: "Attempting to add to non-existing filter",
        map: filterMap
    };
    if (!(0, _apitypes.isRpqlFlatLogicalGroup)(parent) && !(0, _apitypes.isRpqlFlatMatchFilter)(parent)) return {
        error: "Filters can only be added to `and` or `or` filters, unless it is a macro search",
        map: filterMap
    };
    const flatQuery = (0, _flattenQuery.flattenQuery)(filter);
    const map = _object_spread_props(_object_spread({}, filterMap, flatQuery.filterMap), {
        [parent.id]: _object_spread_props(_object_spread({}, parent), {
            value: [
                ...parent.value,
                flatQuery.root
            ]
        })
    });
    return {
        map
    };
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3QvcnBxbC9zcmMvbGliL3JwcWwtdXRpbHMvYWRkRmlsdGVyVG9NYXAudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNScHFsRmxhdExvZ2ljYWxHcm91cCwgaXNScHFsRmxhdE1hdGNoRmlsdGVyIH0gZnJvbSBcIkBycC9jb21tb24vYXBpLXR5cGVzXCJcbmltcG9ydCB7IFJwcWxGaWx0ZXIgfSBmcm9tIFwiQHJwL2NvbW1vbi9hcGktdHlwZXNcIlxuaW1wb3J0IHsgUnBxbEZpbHRlck1hcCwgUnBxbEZsYXRGaWx0ZXIgfSBmcm9tIFwiQHJwL2NvbW1vbi9hcGktdHlwZXNcIlxuaW1wb3J0IHsgZmxhdHRlblF1ZXJ5IH0gZnJvbSBcIi4vZmxhdHRlblF1ZXJ5XCJcblxuY29uc3QgYWRkRmlsdGVyVG9NYXAgPSAoXG4gIGZpbHRlck1hcDogUnBxbEZpbHRlck1hcCxcbiAgcGFyZW50OiBScHFsRmxhdEZpbHRlciB8IG51bGwsXG4gIGZpbHRlcjogUnBxbEZpbHRlcixcbikgPT4ge1xuICBpZiAocGFyZW50ID09PSBudWxsKSByZXR1cm4geyBlcnJvcjogXCJBdHRlbXB0aW5nIHRvIGFkZCB0byBub24tZXhpc3RpbmcgZmlsdGVyXCIsIG1hcDogZmlsdGVyTWFwIH1cbiAgaWYgKCFpc1JwcWxGbGF0TG9naWNhbEdyb3VwKHBhcmVudCkgJiYgIWlzUnBxbEZsYXRNYXRjaEZpbHRlcihwYXJlbnQpKVxuICAgIHJldHVybiB7XG4gICAgICBlcnJvcjogXCJGaWx0ZXJzIGNhbiBvbmx5IGJlIGFkZGVkIHRvIGBhbmRgIG9yIGBvcmAgZmlsdGVycywgdW5sZXNzIGl0IGlzIGEgbWFjcm8gc2VhcmNoXCIsXG4gICAgICBtYXA6IGZpbHRlck1hcCxcbiAgICB9XG5cbiAgY29uc3QgZmxhdFF1ZXJ5ID0gZmxhdHRlblF1ZXJ5KGZpbHRlcilcblxuICBjb25zdCBtYXA6IFJwcWxGaWx0ZXJNYXAgPSB7XG4gICAgLi4uZmlsdGVyTWFwLFxuICAgIC4uLmZsYXRRdWVyeS5maWx0ZXJNYXAsXG4gICAgW3BhcmVudC5pZF06IHsgLi4ucGFyZW50LCB2YWx1ZTogWy4uLnBhcmVudC52YWx1ZSwgZmxhdFF1ZXJ5LnJvb3RdIH0sXG4gIH1cbiAgcmV0dXJuIHsgbWFwIH1cbn1cblxuZXhwb3J0IHsgYWRkRmlsdGVyVG9NYXAgfVxuIl0sIm5hbWVzIjpbImFkZEZpbHRlclRvTWFwIiwiZmlsdGVyTWFwIiwicGFyZW50IiwiZmlsdGVyIiwiZXJyb3IiLCJtYXAiLCJpc1JwcWxGbGF0TG9naWNhbEdyb3VwIiwiaXNScHFsRmxhdE1hdGNoRmlsdGVyIiwiZmxhdFF1ZXJ5IiwiZmxhdHRlblF1ZXJ5IiwiaWQiLCJ2YWx1ZSIsInJvb3QiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkEyQlNBOzs7ZUFBQUE7OzswQkEzQnFEOzhCQUdqQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFN0IsTUFBTUEsaUJBQWlCLENBQ3JCQyxXQUNBQyxRQUNBQztJQUVBLElBQUlELFdBQVcsTUFBTSxPQUFPO1FBQUVFLE9BQU87UUFBNENDLEtBQUtKO0lBQVU7SUFDaEcsSUFBSSxDQUFDSyxJQUFBQSxnQ0FBc0IsRUFBQ0osV0FBVyxDQUFDSyxJQUFBQSwrQkFBcUIsRUFBQ0wsU0FDNUQsT0FBTztRQUNMRSxPQUFPO1FBQ1BDLEtBQUtKO0lBQ1A7SUFFRixNQUFNTyxZQUFZQyxJQUFBQSwwQkFBWSxFQUFDTjtJQUUvQixNQUFNRSxNQUFxQix3Q0FDdEJKLFdBQ0FPLFVBQVVQLFNBQVM7UUFDdEIsQ0FBQ0MsT0FBT1EsRUFBRSxDQUFDLEVBQUUsd0NBQUtSO1lBQVFTLE9BQU87bUJBQUlULE9BQU9TLEtBQUs7Z0JBQUVILFVBQVVJLElBQUk7YUFBQzs7O0lBRXBFLE9BQU87UUFBRVA7SUFBSTtBQUNmIn0=