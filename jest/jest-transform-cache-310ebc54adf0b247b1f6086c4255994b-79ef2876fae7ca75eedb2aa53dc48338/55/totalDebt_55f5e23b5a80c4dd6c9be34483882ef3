a4066c3cf143888a60554949af4d2efd
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "totalDebt", {
    enumerable: true,
    get: function() {
        return totalDebt;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _WatchlistDataTablePriceCell = require("../../WatchlistDataTableCells/WatchlistDataTablePriceCell");
const _genericColumn = require("../../genericColumn");
const _fiscalPeriodUtils = require("../../utils/fiscalPeriodUtils");
function totalDebt(tableName) {
    const title = "Total Debt (FQ)";
    return (0, _genericColumn.genericColumn)({
        endpoint: "companyBalanceStatement",
        columnKeys: [
            "totalDebt"
        ],
        size: 130,
        title,
        enableSorting: true,
        enableHiding: true,
        tooltip: "Sum of short and long-term debt.",
        cell: (info)=>{
            var _info_row_original_financialData_companyBalanceStatement_data, _info_row_original_financialData_companyBalanceStatement, _info_row_original_financialData_companyBalanceStatement_data1, _info_row_original_financialData_companyBalanceStatement1;
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_WatchlistDataTablePriceCell.WatchlistDataTablePriceCell, {
                tooltip: `Explain the ${title}`,
                queryResult: info.row.original.financialData.companyBalanceStatement,
                currency: (_info_row_original_financialData_companyBalanceStatement = info.row.original.financialData.companyBalanceStatement) === null || _info_row_original_financialData_companyBalanceStatement === void 0 ? void 0 : (_info_row_original_financialData_companyBalanceStatement_data = _info_row_original_financialData_companyBalanceStatement.data) === null || _info_row_original_financialData_companyBalanceStatement_data === void 0 ? void 0 : _info_row_original_financialData_companyBalanceStatement_data.reportedCurrency,
                onClick: ()=>{
                    var _info_row_original_financialData_companyBalanceStatement_data, _info_row_original_financialData_companyBalanceStatement, _info_row_original_onChatWithCell, _info_row_original;
                    const fiscalPeriod = (0, _fiscalPeriodUtils.getBalanceSheetFiscalPeriod)(info.row.original);
                    (_info_row_original_onChatWithCell = (_info_row_original = info.row.original).onChatWithCell) === null || _info_row_original_onChatWithCell === void 0 ? void 0 : _info_row_original_onChatWithCell.call(_info_row_original, {
                        prompt: `What has ${info.row.original.entityInfo.name} reported in ${fiscalPeriod} about total debt?`,
                        value: (_info_row_original_financialData_companyBalanceStatement = info.row.original.financialData.companyBalanceStatement) === null || _info_row_original_financialData_companyBalanceStatement === void 0 ? void 0 : (_info_row_original_financialData_companyBalanceStatement_data = _info_row_original_financialData_companyBalanceStatement.data) === null || _info_row_original_financialData_companyBalanceStatement_data === void 0 ? void 0 : _info_row_original_financialData_companyBalanceStatement_data.totalDebt,
                        entityInfo: info.row.original.entityInfo,
                        columnName: `${tableName}: ${title}`
                    });
                },
                value: (_info_row_original_financialData_companyBalanceStatement1 = info.row.original.financialData.companyBalanceStatement) === null || _info_row_original_financialData_companyBalanceStatement1 === void 0 ? void 0 : (_info_row_original_financialData_companyBalanceStatement_data1 = _info_row_original_financialData_companyBalanceStatement1.data) === null || _info_row_original_financialData_companyBalanceStatement_data1 === void 0 ? void 0 : _info_row_original_financialData_companyBalanceStatement_data1.totalDebt
            });
        }
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL3dhdGNobGlzdHMvc3JjL2xpYi9XYXRjaGxpc3REYXRhVGFicy9lbmRwb2ludHMvY29tcGFueUJhbGFuY2VTdGF0ZW1lbnQvdG90YWxEZWJ0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBXYXRjaGxpc3REYXRhVGFibGVQcmljZUNlbGwgfSBmcm9tIFwiLi4vLi4vV2F0Y2hsaXN0RGF0YVRhYmxlQ2VsbHMvV2F0Y2hsaXN0RGF0YVRhYmxlUHJpY2VDZWxsXCJcbmltcG9ydCB7IGdlbmVyaWNDb2x1bW4gfSBmcm9tIFwiLi4vLi4vZ2VuZXJpY0NvbHVtblwiXG5pbXBvcnQgeyBnZXRCYWxhbmNlU2hlZXRGaXNjYWxQZXJpb2QgfSBmcm9tIFwiLi4vLi4vdXRpbHMvZmlzY2FsUGVyaW9kVXRpbHNcIlxuXG5mdW5jdGlvbiB0b3RhbERlYnQodGFibGVOYW1lOiBzdHJpbmcpIHtcbiAgY29uc3QgdGl0bGUgPSBcIlRvdGFsIERlYnQgKEZRKVwiXG4gIHJldHVybiBnZW5lcmljQ29sdW1uKHtcbiAgICBlbmRwb2ludDogXCJjb21wYW55QmFsYW5jZVN0YXRlbWVudFwiLFxuICAgIGNvbHVtbktleXM6IFtcInRvdGFsRGVidFwiXSxcbiAgICBzaXplOiAxMzAsXG4gICAgdGl0bGUsXG4gICAgZW5hYmxlU29ydGluZzogdHJ1ZSxcbiAgICBlbmFibGVIaWRpbmc6IHRydWUsXG4gICAgdG9vbHRpcDogXCJTdW0gb2Ygc2hvcnQgYW5kIGxvbmctdGVybSBkZWJ0LlwiLFxuICAgIGNlbGw6IGluZm8gPT4ge1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgPFdhdGNobGlzdERhdGFUYWJsZVByaWNlQ2VsbFxuICAgICAgICAgIHRvb2x0aXA9e2BFeHBsYWluIHRoZSAke3RpdGxlfWB9XG4gICAgICAgICAgcXVlcnlSZXN1bHQ9e2luZm8ucm93Lm9yaWdpbmFsLmZpbmFuY2lhbERhdGEuY29tcGFueUJhbGFuY2VTdGF0ZW1lbnR9XG4gICAgICAgICAgY3VycmVuY3k9e2luZm8ucm93Lm9yaWdpbmFsLmZpbmFuY2lhbERhdGEuY29tcGFueUJhbGFuY2VTdGF0ZW1lbnQ/LmRhdGE/LnJlcG9ydGVkQ3VycmVuY3l9XG4gICAgICAgICAgb25DbGljaz17KCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgZmlzY2FsUGVyaW9kID0gZ2V0QmFsYW5jZVNoZWV0RmlzY2FsUGVyaW9kKGluZm8ucm93Lm9yaWdpbmFsKVxuICAgICAgICAgICAgaW5mby5yb3cub3JpZ2luYWwub25DaGF0V2l0aENlbGw/Lih7XG4gICAgICAgICAgICAgIHByb21wdDogYFdoYXQgaGFzICR7aW5mby5yb3cub3JpZ2luYWwuZW50aXR5SW5mby5uYW1lfSByZXBvcnRlZCBpbiAke2Zpc2NhbFBlcmlvZH0gYWJvdXQgdG90YWwgZGVidD9gLFxuICAgICAgICAgICAgICB2YWx1ZTogaW5mby5yb3cub3JpZ2luYWwuZmluYW5jaWFsRGF0YS5jb21wYW55QmFsYW5jZVN0YXRlbWVudD8uZGF0YT8udG90YWxEZWJ0LFxuICAgICAgICAgICAgICBlbnRpdHlJbmZvOiBpbmZvLnJvdy5vcmlnaW5hbC5lbnRpdHlJbmZvLFxuICAgICAgICAgICAgICBjb2x1bW5OYW1lOiBgJHt0YWJsZU5hbWV9OiAke3RpdGxlfWAsXG4gICAgICAgICAgICB9KVxuICAgICAgICAgIH19XG4gICAgICAgICAgdmFsdWU9e2luZm8ucm93Lm9yaWdpbmFsLmZpbmFuY2lhbERhdGEuY29tcGFueUJhbGFuY2VTdGF0ZW1lbnQ/LmRhdGE/LnRvdGFsRGVidH1cbiAgICAgICAgLz5cbiAgICAgIClcbiAgICB9LFxuICB9KVxufVxuXG5leHBvcnQgeyB0b3RhbERlYnQgfVxuIl0sIm5hbWVzIjpbInRvdGFsRGVidCIsInRhYmxlTmFtZSIsInRpdGxlIiwiZ2VuZXJpY0NvbHVtbiIsImVuZHBvaW50IiwiY29sdW1uS2V5cyIsInNpemUiLCJlbmFibGVTb3J0aW5nIiwiZW5hYmxlSGlkaW5nIiwidG9vbHRpcCIsImNlbGwiLCJpbmZvIiwiV2F0Y2hsaXN0RGF0YVRhYmxlUHJpY2VDZWxsIiwicXVlcnlSZXN1bHQiLCJyb3ciLCJvcmlnaW5hbCIsImZpbmFuY2lhbERhdGEiLCJjb21wYW55QmFsYW5jZVN0YXRlbWVudCIsImN1cnJlbmN5IiwiZGF0YSIsInJlcG9ydGVkQ3VycmVuY3kiLCJvbkNsaWNrIiwiZmlzY2FsUGVyaW9kIiwiZ2V0QmFsYW5jZVNoZWV0RmlzY2FsUGVyaW9kIiwib25DaGF0V2l0aENlbGwiLCJwcm9tcHQiLCJlbnRpdHlJbmZvIiwibmFtZSIsInZhbHVlIiwiY29sdW1uTmFtZSJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQW9DU0E7OztlQUFBQTs7Ozs2Q0FwQ21DOytCQUNkO21DQUNjO0FBRTVDLFNBQVNBLFVBQVVDLFNBQWlCO0lBQ2xDLE1BQU1DLFFBQVE7SUFDZCxPQUFPQyxJQUFBQSw0QkFBYSxFQUFDO1FBQ25CQyxVQUFVO1FBQ1ZDLFlBQVk7WUFBQztTQUFZO1FBQ3pCQyxNQUFNO1FBQ05KO1FBQ0FLLGVBQWU7UUFDZkMsY0FBYztRQUNkQyxTQUFTO1FBQ1RDLE1BQU1DLENBQUFBO2dCQUtVQSwrREFBQUEsMERBVUhBLGdFQUFBQTtZQWRYLHFCQUNFLHFCQUFDQyx3REFBMkI7Z0JBQzFCSCxTQUFTLENBQUMsWUFBWSxFQUFFUCxNQUFNLENBQUM7Z0JBQy9CVyxhQUFhRixLQUFLRyxHQUFHLENBQUNDLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDQyx1QkFBdUI7Z0JBQ3BFQyxRQUFRLEdBQUVQLDJEQUFBQSxLQUFLRyxHQUFHLENBQUNDLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDQyx1QkFBdUIsY0FBdkROLGdGQUFBQSxnRUFBQUEseURBQXlEUSxJQUFJLGNBQTdEUixvRkFBQUEsOERBQStEUyxnQkFBZ0I7Z0JBQ3pGQyxTQUFTO3dCQUlFViwrREFBQUEsMERBRlRBLG1DQUFBQTtvQkFEQSxNQUFNVyxlQUFlQyxJQUFBQSw4Q0FBMkIsRUFBQ1osS0FBS0csR0FBRyxDQUFDQyxRQUFRO3FCQUNsRUosb0NBQUFBLENBQUFBLHFCQUFBQSxLQUFLRyxHQUFHLENBQUNDLFFBQVEsRUFBQ1MsY0FBYyxjQUFoQ2Isd0RBQUFBLHVDQUFBQSxvQkFBbUM7d0JBQ2pDYyxRQUFRLENBQUMsU0FBUyxFQUFFZCxLQUFLRyxHQUFHLENBQUNDLFFBQVEsQ0FBQ1csVUFBVSxDQUFDQyxJQUFJLENBQUMsYUFBYSxFQUFFTCxhQUFhLGtCQUFrQixDQUFDO3dCQUNyR00sS0FBSyxHQUFFakIsMkRBQUFBLEtBQUtHLEdBQUcsQ0FBQ0MsUUFBUSxDQUFDQyxhQUFhLENBQUNDLHVCQUF1QixjQUF2RE4sZ0ZBQUFBLGdFQUFBQSx5REFBeURRLElBQUksY0FBN0RSLG9GQUFBQSw4REFBK0RYLFNBQVM7d0JBQy9FMEIsWUFBWWYsS0FBS0csR0FBRyxDQUFDQyxRQUFRLENBQUNXLFVBQVU7d0JBQ3hDRyxZQUFZLENBQUMsRUFBRTVCLFVBQVUsRUFBRSxFQUFFQyxNQUFNLENBQUM7b0JBQ3RDO2dCQUNGO2dCQUNBMEIsS0FBSyxHQUFFakIsNERBQUFBLEtBQUtHLEdBQUcsQ0FBQ0MsUUFBUSxDQUFDQyxhQUFhLENBQUNDLHVCQUF1QixjQUF2RE4saUZBQUFBLGlFQUFBQSwwREFBeURRLElBQUksY0FBN0RSLHFGQUFBQSwrREFBK0RYLFNBQVM7O1FBR3JGO0lBQ0Y7QUFDRiJ9