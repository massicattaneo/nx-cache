{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/development/src/lib/trpc/bigdata-api/procedures/api-keys-procedures.ts"],"sourcesContent":["import { z } from \"zod\"\nimport { bigdataSchemas } from \"@rp/common/contracts\"\nimport { TRPCError } from \"@trpc/server\"\nimport { generateApiKey } from \"../../../database/generators/generateApiKey\"\nimport { bigdataApiProcedure } from \"../bigdata-api-procedure\"\n\nconst apiKeysProcedures = {\n  get: bigdataApiProcedure\n    .meta({ openapi: { method: \"GET\", path: \"/keys\" } })\n    .input(z.object({}))\n    .output(z.array(bigdataSchemas.st_api_keys_GetApiKey))\n    .query(async ({ ctx }) => {\n      return ctx.db.collection(\"apiKeys\").find()\n    }),\n  create: bigdataApiProcedure\n    .meta({ openapi: { method: \"POST\", path: \"/keys\" } })\n    .input(z.object({ description: z.string() }))\n    .output(bigdataSchemas.st_api_keys_CreatedApiKey)\n    .mutation(async ({ ctx, input }) => {\n      const newKey = generateApiKey(input.description)\n      await ctx.db.collection(\"apiKeys\").insertOne(newKey)\n      return newKey\n    }),\n  delete: bigdataApiProcedure\n    .meta({ openapi: { method: \"DELETE\", path: \"/keys/:id\" } })\n    .input(z.object({ id: z.string() }))\n    .output(z.object({ id: z.string() }))\n    .mutation(async ({ ctx, input }) => {\n      const result = await ctx.db.collection(\"apiKeys\").deleteOne({ id: input.id })\n      if (!result) {\n        throw new TRPCError({ code: \"NOT_FOUND\" })\n      }\n      return { id: result.id }\n    }),\n  enable: bigdataApiProcedure\n    .meta({ openapi: { method: \"POST\", path: \"/keys/:id/enable\" } })\n    .input(z.object({ id: z.string() }))\n    .output(z.object({ enabled: z.boolean().default(true) }))\n    .mutation(async ({ ctx, input }) => {\n      const result = await ctx.db\n        .collection(\"apiKeys\")\n        .updateOne({ id: input.id }, { enabled: true, last_updated: new Date().toISOString() })\n      if (!result) {\n        throw new TRPCError({ code: \"NOT_FOUND\" })\n      }\n      return { enabled: true }\n    }),\n  disable: bigdataApiProcedure\n    .meta({ openapi: { method: \"POST\", path: \"/keys/:id/disable\" } })\n    .input(z.object({ id: z.string() }))\n    .output(z.object({ enabled: z.boolean().default(false) }))\n    .mutation(async ({ ctx, input }) => {\n      const result = await ctx.db\n        .collection(\"apiKeys\")\n        .updateOne({ id: input.id }, { enabled: false, last_updated: new Date().toISOString() })\n      if (!result) {\n        throw new TRPCError({ code: \"NOT_FOUND\" })\n      }\n      return { enabled: false }\n    }),\n}\n\nexport { apiKeysProcedures }\n"],"names":["apiKeysProcedures","get","bigdataApiProcedure","meta","openapi","method","path","input","z","object","output","array","bigdataSchemas","st_api_keys_GetApiKey","query","ctx","db","collection","find","create","description","string","st_api_keys_CreatedApiKey","mutation","newKey","generateApiKey","insertOne","delete","id","result","deleteOne","TRPCError","code","enable","enabled","boolean","default","updateOne","last_updated","Date","toISOString","disable"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}