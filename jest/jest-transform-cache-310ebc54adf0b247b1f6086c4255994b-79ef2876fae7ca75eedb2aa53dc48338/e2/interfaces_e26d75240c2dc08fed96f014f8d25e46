3ac6acf9c6a8a55045303423bb984692
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "HandlerRole", {
    enumerable: true,
    get: function() {
        return HandlerRole;
    }
});
var HandlerRole;
(function(HandlerRole) {
    HandlerRole["SOURCE"] = "SOURCE";
    HandlerRole["TARGET"] = "TARGET";
})(HandlerRole || (HandlerRole = {})); //# sourceMappingURL=interfaces.js.map

//# sourceMappingURL=data:application/json;base64,