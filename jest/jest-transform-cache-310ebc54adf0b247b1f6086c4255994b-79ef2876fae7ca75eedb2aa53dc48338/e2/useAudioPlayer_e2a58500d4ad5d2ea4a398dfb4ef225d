ae21d68156a1888b631a84b8e2d8f033
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "useAudioPlayer", {
    enumerable: true,
    get: function() {
        return useAudioPlayer;
    }
});
const _react = require("react");
const _audioPlayerutils = require("./audioPlayer.utils");
const useAudioPlayer = ({ url })=>{
    const [audio, setAudio] = (0, _react.useState)(null);
    const [currentTime, setCurrentTime] = (0, _react.useState)(0);
    const [duration, setDuration] = (0, _react.useState)(0);
    const [isPlaying, setIsPlaying] = (0, _react.useState)(false);
    const [areControlsVisible, setAreControlsVisible] = (0, _react.useState)(false);
    (0, _react.useEffect)(()=>(0, _audioPlayerutils.initializeAudioPlayer)(url, audio, setAudio), [
        audio,
        url
    ]);
    (0, _react.useEffect)(()=>{
        if (!audio) return;
        audio.ontimeupdate = (0, _audioPlayerutils.createOnTimeUpdateAudioPlayer)(audio, setCurrentTime, setDuration, duration);
    }, [
        audio,
        duration,
        areControlsVisible
    ]);
    const play = (0, _react.useCallback)(()=>(0, _audioPlayerutils.playAudioPlayer)(audio, setIsPlaying, setAreControlsVisible), [
        audio
    ]);
    const pause = (0, _react.useCallback)(()=>(0, _audioPlayerutils.pauseAudioPlayer)(audio, setIsPlaying), [
        audio
    ]);
    const closeControls = (0, _react.useCallback)(()=>(0, _audioPlayerutils.closeAudioPlayerControls)(audio, setIsPlaying, setAreControlsVisible), [
        audio
    ]);
    const updateCurrentTime = (0, _react.useCallback)((newCurrentTime)=>{
        if (!audio) return;
        setCurrentTime(Math.round(newCurrentTime));
        audio.currentTime = newCurrentTime;
    }, [
        audio
    ]);
    (0, _react.useEffect)(()=>{
        return ()=>{
            if (!audio) return;
            setCurrentTime(0);
            setIsPlaying(false);
            setDuration(0);
            setAreControlsVisible(false);
            audio.pause();
            setAudio(null);
        };
    }, [
        audio
    ]);
    return {
        closeControls,
        currentTime,
        duration,
        areControlsVisible,
        isPlaying,
        pause,
        audio,
        play,
        updateCurrentTime
    };
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9iYXNlLWNvbXBvbmVudHMvc3JjL0F1ZGlvUGxheWVyL3VzZUF1ZGlvUGxheWVyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZUNhbGxiYWNrLCB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCJcbmltcG9ydCB7IEF1ZGlvUGxheWVySW50ZXJmYWNlIH0gZnJvbSBcIi4vYXVkaW9QbGF5ZXIudHlwZXNcIlxuaW1wb3J0IHtcbiAgY2xvc2VBdWRpb1BsYXllckNvbnRyb2xzLFxuICBjcmVhdGVPblRpbWVVcGRhdGVBdWRpb1BsYXllcixcbiAgaW5pdGlhbGl6ZUF1ZGlvUGxheWVyLFxuICBwYXVzZUF1ZGlvUGxheWVyLFxuICBwbGF5QXVkaW9QbGF5ZXIsXG59IGZyb20gXCIuL2F1ZGlvUGxheWVyLnV0aWxzXCJcblxudHlwZSBVc2VBdWRpb1BsYXllclByb3BzID0ge1xuICB1cmw6IHN0cmluZyB8IHVuZGVmaW5lZFxufVxuXG50eXBlIFVzZUF1ZGlvUGxheWVyU3RhdGUgPSBBdWRpb1BsYXllckludGVyZmFjZVxuXG5jb25zdCB1c2VBdWRpb1BsYXllciA9ICh7IHVybCB9OiBVc2VBdWRpb1BsYXllclByb3BzKTogVXNlQXVkaW9QbGF5ZXJTdGF0ZSA9PiB7XG4gIGNvbnN0IFthdWRpbywgc2V0QXVkaW9dID0gdXNlU3RhdGU8SFRNTEF1ZGlvRWxlbWVudCB8IG51bGw+KG51bGwpXG4gIGNvbnN0IFtjdXJyZW50VGltZSwgc2V0Q3VycmVudFRpbWVdID0gdXNlU3RhdGUoMClcbiAgY29uc3QgW2R1cmF0aW9uLCBzZXREdXJhdGlvbl0gPSB1c2VTdGF0ZSgwKVxuICBjb25zdCBbaXNQbGF5aW5nLCBzZXRJc1BsYXlpbmddID0gdXNlU3RhdGUoZmFsc2UpXG4gIGNvbnN0IFthcmVDb250cm9sc1Zpc2libGUsIHNldEFyZUNvbnRyb2xzVmlzaWJsZV0gPSB1c2VTdGF0ZShmYWxzZSlcblxuICB1c2VFZmZlY3QoKCkgPT4gaW5pdGlhbGl6ZUF1ZGlvUGxheWVyKHVybCwgYXVkaW8sIHNldEF1ZGlvKSwgW2F1ZGlvLCB1cmxdKVxuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKCFhdWRpbykgcmV0dXJuXG5cbiAgICBhdWRpby5vbnRpbWV1cGRhdGUgPSBjcmVhdGVPblRpbWVVcGRhdGVBdWRpb1BsYXllcihhdWRpbywgc2V0Q3VycmVudFRpbWUsIHNldER1cmF0aW9uLCBkdXJhdGlvbilcbiAgfSwgW2F1ZGlvLCBkdXJhdGlvbiwgYXJlQ29udHJvbHNWaXNpYmxlXSlcblxuICBjb25zdCBwbGF5ID0gdXNlQ2FsbGJhY2soXG4gICAgKCkgPT4gcGxheUF1ZGlvUGxheWVyKGF1ZGlvLCBzZXRJc1BsYXlpbmcsIHNldEFyZUNvbnRyb2xzVmlzaWJsZSksXG4gICAgW2F1ZGlvXSxcbiAgKVxuICBjb25zdCBwYXVzZSA9IHVzZUNhbGxiYWNrKCgpID0+IHBhdXNlQXVkaW9QbGF5ZXIoYXVkaW8sIHNldElzUGxheWluZyksIFthdWRpb10pXG4gIGNvbnN0IGNsb3NlQ29udHJvbHMgPSB1c2VDYWxsYmFjayhcbiAgICAoKSA9PiBjbG9zZUF1ZGlvUGxheWVyQ29udHJvbHMoYXVkaW8sIHNldElzUGxheWluZywgc2V0QXJlQ29udHJvbHNWaXNpYmxlKSxcbiAgICBbYXVkaW9dLFxuICApXG5cbiAgY29uc3QgdXBkYXRlQ3VycmVudFRpbWUgPSB1c2VDYWxsYmFjayhcbiAgICAobmV3Q3VycmVudFRpbWU6IG51bWJlcikgPT4ge1xuICAgICAgaWYgKCFhdWRpbykgcmV0dXJuXG5cbiAgICAgIHNldEN1cnJlbnRUaW1lKE1hdGgucm91bmQobmV3Q3VycmVudFRpbWUpKVxuICAgICAgYXVkaW8uY3VycmVudFRpbWUgPSBuZXdDdXJyZW50VGltZVxuICAgIH0sXG4gICAgW2F1ZGlvXSxcbiAgKVxuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIGlmICghYXVkaW8pIHJldHVyblxuXG4gICAgICBzZXRDdXJyZW50VGltZSgwKVxuICAgICAgc2V0SXNQbGF5aW5nKGZhbHNlKVxuICAgICAgc2V0RHVyYXRpb24oMClcbiAgICAgIHNldEFyZUNvbnRyb2xzVmlzaWJsZShmYWxzZSlcbiAgICAgIGF1ZGlvLnBhdXNlKClcbiAgICAgIHNldEF1ZGlvKG51bGwpXG4gICAgfVxuICB9LCBbYXVkaW9dKVxuXG4gIHJldHVybiB7XG4gICAgY2xvc2VDb250cm9scyxcbiAgICBjdXJyZW50VGltZSxcbiAgICBkdXJhdGlvbixcbiAgICBhcmVDb250cm9sc1Zpc2libGUsXG4gICAgaXNQbGF5aW5nLFxuICAgIHBhdXNlLFxuICAgIGF1ZGlvLFxuICAgIHBsYXksXG4gICAgdXBkYXRlQ3VycmVudFRpbWUsXG4gIH1cbn1cblxuZXhwb3J0IHsgdXNlQXVkaW9QbGF5ZXIgfVxuZXhwb3J0IHR5cGUgeyBVc2VBdWRpb1BsYXllclN0YXRlLCBVc2VBdWRpb1BsYXllclByb3BzIH1cbiJdLCJuYW1lcyI6WyJ1c2VBdWRpb1BsYXllciIsInVybCIsImF1ZGlvIiwic2V0QXVkaW8iLCJ1c2VTdGF0ZSIsImN1cnJlbnRUaW1lIiwic2V0Q3VycmVudFRpbWUiLCJkdXJhdGlvbiIsInNldER1cmF0aW9uIiwiaXNQbGF5aW5nIiwic2V0SXNQbGF5aW5nIiwiYXJlQ29udHJvbHNWaXNpYmxlIiwic2V0QXJlQ29udHJvbHNWaXNpYmxlIiwidXNlRWZmZWN0IiwiaW5pdGlhbGl6ZUF1ZGlvUGxheWVyIiwib250aW1ldXBkYXRlIiwiY3JlYXRlT25UaW1lVXBkYXRlQXVkaW9QbGF5ZXIiLCJwbGF5IiwidXNlQ2FsbGJhY2siLCJwbGF5QXVkaW9QbGF5ZXIiLCJwYXVzZSIsInBhdXNlQXVkaW9QbGF5ZXIiLCJjbG9zZUNvbnRyb2xzIiwiY2xvc2VBdWRpb1BsYXllckNvbnRyb2xzIiwidXBkYXRlQ3VycmVudFRpbWUiLCJuZXdDdXJyZW50VGltZSIsIk1hdGgiLCJyb3VuZCJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQTZFU0E7OztlQUFBQTs7O3VCQTdFd0M7a0NBUTFDO0FBUVAsTUFBTUEsaUJBQWlCLENBQUMsRUFBRUMsR0FBRyxFQUF1QjtJQUNsRCxNQUFNLENBQUNDLE9BQU9DLFNBQVMsR0FBR0MsSUFBQUEsZUFBUSxFQUEwQjtJQUM1RCxNQUFNLENBQUNDLGFBQWFDLGVBQWUsR0FBR0YsSUFBQUEsZUFBUSxFQUFDO0lBQy9DLE1BQU0sQ0FBQ0csVUFBVUMsWUFBWSxHQUFHSixJQUFBQSxlQUFRLEVBQUM7SUFDekMsTUFBTSxDQUFDSyxXQUFXQyxhQUFhLEdBQUdOLElBQUFBLGVBQVEsRUFBQztJQUMzQyxNQUFNLENBQUNPLG9CQUFvQkMsc0JBQXNCLEdBQUdSLElBQUFBLGVBQVEsRUFBQztJQUU3RFMsSUFBQUEsZ0JBQVMsRUFBQyxJQUFNQyxJQUFBQSx1Q0FBcUIsRUFBQ2IsS0FBS0MsT0FBT0MsV0FBVztRQUFDRDtRQUFPRDtLQUFJO0lBRXpFWSxJQUFBQSxnQkFBUyxFQUFDO1FBQ1IsSUFBSSxDQUFDWCxPQUFPO1FBRVpBLE1BQU1hLFlBQVksR0FBR0MsSUFBQUEsK0NBQTZCLEVBQUNkLE9BQU9JLGdCQUFnQkUsYUFBYUQ7SUFDekYsR0FBRztRQUFDTDtRQUFPSztRQUFVSTtLQUFtQjtJQUV4QyxNQUFNTSxPQUFPQyxJQUFBQSxrQkFBVyxFQUN0QixJQUFNQyxJQUFBQSxpQ0FBZSxFQUFDakIsT0FBT1EsY0FBY0Usd0JBQzNDO1FBQUNWO0tBQU07SUFFVCxNQUFNa0IsUUFBUUYsSUFBQUEsa0JBQVcsRUFBQyxJQUFNRyxJQUFBQSxrQ0FBZ0IsRUFBQ25CLE9BQU9RLGVBQWU7UUFBQ1I7S0FBTTtJQUM5RSxNQUFNb0IsZ0JBQWdCSixJQUFBQSxrQkFBVyxFQUMvQixJQUFNSyxJQUFBQSwwQ0FBd0IsRUFBQ3JCLE9BQU9RLGNBQWNFLHdCQUNwRDtRQUFDVjtLQUFNO0lBR1QsTUFBTXNCLG9CQUFvQk4sSUFBQUEsa0JBQVcsRUFDbkMsQ0FBQ087UUFDQyxJQUFJLENBQUN2QixPQUFPO1FBRVpJLGVBQWVvQixLQUFLQyxLQUFLLENBQUNGO1FBQzFCdkIsTUFBTUcsV0FBVyxHQUFHb0I7SUFDdEIsR0FDQTtRQUFDdkI7S0FBTTtJQUdUVyxJQUFBQSxnQkFBUyxFQUFDO1FBQ1IsT0FBTztZQUNMLElBQUksQ0FBQ1gsT0FBTztZQUVaSSxlQUFlO1lBQ2ZJLGFBQWE7WUFDYkYsWUFBWTtZQUNaSSxzQkFBc0I7WUFDdEJWLE1BQU1rQixLQUFLO1lBQ1hqQixTQUFTO1FBQ1g7SUFDRixHQUFHO1FBQUNEO0tBQU07SUFFVixPQUFPO1FBQ0xvQjtRQUNBakI7UUFDQUU7UUFDQUk7UUFDQUY7UUFDQVc7UUFDQWxCO1FBQ0FlO1FBQ0FPO0lBQ0Y7QUFDRiJ9