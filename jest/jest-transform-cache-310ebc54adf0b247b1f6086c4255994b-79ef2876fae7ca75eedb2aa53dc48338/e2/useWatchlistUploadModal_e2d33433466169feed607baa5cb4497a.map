{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/watchlists/src/lib/hooks/useWatchlistUploadModal.tsx"],"sourcesContent":["import { useCallback, useState } from \"react\"\nimport { watchlistCustomerIo } from \"@rp/react/common/customer-io\"\nimport {\n  WatchlistBatchSuggestionPostResponseExtended,\n  useWatchlistBatchUpload,\n} from \"@rp/react/tanstack-api/suggestion\"\n\nexport const useWatchlistUploadModal = (watchlistId: string) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const [isUploading, setIsUploading] = useState(false)\n  const {\n    mutateAsync: upload,\n    error,\n    reset,\n  } = useWatchlistBatchUpload({\n    onError: error => {\n      watchlistCustomerIo.uploadModal.sendError(watchlistId, error)\n    },\n  })\n\n  const openModal = useCallback(() => {\n    reset()\n    setUploadedData(null)\n    setIsOpen(wasOpen => {\n      if (!wasOpen) {\n        watchlistCustomerIo.uploadModal.setTimestamp(\"open\")\n      }\n      return true\n    })\n  }, [reset])\n\n  const [uploadedData, setUploadedData] =\n    useState<WatchlistBatchSuggestionPostResponseExtended | null>(null)\n  const onSubmitFiles = useCallback(\n    (files: Array<File>) => {\n      if (files.length === 0) return\n      const [file] = files\n      openModal()\n      setIsUploading(true)\n      watchlistCustomerIo.uploadModal.setTimestamp(\"startUpload\")\n      upload({ file })\n        .then(data => {\n          watchlistCustomerIo.uploadModal.setTimestamp(\"endUpload\")\n          setUploadedData(data)\n        })\n        .finally(() => {\n          setIsUploading(false)\n        })\n    },\n    [openModal, upload],\n  )\n\n  return {\n    onSubmitFiles,\n    uploadedData,\n    openModal,\n    setIsOpen,\n    isOpen,\n    isUploading,\n    error,\n  }\n}\n"],"names":["useWatchlistUploadModal","watchlistId","isOpen","setIsOpen","useState","isUploading","setIsUploading","mutateAsync","upload","error","reset","useWatchlistBatchUpload","onError","watchlistCustomerIo","uploadModal","sendError","openModal","useCallback","setUploadedData","wasOpen","setTimestamp","uploadedData","onSubmitFiles","files","length","file","then","data","finally"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAOaA;;;eAAAA;;;uBAPyB;4BACF;4BAI7B;AAEA,MAAMA,0BAA0B,CAACC;IACtC,MAAM,CAACC,QAAQC,UAAU,GAAGC,IAAAA,eAAQ,EAAC;IACrC,MAAM,CAACC,aAAaC,eAAe,GAAGF,IAAAA,eAAQ,EAAC;IAC/C,MAAM,EACJG,aAAaC,MAAM,EACnBC,KAAK,EACLC,KAAK,EACN,GAAGC,IAAAA,mCAAuB,EAAC;QAC1BC,SAASH,CAAAA;YACPI,+BAAmB,CAACC,WAAW,CAACC,SAAS,CAACd,aAAaQ;QACzD;IACF;IAEA,MAAMO,YAAYC,IAAAA,kBAAW,EAAC;QAC5BP;QACAQ,gBAAgB;QAChBf,UAAUgB,CAAAA;YACR,IAAI,CAACA,SAAS;gBACZN,+BAAmB,CAACC,WAAW,CAACM,YAAY,CAAC;YAC/C;YACA,OAAO;QACT;IACF,GAAG;QAACV;KAAM;IAEV,MAAM,CAACW,cAAcH,gBAAgB,GACnCd,IAAAA,eAAQ,EAAsD;IAChE,MAAMkB,gBAAgBL,IAAAA,kBAAW,EAC/B,CAACM;QACC,IAAIA,MAAMC,MAAM,KAAK,GAAG;QACxB,MAAM,CAACC,KAAK,GAAGF;QACfP;QACAV,eAAe;QACfO,+BAAmB,CAACC,WAAW,CAACM,YAAY,CAAC;QAC7CZ,OAAO;YAAEiB;QAAK,GACXC,IAAI,CAACC,CAAAA;YACJd,+BAAmB,CAACC,WAAW,CAACM,YAAY,CAAC;YAC7CF,gBAAgBS;QAClB,GACCC,OAAO,CAAC;YACPtB,eAAe;QACjB;IACJ,GACA;QAACU;QAAWR;KAAO;IAGrB,OAAO;QACLc;QACAD;QACAL;QACAb;QACAD;QACAG;QACAI;IACF;AACF"}