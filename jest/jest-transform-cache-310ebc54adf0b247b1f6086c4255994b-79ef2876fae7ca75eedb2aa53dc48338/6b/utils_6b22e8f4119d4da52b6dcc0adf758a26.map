{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/node_modules/@trpc/server/dist/unstable-core-do-not-import/utils.js"],"sourcesContent":["'use strict';\n\n/**\n * Ensures there are no duplicate keys when building a procedure.\n * @internal\n */ function mergeWithoutOverrides(obj1, ...objs) {\n    const newObj = Object.assign(Object.create(null), obj1);\n    for (const overrides of objs){\n        for(const key in overrides){\n            if (key in newObj && newObj[key] !== overrides[key]) {\n                throw new Error(`Duplicate key ${key}`);\n            }\n            newObj[key] = overrides[key];\n        }\n    }\n    return newObj;\n}\n/**\n * Check that value is object\n * @internal\n */ function isObject(value) {\n    return !!value && !Array.isArray(value) && typeof value === 'object';\n}\n/**\n * Create an object without inheriting anything from `Object.prototype`\n * @internal\n */ function omitPrototype(obj) {\n    return Object.assign(Object.create(null), obj);\n}\n\nexports.isObject = isObject;\nexports.mergeWithoutOverrides = mergeWithoutOverrides;\nexports.omitPrototype = omitPrototype;\n"],"names":["mergeWithoutOverrides","obj1","objs","newObj","Object","assign","create","overrides","key","Error","isObject","value","Array","isArray","omitPrototype","obj","exports"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA;AAEA;;;CAGC,GAAG,SAASA,sBAAsBC,IAAI,EAAE,GAAGC,IAAI;IAC5C,MAAMC,SAASC,OAAOC,MAAM,CAACD,OAAOE,MAAM,CAAC,OAAOL;IAClD,KAAK,MAAMM,aAAaL,KAAK;QACzB,IAAI,MAAMM,OAAOD,UAAU;YACvB,IAAIC,OAAOL,UAAUA,MAAM,CAACK,IAAI,KAAKD,SAAS,CAACC,IAAI,EAAE;gBACjD,MAAM,IAAIC,MAAM,CAAC,cAAc,EAAED,IAAI,CAAC;YAC1C;YACAL,MAAM,CAACK,IAAI,GAAGD,SAAS,CAACC,IAAI;QAChC;IACJ;IACA,OAAOL;AACX;AACA;;;CAGC,GAAG,SAASO,SAASC,KAAK;IACvB,OAAO,CAAC,CAACA,SAAS,CAACC,MAAMC,OAAO,CAACF,UAAU,OAAOA,UAAU;AAChE;AACA;;;CAGC,GAAG,SAASG,cAAcC,GAAG;IAC1B,OAAOX,OAAOC,MAAM,CAACD,OAAOE,MAAM,CAAC,OAAOS;AAC9C;AAEAC,QAAQN,QAAQ,GAAGA;AACnBM,QAAQhB,qBAAqB,GAAGA;AAChCgB,QAAQF,aAAa,GAAGA"}