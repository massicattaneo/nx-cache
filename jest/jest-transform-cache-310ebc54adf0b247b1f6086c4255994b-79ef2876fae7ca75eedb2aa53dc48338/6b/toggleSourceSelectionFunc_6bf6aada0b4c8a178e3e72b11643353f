1e9858cd08ef8fe42d75ed96db304a75
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "toggleSourceSelectionFunc", {
    enumerable: true,
    get: function() {
        return toggleSourceSelectionFunc;
    }
});
function toggleSourceSelectionFunc({ e, selectedSources, setSelectedSources, allAutosuggestSources, hasReachedMaxSelection, showMaxSelectionErrorToast, planComparisonHandleOpen }) {
    const id = e.currentTarget.getAttribute("data-id");
    const entitled = e.currentTarget.getAttribute("data-entitled") === "true";
    if (!entitled) {
        planComparisonHandleOpen();
        return;
    }
    if (!id) return;
    if (hasReachedMaxSelection) {
        showMaxSelectionErrorToast();
        return;
    }
    const idx = selectedSources.findIndex((source)=>source.id === id);
    // removing source
    if (idx !== -1) {
        setSelectedSources((selectedSources)=>[
                ...selectedSources.slice(0, idx),
                ...selectedSources.slice(idx + 1)
            ]);
        return;
    }
    // adding source
    const newSource = allAutosuggestSources.find((autosuggestSource)=>autosuggestSource.id === id);
    if (!newSource) return;
    const newSourceSelection = {
        id,
        name: newSource.name,
        packageIDs: newSource.rpPackageId
    };
    setSelectedSources((selectedSources)=>[
            newSourceSelection,
            ...selectedSources
        ].sort((a, b)=>a.name.localeCompare(b.name)));
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3QvY29tbW9uL3NvdXJjZS1zZWxlY3Rvci9zcmMvdXRpbHMvdG9nZ2xlU291cmNlU2VsZWN0aW9uRnVuYy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTZXRTdGF0ZUFjdGlvbiB9IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgeyBBdXRvc3VnZ2VzdFNvdXJjZSB9IGZyb20gXCJAcnAvcmVhY3QvdGFuc3RhY2stYXBpL2NvbnRlbnRcIlxuaW1wb3J0IHsgU291cmNlU2VsZWN0b3JTZWxlY3RlZFNvdXJjZUluZm8gfSBmcm9tIFwiLi4vc291cmNlU2VsZWN0b3IudHlwZXNcIlxuXG50eXBlIFRvZ2dsZVNvdXJjZVNlbGVjdGlvbkZ1bmNQcm9wcyA9IHtcbiAgZTogUmVhY3QuTW91c2VFdmVudDxIVE1MRGl2RWxlbWVudD5cbiAgYWxsQXV0b3N1Z2dlc3RTb3VyY2VzOiBBcnJheTxBdXRvc3VnZ2VzdFNvdXJjZT5cbiAgc2VsZWN0ZWRTb3VyY2VzOiBBcnJheTxTb3VyY2VTZWxlY3RvclNlbGVjdGVkU291cmNlSW5mbz5cbiAgc2V0U2VsZWN0ZWRTb3VyY2VzOiAodmFsdWU6IFNldFN0YXRlQWN0aW9uPEFycmF5PFNvdXJjZVNlbGVjdG9yU2VsZWN0ZWRTb3VyY2VJbmZvPj4pID0+IHZvaWRcbiAgaGFzUmVhY2hlZE1heFNlbGVjdGlvbjogYm9vbGVhblxuICBzaG93TWF4U2VsZWN0aW9uRXJyb3JUb2FzdDogKCkgPT4gdm9pZFxuICBwbGFuQ29tcGFyaXNvbkhhbmRsZU9wZW46ICgpID0+IHZvaWRcbn1cblxuZnVuY3Rpb24gdG9nZ2xlU291cmNlU2VsZWN0aW9uRnVuYyh7XG4gIGUsXG4gIHNlbGVjdGVkU291cmNlcyxcbiAgc2V0U2VsZWN0ZWRTb3VyY2VzLFxuICBhbGxBdXRvc3VnZ2VzdFNvdXJjZXMsXG4gIGhhc1JlYWNoZWRNYXhTZWxlY3Rpb24sXG4gIHNob3dNYXhTZWxlY3Rpb25FcnJvclRvYXN0LFxuICBwbGFuQ29tcGFyaXNvbkhhbmRsZU9wZW4sXG59OiBUb2dnbGVTb3VyY2VTZWxlY3Rpb25GdW5jUHJvcHMpOiB2b2lkIHtcbiAgY29uc3QgaWQgPSBlLmN1cnJlbnRUYXJnZXQuZ2V0QXR0cmlidXRlKFwiZGF0YS1pZFwiKVxuICBjb25zdCBlbnRpdGxlZCA9IGUuY3VycmVudFRhcmdldC5nZXRBdHRyaWJ1dGUoXCJkYXRhLWVudGl0bGVkXCIpID09PSBcInRydWVcIlxuXG4gIGlmICghZW50aXRsZWQpIHtcbiAgICBwbGFuQ29tcGFyaXNvbkhhbmRsZU9wZW4oKVxuICAgIHJldHVyblxuICB9XG5cbiAgaWYgKCFpZCkgcmV0dXJuXG5cbiAgaWYgKGhhc1JlYWNoZWRNYXhTZWxlY3Rpb24pIHtcbiAgICBzaG93TWF4U2VsZWN0aW9uRXJyb3JUb2FzdCgpXG4gICAgcmV0dXJuXG4gIH1cblxuICBjb25zdCBpZHggPSBzZWxlY3RlZFNvdXJjZXMuZmluZEluZGV4KHNvdXJjZSA9PiBzb3VyY2UuaWQgPT09IGlkKVxuXG4gIC8vIHJlbW92aW5nIHNvdXJjZVxuXG4gIGlmIChpZHggIT09IC0xKSB7XG4gICAgc2V0U2VsZWN0ZWRTb3VyY2VzKHNlbGVjdGVkU291cmNlcyA9PiBbXG4gICAgICAuLi5zZWxlY3RlZFNvdXJjZXMuc2xpY2UoMCwgaWR4KSxcbiAgICAgIC4uLnNlbGVjdGVkU291cmNlcy5zbGljZShpZHggKyAxKSxcbiAgICBdKVxuICAgIHJldHVyblxuICB9XG5cbiAgLy8gYWRkaW5nIHNvdXJjZVxuXG4gIGNvbnN0IG5ld1NvdXJjZSA9IGFsbEF1dG9zdWdnZXN0U291cmNlcy5maW5kKGF1dG9zdWdnZXN0U291cmNlID0+IGF1dG9zdWdnZXN0U291cmNlLmlkID09PSBpZClcblxuICBpZiAoIW5ld1NvdXJjZSkgcmV0dXJuXG5cbiAgY29uc3QgbmV3U291cmNlU2VsZWN0aW9uOiBTb3VyY2VTZWxlY3RvclNlbGVjdGVkU291cmNlSW5mbyA9IHtcbiAgICBpZCxcbiAgICBuYW1lOiBuZXdTb3VyY2UubmFtZSxcbiAgICBwYWNrYWdlSURzOiBuZXdTb3VyY2UucnBQYWNrYWdlSWQsXG4gIH1cblxuICBzZXRTZWxlY3RlZFNvdXJjZXMoc2VsZWN0ZWRTb3VyY2VzID0+XG4gICAgW25ld1NvdXJjZVNlbGVjdGlvbiwgLi4uc2VsZWN0ZWRTb3VyY2VzXS5zb3J0KChhLCBiKSA9PiBhLm5hbWUubG9jYWxlQ29tcGFyZShiLm5hbWUpKSxcbiAgKVxufVxuXG5leHBvcnQgeyB0b2dnbGVTb3VyY2VTZWxlY3Rpb25GdW5jIH1cbiJdLCJuYW1lcyI6WyJ0b2dnbGVTb3VyY2VTZWxlY3Rpb25GdW5jIiwiZSIsInNlbGVjdGVkU291cmNlcyIsInNldFNlbGVjdGVkU291cmNlcyIsImFsbEF1dG9zdWdnZXN0U291cmNlcyIsImhhc1JlYWNoZWRNYXhTZWxlY3Rpb24iLCJzaG93TWF4U2VsZWN0aW9uRXJyb3JUb2FzdCIsInBsYW5Db21wYXJpc29uSGFuZGxlT3BlbiIsImlkIiwiY3VycmVudFRhcmdldCIsImdldEF0dHJpYnV0ZSIsImVudGl0bGVkIiwiaWR4IiwiZmluZEluZGV4Iiwic291cmNlIiwic2xpY2UiLCJuZXdTb3VyY2UiLCJmaW5kIiwiYXV0b3N1Z2dlc3RTb3VyY2UiLCJuZXdTb3VyY2VTZWxlY3Rpb24iLCJuYW1lIiwicGFja2FnZUlEcyIsInJwUGFja2FnZUlkIiwic29ydCIsImEiLCJiIiwibG9jYWxlQ29tcGFyZSJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQW1FU0E7OztlQUFBQTs7O0FBckRULFNBQVNBLDBCQUEwQixFQUNqQ0MsQ0FBQyxFQUNEQyxlQUFlLEVBQ2ZDLGtCQUFrQixFQUNsQkMscUJBQXFCLEVBQ3JCQyxzQkFBc0IsRUFDdEJDLDBCQUEwQixFQUMxQkMsd0JBQXdCLEVBQ087SUFDL0IsTUFBTUMsS0FBS1AsRUFBRVEsYUFBYSxDQUFDQyxZQUFZLENBQUM7SUFDeEMsTUFBTUMsV0FBV1YsRUFBRVEsYUFBYSxDQUFDQyxZQUFZLENBQUMscUJBQXFCO0lBRW5FLElBQUksQ0FBQ0MsVUFBVTtRQUNiSjtRQUNBO0lBQ0Y7SUFFQSxJQUFJLENBQUNDLElBQUk7SUFFVCxJQUFJSCx3QkFBd0I7UUFDMUJDO1FBQ0E7SUFDRjtJQUVBLE1BQU1NLE1BQU1WLGdCQUFnQlcsU0FBUyxDQUFDQyxDQUFBQSxTQUFVQSxPQUFPTixFQUFFLEtBQUtBO0lBRTlELGtCQUFrQjtJQUVsQixJQUFJSSxRQUFRLENBQUMsR0FBRztRQUNkVCxtQkFBbUJELENBQUFBLGtCQUFtQjttQkFDakNBLGdCQUFnQmEsS0FBSyxDQUFDLEdBQUdIO21CQUN6QlYsZ0JBQWdCYSxLQUFLLENBQUNILE1BQU07YUFDaEM7UUFDRDtJQUNGO0lBRUEsZ0JBQWdCO0lBRWhCLE1BQU1JLFlBQVlaLHNCQUFzQmEsSUFBSSxDQUFDQyxDQUFBQSxvQkFBcUJBLGtCQUFrQlYsRUFBRSxLQUFLQTtJQUUzRixJQUFJLENBQUNRLFdBQVc7SUFFaEIsTUFBTUcscUJBQXVEO1FBQzNEWDtRQUNBWSxNQUFNSixVQUFVSSxJQUFJO1FBQ3BCQyxZQUFZTCxVQUFVTSxXQUFXO0lBQ25DO0lBRUFuQixtQkFBbUJELENBQUFBLGtCQUNqQjtZQUFDaUI7ZUFBdUJqQjtTQUFnQixDQUFDcUIsSUFBSSxDQUFDLENBQUNDLEdBQUdDLElBQU1ELEVBQUVKLElBQUksQ0FBQ00sYUFBYSxDQUFDRCxFQUFFTCxJQUFJO0FBRXZGIn0=