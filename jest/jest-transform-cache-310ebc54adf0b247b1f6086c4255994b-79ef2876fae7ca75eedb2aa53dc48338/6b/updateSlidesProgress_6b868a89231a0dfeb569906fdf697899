b38c6760213a96bda30a70e178633e6d
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return updateSlidesProgress;
    }
});
function updateSlidesProgress(translate = this && this.translate || 0) {
    const swiper = this;
    const params = swiper.params;
    const { slides, rtlTranslate: rtl, snapGrid } = swiper;
    if (slides.length === 0) return;
    if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();
    let offsetCenter = -translate;
    if (rtl) offsetCenter = translate;
    // Visible Slides
    slides.forEach((slideEl)=>{
        slideEl.classList.remove(params.slideVisibleClass);
    });
    swiper.visibleSlidesIndexes = [];
    swiper.visibleSlides = [];
    let spaceBetween = params.spaceBetween;
    if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {
        spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiper.size;
    } else if (typeof spaceBetween === 'string') {
        spaceBetween = parseFloat(spaceBetween);
    }
    for(let i = 0; i < slides.length; i += 1){
        const slide = slides[i];
        let slideOffset = slide.swiperSlideOffset;
        if (params.cssMode && params.centeredSlides) {
            slideOffset -= slides[0].swiperSlideOffset;
        }
        const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + spaceBetween);
        const originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + spaceBetween);
        const slideBefore = -(offsetCenter - slideOffset);
        const slideAfter = slideBefore + swiper.slidesSizesGrid[i];
        const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;
        if (isVisible) {
            swiper.visibleSlides.push(slide);
            swiper.visibleSlidesIndexes.push(i);
            slides[i].classList.add(params.slideVisibleClass);
        }
        slide.progress = rtl ? -slideProgress : slideProgress;
        slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;
    }
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9zd2lwZXIvY29yZS91cGRhdGUvdXBkYXRlU2xpZGVzUHJvZ3Jlc3MuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdXBkYXRlU2xpZGVzUHJvZ3Jlc3ModHJhbnNsYXRlID0gdGhpcyAmJiB0aGlzLnRyYW5zbGF0ZSB8fCAwKSB7XG4gIGNvbnN0IHN3aXBlciA9IHRoaXM7XG4gIGNvbnN0IHBhcmFtcyA9IHN3aXBlci5wYXJhbXM7XG4gIGNvbnN0IHtcbiAgICBzbGlkZXMsXG4gICAgcnRsVHJhbnNsYXRlOiBydGwsXG4gICAgc25hcEdyaWRcbiAgfSA9IHN3aXBlcjtcbiAgaWYgKHNsaWRlcy5sZW5ndGggPT09IDApIHJldHVybjtcbiAgaWYgKHR5cGVvZiBzbGlkZXNbMF0uc3dpcGVyU2xpZGVPZmZzZXQgPT09ICd1bmRlZmluZWQnKSBzd2lwZXIudXBkYXRlU2xpZGVzT2Zmc2V0KCk7XG4gIGxldCBvZmZzZXRDZW50ZXIgPSAtdHJhbnNsYXRlO1xuICBpZiAocnRsKSBvZmZzZXRDZW50ZXIgPSB0cmFuc2xhdGU7XG5cbiAgLy8gVmlzaWJsZSBTbGlkZXNcbiAgc2xpZGVzLmZvckVhY2goc2xpZGVFbCA9PiB7XG4gICAgc2xpZGVFbC5jbGFzc0xpc3QucmVtb3ZlKHBhcmFtcy5zbGlkZVZpc2libGVDbGFzcyk7XG4gIH0pO1xuICBzd2lwZXIudmlzaWJsZVNsaWRlc0luZGV4ZXMgPSBbXTtcbiAgc3dpcGVyLnZpc2libGVTbGlkZXMgPSBbXTtcbiAgbGV0IHNwYWNlQmV0d2VlbiA9IHBhcmFtcy5zcGFjZUJldHdlZW47XG4gIGlmICh0eXBlb2Ygc3BhY2VCZXR3ZWVuID09PSAnc3RyaW5nJyAmJiBzcGFjZUJldHdlZW4uaW5kZXhPZignJScpID49IDApIHtcbiAgICBzcGFjZUJldHdlZW4gPSBwYXJzZUZsb2F0KHNwYWNlQmV0d2Vlbi5yZXBsYWNlKCclJywgJycpKSAvIDEwMCAqIHN3aXBlci5zaXplO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBzcGFjZUJldHdlZW4gPT09ICdzdHJpbmcnKSB7XG4gICAgc3BhY2VCZXR3ZWVuID0gcGFyc2VGbG9hdChzcGFjZUJldHdlZW4pO1xuICB9XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgc2xpZGVzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgY29uc3Qgc2xpZGUgPSBzbGlkZXNbaV07XG4gICAgbGV0IHNsaWRlT2Zmc2V0ID0gc2xpZGUuc3dpcGVyU2xpZGVPZmZzZXQ7XG4gICAgaWYgKHBhcmFtcy5jc3NNb2RlICYmIHBhcmFtcy5jZW50ZXJlZFNsaWRlcykge1xuICAgICAgc2xpZGVPZmZzZXQgLT0gc2xpZGVzWzBdLnN3aXBlclNsaWRlT2Zmc2V0O1xuICAgIH1cbiAgICBjb25zdCBzbGlkZVByb2dyZXNzID0gKG9mZnNldENlbnRlciArIChwYXJhbXMuY2VudGVyZWRTbGlkZXMgPyBzd2lwZXIubWluVHJhbnNsYXRlKCkgOiAwKSAtIHNsaWRlT2Zmc2V0KSAvIChzbGlkZS5zd2lwZXJTbGlkZVNpemUgKyBzcGFjZUJldHdlZW4pO1xuICAgIGNvbnN0IG9yaWdpbmFsU2xpZGVQcm9ncmVzcyA9IChvZmZzZXRDZW50ZXIgLSBzbmFwR3JpZFswXSArIChwYXJhbXMuY2VudGVyZWRTbGlkZXMgPyBzd2lwZXIubWluVHJhbnNsYXRlKCkgOiAwKSAtIHNsaWRlT2Zmc2V0KSAvIChzbGlkZS5zd2lwZXJTbGlkZVNpemUgKyBzcGFjZUJldHdlZW4pO1xuICAgIGNvbnN0IHNsaWRlQmVmb3JlID0gLShvZmZzZXRDZW50ZXIgLSBzbGlkZU9mZnNldCk7XG4gICAgY29uc3Qgc2xpZGVBZnRlciA9IHNsaWRlQmVmb3JlICsgc3dpcGVyLnNsaWRlc1NpemVzR3JpZFtpXTtcbiAgICBjb25zdCBpc1Zpc2libGUgPSBzbGlkZUJlZm9yZSA+PSAwICYmIHNsaWRlQmVmb3JlIDwgc3dpcGVyLnNpemUgLSAxIHx8IHNsaWRlQWZ0ZXIgPiAxICYmIHNsaWRlQWZ0ZXIgPD0gc3dpcGVyLnNpemUgfHwgc2xpZGVCZWZvcmUgPD0gMCAmJiBzbGlkZUFmdGVyID49IHN3aXBlci5zaXplO1xuICAgIGlmIChpc1Zpc2libGUpIHtcbiAgICAgIHN3aXBlci52aXNpYmxlU2xpZGVzLnB1c2goc2xpZGUpO1xuICAgICAgc3dpcGVyLnZpc2libGVTbGlkZXNJbmRleGVzLnB1c2goaSk7XG4gICAgICBzbGlkZXNbaV0uY2xhc3NMaXN0LmFkZChwYXJhbXMuc2xpZGVWaXNpYmxlQ2xhc3MpO1xuICAgIH1cbiAgICBzbGlkZS5wcm9ncmVzcyA9IHJ0bCA/IC1zbGlkZVByb2dyZXNzIDogc2xpZGVQcm9ncmVzcztcbiAgICBzbGlkZS5vcmlnaW5hbFByb2dyZXNzID0gcnRsID8gLW9yaWdpbmFsU2xpZGVQcm9ncmVzcyA6IG9yaWdpbmFsU2xpZGVQcm9ncmVzcztcbiAgfVxufSJdLCJuYW1lcyI6WyJ1cGRhdGVTbGlkZXNQcm9ncmVzcyIsInRyYW5zbGF0ZSIsInN3aXBlciIsInBhcmFtcyIsInNsaWRlcyIsInJ0bFRyYW5zbGF0ZSIsInJ0bCIsInNuYXBHcmlkIiwibGVuZ3RoIiwic3dpcGVyU2xpZGVPZmZzZXQiLCJ1cGRhdGVTbGlkZXNPZmZzZXQiLCJvZmZzZXRDZW50ZXIiLCJmb3JFYWNoIiwic2xpZGVFbCIsImNsYXNzTGlzdCIsInJlbW92ZSIsInNsaWRlVmlzaWJsZUNsYXNzIiwidmlzaWJsZVNsaWRlc0luZGV4ZXMiLCJ2aXNpYmxlU2xpZGVzIiwic3BhY2VCZXR3ZWVuIiwiaW5kZXhPZiIsInBhcnNlRmxvYXQiLCJyZXBsYWNlIiwic2l6ZSIsImkiLCJzbGlkZSIsInNsaWRlT2Zmc2V0IiwiY3NzTW9kZSIsImNlbnRlcmVkU2xpZGVzIiwic2xpZGVQcm9ncmVzcyIsIm1pblRyYW5zbGF0ZSIsInN3aXBlclNsaWRlU2l6ZSIsIm9yaWdpbmFsU2xpZGVQcm9ncmVzcyIsInNsaWRlQmVmb3JlIiwic2xpZGVBZnRlciIsInNsaWRlc1NpemVzR3JpZCIsImlzVmlzaWJsZSIsInB1c2giLCJhZGQiLCJwcm9ncmVzcyIsIm9yaWdpbmFsUHJvZ3Jlc3MiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkFBQTs7O2VBQXdCQTs7O0FBQVQsU0FBU0EscUJBQXFCQyxZQUFZLElBQUksSUFBSSxJQUFJLENBQUNBLFNBQVMsSUFBSSxDQUFDO0lBQ2xGLE1BQU1DLFNBQVMsSUFBSTtJQUNuQixNQUFNQyxTQUFTRCxPQUFPQyxNQUFNO0lBQzVCLE1BQU0sRUFDSkMsTUFBTSxFQUNOQyxjQUFjQyxHQUFHLEVBQ2pCQyxRQUFRLEVBQ1QsR0FBR0w7SUFDSixJQUFJRSxPQUFPSSxNQUFNLEtBQUssR0FBRztJQUN6QixJQUFJLE9BQU9KLE1BQU0sQ0FBQyxFQUFFLENBQUNLLGlCQUFpQixLQUFLLGFBQWFQLE9BQU9RLGtCQUFrQjtJQUNqRixJQUFJQyxlQUFlLENBQUNWO0lBQ3BCLElBQUlLLEtBQUtLLGVBQWVWO0lBRXhCLGlCQUFpQjtJQUNqQkcsT0FBT1EsT0FBTyxDQUFDQyxDQUFBQTtRQUNiQSxRQUFRQyxTQUFTLENBQUNDLE1BQU0sQ0FBQ1osT0FBT2EsaUJBQWlCO0lBQ25EO0lBQ0FkLE9BQU9lLG9CQUFvQixHQUFHLEVBQUU7SUFDaENmLE9BQU9nQixhQUFhLEdBQUcsRUFBRTtJQUN6QixJQUFJQyxlQUFlaEIsT0FBT2dCLFlBQVk7SUFDdEMsSUFBSSxPQUFPQSxpQkFBaUIsWUFBWUEsYUFBYUMsT0FBTyxDQUFDLFFBQVEsR0FBRztRQUN0RUQsZUFBZUUsV0FBV0YsYUFBYUcsT0FBTyxDQUFDLEtBQUssT0FBTyxNQUFNcEIsT0FBT3FCLElBQUk7SUFDOUUsT0FBTyxJQUFJLE9BQU9KLGlCQUFpQixVQUFVO1FBQzNDQSxlQUFlRSxXQUFXRjtJQUM1QjtJQUNBLElBQUssSUFBSUssSUFBSSxHQUFHQSxJQUFJcEIsT0FBT0ksTUFBTSxFQUFFZ0IsS0FBSyxFQUFHO1FBQ3pDLE1BQU1DLFFBQVFyQixNQUFNLENBQUNvQixFQUFFO1FBQ3ZCLElBQUlFLGNBQWNELE1BQU1oQixpQkFBaUI7UUFDekMsSUFBSU4sT0FBT3dCLE9BQU8sSUFBSXhCLE9BQU95QixjQUFjLEVBQUU7WUFDM0NGLGVBQWV0QixNQUFNLENBQUMsRUFBRSxDQUFDSyxpQkFBaUI7UUFDNUM7UUFDQSxNQUFNb0IsZ0JBQWdCLEFBQUNsQixDQUFBQSxlQUFnQlIsQ0FBQUEsT0FBT3lCLGNBQWMsR0FBRzFCLE9BQU80QixZQUFZLEtBQUssQ0FBQSxJQUFLSixXQUFVLElBQU1ELENBQUFBLE1BQU1NLGVBQWUsR0FBR1osWUFBVztRQUMvSSxNQUFNYSx3QkFBd0IsQUFBQ3JCLENBQUFBLGVBQWVKLFFBQVEsQ0FBQyxFQUFFLEdBQUlKLENBQUFBLE9BQU95QixjQUFjLEdBQUcxQixPQUFPNEIsWUFBWSxLQUFLLENBQUEsSUFBS0osV0FBVSxJQUFNRCxDQUFBQSxNQUFNTSxlQUFlLEdBQUdaLFlBQVc7UUFDckssTUFBTWMsY0FBYyxDQUFFdEIsQ0FBQUEsZUFBZWUsV0FBVTtRQUMvQyxNQUFNUSxhQUFhRCxjQUFjL0IsT0FBT2lDLGVBQWUsQ0FBQ1gsRUFBRTtRQUMxRCxNQUFNWSxZQUFZSCxlQUFlLEtBQUtBLGNBQWMvQixPQUFPcUIsSUFBSSxHQUFHLEtBQUtXLGFBQWEsS0FBS0EsY0FBY2hDLE9BQU9xQixJQUFJLElBQUlVLGVBQWUsS0FBS0MsY0FBY2hDLE9BQU9xQixJQUFJO1FBQ25LLElBQUlhLFdBQVc7WUFDYmxDLE9BQU9nQixhQUFhLENBQUNtQixJQUFJLENBQUNaO1lBQzFCdkIsT0FBT2Usb0JBQW9CLENBQUNvQixJQUFJLENBQUNiO1lBQ2pDcEIsTUFBTSxDQUFDb0IsRUFBRSxDQUFDVixTQUFTLENBQUN3QixHQUFHLENBQUNuQyxPQUFPYSxpQkFBaUI7UUFDbEQ7UUFDQVMsTUFBTWMsUUFBUSxHQUFHakMsTUFBTSxDQUFDdUIsZ0JBQWdCQTtRQUN4Q0osTUFBTWUsZ0JBQWdCLEdBQUdsQyxNQUFNLENBQUMwQix3QkFBd0JBO0lBQzFEO0FBQ0YifQ==