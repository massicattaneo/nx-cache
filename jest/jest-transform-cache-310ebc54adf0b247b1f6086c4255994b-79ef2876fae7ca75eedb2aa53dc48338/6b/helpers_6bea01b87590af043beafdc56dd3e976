e1965918fe438231ca8cc397db47e109
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    addNotToOperation: function() {
        return addNotToOperation;
    },
    addNotToType: function() {
        return addNotToType;
    },
    generateId: function() {
        return generateId;
    },
    removeNotFromOperation: function() {
        return removeNotFromOperation;
    },
    removeNotFromType: function() {
        return removeNotFromType;
    }
});
const generateId = ()=>"rp-" + Math.random().toString(36).slice(2, 10);
// The casting logic could be removed with an explicit check
const NOT_PREFIX = "not-";
const removeNot = (str)=>str.replace(NOT_PREFIX, "");
const addNot = (str)=>NOT_PREFIX + str;
const removeNotFromType = (str)=>removeNot(str);
const removeNotFromOperation = (str)=>removeNot(str);
const addNotToType = (str)=>addNot(str);
const addNotToOperation = (str)=>addNot(str);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3QvcnBxbC9zcmMvbGliL2hlbHBlcnMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZ2VuZXJhdGVJZCA9ICgpID0+IFwicnAtXCIgKyBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zbGljZSgyLCAxMClcblxuLy8gVGhlIGNhc3RpbmcgbG9naWMgY291bGQgYmUgcmVtb3ZlZCB3aXRoIGFuIGV4cGxpY2l0IGNoZWNrXG5jb25zdCBOT1RfUFJFRklYID0gXCJub3QtXCJcbmNvbnN0IHJlbW92ZU5vdCA9IChzdHI6IHN0cmluZykgPT4gc3RyLnJlcGxhY2UoTk9UX1BSRUZJWCwgXCJcIilcbmNvbnN0IGFkZE5vdCA9IChzdHI6IHN0cmluZykgPT4gTk9UX1BSRUZJWCArIHN0clxuXG5jb25zdCByZW1vdmVOb3RGcm9tVHlwZSA9IChzdHI6IFwibm90LWFuZFwiIHwgXCJub3Qtb3JcIikgPT4gcmVtb3ZlTm90KHN0cikgYXMgXCJhbmRcIiB8IFwib3JcIlxuXG5jb25zdCByZW1vdmVOb3RGcm9tT3BlcmF0aW9uID0gKHN0cjogXCJub3QtaW5cIiB8IFwibm90LWFsbFwiKSA9PiByZW1vdmVOb3Qoc3RyKSBhcyBcImluXCIgfCBcImFsbFwiXG5cbmNvbnN0IGFkZE5vdFRvVHlwZSA9IChzdHI6IFwiYW5kXCIgfCBcIm9yXCIpID0+IGFkZE5vdChzdHIpIGFzIFwibm90LWFuZFwiIHwgXCJub3Qtb3JcIlxuXG5jb25zdCBhZGROb3RUb09wZXJhdGlvbiA9IChzdHI6IFwiaW5cIiB8IFwiYWxsXCIpID0+IGFkZE5vdChzdHIpIGFzIFwibm90LWluXCIgfCBcIm5vdC1hbGxcIlxuXG5leHBvcnQgeyBnZW5lcmF0ZUlkLCByZW1vdmVOb3RGcm9tVHlwZSwgcmVtb3ZlTm90RnJvbU9wZXJhdGlvbiwgYWRkTm90VG9PcGVyYXRpb24sIGFkZE5vdFRvVHlwZSB9XG4iXSwibmFtZXMiOlsiYWRkTm90VG9PcGVyYXRpb24iLCJhZGROb3RUb1R5cGUiLCJnZW5lcmF0ZUlkIiwicmVtb3ZlTm90RnJvbU9wZXJhdGlvbiIsInJlbW92ZU5vdEZyb21UeXBlIiwiTWF0aCIsInJhbmRvbSIsInRvU3RyaW5nIiwic2xpY2UiLCJOT1RfUFJFRklYIiwicmVtb3ZlTm90Iiwic3RyIiwicmVwbGFjZSIsImFkZE5vdCJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7SUFlZ0VBLGlCQUFpQjtlQUFqQkE7O0lBQW1CQyxZQUFZO2VBQVpBOztJQUExRUMsVUFBVTtlQUFWQTs7SUFBK0JDLHNCQUFzQjtlQUF0QkE7O0lBQW5CQyxpQkFBaUI7ZUFBakJBOzs7QUFmckIsTUFBTUYsYUFBYSxJQUFNLFFBQVFHLEtBQUtDLE1BQU0sR0FBR0MsUUFBUSxDQUFDLElBQUlDLEtBQUssQ0FBQyxHQUFHO0FBRXJFLDREQUE0RDtBQUM1RCxNQUFNQyxhQUFhO0FBQ25CLE1BQU1DLFlBQVksQ0FBQ0MsTUFBZ0JBLElBQUlDLE9BQU8sQ0FBQ0gsWUFBWTtBQUMzRCxNQUFNSSxTQUFTLENBQUNGLE1BQWdCRixhQUFhRTtBQUU3QyxNQUFNUCxvQkFBb0IsQ0FBQ08sTUFBOEJELFVBQVVDO0FBRW5FLE1BQU1SLHlCQUF5QixDQUFDUSxNQUE4QkQsVUFBVUM7QUFFeEUsTUFBTVYsZUFBZSxDQUFDVSxNQUFzQkUsT0FBT0Y7QUFFbkQsTUFBTVgsb0JBQW9CLENBQUNXLE1BQXNCRSxPQUFPRiJ9