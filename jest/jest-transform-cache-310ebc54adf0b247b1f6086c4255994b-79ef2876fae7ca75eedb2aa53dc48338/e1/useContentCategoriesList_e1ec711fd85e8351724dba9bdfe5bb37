e797a78d96f167759b57cb464a6d067d
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "useContentCategoriesList", {
    enumerable: true,
    get: function() {
        return useContentCategoriesList;
    }
});
const _react = require("react");
const _content = require("@rp/react/tanstack-api/content");
const _providers = require("@rp/react/web/common/providers");
const _getAllContentCategoriesFromResponsePages = require("../utils/getAllContentCategoriesFromResponsePages");
function useContentCategoriesList() {
    const { data, isLoading, isFetchingNextPage, hasNextPage, fetchNextPage, isError } = (0, _content.useInfiniteContentCategories)();
    const { enqueueError } = (0, _providers.useSnackbar)();
    (0, _react.useEffect)(()=>{
        if (isError) {
            enqueueError("There was an error while loading categories");
        }
    }, [
        enqueueError,
        isError
    ]);
    const allContentCategories = (0, _react.useMemo)(()=>(0, _getAllContentCategoriesFromResponsePages.getAllContentCategoriesFromResponsePages)({
            pages: data === null || data === void 0 ? void 0 : data.pages
        }), [
        data === null || data === void 0 ? void 0 : data.pages
    ]);
    return {
        isLoadingContentCategories: isLoading,
        allContentCategories,
        isFetchingNextPage,
        hasNextPage,
        fetchNextPage,
        hasError: isError
    };
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3QvY29tbW9uL3NvdXJjZS1zZWxlY3Rvci9zcmMvaG9va3MvdXNlQ29udGVudENhdGVnb3JpZXNMaXN0LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZUVmZmVjdCwgdXNlTWVtbyB9IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgeyBDb250ZW50Q2F0ZWdvcnksIHVzZUluZmluaXRlQ29udGVudENhdGVnb3JpZXMgfSBmcm9tIFwiQHJwL3JlYWN0L3RhbnN0YWNrLWFwaS9jb250ZW50XCJcbmltcG9ydCB7IHVzZVNuYWNrYmFyIH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvY29tbW9uL3Byb3ZpZGVyc1wiXG5pbXBvcnQgeyBnZXRBbGxDb250ZW50Q2F0ZWdvcmllc0Zyb21SZXNwb25zZVBhZ2VzIH0gZnJvbSBcIi4uL3V0aWxzL2dldEFsbENvbnRlbnRDYXRlZ29yaWVzRnJvbVJlc3BvbnNlUGFnZXNcIlxuXG50eXBlIFVzZUNvbnRlbnRDYXRlZ29yaWVzTGlzdFN0YXRlID0ge1xuICBpc0xvYWRpbmdDb250ZW50Q2F0ZWdvcmllczogYm9vbGVhblxuICBhbGxDb250ZW50Q2F0ZWdvcmllczogQXJyYXk8Q29udGVudENhdGVnb3J5PlxuICBpc0ZldGNoaW5nTmV4dFBhZ2U6IGJvb2xlYW5cbiAgaGFzTmV4dFBhZ2U6IGJvb2xlYW5cbiAgZmV0Y2hOZXh0UGFnZTogKCkgPT4gdm9pZFxuICBoYXNFcnJvcjogYm9vbGVhblxufVxuXG5mdW5jdGlvbiB1c2VDb250ZW50Q2F0ZWdvcmllc0xpc3QoKTogVXNlQ29udGVudENhdGVnb3JpZXNMaXN0U3RhdGUge1xuICBjb25zdCB7IGRhdGEsIGlzTG9hZGluZywgaXNGZXRjaGluZ05leHRQYWdlLCBoYXNOZXh0UGFnZSwgZmV0Y2hOZXh0UGFnZSwgaXNFcnJvciB9ID1cbiAgICB1c2VJbmZpbml0ZUNvbnRlbnRDYXRlZ29yaWVzKClcbiAgY29uc3QgeyBlbnF1ZXVlRXJyb3IgfSA9IHVzZVNuYWNrYmFyKClcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChpc0Vycm9yKSB7XG4gICAgICBlbnF1ZXVlRXJyb3IoXCJUaGVyZSB3YXMgYW4gZXJyb3Igd2hpbGUgbG9hZGluZyBjYXRlZ29yaWVzXCIpXG4gICAgfVxuICB9LCBbZW5xdWV1ZUVycm9yLCBpc0Vycm9yXSlcblxuICBjb25zdCBhbGxDb250ZW50Q2F0ZWdvcmllczogQXJyYXk8Q29udGVudENhdGVnb3J5PiA9IHVzZU1lbW8oXG4gICAgKCkgPT5cbiAgICAgIGdldEFsbENvbnRlbnRDYXRlZ29yaWVzRnJvbVJlc3BvbnNlUGFnZXMoe1xuICAgICAgICBwYWdlczogZGF0YT8ucGFnZXMsXG4gICAgICB9KSxcbiAgICBbZGF0YT8ucGFnZXNdLFxuICApXG5cbiAgcmV0dXJuIHtcbiAgICBpc0xvYWRpbmdDb250ZW50Q2F0ZWdvcmllczogaXNMb2FkaW5nLFxuICAgIGFsbENvbnRlbnRDYXRlZ29yaWVzLFxuICAgIGlzRmV0Y2hpbmdOZXh0UGFnZSxcbiAgICBoYXNOZXh0UGFnZSxcbiAgICBmZXRjaE5leHRQYWdlLFxuICAgIGhhc0Vycm9yOiBpc0Vycm9yLFxuICB9XG59XG5cbmV4cG9ydCB7IHVzZUNvbnRlbnRDYXRlZ29yaWVzTGlzdCB9XG5leHBvcnQgdHlwZSB7IFVzZUNvbnRlbnRDYXRlZ29yaWVzTGlzdFN0YXRlIH1cbiJdLCJuYW1lcyI6WyJ1c2VDb250ZW50Q2F0ZWdvcmllc0xpc3QiLCJkYXRhIiwiaXNMb2FkaW5nIiwiaXNGZXRjaGluZ05leHRQYWdlIiwiaGFzTmV4dFBhZ2UiLCJmZXRjaE5leHRQYWdlIiwiaXNFcnJvciIsInVzZUluZmluaXRlQ29udGVudENhdGVnb3JpZXMiLCJlbnF1ZXVlRXJyb3IiLCJ1c2VTbmFja2JhciIsInVzZUVmZmVjdCIsImFsbENvbnRlbnRDYXRlZ29yaWVzIiwidXNlTWVtbyIsImdldEFsbENvbnRlbnRDYXRlZ29yaWVzRnJvbVJlc3BvbnNlUGFnZXMiLCJwYWdlcyIsImlzTG9hZGluZ0NvbnRlbnRDYXRlZ29yaWVzIiwiaGFzRXJyb3IiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBMkNTQTs7O2VBQUFBOzs7dUJBM0MwQjt5QkFDMkI7MkJBQ2xDOzBEQUM2QjtBQVd6RCxTQUFTQTtJQUNQLE1BQU0sRUFBRUMsSUFBSSxFQUFFQyxTQUFTLEVBQUVDLGtCQUFrQixFQUFFQyxXQUFXLEVBQUVDLGFBQWEsRUFBRUMsT0FBTyxFQUFFLEdBQ2hGQyxJQUFBQSxxQ0FBNEI7SUFDOUIsTUFBTSxFQUFFQyxZQUFZLEVBQUUsR0FBR0MsSUFBQUEsc0JBQVc7SUFFcENDLElBQUFBLGdCQUFTLEVBQUM7UUFDUixJQUFJSixTQUFTO1lBQ1hFLGFBQWE7UUFDZjtJQUNGLEdBQUc7UUFBQ0E7UUFBY0Y7S0FBUTtJQUUxQixNQUFNSyx1QkFBK0NDLElBQUFBLGNBQU8sRUFDMUQsSUFDRUMsSUFBQUEsa0ZBQXdDLEVBQUM7WUFDdkNDLEtBQUssRUFBRWIsaUJBQUFBLDJCQUFBQSxLQUFNYSxLQUFLO1FBQ3BCLElBQ0Y7UUFBQ2IsaUJBQUFBLDJCQUFBQSxLQUFNYSxLQUFLO0tBQUM7SUFHZixPQUFPO1FBQ0xDLDRCQUE0QmI7UUFDNUJTO1FBQ0FSO1FBQ0FDO1FBQ0FDO1FBQ0FXLFVBQVVWO0lBQ1o7QUFDRiJ9