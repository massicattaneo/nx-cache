{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/brief/src/components/briefSteps/BriefNotificationsStep/BriefNotificationsFrequencyStep/BriefNotificationsFrequencyStep.tsx"],"sourcesContent":["import { useMemo } from \"react\"\nimport { NotificationSchedule } from \"@rp/common/api-types\"\nimport { awsCron } from \"@rp/common/utils\"\nimport { DAYS } from \"@rp/react/web/common/composite-components\"\nimport { useDeviceInfo } from \"@rp/react/web/common/hooks\"\nimport { Box, ToggleButton, Typography } from \"@rp/react/web/mui/core\"\nimport { getWrapperSx, handleScheduleDayClick } from \"./BriefNotificationsFrequencyStep.utils\"\n\ntype BriefNotificationsStepsProps = {\n  schedule: NotificationSchedule\n  setSchedule: (schedule: NotificationSchedule) => void\n}\n\nconst BriefNotificationsFrequencyStep = ({\n  schedule,\n  setSchedule,\n}: BriefNotificationsStepsProps) => {\n  const { isMobile } = useDeviceInfo()\n  const selectedDays = awsCron.expressionToDays(schedule.schedulerExpression)\n\n  const renderedDays = useMemo(\n    () =>\n      DAYS.map(day => (\n        <ToggleButton\n          key={day.value}\n          fullWidth\n          value=\"email\"\n          selected={selectedDays.indexOf(day.value) !== -1}\n          size=\"small\"\n          onClick={() =>\n            handleScheduleDayClick({\n              setSchedule,\n              schedule,\n              day,\n            })\n          }\n        >\n          {day.label.slice(0, 3)}\n        </ToggleButton>\n      )),\n    [selectedDays, setSchedule, schedule],\n  )\n\n  return (\n    <Box sx={{ mt: 1 }}>\n      <Typography color=\"text.secondary\">Repeat on:</Typography>\n      <Box sx={getWrapperSx(isMobile)}>{renderedDays}</Box>\n    </Box>\n  )\n}\n\nexport { BriefNotificationsFrequencyStep }\n"],"names":["BriefNotificationsFrequencyStep","schedule","setSchedule","isMobile","useDeviceInfo","selectedDays","awsCron","expressionToDays","schedulerExpression","renderedDays","useMemo","DAYS","map","day","ToggleButton","fullWidth","value","selected","indexOf","size","onClick","handleScheduleDayClick","label","slice","Box","sx","mt","Typography","color","getWrapperSx"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAmDSA;;;eAAAA;;;;uBAnDe;uBAEA;qCACH;uBACS;sBACgB;sDACO;AAOrD,MAAMA,kCAAkC,CAAC,EACvCC,QAAQ,EACRC,WAAW,EACkB;IAC7B,MAAM,EAAEC,QAAQ,EAAE,GAAGC,IAAAA,oBAAa;IAClC,MAAMC,eAAeC,cAAO,CAACC,gBAAgB,CAACN,SAASO,mBAAmB;IAE1E,MAAMC,eAAeC,IAAAA,cAAO,EAC1B,IACEC,yBAAI,CAACC,GAAG,CAACC,CAAAA,oBACP,qBAACC,kBAAY;gBAEXC,SAAS;gBACTC,OAAM;gBACNC,UAAUZ,aAAaa,OAAO,CAACL,IAAIG,KAAK,MAAM,CAAC;gBAC/CG,MAAK;gBACLC,SAAS,IACPC,IAAAA,4DAAsB,EAAC;wBACrBnB;wBACAD;wBACAY;oBACF;0BAGDA,IAAIS,KAAK,CAACC,KAAK,CAAC,GAAG;eAbfV,IAAIG,KAAK,IAgBpB;QAACX;QAAcH;QAAaD;KAAS;IAGvC,qBACE,sBAACuB,SAAG;QAACC,IAAI;YAAEC,IAAI;QAAE;;0BACf,qBAACC,gBAAU;gBAACC,OAAM;0BAAiB;;0BACnC,qBAACJ,SAAG;gBAACC,IAAII,IAAAA,kDAAY,EAAC1B;0BAAYM;;;;AAGxC"}