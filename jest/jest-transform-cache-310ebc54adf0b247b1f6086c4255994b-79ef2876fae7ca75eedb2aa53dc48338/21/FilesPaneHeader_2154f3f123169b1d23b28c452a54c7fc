4b1de2664cc92089ff304617f342aa57
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "FilesPaneHeader", {
    enumerable: true,
    get: function() {
        return FilesPaneHeader;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _reacti18next = require("react-i18next");
const _reactrouterdom = require("react-router-dom");
const _settings = require("@rp/common/settings");
const _providers = require("@rp/react/common/providers");
const _layout = require("@rp/react/web/common/layout");
const _core = require("@rp/react/web/mui/core");
const _UploadFilesButton = require("../../UploadFilesButton");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const FilesPaneHeader = ({ filterTerm, disableUpload, planComparisonHandleOpen })=>{
    const [_, setSearchParams] = (0, _reactrouterdom.useSearchParams)();
    const { hasEntitlement } = (0, _providers.useAccount)();
    const { t } = (0, _reacti18next.useTranslation)();
    const findFilesPlaceholder = t("filePage.findFilesPlaceholder");
    const onFileUpload = ()=>{
        if (disableUpload) {
            planComparisonHandleOpen(_settings.FILES_FEATURE_NAME);
        }
        window.scrollTo({
            top: 0,
            behavior: "smooth"
        });
    };
    const setFilterTerm = (0, _react.useCallback)((term)=>{
        setSearchParams((prev)=>{
            const { find: _ } = prev, rest = _object_without_properties(prev, [
                "find"
            ]);
            return term.length ? _object_spread_props(_object_spread({}, rest), {
                find: term
            }) : rest;
        }, {
            replace: true
        });
    }, [
        setSearchParams
    ]);
    const headerItems = [];
    if (hasEntitlement("file:upload")) {
        headerItems.push(/*#__PURE__*/ (0, _jsxruntime.jsx)(_UploadFilesButton.UploadFileButton, {
            onSuccess: onFileUpload,
            disableUpload: disableUpload
        }, "upload-file-button"));
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
        sx: {
            display: "inline-flex",
            alignItems: "center",
            justifyContent: "space-between",
            pt: 2,
            width: "100%"
        },
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_layout.HeaderSearchBar, {
                filterTerm: filterTerm,
                onChange: (value)=>setFilterTerm(value),
                placeholder: findFilesPlaceholder,
                maxWidth: 500
            }, "header-search-bar"),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_UploadFilesButton.UploadFileButton, {
                onSuccess: onFileUpload,
                disableUpload: false
            }, "upload-file-button")
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2FwcHMvY2xpZW50LXdlYi9zcmMvYXBwL3BhZ2VzL0ZpbGVzL0ZpbGVzVjIvY29tcG9uZW50cy9GaWxlc1BhbmUvRmlsZXNQYW5lSGVhZGVyL0ZpbGVzUGFuZUhlYWRlci50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgeyB1c2VDYWxsYmFjayB9IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgeyB1c2VUcmFuc2xhdGlvbiB9IGZyb20gXCJyZWFjdC1pMThuZXh0XCJcbmltcG9ydCB7IHVzZVNlYXJjaFBhcmFtcyB9IGZyb20gXCJyZWFjdC1yb3V0ZXItZG9tXCJcbmltcG9ydCB7IEZJTEVTX0ZFQVRVUkVfTkFNRSB9IGZyb20gXCJAcnAvY29tbW9uL3NldHRpbmdzXCJcbmltcG9ydCB7IHVzZUFjY291bnQgfSBmcm9tIFwiQHJwL3JlYWN0L2NvbW1vbi9wcm92aWRlcnNcIlxuaW1wb3J0IHsgSGVhZGVyU2VhcmNoQmFyIH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvY29tbW9uL2xheW91dFwiXG5pbXBvcnQgeyBCb3ggfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9tdWkvY29yZVwiXG5pbXBvcnQgeyBTZWxlY3RlZEZpbGUgfSBmcm9tIFwiLi4vLi4vLi4vLi4vLi4vLi4vY29tcG9uZW50cy9IdWIvRmlsZXMvRmlsZXNcIlxuaW1wb3J0IHsgVXBsb2FkRmlsZUJ1dHRvbiB9IGZyb20gXCIuLi8uLi9VcGxvYWRGaWxlc0J1dHRvblwiXG5cbnR5cGUgRmlsZXNQYW5lSGVhZGVyUHJvcHMgPSB7XG4gIHNlbGVjdGVkRmlsZXM6IEFycmF5PFNlbGVjdGVkRmlsZT5cbiAgZmlsdGVyVGVybTogc3RyaW5nXG4gIGRpc2FibGVVcGxvYWQ6IGJvb2xlYW5cbiAgcGxhbkNvbXBhcmlzb25IYW5kbGVPcGVuOiAobmV3VmFsdWU6IHN0cmluZykgPT4gdm9pZFxufVxuXG5jb25zdCBGaWxlc1BhbmVIZWFkZXIgPSAoe1xuICBmaWx0ZXJUZXJtLFxuICBkaXNhYmxlVXBsb2FkLFxuICBwbGFuQ29tcGFyaXNvbkhhbmRsZU9wZW4sXG59OiBGaWxlc1BhbmVIZWFkZXJQcm9wcykgPT4ge1xuICBjb25zdCBbXywgc2V0U2VhcmNoUGFyYW1zXSA9IHVzZVNlYXJjaFBhcmFtcygpXG5cbiAgY29uc3QgeyBoYXNFbnRpdGxlbWVudCB9ID0gdXNlQWNjb3VudCgpXG5cbiAgY29uc3QgeyB0IH0gPSB1c2VUcmFuc2xhdGlvbigpXG4gIGNvbnN0IGZpbmRGaWxlc1BsYWNlaG9sZGVyID0gdChcImZpbGVQYWdlLmZpbmRGaWxlc1BsYWNlaG9sZGVyXCIpXG5cbiAgY29uc3Qgb25GaWxlVXBsb2FkID0gKCkgPT4ge1xuICAgIGlmIChkaXNhYmxlVXBsb2FkKSB7XG4gICAgICBwbGFuQ29tcGFyaXNvbkhhbmRsZU9wZW4oRklMRVNfRkVBVFVSRV9OQU1FKVxuICAgIH1cbiAgICB3aW5kb3cuc2Nyb2xsVG8oeyB0b3A6IDAsIGJlaGF2aW9yOiBcInNtb290aFwiIH0pXG4gIH1cblxuICBjb25zdCBzZXRGaWx0ZXJUZXJtID0gdXNlQ2FsbGJhY2soXG4gICAgKHRlcm06IHN0cmluZykgPT4ge1xuICAgICAgc2V0U2VhcmNoUGFyYW1zKFxuICAgICAgICAocHJldjogVVJMU2VhcmNoUGFyYW1zICYgeyBmaW5kPzogc3RyaW5nIH0pID0+IHtcbiAgICAgICAgICBjb25zdCB7IGZpbmQ6IF8sIC4uLnJlc3QgfSA9IHByZXZcbiAgICAgICAgICByZXR1cm4gdGVybS5sZW5ndGggPyB7IC4uLnJlc3QsIGZpbmQ6IHRlcm0gfSA6IHJlc3RcbiAgICAgICAgfSxcbiAgICAgICAgeyByZXBsYWNlOiB0cnVlIH0sXG4gICAgICApXG4gICAgfSxcbiAgICBbc2V0U2VhcmNoUGFyYW1zXSxcbiAgKVxuXG4gIGNvbnN0IGhlYWRlckl0ZW1zOiBBcnJheTxSZWFjdC5SZWFjdEVsZW1lbnQ+ID0gW11cbiAgaWYgKGhhc0VudGl0bGVtZW50KFwiZmlsZTp1cGxvYWRcIikpIHtcbiAgICBoZWFkZXJJdGVtcy5wdXNoKFxuICAgICAgPFVwbG9hZEZpbGVCdXR0b25cbiAgICAgICAga2V5PVwidXBsb2FkLWZpbGUtYnV0dG9uXCJcbiAgICAgICAgb25TdWNjZXNzPXtvbkZpbGVVcGxvYWR9XG4gICAgICAgIGRpc2FibGVVcGxvYWQ9e2Rpc2FibGVVcGxvYWR9XG4gICAgICAvPixcbiAgICApXG4gIH1cblxuICByZXR1cm4gKFxuICAgIDxCb3hcbiAgICAgIHN4PXt7XG4gICAgICAgIGRpc3BsYXk6IFwiaW5saW5lLWZsZXhcIixcbiAgICAgICAgYWxpZ25JdGVtczogXCJjZW50ZXJcIixcbiAgICAgICAganVzdGlmeUNvbnRlbnQ6IFwic3BhY2UtYmV0d2VlblwiLFxuICAgICAgICBwdDogMixcbiAgICAgICAgd2lkdGg6IFwiMTAwJVwiLFxuICAgICAgfX1cbiAgICA+XG4gICAgICA8SGVhZGVyU2VhcmNoQmFyXG4gICAgICAgIGtleT1cImhlYWRlci1zZWFyY2gtYmFyXCJcbiAgICAgICAgZmlsdGVyVGVybT17ZmlsdGVyVGVybX1cbiAgICAgICAgb25DaGFuZ2U9e3ZhbHVlID0+IHNldEZpbHRlclRlcm0odmFsdWUpfVxuICAgICAgICBwbGFjZWhvbGRlcj17ZmluZEZpbGVzUGxhY2Vob2xkZXJ9XG4gICAgICAgIG1heFdpZHRoPXs1MDB9XG4gICAgICAvPlxuXG4gICAgICA8VXBsb2FkRmlsZUJ1dHRvbiBrZXk9XCJ1cGxvYWQtZmlsZS1idXR0b25cIiBvblN1Y2Nlc3M9e29uRmlsZVVwbG9hZH0gZGlzYWJsZVVwbG9hZD17ZmFsc2V9IC8+XG4gICAgPC9Cb3g+XG4gIClcbn1cblxuZXhwb3J0IHsgRmlsZXNQYW5lSGVhZGVyIH1cbiJdLCJuYW1lcyI6WyJGaWxlc1BhbmVIZWFkZXIiLCJmaWx0ZXJUZXJtIiwiZGlzYWJsZVVwbG9hZCIsInBsYW5Db21wYXJpc29uSGFuZGxlT3BlbiIsIl8iLCJzZXRTZWFyY2hQYXJhbXMiLCJ1c2VTZWFyY2hQYXJhbXMiLCJoYXNFbnRpdGxlbWVudCIsInVzZUFjY291bnQiLCJ0IiwidXNlVHJhbnNsYXRpb24iLCJmaW5kRmlsZXNQbGFjZWhvbGRlciIsIm9uRmlsZVVwbG9hZCIsIkZJTEVTX0ZFQVRVUkVfTkFNRSIsIndpbmRvdyIsInNjcm9sbFRvIiwidG9wIiwiYmVoYXZpb3IiLCJzZXRGaWx0ZXJUZXJtIiwidXNlQ2FsbGJhY2siLCJ0ZXJtIiwicHJldiIsImZpbmQiLCJyZXN0IiwibGVuZ3RoIiwicmVwbGFjZSIsImhlYWRlckl0ZW1zIiwicHVzaCIsIlVwbG9hZEZpbGVCdXR0b24iLCJvblN1Y2Nlc3MiLCJCb3giLCJzeCIsImRpc3BsYXkiLCJhbGlnbkl0ZW1zIiwianVzdGlmeUNvbnRlbnQiLCJwdCIsIndpZHRoIiwiSGVhZGVyU2VhcmNoQmFyIiwib25DaGFuZ2UiLCJ2YWx1ZSIsInBsYWNlaG9sZGVyIiwibWF4V2lkdGgiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQW9GU0E7OztlQUFBQTs7OzsrREFwRlM7OEJBRWE7Z0NBQ0M7MEJBQ0c7MkJBQ1I7d0JBQ0s7c0JBQ1o7bUNBRWE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFTakMsTUFBTUEsa0JBQWtCLENBQUMsRUFDdkJDLFVBQVUsRUFDVkMsYUFBYSxFQUNiQyx3QkFBd0IsRUFDSDtJQUNyQixNQUFNLENBQUNDLEdBQUdDLGdCQUFnQixHQUFHQyxJQUFBQSwrQkFBZTtJQUU1QyxNQUFNLEVBQUVDLGNBQWMsRUFBRSxHQUFHQyxJQUFBQSxxQkFBVTtJQUVyQyxNQUFNLEVBQUVDLENBQUMsRUFBRSxHQUFHQyxJQUFBQSw0QkFBYztJQUM1QixNQUFNQyx1QkFBdUJGLEVBQUU7SUFFL0IsTUFBTUcsZUFBZTtRQUNuQixJQUFJVixlQUFlO1lBQ2pCQyx5QkFBeUJVLDRCQUFrQjtRQUM3QztRQUNBQyxPQUFPQyxRQUFRLENBQUM7WUFBRUMsS0FBSztZQUFHQyxVQUFVO1FBQVM7SUFDL0M7SUFFQSxNQUFNQyxnQkFBZ0JDLElBQUFBLGtCQUFXLEVBQy9CLENBQUNDO1FBQ0NmLGdCQUNFLENBQUNnQjtZQUNDLE1BQU0sRUFBRUMsTUFBTWxCLENBQUMsRUFBVyxHQUFHaUIsTUFBVEUsa0NBQVNGO2dCQUFyQkM7O1lBQ1IsT0FBT0YsS0FBS0ksTUFBTSxHQUFHLHdDQUFLRDtnQkFBTUQsTUFBTUY7aUJBQVNHO1FBQ2pELEdBQ0E7WUFBRUUsU0FBUztRQUFLO0lBRXBCLEdBQ0E7UUFBQ3BCO0tBQWdCO0lBR25CLE1BQU1xQixjQUF5QyxFQUFFO0lBQ2pELElBQUluQixlQUFlLGdCQUFnQjtRQUNqQ21CLFlBQVlDLElBQUksZUFDZCxxQkFBQ0MsbUNBQWdCO1lBRWZDLFdBQVdqQjtZQUNYVixlQUFlQTtXQUZYO0lBS1Y7SUFFQSxxQkFDRSxzQkFBQzRCLFNBQUc7UUFDRkMsSUFBSTtZQUNGQyxTQUFTO1lBQ1RDLFlBQVk7WUFDWkMsZ0JBQWdCO1lBQ2hCQyxJQUFJO1lBQ0pDLE9BQU87UUFDVDs7MEJBRUEscUJBQUNDLHVCQUFlO2dCQUVkcEMsWUFBWUE7Z0JBQ1pxQyxVQUFVQyxDQUFBQSxRQUFTckIsY0FBY3FCO2dCQUNqQ0MsYUFBYTdCO2dCQUNiOEIsVUFBVTtlQUpOOzBCQU9OLHFCQUFDYixtQ0FBZ0I7Z0JBQTBCQyxXQUFXakI7Z0JBQWNWLGVBQWU7ZUFBN0Q7OztBQUc1QiJ9