360b92cd181d00baf241bc872e2af681
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "WatchlistTableRow", {
    enumerable: true,
    get: function() {
        return WatchlistTableRow;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _reacthighlightwords = /*#__PURE__*/ _interop_require_default(require("react-highlight-words"));
const _utils = require("@rp/common/utils");
const _discoverypanelconfig = require("@rp/react/tanstack-api/discovery-panel-config");
const _compositecomponents = require("@rp/react/web/common/composite-components");
const _hooks = require("@rp/react/web/common/hooks");
const _core = require("@rp/react/web/mui/core");
const _icons = require("@rp/react/web/mui/icons");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const getTicker = (item, panelConfig)=>{
    var _panelConfig_discoveryPanelCategories_find_groups_filter_find, _panelConfig_discoveryPanelCategories_find;
    if (item.category !== "Companies") {
        return;
    }
    if (!panelConfig) {
        // Default trying to avoid loading state
        return item.metadata1;
    }
    const tickerMetadata = (_panelConfig_discoveryPanelCategories_find = panelConfig.discoveryPanelCategories.find((cat)=>cat.category === "companies")) === null || _panelConfig_discoveryPanelCategories_find === void 0 ? void 0 : (_panelConfig_discoveryPanelCategories_find_groups_filter_find = _panelConfig_discoveryPanelCategories_find.groups.filter(_discoverypanelconfig.isMetadata).find((metadata)=>metadata.label === "Ticker")) === null || _panelConfig_discoveryPanelCategories_find_groups_filter_find === void 0 ? void 0 : _panelConfig_discoveryPanelCategories_find_groups_filter_find.metadata;
    return tickerMetadata ? item[tickerMetadata] : undefined;
};
const WatchlistTableRow = ({ item, filterTerm, onDelete })=>{
    const theme = (0, _core.useTheme)();
    const { data } = (0, _discoverypanelconfig.usePanelConfig)();
    const ticker = getTicker(item, data);
    const { isMobile } = (0, _hooks.useDeviceInfo)();
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.TableRow, {
        hover: true,
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.TableCell, {
                sx: {
                    py: 2,
                    maxWidth: isMobile ? "1px" : 300
                },
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.EllipsisTooltip, {
                        tooltipText: item.name,
                        typographyProps: {
                            variant: "body2",
                            fontWeight: "bold"
                        },
                        tooltipProps: {
                            disableInteractive: true
                        },
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_reacthighlightwords.default, {
                            autoEscape: true,
                            highlightStyle: {
                                color: theme.palette.primary.light
                            },
                            highlightTag: "span",
                            searchWords: [
                                filterTerm
                            ],
                            textToHighlight: item.name
                        })
                    }),
                    ticker ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                        color: "blue.200",
                        variant: "caption",
                        ml: 1,
                        children: ticker
                    }) : null,
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                        color: "rgba(255, 255, 255, 0.6)",
                        variant: "body2",
                        textOverflow: "ellipsis",
                        overflow: "hidden",
                        whiteSpace: "nowrap",
                        children: (0, _utils.getWatchlistItemDescription)(item)
                    })
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.TableCell, {
                sx: {
                    width: isMobile ? "1px" : undefined
                },
                children: item.category
            }),
            onDelete ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.TableCell, {
                sx: {
                    width: isMobile ? "1px" : undefined
                },
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.IconButton, {
                    onClick: ()=>onDelete(item.key),
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.Close, {})
                })
            }) : null
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2FwcHMvY2xpZW50LXdlYi9zcmMvYXBwL2NvbXBvbmVudHMvSHViL1dhdGNobGlzdHMvUG9ydGZvbGlvVmlldy9XYXRjaGxpc3RUYWJsZVJvdy50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgSGlnaGxpZ2h0ZXIgZnJvbSBcInJlYWN0LWhpZ2hsaWdodC13b3Jkc1wiXG5pbXBvcnQgeyBDcXNJdGVtIH0gZnJvbSBcIkBycC9jb21tb24vYXBpLXR5cGVzXCJcbmltcG9ydCB7IGdldFdhdGNobGlzdEl0ZW1EZXNjcmlwdGlvbiB9IGZyb20gXCJAcnAvY29tbW9uL3V0aWxzXCJcbmltcG9ydCB7XG4gIFBhbmVsQ29uZmlnLFxuICBpc01ldGFkYXRhLFxuICB1c2VQYW5lbENvbmZpZyxcbn0gZnJvbSBcIkBycC9yZWFjdC90YW5zdGFjay1hcGkvZGlzY292ZXJ5LXBhbmVsLWNvbmZpZ1wiXG5pbXBvcnQgeyBFbGxpcHNpc1Rvb2x0aXAgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9jb21tb24vY29tcG9zaXRlLWNvbXBvbmVudHNcIlxuaW1wb3J0IHsgdXNlRGV2aWNlSW5mbyB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL2NvbW1vbi9ob29rc1wiXG5pbXBvcnQgeyBJY29uQnV0dG9uLCBUYWJsZUNlbGwsIFRhYmxlUm93LCBUeXBvZ3JhcGh5LCB1c2VUaGVtZSB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL211aS9jb3JlXCJcbmltcG9ydCB7IENsb3NlIH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvbXVpL2ljb25zXCJcblxuY29uc3QgZ2V0VGlja2VyID0gKGl0ZW06IENxc0l0ZW0sIHBhbmVsQ29uZmlnPzogUGFuZWxDb25maWcpID0+IHtcbiAgaWYgKGl0ZW0uY2F0ZWdvcnkgIT09IFwiQ29tcGFuaWVzXCIpIHtcbiAgICByZXR1cm5cbiAgfVxuXG4gIGlmICghcGFuZWxDb25maWcpIHtcbiAgICAvLyBEZWZhdWx0IHRyeWluZyB0byBhdm9pZCBsb2FkaW5nIHN0YXRlXG4gICAgcmV0dXJuIGl0ZW0ubWV0YWRhdGExXG4gIH1cblxuICBjb25zdCB0aWNrZXJNZXRhZGF0YSA9IHBhbmVsQ29uZmlnLmRpc2NvdmVyeVBhbmVsQ2F0ZWdvcmllc1xuICAgIC5maW5kKGNhdCA9PiBjYXQuY2F0ZWdvcnkgPT09IFwiY29tcGFuaWVzXCIpXG4gICAgPy5ncm91cHMuZmlsdGVyKGlzTWV0YWRhdGEpXG4gICAgLmZpbmQobWV0YWRhdGEgPT4gbWV0YWRhdGEubGFiZWwgPT09IFwiVGlja2VyXCIpPy5tZXRhZGF0YVxuXG4gIHJldHVybiB0aWNrZXJNZXRhZGF0YSA/IGl0ZW1bdGlja2VyTWV0YWRhdGFdIDogdW5kZWZpbmVkXG59XG5cbnR5cGUgUHJvcHMgPSB7XG4gIGl0ZW06IENxc0l0ZW1cbiAgZmlsdGVyVGVybTogc3RyaW5nXG4gIG9uRGVsZXRlPzogKGlkOiBzdHJpbmcpID0+IHZvaWRcbn1cblxuY29uc3QgV2F0Y2hsaXN0VGFibGVSb3cgPSAoeyBpdGVtLCBmaWx0ZXJUZXJtLCBvbkRlbGV0ZSB9OiBQcm9wcykgPT4ge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKClcbiAgY29uc3QgeyBkYXRhIH0gPSB1c2VQYW5lbENvbmZpZygpXG4gIGNvbnN0IHRpY2tlciA9IGdldFRpY2tlcihpdGVtLCBkYXRhKVxuICBjb25zdCB7IGlzTW9iaWxlIH0gPSB1c2VEZXZpY2VJbmZvKClcblxuICByZXR1cm4gKFxuICAgIDxUYWJsZVJvdyBob3Zlcj5cbiAgICAgIDxUYWJsZUNlbGwgc3g9e3sgcHk6IDIsIG1heFdpZHRoOiBpc01vYmlsZSA/IFwiMXB4XCIgOiAzMDAgfX0+XG4gICAgICAgIDxFbGxpcHNpc1Rvb2x0aXBcbiAgICAgICAgICB0b29sdGlwVGV4dD17aXRlbS5uYW1lfVxuICAgICAgICAgIHR5cG9ncmFwaHlQcm9wcz17eyB2YXJpYW50OiBcImJvZHkyXCIsIGZvbnRXZWlnaHQ6IFwiYm9sZFwiIH19XG4gICAgICAgICAgdG9vbHRpcFByb3BzPXt7IGRpc2FibGVJbnRlcmFjdGl2ZTogdHJ1ZSB9fVxuICAgICAgICA+XG4gICAgICAgICAgPEhpZ2hsaWdodGVyXG4gICAgICAgICAgICBhdXRvRXNjYXBlXG4gICAgICAgICAgICBoaWdobGlnaHRTdHlsZT17eyBjb2xvcjogdGhlbWUucGFsZXR0ZS5wcmltYXJ5LmxpZ2h0IH19XG4gICAgICAgICAgICBoaWdobGlnaHRUYWc9XCJzcGFuXCJcbiAgICAgICAgICAgIHNlYXJjaFdvcmRzPXtbZmlsdGVyVGVybV19XG4gICAgICAgICAgICB0ZXh0VG9IaWdobGlnaHQ9e2l0ZW0ubmFtZX1cbiAgICAgICAgICAvPlxuICAgICAgICA8L0VsbGlwc2lzVG9vbHRpcD5cbiAgICAgICAge3RpY2tlciA/IChcbiAgICAgICAgICA8VHlwb2dyYXBoeSBjb2xvcj1cImJsdWUuMjAwXCIgdmFyaWFudD1cImNhcHRpb25cIiBtbD17MX0+XG4gICAgICAgICAgICB7dGlja2VyfVxuICAgICAgICAgIDwvVHlwb2dyYXBoeT5cbiAgICAgICAgKSA6IG51bGx9XG4gICAgICAgIDxUeXBvZ3JhcGh5XG4gICAgICAgICAgY29sb3I9XCJyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNilcIlxuICAgICAgICAgIHZhcmlhbnQ9XCJib2R5MlwiXG4gICAgICAgICAgdGV4dE92ZXJmbG93PVwiZWxsaXBzaXNcIlxuICAgICAgICAgIG92ZXJmbG93PVwiaGlkZGVuXCJcbiAgICAgICAgICB3aGl0ZVNwYWNlPVwibm93cmFwXCJcbiAgICAgICAgPlxuICAgICAgICAgIHtnZXRXYXRjaGxpc3RJdGVtRGVzY3JpcHRpb24oaXRlbSl9XG4gICAgICAgIDwvVHlwb2dyYXBoeT5cbiAgICAgIDwvVGFibGVDZWxsPlxuICAgICAgPFRhYmxlQ2VsbCBzeD17eyB3aWR0aDogaXNNb2JpbGUgPyBcIjFweFwiIDogdW5kZWZpbmVkIH19PntpdGVtLmNhdGVnb3J5fTwvVGFibGVDZWxsPlxuICAgICAge29uRGVsZXRlID8gKFxuICAgICAgICA8VGFibGVDZWxsIHN4PXt7IHdpZHRoOiBpc01vYmlsZSA/IFwiMXB4XCIgOiB1bmRlZmluZWQgfX0+XG4gICAgICAgICAgPEljb25CdXR0b24gb25DbGljaz17KCkgPT4gb25EZWxldGUoaXRlbS5rZXkpfT5cbiAgICAgICAgICAgIDxDbG9zZSAvPlxuICAgICAgICAgIDwvSWNvbkJ1dHRvbj5cbiAgICAgICAgPC9UYWJsZUNlbGw+XG4gICAgICApIDogbnVsbH1cbiAgICA8L1RhYmxlUm93PlxuICApXG59XG5cbmV4cG9ydCB7IFdhdGNobGlzdFRhYmxlUm93IH1cbiJdLCJuYW1lcyI6WyJXYXRjaGxpc3RUYWJsZVJvdyIsImdldFRpY2tlciIsIml0ZW0iLCJwYW5lbENvbmZpZyIsImNhdGVnb3J5IiwibWV0YWRhdGExIiwidGlja2VyTWV0YWRhdGEiLCJkaXNjb3ZlcnlQYW5lbENhdGVnb3JpZXMiLCJmaW5kIiwiY2F0IiwiZ3JvdXBzIiwiZmlsdGVyIiwiaXNNZXRhZGF0YSIsIm1ldGFkYXRhIiwibGFiZWwiLCJ1bmRlZmluZWQiLCJmaWx0ZXJUZXJtIiwib25EZWxldGUiLCJ0aGVtZSIsInVzZVRoZW1lIiwiZGF0YSIsInVzZVBhbmVsQ29uZmlnIiwidGlja2VyIiwiaXNNb2JpbGUiLCJ1c2VEZXZpY2VJbmZvIiwiVGFibGVSb3ciLCJob3ZlciIsIlRhYmxlQ2VsbCIsInN4IiwicHkiLCJtYXhXaWR0aCIsIkVsbGlwc2lzVG9vbHRpcCIsInRvb2x0aXBUZXh0IiwibmFtZSIsInR5cG9ncmFwaHlQcm9wcyIsInZhcmlhbnQiLCJmb250V2VpZ2h0IiwidG9vbHRpcFByb3BzIiwiZGlzYWJsZUludGVyYWN0aXZlIiwiSGlnaGxpZ2h0ZXIiLCJhdXRvRXNjYXBlIiwiaGlnaGxpZ2h0U3R5bGUiLCJjb2xvciIsInBhbGV0dGUiLCJwcmltYXJ5IiwibGlnaHQiLCJoaWdobGlnaHRUYWciLCJzZWFyY2hXb3JkcyIsInRleHRUb0hpZ2hsaWdodCIsIlR5cG9ncmFwaHkiLCJtbCIsInRleHRPdmVyZmxvdyIsIm92ZXJmbG93Iiwid2hpdGVTcGFjZSIsImdldFdhdGNobGlzdEl0ZW1EZXNjcmlwdGlvbiIsIndpZHRoIiwiSWNvbkJ1dHRvbiIsIm9uQ2xpY2siLCJrZXkiLCJDbG9zZSJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkF1RlNBOzs7ZUFBQUE7Ozs7OERBdkZTOzRFQUNNO3VCQUVvQjtzQ0FLckM7cUNBQ3lCO3VCQUNGO3NCQUN3Qzt1QkFDaEQ7Ozs7OztBQUV0QixNQUFNQyxZQUFZLENBQUNDLE1BQWVDO1FBVVRBLCtEQUFBQTtJQVR2QixJQUFJRCxLQUFLRSxRQUFRLEtBQUssYUFBYTtRQUNqQztJQUNGO0lBRUEsSUFBSSxDQUFDRCxhQUFhO1FBQ2hCLHdDQUF3QztRQUN4QyxPQUFPRCxLQUFLRyxTQUFTO0lBQ3ZCO0lBRUEsTUFBTUMsa0JBQWlCSCw2Q0FBQUEsWUFBWUksd0JBQXdCLENBQ3hEQyxJQUFJLENBQUNDLENBQUFBLE1BQU9BLElBQUlMLFFBQVEsS0FBSywwQkFEVEQsa0VBQUFBLGdFQUFBQSwyQ0FFbkJPLE1BQU0sQ0FBQ0MsTUFBTSxDQUFDQyxnQ0FBVSxFQUN6QkosSUFBSSxDQUFDSyxDQUFBQSxXQUFZQSxTQUFTQyxLQUFLLEtBQUssdUJBSGhCWCxvRkFBQUEsOERBRzJCVSxRQUFRO0lBRTFELE9BQU9QLGlCQUFpQkosSUFBSSxDQUFDSSxlQUFlLEdBQUdTO0FBQ2pEO0FBUUEsTUFBTWYsb0JBQW9CLENBQUMsRUFBRUUsSUFBSSxFQUFFYyxVQUFVLEVBQUVDLFFBQVEsRUFBUztJQUM5RCxNQUFNQyxRQUFRQyxJQUFBQSxjQUFRO0lBQ3RCLE1BQU0sRUFBRUMsSUFBSSxFQUFFLEdBQUdDLElBQUFBLG9DQUFjO0lBQy9CLE1BQU1DLFNBQVNyQixVQUFVQyxNQUFNa0I7SUFDL0IsTUFBTSxFQUFFRyxRQUFRLEVBQUUsR0FBR0MsSUFBQUEsb0JBQWE7SUFFbEMscUJBQ0Usc0JBQUNDLGNBQVE7UUFBQ0MsS0FBSzs7MEJBQ2Isc0JBQUNDLGVBQVM7Z0JBQUNDLElBQUk7b0JBQUVDLElBQUk7b0JBQUdDLFVBQVVQLFdBQVcsUUFBUTtnQkFBSTs7a0NBQ3ZELHFCQUFDUSxvQ0FBZTt3QkFDZEMsYUFBYTlCLEtBQUsrQixJQUFJO3dCQUN0QkMsaUJBQWlCOzRCQUFFQyxTQUFTOzRCQUFTQyxZQUFZO3dCQUFPO3dCQUN4REMsY0FBYzs0QkFBRUMsb0JBQW9CO3dCQUFLO2tDQUV6QyxjQUFBLHFCQUFDQyw0QkFBVzs0QkFDVkMsVUFBVTs0QkFDVkMsZ0JBQWdCO2dDQUFFQyxPQUFPeEIsTUFBTXlCLE9BQU8sQ0FBQ0MsT0FBTyxDQUFDQyxLQUFLOzRCQUFDOzRCQUNyREMsY0FBYTs0QkFDYkMsYUFBYTtnQ0FBQy9COzZCQUFXOzRCQUN6QmdDLGlCQUFpQjlDLEtBQUsrQixJQUFJOzs7b0JBRzdCWCx1QkFDQyxxQkFBQzJCLGdCQUFVO3dCQUFDUCxPQUFNO3dCQUFXUCxTQUFRO3dCQUFVZSxJQUFJO2tDQUNoRDVCO3lCQUVEO2tDQUNKLHFCQUFDMkIsZ0JBQVU7d0JBQ1RQLE9BQU07d0JBQ05QLFNBQVE7d0JBQ1JnQixjQUFhO3dCQUNiQyxVQUFTO3dCQUNUQyxZQUFXO2tDQUVWQyxJQUFBQSxrQ0FBMkIsRUFBQ3BEOzs7OzBCQUdqQyxxQkFBQ3lCLGVBQVM7Z0JBQUNDLElBQUk7b0JBQUUyQixPQUFPaEMsV0FBVyxRQUFRUjtnQkFBVTswQkFBSWIsS0FBS0UsUUFBUTs7WUFDckVhLHlCQUNDLHFCQUFDVSxlQUFTO2dCQUFDQyxJQUFJO29CQUFFMkIsT0FBT2hDLFdBQVcsUUFBUVI7Z0JBQVU7MEJBQ25ELGNBQUEscUJBQUN5QyxnQkFBVTtvQkFBQ0MsU0FBUyxJQUFNeEMsU0FBU2YsS0FBS3dELEdBQUc7OEJBQzFDLGNBQUEscUJBQUNDLFlBQUs7O2lCQUdSOzs7QUFHViJ9