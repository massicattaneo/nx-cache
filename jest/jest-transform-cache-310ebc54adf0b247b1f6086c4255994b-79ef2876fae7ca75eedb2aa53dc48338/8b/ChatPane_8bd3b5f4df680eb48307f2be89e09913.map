{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/apps/client-web/src/app/pages/Files/FilesV2/components/ChatPane/ChatPane.tsx"],"sourcesContent":["import { useCallback, useEffect, useRef } from \"react\"\nimport { useAtom } from \"jotai\"\nimport { useFlags } from \"launchdarkly-react-client-sdk\"\nimport { useNavigate, useParams } from \"react-router\"\nimport { useUser } from \"@clerk/clerk-react\"\nimport { SUMMARY_ERROR_MESSAGES } from \"@rp/common/settings\"\nimport { getUserInitials, randomIntFromInterval } from \"@rp/common/utils\"\nimport { chatCustomerIo } from \"@rp/react/common/customer-io\"\nimport { Chat, useChatDataContext } from \"@rp/react/web/chat\"\nimport { getlocalOverrideFlags } from \"@rp/react/web/common/hooks\"\nimport { useSnackbar } from \"@rp/react/web/common/providers\"\nimport { ChunkStoryCard } from \"@rp/react/web/common/results-story-card\"\nimport { Box } from \"@rp/react/web/mui/core\"\nimport { FILES_ROUTE } from \"@rp/react/web/router\"\nimport { chatFeedbackAtom } from \"../../../../../atoms/chat-feedback\"\nimport { useWebSocketEndpointAtom } from \"../../../../../atoms/web-socket-endpoint\"\nimport { SelectedFile } from \"../../../../../components/Hub/Files/files.types\"\nimport { useChatPane } from \"../../hooks/useChatPane\"\nimport { FilesDashPane } from \"../FilesDashPane\"\nimport { ChatPaneHeader } from \"./ChatPaneHeader\"\nimport { ChatPaneInput } from \"./ChatPaneInput\"\nimport { ChatPaneLoadingChat } from \"./ChatPaneLoadingChat\"\nimport { ChatPaneSuggestions } from \"./ChatPaneSuggestions\"\n\ntype ChatPaneProps = {\n  close: () => void\n  width: string | null\n  selectedFiles: Array<SelectedFile>\n}\n\n// keeps chat input filter from rendering\nconst emptyFieldIds: Array<string> = []\n\n// TODO: Implement this\nconst onAuditTrailScroll = () => {}\n\nfunction ChatPane({ width, close, selectedFiles }: ChatPaneProps) {\n  const { webFeEnableEngineAgents } = useFlags()\n  const navigate = useNavigate()\n  const enableUseMasterRouter = getlocalOverrideFlags(\n    \"webFeEnableEngineAgents\",\n    webFeEnableEngineAgents,\n  )\n\n  const { id: documentId = \"\" } = useParams()\n\n  const [feedback, setFeedback] = useAtom(chatFeedbackAtom)\n  const {\n    chat: { id: chatId, savedChat },\n    files: { setFileIds, fileIds },\n    helpers: { resetChatState },\n    mutations: { addPrompt, addResponse, regenerateLastResponse, editLastQuestion },\n    scope: { scope, setScope },\n    ui: { context, isAuditMode, timingsMap, currentInteraction, setCurrentInteraction },\n  } = useChatDataContext()\n  const { user } = useUser()\n  const userInitials = getUserInitials(user?.fullName) ?? \"\"\n\n  useEffect(() => {\n    if (!context) return\n\n    const fileIds = selectedFiles.map(file => file.id)\n    setScope(selectedFiles.length > 0 ? undefined : \"files\")\n    setFileIds(fileIds)\n    context.current = { fileIds }\n  }, [context, documentId, setFileIds, setScope, selectedFiles])\n\n  const { webSocketEndpoint } = useWebSocketEndpointAtom()\n  const scrollRef = useRef<HTMLDivElement>(null)\n  const { enqueueInfo } = useSnackbar()\n\n  const { shouldShowChat, shouldShowLoadingChat, shouldShowSuggestions, name } = useChatPane({\n    chatId,\n    currentInteraction,\n    selectedFiles,\n  })\n\n  const handleNewChat = useCallback(() => {\n    resetChatState()\n    navigate(FILES_ROUTE, { replace: true })\n  }, [navigate, resetChatState])\n\n  if (!width) return null\n\n  return (\n    <FilesDashPane width={width} minWidth=\"350px\">\n      <ChatPaneHeader close={close} name={name} handleNewChat={handleNewChat} />\n\n      <Box\n        ref={scrollRef}\n        sx={theme => ({\n          height: \"calc(100vh - 150px)\",\n          overscrollBehavior: \"contain\",\n          overflowY: \"scroll\",\n          overflowX: \"hidden\",\n          scrollbarGutter: \"stable\",\n          p: 2,\n          mb: \"16px\",\n          pb: 20,\n          ...theme.onHoverScrollbarStyles,\n          \"&:hover\": {\n            ...theme.scrollbarStyles,\n          },\n        })}\n      >\n        {shouldShowSuggestions && (\n          <ChatPaneSuggestions name={name} isSingleDocument={!!documentId} addPrompt={addPrompt} />\n        )}\n\n        {shouldShowLoadingChat && !!currentInteraction && (\n          <ChatPaneLoadingChat\n            currentInteraction={currentInteraction}\n            userInitials={userInitials}\n          />\n        )}\n\n        {shouldShowChat && !!chatId && (\n          <Chat\n            parentScrollContainer={scrollRef.current}\n            scrollContainer={scrollRef.current}\n            onAuditTrailScroll={onAuditTrailScroll}\n            variant=\"mobile\"\n            useMasterRouter={enableUseMasterRouter}\n            chat={savedChat}\n            filesIds={fileIds}\n            auditMode={isAuditMode}\n            onResponseComplete={addResponse}\n            userInitials={userInitials}\n            moreActions={\n              null\n              // TODO: Implement this, without coupling to WLs\n              // shouldShowAskForMore ? (\n              //   <WatchlistChatMoreActions\n              //     remainingEntities={remainingEntities}\n              //     onAskForMore={onAskForMore}\n              //     entityOffset={entityOffset}\n              //   />\n              // ) : null\n            }\n            onRegenerateResponse={regenerateLastResponse}\n            onEdit={editLastQuestion}\n            onChatFeedbackSuccess={({ feedbackSentiment, interactionTimestamp }) => {\n              setFeedback(prev => ({\n                ...prev,\n                [chatId]: {\n                  ...prev[chatId],\n                  [interactionTimestamp]: feedbackSentiment,\n                },\n              }))\n            }}\n            renderCard={({ story, interactionTimestamp, chatId }, index) => {\n              return (\n                <ChunkStoryCard\n                  onCardClick={() => {\n                    chatCustomerIo.chunkStoryCardClick({\n                      chatId,\n                      documentId: story.id,\n                      interactionTimestamp,\n                    })\n                  }}\n                  story={story}\n                  index={index}\n                  key={story.id}\n                />\n              )\n            }}\n            getTimings={id => timingsMap[id]}\n            scope={scope}\n            areMetricsEnabled={true}\n            currentInteraction={currentInteraction}\n            onError={(_, error) => {\n              if (error.type === \"ERROR\") {\n                setCurrentInteraction(prev => {\n                  return prev !== undefined ? { ...prev, error: true } : undefined\n                })\n                reportError(new Error(error?.message))\n                enqueueInfo(SUMMARY_ERROR_MESSAGES[randomIntFromInterval(0, 4)])\n              }\n            }}\n            chatFeedback={feedback[chatId] ?? {}}\n            addPrompt={prompt => {\n              addPrompt({\n                prompt,\n                entities: [],\n                // TODO: Implement these\n                // chatEntities,\n                // interactionType: undefined,\n              })\n            }}\n            webSocketUrl={webSocketEndpoint}\n          />\n        )}\n      </Box>\n\n      <Box\n        sx={{\n          position: \"absolute\",\n          bottom: 0,\n          left: 0,\n          right: \"5px\",\n          height: \"120px\",\n          bgcolor: \"elevation.dp01\",\n        }}\n      >\n        <ChatPaneInput\n          name={name}\n          addPrompt={addPrompt}\n          filesIds={emptyFieldIds}\n          hasChat={!!chatId}\n        />\n      </Box>\n    </FilesDashPane>\n  )\n}\n\nexport { ChatPane }\n"],"names":["ChatPane","emptyFieldIds","onAuditTrailScroll","width","close","selectedFiles","webFeEnableEngineAgents","useFlags","navigate","useNavigate","enableUseMasterRouter","getlocalOverrideFlags","id","documentId","useParams","feedback","setFeedback","useAtom","chatFeedbackAtom","chat","chatId","savedChat","files","setFileIds","fileIds","helpers","resetChatState","mutations","addPrompt","addResponse","regenerateLastResponse","editLastQuestion","scope","setScope","ui","context","isAuditMode","timingsMap","currentInteraction","setCurrentInteraction","useChatDataContext","user","useUser","getUserInitials","userInitials","fullName","useEffect","map","file","length","undefined","current","webSocketEndpoint","useWebSocketEndpointAtom","scrollRef","useRef","enqueueInfo","useSnackbar","shouldShowChat","shouldShowLoadingChat","shouldShowSuggestions","name","useChatPane","handleNewChat","useCallback","FILES_ROUTE","replace","FilesDashPane","minWidth","ChatPaneHeader","Box","ref","sx","theme","height","overscrollBehavior","overflowY","overflowX","scrollbarGutter","p","mb","pb","onHoverScrollbarStyles","scrollbarStyles","ChatPaneSuggestions","isSingleDocument","ChatPaneLoadingChat","Chat","parentScrollContainer","scrollContainer","variant","useMasterRouter","filesIds","auditMode","onResponseComplete","moreActions","onRegenerateResponse","onEdit","onChatFeedbackSuccess","feedbackSentiment","interactionTimestamp","prev","renderCard","story","index","ChunkStoryCard","onCardClick","chatCustomerIo","chunkStoryCardClick","getTimings","areMetricsEnabled","onError","_","error","type","reportError","Error","message","SUMMARY_ERROR_MESSAGES","randomIntFromInterval","chatFeedback","prompt","entities","webSocketUrl","position","bottom","left","right","bgcolor","ChatPaneInput","hasChat"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}