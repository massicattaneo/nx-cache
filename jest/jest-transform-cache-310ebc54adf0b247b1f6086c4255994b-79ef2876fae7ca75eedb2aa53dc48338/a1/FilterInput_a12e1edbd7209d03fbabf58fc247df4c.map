{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/discovery-sidebar/src/FilterInput/FilterInput.tsx"],"sourcesContent":["// Packages\nimport { CqsItem } from \"@rp/common/api-types\"\nimport { Watchlist } from \"@rp/common/api-types\"\nimport { RPTooltip } from \"@rp/react/web/common/base-components\"\nimport { WatchlistMenu } from \"@rp/react/web/common/composite-components\"\nimport { EllipsisTooltip } from \"@rp/react/web/common/composite-components\"\nimport { useModal } from \"@rp/react/web/common/providers\"\nimport { Box, IconButton, Typography } from \"@rp/react/web/mui/core\"\nimport { Help, NotInterested } from \"@rp/react/web/mui/icons\"\n// Styles\nimport { FilterInputLabelStyled, FilterInputStyled } from \"./FilterInput.styles\"\n// Components\nimport { QueryCheckbox } from \"./QueryCheckbox\"\n\ntype FilterInputTypes = {\n  filterItem: CqsItem\n  disableCheckbox?: boolean\n  disableWatchlist?: boolean\n  inWatchlist?: boolean\n  onChange?: (item: CqsItem) => void\n  onClick?: (item: CqsItem) => void\n  onExclude?: (item: CqsItem) => void\n  onAddToWatchlist?: (watchlist: Watchlist) => void\n}\nconst FilterInput = ({\n  filterItem,\n  disableCheckbox,\n  disableWatchlist = false,\n  onChange,\n  onClick = () => {},\n  onAddToWatchlist,\n  onExclude,\n}: FilterInputTypes) => {\n  const { key: id, name: title } = filterItem\n\n  const {\n    watchlistModal: { handleOpen },\n  } = useModal()\n  const handleClick = () => {\n    onClick(filterItem)\n  }\n\n  const handleChange = () => {\n    if (onChange) onChange(filterItem)\n  }\n\n  const showWatchlistButton =\n    (filterItem.queryType === \"entity\" || filterItem.queryType === \"rp_topic\") && !disableWatchlist\n\n  const checked = [\"direct\", \"indirect\"].includes(filterItem.queryRelationship ?? \"result\")\n\n  return (\n    <FilterInputStyled isEntity={!!filterItem.entityType} key={id}>\n      {checked ? (\n        <QueryCheckbox\n          queryRelationship={filterItem.queryRelationship}\n          name={filterItem.name}\n          onChange={handleChange}\n          placement=\"left\"\n          disableCheckbox={disableCheckbox}\n        />\n      ) : (\n        <Box width={32} flexShrink={0} />\n      )}\n\n      <FilterInputLabelStyled onClick={handleClick}>\n        <EllipsisTooltip tooltipText={title}>\n          <Typography display=\"inline\" variant=\"body1\">\n            {title}\n          </Typography>\n        </EllipsisTooltip>\n      </FilterInputLabelStyled>\n      <Box sx={{ display: \"flex\", alignItems: \"center\", \"& button\": { height: 28, width: 28 } }}>\n        {checked ? null : (\n          <QueryCheckbox\n            queryRelationship={filterItem.queryRelationship}\n            name={filterItem.name}\n            onChange={handleChange}\n            placement=\"top\"\n            disableCheckbox={disableCheckbox}\n          />\n        )}\n        {onExclude ? (\n          <RPTooltip title=\"Exclude from Search\" placement=\"top\">\n            <IconButton size=\"small\" onClick={() => onExclude(filterItem)}>\n              <NotInterested sx={{ height: 14 }} />\n            </IconButton>\n          </RPTooltip>\n        ) : null}\n        <RPTooltip title=\"Mentions\" placement=\"top\">\n          <IconButton size=\"small\" onClick={handleClick}>\n            <Help sx={{ height: 14 }} />\n          </IconButton>\n        </RPTooltip>\n        {showWatchlistButton ? (\n          <WatchlistMenu\n            filter={[filterItem]}\n            onAddToWatchlist={onAddToWatchlist}\n            onHandleOpenModal={handleOpen}\n          />\n        ) : null}\n      </Box>\n    </FilterInputStyled>\n  )\n}\nexport { FilterInput }\n"],"names":["FilterInput","filterItem","disableCheckbox","disableWatchlist","onChange","onClick","onAddToWatchlist","onExclude","key","id","name","title","watchlistModal","handleOpen","useModal","handleClick","handleChange","showWatchlistButton","queryType","checked","includes","queryRelationship","FilterInputStyled","isEntity","entityType","QueryCheckbox","placement","Box","width","flexShrink","FilterInputLabelStyled","EllipsisTooltip","tooltipText","Typography","display","variant","sx","alignItems","height","RPTooltip","IconButton","size","NotInterested","Help","WatchlistMenu","filter","onHandleOpenModal"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA,WAAW;;;;;+BAyGFA;;;eAAAA;;;;gCAtGiB;qCACI;2BAEL;sBACmB;uBACR;mCAEsB;+BAE5B;AAY9B,MAAMA,cAAc,CAAC,EACnBC,UAAU,EACVC,eAAe,EACfC,mBAAmB,KAAK,EACxBC,QAAQ,EACRC,UAAU,KAAO,CAAC,EAClBC,gBAAgB,EAChBC,SAAS,EACQ;IACjB,MAAM,EAAEC,KAAKC,EAAE,EAAEC,MAAMC,KAAK,EAAE,GAAGV;IAEjC,MAAM,EACJW,gBAAgB,EAAEC,UAAU,EAAE,EAC/B,GAAGC,IAAAA,mBAAQ;IACZ,MAAMC,cAAc;QAClBV,QAAQJ;IACV;IAEA,MAAMe,eAAe;QACnB,IAAIZ,UAAUA,SAASH;IACzB;IAEA,MAAMgB,sBACJ,AAAChB,CAAAA,WAAWiB,SAAS,KAAK,YAAYjB,WAAWiB,SAAS,KAAK,UAAS,KAAM,CAACf;QAEjCF;IAAhD,MAAMkB,UAAU;QAAC;QAAU;KAAW,CAACC,QAAQ,CAACnB,CAAAA,gCAAAA,WAAWoB,iBAAiB,cAA5BpB,2CAAAA,gCAAgC;IAEhF,qBACE,sBAACqB,oCAAiB;QAACC,UAAU,CAAC,CAACtB,WAAWuB,UAAU;;YACjDL,wBACC,qBAACM,4BAAa;gBACZJ,mBAAmBpB,WAAWoB,iBAAiB;gBAC/CX,MAAMT,WAAWS,IAAI;gBACrBN,UAAUY;gBACVU,WAAU;gBACVxB,iBAAiBA;+BAGnB,qBAACyB,SAAG;gBAACC,OAAO;gBAAIC,YAAY;;0BAG9B,qBAACC,yCAAsB;gBAACzB,SAASU;0BAC/B,cAAA,qBAACgB,oCAAe;oBAACC,aAAarB;8BAC5B,cAAA,qBAACsB,gBAAU;wBAACC,SAAQ;wBAASC,SAAQ;kCAClCxB;;;;0BAIP,sBAACgB,SAAG;gBAACS,IAAI;oBAAEF,SAAS;oBAAQG,YAAY;oBAAU,YAAY;wBAAEC,QAAQ;wBAAIV,OAAO;oBAAG;gBAAE;;oBACrFT,UAAU,qBACT,qBAACM,4BAAa;wBACZJ,mBAAmBpB,WAAWoB,iBAAiB;wBAC/CX,MAAMT,WAAWS,IAAI;wBACrBN,UAAUY;wBACVU,WAAU;wBACVxB,iBAAiBA;;oBAGpBK,0BACC,qBAACgC,yBAAS;wBAAC5B,OAAM;wBAAsBe,WAAU;kCAC/C,cAAA,qBAACc,gBAAU;4BAACC,MAAK;4BAAQpC,SAAS,IAAME,UAAUN;sCAChD,cAAA,qBAACyC,oBAAa;gCAACN,IAAI;oCAAEE,QAAQ;gCAAG;;;yBAGlC;kCACJ,qBAACC,yBAAS;wBAAC5B,OAAM;wBAAWe,WAAU;kCACpC,cAAA,qBAACc,gBAAU;4BAACC,MAAK;4BAAQpC,SAASU;sCAChC,cAAA,qBAAC4B,WAAI;gCAACP,IAAI;oCAAEE,QAAQ;gCAAG;;;;oBAG1BrB,oCACC,qBAAC2B,kCAAa;wBACZC,QAAQ;4BAAC5C;yBAAW;wBACpBK,kBAAkBA;wBAClBwC,mBAAmBjC;yBAEnB;;;;OAhDmDJ;AAoD/D"}