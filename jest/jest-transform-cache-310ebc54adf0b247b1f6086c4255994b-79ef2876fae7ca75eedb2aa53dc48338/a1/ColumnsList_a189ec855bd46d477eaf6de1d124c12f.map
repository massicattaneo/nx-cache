{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/watchlists/src/lib/WatchlistDataTabs/CustomDataView/components/ColumnsList.tsx"],"sourcesContent":["import React from \"react\"\nimport { Box, Checkbox, FormControlLabel, Typography } from \"@rp/react/web/mui/core\"\nimport { UICustomColumn } from \"../types\"\n\ntype ColumnsListProps = {\n  filteredColumns: Array<UICustomColumn>\n  searchQuery: string\n  allFilteredSelected: boolean\n  someFilteredSelected: boolean\n  isColumnSelected: (column: UICustomColumn) => boolean\n  handleSelectAll: (checked: boolean) => void\n  handleColumnToggle: (column: UICustomColumn, checked: boolean) => void\n}\n\nfunction ColumnsList({\n  filteredColumns,\n  searchQuery,\n  allFilteredSelected,\n  someFilteredSelected,\n  isColumnSelected,\n  handleSelectAll,\n  handleColumnToggle,\n}: ColumnsListProps) {\n  return (\n    <Box\n      sx={{\n        flex: 1,\n        p: 2,\n        pt: 0,\n        overflow: \"auto\",\n      }}\n    >\n      {filteredColumns.length > 0 && (\n        <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 0.5 }}>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={allFilteredSelected}\n                indeterminate={someFilteredSelected && !allFilteredSelected}\n                onChange={e => handleSelectAll(e.target.checked)}\n                // size=\"small\"\n                sx={{\n                  color: \"text.secondary\",\n                  \"&.Mui-checked\": {\n                    color: \"primary.main\",\n                  },\n                  \"&.MuiCheckbox-indeterminate\": {\n                    color: \"primary.main\",\n                  },\n                }}\n              />\n            }\n            label={<Typography sx={{ fontSize: 16, fontWeight: 400 }}>Select All</Typography>}\n            sx={{ m: 0 }}\n          />\n          {filteredColumns.map((column, index) => (\n            <FormControlLabel\n              key={`${column.endpoint}-${column.columnKey}-${index}`}\n              control={\n                <Checkbox\n                  checked={isColumnSelected(column)}\n                  onChange={e => handleColumnToggle(column, e.target.checked)}\n                  sx={{\n                    color: \"text.secondary\",\n                    \"&.Mui-checked\": {\n                      color: \"primary.main\",\n                    },\n                  }}\n                />\n              }\n              label={\n                <Typography sx={{ fontSize: 16, fontWeight: 400 }}>{column.displayName}</Typography>\n              }\n              sx={{\n                m: 0,\n                borderRadius: 1,\n                \"&:hover\": {\n                  backgroundColor: \"elevation.dp16\",\n                },\n              }}\n            />\n          ))}\n        </Box>\n      )}\n\n      {filteredColumns.length === 0 && (\n        <Box\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            height: \"50%\",\n          }}\n        >\n          <Typography color=\"text.secondary\" variant=\"body2\">\n            {searchQuery ? \"No columns found matching your search\" : \"No columns available\"}\n          </Typography>\n        </Box>\n      )}\n    </Box>\n  )\n}\n\nexport { ColumnsList }\n"],"names":["ColumnsList","filteredColumns","searchQuery","allFilteredSelected","someFilteredSelected","isColumnSelected","handleSelectAll","handleColumnToggle","Box","sx","flex","p","pt","overflow","length","display","flexDirection","gap","FormControlLabel","control","Checkbox","checked","indeterminate","onChange","e","target","color","label","Typography","fontSize","fontWeight","m","map","column","index","displayName","borderRadius","backgroundColor","endpoint","columnKey","alignItems","justifyContent","height","variant"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAuGSA;;;eAAAA;;;;8DAvGS;sBAC0C;;;;;;AAa5D,SAASA,YAAY,EACnBC,eAAe,EACfC,WAAW,EACXC,mBAAmB,EACnBC,oBAAoB,EACpBC,gBAAgB,EAChBC,eAAe,EACfC,kBAAkB,EACD;IACjB,qBACE,sBAACC,SAAG;QACFC,IAAI;YACFC,MAAM;YACNC,GAAG;YACHC,IAAI;YACJC,UAAU;QACZ;;YAECZ,gBAAgBa,MAAM,GAAG,mBACxB,sBAACN,SAAG;gBAACC,IAAI;oBAAEM,SAAS;oBAAQC,eAAe;oBAAUC,KAAK;gBAAI;;kCAC5D,qBAACC,sBAAgB;wBACfC,uBACE,qBAACC,cAAQ;4BACPC,SAASlB;4BACTmB,eAAelB,wBAAwB,CAACD;4BACxCoB,UAAUC,CAAAA,IAAKlB,gBAAgBkB,EAAEC,MAAM,CAACJ,OAAO;4BAC/C,eAAe;4BACfZ,IAAI;gCACFiB,OAAO;gCACP,iBAAiB;oCACfA,OAAO;gCACT;gCACA,+BAA+B;oCAC7BA,OAAO;gCACT;4BACF;;wBAGJC,qBAAO,qBAACC,gBAAU;4BAACnB,IAAI;gCAAEoB,UAAU;gCAAIC,YAAY;4BAAI;sCAAG;;wBAC1DrB,IAAI;4BAAEsB,GAAG;wBAAE;;oBAEZ9B,gBAAgB+B,GAAG,CAAC,CAACC,QAAQC,sBAC5B,qBAAChB,sBAAgB;4BAEfC,uBACE,qBAACC,cAAQ;gCACPC,SAAShB,iBAAiB4B;gCAC1BV,UAAUC,CAAAA,IAAKjB,mBAAmB0B,QAAQT,EAAEC,MAAM,CAACJ,OAAO;gCAC1DZ,IAAI;oCACFiB,OAAO;oCACP,iBAAiB;wCACfA,OAAO;oCACT;gCACF;;4BAGJC,qBACE,qBAACC,gBAAU;gCAACnB,IAAI;oCAAEoB,UAAU;oCAAIC,YAAY;gCAAI;0CAAIG,OAAOE,WAAW;;4BAExE1B,IAAI;gCACFsB,GAAG;gCACHK,cAAc;gCACd,WAAW;oCACTC,iBAAiB;gCACnB;4BACF;2BAtBK,CAAC,EAAEJ,OAAOK,QAAQ,CAAC,CAAC,EAAEL,OAAOM,SAAS,CAAC,CAAC,EAAEL,MAAM,CAAC;;;YA4B7DjC,gBAAgBa,MAAM,KAAK,mBAC1B,qBAACN,SAAG;gBACFC,IAAI;oBACFM,SAAS;oBACTyB,YAAY;oBACZC,gBAAgB;oBAChBC,QAAQ;gBACV;0BAEA,cAAA,qBAACd,gBAAU;oBAACF,OAAM;oBAAiBiB,SAAQ;8BACxCzC,cAAc,0CAA0C;;;;;AAMrE"}