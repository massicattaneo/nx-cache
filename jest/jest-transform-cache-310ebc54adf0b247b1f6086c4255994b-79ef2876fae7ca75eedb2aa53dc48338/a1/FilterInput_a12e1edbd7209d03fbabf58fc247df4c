3db5234f8de9ed75e23151288791db26
// Packages
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "FilterInput", {
    enumerable: true,
    get: function() {
        return FilterInput;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _basecomponents = require("@rp/react/web/common/base-components");
const _compositecomponents = require("@rp/react/web/common/composite-components");
const _providers = require("@rp/react/web/common/providers");
const _core = require("@rp/react/web/mui/core");
const _icons = require("@rp/react/web/mui/icons");
const _FilterInputstyles = require("./FilterInput.styles");
const _QueryCheckbox = require("./QueryCheckbox");
const FilterInput = ({ filterItem, disableCheckbox, disableWatchlist = false, onChange, onClick = ()=>{}, onAddToWatchlist, onExclude })=>{
    const { key: id, name: title } = filterItem;
    const { watchlistModal: { handleOpen } } = (0, _providers.useModal)();
    const handleClick = ()=>{
        onClick(filterItem);
    };
    const handleChange = ()=>{
        if (onChange) onChange(filterItem);
    };
    const showWatchlistButton = (filterItem.queryType === "entity" || filterItem.queryType === "rp_topic") && !disableWatchlist;
    var _filterItem_queryRelationship;
    const checked = [
        "direct",
        "indirect"
    ].includes((_filterItem_queryRelationship = filterItem.queryRelationship) !== null && _filterItem_queryRelationship !== void 0 ? _filterItem_queryRelationship : "result");
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_FilterInputstyles.FilterInputStyled, {
        isEntity: !!filterItem.entityType,
        children: [
            checked ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_QueryCheckbox.QueryCheckbox, {
                queryRelationship: filterItem.queryRelationship,
                name: filterItem.name,
                onChange: handleChange,
                placement: "left",
                disableCheckbox: disableCheckbox
            }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                width: 32,
                flexShrink: 0
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_FilterInputstyles.FilterInputLabelStyled, {
                onClick: handleClick,
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.EllipsisTooltip, {
                    tooltipText: title,
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                        display: "inline",
                        variant: "body1",
                        children: title
                    })
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                sx: {
                    display: "flex",
                    alignItems: "center",
                    "& button": {
                        height: 28,
                        width: 28
                    }
                },
                children: [
                    checked ? null : /*#__PURE__*/ (0, _jsxruntime.jsx)(_QueryCheckbox.QueryCheckbox, {
                        queryRelationship: filterItem.queryRelationship,
                        name: filterItem.name,
                        onChange: handleChange,
                        placement: "top",
                        disableCheckbox: disableCheckbox
                    }),
                    onExclude ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.RPTooltip, {
                        title: "Exclude from Search",
                        placement: "top",
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.IconButton, {
                            size: "small",
                            onClick: ()=>onExclude(filterItem),
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.NotInterested, {
                                sx: {
                                    height: 14
                                }
                            })
                        })
                    }) : null,
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.RPTooltip, {
                        title: "Mentions",
                        placement: "top",
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.IconButton, {
                            size: "small",
                            onClick: handleClick,
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.Help, {
                                sx: {
                                    height: 14
                                }
                            })
                        })
                    }),
                    showWatchlistButton ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.WatchlistMenu, {
                        filter: [
                            filterItem
                        ],
                        onAddToWatchlist: onAddToWatchlist,
                        onHandleOpenModal: handleOpen
                    }) : null
                ]
            })
        ]
    }, id);
};

//# sourceMappingURL=data:application/json;base64,