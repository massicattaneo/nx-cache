de4a4165927952496b09aad20fbf0795
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "ColumnsList", {
    enumerable: true,
    get: function() {
        return ColumnsList;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _core = require("@rp/react/web/mui/core");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function ColumnsList({ filteredColumns, searchQuery, allFilteredSelected, someFilteredSelected, isColumnSelected, handleSelectAll, handleColumnToggle }) {
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
        sx: {
            flex: 1,
            p: 2,
            pt: 0,
            overflow: "auto"
        },
        children: [
            filteredColumns.length > 0 && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                sx: {
                    display: "flex",
                    flexDirection: "column",
                    gap: 0.5
                },
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.FormControlLabel, {
                        control: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Checkbox, {
                            checked: allFilteredSelected,
                            indeterminate: someFilteredSelected && !allFilteredSelected,
                            onChange: (e)=>handleSelectAll(e.target.checked),
                            // size="small"
                            sx: {
                                color: "text.secondary",
                                "&.Mui-checked": {
                                    color: "primary.main"
                                },
                                "&.MuiCheckbox-indeterminate": {
                                    color: "primary.main"
                                }
                            }
                        }),
                        label: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                            sx: {
                                fontSize: 16,
                                fontWeight: 400
                            },
                            children: "Select All"
                        }),
                        sx: {
                            m: 0
                        }
                    }),
                    filteredColumns.map((column, index)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_core.FormControlLabel, {
                            control: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Checkbox, {
                                checked: isColumnSelected(column),
                                onChange: (e)=>handleColumnToggle(column, e.target.checked),
                                sx: {
                                    color: "text.secondary",
                                    "&.Mui-checked": {
                                        color: "primary.main"
                                    }
                                }
                            }),
                            label: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                                sx: {
                                    fontSize: 16,
                                    fontWeight: 400
                                },
                                children: column.displayName
                            }),
                            sx: {
                                m: 0,
                                borderRadius: 1,
                                "&:hover": {
                                    backgroundColor: "elevation.dp16"
                                }
                            }
                        }, `${column.endpoint}-${column.columnKey}-${index}`))
                ]
            }),
            filteredColumns.length === 0 && /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                sx: {
                    display: "flex",
                    alignItems: "center",
                    justifyContent: "center",
                    height: "50%"
                },
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                    color: "text.secondary",
                    variant: "body2",
                    children: searchQuery ? "No columns found matching your search" : "No columns available"
                })
            })
        ]
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL3dhdGNobGlzdHMvc3JjL2xpYi9XYXRjaGxpc3REYXRhVGFicy9DdXN0b21EYXRhVmlldy9jb21wb25lbnRzL0NvbHVtbnNMaXN0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCJcbmltcG9ydCB7IEJveCwgQ2hlY2tib3gsIEZvcm1Db250cm9sTGFiZWwsIFR5cG9ncmFwaHkgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9tdWkvY29yZVwiXG5pbXBvcnQgeyBVSUN1c3RvbUNvbHVtbiB9IGZyb20gXCIuLi90eXBlc1wiXG5cbnR5cGUgQ29sdW1uc0xpc3RQcm9wcyA9IHtcbiAgZmlsdGVyZWRDb2x1bW5zOiBBcnJheTxVSUN1c3RvbUNvbHVtbj5cbiAgc2VhcmNoUXVlcnk6IHN0cmluZ1xuICBhbGxGaWx0ZXJlZFNlbGVjdGVkOiBib29sZWFuXG4gIHNvbWVGaWx0ZXJlZFNlbGVjdGVkOiBib29sZWFuXG4gIGlzQ29sdW1uU2VsZWN0ZWQ6IChjb2x1bW46IFVJQ3VzdG9tQ29sdW1uKSA9PiBib29sZWFuXG4gIGhhbmRsZVNlbGVjdEFsbDogKGNoZWNrZWQ6IGJvb2xlYW4pID0+IHZvaWRcbiAgaGFuZGxlQ29sdW1uVG9nZ2xlOiAoY29sdW1uOiBVSUN1c3RvbUNvbHVtbiwgY2hlY2tlZDogYm9vbGVhbikgPT4gdm9pZFxufVxuXG5mdW5jdGlvbiBDb2x1bW5zTGlzdCh7XG4gIGZpbHRlcmVkQ29sdW1ucyxcbiAgc2VhcmNoUXVlcnksXG4gIGFsbEZpbHRlcmVkU2VsZWN0ZWQsXG4gIHNvbWVGaWx0ZXJlZFNlbGVjdGVkLFxuICBpc0NvbHVtblNlbGVjdGVkLFxuICBoYW5kbGVTZWxlY3RBbGwsXG4gIGhhbmRsZUNvbHVtblRvZ2dsZSxcbn06IENvbHVtbnNMaXN0UHJvcHMpIHtcbiAgcmV0dXJuIChcbiAgICA8Qm94XG4gICAgICBzeD17e1xuICAgICAgICBmbGV4OiAxLFxuICAgICAgICBwOiAyLFxuICAgICAgICBwdDogMCxcbiAgICAgICAgb3ZlcmZsb3c6IFwiYXV0b1wiLFxuICAgICAgfX1cbiAgICA+XG4gICAgICB7ZmlsdGVyZWRDb2x1bW5zLmxlbmd0aCA+IDAgJiYgKFxuICAgICAgICA8Qm94IHN4PXt7IGRpc3BsYXk6IFwiZmxleFwiLCBmbGV4RGlyZWN0aW9uOiBcImNvbHVtblwiLCBnYXA6IDAuNSB9fT5cbiAgICAgICAgICA8Rm9ybUNvbnRyb2xMYWJlbFxuICAgICAgICAgICAgY29udHJvbD17XG4gICAgICAgICAgICAgIDxDaGVja2JveFxuICAgICAgICAgICAgICAgIGNoZWNrZWQ9e2FsbEZpbHRlcmVkU2VsZWN0ZWR9XG4gICAgICAgICAgICAgICAgaW5kZXRlcm1pbmF0ZT17c29tZUZpbHRlcmVkU2VsZWN0ZWQgJiYgIWFsbEZpbHRlcmVkU2VsZWN0ZWR9XG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9e2UgPT4gaGFuZGxlU2VsZWN0QWxsKGUudGFyZ2V0LmNoZWNrZWQpfVxuICAgICAgICAgICAgICAgIC8vIHNpemU9XCJzbWFsbFwiXG4gICAgICAgICAgICAgICAgc3g9e3tcbiAgICAgICAgICAgICAgICAgIGNvbG9yOiBcInRleHQuc2Vjb25kYXJ5XCIsXG4gICAgICAgICAgICAgICAgICBcIiYuTXVpLWNoZWNrZWRcIjoge1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjogXCJwcmltYXJ5Lm1haW5cIixcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICBcIiYuTXVpQ2hlY2tib3gtaW5kZXRlcm1pbmF0ZVwiOiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiBcInByaW1hcnkubWFpblwiLFxuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbGFiZWw9ezxUeXBvZ3JhcGh5IHN4PXt7IGZvbnRTaXplOiAxNiwgZm9udFdlaWdodDogNDAwIH19PlNlbGVjdCBBbGw8L1R5cG9ncmFwaHk+fVxuICAgICAgICAgICAgc3g9e3sgbTogMCB9fVxuICAgICAgICAgIC8+XG4gICAgICAgICAge2ZpbHRlcmVkQ29sdW1ucy5tYXAoKGNvbHVtbiwgaW5kZXgpID0+IChcbiAgICAgICAgICAgIDxGb3JtQ29udHJvbExhYmVsXG4gICAgICAgICAgICAgIGtleT17YCR7Y29sdW1uLmVuZHBvaW50fS0ke2NvbHVtbi5jb2x1bW5LZXl9LSR7aW5kZXh9YH1cbiAgICAgICAgICAgICAgY29udHJvbD17XG4gICAgICAgICAgICAgICAgPENoZWNrYm94XG4gICAgICAgICAgICAgICAgICBjaGVja2VkPXtpc0NvbHVtblNlbGVjdGVkKGNvbHVtbil9XG4gICAgICAgICAgICAgICAgICBvbkNoYW5nZT17ZSA9PiBoYW5kbGVDb2x1bW5Ub2dnbGUoY29sdW1uLCBlLnRhcmdldC5jaGVja2VkKX1cbiAgICAgICAgICAgICAgICAgIHN4PXt7XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiBcInRleHQuc2Vjb25kYXJ5XCIsXG4gICAgICAgICAgICAgICAgICAgIFwiJi5NdWktY2hlY2tlZFwiOiB7XG4gICAgICAgICAgICAgICAgICAgICAgY29sb3I6IFwicHJpbWFyeS5tYWluXCIsXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgbGFiZWw9e1xuICAgICAgICAgICAgICAgIDxUeXBvZ3JhcGh5IHN4PXt7IGZvbnRTaXplOiAxNiwgZm9udFdlaWdodDogNDAwIH19Pntjb2x1bW4uZGlzcGxheU5hbWV9PC9UeXBvZ3JhcGh5PlxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIHN4PXt7XG4gICAgICAgICAgICAgICAgbTogMCxcbiAgICAgICAgICAgICAgICBib3JkZXJSYWRpdXM6IDEsXG4gICAgICAgICAgICAgICAgXCImOmhvdmVyXCI6IHtcbiAgICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogXCJlbGV2YXRpb24uZHAxNlwiLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICkpfVxuICAgICAgICA8L0JveD5cbiAgICAgICl9XG5cbiAgICAgIHtmaWx0ZXJlZENvbHVtbnMubGVuZ3RoID09PSAwICYmIChcbiAgICAgICAgPEJveFxuICAgICAgICAgIHN4PXt7XG4gICAgICAgICAgICBkaXNwbGF5OiBcImZsZXhcIixcbiAgICAgICAgICAgIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gICAgICAgICAgICBqdXN0aWZ5Q29udGVudDogXCJjZW50ZXJcIixcbiAgICAgICAgICAgIGhlaWdodDogXCI1MCVcIixcbiAgICAgICAgICB9fVxuICAgICAgICA+XG4gICAgICAgICAgPFR5cG9ncmFwaHkgY29sb3I9XCJ0ZXh0LnNlY29uZGFyeVwiIHZhcmlhbnQ9XCJib2R5MlwiPlxuICAgICAgICAgICAge3NlYXJjaFF1ZXJ5ID8gXCJObyBjb2x1bW5zIGZvdW5kIG1hdGNoaW5nIHlvdXIgc2VhcmNoXCIgOiBcIk5vIGNvbHVtbnMgYXZhaWxhYmxlXCJ9XG4gICAgICAgICAgPC9UeXBvZ3JhcGh5PlxuICAgICAgICA8L0JveD5cbiAgICAgICl9XG4gICAgPC9Cb3g+XG4gIClcbn1cblxuZXhwb3J0IHsgQ29sdW1uc0xpc3QgfVxuIl0sIm5hbWVzIjpbIkNvbHVtbnNMaXN0IiwiZmlsdGVyZWRDb2x1bW5zIiwic2VhcmNoUXVlcnkiLCJhbGxGaWx0ZXJlZFNlbGVjdGVkIiwic29tZUZpbHRlcmVkU2VsZWN0ZWQiLCJpc0NvbHVtblNlbGVjdGVkIiwiaGFuZGxlU2VsZWN0QWxsIiwiaGFuZGxlQ29sdW1uVG9nZ2xlIiwiQm94Iiwic3giLCJmbGV4IiwicCIsInB0Iiwib3ZlcmZsb3ciLCJsZW5ndGgiLCJkaXNwbGF5IiwiZmxleERpcmVjdGlvbiIsImdhcCIsIkZvcm1Db250cm9sTGFiZWwiLCJjb250cm9sIiwiQ2hlY2tib3giLCJjaGVja2VkIiwiaW5kZXRlcm1pbmF0ZSIsIm9uQ2hhbmdlIiwiZSIsInRhcmdldCIsImNvbG9yIiwibGFiZWwiLCJUeXBvZ3JhcGh5IiwiZm9udFNpemUiLCJmb250V2VpZ2h0IiwibSIsIm1hcCIsImNvbHVtbiIsImluZGV4IiwiZGlzcGxheU5hbWUiLCJib3JkZXJSYWRpdXMiLCJiYWNrZ3JvdW5kQ29sb3IiLCJlbmRwb2ludCIsImNvbHVtbktleSIsImFsaWduSXRlbXMiLCJqdXN0aWZ5Q29udGVudCIsImhlaWdodCIsInZhcmlhbnQiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBdUdTQTs7O2VBQUFBOzs7OzhEQXZHUztzQkFDMEM7Ozs7OztBQWE1RCxTQUFTQSxZQUFZLEVBQ25CQyxlQUFlLEVBQ2ZDLFdBQVcsRUFDWEMsbUJBQW1CLEVBQ25CQyxvQkFBb0IsRUFDcEJDLGdCQUFnQixFQUNoQkMsZUFBZSxFQUNmQyxrQkFBa0IsRUFDRDtJQUNqQixxQkFDRSxzQkFBQ0MsU0FBRztRQUNGQyxJQUFJO1lBQ0ZDLE1BQU07WUFDTkMsR0FBRztZQUNIQyxJQUFJO1lBQ0pDLFVBQVU7UUFDWjs7WUFFQ1osZ0JBQWdCYSxNQUFNLEdBQUcsbUJBQ3hCLHNCQUFDTixTQUFHO2dCQUFDQyxJQUFJO29CQUFFTSxTQUFTO29CQUFRQyxlQUFlO29CQUFVQyxLQUFLO2dCQUFJOztrQ0FDNUQscUJBQUNDLHNCQUFnQjt3QkFDZkMsdUJBQ0UscUJBQUNDLGNBQVE7NEJBQ1BDLFNBQVNsQjs0QkFDVG1CLGVBQWVsQix3QkFBd0IsQ0FBQ0Q7NEJBQ3hDb0IsVUFBVUMsQ0FBQUEsSUFBS2xCLGdCQUFnQmtCLEVBQUVDLE1BQU0sQ0FBQ0osT0FBTzs0QkFDL0MsZUFBZTs0QkFDZlosSUFBSTtnQ0FDRmlCLE9BQU87Z0NBQ1AsaUJBQWlCO29DQUNmQSxPQUFPO2dDQUNUO2dDQUNBLCtCQUErQjtvQ0FDN0JBLE9BQU87Z0NBQ1Q7NEJBQ0Y7O3dCQUdKQyxxQkFBTyxxQkFBQ0MsZ0JBQVU7NEJBQUNuQixJQUFJO2dDQUFFb0IsVUFBVTtnQ0FBSUMsWUFBWTs0QkFBSTtzQ0FBRzs7d0JBQzFEckIsSUFBSTs0QkFBRXNCLEdBQUc7d0JBQUU7O29CQUVaOUIsZ0JBQWdCK0IsR0FBRyxDQUFDLENBQUNDLFFBQVFDLHNCQUM1QixxQkFBQ2hCLHNCQUFnQjs0QkFFZkMsdUJBQ0UscUJBQUNDLGNBQVE7Z0NBQ1BDLFNBQVNoQixpQkFBaUI0QjtnQ0FDMUJWLFVBQVVDLENBQUFBLElBQUtqQixtQkFBbUIwQixRQUFRVCxFQUFFQyxNQUFNLENBQUNKLE9BQU87Z0NBQzFEWixJQUFJO29DQUNGaUIsT0FBTztvQ0FDUCxpQkFBaUI7d0NBQ2ZBLE9BQU87b0NBQ1Q7Z0NBQ0Y7OzRCQUdKQyxxQkFDRSxxQkFBQ0MsZ0JBQVU7Z0NBQUNuQixJQUFJO29DQUFFb0IsVUFBVTtvQ0FBSUMsWUFBWTtnQ0FBSTswQ0FBSUcsT0FBT0UsV0FBVzs7NEJBRXhFMUIsSUFBSTtnQ0FDRnNCLEdBQUc7Z0NBQ0hLLGNBQWM7Z0NBQ2QsV0FBVztvQ0FDVEMsaUJBQWlCO2dDQUNuQjs0QkFDRjsyQkF0QkssQ0FBQyxFQUFFSixPQUFPSyxRQUFRLENBQUMsQ0FBQyxFQUFFTCxPQUFPTSxTQUFTLENBQUMsQ0FBQyxFQUFFTCxNQUFNLENBQUM7OztZQTRCN0RqQyxnQkFBZ0JhLE1BQU0sS0FBSyxtQkFDMUIscUJBQUNOLFNBQUc7Z0JBQ0ZDLElBQUk7b0JBQ0ZNLFNBQVM7b0JBQ1R5QixZQUFZO29CQUNaQyxnQkFBZ0I7b0JBQ2hCQyxRQUFRO2dCQUNWOzBCQUVBLGNBQUEscUJBQUNkLGdCQUFVO29CQUFDRixPQUFNO29CQUFpQmlCLFNBQVE7OEJBQ3hDekMsY0FBYywwQ0FBMEM7Ozs7O0FBTXJFIn0=