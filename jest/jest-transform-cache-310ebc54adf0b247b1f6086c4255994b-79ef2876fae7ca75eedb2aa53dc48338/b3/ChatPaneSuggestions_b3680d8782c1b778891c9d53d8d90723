02a3c99b6fbf7169695dc156289bb2a7
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "ChatPaneSuggestions", {
    enumerable: true,
    get: function() {
        return ChatPaneSuggestions;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _core = require("@rp/react/web/mui/core");
const _getChatPaneSuggestions = require("../../../utils/getChatPaneSuggestions");
const _ChatPaneGreeting = require("../ChatPaneGreeting");
const _ChatPaneSuggestionsItem = require("./ChatPaneSuggestionsItem");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
function ChatPaneSuggestions({ name, isSingleDocument, addPrompt }) {
    const filesChatPaneSuggestions = (0, _react.useMemo)(()=>(0, _getChatPaneSuggestions.getFilesChatPaneSuggestions)({
            isSingleDocument
        }), [
        isSingleDocument
    ]);
    const handleClick = (suggestion)=>addPrompt({
            prompt: suggestion.prompt(),
            displayedMessage: suggestion.displayPrompt()
        });
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_ChatPaneGreeting.ChatPaneGreeting, {
                name: name,
                isSingleDocument: isSingleDocument
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                sx: {
                    backgroundColor: "elevation.dp06",
                    borderRadius: 2,
                    p: 2
                },
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                        variant: "body2",
                        color: "text.secondary",
                        sx: {
                            mb: 2
                        },
                        children: `Suggestion${filesChatPaneSuggestions.length === 1 ? "" : "s"}:`
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                        sx: {
                            display: "flex",
                            flexDirection: "row",
                            flexWrap: "wrap",
                            gap: 1.5
                        },
                        children: filesChatPaneSuggestions.map((suggestion)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_ChatPaneSuggestionsItem.ChatPaneSuggestionsItem, {
                                suggestion: suggestion,
                                onClick: handleClick
                            }, suggestion.id))
                    })
                ]
            })
        ]
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2FwcHMvY2xpZW50LXdlYi9zcmMvYXBwL3BhZ2VzL0ZpbGVzL0ZpbGVzVjIvY29tcG9uZW50cy9DaGF0UGFuZS9DaGF0UGFuZVN1Z2dlc3Rpb25zL0NoYXRQYW5lU3VnZ2VzdGlvbnMudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VNZW1vIH0gZnJvbSBcInJlYWN0XCJcbmltcG9ydCB7IEFkZFByb21wdFBhcmFtcyB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL2NoYXRcIlxuaW1wb3J0IHsgQm94LCBUeXBvZ3JhcGh5IH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvbXVpL2NvcmVcIlxuaW1wb3J0IHsgZ2V0RmlsZXNDaGF0UGFuZVN1Z2dlc3Rpb25zIH0gZnJvbSBcIi4uLy4uLy4uL3V0aWxzL2dldENoYXRQYW5lU3VnZ2VzdGlvbnNcIlxuaW1wb3J0IHsgQ2hhdFBhbmVHcmVldGluZyB9IGZyb20gXCIuLi9DaGF0UGFuZUdyZWV0aW5nXCJcbmltcG9ydCB7IENoYXRQYW5lU3VnZ2VzdGlvbnNJdGVtIH0gZnJvbSBcIi4vQ2hhdFBhbmVTdWdnZXN0aW9uc0l0ZW1cIlxuaW1wb3J0IHsgRmlsZXNDaGF0UGFuZVN1Z2dlc3Rpb24gfSBmcm9tIFwiLi9jaGF0UGFuZVN1Z2dlc3Rpb25zLnR5cGVzXCJcblxudHlwZSBDaGF0UGFuZVN1Z2dlc3Rpb25zUHJvcHMgPSB7XG4gIG5hbWU6IHN0cmluZ1xuICBpc1NpbmdsZURvY3VtZW50OiBib29sZWFuXG4gIGFkZFByb21wdDogKHBhcmFtczogQWRkUHJvbXB0UGFyYW1zKSA9PiBQcm9taXNlPHZvaWQ+XG59XG5cbmZ1bmN0aW9uIENoYXRQYW5lU3VnZ2VzdGlvbnMoeyBuYW1lLCBpc1NpbmdsZURvY3VtZW50LCBhZGRQcm9tcHQgfTogQ2hhdFBhbmVTdWdnZXN0aW9uc1Byb3BzKSB7XG4gIGNvbnN0IGZpbGVzQ2hhdFBhbmVTdWdnZXN0aW9ucyA9IHVzZU1lbW8oXG4gICAgKCkgPT4gZ2V0RmlsZXNDaGF0UGFuZVN1Z2dlc3Rpb25zKHsgaXNTaW5nbGVEb2N1bWVudCB9KSxcbiAgICBbaXNTaW5nbGVEb2N1bWVudF0sXG4gIClcblxuICBjb25zdCBoYW5kbGVDbGljayA9IChzdWdnZXN0aW9uOiBGaWxlc0NoYXRQYW5lU3VnZ2VzdGlvbikgPT5cbiAgICBhZGRQcm9tcHQoe1xuICAgICAgcHJvbXB0OiBzdWdnZXN0aW9uLnByb21wdCgpLFxuICAgICAgZGlzcGxheWVkTWVzc2FnZTogc3VnZ2VzdGlvbi5kaXNwbGF5UHJvbXB0KCksXG4gICAgfSlcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8Q2hhdFBhbmVHcmVldGluZyBuYW1lPXtuYW1lfSBpc1NpbmdsZURvY3VtZW50PXtpc1NpbmdsZURvY3VtZW50fSAvPlxuXG4gICAgICA8Qm94XG4gICAgICAgIHN4PXt7XG4gICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBcImVsZXZhdGlvbi5kcDA2XCIsXG4gICAgICAgICAgYm9yZGVyUmFkaXVzOiAyLFxuICAgICAgICAgIHA6IDIsXG4gICAgICAgIH19XG4gICAgICA+XG4gICAgICAgIDxUeXBvZ3JhcGh5IHZhcmlhbnQ9XCJib2R5MlwiIGNvbG9yPVwidGV4dC5zZWNvbmRhcnlcIiBzeD17eyBtYjogMiB9fT5cbiAgICAgICAgICB7YFN1Z2dlc3Rpb24ke2ZpbGVzQ2hhdFBhbmVTdWdnZXN0aW9ucy5sZW5ndGggPT09IDEgPyBcIlwiIDogXCJzXCJ9OmB9XG4gICAgICAgIDwvVHlwb2dyYXBoeT5cblxuICAgICAgICA8Qm94IHN4PXt7IGRpc3BsYXk6IFwiZmxleFwiLCBmbGV4RGlyZWN0aW9uOiBcInJvd1wiLCBmbGV4V3JhcDogXCJ3cmFwXCIsIGdhcDogMS41IH19PlxuICAgICAgICAgIHtmaWxlc0NoYXRQYW5lU3VnZ2VzdGlvbnMubWFwKHN1Z2dlc3Rpb24gPT4gKFxuICAgICAgICAgICAgPENoYXRQYW5lU3VnZ2VzdGlvbnNJdGVtXG4gICAgICAgICAgICAgIHN1Z2dlc3Rpb249e3N1Z2dlc3Rpb259XG4gICAgICAgICAgICAgIG9uQ2xpY2s9e2hhbmRsZUNsaWNrfVxuICAgICAgICAgICAgICBrZXk9e3N1Z2dlc3Rpb24uaWR9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICkpfVxuICAgICAgICA8L0JveD5cbiAgICAgIDwvQm94PlxuICAgIDwvPlxuICApXG59XG5cbmV4cG9ydCB7IENoYXRQYW5lU3VnZ2VzdGlvbnMgfVxuIl0sIm5hbWVzIjpbIkNoYXRQYW5lU3VnZ2VzdGlvbnMiLCJuYW1lIiwiaXNTaW5nbGVEb2N1bWVudCIsImFkZFByb21wdCIsImZpbGVzQ2hhdFBhbmVTdWdnZXN0aW9ucyIsInVzZU1lbW8iLCJnZXRGaWxlc0NoYXRQYW5lU3VnZ2VzdGlvbnMiLCJoYW5kbGVDbGljayIsInN1Z2dlc3Rpb24iLCJwcm9tcHQiLCJkaXNwbGF5ZWRNZXNzYWdlIiwiZGlzcGxheVByb21wdCIsIkNoYXRQYW5lR3JlZXRpbmciLCJCb3giLCJzeCIsImJhY2tncm91bmRDb2xvciIsImJvcmRlclJhZGl1cyIsInAiLCJUeXBvZ3JhcGh5IiwidmFyaWFudCIsImNvbG9yIiwibWIiLCJsZW5ndGgiLCJkaXNwbGF5IiwiZmxleERpcmVjdGlvbiIsImZsZXhXcmFwIiwiZ2FwIiwibWFwIiwiQ2hhdFBhbmVTdWdnZXN0aW9uc0l0ZW0iLCJvbkNsaWNrIiwiaWQiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBdURTQTs7O2VBQUFBOzs7OytEQXZEc0I7c0JBRUM7d0NBQ1k7a0NBQ1g7eUNBQ087Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQVN4QyxTQUFTQSxvQkFBb0IsRUFBRUMsSUFBSSxFQUFFQyxnQkFBZ0IsRUFBRUMsU0FBUyxFQUE0QjtJQUMxRixNQUFNQywyQkFBMkJDLElBQUFBLGNBQU8sRUFDdEMsSUFBTUMsSUFBQUEsbURBQTJCLEVBQUM7WUFBRUo7UUFBaUIsSUFDckQ7UUFBQ0E7S0FBaUI7SUFHcEIsTUFBTUssY0FBYyxDQUFDQyxhQUNuQkwsVUFBVTtZQUNSTSxRQUFRRCxXQUFXQyxNQUFNO1lBQ3pCQyxrQkFBa0JGLFdBQVdHLGFBQWE7UUFDNUM7SUFFRixxQkFDRTs7MEJBQ0UscUJBQUNDLGtDQUFnQjtnQkFBQ1gsTUFBTUE7Z0JBQU1DLGtCQUFrQkE7OzBCQUVoRCxzQkFBQ1csU0FBRztnQkFDRkMsSUFBSTtvQkFDRkMsaUJBQWlCO29CQUNqQkMsY0FBYztvQkFDZEMsR0FBRztnQkFDTDs7a0NBRUEscUJBQUNDLGdCQUFVO3dCQUFDQyxTQUFRO3dCQUFRQyxPQUFNO3dCQUFpQk4sSUFBSTs0QkFBRU8sSUFBSTt3QkFBRTtrQ0FDNUQsQ0FBQyxVQUFVLEVBQUVqQix5QkFBeUJrQixNQUFNLEtBQUssSUFBSSxLQUFLLElBQUksQ0FBQyxDQUFDOztrQ0FHbkUscUJBQUNULFNBQUc7d0JBQUNDLElBQUk7NEJBQUVTLFNBQVM7NEJBQVFDLGVBQWU7NEJBQU9DLFVBQVU7NEJBQVFDLEtBQUs7d0JBQUk7a0NBQzFFdEIseUJBQXlCdUIsR0FBRyxDQUFDbkIsQ0FBQUEsMkJBQzVCLHFCQUFDb0IsZ0RBQXVCO2dDQUN0QnBCLFlBQVlBO2dDQUNacUIsU0FBU3RCOytCQUNKQyxXQUFXc0IsRUFBRTs7Ozs7O0FBT2hDIn0=