93b2a0247059b1a0a5e1ec87ccdf7fbd
// Packages
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "Datepicker", {
    enumerable: true,
    get: function() {
        return Datepicker;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _reactdatepicker = /*#__PURE__*/ _interop_require_wildcard(require("react-datepicker"));
const _core = require("@rp/react/web/mui/core");
const _Datepickerstyle = require("./Datepicker.style");
const _TriangleArrow = require("./TriangleArrow");
const _formatDateRange = require("./utils/formatDateRange");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const Datepicker = ({ onSubmit, options, date, defaultOption, open = false, onClose, hideInput = false, withRangeList = true, monthsToShown = 2 })=>{
    const initialDate = date !== null && date !== void 0 ? date : options[defaultOption];
    const [startDate, setStartDate] = (0, _react.useState)(new Date(initialDate.start));
    const [endDate, setEndDate] = (0, _react.useState)(new Date(initialDate.end));
    const [isOpen, setIsOpen] = (0, _react.useState)(false);
    /* Input labels */ const optionIndex = Object.values(options).findIndex((option)=>option.start === initialDate.start && option.end === initialDate.end);
    const [selectedIndex, setSelectedIndex] = (0, _react.useState)(optionIndex);
    const [inputLabel, setInputLabel] = (0, _react.useState)(initialDate.label);
    const handleClose = (0, _react.useCallback)(()=>{
        setIsOpen(false);
        setStartDate(new Date(initialDate.start));
        setEndDate(new Date(initialDate.end));
        setInputLabel(initialDate.label);
        setSelectedIndex(optionIndex);
        onClose && onClose();
    }, [
        initialDate.start,
        initialDate.end,
        initialDate.label,
        optionIndex,
        onClose
    ]);
    const handleSubmit = ()=>{
        /* Setting input label */ if (startDate) {
            /* User select only start date -> set endingDate as startDate   */ if (!endDate) {
                setEndDate(startDate);
                handleApply(startDate, startDate, (0, _formatDateRange.formatDateLabel)(startDate, startDate));
            } else {
                handleApply(startDate, endDate, (0, _formatDateRange.formatDateLabel)(startDate, endDate));
            }
            setIsOpen(false);
        }
    };
    const handleApply = (start, end, label)=>{
        const { start: formattedStart, end: formattedEnd } = (0, _formatDateRange.formatDatesForQuery)({
            startDate: start,
            endDate: end
        });
        setInputLabel(label);
        onSubmit({
            type: "date",
            value: [
                formattedStart,
                formattedEnd
            ]
        });
    };
    const handleChange = (date)=>{
        if (Array.isArray(date)) {
            const [start, end] = date;
            setStartDate(start);
            setEndDate(end);
            setSelectedIndex(null);
        }
    };
    /* Calendar wrapper */ const Container = ({ className, children })=>{
        const handleSelect = ({ optionId, index })=>{
            const { start, end, label } = options[optionId];
            setStartDate(start);
            setEndDate(end);
            setSelectedIndex(index);
            setInputLabel(label);
            onSubmit({
                type: "date",
                value: optionId
            });
            setIsOpen(false);
        };
        // Close Datepicker on ESC key press
        (0, _react.useEffect)(()=>{
            const closeOnEsc = (e)=>{
                if (e.key === "Escape") {
                    handleClose();
                }
            };
            document.addEventListener("keydown", closeOnEsc);
            return ()=>document.removeEventListener("keydown", closeOnEsc);
        }, []);
        return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
            className: _Datepickerstyle.classes.container,
            children: [
                withRangeList && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.List, {
                            component: "nav",
                            "aria-label": "dates-threshold ",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                    className: _Datepickerstyle.classes.title,
                                    children: "Specific"
                                }),
                                Object.entries(options).map(([id, value], index)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_core.ListItemButton, {
                                        className: _Datepickerstyle.classes.listItem,
                                        selected: index === selectedIndex,
                                        onClick: ()=>handleSelect({
                                                optionId: id,
                                                index
                                            }),
                                        children: value.label
                                    }, id))
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Divider, {
                            sx: {
                                margin: "0 20px",
                                color: "white"
                            },
                            orientation: "vertical",
                            flexItem: true
                        })
                    ]
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: _Datepickerstyle.classes.right,
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                    className: _Datepickerstyle.classes.title,
                                    children: "Custom"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactdatepicker.CalendarContainer, {
                                    className: className,
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                        style: {
                                            position: "relative"
                                        },
                                        children: children
                                    })
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: _Datepickerstyle.classes.buttons,
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Button, {
                                    onClick: handleClose,
                                    children: "Cancel"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Button, {
                                    disabled: Boolean(!startDate),
                                    onClick: handleSubmit,
                                    children: "Apply"
                                })
                            ]
                        })
                    ]
                })
            ]
        });
    };
    const ReactDatePickerInput = /*#__PURE__*/ _react.default.forwardRef((_param, ref)=>{
        var { onClick } = _param, props = _object_without_properties(_param, [
            "onClick"
        ]);
        const handleInput = isOpen ? handleClose : onClick;
        if (hideInput) return null;
        return /*#__PURE__*/ (0, _jsxruntime.jsxs)("button", _object_spread_props(_object_spread({
            type: "button",
            ref: ref
        }, props), {
            onClick: handleInput,
            children: [
                inputLabel,
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_TriangleArrow.TriangleArrow, {
                    isOpen: isOpen
                })
            ]
        }));
    });
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_Datepickerstyle.DatePickerStyled, {
        className: _Datepickerstyle.classes.input,
        children: [
            !hideInput && /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                variant: "body2",
                children: "Date:"
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactdatepicker.default, {
                open: open ? open : isOpen,
                onInputClick: ()=>setIsOpen(true),
                onClickOutside: handleClose,
                className: _Datepickerstyle.classes.datepicker,
                focusSelectedMonth: true,
                selected: startDate,
                startDate: startDate,
                endDate: endDate,
                onChange: handleChange,
                monthsShown: monthsToShown,
                dateFormat: "MMMM dd, yyyy",
                shouldCloseOnSelect: false,
                calendarStartDay: 1,
                calendarContainer: Container,
                customInput: /*#__PURE__*/ (0, _jsxruntime.jsx)(ReactDatePickerInput, {}),
                maxDate: new Date(),
                disabledKeyboardNavigation: true,
                selectsRange: true,
                popperPlacement: "bottom",
                openToDate: (0, _formatDateRange.openToDate)(endDate)
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_Datepickerstyle.DatePickerOverlay, {
                isOpen: isOpen
            })
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,