{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/composite-components/src/Datepicker/Datepicker.tsx"],"sourcesContent":["// Packages\nimport React, { useCallback, useEffect, useState } from \"react\"\nimport DatePicker, { CalendarContainer } from \"react-datepicker\"\nimport { RpqlDateFilter } from \"@rp/common/api-types\"\n// Components\nimport { Button, Divider, List, ListItemButton, Typography } from \"@rp/react/web/mui/core\"\n// Styles\nimport { DatePickerOverlay, DatePickerStyled, classes } from \"./Datepicker.style\"\nimport { TriangleArrow } from \"./TriangleArrow\"\n// Util\nimport {\n  DatePickerOptions,\n  InitialDates,\n  formatDateLabel,\n  formatDatesForQuery,\n  openToDate,\n} from \"./utils/formatDateRange\"\n\nconst Datepicker = <T extends DatePickerOptions>({\n  onSubmit,\n  options,\n  date,\n  defaultOption,\n  open = false,\n  onClose,\n  hideInput = false,\n  withRangeList = true,\n  monthsToShown = 2,\n}: {\n  onSubmit: (date: RpqlDateFilter) => void\n  options: T\n  defaultOption: keyof T\n  date: InitialDates | null\n  open?: boolean\n  onClose?: () => void\n  hideInput?: boolean\n  withRangeList?: boolean\n  monthsToShown?: number\n}) => {\n  const initialDate = date ?? options[defaultOption]\n\n  const [startDate, setStartDate] = useState<Date | null>(new Date(initialDate.start))\n  const [endDate, setEndDate] = useState<Date | null>(new Date(initialDate.end))\n  const [isOpen, setIsOpen] = useState(false)\n\n  /* Input labels */\n  const optionIndex = Object.values(options).findIndex(\n    option => option.start === initialDate.start && option.end === initialDate.end,\n  )\n\n  const [selectedIndex, setSelectedIndex] = useState<number | null>(optionIndex)\n  const [inputLabel, setInputLabel] = useState<string>(initialDate.label)\n\n  const handleClose = useCallback(() => {\n    setIsOpen(false)\n    setStartDate(new Date(initialDate.start))\n    setEndDate(new Date(initialDate.end))\n    setInputLabel(initialDate.label)\n    setSelectedIndex(optionIndex)\n    onClose && onClose()\n  }, [initialDate.start, initialDate.end, initialDate.label, optionIndex, onClose])\n\n  const handleSubmit = () => {\n    /* Setting input label */\n    if (startDate) {\n      /* User select only start date -> set endingDate as startDate   */\n      if (!endDate) {\n        setEndDate(startDate)\n        handleApply(startDate, startDate, formatDateLabel(startDate, startDate))\n      } else {\n        handleApply(startDate, endDate, formatDateLabel(startDate, endDate))\n      }\n      setIsOpen(false)\n    }\n  }\n\n  const handleApply = (start: Date, end: Date, label: string) => {\n    const { start: formattedStart, end: formattedEnd } = formatDatesForQuery({\n      startDate: start,\n      endDate: end,\n    })\n\n    setInputLabel(label)\n    onSubmit({ type: \"date\", value: [formattedStart, formattedEnd] })\n  }\n  const handleChange = (date: Date | [Date | null, Date | null] | null) => {\n    if (Array.isArray(date)) {\n      const [start, end] = date\n      setStartDate(start)\n      setEndDate(end)\n      setSelectedIndex(null)\n    }\n  }\n\n  /* Calendar wrapper */\n  const Container = ({\n    className,\n    children,\n  }: {\n    className?: string\n    children?: React.ReactNode\n  }) => {\n    const handleSelect = ({ optionId, index }: { optionId: string; index: number }) => {\n      const { start, end, label } = options[optionId]\n      setStartDate(start)\n      setEndDate(end)\n      setSelectedIndex(index)\n      setInputLabel(label)\n      onSubmit({ type: \"date\", value: optionId })\n      setIsOpen(false)\n    }\n\n    // Close Datepicker on ESC key press\n    useEffect(() => {\n      const closeOnEsc = (e: KeyboardEvent) => {\n        if (e.key === \"Escape\") {\n          handleClose()\n        }\n      }\n\n      document.addEventListener(\"keydown\", closeOnEsc)\n\n      return () => document.removeEventListener(\"keydown\", closeOnEsc)\n    }, [])\n\n    return (\n      <div className={classes.container}>\n        {withRangeList && (\n          <>\n            <List component=\"nav\" aria-label=\"dates-threshold \">\n              <div className={classes.title}>Specific</div>\n              {Object.entries(options).map(([id, value], index) => (\n                <ListItemButton\n                  className={classes.listItem}\n                  key={id}\n                  selected={index === selectedIndex}\n                  onClick={() => handleSelect({ optionId: id, index })}\n                >\n                  {value.label}\n                </ListItemButton>\n              ))}\n            </List>\n            <Divider sx={{ margin: \"0 20px\", color: \"white\" }} orientation=\"vertical\" flexItem />\n          </>\n        )}\n\n        <div className={classes.right}>\n          <div>\n            <div className={classes.title}>Custom</div>\n            <CalendarContainer className={className}>\n              <div style={{ position: \"relative\" }}>{children}</div>\n            </CalendarContainer>\n          </div>\n          <div className={classes.buttons}>\n            <Button onClick={handleClose}>Cancel</Button>\n            <Button disabled={Boolean(!startDate)} onClick={handleSubmit}>\n              Apply\n            </Button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  const ReactDatePickerInput = React.forwardRef<\n    HTMLButtonElement,\n    React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n  >(({ onClick, ...props }, ref) => {\n    const handleInput = isOpen ? handleClose : onClick\n    if (hideInput) return null\n    return (\n      <button type=\"button\" ref={ref} {...props} onClick={handleInput}>\n        {inputLabel}\n        <TriangleArrow isOpen={isOpen} />\n      </button>\n    )\n  })\n\n  return (\n    <DatePickerStyled className={classes.input}>\n      {!hideInput && <Typography variant=\"body2\">Date:</Typography>}\n      <DatePicker\n        open={open ? open : isOpen}\n        onInputClick={() => setIsOpen(true)}\n        onClickOutside={handleClose}\n        className={classes.datepicker}\n        focusSelectedMonth\n        selected={startDate}\n        startDate={startDate}\n        endDate={endDate}\n        onChange={handleChange}\n        monthsShown={monthsToShown}\n        dateFormat=\"MMMM dd, yyyy\"\n        shouldCloseOnSelect={false}\n        calendarStartDay={1}\n        calendarContainer={Container}\n        customInput={<ReactDatePickerInput />}\n        maxDate={new Date()}\n        disabledKeyboardNavigation\n        selectsRange\n        popperPlacement=\"bottom\"\n        openToDate={openToDate(endDate)}\n      />\n      <DatePickerOverlay isOpen={isOpen} />\n    </DatePickerStyled>\n  )\n}\n\nexport { Datepicker }\n"],"names":["Datepicker","onSubmit","options","date","defaultOption","open","onClose","hideInput","withRangeList","monthsToShown","initialDate","startDate","setStartDate","useState","Date","start","endDate","setEndDate","end","isOpen","setIsOpen","optionIndex","Object","values","findIndex","option","selectedIndex","setSelectedIndex","inputLabel","setInputLabel","label","handleClose","useCallback","handleSubmit","handleApply","formatDateLabel","formattedStart","formattedEnd","formatDatesForQuery","type","value","handleChange","Array","isArray","Container","className","children","handleSelect","optionId","index","useEffect","closeOnEsc","e","key","document","addEventListener","removeEventListener","div","classes","container","List","component","aria-label","title","entries","map","id","ListItemButton","listItem","selected","onClick","Divider","sx","margin","color","orientation","flexItem","right","CalendarContainer","style","position","buttons","Button","disabled","Boolean","ReactDatePickerInput","React","forwardRef","ref","props","handleInput","button","TriangleArrow","DatePickerStyled","input","Typography","variant","DatePicker","onInputClick","onClickOutside","datepicker","focusSelectedMonth","onChange","monthsShown","dateFormat","shouldCloseOnSelect","calendarStartDay","calendarContainer","customInput","maxDate","disabledKeyboardNavigation","selectsRange","popperPlacement","openToDate","DatePickerOverlay"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}