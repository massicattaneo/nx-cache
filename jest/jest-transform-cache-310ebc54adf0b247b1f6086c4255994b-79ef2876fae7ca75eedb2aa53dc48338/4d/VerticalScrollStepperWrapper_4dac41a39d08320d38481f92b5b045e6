45b9cc30b008d3a23c364f7de7ff9977
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "VerticalScrollStepperWrapper", {
    enumerable: true,
    get: function() {
        return VerticalScrollStepperWrapper;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _hooks = require("@rp/react/web/common/hooks");
const _core = require("@rp/react/web/mui/core");
const _NavBars = require("../NavBars");
const _VerticalScrollStepperBar = require("./VerticalScrollStepperBar");
const _VerticalScrollStepperFooter = require("./VerticalScrollStepperFooter");
const _verticalScrollStepperConstants = require("./verticalScrollStepperConstants");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const VerticalScrollStepperWrapper = ({ title, steps, children, nextDisabled, handleComplete, completeButtonText, activeStep, onStepChange, offsetTop = 0, stepLabel, isNextLoading = false, withKeyboardShortcuts = false })=>{
    const { isMobile } = (0, _hooks.useDeviceInfo)();
    const MARGIN_X = isMobile ? 0 : 55;
    const WIDTH = isMobile ? "100%" : 810;
    const isCompleteStep = !(activeStep < steps - 1);
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
        sx: {
            maxWidth: WIDTH,
            margin: "0 auto"
        },
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                className: _verticalScrollStepperConstants.VERTICAL_SCROLL_HEADER_CLASS_NAME,
                sx: {
                    py: 1,
                    position: "sticky",
                    top: -1 + offsetTop,
                    left: 0,
                    backgroundColor: "surface.background",
                    zIndex: 2,
                    margin: `0 ${MARGIN_X}px`
                },
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                        sx: {
                            display: "flex",
                            height: "27px",
                            alignItems: "center",
                            pt: 1
                        },
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                                role: "heading",
                                sx: {
                                    fontSize: 20,
                                    fontWeight: 700,
                                    flexGrow: 1
                                },
                                children: title
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                                sx: {
                                    fontSize: 12,
                                    color: "grey.300"
                                },
                                children: stepLabel !== null && stepLabel !== void 0 ? stepLabel : `Step ${Math.min(steps, activeStep + 1)}/${steps}`
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_VerticalScrollStepperBar.VerticalScrollStepperBar, {
                        steps: steps,
                        activeStep: activeStep
                    })
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                sx: {
                    display: "flex",
                    flexDirection: "column",
                    margin: `0 ${MARGIN_X}px`,
                    paddingBottom: isMobile ? `${_NavBars.BOTTOM_NAV_HEIGHT}px` : 0,
                    [`& .${_verticalScrollStepperConstants.VERTICAL_SCROLL_STEP_CLASS_NAME}`]: {
                        transition: "opacity 0.2s 0.2s"
                    },
                    [`& .${_verticalScrollStepperConstants.VERTICAL_SCROLL_STEP_CLASS_NAME}:last-of-type`]: {
                        opacity: 0
                    },
                    [`& .${_verticalScrollStepperConstants.VERTICAL_SCROLL_STEP_CLASS_NAME}.visible`]: {
                        opacity: 1
                    }
                },
                children: children
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_VerticalScrollStepperFooter.VerticalScrollStepperFooter, {
                activeStep: activeStep,
                width: WIDTH,
                onForward: isCompleteStep ? handleComplete : ()=>onStepChange === null || onStepChange === void 0 ? void 0 : onStepChange(activeStep + 1),
                onBack: onStepChange ? ()=>onStepChange(activeStep - 1) : undefined,
                disabled: nextDisabled,
                buttonLabel: isCompleteStep ? completeButtonText : "Next",
                isLoading: isNextLoading,
                withKeyboardShortcuts: withKeyboardShortcuts
            })
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9jb21wb3NpdGUtY29tcG9uZW50cy9zcmMvVmVydGljYWxTY3JvbGxTdGVwcGVyL1ZlcnRpY2FsU2Nyb2xsU3RlcHBlcldyYXBwZXIudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgeyB1c2VEZXZpY2VJbmZvIH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvY29tbW9uL2hvb2tzXCJcbmltcG9ydCB7IEJveCwgVHlwb2dyYXBoeSB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL211aS9jb3JlXCJcbmltcG9ydCB7IEJPVFRPTV9OQVZfSEVJR0hUIH0gZnJvbSBcIi4uL05hdkJhcnNcIlxuaW1wb3J0IHsgVmVydGljYWxTY3JvbGxTdGVwcGVyUHJvcHMgfSBmcm9tIFwiLi9WZXJ0aWNhbFNjcm9sbFN0ZXBwZXJcIlxuaW1wb3J0IHsgVmVydGljYWxTY3JvbGxTdGVwcGVyQmFyIH0gZnJvbSBcIi4vVmVydGljYWxTY3JvbGxTdGVwcGVyQmFyXCJcbmltcG9ydCB7IFZlcnRpY2FsU2Nyb2xsU3RlcHBlckZvb3RlciB9IGZyb20gXCIuL1ZlcnRpY2FsU2Nyb2xsU3RlcHBlckZvb3RlclwiXG5pbXBvcnQge1xuICBWRVJUSUNBTF9TQ1JPTExfSEVBREVSX0NMQVNTX05BTUUsXG4gIFZFUlRJQ0FMX1NDUk9MTF9TVEVQX0NMQVNTX05BTUUsXG59IGZyb20gXCIuL3ZlcnRpY2FsU2Nyb2xsU3RlcHBlckNvbnN0YW50c1wiXG5cbmNvbnN0IFZlcnRpY2FsU2Nyb2xsU3RlcHBlcldyYXBwZXIgPSAoe1xuICB0aXRsZSxcbiAgc3RlcHMsXG4gIGNoaWxkcmVuLFxuICBuZXh0RGlzYWJsZWQsXG4gIGhhbmRsZUNvbXBsZXRlLFxuICBjb21wbGV0ZUJ1dHRvblRleHQsXG4gIGFjdGl2ZVN0ZXAsXG4gIG9uU3RlcENoYW5nZSxcbiAgb2Zmc2V0VG9wID0gMCxcbiAgc3RlcExhYmVsLFxuICBpc05leHRMb2FkaW5nID0gZmFsc2UsXG4gIHdpdGhLZXlib2FyZFNob3J0Y3V0cyA9IGZhbHNlLFxufTogVmVydGljYWxTY3JvbGxTdGVwcGVyUHJvcHMpID0+IHtcbiAgY29uc3QgeyBpc01vYmlsZSB9ID0gdXNlRGV2aWNlSW5mbygpXG4gIGNvbnN0IE1BUkdJTl9YID0gaXNNb2JpbGUgPyAwIDogNTVcbiAgY29uc3QgV0lEVEggPSBpc01vYmlsZSA/IFwiMTAwJVwiIDogODEwXG4gIGNvbnN0IGlzQ29tcGxldGVTdGVwID0gIShhY3RpdmVTdGVwIDwgc3RlcHMgLSAxKVxuICByZXR1cm4gKFxuICAgIDxCb3ggc3g9e3sgbWF4V2lkdGg6IFdJRFRILCBtYXJnaW46IFwiMCBhdXRvXCIgfX0+XG4gICAgICA8Qm94XG4gICAgICAgIGNsYXNzTmFtZT17VkVSVElDQUxfU0NST0xMX0hFQURFUl9DTEFTU19OQU1FfVxuICAgICAgICBzeD17e1xuICAgICAgICAgIHB5OiAxLFxuICAgICAgICAgIHBvc2l0aW9uOiBcInN0aWNreVwiLFxuICAgICAgICAgIHRvcDogLTEgKyBvZmZzZXRUb3AsXG4gICAgICAgICAgbGVmdDogMCxcbiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwic3VyZmFjZS5iYWNrZ3JvdW5kXCIsXG4gICAgICAgICAgekluZGV4OiAyLFxuICAgICAgICAgIG1hcmdpbjogYDAgJHtNQVJHSU5fWH1weGAsXG4gICAgICAgIH19XG4gICAgICA+XG4gICAgICAgIDxCb3ggc3g9e3sgZGlzcGxheTogXCJmbGV4XCIsIGhlaWdodDogXCIyN3B4XCIsIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsIHB0OiAxIH19PlxuICAgICAgICAgIDxUeXBvZ3JhcGh5IHJvbGU9XCJoZWFkaW5nXCIgc3g9e3sgZm9udFNpemU6IDIwLCBmb250V2VpZ2h0OiA3MDAsIGZsZXhHcm93OiAxIH19PlxuICAgICAgICAgICAge3RpdGxlfVxuICAgICAgICAgIDwvVHlwb2dyYXBoeT5cbiAgICAgICAgICA8VHlwb2dyYXBoeSBzeD17eyBmb250U2l6ZTogMTIsIGNvbG9yOiBcImdyZXkuMzAwXCIgfX0+XG4gICAgICAgICAgICB7c3RlcExhYmVsID8/IGBTdGVwICR7TWF0aC5taW4oc3RlcHMsIGFjdGl2ZVN0ZXAgKyAxKX0vJHtzdGVwc31gfVxuICAgICAgICAgIDwvVHlwb2dyYXBoeT5cbiAgICAgICAgPC9Cb3g+XG4gICAgICAgIDxWZXJ0aWNhbFNjcm9sbFN0ZXBwZXJCYXIgc3RlcHM9e3N0ZXBzfSBhY3RpdmVTdGVwPXthY3RpdmVTdGVwfSAvPlxuICAgICAgPC9Cb3g+XG4gICAgICA8Qm94XG4gICAgICAgIHN4PXt7XG4gICAgICAgICAgZGlzcGxheTogXCJmbGV4XCIsXG4gICAgICAgICAgZmxleERpcmVjdGlvbjogXCJjb2x1bW5cIixcbiAgICAgICAgICBtYXJnaW46IGAwICR7TUFSR0lOX1h9cHhgLFxuICAgICAgICAgIHBhZGRpbmdCb3R0b206IGlzTW9iaWxlID8gYCR7Qk9UVE9NX05BVl9IRUlHSFR9cHhgIDogMCxcbiAgICAgICAgICBbYCYgLiR7VkVSVElDQUxfU0NST0xMX1NURVBfQ0xBU1NfTkFNRX1gXToge1xuICAgICAgICAgICAgdHJhbnNpdGlvbjogXCJvcGFjaXR5IDAuMnMgMC4yc1wiLFxuICAgICAgICAgIH0sXG4gICAgICAgICAgW2AmIC4ke1ZFUlRJQ0FMX1NDUk9MTF9TVEVQX0NMQVNTX05BTUV9Omxhc3Qtb2YtdHlwZWBdOiB7XG4gICAgICAgICAgICBvcGFjaXR5OiAwLFxuICAgICAgICAgIH0sXG4gICAgICAgICAgW2AmIC4ke1ZFUlRJQ0FMX1NDUk9MTF9TVEVQX0NMQVNTX05BTUV9LnZpc2libGVgXToge1xuICAgICAgICAgICAgb3BhY2l0eTogMSxcbiAgICAgICAgICB9LFxuICAgICAgICB9fVxuICAgICAgPlxuICAgICAgICB7Y2hpbGRyZW59XG4gICAgICA8L0JveD5cbiAgICAgIDxWZXJ0aWNhbFNjcm9sbFN0ZXBwZXJGb290ZXJcbiAgICAgICAgYWN0aXZlU3RlcD17YWN0aXZlU3RlcH1cbiAgICAgICAgd2lkdGg9e1dJRFRIfVxuICAgICAgICBvbkZvcndhcmQ9e2lzQ29tcGxldGVTdGVwID8gaGFuZGxlQ29tcGxldGUgOiAoKSA9PiBvblN0ZXBDaGFuZ2U/LihhY3RpdmVTdGVwICsgMSl9XG4gICAgICAgIG9uQmFjaz17b25TdGVwQ2hhbmdlID8gKCkgPT4gb25TdGVwQ2hhbmdlKGFjdGl2ZVN0ZXAgLSAxKSA6IHVuZGVmaW5lZH1cbiAgICAgICAgZGlzYWJsZWQ9e25leHREaXNhYmxlZH1cbiAgICAgICAgYnV0dG9uTGFiZWw9e2lzQ29tcGxldGVTdGVwID8gY29tcGxldGVCdXR0b25UZXh0IDogXCJOZXh0XCJ9XG4gICAgICAgIGlzTG9hZGluZz17aXNOZXh0TG9hZGluZ31cbiAgICAgICAgd2l0aEtleWJvYXJkU2hvcnRjdXRzPXt3aXRoS2V5Ym9hcmRTaG9ydGN1dHN9XG4gICAgICAvPlxuICAgIDwvQm94PlxuICApXG59XG5cbmV4cG9ydCB7IFZlcnRpY2FsU2Nyb2xsU3RlcHBlcldyYXBwZXIgfVxuIl0sIm5hbWVzIjpbIlZlcnRpY2FsU2Nyb2xsU3RlcHBlcldyYXBwZXIiLCJ0aXRsZSIsInN0ZXBzIiwiY2hpbGRyZW4iLCJuZXh0RGlzYWJsZWQiLCJoYW5kbGVDb21wbGV0ZSIsImNvbXBsZXRlQnV0dG9uVGV4dCIsImFjdGl2ZVN0ZXAiLCJvblN0ZXBDaGFuZ2UiLCJvZmZzZXRUb3AiLCJzdGVwTGFiZWwiLCJpc05leHRMb2FkaW5nIiwid2l0aEtleWJvYXJkU2hvcnRjdXRzIiwiaXNNb2JpbGUiLCJ1c2VEZXZpY2VJbmZvIiwiTUFSR0lOX1giLCJXSURUSCIsImlzQ29tcGxldGVTdGVwIiwiQm94Iiwic3giLCJtYXhXaWR0aCIsIm1hcmdpbiIsImNsYXNzTmFtZSIsIlZFUlRJQ0FMX1NDUk9MTF9IRUFERVJfQ0xBU1NfTkFNRSIsInB5IiwicG9zaXRpb24iLCJ0b3AiLCJsZWZ0IiwiYmFja2dyb3VuZENvbG9yIiwiekluZGV4IiwiZGlzcGxheSIsImhlaWdodCIsImFsaWduSXRlbXMiLCJwdCIsIlR5cG9ncmFwaHkiLCJyb2xlIiwiZm9udFNpemUiLCJmb250V2VpZ2h0IiwiZmxleEdyb3ciLCJjb2xvciIsIk1hdGgiLCJtaW4iLCJWZXJ0aWNhbFNjcm9sbFN0ZXBwZXJCYXIiLCJmbGV4RGlyZWN0aW9uIiwicGFkZGluZ0JvdHRvbSIsIkJPVFRPTV9OQVZfSEVJR0hUIiwiVkVSVElDQUxfU0NST0xMX1NURVBfQ0xBU1NfTkFNRSIsInRyYW5zaXRpb24iLCJvcGFjaXR5IiwiVmVydGljYWxTY3JvbGxTdGVwcGVyRm9vdGVyIiwid2lkdGgiLCJvbkZvcndhcmQiLCJvbkJhY2siLCJ1bmRlZmluZWQiLCJkaXNhYmxlZCIsImJ1dHRvbkxhYmVsIiwiaXNMb2FkaW5nIl0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkF1RlNBOzs7ZUFBQUE7Ozs7K0RBdkZjO3VCQUNPO3NCQUNFO3lCQUNFOzBDQUVPOzZDQUNHO2dEQUlyQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRVAsTUFBTUEsK0JBQStCLENBQUMsRUFDcENDLEtBQUssRUFDTEMsS0FBSyxFQUNMQyxRQUFRLEVBQ1JDLFlBQVksRUFDWkMsY0FBYyxFQUNkQyxrQkFBa0IsRUFDbEJDLFVBQVUsRUFDVkMsWUFBWSxFQUNaQyxZQUFZLENBQUMsRUFDYkMsU0FBUyxFQUNUQyxnQkFBZ0IsS0FBSyxFQUNyQkMsd0JBQXdCLEtBQUssRUFDRjtJQUMzQixNQUFNLEVBQUVDLFFBQVEsRUFBRSxHQUFHQyxJQUFBQSxvQkFBYTtJQUNsQyxNQUFNQyxXQUFXRixXQUFXLElBQUk7SUFDaEMsTUFBTUcsUUFBUUgsV0FBVyxTQUFTO0lBQ2xDLE1BQU1JLGlCQUFpQixDQUFFVixDQUFBQSxhQUFhTCxRQUFRLENBQUE7SUFDOUMscUJBQ0Usc0JBQUNnQixTQUFHO1FBQUNDLElBQUk7WUFBRUMsVUFBVUo7WUFBT0ssUUFBUTtRQUFTOzswQkFDM0Msc0JBQUNILFNBQUc7Z0JBQ0ZJLFdBQVdDLGlFQUFpQztnQkFDNUNKLElBQUk7b0JBQ0ZLLElBQUk7b0JBQ0pDLFVBQVU7b0JBQ1ZDLEtBQUssQ0FBQyxJQUFJakI7b0JBQ1ZrQixNQUFNO29CQUNOQyxpQkFBaUI7b0JBQ2pCQyxRQUFRO29CQUNSUixRQUFRLENBQUMsRUFBRSxFQUFFTixTQUFTLEVBQUUsQ0FBQztnQkFDM0I7O2tDQUVBLHNCQUFDRyxTQUFHO3dCQUFDQyxJQUFJOzRCQUFFVyxTQUFTOzRCQUFRQyxRQUFROzRCQUFRQyxZQUFZOzRCQUFVQyxJQUFJO3dCQUFFOzswQ0FDdEUscUJBQUNDLGdCQUFVO2dDQUFDQyxNQUFLO2dDQUFVaEIsSUFBSTtvQ0FBRWlCLFVBQVU7b0NBQUlDLFlBQVk7b0NBQUtDLFVBQVU7Z0NBQUU7MENBQ3pFckM7OzBDQUVILHFCQUFDaUMsZ0JBQVU7Z0NBQUNmLElBQUk7b0NBQUVpQixVQUFVO29DQUFJRyxPQUFPO2dDQUFXOzBDQUMvQzdCLHNCQUFBQSx1QkFBQUEsWUFBYSxDQUFDLEtBQUssRUFBRThCLEtBQUtDLEdBQUcsQ0FBQ3ZDLE9BQU9LLGFBQWEsR0FBRyxDQUFDLEVBQUVMLE1BQU0sQ0FBQzs7OztrQ0FHcEUscUJBQUN3QyxrREFBd0I7d0JBQUN4QyxPQUFPQTt3QkFBT0ssWUFBWUE7Ozs7MEJBRXRELHFCQUFDVyxTQUFHO2dCQUNGQyxJQUFJO29CQUNGVyxTQUFTO29CQUNUYSxlQUFlO29CQUNmdEIsUUFBUSxDQUFDLEVBQUUsRUFBRU4sU0FBUyxFQUFFLENBQUM7b0JBQ3pCNkIsZUFBZS9CLFdBQVcsQ0FBQyxFQUFFZ0MsMEJBQWlCLENBQUMsRUFBRSxDQUFDLEdBQUc7b0JBQ3JELENBQUMsQ0FBQyxHQUFHLEVBQUVDLCtEQUErQixDQUFDLENBQUMsQ0FBQyxFQUFFO3dCQUN6Q0MsWUFBWTtvQkFDZDtvQkFDQSxDQUFDLENBQUMsR0FBRyxFQUFFRCwrREFBK0IsQ0FBQyxhQUFhLENBQUMsQ0FBQyxFQUFFO3dCQUN0REUsU0FBUztvQkFDWDtvQkFDQSxDQUFDLENBQUMsR0FBRyxFQUFFRiwrREFBK0IsQ0FBQyxRQUFRLENBQUMsQ0FBQyxFQUFFO3dCQUNqREUsU0FBUztvQkFDWDtnQkFDRjswQkFFQzdDOzswQkFFSCxxQkFBQzhDLHdEQUEyQjtnQkFDMUIxQyxZQUFZQTtnQkFDWjJDLE9BQU9sQztnQkFDUG1DLFdBQVdsQyxpQkFBaUJaLGlCQUFpQixJQUFNRyx5QkFBQUEsbUNBQUFBLGFBQWVELGFBQWE7Z0JBQy9FNkMsUUFBUTVDLGVBQWUsSUFBTUEsYUFBYUQsYUFBYSxLQUFLOEM7Z0JBQzVEQyxVQUFVbEQ7Z0JBQ1ZtRCxhQUFhdEMsaUJBQWlCWCxxQkFBcUI7Z0JBQ25Ea0QsV0FBVzdDO2dCQUNYQyx1QkFBdUJBOzs7O0FBSS9CIn0=