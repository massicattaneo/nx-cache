{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/apps/client-web/src/app/pages/Files/FilesV2/utils/getChatCreatedURLParams.test.ts"],"sourcesContent":["import { getChatCreatedURLParams } from \"./getChatCreatedURLParams\"\n\ndescribe(\"getChatCreatedURLParams\", () => {\n  describe(\"with new chat id\", () => {\n    describe(\"with no hash params\", () => {\n      const chatId = \"123\"\n      const hashParams = {}\n      const locationSearch = \"chatId=123\"\n\n      it(\"should return correct string\", () => {\n        expect(getChatCreatedURLParams({ chatId, hashParams, locationSearch })).toBe(\"?chatId=123\")\n      })\n    })\n\n    describe(\"with 1 hash param\", () => {\n      const chatId = \"123\"\n      const hashParams = { private: \"true\" }\n      const locationSearch = \"chatId=123\"\n\n      it(\"should return correct string\", () => {\n        expect(getChatCreatedURLParams({ chatId, hashParams, locationSearch })).toBe(\n          \"?chatId=123#?private=true\",\n        )\n      })\n    })\n\n    describe(\"with multiple hash params\", () => {\n      const chatId = \"123\"\n      const hashParams = { private: \"true\", foo: \"123\", bar: \"baz\" }\n      const locationSearch = \"chatId=123\"\n\n      it(\"should return correct string\", () => {\n        expect(getChatCreatedURLParams({ chatId, hashParams, locationSearch })).toBe(\n          \"?chatId=123#?private=true&foo=123&bar=baz\",\n        )\n      })\n    })\n  })\n\n  describe(\"with empty chat id overwriting existing chat id\", () => {\n    const chatId = undefined\n    const hashParams = {}\n    const locationSearch = \"chatId=123\"\n\n    it(\"should return correct string\", () => {\n      expect(getChatCreatedURLParams({ chatId, hashParams, locationSearch })).toBe(\"?\")\n    })\n  })\n})\n"],"names":["describe","chatId","hashParams","locationSearch","it","expect","getChatCreatedURLParams","toBe","private","foo","bar","undefined"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;yCAAwC;AAExCA,SAAS,2BAA2B;IAClCA,SAAS,oBAAoB;QAC3BA,SAAS,uBAAuB;YAC9B,MAAMC,SAAS;YACf,MAAMC,aAAa,CAAC;YACpB,MAAMC,iBAAiB;YAEvBC,GAAG,gCAAgC;gBACjCC,OAAOC,IAAAA,gDAAuB,EAAC;oBAAEL;oBAAQC;oBAAYC;gBAAe,IAAII,IAAI,CAAC;YAC/E;QACF;QAEAP,SAAS,qBAAqB;YAC5B,MAAMC,SAAS;YACf,MAAMC,aAAa;gBAAEM,SAAS;YAAO;YACrC,MAAML,iBAAiB;YAEvBC,GAAG,gCAAgC;gBACjCC,OAAOC,IAAAA,gDAAuB,EAAC;oBAAEL;oBAAQC;oBAAYC;gBAAe,IAAII,IAAI,CAC1E;YAEJ;QACF;QAEAP,SAAS,6BAA6B;YACpC,MAAMC,SAAS;YACf,MAAMC,aAAa;gBAAEM,SAAS;gBAAQC,KAAK;gBAAOC,KAAK;YAAM;YAC7D,MAAMP,iBAAiB;YAEvBC,GAAG,gCAAgC;gBACjCC,OAAOC,IAAAA,gDAAuB,EAAC;oBAAEL;oBAAQC;oBAAYC;gBAAe,IAAII,IAAI,CAC1E;YAEJ;QACF;IACF;IAEAP,SAAS,mDAAmD;QAC1D,MAAMC,SAASU;QACf,MAAMT,aAAa,CAAC;QACpB,MAAMC,iBAAiB;QAEvBC,GAAG,gCAAgC;YACjCC,OAAOC,IAAAA,gDAAuB,EAAC;gBAAEL;gBAAQC;gBAAYC;YAAe,IAAII,IAAI,CAAC;QAC/E;IACF;AACF"}