{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/common/hooks/src/lib/useValidatePasswords.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\"\n\nexport type ValidationType = {\n  properLength: boolean\n  containsNumbers: boolean\n  containsUpperLower: boolean\n  containsSpecial: boolean\n  matchPasswords: boolean\n  containsUpper: boolean\n  containsLower: boolean\n}\n\nconst initialState: ValidationType = {\n  properLength: false,\n  containsNumbers: false,\n  containsUpperLower: false,\n  containsSpecial: false,\n  matchPasswords: false,\n  containsUpper: false,\n  containsLower: false,\n}\n\nconst checkLength = (string: string) => {\n  return string.length >= 12\n}\n\nconst containsNumbers = (string: string) => {\n  const regex = /\\d/g\n  return regex.test(string)\n}\n\nconst containsUpperLower = (string: string) => {\n  const regex = /(?=.*[a-z])(?=.*[A-Z])/g\n  return regex.test(string)\n}\n\nconst containsUpper = (string: string) => {\n  const regex = /(?=.*[A-Z])/g\n  return regex.test(string)\n}\n\nconst containsLower = (string: string) => {\n  const regex = /(?=.*[a-z])/g\n  return regex.test(string)\n}\n\nconst containsSpecial = (string: string) => {\n  const chars = \" !\\\"#$%&'()*+,-./:;<=>?@[\\\\]^_`{|}~\".split(\"\")\n  const regex = new RegExp(\"[\" + chars.join(\"\\\\\") + \"]\", \"g\")\n  return regex.test(string)\n}\n\nconst useValidatePasswords = (newPassword: string, confirmPassword: string) => {\n  const [validation, setValidation] = useState(initialState)\n\n  const resetValidationState = () => {\n    setValidation(initialState)\n  }\n\n  useEffect(() => {\n    const properLength = checkLength(newPassword)\n    const isNumber = containsNumbers(newPassword)\n    const isUpperLower = containsUpperLower(newPassword)\n    const isUpper = containsUpper(newPassword)\n    const isLower = containsLower(newPassword)\n    const isSpecial = containsSpecial(newPassword)\n    const matchPasswords =\n      properLength &&\n      isNumber &&\n      isUpperLower &&\n      isUpper &&\n      isLower &&\n      isSpecial &&\n      newPassword === confirmPassword\n\n    setValidation({\n      properLength,\n      containsNumbers: isNumber,\n      containsUpperLower: isUpperLower,\n      containsUpper: isUpper,\n      containsLower: isLower,\n      containsSpecial: isSpecial,\n      matchPasswords,\n    })\n  }, [newPassword, confirmPassword])\n\n  return { validation, resetValidationState }\n}\n\nexport { useValidatePasswords }\n"],"names":["useValidatePasswords","initialState","properLength","containsNumbers","containsUpperLower","containsSpecial","matchPasswords","containsUpper","containsLower","checkLength","string","length","regex","test","chars","split","RegExp","join","newPassword","confirmPassword","validation","setValidation","useState","resetValidationState","useEffect","isNumber","isUpperLower","isUpper","isLower","isSpecial"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAyFSA;;;eAAAA;;;uBAzF2B;AAYpC,MAAMC,eAA+B;IACnCC,cAAc;IACdC,iBAAiB;IACjBC,oBAAoB;IACpBC,iBAAiB;IACjBC,gBAAgB;IAChBC,eAAe;IACfC,eAAe;AACjB;AAEA,MAAMC,cAAc,CAACC;IACnB,OAAOA,OAAOC,MAAM,IAAI;AAC1B;AAEA,MAAMR,kBAAkB,CAACO;IACvB,MAAME,QAAQ;IACd,OAAOA,MAAMC,IAAI,CAACH;AACpB;AAEA,MAAMN,qBAAqB,CAACM;IAC1B,MAAME,QAAQ;IACd,OAAOA,MAAMC,IAAI,CAACH;AACpB;AAEA,MAAMH,gBAAgB,CAACG;IACrB,MAAME,QAAQ;IACd,OAAOA,MAAMC,IAAI,CAACH;AACpB;AAEA,MAAMF,gBAAgB,CAACE;IACrB,MAAME,QAAQ;IACd,OAAOA,MAAMC,IAAI,CAACH;AACpB;AAEA,MAAML,kBAAkB,CAACK;IACvB,MAAMI,QAAQ,sCAAsCC,KAAK,CAAC;IAC1D,MAAMH,QAAQ,IAAII,OAAO,MAAMF,MAAMG,IAAI,CAAC,QAAQ,KAAK;IACvD,OAAOL,MAAMC,IAAI,CAACH;AACpB;AAEA,MAAMV,uBAAuB,CAACkB,aAAqBC;IACjD,MAAM,CAACC,YAAYC,cAAc,GAAGC,IAAAA,eAAQ,EAACrB;IAE7C,MAAMsB,uBAAuB;QAC3BF,cAAcpB;IAChB;IAEAuB,IAAAA,gBAAS,EAAC;QACR,MAAMtB,eAAeO,YAAYS;QACjC,MAAMO,WAAWtB,gBAAgBe;QACjC,MAAMQ,eAAetB,mBAAmBc;QACxC,MAAMS,UAAUpB,cAAcW;QAC9B,MAAMU,UAAUpB,cAAcU;QAC9B,MAAMW,YAAYxB,gBAAgBa;QAClC,MAAMZ,iBACJJ,gBACAuB,YACAC,gBACAC,WACAC,WACAC,aACAX,gBAAgBC;QAElBE,cAAc;YACZnB;YACAC,iBAAiBsB;YACjBrB,oBAAoBsB;YACpBnB,eAAeoB;YACfnB,eAAeoB;YACfvB,iBAAiBwB;YACjBvB;QACF;IACF,GAAG;QAACY;QAAaC;KAAgB;IAEjC,OAAO;QAAEC;QAAYG;IAAqB;AAC5C"}