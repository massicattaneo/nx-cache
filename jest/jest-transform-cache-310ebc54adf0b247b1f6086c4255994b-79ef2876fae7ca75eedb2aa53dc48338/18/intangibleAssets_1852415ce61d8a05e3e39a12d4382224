05fdc7f013ab213871d736df7c30e1a8
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "intangibleAssets", {
    enumerable: true,
    get: function() {
        return intangibleAssets;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _WatchlistDataTablePriceCell = require("../../WatchlistDataTableCells/WatchlistDataTablePriceCell");
const _genericColumn = require("../../genericColumn");
const _fiscalPeriodUtils = require("../../utils/fiscalPeriodUtils");
function intangibleAssets(tableName) {
    const title = "Intangible Assets (FQ)";
    return (0, _genericColumn.genericColumn)({
        endpoint: "companyBalanceStatement",
        columnKeys: [
            "intangibleAssets"
        ],
        size: 130,
        title,
        enableSorting: true,
        enableHiding: true,
        tooltip: "Non-physical assets like patents, trademarks, and goodwill.",
        cell: (info)=>{
            var _info_row_original_financialData_companyBalanceStatement_data, _info_row_original_financialData_companyBalanceStatement, _info_row_original_financialData_companyBalanceStatement_data1, _info_row_original_financialData_companyBalanceStatement1;
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_WatchlistDataTablePriceCell.WatchlistDataTablePriceCell, {
                tooltip: `Explain the ${title}`,
                queryResult: info.row.original.financialData.companyBalanceStatement,
                currency: (_info_row_original_financialData_companyBalanceStatement = info.row.original.financialData.companyBalanceStatement) === null || _info_row_original_financialData_companyBalanceStatement === void 0 ? void 0 : (_info_row_original_financialData_companyBalanceStatement_data = _info_row_original_financialData_companyBalanceStatement.data) === null || _info_row_original_financialData_companyBalanceStatement_data === void 0 ? void 0 : _info_row_original_financialData_companyBalanceStatement_data.reportedCurrency,
                onClick: ()=>{
                    var _info_row_original_financialData_companyBalanceStatement_data, _info_row_original_financialData_companyBalanceStatement, _info_row_original_onChatWithCell, _info_row_original;
                    const fiscalPeriod = (0, _fiscalPeriodUtils.getBalanceSheetFiscalPeriod)(info.row.original);
                    (_info_row_original_onChatWithCell = (_info_row_original = info.row.original).onChatWithCell) === null || _info_row_original_onChatWithCell === void 0 ? void 0 : _info_row_original_onChatWithCell.call(_info_row_original, {
                        prompt: `What has ${info.row.original.entityInfo.name} reported in ${fiscalPeriod} about intangible assets?`,
                        value: (_info_row_original_financialData_companyBalanceStatement = info.row.original.financialData.companyBalanceStatement) === null || _info_row_original_financialData_companyBalanceStatement === void 0 ? void 0 : (_info_row_original_financialData_companyBalanceStatement_data = _info_row_original_financialData_companyBalanceStatement.data) === null || _info_row_original_financialData_companyBalanceStatement_data === void 0 ? void 0 : _info_row_original_financialData_companyBalanceStatement_data.intangibleAssets,
                        entityInfo: info.row.original.entityInfo,
                        columnName: `${tableName}: ${title}`
                    });
                },
                value: (_info_row_original_financialData_companyBalanceStatement1 = info.row.original.financialData.companyBalanceStatement) === null || _info_row_original_financialData_companyBalanceStatement1 === void 0 ? void 0 : (_info_row_original_financialData_companyBalanceStatement_data1 = _info_row_original_financialData_companyBalanceStatement1.data) === null || _info_row_original_financialData_companyBalanceStatement_data1 === void 0 ? void 0 : _info_row_original_financialData_companyBalanceStatement_data1.intangibleAssets
            });
        }
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL3dhdGNobGlzdHMvc3JjL2xpYi9XYXRjaGxpc3REYXRhVGFicy9lbmRwb2ludHMvY29tcGFueUJhbGFuY2VTdGF0ZW1lbnQvaW50YW5naWJsZUFzc2V0cy50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgV2F0Y2hsaXN0RGF0YVRhYmxlUHJpY2VDZWxsIH0gZnJvbSBcIi4uLy4uL1dhdGNobGlzdERhdGFUYWJsZUNlbGxzL1dhdGNobGlzdERhdGFUYWJsZVByaWNlQ2VsbFwiXG5pbXBvcnQgeyBnZW5lcmljQ29sdW1uIH0gZnJvbSBcIi4uLy4uL2dlbmVyaWNDb2x1bW5cIlxuaW1wb3J0IHsgZ2V0QmFsYW5jZVNoZWV0RmlzY2FsUGVyaW9kIH0gZnJvbSBcIi4uLy4uL3V0aWxzL2Zpc2NhbFBlcmlvZFV0aWxzXCJcblxuZnVuY3Rpb24gaW50YW5naWJsZUFzc2V0cyh0YWJsZU5hbWU6IHN0cmluZykge1xuICBjb25zdCB0aXRsZSA9IFwiSW50YW5naWJsZSBBc3NldHMgKEZRKVwiXG4gIHJldHVybiBnZW5lcmljQ29sdW1uKHtcbiAgICBlbmRwb2ludDogXCJjb21wYW55QmFsYW5jZVN0YXRlbWVudFwiLFxuICAgIGNvbHVtbktleXM6IFtcImludGFuZ2libGVBc3NldHNcIl0sXG4gICAgc2l6ZTogMTMwLFxuICAgIHRpdGxlLFxuICAgIGVuYWJsZVNvcnRpbmc6IHRydWUsXG4gICAgZW5hYmxlSGlkaW5nOiB0cnVlLFxuICAgIHRvb2x0aXA6IFwiTm9uLXBoeXNpY2FsIGFzc2V0cyBsaWtlIHBhdGVudHMsIHRyYWRlbWFya3MsIGFuZCBnb29kd2lsbC5cIixcbiAgICBjZWxsOiBpbmZvID0+IHtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxXYXRjaGxpc3REYXRhVGFibGVQcmljZUNlbGxcbiAgICAgICAgICB0b29sdGlwPXtgRXhwbGFpbiB0aGUgJHt0aXRsZX1gfVxuICAgICAgICAgIHF1ZXJ5UmVzdWx0PXtpbmZvLnJvdy5vcmlnaW5hbC5maW5hbmNpYWxEYXRhLmNvbXBhbnlCYWxhbmNlU3RhdGVtZW50fVxuICAgICAgICAgIGN1cnJlbmN5PXtpbmZvLnJvdy5vcmlnaW5hbC5maW5hbmNpYWxEYXRhLmNvbXBhbnlCYWxhbmNlU3RhdGVtZW50Py5kYXRhPy5yZXBvcnRlZEN1cnJlbmN5fVxuICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGZpc2NhbFBlcmlvZCA9IGdldEJhbGFuY2VTaGVldEZpc2NhbFBlcmlvZChpbmZvLnJvdy5vcmlnaW5hbClcbiAgICAgICAgICAgIGluZm8ucm93Lm9yaWdpbmFsLm9uQ2hhdFdpdGhDZWxsPy4oe1xuICAgICAgICAgICAgICBwcm9tcHQ6IGBXaGF0IGhhcyAke2luZm8ucm93Lm9yaWdpbmFsLmVudGl0eUluZm8ubmFtZX0gcmVwb3J0ZWQgaW4gJHtmaXNjYWxQZXJpb2R9IGFib3V0IGludGFuZ2libGUgYXNzZXRzP2AsXG4gICAgICAgICAgICAgIHZhbHVlOlxuICAgICAgICAgICAgICAgIGluZm8ucm93Lm9yaWdpbmFsLmZpbmFuY2lhbERhdGEuY29tcGFueUJhbGFuY2VTdGF0ZW1lbnQ/LmRhdGE/LmludGFuZ2libGVBc3NldHMsXG4gICAgICAgICAgICAgIGVudGl0eUluZm86IGluZm8ucm93Lm9yaWdpbmFsLmVudGl0eUluZm8sXG4gICAgICAgICAgICAgIGNvbHVtbk5hbWU6IGAke3RhYmxlTmFtZX06ICR7dGl0bGV9YCxcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgfX1cbiAgICAgICAgICB2YWx1ZT17aW5mby5yb3cub3JpZ2luYWwuZmluYW5jaWFsRGF0YS5jb21wYW55QmFsYW5jZVN0YXRlbWVudD8uZGF0YT8uaW50YW5naWJsZUFzc2V0c31cbiAgICAgICAgLz5cbiAgICAgIClcbiAgICB9LFxuICB9KVxufVxuXG5leHBvcnQgeyBpbnRhbmdpYmxlQXNzZXRzIH1cbiJdLCJuYW1lcyI6WyJpbnRhbmdpYmxlQXNzZXRzIiwidGFibGVOYW1lIiwidGl0bGUiLCJnZW5lcmljQ29sdW1uIiwiZW5kcG9pbnQiLCJjb2x1bW5LZXlzIiwic2l6ZSIsImVuYWJsZVNvcnRpbmciLCJlbmFibGVIaWRpbmciLCJ0b29sdGlwIiwiY2VsbCIsImluZm8iLCJXYXRjaGxpc3REYXRhVGFibGVQcmljZUNlbGwiLCJxdWVyeVJlc3VsdCIsInJvdyIsIm9yaWdpbmFsIiwiZmluYW5jaWFsRGF0YSIsImNvbXBhbnlCYWxhbmNlU3RhdGVtZW50IiwiY3VycmVuY3kiLCJkYXRhIiwicmVwb3J0ZWRDdXJyZW5jeSIsIm9uQ2xpY2siLCJmaXNjYWxQZXJpb2QiLCJnZXRCYWxhbmNlU2hlZXRGaXNjYWxQZXJpb2QiLCJvbkNoYXRXaXRoQ2VsbCIsInByb21wdCIsImVudGl0eUluZm8iLCJuYW1lIiwidmFsdWUiLCJjb2x1bW5OYW1lIl0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBcUNTQTs7O2VBQUFBOzs7OzZDQXJDbUM7K0JBQ2Q7bUNBQ2M7QUFFNUMsU0FBU0EsaUJBQWlCQyxTQUFpQjtJQUN6QyxNQUFNQyxRQUFRO0lBQ2QsT0FBT0MsSUFBQUEsNEJBQWEsRUFBQztRQUNuQkMsVUFBVTtRQUNWQyxZQUFZO1lBQUM7U0FBbUI7UUFDaENDLE1BQU07UUFDTko7UUFDQUssZUFBZTtRQUNmQyxjQUFjO1FBQ2RDLFNBQVM7UUFDVEMsTUFBTUMsQ0FBQUE7Z0JBS1VBLCtEQUFBQSwwREFXSEEsZ0VBQUFBO1lBZlgscUJBQ0UscUJBQUNDLHdEQUEyQjtnQkFDMUJILFNBQVMsQ0FBQyxZQUFZLEVBQUVQLE1BQU0sQ0FBQztnQkFDL0JXLGFBQWFGLEtBQUtHLEdBQUcsQ0FBQ0MsUUFBUSxDQUFDQyxhQUFhLENBQUNDLHVCQUF1QjtnQkFDcEVDLFFBQVEsR0FBRVAsMkRBQUFBLEtBQUtHLEdBQUcsQ0FBQ0MsUUFBUSxDQUFDQyxhQUFhLENBQUNDLHVCQUF1QixjQUF2RE4sZ0ZBQUFBLGdFQUFBQSx5REFBeURRLElBQUksY0FBN0RSLG9GQUFBQSw4REFBK0RTLGdCQUFnQjtnQkFDekZDLFNBQVM7d0JBS0hWLCtEQUFBQSwwREFISkEsbUNBQUFBO29CQURBLE1BQU1XLGVBQWVDLElBQUFBLDhDQUEyQixFQUFDWixLQUFLRyxHQUFHLENBQUNDLFFBQVE7cUJBQ2xFSixvQ0FBQUEsQ0FBQUEscUJBQUFBLEtBQUtHLEdBQUcsQ0FBQ0MsUUFBUSxFQUFDUyxjQUFjLGNBQWhDYix3REFBQUEsdUNBQUFBLG9CQUFtQzt3QkFDakNjLFFBQVEsQ0FBQyxTQUFTLEVBQUVkLEtBQUtHLEdBQUcsQ0FBQ0MsUUFBUSxDQUFDVyxVQUFVLENBQUNDLElBQUksQ0FBQyxhQUFhLEVBQUVMLGFBQWEseUJBQXlCLENBQUM7d0JBQzVHTSxLQUFLLEdBQ0hqQiwyREFBQUEsS0FBS0csR0FBRyxDQUFDQyxRQUFRLENBQUNDLGFBQWEsQ0FBQ0MsdUJBQXVCLGNBQXZETixnRkFBQUEsZ0VBQUFBLHlEQUF5RFEsSUFBSSxjQUE3RFIsb0ZBQUFBLDhEQUErRFgsZ0JBQWdCO3dCQUNqRjBCLFlBQVlmLEtBQUtHLEdBQUcsQ0FBQ0MsUUFBUSxDQUFDVyxVQUFVO3dCQUN4Q0csWUFBWSxDQUFDLEVBQUU1QixVQUFVLEVBQUUsRUFBRUMsTUFBTSxDQUFDO29CQUN0QztnQkFDRjtnQkFDQTBCLEtBQUssR0FBRWpCLDREQUFBQSxLQUFLRyxHQUFHLENBQUNDLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDQyx1QkFBdUIsY0FBdkROLGlGQUFBQSxpRUFBQUEsMERBQXlEUSxJQUFJLGNBQTdEUixxRkFBQUEsK0RBQStEWCxnQkFBZ0I7O1FBRzVGO0lBQ0Y7QUFDRiJ9