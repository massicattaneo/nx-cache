{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/chat/src/lib/Chat/Chat/ChatResponse/SourceChatDisplay.tsx"],"sourcesContent":["import { MouseEventHandler } from \"react\"\nimport { CqsChunkStory } from \"@rp/common/api-types\"\nimport { REDIRECT_PROVIDERS } from \"@rp/common/settings\"\nimport { LlmDocumentSource } from \"@rp/react/tanstack-api/llm-summary\"\nimport { SourceDisplay } from \"@rp/react/web/common/composite-components\"\nimport { useExternalLinkUrl, useHashParams } from \"@rp/react/web/common/hooks\"\nimport { useDocumentViewerData } from \"@rp/react/web/common/providers\"\n\ntype LlmDocumentSourceWithLinks = LlmDocumentSource & {\n  url?: string | null\n  imageUrls?: Array<string> | null\n}\n\ntype Props = {\n  isLoading?: boolean\n  source: LlmDocumentSourceWithLinks\n  relatedChunks?: CqsChunkStory[\"chunks\"]\n  ts?: string\n  onClick?: () => void\n}\n\nconst SourceChatDisplay = ({ isLoading, source, relatedChunks, ts, onClick }: Props) => {\n  const { srcKey, id: documentId } = source\n  const { setDocumentData } = useDocumentViewerData()\n  const [hashParams, setHashParams] = useHashParams()\n  const { redirectToContent } = useExternalLinkUrl(documentId)\n\n  // TODO: Retrieve this info from BE\n  const documentScope = \"news\"\n  const isPrivate = srcKey === \"000000\"\n\n  const handleClick: MouseEventHandler<HTMLDivElement> = async ev => {\n    ev.stopPropagation()\n    onClick?.()\n    if (source.url && REDIRECT_PROVIDERS.includes(source.rpProviderId ?? \"\")) {\n      redirectToContent(source.url, relatedChunks?.[0].text ?? \"\")\n      return\n    }\n\n    setDocumentData({\n      documentId,\n      documentScope,\n      chunks: relatedChunks ?? [],\n    })\n\n    const hashParams: Record<string, string> = isPrivate\n      ? { document: documentId, private: \"true\" }\n      : { document: documentId }\n    const boundingBox = relatedChunks?.[0].boundingBoxes?.[0]\n    if (boundingBox) {\n      hashParams.bb = JSON.stringify(boundingBox)\n    }\n\n    setHashParams(hashParams)\n  }\n\n  return (\n    <SourceDisplay\n      showTooltips={!hashParams.document}\n      isLoading={isLoading}\n      source={source}\n      onClick={handleClick}\n      name={source.name}\n      ts={ts}\n    />\n  )\n}\n\nexport { SourceChatDisplay }\n"],"names":["SourceChatDisplay","isLoading","source","relatedChunks","ts","onClick","srcKey","id","documentId","setDocumentData","useDocumentViewerData","hashParams","setHashParams","useHashParams","redirectToContent","useExternalLinkUrl","documentScope","isPrivate","handleClick","ev","stopPropagation","url","REDIRECT_PROVIDERS","includes","rpProviderId","text","chunks","document","private","boundingBox","boundingBoxes","bb","JSON","stringify","SourceDisplay","showTooltips","name"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAoESA;;;eAAAA;;;;0BAlE0B;qCAEL;uBACoB;2BACZ;AAetC,MAAMA,oBAAoB,CAAC,EAAEC,SAAS,EAAEC,MAAM,EAAEC,aAAa,EAAEC,EAAE,EAAEC,OAAO,EAAS;IACjF,MAAM,EAAEC,MAAM,EAAEC,IAAIC,UAAU,EAAE,GAAGN;IACnC,MAAM,EAAEO,eAAe,EAAE,GAAGC,IAAAA,gCAAqB;IACjD,MAAM,CAACC,YAAYC,cAAc,GAAGC,IAAAA,oBAAa;IACjD,MAAM,EAAEC,iBAAiB,EAAE,GAAGC,IAAAA,yBAAkB,EAACP;IAEjD,mCAAmC;IACnC,MAAMQ,gBAAgB;IACtB,MAAMC,YAAYX,WAAW;IAE7B,MAAMY,cAAiD,OAAMC;YAiBvChB;QAhBpBgB,GAAGC,eAAe;QAClBf,oBAAAA,8BAAAA;YAC8CH;QAA9C,IAAIA,OAAOmB,GAAG,IAAIC,4BAAkB,CAACC,QAAQ,CAACrB,CAAAA,uBAAAA,OAAOsB,YAAY,cAAnBtB,kCAAAA,uBAAuB,KAAK;gBAC1CC;YAA9BW,kBAAkBZ,OAAOmB,GAAG,EAAElB,CAAAA,uBAAAA,0BAAAA,oCAAAA,aAAe,CAAC,EAAE,CAACsB,IAAI,cAAvBtB,kCAAAA,uBAA2B;YACzD;QACF;QAEAM,gBAAgB;YACdD;YACAQ;YACAU,QAAQvB,0BAAAA,2BAAAA,gBAAiB,EAAE;QAC7B;QAEA,MAAMQ,aAAqCM,YACvC;YAAEU,UAAUnB;YAAYoB,SAAS;QAAO,IACxC;YAAED,UAAUnB;QAAW;QAC3B,MAAMqB,cAAc1B,0BAAAA,qCAAAA,gCAAAA,aAAe,CAAC,EAAE,CAAC2B,aAAa,cAAhC3B,oDAAAA,6BAAkC,CAAC,EAAE;QACzD,IAAI0B,aAAa;YACflB,WAAWoB,EAAE,GAAGC,KAAKC,SAAS,CAACJ;QACjC;QAEAjB,cAAcD;IAChB;IAEA,qBACE,qBAACuB,kCAAa;QACZC,cAAc,CAACxB,WAAWgB,QAAQ;QAClC1B,WAAWA;QACXC,QAAQA;QACRG,SAASa;QACTkB,MAAMlC,OAAOkC,IAAI;QACjBhC,IAAIA;;AAGV"}