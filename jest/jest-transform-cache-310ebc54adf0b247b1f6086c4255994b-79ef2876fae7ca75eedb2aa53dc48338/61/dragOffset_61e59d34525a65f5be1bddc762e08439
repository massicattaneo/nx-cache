e2df175bc4a671e631dfd9b523c659e2
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "reduce", {
    enumerable: true,
    get: function() {
        return reduce;
    }
});
const _index = require("../actions/dragDrop/index.js");
const _equality = require("../utils/equality.js");
function _defineProperty(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _objectSpread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === 'function') {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _defineProperty(target, key, source[key]);
        });
    }
    return target;
}
const initialState = {
    initialSourceClientOffset: null,
    initialClientOffset: null,
    clientOffset: null
};
function reduce(state = initialState, action) {
    const { payload } = action;
    switch(action.type){
        case _index.INIT_COORDS:
        case _index.BEGIN_DRAG:
            return {
                initialSourceClientOffset: payload.sourceClientOffset,
                initialClientOffset: payload.clientOffset,
                clientOffset: payload.clientOffset
            };
        case _index.HOVER:
            if ((0, _equality.areCoordsEqual)(state.clientOffset, payload.clientOffset)) {
                return state;
            }
            return _objectSpread({}, state, {
                clientOffset: payload.clientOffset
            });
        case _index.END_DRAG:
        case _index.DROP:
            return initialState;
        default:
            return state;
    }
} //# sourceMappingURL=dragOffset.js.map

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9yZWR1Y2Vycy9kcmFnT2Zmc2V0LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG5cdEJFR0lOX0RSQUcsXG5cdERST1AsXG5cdEVORF9EUkFHLFxuXHRIT1ZFUixcblx0SU5JVF9DT09SRFMsXG59IGZyb20gJy4uL2FjdGlvbnMvZHJhZ0Ryb3AvaW5kZXguanMnXG5pbXBvcnQgdHlwZSB7IEFjdGlvbiwgWFlDb29yZCB9IGZyb20gJy4uL2ludGVyZmFjZXMuanMnXG5pbXBvcnQgeyBhcmVDb29yZHNFcXVhbCB9IGZyb20gJy4uL3V0aWxzL2VxdWFsaXR5LmpzJ1xuXG5leHBvcnQgaW50ZXJmYWNlIFN0YXRlIHtcblx0aW5pdGlhbFNvdXJjZUNsaWVudE9mZnNldDogWFlDb29yZCB8IG51bGxcblx0aW5pdGlhbENsaWVudE9mZnNldDogWFlDb29yZCB8IG51bGxcblx0Y2xpZW50T2Zmc2V0OiBYWUNvb3JkIHwgbnVsbFxufVxuXG5jb25zdCBpbml0aWFsU3RhdGU6IFN0YXRlID0ge1xuXHRpbml0aWFsU291cmNlQ2xpZW50T2Zmc2V0OiBudWxsLFxuXHRpbml0aWFsQ2xpZW50T2Zmc2V0OiBudWxsLFxuXHRjbGllbnRPZmZzZXQ6IG51bGwsXG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZWR1Y2UoXG5cdHN0YXRlOiBTdGF0ZSA9IGluaXRpYWxTdGF0ZSxcblx0YWN0aW9uOiBBY3Rpb248e1xuXHRcdHNvdXJjZUNsaWVudE9mZnNldDogWFlDb29yZFxuXHRcdGNsaWVudE9mZnNldDogWFlDb29yZFxuXHR9Pixcbik6IFN0YXRlIHtcblx0Y29uc3QgeyBwYXlsb2FkIH0gPSBhY3Rpb25cblx0c3dpdGNoIChhY3Rpb24udHlwZSkge1xuXHRcdGNhc2UgSU5JVF9DT09SRFM6XG5cdFx0Y2FzZSBCRUdJTl9EUkFHOlxuXHRcdFx0cmV0dXJuIHtcblx0XHRcdFx0aW5pdGlhbFNvdXJjZUNsaWVudE9mZnNldDogcGF5bG9hZC5zb3VyY2VDbGllbnRPZmZzZXQsXG5cdFx0XHRcdGluaXRpYWxDbGllbnRPZmZzZXQ6IHBheWxvYWQuY2xpZW50T2Zmc2V0LFxuXHRcdFx0XHRjbGllbnRPZmZzZXQ6IHBheWxvYWQuY2xpZW50T2Zmc2V0LFxuXHRcdFx0fVxuXHRcdGNhc2UgSE9WRVI6XG5cdFx0XHRpZiAoYXJlQ29vcmRzRXF1YWwoc3RhdGUuY2xpZW50T2Zmc2V0LCBwYXlsb2FkLmNsaWVudE9mZnNldCkpIHtcblx0XHRcdFx0cmV0dXJuIHN0YXRlXG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4ge1xuXHRcdFx0XHQuLi5zdGF0ZSxcblx0XHRcdFx0Y2xpZW50T2Zmc2V0OiBwYXlsb2FkLmNsaWVudE9mZnNldCxcblx0XHRcdH1cblx0XHRjYXNlIEVORF9EUkFHOlxuXHRcdGNhc2UgRFJPUDpcblx0XHRcdHJldHVybiBpbml0aWFsU3RhdGVcblx0XHRkZWZhdWx0OlxuXHRcdFx0cmV0dXJuIHN0YXRlXG5cdH1cbn1cbiJdLCJuYW1lcyI6WyJyZWR1Y2UiLCJfZGVmaW5lUHJvcGVydHkiLCJvYmoiLCJrZXkiLCJ2YWx1ZSIsImluaXRpYWxTdGF0ZSIsImluaXRpYWxTb3VyY2VDbGllbnRPZmZzZXQiLCJpbml0aWFsQ2xpZW50T2Zmc2V0IiwiY2xpZW50T2Zmc2V0Iiwic3RhdGUiLCJhY3Rpb24iLCJwYXlsb2FkIiwidHlwZSIsIklOSVRfQ09PUkRTIiwiQkVHSU5fRFJBRyIsInNvdXJjZUNsaWVudE9mZnNldCIsIkhPVkVSIiwiYXJlQ29vcmRzRXF1YWwiLCJfb2JqZWN0U3ByZWFkIiwiRU5EX0RSQUciLCJEUk9QIl0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkFzQmdCQTs7O2VBQUFBOzs7dUJBaEJUOzBCQUV3QjtBQVIvQixTQUFBQyxnQkFBQUMsR0FBQSxFQUFBQyxHQUFBLEVBQUFDLEtBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFnQkEsTUFBTUMsZUFBc0I7SUFDM0JDLDJCQUEyQjtJQUMzQkMscUJBQXFCO0lBQ3JCQyxjQUFjOztBQUdSLFNBQVNSLE9BQ2ZTLFFBQWVKLFlBQVksRUFDM0JLLE1BR0U7SUFFRixNQUFNLEVBQUVDLE9BQU8sRUFBRSxHQUFHRDtJQUNwQixPQUFRQSxPQUFPRSxJQUFJO1FBQ2xCLEtBQUtDLGtCQUFXO1FBQ2hCLEtBQUtDLGlCQUFVO1lBQ2QsT0FBTztnQkFDTlIsMkJBQTJCSyxRQUFRSSxrQkFBa0I7Z0JBQ3JEUixxQkFBcUJJLFFBQVFILFlBQVk7Z0JBQ3pDQSxjQUFjRyxRQUFRSCxZQUFZOztRQUVwQyxLQUFLUSxZQUFLO1lBQ1QsSUFBSUMsSUFBQUEsd0JBQWMsRUFBQ1IsTUFBTUQsWUFBWSxFQUFFRyxRQUFRSCxZQUFZLEdBQUc7Z0JBQzdELE9BQU9DOztZQUVSLE9BQU9TLGNBQUEsQ0FBQSxHQUNIVCxPQUFLO2dCQUNSRCxjQUFjRyxRQUFRSCxZQUFZOztRQUVwQyxLQUFLVyxlQUFRO1FBQ2IsS0FBS0MsV0FBSTtZQUNSLE9BQU9mO1FBQ1I7WUFDQyxPQUFPSSJ9