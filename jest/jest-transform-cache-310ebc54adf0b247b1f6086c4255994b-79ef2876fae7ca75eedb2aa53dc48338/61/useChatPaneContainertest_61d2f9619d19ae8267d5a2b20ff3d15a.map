{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/apps/client-web/src/app/pages/Files/FilesV2/hooks/useChatPaneContainer.test.ts"],"sourcesContent":["import { useLocation, useNavigate, useParams } from \"react-router\"\nimport { useHashParams, useQueryParams } from \"@rp/react/web/common/hooks\"\nimport { RenderHookResult, act, renderHook } from \"@testing-library/react\"\nimport { useChatPaneContainer } from \"./useChatPaneContainer\"\n\nlet renderedHook: RenderHookResult<ReturnType<typeof useChatPaneContainer>, undefined>\n\nconst mockChatId = \"chat-id-123\"\nconst mockDocumentId = \"doc-id-123\"\nconst mockDocumentId2 = \"doc-id-234\"\n\nconst mockUseNavigate = useNavigate as jest.Mock\nconst mockUseLocation = useLocation as jest.Mock\nconst mockUseParams = useParams as jest.Mock\nconst mockNavigate = jest.fn()\njest.mock(\"react-router\", () => ({\n  ...jest.requireActual(\"react-router\"),\n  useLocation: jest.fn(),\n  useNavigate: jest.fn(),\n  useParams: jest.fn(),\n}))\nmockUseNavigate.mockReturnValue(mockNavigate)\n\nconst mockUseHashParams = useHashParams as jest.Mock\nconst mockUseQueryParams = useQueryParams as jest.Mock\njest.mock(\"@rp/react/web/common/hooks\", () => ({\n  ...jest.requireActual(\"@rp/react/web/common/hooks\"),\n  useHashParams: jest.fn(),\n  useQueryParams: jest.fn(),\n}))\n\nbeforeEach(jest.clearAllMocks)\n\ndescribe(\"useChatPaneContainer\", () => {\n  describe(\"initial render\", () => {\n    beforeEach(() => {\n      mockUseHashParams.mockReturnValue([{}])\n      mockUseParams.mockReturnValue({ id: mockDocumentId })\n      mockUseQueryParams.mockReturnValue({ get: () => undefined })\n      mockUseLocation.mockReturnValue({ search: \"\" })\n      renderedHook = renderHook(useChatPaneContainer)\n    })\n\n    it(\"should return the correct state\", () => {\n      expect(renderedHook.result.current).toStrictEqual({\n        chatId: undefined,\n        onChatCreated: expect.any(Function),\n      })\n    })\n  })\n\n  describe(\"onChatCreated\", () => {\n    beforeEach(() => {\n      mockUseHashParams.mockReturnValue([{}])\n      mockUseParams.mockReturnValue({ id: undefined })\n      mockUseQueryParams\n        .mockReturnValueOnce({ get: () => undefined })\n        .mockReturnValue({ get: () => mockChatId })\n      mockUseLocation.mockReturnValue({ search: \"\" })\n      renderedHook = renderHook(useChatPaneContainer)\n\n      act(() => renderedHook.result.current.onChatCreated(mockChatId))\n      renderedHook.rerender()\n    })\n\n    it(\"should navigate to the correct URL\", () => {\n      expect(mockNavigate).toHaveBeenCalledTimes(1)\n      expect(mockNavigate).toHaveBeenCalledWith(`?chatId=${mockChatId}`, { replace: true })\n    })\n\n    it(\"should return the correct chat ID\", () => {\n      expect(renderedHook.result.current.chatId).toBe(mockChatId)\n    })\n  })\n\n  describe(\"on documentId change\", () => {\n    beforeEach(() => {\n      mockUseHashParams.mockReturnValue([{ private: true }])\n      mockUseParams.mockReturnValue({ id: mockDocumentId })\n      mockUseQueryParams\n        .mockReturnValueOnce({ get: () => mockChatId })\n        .mockReturnValue({ get: () => undefined })\n      mockUseLocation.mockReturnValue({ search: `?chatId=${mockChatId}` })\n      renderedHook = renderHook(useChatPaneContainer)\n\n      act(() => mockUseParams.mockReturnValue({ id: mockDocumentId2 }))\n      renderedHook.rerender()\n    })\n\n    it(\"should navigate to the correct URL\", () => {\n      expect(mockNavigate).toHaveBeenCalledTimes(2)\n      expect(mockNavigate.mock.calls).toStrictEqual([\n        [\"?#?private=true\", { replace: true }],\n        [\"?#?private=true\", { replace: true }],\n      ])\n    })\n\n    it(\"should return the correct (undefined) chat ID\", () => {\n      expect(renderedHook.result.current.chatId).toBeUndefined()\n    })\n  })\n})\n"],"names":["jest","mock","requireActual","useLocation","fn","useNavigate","useParams","useHashParams","useQueryParams","renderedHook","mockChatId","mockDocumentId","mockDocumentId2","mockUseNavigate","mockUseLocation","mockUseParams","mockNavigate","mockReturnValue","mockUseHashParams","mockUseQueryParams","beforeEach","clearAllMocks","describe","id","get","undefined","search","renderHook","useChatPaneContainer","it","expect","result","current","toStrictEqual","chatId","onChatCreated","any","Function","mockReturnValueOnce","act","rerender","toHaveBeenCalledTimes","toHaveBeenCalledWith","replace","toBe","private","calls","toBeUndefined"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}