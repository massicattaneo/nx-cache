aa7e7dd81020c8f1b5a02797f7d7e4a8
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "WatchlistDetails", {
    enumerable: true,
    get: function() {
        return WatchlistDetails;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _settings = require("@rp/common/settings");
const _basecomponents = require("@rp/react/web/common/base-components");
const _compositecomponents = require("@rp/react/web/common/composite-components");
const _watchlists = require("@rp/react/web/common/watchlists");
const _core = require("@rp/react/web/mui/core");
const WatchlistDetails = ({ watchlist, ownerName, imageUrl, averageChangePercentage, displayName })=>{
    const hasReachedLimit = watchlist.items.length >= _settings.WATCHLIST_ITEMS_MAXIMUM_COUNT;
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
        sx: {
            display: "flex",
            gap: 1,
            alignItems: "center",
            width: "100%",
            justifyContent: "space-between"
        },
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                sx: {
                    display: "flex",
                    alignItems: "center",
                    gap: 1,
                    maxWidth: "calc(100% - 100px)",
                    pr: 1
                },
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                        sx: {
                            display: "flex",
                            alignItems: "center",
                            gap: 1
                        },
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.UserAvatar, {
                                ownerName: ownerName,
                                imgUrl: imageUrl,
                                hasImage: !!imageUrl,
                                size: 24
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.EllipsisTooltip, {
                                tooltipText: displayName !== null && displayName !== void 0 ? displayName : "",
                                typographyProps: {
                                    fontSize: 12,
                                    maxWidth: 150
                                },
                                children: displayName
                            })
                        ]
                    }),
                    "Â·",
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                        fontSize: 12,
                        children: `${watchlist.items.length} ${watchlist.items.length === 1 ? "entity" : "entities"}`
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                        fontSize: 12,
                        color: "text.secondary",
                        children: hasReachedLimit ? "(maximum limit reached)" : ""
                    })
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_watchlists.WatchlistAverageChangePercentageChip, {
                averageChangePercentage: averageChangePercentage
            })
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL3dhdGNobGlzdHMvc3JjL2xpYi9XYXRjaGxpc3RQb3J0Zm9saW9IZWFkZXIvV2F0Y2hsaXN0RGV0YWlscy50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgV2F0Y2hsaXN0IH0gZnJvbSBcIkBycC9jb21tb24vYXBpLXR5cGVzXCJcbmltcG9ydCB7IFdBVENITElTVF9JVEVNU19NQVhJTVVNX0NPVU5UIH0gZnJvbSBcIkBycC9jb21tb24vc2V0dGluZ3NcIlxuaW1wb3J0IHsgVXNlckF2YXRhciB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL2NvbW1vbi9iYXNlLWNvbXBvbmVudHNcIlxuaW1wb3J0IHsgRWxsaXBzaXNUb29sdGlwIH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvY29tbW9uL2NvbXBvc2l0ZS1jb21wb25lbnRzXCJcbmltcG9ydCB7IFdhdGNobGlzdEF2ZXJhZ2VDaGFuZ2VQZXJjZW50YWdlQ2hpcCB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL2NvbW1vbi93YXRjaGxpc3RzXCJcbmltcG9ydCB7IEJveCwgVHlwb2dyYXBoeSB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL211aS9jb3JlXCJcblxudHlwZSBQcm9wcyA9IHtcbiAgd2F0Y2hsaXN0OiBXYXRjaGxpc3RcbiAgb3duZXJOYW1lOiBzdHJpbmcgfCB1bmRlZmluZWRcbiAgaW1hZ2VVcmw6IHN0cmluZyB8IHVuZGVmaW5lZFxuICBhdmVyYWdlQ2hhbmdlUGVyY2VudGFnZTogbnVtYmVyIHwgbnVsbFxuICBkaXNwbGF5TmFtZTogc3RyaW5nXG59XG5cbmNvbnN0IFdhdGNobGlzdERldGFpbHMgPSAoe1xuICB3YXRjaGxpc3QsXG4gIG93bmVyTmFtZSxcbiAgaW1hZ2VVcmwsXG4gIGF2ZXJhZ2VDaGFuZ2VQZXJjZW50YWdlLFxuICBkaXNwbGF5TmFtZSxcbn06IFByb3BzKSA9PiB7XG4gIGNvbnN0IGhhc1JlYWNoZWRMaW1pdCA9IHdhdGNobGlzdC5pdGVtcy5sZW5ndGggPj0gV0FUQ0hMSVNUX0lURU1TX01BWElNVU1fQ09VTlRcbiAgcmV0dXJuIChcbiAgICA8Qm94XG4gICAgICBzeD17e1xuICAgICAgICBkaXNwbGF5OiBcImZsZXhcIixcbiAgICAgICAgZ2FwOiAxLFxuICAgICAgICBhbGlnbkl0ZW1zOiBcImNlbnRlclwiLFxuICAgICAgICB3aWR0aDogXCIxMDAlXCIsXG4gICAgICAgIGp1c3RpZnlDb250ZW50OiBcInNwYWNlLWJldHdlZW5cIixcbiAgICAgIH19XG4gICAgPlxuICAgICAgPEJveFxuICAgICAgICBzeD17e1xuICAgICAgICAgIGRpc3BsYXk6IFwiZmxleFwiLFxuICAgICAgICAgIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gICAgICAgICAgZ2FwOiAxLFxuICAgICAgICAgIG1heFdpZHRoOiBcImNhbGMoMTAwJSAtIDEwMHB4KVwiLFxuICAgICAgICAgIHByOiAxLFxuICAgICAgICB9fVxuICAgICAgPlxuICAgICAgICA8Qm94IHN4PXt7IGRpc3BsYXk6IFwiZmxleFwiLCBhbGlnbkl0ZW1zOiBcImNlbnRlclwiLCBnYXA6IDEgfX0+XG4gICAgICAgICAgPFVzZXJBdmF0YXIgb3duZXJOYW1lPXtvd25lck5hbWV9IGltZ1VybD17aW1hZ2VVcmx9IGhhc0ltYWdlPXshIWltYWdlVXJsfSBzaXplPXsyNH0gLz5cbiAgICAgICAgICA8RWxsaXBzaXNUb29sdGlwXG4gICAgICAgICAgICB0b29sdGlwVGV4dD17ZGlzcGxheU5hbWUgPz8gXCJcIn1cbiAgICAgICAgICAgIHR5cG9ncmFwaHlQcm9wcz17eyBmb250U2l6ZTogMTIsIG1heFdpZHRoOiAxNTAgfX1cbiAgICAgICAgICA+XG4gICAgICAgICAgICB7ZGlzcGxheU5hbWV9XG4gICAgICAgICAgPC9FbGxpcHNpc1Rvb2x0aXA+XG4gICAgICAgIDwvQm94PlxuICAgICAgICDCt1xuICAgICAgICA8VHlwb2dyYXBoeSBmb250U2l6ZT17MTJ9PlxuICAgICAgICAgIHtgJHt3YXRjaGxpc3QuaXRlbXMubGVuZ3RofSAke3dhdGNobGlzdC5pdGVtcy5sZW5ndGggPT09IDEgPyBcImVudGl0eVwiIDogXCJlbnRpdGllc1wifWB9XG4gICAgICAgIDwvVHlwb2dyYXBoeT5cbiAgICAgICAgPFR5cG9ncmFwaHkgZm9udFNpemU9ezEyfSBjb2xvcj1cInRleHQuc2Vjb25kYXJ5XCI+XG4gICAgICAgICAge2hhc1JlYWNoZWRMaW1pdCA/IFwiKG1heGltdW0gbGltaXQgcmVhY2hlZClcIiA6IFwiXCJ9XG4gICAgICAgIDwvVHlwb2dyYXBoeT5cbiAgICAgIDwvQm94PlxuICAgICAgPFdhdGNobGlzdEF2ZXJhZ2VDaGFuZ2VQZXJjZW50YWdlQ2hpcCBhdmVyYWdlQ2hhbmdlUGVyY2VudGFnZT17YXZlcmFnZUNoYW5nZVBlcmNlbnRhZ2V9IC8+XG4gICAgPC9Cb3g+XG4gIClcbn1cblxuZXhwb3J0IHsgV2F0Y2hsaXN0RGV0YWlscyB9XG4iXSwibmFtZXMiOlsiV2F0Y2hsaXN0RGV0YWlscyIsIndhdGNobGlzdCIsIm93bmVyTmFtZSIsImltYWdlVXJsIiwiYXZlcmFnZUNoYW5nZVBlcmNlbnRhZ2UiLCJkaXNwbGF5TmFtZSIsImhhc1JlYWNoZWRMaW1pdCIsIml0ZW1zIiwibGVuZ3RoIiwiV0FUQ0hMSVNUX0lURU1TX01BWElNVU1fQ09VTlQiLCJCb3giLCJzeCIsImRpc3BsYXkiLCJnYXAiLCJhbGlnbkl0ZW1zIiwid2lkdGgiLCJqdXN0aWZ5Q29udGVudCIsIm1heFdpZHRoIiwicHIiLCJVc2VyQXZhdGFyIiwiaW1nVXJsIiwiaGFzSW1hZ2UiLCJzaXplIiwiRWxsaXBzaXNUb29sdGlwIiwidG9vbHRpcFRleHQiLCJ0eXBvZ3JhcGh5UHJvcHMiLCJmb250U2l6ZSIsIlR5cG9ncmFwaHkiLCJjb2xvciIsIldhdGNobGlzdEF2ZXJhZ2VDaGFuZ2VQZXJjZW50YWdlQ2hpcCJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQWdFU0E7OztlQUFBQTs7OzswQkEvRHFDO2dDQUNuQjtxQ0FDSzs0QkFDcUI7c0JBQ3JCO0FBVWhDLE1BQU1BLG1CQUFtQixDQUFDLEVBQ3hCQyxTQUFTLEVBQ1RDLFNBQVMsRUFDVEMsUUFBUSxFQUNSQyx1QkFBdUIsRUFDdkJDLFdBQVcsRUFDTDtJQUNOLE1BQU1DLGtCQUFrQkwsVUFBVU0sS0FBSyxDQUFDQyxNQUFNLElBQUlDLHVDQUE2QjtJQUMvRSxxQkFDRSxzQkFBQ0MsU0FBRztRQUNGQyxJQUFJO1lBQ0ZDLFNBQVM7WUFDVEMsS0FBSztZQUNMQyxZQUFZO1lBQ1pDLE9BQU87WUFDUEMsZ0JBQWdCO1FBQ2xCOzswQkFFQSxzQkFBQ04sU0FBRztnQkFDRkMsSUFBSTtvQkFDRkMsU0FBUztvQkFDVEUsWUFBWTtvQkFDWkQsS0FBSztvQkFDTEksVUFBVTtvQkFDVkMsSUFBSTtnQkFDTjs7a0NBRUEsc0JBQUNSLFNBQUc7d0JBQUNDLElBQUk7NEJBQUVDLFNBQVM7NEJBQVFFLFlBQVk7NEJBQVVELEtBQUs7d0JBQUU7OzBDQUN2RCxxQkFBQ00sMEJBQVU7Z0NBQUNqQixXQUFXQTtnQ0FBV2tCLFFBQVFqQjtnQ0FBVWtCLFVBQVUsQ0FBQyxDQUFDbEI7Z0NBQVVtQixNQUFNOzswQ0FDaEYscUJBQUNDLG9DQUFlO2dDQUNkQyxhQUFhbkIsd0JBQUFBLHlCQUFBQSxjQUFlO2dDQUM1Qm9CLGlCQUFpQjtvQ0FBRUMsVUFBVTtvQ0FBSVQsVUFBVTtnQ0FBSTswQ0FFOUNaOzs7O29CQUVDO2tDQUVOLHFCQUFDc0IsZ0JBQVU7d0JBQUNELFVBQVU7a0NBQ25CLENBQUMsRUFBRXpCLFVBQVVNLEtBQUssQ0FBQ0MsTUFBTSxDQUFDLENBQUMsRUFBRVAsVUFBVU0sS0FBSyxDQUFDQyxNQUFNLEtBQUssSUFBSSxXQUFXLFdBQVcsQ0FBQzs7a0NBRXRGLHFCQUFDbUIsZ0JBQVU7d0JBQUNELFVBQVU7d0JBQUlFLE9BQU07a0NBQzdCdEIsa0JBQWtCLDRCQUE0Qjs7OzswQkFHbkQscUJBQUN1QixnREFBb0M7Z0JBQUN6Qix5QkFBeUJBOzs7O0FBR3JFIn0=