1bf6fdf960e83bbd8cf3a00dfd840618
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "useInfiniteAutosuggestSources", {
    enumerable: true,
    get: function() {
        return useInfiniteAutosuggestSources;
    }
});
const _reactquery = require("@tanstack/react-query");
const _contentconstants = require("../content.constants");
const _getAutosuggestSources = require("../services/getAutosuggestSources");
const _autosuggestSourcesQueryKeys = require("../utils/autosuggestSourcesQueryKeys");
function useInfiniteAutosuggestSources({ contentPackage, contentCategory, query }) {
    return (0, _reactquery.useInfiniteQuery)({
        enabled: !!contentPackage || !!contentCategory,
        queryKey: _autosuggestSourcesQueryKeys.autosuggestSourcesQueryKeys.paginated({
            contentPackage,
            contentCategory,
            query
        }),
        queryFn: (params)=>(0, _getAutosuggestSources.getAutosuggestSources)({
                offset: params.pageParam,
                pageCount: _contentconstants.AUTOSUGGEST_SOURCES_INFINITE_PAGE_SIZE,
                contentPackage,
                contentCategory,
                query
            }),
        staleTime: 60 * 1000,
        refetchOnWindowFocus: false,
        initialPageParam: 0,
        placeholderData: _reactquery.keepPreviousData,
        getNextPageParam: (lastPage, _allPages, lastPageParam)=>{
            if (lastPage.results.length < _contentconstants.AUTOSUGGEST_SOURCES_INFINITE_PAGE_SIZE) return undefined;
            return lastPageParam + 1;
        }
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3QvdGFuc3RhY2stYXBpL2NvbnRlbnQvc3JjL2hvb2tzL3VzZUluZmluaXRlQXV0b3N1Z2dlc3RTb3VyY2VzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGtlZXBQcmV2aW91c0RhdGEsIHVzZUluZmluaXRlUXVlcnkgfSBmcm9tIFwiQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5XCJcbmltcG9ydCB7IEFVVE9TVUdHRVNUX1NPVVJDRVNfSU5GSU5JVEVfUEFHRV9TSVpFIH0gZnJvbSBcIi4uL2NvbnRlbnQuY29uc3RhbnRzXCJcbmltcG9ydCB7IGdldEF1dG9zdWdnZXN0U291cmNlcyB9IGZyb20gXCIuLi9zZXJ2aWNlcy9nZXRBdXRvc3VnZ2VzdFNvdXJjZXNcIlxuaW1wb3J0IHsgYXV0b3N1Z2dlc3RTb3VyY2VzUXVlcnlLZXlzIH0gZnJvbSBcIi4uL3V0aWxzL2F1dG9zdWdnZXN0U291cmNlc1F1ZXJ5S2V5c1wiXG5cbnR5cGUgVXNlSW5maW5pdGVBdXRvc3VnZ2VzdFNvdXJjZXNQYXJhbXMgPSB7XG4gIGNvbnRlbnRQYWNrYWdlPzogc3RyaW5nIHwgdW5kZWZpbmVkXG4gIGNvbnRlbnRDYXRlZ29yeT86IHN0cmluZyB8IHVuZGVmaW5lZFxuICBxdWVyeTogc3RyaW5nXG59XG5mdW5jdGlvbiB1c2VJbmZpbml0ZUF1dG9zdWdnZXN0U291cmNlcyh7XG4gIGNvbnRlbnRQYWNrYWdlLFxuICBjb250ZW50Q2F0ZWdvcnksXG4gIHF1ZXJ5LFxufTogVXNlSW5maW5pdGVBdXRvc3VnZ2VzdFNvdXJjZXNQYXJhbXMpIHtcbiAgcmV0dXJuIHVzZUluZmluaXRlUXVlcnkoe1xuICAgIGVuYWJsZWQ6ICEhY29udGVudFBhY2thZ2UgfHwgISFjb250ZW50Q2F0ZWdvcnksXG4gICAgcXVlcnlLZXk6IGF1dG9zdWdnZXN0U291cmNlc1F1ZXJ5S2V5cy5wYWdpbmF0ZWQoeyBjb250ZW50UGFja2FnZSwgY29udGVudENhdGVnb3J5LCBxdWVyeSB9KSxcbiAgICBxdWVyeUZuOiBwYXJhbXMgPT5cbiAgICAgIGdldEF1dG9zdWdnZXN0U291cmNlcyh7XG4gICAgICAgIG9mZnNldDogcGFyYW1zLnBhZ2VQYXJhbSxcbiAgICAgICAgcGFnZUNvdW50OiBBVVRPU1VHR0VTVF9TT1VSQ0VTX0lORklOSVRFX1BBR0VfU0laRSxcbiAgICAgICAgY29udGVudFBhY2thZ2UsXG4gICAgICAgIGNvbnRlbnRDYXRlZ29yeSxcbiAgICAgICAgcXVlcnksXG4gICAgICB9KSxcbiAgICBzdGFsZVRpbWU6IDYwICogMTAwMCxcbiAgICByZWZldGNoT25XaW5kb3dGb2N1czogZmFsc2UsXG4gICAgaW5pdGlhbFBhZ2VQYXJhbTogMCxcbiAgICBwbGFjZWhvbGRlckRhdGE6IGtlZXBQcmV2aW91c0RhdGEsXG4gICAgZ2V0TmV4dFBhZ2VQYXJhbTogKGxhc3RQYWdlLCBfYWxsUGFnZXMsIGxhc3RQYWdlUGFyYW0pID0+IHtcbiAgICAgIGlmIChsYXN0UGFnZS5yZXN1bHRzLmxlbmd0aCA8IEFVVE9TVUdHRVNUX1NPVVJDRVNfSU5GSU5JVEVfUEFHRV9TSVpFKSByZXR1cm4gdW5kZWZpbmVkXG4gICAgICByZXR1cm4gbGFzdFBhZ2VQYXJhbSArIDFcbiAgICB9LFxuICB9KVxufVxuXG5leHBvcnQgeyB1c2VJbmZpbml0ZUF1dG9zdWdnZXN0U291cmNlcyB9XG4iXSwibmFtZXMiOlsidXNlSW5maW5pdGVBdXRvc3VnZ2VzdFNvdXJjZXMiLCJjb250ZW50UGFja2FnZSIsImNvbnRlbnRDYXRlZ29yeSIsInF1ZXJ5IiwidXNlSW5maW5pdGVRdWVyeSIsImVuYWJsZWQiLCJxdWVyeUtleSIsImF1dG9zdWdnZXN0U291cmNlc1F1ZXJ5S2V5cyIsInBhZ2luYXRlZCIsInF1ZXJ5Rm4iLCJwYXJhbXMiLCJnZXRBdXRvc3VnZ2VzdFNvdXJjZXMiLCJvZmZzZXQiLCJwYWdlUGFyYW0iLCJwYWdlQ291bnQiLCJBVVRPU1VHR0VTVF9TT1VSQ0VTX0lORklOSVRFX1BBR0VfU0laRSIsInN0YWxlVGltZSIsInJlZmV0Y2hPbldpbmRvd0ZvY3VzIiwiaW5pdGlhbFBhZ2VQYXJhbSIsInBsYWNlaG9sZGVyRGF0YSIsImtlZXBQcmV2aW91c0RhdGEiLCJnZXROZXh0UGFnZVBhcmFtIiwibGFzdFBhZ2UiLCJfYWxsUGFnZXMiLCJsYXN0UGFnZVBhcmFtIiwicmVzdWx0cyIsImxlbmd0aCIsInVuZGVmaW5lZCJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkFxQ1NBOzs7ZUFBQUE7Ozs0QkFyQzBDO2tDQUNJO3VDQUNqQjs2Q0FDTTtBQU81QyxTQUFTQSw4QkFBOEIsRUFDckNDLGNBQWMsRUFDZEMsZUFBZSxFQUNmQyxLQUFLLEVBQytCO0lBQ3BDLE9BQU9DLElBQUFBLDRCQUFnQixFQUFDO1FBQ3RCQyxTQUFTLENBQUMsQ0FBQ0osa0JBQWtCLENBQUMsQ0FBQ0M7UUFDL0JJLFVBQVVDLHdEQUEyQixDQUFDQyxTQUFTLENBQUM7WUFBRVA7WUFBZ0JDO1lBQWlCQztRQUFNO1FBQ3pGTSxTQUFTQyxDQUFBQSxTQUNQQyxJQUFBQSw0Q0FBcUIsRUFBQztnQkFDcEJDLFFBQVFGLE9BQU9HLFNBQVM7Z0JBQ3hCQyxXQUFXQyx3REFBc0M7Z0JBQ2pEZDtnQkFDQUM7Z0JBQ0FDO1lBQ0Y7UUFDRmEsV0FBVyxLQUFLO1FBQ2hCQyxzQkFBc0I7UUFDdEJDLGtCQUFrQjtRQUNsQkMsaUJBQWlCQyw0QkFBZ0I7UUFDakNDLGtCQUFrQixDQUFDQyxVQUFVQyxXQUFXQztZQUN0QyxJQUFJRixTQUFTRyxPQUFPLENBQUNDLE1BQU0sR0FBR1gsd0RBQXNDLEVBQUUsT0FBT1k7WUFDN0UsT0FBT0gsZ0JBQWdCO1FBQ3pCO0lBQ0Y7QUFDRiJ9