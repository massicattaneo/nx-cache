{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/watchlists/src/lib/WatchlistsCardView/WatchlistsCardHeader.tsx"],"sourcesContent":["import { useNavigate } from \"react-router-dom\"\nimport { WATCHLIST_FEATURE_NAME } from \"@rp/common/settings\"\nimport { useIsWatchlistLimitMet } from \"@rp/react/common/hooks\"\nimport { useAccount } from \"@rp/react/common/providers\"\nimport { Header, HeaderSearchBar } from \"@rp/react/web/common/layout\"\nimport { useModal } from \"@rp/react/web/common/providers\"\nimport { Button, Typography } from \"@rp/react/web/mui/core\"\nimport { Add } from \"@rp/react/web/mui/icons\"\nimport { WATCHLIST_NEW } from \"@rp/react/web/router\"\n\ntype Props = {\n  filterTerm: string\n  setFilterTerm: (term: string) => void\n}\n\nexport const WatchlistsCardHeader = ({ filterTerm, setFilterTerm }: Props) => {\n  const navigate = useNavigate()\n  const { quota } = useAccount()\n  const {\n    planComparisonModal: { handleOpen: planComparisonHandleOpen },\n  } = useModal()\n  const hasMetWatchlistLimit = useIsWatchlistLimitMet(quota)\n  return (\n    <Header\n      leftColumns={3}\n      rightColumns={9}\n      leftContent={<Typography sx={{ fontSize: 20, fontWeight: 700 }}>Watchlists</Typography>}\n      rightContent={\n        <>\n          <HeaderSearchBar\n            key=\"header-search-bar\"\n            filterTerm={filterTerm}\n            onChange={value => setFilterTerm(value)}\n            placeholder={\"Find your watchlists\"}\n          />\n          <Button\n            aria-label=\"create new watchlist\"\n            startIcon={<Add />}\n            variant=\"contained\"\n            onClick={() => {\n              hasMetWatchlistLimit\n                ? planComparisonHandleOpen(WATCHLIST_FEATURE_NAME)\n                : navigate(WATCHLIST_NEW)\n            }}\n          >\n            New Watchlist\n          </Button>\n        </>\n      }\n    />\n  )\n}\n"],"names":["WatchlistsCardHeader","filterTerm","setFilterTerm","navigate","useNavigate","quota","useAccount","planComparisonModal","handleOpen","planComparisonHandleOpen","useModal","hasMetWatchlistLimit","useIsWatchlistLimitMet","Header","leftColumns","rightColumns","leftContent","Typography","sx","fontSize","fontWeight","rightContent","HeaderSearchBar","onChange","value","placeholder","Button","aria-label","startIcon","Add","variant","onClick","WATCHLIST_FEATURE_NAME","WATCHLIST_NEW"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAeaA;;;eAAAA;;;;gCAfe;0BACW;uBACA;2BACZ;wBACa;4BACf;sBACU;uBACf;wBACU;AAOvB,MAAMA,uBAAuB,CAAC,EAAEC,UAAU,EAAEC,aAAa,EAAS;IACvE,MAAMC,WAAWC,IAAAA,2BAAW;IAC5B,MAAM,EAAEC,KAAK,EAAE,GAAGC,IAAAA,qBAAU;IAC5B,MAAM,EACJC,qBAAqB,EAAEC,YAAYC,wBAAwB,EAAE,EAC9D,GAAGC,IAAAA,oBAAQ;IACZ,MAAMC,uBAAuBC,IAAAA,6BAAsB,EAACP;IACpD,qBACE,qBAACQ,cAAM;QACLC,aAAa;QACbC,cAAc;QACdC,2BAAa,qBAACC,gBAAU;YAACC,IAAI;gBAAEC,UAAU;gBAAIC,YAAY;YAAI;sBAAG;;QAChEC,4BACE;;8BACE,qBAACC,uBAAe;oBAEdrB,YAAYA;oBACZsB,UAAUC,CAAAA,QAAStB,cAAcsB;oBACjCC,aAAa;mBAHT;8BAKN,qBAACC,YAAM;oBACLC,cAAW;oBACXC,yBAAW,qBAACC,UAAG;oBACfC,SAAQ;oBACRC,SAAS;wBACPpB,uBACIF,yBAAyBuB,gCAAsB,IAC/C7B,SAAS8B,qBAAa;oBAC5B;8BACD;;;;;AAOX"}