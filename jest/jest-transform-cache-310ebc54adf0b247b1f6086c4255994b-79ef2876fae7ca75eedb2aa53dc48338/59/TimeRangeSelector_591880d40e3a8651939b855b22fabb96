3c5442991b79b15994774819482ae6d6
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "TimeRangeSelector", {
    enumerable: true,
    get: function() {
        return TimeRangeSelector;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _reacthookform = require("react-hook-form");
const _core = require("@rp/react/web/mui/core");
const _WatchlistSmartGridModalutils = require("./WatchlistSmartGridModal.utils");
function TimeRangeSelector({ control, onKeyDown }) {
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_reacthookform.Controller, {
        control: control,
        name: "timeRange",
        render: ({ field })=>{
            const { value, onChange } = field;
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                sx: {
                    display: "flex",
                    gap: 1,
                    flexWrap: "wrap",
                    "& button.MuiButtonBase-root": {
                        ml: 0,
                        color: "text.secondary",
                        fontSize: 16,
                        borderRadius: 6,
                        height: 40,
                        width: "170px",
                        textTransform: "none"
                    }
                },
                children: _WatchlistSmartGridModalutils.TIME_RANGES.map((label)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_core.ToggleButton, {
                        value: label,
                        selected: value === label,
                        onClick: ()=>onChange(value === label ? null : label),
                        onKeyDown: onKeyDown,
                        children: label
                    }, label))
            });
        }
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL3dhdGNobGlzdHMvc3JjL2xpYi9XYXRjaGxpc3RTbWFydEdyaWQvV2F0Y2hsaXN0U21hcnRHcmlkTW9kYWwvVGltZVJhbmdlU2VsZWN0b3IudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEtleWJvYXJkRXZlbnRIYW5kbGVyIH0gZnJvbSBcInJlYWN0XCJcbmltcG9ydCB7IENvbnRyb2wsIENvbnRyb2xsZXIgfSBmcm9tIFwicmVhY3QtaG9vay1mb3JtXCJcbmltcG9ydCB7IEJveCwgVG9nZ2xlQnV0dG9uIH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvbXVpL2NvcmVcIlxuaW1wb3J0IHsgRm9ybVZhbHVlcywgVElNRV9SQU5HRVMgfSBmcm9tIFwiLi9XYXRjaGxpc3RTbWFydEdyaWRNb2RhbC51dGlsc1wiXG5cbnR5cGUgUHJvcHMgPSB7IGNvbnRyb2w6IENvbnRyb2w8Rm9ybVZhbHVlcz47IG9uS2V5RG93bj86IEtleWJvYXJkRXZlbnRIYW5kbGVyPEhUTUxCdXR0b25FbGVtZW50PiB9XG5cbmZ1bmN0aW9uIFRpbWVSYW5nZVNlbGVjdG9yKHsgY29udHJvbCwgb25LZXlEb3duIH06IFByb3BzKSB7XG4gIHJldHVybiAoXG4gICAgPENvbnRyb2xsZXJcbiAgICAgIGNvbnRyb2w9e2NvbnRyb2x9XG4gICAgICBuYW1lPVwidGltZVJhbmdlXCJcbiAgICAgIHJlbmRlcj17KHsgZmllbGQgfSkgPT4ge1xuICAgICAgICBjb25zdCB7IHZhbHVlLCBvbkNoYW5nZSB9ID0gZmllbGRcblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgIDxCb3hcbiAgICAgICAgICAgIHN4PXt7XG4gICAgICAgICAgICAgIGRpc3BsYXk6IFwiZmxleFwiLFxuICAgICAgICAgICAgICBnYXA6IDEsXG4gICAgICAgICAgICAgIGZsZXhXcmFwOiBcIndyYXBcIixcbiAgICAgICAgICAgICAgXCImIGJ1dHRvbi5NdWlCdXR0b25CYXNlLXJvb3RcIjoge1xuICAgICAgICAgICAgICAgIG1sOiAwLFxuICAgICAgICAgICAgICAgIGNvbG9yOiBcInRleHQuc2Vjb25kYXJ5XCIsXG4gICAgICAgICAgICAgICAgZm9udFNpemU6IDE2LFxuICAgICAgICAgICAgICAgIGJvcmRlclJhZGl1czogNixcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDQwLFxuICAgICAgICAgICAgICAgIHdpZHRoOiBcIjE3MHB4XCIsXG4gICAgICAgICAgICAgICAgdGV4dFRyYW5zZm9ybTogXCJub25lXCIsXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9fVxuICAgICAgICAgID5cbiAgICAgICAgICAgIHtUSU1FX1JBTkdFUy5tYXAobGFiZWwgPT4gKFxuICAgICAgICAgICAgICA8VG9nZ2xlQnV0dG9uXG4gICAgICAgICAgICAgICAga2V5PXtsYWJlbH1cbiAgICAgICAgICAgICAgICB2YWx1ZT17bGFiZWx9XG4gICAgICAgICAgICAgICAgc2VsZWN0ZWQ9e3ZhbHVlID09PSBsYWJlbH1cbiAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBvbkNoYW5nZSh2YWx1ZSA9PT0gbGFiZWwgPyBudWxsIDogbGFiZWwpfVxuICAgICAgICAgICAgICAgIG9uS2V5RG93bj17b25LZXlEb3dufVxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAge2xhYmVsfVxuICAgICAgICAgICAgICA8L1RvZ2dsZUJ1dHRvbj5cbiAgICAgICAgICAgICkpfVxuICAgICAgICAgIDwvQm94PlxuICAgICAgICApXG4gICAgICB9fVxuICAgIC8+XG4gIClcbn1cblxuZXhwb3J0IHsgVGltZVJhbmdlU2VsZWN0b3IgfVxuIl0sIm5hbWVzIjpbIlRpbWVSYW5nZVNlbGVjdG9yIiwiY29udHJvbCIsIm9uS2V5RG93biIsIkNvbnRyb2xsZXIiLCJuYW1lIiwicmVuZGVyIiwiZmllbGQiLCJ2YWx1ZSIsIm9uQ2hhbmdlIiwiQm94Iiwic3giLCJkaXNwbGF5IiwiZ2FwIiwiZmxleFdyYXAiLCJtbCIsImNvbG9yIiwiZm9udFNpemUiLCJib3JkZXJSYWRpdXMiLCJoZWlnaHQiLCJ3aWR0aCIsInRleHRUcmFuc2Zvcm0iLCJUSU1FX1JBTkdFUyIsIm1hcCIsImxhYmVsIiwiVG9nZ2xlQnV0dG9uIiwic2VsZWN0ZWQiLCJvbkNsaWNrIl0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkFrRFNBOzs7ZUFBQUE7Ozs7K0JBakQyQjtzQkFDRjs4Q0FDTTtBQUl4QyxTQUFTQSxrQkFBa0IsRUFBRUMsT0FBTyxFQUFFQyxTQUFTLEVBQVM7SUFDdEQscUJBQ0UscUJBQUNDLHlCQUFVO1FBQ1RGLFNBQVNBO1FBQ1RHLE1BQUs7UUFDTEMsUUFBUSxDQUFDLEVBQUVDLEtBQUssRUFBRTtZQUNoQixNQUFNLEVBQUVDLEtBQUssRUFBRUMsUUFBUSxFQUFFLEdBQUdGO1lBRTVCLHFCQUNFLHFCQUFDRyxTQUFHO2dCQUNGQyxJQUFJO29CQUNGQyxTQUFTO29CQUNUQyxLQUFLO29CQUNMQyxVQUFVO29CQUNWLCtCQUErQjt3QkFDN0JDLElBQUk7d0JBQ0pDLE9BQU87d0JBQ1BDLFVBQVU7d0JBQ1ZDLGNBQWM7d0JBQ2RDLFFBQVE7d0JBQ1JDLE9BQU87d0JBQ1BDLGVBQWU7b0JBQ2pCO2dCQUNGOzBCQUVDQyx5Q0FBVyxDQUFDQyxHQUFHLENBQUNDLENBQUFBLHNCQUNmLHFCQUFDQyxrQkFBWTt3QkFFWGpCLE9BQU9nQjt3QkFDUEUsVUFBVWxCLFVBQVVnQjt3QkFDcEJHLFNBQVMsSUFBTWxCLFNBQVNELFVBQVVnQixRQUFRLE9BQU9BO3dCQUNqRHJCLFdBQVdBO2tDQUVWcUI7dUJBTklBOztRQVdmOztBQUdOIn0=