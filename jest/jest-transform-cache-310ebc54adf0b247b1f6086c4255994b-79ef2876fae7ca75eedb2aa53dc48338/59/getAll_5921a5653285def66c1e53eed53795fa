02c32c5cb3b6ebed65ee3d8b646f7dee
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "getAll", {
    enumerable: true,
    get: function() {
        return getAll;
    }
});
const _isEmpty = /*#__PURE__*/ _interop_require_default(require("lodash/isEmpty"));
const _qs = /*#__PURE__*/ _interop_require_default(require("qs"));
const _axiosclient = require("@rp/react/axios-client");
const _fileconstants = require("../file.constants");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const serverSorting = {
    name: "file_name",
    date: "upload_ts",
    size: "raw_size"
};
const getAll = async ({ offset = 0, pageSize = _fileconstants.PAGE_SIZE, sortBy, direction, shared, fileName, ownership, owners } = {})=>{
    const query = _qs.default.stringify({
        page_size: pageSize,
        trashed: false,
        offset: offset * pageSize,
        sort_by: sortBy ? serverSorting[sortBy] : undefined,
        sort_dir: direction ? direction : undefined,
        shared: shared ? true : undefined,
        file_name: fileName ? fileName : undefined,
        ownership,
        owners: (0, _isEmpty.default)(owners) ? undefined : owners
    }, {
        arrayFormat: "repeat"
    });
    const url = `${_fileconstants.FILES_BASE_URL}${_fileconstants.FILES_ROOT}/?${query}`;
    const { data } = await _axiosclient.axiosClient.get(url);
    return data;
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3QvdGFuc3RhY2stYXBpL2ZpbGUvc3JjL3NlcnZpY2VzL2dldEFsbC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgaXNFbXB0eSBmcm9tIFwibG9kYXNoL2lzRW1wdHlcIlxuaW1wb3J0IHFzIGZyb20gXCJxc1wiXG5pbXBvcnQgeyBGaWxlQ29sbGVjdGlvbiwgRmlsZXNJbmZpbml0ZU93bmVyc2hpcCB9IGZyb20gXCJAcnAvY29tbW9uL3V0aWxzXCJcbmltcG9ydCB7IGF4aW9zQ2xpZW50IH0gZnJvbSBcIkBycC9yZWFjdC9heGlvcy1jbGllbnRcIlxuaW1wb3J0IHsgRklMRVNfQkFTRV9VUkwsIEZJTEVTX1JPT1QsIFBBR0VfU0laRSB9IGZyb20gXCIuLi9maWxlLmNvbnN0YW50c1wiXG5pbXBvcnQgeyBJbmZpbml0ZUZpbGVzUGFyYW1zIH0gZnJvbSBcIi4uL2ZpbGUudHlwZXNcIlxuXG50eXBlIEdldEFsbFBhcmFtcyA9IFBhcnRpYWw8SW5maW5pdGVGaWxlc1BhcmFtcz4gJiB7XG4gIHBhZ2VTaXplPzogbnVtYmVyXG4gIG9mZnNldD86IG51bWJlclxuICBvd25lcnNoaXA/OiBGaWxlc0luZmluaXRlT3duZXJzaGlwIC8vIHdoZW4gb3duZXJzaGlwIGRlZmluZWQsIG92ZXJyaWRlcyBzaGFyZWRcbiAgb3duZXJzPzogQXJyYXk8c3RyaW5nPlxufVxuXG5jb25zdCBzZXJ2ZXJTb3J0aW5nID0ge1xuICBuYW1lOiBcImZpbGVfbmFtZVwiLFxuICBkYXRlOiBcInVwbG9hZF90c1wiLFxuICBzaXplOiBcInJhd19zaXplXCIsXG59XG5cbmNvbnN0IGdldEFsbCA9IGFzeW5jICh7XG4gIG9mZnNldCA9IDAsXG4gIHBhZ2VTaXplID0gUEFHRV9TSVpFLFxuICBzb3J0QnksXG4gIGRpcmVjdGlvbixcbiAgc2hhcmVkLFxuICBmaWxlTmFtZSxcbiAgb3duZXJzaGlwLFxuICBvd25lcnMsXG59OiBHZXRBbGxQYXJhbXMgPSB7fSkgPT4ge1xuICBjb25zdCBxdWVyeSA9IHFzLnN0cmluZ2lmeShcbiAgICB7XG4gICAgICBwYWdlX3NpemU6IHBhZ2VTaXplLFxuICAgICAgdHJhc2hlZDogZmFsc2UsXG4gICAgICBvZmZzZXQ6IG9mZnNldCAqIHBhZ2VTaXplLFxuICAgICAgc29ydF9ieTogc29ydEJ5ID8gc2VydmVyU29ydGluZ1tzb3J0QnldIDogdW5kZWZpbmVkLFxuICAgICAgc29ydF9kaXI6IGRpcmVjdGlvbiA/IGRpcmVjdGlvbiA6IHVuZGVmaW5lZCxcbiAgICAgIHNoYXJlZDogc2hhcmVkID8gdHJ1ZSA6IHVuZGVmaW5lZCxcbiAgICAgIGZpbGVfbmFtZTogZmlsZU5hbWUgPyBmaWxlTmFtZSA6IHVuZGVmaW5lZCxcbiAgICAgIG93bmVyc2hpcCxcbiAgICAgIG93bmVyczogaXNFbXB0eShvd25lcnMpID8gdW5kZWZpbmVkIDogb3duZXJzLFxuICAgIH0sXG4gICAgeyBhcnJheUZvcm1hdDogXCJyZXBlYXRcIiB9LFxuICApXG5cbiAgY29uc3QgdXJsID0gYCR7RklMRVNfQkFTRV9VUkx9JHtGSUxFU19ST09UfS8/JHtxdWVyeX1gXG4gIGNvbnN0IHsgZGF0YSB9ID0gYXdhaXQgYXhpb3NDbGllbnQuZ2V0PEZpbGVDb2xsZWN0aW9uPih1cmwpXG4gIHJldHVybiBkYXRhXG59XG5cbmV4cG9ydCB7IGdldEFsbCB9XG4iXSwibmFtZXMiOlsiZ2V0QWxsIiwic2VydmVyU29ydGluZyIsIm5hbWUiLCJkYXRlIiwic2l6ZSIsIm9mZnNldCIsInBhZ2VTaXplIiwiUEFHRV9TSVpFIiwic29ydEJ5IiwiZGlyZWN0aW9uIiwic2hhcmVkIiwiZmlsZU5hbWUiLCJvd25lcnNoaXAiLCJvd25lcnMiLCJxdWVyeSIsInFzIiwic3RyaW5naWZ5IiwicGFnZV9zaXplIiwidHJhc2hlZCIsInNvcnRfYnkiLCJ1bmRlZmluZWQiLCJzb3J0X2RpciIsImZpbGVfbmFtZSIsImlzRW1wdHkiLCJhcnJheUZvcm1hdCIsInVybCIsIkZJTEVTX0JBU0VfVVJMIiwiRklMRVNfUk9PVCIsImRhdGEiLCJheGlvc0NsaWVudCIsImdldCJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkFrRFNBOzs7ZUFBQUE7OztnRUFsRFc7MkRBQ0w7NkJBRWE7K0JBQzBCOzs7Ozs7QUFVdEQsTUFBTUMsZ0JBQWdCO0lBQ3BCQyxNQUFNO0lBQ05DLE1BQU07SUFDTkMsTUFBTTtBQUNSO0FBRUEsTUFBTUosU0FBUyxPQUFPLEVBQ3BCSyxTQUFTLENBQUMsRUFDVkMsV0FBV0Msd0JBQVMsRUFDcEJDLE1BQU0sRUFDTkMsU0FBUyxFQUNUQyxNQUFNLEVBQ05DLFFBQVEsRUFDUkMsU0FBUyxFQUNUQyxNQUFNLEVBQ08sR0FBRyxDQUFDLENBQUM7SUFDbEIsTUFBTUMsUUFBUUMsV0FBRSxDQUFDQyxTQUFTLENBQ3hCO1FBQ0VDLFdBQVdYO1FBQ1hZLFNBQVM7UUFDVGIsUUFBUUEsU0FBU0M7UUFDakJhLFNBQVNYLFNBQVNQLGFBQWEsQ0FBQ08sT0FBTyxHQUFHWTtRQUMxQ0MsVUFBVVosWUFBWUEsWUFBWVc7UUFDbENWLFFBQVFBLFNBQVMsT0FBT1U7UUFDeEJFLFdBQVdYLFdBQVdBLFdBQVdTO1FBQ2pDUjtRQUNBQyxRQUFRVSxJQUFBQSxnQkFBTyxFQUFDVixVQUFVTyxZQUFZUDtJQUN4QyxHQUNBO1FBQUVXLGFBQWE7SUFBUztJQUcxQixNQUFNQyxNQUFNLENBQUMsRUFBRUMsNkJBQWMsQ0FBQyxFQUFFQyx5QkFBVSxDQUFDLEVBQUUsRUFBRWIsTUFBTSxDQUFDO0lBQ3RELE1BQU0sRUFBRWMsSUFBSSxFQUFFLEdBQUcsTUFBTUMsd0JBQVcsQ0FBQ0MsR0FBRyxDQUFpQkw7SUFDdkQsT0FBT0c7QUFDVCJ9