{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/composite-components/src/PaginatedList/PaginatedList.tsx"],"sourcesContent":["import { JSX, useState } from \"react\"\nimport { Box, Pagination, SxProps } from \"@rp/react/web/mui/core\"\n\ntype Props<ItemType> = {\n  items: Array<ItemType>\n  renderItem: (item: ItemType, index: number) => JSX.Element\n  itemsPerPage?: number\n  sx?: SxProps\n}\n\nfunction PaginatedList<ItemType extends { id: string }>({\n  renderItem,\n  items,\n  itemsPerPage = 4,\n  sx,\n}: Props<ItemType>) {\n  const [page, setPage] = useState(1)\n  const start = (page - 1) * itemsPerPage\n  const end = start + itemsPerPage\n  return (\n    <Box sx={sx}>\n      <Box className=\"items-wrapper\">{items.slice(start, end).map(renderItem)}</Box>\n      {items.length > itemsPerPage ? (\n        <Box className=\"pagination\">\n          <Pagination\n            count={Math.ceil(items.length / itemsPerPage)}\n            page={page}\n            onChange={(_, num) => setPage(num)}\n          />\n        </Box>\n      ) : null}\n    </Box>\n  )\n}\n\nexport { PaginatedList }\n"],"names":["PaginatedList","renderItem","items","itemsPerPage","sx","page","setPage","useState","start","end","Box","className","slice","map","length","Pagination","count","Math","ceil","onChange","_","num"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAmCSA;;;eAAAA;;;;uBAnCqB;sBACW;AASzC,SAASA,cAA+C,EACtDC,UAAU,EACVC,KAAK,EACLC,eAAe,CAAC,EAChBC,EAAE,EACc;IAChB,MAAM,CAACC,MAAMC,QAAQ,GAAGC,IAAAA,eAAQ,EAAC;IACjC,MAAMC,QAAQ,AAACH,CAAAA,OAAO,CAAA,IAAKF;IAC3B,MAAMM,MAAMD,QAAQL;IACpB,qBACE,sBAACO,SAAG;QAACN,IAAIA;;0BACP,qBAACM,SAAG;gBAACC,WAAU;0BAAiBT,MAAMU,KAAK,CAACJ,OAAOC,KAAKI,GAAG,CAACZ;;YAC3DC,MAAMY,MAAM,GAAGX,6BACd,qBAACO,SAAG;gBAACC,WAAU;0BACb,cAAA,qBAACI,gBAAU;oBACTC,OAAOC,KAAKC,IAAI,CAAChB,MAAMY,MAAM,GAAGX;oBAChCE,MAAMA;oBACNc,UAAU,CAACC,GAAGC,MAAQf,QAAQe;;iBAGhC;;;AAGV"}