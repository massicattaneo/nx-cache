63438cd079455da0e65e50abadb00893
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    useVisitedDocument: function() {
        return useVisitedDocument;
    },
    visitedDocumentAtom: function() {
        return visitedDocumentAtom;
    }
});
const _jotai = require("jotai");
const _utils = require("jotai/utils");
const _clerkreact = require("@clerk/clerk-react");
const visitedDocumentAtom = (0, _utils.atomWithStorage)("visitedDocuments", {});
// Remove 90 days old documents
visitedDocumentAtom.onMount = (setAtom)=>{
    const now = new Date().getTime();
    setAtom((old)=>{
        const newVisitedDocuments = Object.entries(old).filter(([_, value])=>{
            const { timestamp } = value;
            return now - timestamp < 90 * 24 * 60 * 60 * 1000;
        });
        return Object.fromEntries(newVisitedDocuments);
    });
};
const useVisitedDocument = (documentId)=>{
    var _docs_documentId, _user_primaryEmailAddress;
    const [docs] = (0, _jotai.useAtom)(visitedDocumentAtom);
    const { user } = (0, _clerkreact.useUser)();
    const isVisited = docs[documentId] && (docs === null || docs === void 0 ? void 0 : (_docs_documentId = docs[documentId]) === null || _docs_documentId === void 0 ? void 0 : _docs_documentId.userId) === (user === null || user === void 0 ? void 0 : (_user_primaryEmailAddress = user.primaryEmailAddress) === null || _user_primaryEmailAddress === void 0 ? void 0 : _user_primaryEmailAddress.emailAddress);
    return isVisited;
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9ob29rcy9zcmMvdXNlVmlzaXRlZERvY3VtZW50LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZUF0b20gfSBmcm9tIFwiam90YWlcIlxuaW1wb3J0IHsgYXRvbVdpdGhTdG9yYWdlIH0gZnJvbSBcImpvdGFpL3V0aWxzXCJcbmltcG9ydCB7IHVzZVVzZXIgfSBmcm9tIFwiQGNsZXJrL2NsZXJrLXJlYWN0XCJcblxudHlwZSBWaXNpdGVkRG9jdW1lbnQgPSB7XG4gIFtrZXk6IHN0cmluZ106IHtcbiAgICB0aW1lc3RhbXA6IG51bWJlclxuICAgIHVzZXJJZDogc3RyaW5nXG4gIH1cbn1cblxuY29uc3QgdmlzaXRlZERvY3VtZW50QXRvbSA9IGF0b21XaXRoU3RvcmFnZTxWaXNpdGVkRG9jdW1lbnQ+KFwidmlzaXRlZERvY3VtZW50c1wiLCB7fSlcbi8vIFJlbW92ZSA5MCBkYXlzIG9sZCBkb2N1bWVudHNcbnZpc2l0ZWREb2N1bWVudEF0b20ub25Nb3VudCA9IHNldEF0b20gPT4ge1xuICBjb25zdCBub3cgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKVxuICBzZXRBdG9tKG9sZCA9PiB7XG4gICAgY29uc3QgbmV3VmlzaXRlZERvY3VtZW50cyA9IE9iamVjdC5lbnRyaWVzKG9sZCkuZmlsdGVyKChbXywgdmFsdWVdKSA9PiB7XG4gICAgICBjb25zdCB7IHRpbWVzdGFtcCB9ID0gdmFsdWVcbiAgICAgIHJldHVybiBub3cgLSB0aW1lc3RhbXAgPCA5MCAqIDI0ICogNjAgKiA2MCAqIDEwMDBcbiAgICB9KVxuICAgIHJldHVybiBPYmplY3QuZnJvbUVudHJpZXMobmV3VmlzaXRlZERvY3VtZW50cylcbiAgfSlcbn1cblxuY29uc3QgdXNlVmlzaXRlZERvY3VtZW50ID0gKGRvY3VtZW50SWQ6IHN0cmluZykgPT4ge1xuICBjb25zdCBbZG9jc10gPSB1c2VBdG9tKHZpc2l0ZWREb2N1bWVudEF0b20pXG4gIGNvbnN0IHsgdXNlciB9ID0gdXNlVXNlcigpXG5cbiAgY29uc3QgaXNWaXNpdGVkID1cbiAgICBkb2NzW2RvY3VtZW50SWRdICYmIGRvY3M/Lltkb2N1bWVudElkXT8udXNlcklkID09PSB1c2VyPy5wcmltYXJ5RW1haWxBZGRyZXNzPy5lbWFpbEFkZHJlc3NcblxuICByZXR1cm4gaXNWaXNpdGVkXG59XG5cbmV4cG9ydCB7IHZpc2l0ZWREb2N1bWVudEF0b20gfVxuZXhwb3J0IHR5cGUgeyBWaXNpdGVkRG9jdW1lbnQgfVxuZXhwb3J0IHsgdXNlVmlzaXRlZERvY3VtZW50IH1cbiJdLCJuYW1lcyI6WyJ1c2VWaXNpdGVkRG9jdW1lbnQiLCJ2aXNpdGVkRG9jdW1lbnRBdG9tIiwiYXRvbVdpdGhTdG9yYWdlIiwib25Nb3VudCIsInNldEF0b20iLCJub3ciLCJEYXRlIiwiZ2V0VGltZSIsIm9sZCIsIm5ld1Zpc2l0ZWREb2N1bWVudHMiLCJPYmplY3QiLCJlbnRyaWVzIiwiZmlsdGVyIiwiXyIsInZhbHVlIiwidGltZXN0YW1wIiwiZnJvbUVudHJpZXMiLCJkb2N1bWVudElkIiwiZG9jcyIsInVzZXIiLCJ1c2VBdG9tIiwidXNlVXNlciIsImlzVmlzaXRlZCIsInVzZXJJZCIsInByaW1hcnlFbWFpbEFkZHJlc3MiLCJlbWFpbEFkZHJlc3MiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztJQW9DU0Esa0JBQWtCO2VBQWxCQTs7SUFGQUMsbUJBQW1CO2VBQW5CQTs7O3VCQWxDZTt1QkFDUTs0QkFDUjtBQVN4QixNQUFNQSxzQkFBc0JDLElBQUFBLHNCQUFlLEVBQWtCLG9CQUFvQixDQUFDO0FBQ2xGLCtCQUErQjtBQUMvQkQsb0JBQW9CRSxPQUFPLEdBQUdDLENBQUFBO0lBQzVCLE1BQU1DLE1BQU0sSUFBSUMsT0FBT0MsT0FBTztJQUM5QkgsUUFBUUksQ0FBQUE7UUFDTixNQUFNQyxzQkFBc0JDLE9BQU9DLE9BQU8sQ0FBQ0gsS0FBS0ksTUFBTSxDQUFDLENBQUMsQ0FBQ0MsR0FBR0MsTUFBTTtZQUNoRSxNQUFNLEVBQUVDLFNBQVMsRUFBRSxHQUFHRDtZQUN0QixPQUFPVCxNQUFNVSxZQUFZLEtBQUssS0FBSyxLQUFLLEtBQUs7UUFDL0M7UUFDQSxPQUFPTCxPQUFPTSxXQUFXLENBQUNQO0lBQzVCO0FBQ0Y7QUFFQSxNQUFNVCxxQkFBcUIsQ0FBQ2lCO1FBS0pDLGtCQUErQkM7SUFKckQsTUFBTSxDQUFDRCxLQUFLLEdBQUdFLElBQUFBLGNBQU8sRUFBQ25CO0lBQ3ZCLE1BQU0sRUFBRWtCLElBQUksRUFBRSxHQUFHRSxJQUFBQSxtQkFBTztJQUV4QixNQUFNQyxZQUNKSixJQUFJLENBQUNELFdBQVcsSUFBSUMsQ0FBQUEsaUJBQUFBLDRCQUFBQSxtQkFBQUEsSUFBTSxDQUFDRCxXQUFXLGNBQWxCQyx1Q0FBQUEsaUJBQW9CSyxNQUFNLE9BQUtKLGlCQUFBQSw0QkFBQUEsNEJBQUFBLEtBQU1LLG1CQUFtQixjQUF6QkwsZ0RBQUFBLDBCQUEyQk0sWUFBWTtJQUU1RixPQUFPSDtBQUNUIn0=