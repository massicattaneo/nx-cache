1d08e39f56ffd129726af7cc44c77771
// eslint-disable-next-line @typescript-eslint/no-explicit-any
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "EventEmitter", {
    enumerable: true,
    get: function() {
        return EventEmitter;
    }
});
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
class EventEmitter {
    on(eventName, fn) {
        this.listeners[eventName] = (this.listeners[eventName] || []).concat(fn);
        return ()=>this.off(eventName, fn);
    }
    off(eventName, fn) {
        if (!fn) {
            this.listeners[eventName] = [];
        }
        this.listeners[eventName] = (this.listeners[eventName] || []).filter((f)=>f !== fn);
        return fn;
    }
    emit(eventName, params) {
        var _this_listeners_eventName;
        if (!this.listeners[eventName]) return;
        let index = 0;
        while((_this_listeners_eventName = this.listeners[eventName]) === null || _this_listeners_eventName === void 0 ? void 0 : _this_listeners_eventName[index]){
            var _this_listeners_eventName_index, _this_listeners_eventName1;
            (_this_listeners_eventName1 = this.listeners[eventName]) === null || _this_listeners_eventName1 === void 0 ? void 0 : (_this_listeners_eventName_index = _this_listeners_eventName1[index]) === null || _this_listeners_eventName_index === void 0 ? void 0 : _this_listeners_eventName_index.call(_this_listeners_eventName1, params);
            index++;
        }
    }
    constructor(){
        _define_property(this, "listeners", void 0);
        this.listeners = {};
    }
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvY29tbW9uL3V0aWxzL3NyYy9saWIvZGVzaWduLXBhdHRlcm5zL0V2ZW50RW1pdHRlci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxudHlwZSBFdmVudE1hcCA9IFJlY29yZDxzdHJpbmcsIGFueT5cblxudHlwZSBFdmVudEtleTxUIGV4dGVuZHMgRXZlbnRNYXA+ID0gc3RyaW5nICYga2V5b2YgVFxudHlwZSBFdmVudFJlY2VpdmVyPFQ+ID0gKHBhcmFtczogVCkgPT4gdm9pZFxuXG5jbGFzcyBFdmVudEVtaXR0ZXI8VCBleHRlbmRzIEV2ZW50TWFwPiB7XG4gIHByaXZhdGUgbGlzdGVuZXJzOiB7XG4gICAgW0sgaW4ga2V5b2YgRXZlbnRNYXBdPzogQXJyYXk8KHA6IEV2ZW50TWFwW0tdKSA9PiB2b2lkPlxuICB9XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMubGlzdGVuZXJzID0ge31cbiAgfVxuICBvbjxLIGV4dGVuZHMgRXZlbnRLZXk8VD4+KGV2ZW50TmFtZTogSywgZm46IEV2ZW50UmVjZWl2ZXI8VFtLXT4pIHtcbiAgICB0aGlzLmxpc3RlbmVyc1tldmVudE5hbWVdID0gKHRoaXMubGlzdGVuZXJzW2V2ZW50TmFtZV0gfHwgW10pLmNvbmNhdChmbilcbiAgICByZXR1cm4gKCkgPT4gdGhpcy5vZmYoZXZlbnROYW1lLCBmbilcbiAgfVxuICBvZmY8SyBleHRlbmRzIEV2ZW50S2V5PFQ+PihldmVudE5hbWU6IEssIGZuPzogRXZlbnRSZWNlaXZlcjxUW0tdPikge1xuICAgIGlmICghZm4pIHtcbiAgICAgIHRoaXMubGlzdGVuZXJzW2V2ZW50TmFtZV0gPSBbXVxuICAgIH1cbiAgICB0aGlzLmxpc3RlbmVyc1tldmVudE5hbWVdID0gKHRoaXMubGlzdGVuZXJzW2V2ZW50TmFtZV0gfHwgW10pLmZpbHRlcihmID0+IGYgIT09IGZuKVxuICAgIHJldHVybiBmblxuICB9XG4gIGVtaXQ8SyBleHRlbmRzIEV2ZW50S2V5PFQ+PihldmVudE5hbWU6IEssIHBhcmFtczogVFtLXSkge1xuICAgIGlmICghdGhpcy5saXN0ZW5lcnNbZXZlbnROYW1lXSkgcmV0dXJuXG4gICAgbGV0IGluZGV4ID0gMFxuICAgIHdoaWxlICh0aGlzLmxpc3RlbmVyc1tldmVudE5hbWVdPy5baW5kZXhdKSB7XG4gICAgICB0aGlzLmxpc3RlbmVyc1tldmVudE5hbWVdPy5baW5kZXhdPy4ocGFyYW1zKVxuICAgICAgaW5kZXgrK1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgeyBFdmVudEVtaXR0ZXIgfVxuIl0sIm5hbWVzIjpbIkV2ZW50RW1pdHRlciIsIm9uIiwiZXZlbnROYW1lIiwiZm4iLCJsaXN0ZW5lcnMiLCJjb25jYXQiLCJvZmYiLCJmaWx0ZXIiLCJmIiwiZW1pdCIsInBhcmFtcyIsImluZGV4IiwiY29uc3RydWN0b3IiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiJBQUFBLDhEQUE4RDs7Ozs7K0JBa0NyREE7OztlQUFBQTs7Ozs7Ozs7Ozs7Ozs7OztBQTVCVCxNQUFNQTtJQU9KQyxHQUEwQkMsU0FBWSxFQUFFQyxFQUF1QixFQUFFO1FBQy9ELElBQUksQ0FBQ0MsU0FBUyxDQUFDRixVQUFVLEdBQUcsQUFBQyxDQUFBLElBQUksQ0FBQ0UsU0FBUyxDQUFDRixVQUFVLElBQUksRUFBRSxBQUFELEVBQUdHLE1BQU0sQ0FBQ0Y7UUFDckUsT0FBTyxJQUFNLElBQUksQ0FBQ0csR0FBRyxDQUFDSixXQUFXQztJQUNuQztJQUNBRyxJQUEyQkosU0FBWSxFQUFFQyxFQUF3QixFQUFFO1FBQ2pFLElBQUksQ0FBQ0EsSUFBSTtZQUNQLElBQUksQ0FBQ0MsU0FBUyxDQUFDRixVQUFVLEdBQUcsRUFBRTtRQUNoQztRQUNBLElBQUksQ0FBQ0UsU0FBUyxDQUFDRixVQUFVLEdBQUcsQUFBQyxDQUFBLElBQUksQ0FBQ0UsU0FBUyxDQUFDRixVQUFVLElBQUksRUFBRSxBQUFELEVBQUdLLE1BQU0sQ0FBQ0MsQ0FBQUEsSUFBS0EsTUFBTUw7UUFDaEYsT0FBT0E7SUFDVDtJQUNBTSxLQUE0QlAsU0FBWSxFQUFFUSxNQUFZLEVBQUU7WUFHL0M7UUFGUCxJQUFJLENBQUMsSUFBSSxDQUFDTixTQUFTLENBQUNGLFVBQVUsRUFBRTtRQUNoQyxJQUFJUyxRQUFRO1FBQ1osT0FBTyw0QkFBQSxJQUFJLENBQUNQLFNBQVMsQ0FBQ0YsVUFBVSxjQUF6QixnREFBQSx5QkFBMkIsQ0FBQ1MsTUFBTSxDQUFFO2dCQUN6QyxpQ0FBQTthQUFBLDZCQUFBLElBQUksQ0FBQ1AsU0FBUyxDQUFDRixVQUFVLGNBQXpCLGtEQUFBLGtDQUFBLDBCQUEyQixDQUFDUyxNQUFNLGNBQWxDLHNEQUFBLHFDQUFBLDRCQUFxQ0Q7WUFDckNDO1FBQ0Y7SUFDRjtJQXJCQUMsYUFBYztRQUhkLHVCQUFRUixhQUFSLEtBQUE7UUFJRSxJQUFJLENBQUNBLFNBQVMsR0FBRyxDQUFDO0lBQ3BCO0FBb0JGIn0=