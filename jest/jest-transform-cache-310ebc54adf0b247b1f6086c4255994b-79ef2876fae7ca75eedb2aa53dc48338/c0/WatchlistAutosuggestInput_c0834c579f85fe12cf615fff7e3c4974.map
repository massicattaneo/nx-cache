{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/search-autosuggest-input/src/lib/UnifiedSearch/WatchlistAutosuggestInput.tsx"],"sourcesContent":["import {\n  Dispatch,\n  PropsWithChildren,\n  SetStateAction,\n  forwardRef,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\"\nimport {\n  EnhancedSuggestion,\n  WatchlistSuggestionFilters,\n  groupCompanySuggestions,\n  isEntitySuggestion,\n  useWatchlistSuggestions,\n} from \"@rp/react/tanstack-api/suggestion\"\nimport { IconButton, InputAdornment, useTheme } from \"@rp/react/web/mui/core\"\nimport { ArrowBack, Search } from \"@rp/react/web/mui/icons\"\nimport { ResultsAutosuggestInputStyled, autosuggestInputClasses } from \"./AutoCompleteCustoms\"\nimport { WatchlistAutosuggestPopper } from \"./WatchlistAutosuggestPopper\"\nimport { WatchlistAutosuggestPopperOption } from \"./WatchlistAutosuggestPopperOption\"\nimport { useHandleKeyDown } from \"./useHandleKeyDown\"\n\nexport type SuggestionCustomFilter = \"all\" | \"stocks\" | \"etfs\" | \"privateCompanies\"\n\ntype Props = PropsWithChildren<{\n  setQuery: (query: string) => void\n  rawQuery: string\n  placeholder: string\n  onChange: (item: EnhancedSuggestion) => void\n  onClose?: () => void\n  open: boolean\n  setOpen: Dispatch<SetStateAction<boolean>>\n  selectedItems?: Array<string>\n  displayItems?: number\n  disabled?: boolean\n  clearOnEnter?: boolean\n  autoFocus?: boolean\n  inputProps?: Record<string, unknown>\n  data: ReturnType<typeof useWatchlistSuggestions>[\"data\"]\n  isLoading?: boolean\n  hasNextPage: ReturnType<typeof useWatchlistSuggestions>[\"hasNextPage\"]\n  fetchNextPage: ReturnType<typeof useWatchlistSuggestions>[\"fetchNextPage\"]\n  showTicker?: boolean\n  onHorizontalSelect?: (index: 1 | -1) => void\n}>\n\nexport type WatchlistAutosuggestInputRef = {\n  focus: () => void\n  addEventListener: (type: string, listener: EventListener) => void\n  removeEventListener: (type: string, listener: EventListener) => void\n}\n\nexport const getWatchlistAutosuggestFilters = (\n  customFilter?: SuggestionCustomFilter,\n): WatchlistSuggestionFilters[0] => {\n  switch (customFilter) {\n    case \"stocks\":\n      return { category: [\"Companies\"], group1: [\"Public\"] }\n    case \"privateCompanies\":\n      return { category: [\"Companies\"], group1: [\"Private\"] }\n    case \"etfs\":\n      return { category: [\"ETFs\"] }\n    default:\n      return { category: [\"Companies\", \"ETFs\"] }\n  }\n}\n\nconst SELECT_LINE_HEIGHT = 40\nconst AUTOSUGGEST_ITEM_PREFIX = \"autosuggest-item-\"\n\nexport const WatchlistAutosuggestInput = forwardRef<WatchlistAutosuggestInputRef, Props>(\n  (\n    {\n      onChange,\n      placeholder,\n      onClose,\n      open,\n      setOpen,\n      selectedItems,\n      displayItems = 10,\n      disabled,\n      clearOnEnter,\n      autoFocus,\n      inputProps,\n      setQuery,\n      rawQuery,\n      data,\n      isLoading,\n      hasNextPage,\n      fetchNextPage,\n      showTicker,\n      onHorizontalSelect,\n      children,\n    },\n    ref,\n  ) => {\n    const theme = useTheme()\n    const [visibleSubsidiaries, setVisibleSubsidiaries] = useState<Array<string>>([])\n    const [containerRef, setContainerRef] = useState<HTMLDivElement | null>(null)\n    const inputRef = useRef<HTMLInputElement>(null)\n\n    useImperativeHandle(ref, () => ({\n      focus: () => {\n        if (inputRef.current) {\n          inputRef.current.focus()\n        }\n      },\n      addEventListener: (type, listener) => {\n        inputRef.current?.addEventListener(type, listener)\n      },\n      removeEventListener: (type, listener) => {\n        inputRef.current?.removeEventListener(type, listener)\n      },\n    }))\n\n    const options = useMemo(() => {\n      const flatten = data?.pages.flatMap(page => page.results) || []\n      return groupCompanySuggestions(flatten, visibleSubsidiaries)\n    }, [data?.pages, visibleSubsidiaries])\n\n    useEffect(() => {\n      const withoutSelected = options.filter(item => !selectedItems?.includes(item.id)) || []\n      if (withoutSelected && withoutSelected.length < displayItems && hasNextPage) {\n        fetchNextPage()\n      }\n    }, [fetchNextPage, hasNextPage, options, displayItems, selectedItems])\n\n    const { handleInputKeydown, selectedOption, setSelectedOption } =\n      useHandleKeyDown<EnhancedSuggestion>(options, {\n        autoSelectFirstOption: open,\n        onArrowDown: useCallback(\n          id => {\n            if (id) {\n              const selectedLi = document.querySelector(`#${AUTOSUGGEST_ITEM_PREFIX}${id}`)\n              selectedLi?.scrollIntoView({ behavior: \"smooth\", block: \"nearest\" })\n            }\n            setOpen(true)\n          },\n          [setOpen],\n        ),\n        onArrowUp: useCallback(\n          id => {\n            if (id) {\n              const selectedLi = document.querySelector(`#${AUTOSUGGEST_ITEM_PREFIX}${id}`)\n              selectedLi?.scrollIntoView({ behavior: \"smooth\", block: \"nearest\" })\n            }\n            setOpen(true)\n          },\n          [setOpen],\n        ),\n        onArrowLeft: useCallback(() => {\n          if (rawQuery === \"\") onHorizontalSelect?.(-1)\n        }, [rawQuery, onHorizontalSelect]),\n        onArrowRight: useCallback(() => {\n          if (rawQuery === \"\") onHorizontalSelect?.(1)\n        }, [rawQuery, onHorizontalSelect]),\n        onEscape: useCallback(() => setOpen(false), [setOpen]),\n        onEnter: useCallback(\n          index => {\n            if (index !== null) {\n              onChange(options[index])\n            }\n            if (clearOnEnter) {\n              setQuery(\"\")\n            }\n            setOpen(false)\n            setQuery(\"\")\n            setVisibleSubsidiaries([])\n          },\n          [clearOnEnter, onChange, options, setOpen, setQuery],\n        ),\n      })\n\n    const handleInputChange = useCallback(\n      (event: React.ChangeEvent<HTMLInputElement>) => {\n        setOpen(true)\n        setSelectedOption(null)\n        setVisibleSubsidiaries([])\n        setQuery(event.target.value)\n      },\n      [setOpen, setQuery, setSelectedOption],\n    )\n\n    const handleChange = useCallback(\n      (value: EnhancedSuggestion) => {\n        if (!value) return\n        setOpen(false)\n        setQuery(\"\")\n        onChange(value)\n        setSelectedOption(null)\n        setVisibleSubsidiaries([])\n      },\n      [onChange, setOpen, setQuery, setSelectedOption],\n    )\n\n    const toggleSubsidiaries = useCallback(\n      (parentId: string) => {\n        const key = parentId.replace(AUTOSUGGEST_ITEM_PREFIX, \"\")\n        setSelectedOption(key)\n        const isCurrentlyOpen = visibleSubsidiaries.includes(key)\n\n        if (isCurrentlyOpen) {\n          setVisibleSubsidiaries(prev => prev.filter(id => id !== key))\n        } else {\n          setVisibleSubsidiaries(prev => [...prev, key])\n        }\n      },\n      [setSelectedOption, visibleSubsidiaries],\n    )\n\n    const onClickAway = useCallback(() => {\n      if (document.activeElement === inputRef.current) return\n      setOpen(false)\n      setQuery(\"\")\n      setSelectedOption(null)\n    }, [setOpen, setQuery, setSelectedOption])\n\n    return (\n      <>\n        <ResultsAutosuggestInputStyled\n          sx={{\n            \"& .Mui-focused fieldset\": {\n              borderColor: \"rgba(255, 255, 255, 0.3) !important\",\n              borderBottomLeftRadius: \"8px\",\n              borderBottomRightRadius: \"8px\",\n            },\n            [`& .Mui-focused.${autosuggestInputClasses.input}`]: {\n              borderBottomLeftRadius: \"8px\",\n              borderBottomRightRadius: \"8px\",\n            },\n          }}\n          inputRef={inputRef}\n          inputVariant={\"search\"}\n          isPopperOpen={open && options.length > 0}\n          autoFocus={autoFocus}\n          classes={{ root: autosuggestInputClasses.inputRoot }}\n          placeholder={placeholder}\n          variant={\"outlined\"}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          InputProps={{\n            classes: { root: autosuggestInputClasses.input, input: \"data-hj-allow\" },\n            ...inputProps,\n            startAdornment: onClose ? (\n              <InputAdornment position=\"start\">\n                <IconButton data-testid=\"back-arrow-button\" onClick={onClose} size=\"small\">\n                  <ArrowBack />\n                </IconButton>\n              </InputAdornment>\n            ) : (\n              <InputAdornment position=\"start\">\n                <Search />\n              </InputAdornment>\n            ),\n          }}\n          value={rawQuery}\n          data-testid=\"unified-search-autocomplete\"\n          autoComplete=\"off\"\n          onClick={() => setOpen(true)}\n          onChange={handleInputChange}\n          onBlur={() => setSelectedOption(null)}\n          onFocus={() => setOpen(true)}\n          ref={setContainerRef}\n          onKeyDown={handleInputKeydown}\n          disabled={disabled}\n        />\n\n        <WatchlistAutosuggestPopper\n          open={open}\n          onClickAway={onClickAway}\n          options={options}\n          isLoading={isLoading}\n          maxPopperHeight={displayItems * SELECT_LINE_HEIGHT}\n          renderOption={option => {\n            const key = isEntitySuggestion(option) ? option.key : option.id\n            return (\n              <WatchlistAutosuggestPopperOption\n                toggleSubsidiaries={toggleSubsidiaries}\n                id={`${AUTOSUGGEST_ITEM_PREFIX}${key}`}\n                isChecked={selectedItems?.includes(key)}\n                selectedOption={selectedOption}\n                key={key}\n                highlightValue={rawQuery}\n                onClick={handleChange}\n                entity={option}\n                showTicker={showTicker}\n                backgroundColor={theme.palette.elevation.dp08}\n              />\n            )\n          }}\n          inputRef={containerRef}\n          backgroundColor={theme.palette.elevation.dp08}\n        >\n          {children}\n        </WatchlistAutosuggestPopper>\n      </>\n    )\n  },\n)\n"],"names":["WatchlistAutosuggestInput","getWatchlistAutosuggestFilters","customFilter","category","group1","SELECT_LINE_HEIGHT","AUTOSUGGEST_ITEM_PREFIX","forwardRef","onChange","placeholder","onClose","open","setOpen","selectedItems","displayItems","disabled","clearOnEnter","autoFocus","inputProps","setQuery","rawQuery","data","isLoading","hasNextPage","fetchNextPage","showTicker","onHorizontalSelect","children","ref","theme","useTheme","visibleSubsidiaries","setVisibleSubsidiaries","useState","containerRef","setContainerRef","inputRef","useRef","useImperativeHandle","focus","current","addEventListener","type","listener","removeEventListener","options","useMemo","flatten","pages","flatMap","page","results","groupCompanySuggestions","useEffect","withoutSelected","filter","item","includes","id","length","handleInputKeydown","selectedOption","setSelectedOption","useHandleKeyDown","autoSelectFirstOption","onArrowDown","useCallback","selectedLi","document","querySelector","scrollIntoView","behavior","block","onArrowUp","onArrowLeft","onArrowRight","onEscape","onEnter","index","handleInputChange","event","target","value","handleChange","toggleSubsidiaries","parentId","key","replace","isCurrentlyOpen","prev","onClickAway","activeElement","ResultsAutosuggestInputStyled","sx","borderColor","borderBottomLeftRadius","borderBottomRightRadius","autosuggestInputClasses","input","inputVariant","isPopperOpen","classes","root","inputRoot","variant","InputLabelProps","shrink","InputProps","startAdornment","InputAdornment","position","IconButton","data-testid","onClick","size","ArrowBack","Search","autoComplete","onBlur","onFocus","onKeyDown","WatchlistAutosuggestPopper","maxPopperHeight","renderOption","option","isEntitySuggestion","WatchlistAutosuggestPopperOption","isChecked","highlightValue","entity","backgroundColor","palette","elevation","dp08"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}