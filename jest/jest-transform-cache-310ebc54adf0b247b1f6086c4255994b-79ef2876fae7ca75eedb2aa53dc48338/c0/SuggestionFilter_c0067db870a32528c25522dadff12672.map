{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/watchlist-editor/src/SuggestionFilters/SuggestionFilter.tsx"],"sourcesContent":["import { Dispatch, SetStateAction } from \"react\"\nimport { capitalize, formatTopicGroupToLabel } from \"@rp/common/utils\"\nimport { useDebouncedState } from \"@rp/react/common/hooks\"\nimport { WatchlistGroups } from \"@rp/react/tanstack-api/discovery-panel-config\"\nimport {\n  GenericWatchlistAutosuggestPostParams,\n  WatchlistAutosuggestPostResponse,\n  WatchlistSuggestionFilters,\n  useWatchlistFacets,\n} from \"@rp/react/tanstack-api/suggestion\"\nimport { MultiCheckboxSelect } from \"@rp/react/web/common/composite-components\"\nimport { MultiCheckboxSelectItem } from \"./MultiCheckboxSelectItem\"\n\ntype FacetItem = { value: string; count: number }\n\ntype Props = {\n  categoryFilter: string\n  facets: Required<WatchlistAutosuggestPostResponse>[\"facets\"]\n  isLoading?: boolean\n  field: WatchlistGroups[\"fields\"][number]\n  values: Array<string>\n  setFilters?: Dispatch<SetStateAction<WatchlistSuggestionFilters>>\n  suggestionQuery: GenericWatchlistAutosuggestPostParams\n}\n\nconst formatLabel = (category: string, value: string) => {\n  if (category !== \"Topics\") return value\n  return formatTopicGroupToLabel(value)\n}\n\nconst mapToSuggestItem = (category: string, values: Array<string>) =>\n  values.map(value => ({ value, label: formatLabel(category, value), count: 0 }))\n\nconst removeDuplicates =\n  (values: Array<string>) => (item: FacetItem, index: number, array: Array<FacetItem>) => {\n    if (values.includes(item.value)) return false\n    const itemIndex = array.findIndex(sub => sub.value === item.value)\n    return index === itemIndex\n  }\n\nconst SuggestionFilter = ({\n  facets,\n  isLoading,\n  field,\n  values,\n  categoryFilter,\n  setFilters,\n  suggestionQuery,\n}: Props) => {\n  const [search, setSearch, rawSearch] = useDebouncedState(\"\", 300)\n  const params = {\n    ...suggestionQuery,\n    facetQuery: { field: field.key, value: search },\n  }\n  const { data, isLoading: isFetching } = useWatchlistFacets(params)\n  const loading = isLoading || (!!rawSearch && isFetching)\n\n  const items = [...(facets[field.key] ?? []), ...(data?.results ?? [])]\n    .filter(removeDuplicates(values))\n    .map(i => ({\n      ...i,\n      label: formatLabel(categoryFilter, i.value),\n      count: i.count,\n    }))\n\n  return (\n    <MultiCheckboxSelect\n      search={rawSearch}\n      onSearch={value => setSearch(value)}\n      initialElements={20}\n      isLoading={loading}\n      items={items}\n      value={mapToSuggestItem(categoryFilter, values)}\n      onChange={newVal => {\n        setFilters?.(prev => {\n          return {\n            ...prev,\n            [categoryFilter]: {\n              ...prev[categoryFilter],\n              [field.key]: newVal.map(i => i.value),\n            },\n          }\n        })\n      }}\n      label={capitalize(field.label.toLowerCase())}\n      placeholder={`Find a ${capitalize(field.label.toLowerCase())}`}\n      renderItem={(item, index, searchTerm) => {\n        return <MultiCheckboxSelectItem item={item} searchTerm={searchTerm} />\n      }}\n    />\n  )\n}\n\nexport { SuggestionFilter }\n"],"names":["SuggestionFilter","formatLabel","category","value","formatTopicGroupToLabel","mapToSuggestItem","values","map","label","count","removeDuplicates","item","index","array","includes","itemIndex","findIndex","sub","facets","isLoading","field","categoryFilter","setFilters","suggestionQuery","search","setSearch","rawSearch","useDebouncedState","params","facetQuery","key","data","isFetching","useWatchlistFacets","loading","items","results","filter","i","MultiCheckboxSelect","onSearch","initialElements","onChange","newVal","prev","capitalize","toLowerCase","placeholder","renderItem","searchTerm","MultiCheckboxSelectItem"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BA6FSA;;;eAAAA;;;;uBA5F2C;uBAClB;4BAO3B;qCAC6B;yCACI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAcxC,MAAMC,cAAc,CAACC,UAAkBC;IACrC,IAAID,aAAa,UAAU,OAAOC;IAClC,OAAOC,IAAAA,8BAAuB,EAACD;AACjC;AAEA,MAAME,mBAAmB,CAACH,UAAkBI,SAC1CA,OAAOC,GAAG,CAACJ,CAAAA,QAAU,CAAA;YAAEA;YAAOK,OAAOP,YAAYC,UAAUC;YAAQM,OAAO;QAAE,CAAA;AAE9E,MAAMC,mBACJ,CAACJ,SAA0B,CAACK,MAAiBC,OAAeC;QAC1D,IAAIP,OAAOQ,QAAQ,CAACH,KAAKR,KAAK,GAAG,OAAO;QACxC,MAAMY,YAAYF,MAAMG,SAAS,CAACC,CAAAA,MAAOA,IAAId,KAAK,KAAKQ,KAAKR,KAAK;QACjE,OAAOS,UAAUG;IACnB;AAEF,MAAMf,mBAAmB,CAAC,EACxBkB,MAAM,EACNC,SAAS,EACTC,KAAK,EACLd,MAAM,EACNe,cAAc,EACdC,UAAU,EACVC,eAAe,EACT;IACN,MAAM,CAACC,QAAQC,WAAWC,UAAU,GAAGC,IAAAA,wBAAiB,EAAC,IAAI;IAC7D,MAAMC,SAAS,wCACVL;QACHM,YAAY;YAAET,OAAOA,MAAMU,GAAG;YAAE3B,OAAOqB;QAAO;;IAEhD,MAAM,EAAEO,IAAI,EAAEZ,WAAWa,UAAU,EAAE,GAAGC,IAAAA,8BAAkB,EAACL;IAC3D,MAAMM,UAAUf,aAAc,CAAC,CAACO,aAAaM;QAE1Bd,mBAA8Ba;IAAjD,MAAMI,QAAQ;WAAKjB,CAAAA,oBAAAA,MAAM,CAACE,MAAMU,GAAG,CAAC,cAAjBZ,+BAAAA,oBAAqB,EAAE;WAAOa,CAAAA,gBAAAA,iBAAAA,2BAAAA,KAAMK,OAAO,cAAbL,2BAAAA,gBAAiB,EAAE;KAAE,CACnEM,MAAM,CAAC3B,iBAAiBJ,SACxBC,GAAG,CAAC+B,CAAAA,IAAM,wCACNA;YACH9B,OAAOP,YAAYoB,gBAAgBiB,EAAEnC,KAAK;YAC1CM,OAAO6B,EAAE7B,KAAK;;IAGlB,qBACE,qBAAC8B,wCAAmB;QAClBf,QAAQE;QACRc,UAAUrC,CAAAA,QAASsB,UAAUtB;QAC7BsC,iBAAiB;QACjBtB,WAAWe;QACXC,OAAOA;QACPhC,OAAOE,iBAAiBgB,gBAAgBf;QACxCoC,UAAUC,CAAAA;YACRrB,uBAAAA,iCAAAA,WAAasB,CAAAA;gBACX,OAAO,wCACFA;oBACH,CAACvB,eAAe,EAAE,wCACbuB,IAAI,CAACvB,eAAe;wBACvB,CAACD,MAAMU,GAAG,CAAC,EAAEa,OAAOpC,GAAG,CAAC+B,CAAAA,IAAKA,EAAEnC,KAAK;;;YAG1C;QACF;QACAK,OAAOqC,IAAAA,iBAAU,EAACzB,MAAMZ,KAAK,CAACsC,WAAW;QACzCC,aAAa,CAAC,OAAO,EAAEF,IAAAA,iBAAU,EAACzB,MAAMZ,KAAK,CAACsC,WAAW,IAAI,CAAC;QAC9DE,YAAY,CAACrC,MAAMC,OAAOqC;YACxB,qBAAO,qBAACC,gDAAuB;gBAACvC,MAAMA;gBAAMsC,YAAYA;;QAC1D;;AAGN"}