8d6c187bca536ebaf75ffeab2c6595fb
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "generateRpJsonStylesheet", {
    enumerable: true,
    get: function() {
        return generateRpJsonStylesheet;
    }
});
const _constants = require("../constants");
const _detectionidtocolor = require("./detection-id-to-color");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const getStyle = (item)=>{
    if (item.style) return item.style;
    if (item.rpJsonType === _constants.TYPES.EVENT) {
        const color = item.color || (0, _detectionidtocolor.eventIdToColor)(item.rpJsonId);
        return {
            borderTop: item.highlight ? `2px solid ${color}` : "none",
            borderBottom: item.highlight ? `2px solid ${color}` : "none"
        };
    }
    return {
        backgroundColor: item.highlight ? item.color || (0, _detectionidtocolor.entityIdToColor)(item.rpJsonId) : "none"
    };
};
const generateRpJsonStylesheet = (highlights)=>{
    return highlights.reduce((acc, item)=>{
        return _object_spread_props(_object_spread({}, acc), {
            [item.className]: getStyle(item)
        });
    }, {});
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL3JwanNvbi9zcmMvbGliL3N0eWxlcy9nZW5lcmF0ZS1ycGpzb24tc3R5bGVzaGVldC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUWVBFUyB9IGZyb20gXCIuLi9jb25zdGFudHNcIlxuaW1wb3J0IHsgZW50aXR5SWRUb0NvbG9yLCBldmVudElkVG9Db2xvciB9IGZyb20gXCIuL2RldGVjdGlvbi1pZC10by1jb2xvclwiXG5cbmV4cG9ydCB0eXBlIEhpZ2hsaWdodEl0ZW0gPSB7XG4gIGNsYXNzTmFtZTogc3RyaW5nXG4gIHN0eWxlPzogb2JqZWN0XG4gIGNvbG9yPzogc3RyaW5nXG4gIHJwSnNvbklkPzogc3RyaW5nXG4gIHJwSnNvblR5cGU/OiBzdHJpbmdcbiAgaGlnaGxpZ2h0PzogYm9vbGVhblxufVxuXG5jb25zdCBnZXRTdHlsZSA9IChpdGVtOiBIaWdobGlnaHRJdGVtKSA9PiB7XG4gIGlmIChpdGVtLnN0eWxlKSByZXR1cm4gaXRlbS5zdHlsZVxuICBpZiAoaXRlbS5ycEpzb25UeXBlID09PSBUWVBFUy5FVkVOVCkge1xuICAgIGNvbnN0IGNvbG9yID0gaXRlbS5jb2xvciB8fCBldmVudElkVG9Db2xvcihpdGVtLnJwSnNvbklkKVxuICAgIHJldHVybiB7XG4gICAgICBib3JkZXJUb3A6IGl0ZW0uaGlnaGxpZ2h0ID8gYDJweCBzb2xpZCAke2NvbG9yfWAgOiBcIm5vbmVcIixcbiAgICAgIGJvcmRlckJvdHRvbTogaXRlbS5oaWdobGlnaHQgPyBgMnB4IHNvbGlkICR7Y29sb3J9YCA6IFwibm9uZVwiLFxuICAgIH1cbiAgfVxuICByZXR1cm4ge1xuICAgIGJhY2tncm91bmRDb2xvcjogaXRlbS5oaWdobGlnaHQgPyBpdGVtLmNvbG9yIHx8IGVudGl0eUlkVG9Db2xvcihpdGVtLnJwSnNvbklkKSA6IFwibm9uZVwiLFxuICB9XG59XG5cbmV4cG9ydCBjb25zdCBnZW5lcmF0ZVJwSnNvblN0eWxlc2hlZXQgPSAoaGlnaGxpZ2h0czogQXJyYXk8SGlnaGxpZ2h0SXRlbT4pID0+IHtcbiAgcmV0dXJuIGhpZ2hsaWdodHMucmVkdWNlKChhY2MsIGl0ZW0pID0+IHtcbiAgICByZXR1cm4geyAuLi5hY2MsIFtpdGVtLmNsYXNzTmFtZV06IGdldFN0eWxlKGl0ZW0pIH1cbiAgfSwge30pXG59XG4iXSwibmFtZXMiOlsiZ2VuZXJhdGVScEpzb25TdHlsZXNoZWV0IiwiZ2V0U3R5bGUiLCJpdGVtIiwic3R5bGUiLCJycEpzb25UeXBlIiwiVFlQRVMiLCJFVkVOVCIsImNvbG9yIiwiZXZlbnRJZFRvQ29sb3IiLCJycEpzb25JZCIsImJvcmRlclRvcCIsImhpZ2hsaWdodCIsImJvcmRlckJvdHRvbSIsImJhY2tncm91bmRDb2xvciIsImVudGl0eUlkVG9Db2xvciIsImhpZ2hsaWdodHMiLCJyZWR1Y2UiLCJhY2MiLCJjbGFzc05hbWUiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBMEJhQTs7O2VBQUFBOzs7MkJBMUJTO29DQUMwQjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFXaEQsTUFBTUMsV0FBVyxDQUFDQztJQUNoQixJQUFJQSxLQUFLQyxLQUFLLEVBQUUsT0FBT0QsS0FBS0MsS0FBSztJQUNqQyxJQUFJRCxLQUFLRSxVQUFVLEtBQUtDLGdCQUFLLENBQUNDLEtBQUssRUFBRTtRQUNuQyxNQUFNQyxRQUFRTCxLQUFLSyxLQUFLLElBQUlDLElBQUFBLGtDQUFjLEVBQUNOLEtBQUtPLFFBQVE7UUFDeEQsT0FBTztZQUNMQyxXQUFXUixLQUFLUyxTQUFTLEdBQUcsQ0FBQyxVQUFVLEVBQUVKLE1BQU0sQ0FBQyxHQUFHO1lBQ25ESyxjQUFjVixLQUFLUyxTQUFTLEdBQUcsQ0FBQyxVQUFVLEVBQUVKLE1BQU0sQ0FBQyxHQUFHO1FBQ3hEO0lBQ0Y7SUFDQSxPQUFPO1FBQ0xNLGlCQUFpQlgsS0FBS1MsU0FBUyxHQUFHVCxLQUFLSyxLQUFLLElBQUlPLElBQUFBLG1DQUFlLEVBQUNaLEtBQUtPLFFBQVEsSUFBSTtJQUNuRjtBQUNGO0FBRU8sTUFBTVQsMkJBQTJCLENBQUNlO0lBQ3ZDLE9BQU9BLFdBQVdDLE1BQU0sQ0FBQyxDQUFDQyxLQUFLZjtRQUM3QixPQUFPLHdDQUFLZTtZQUFLLENBQUNmLEtBQUtnQixTQUFTLENBQUMsRUFBRWpCLFNBQVNDOztJQUM5QyxHQUFHLENBQUM7QUFDTiJ9