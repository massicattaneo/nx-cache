052a7771216e565d95c161537d83cab0
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "DocumentDiscovery", {
    enumerable: true,
    get: function() {
        return DocumentDiscovery;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _compositecomponents = require("@rp/react/web/common/composite-components");
const _discoverysidebar = require("@rp/react/web/common/discovery-sidebar");
const _providers = require("@rp/react/web/common/providers");
const _core = require("@rp/react/web/mui/core");
const _DocumentDiscoveryWidget = require("./DocumentDiscoveryWidget");
function DocumentDiscovery({ isLoading, rpjsonDocument, disableCheckbox, disableWatchlist, expression, onChange, onExclude, selectedDetection, onDetectionClick, onAddToWatchlist }) {
    var _documentData_query;
    const { documentData } = (0, _providers.useDocumentViewerData)();
    const { widgetActions, categories, labels, isLoading: isDocDiscLoading } = (0, _discoverysidebar.useDocumentDiscoveryWidgetCategories)(rpjsonDocument, expression || ((_documentData_query = documentData.query) === null || _documentData_query === void 0 ? void 0 : _documentData_query.expression));
    const loading = isLoading || isDocDiscLoading;
    const groups = loading ? labels : Object.keys(categories);
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_discoverysidebar.PanelWrapper, {
        children: groups.map((type)=>{
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.AutoAnimateHeight, {
                duration: isLoading ? 0 : 0.3,
                margin: 16,
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                    "data-testid": `dd-section-${type}`,
                    sx: {
                        "& legend": {
                            opacity: 0,
                            transition: "opacity 0.2s ease-in-out"
                        },
                        "&:hover": {
                            "& legend": {
                                opacity: 1
                            }
                        }
                    },
                    children: loading ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_discoverysidebar.LoadingFilter, {}) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_DocumentDiscoveryWidget.DocumentDiscoveryWidget, {
                        isLoading: isLoading,
                        rpjsonDocument: rpjsonDocument,
                        disableCheckbox: disableCheckbox,
                        disableWatchlist: disableWatchlist,
                        onChange: onChange,
                        selectedDetection: selectedDetection,
                        onDetectionClick: onDetectionClick,
                        widgetActions: widgetActions,
                        widgetCategory: categories[type],
                        onAddToWatchlist: onAddToWatchlist,
                        onExclude: onExclude
                    })
                })
            }, type);
        })
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2Rpc2NvdmVyeS1zaWRlYmFyL2RvY3VtZW50LWRpc2NvdmVyeS9zcmMvbGliL0RvY3VtZW50RGlzY292ZXJ5LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDcXNJdGVtIH0gZnJvbSBcIkBycC9jb21tb24vYXBpLXR5cGVzXCJcbmltcG9ydCB7IFdhdGNobGlzdCB9IGZyb20gXCJAcnAvY29tbW9uL2FwaS10eXBlc1wiXG5pbXBvcnQgeyBScHFsRmlsdGVyIH0gZnJvbSBcIkBycC9jb21tb24vYXBpLXR5cGVzXCJcbmltcG9ydCB7IEFwcGVhcmFuY2UgfSBmcm9tIFwiQHJwL3JlYWN0L3JwanNvbi90eXBlc1wiXG5pbXBvcnQgeyBScEpzb25Eb2N1bWVudCB9IGZyb20gXCJAcnAvcmVhY3QvcnBqc29uL3R5cGVzXCJcbmltcG9ydCB7IEF1dG9BbmltYXRlSGVpZ2h0IH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvY29tbW9uL2NvbXBvc2l0ZS1jb21wb25lbnRzXCJcbmltcG9ydCB7XG4gIExvYWRpbmdGaWx0ZXIsXG4gIFBhbmVsV3JhcHBlcixcbiAgdXNlRG9jdW1lbnREaXNjb3ZlcnlXaWRnZXRDYXRlZ29yaWVzLFxufSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9jb21tb24vZGlzY292ZXJ5LXNpZGViYXJcIlxuaW1wb3J0IHsgdXNlRG9jdW1lbnRWaWV3ZXJEYXRhIH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvY29tbW9uL3Byb3ZpZGVyc1wiXG5pbXBvcnQgeyBCb3ggfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9tdWkvY29yZVwiXG5pbXBvcnQgeyBEb2N1bWVudERpc2NvdmVyeVdpZGdldCB9IGZyb20gXCIuL0RvY3VtZW50RGlzY292ZXJ5V2lkZ2V0XCJcblxudHlwZSBEb2N1bWVudERpc2NvdmVyeVByb3BzID0ge1xuICBpc0xvYWRpbmc6IGJvb2xlYW5cbiAgcnBqc29uRG9jdW1lbnQ6IFJwSnNvbkRvY3VtZW50IHwgdW5kZWZpbmVkXG4gIGRpc2FibGVDaGVja2JveD86IGJvb2xlYW5cbiAgZGlzYWJsZVdhdGNobGlzdD86IGJvb2xlYW5cbiAgZXhwcmVzc2lvbj86IFJwcWxGaWx0ZXJcbiAgb25DaGFuZ2U/OiAoaXRlbTogQ3FzSXRlbSkgPT4gdm9pZFxuICBvbkV4Y2x1ZGU/OiAoaXRlbTogQ3FzSXRlbSkgPT4gdm9pZFxuICBzZWxlY3RlZERldGVjdGlvbj86IHsgcG51bTogbnVtYmVyOyBzbnVtOiBudW1iZXIgfVxuICBvbkRldGVjdGlvbkNsaWNrOiAoZGV0ZWN0aW9uOiBBcHBlYXJhbmNlKSA9PiB2b2lkXG4gIG9uQWRkVG9XYXRjaGxpc3Q/OiAod2F0Y2hsaXN0OiBXYXRjaGxpc3QpID0+IHZvaWRcbn1cblxuZnVuY3Rpb24gRG9jdW1lbnREaXNjb3Zlcnkoe1xuICBpc0xvYWRpbmcsXG4gIHJwanNvbkRvY3VtZW50LFxuICBkaXNhYmxlQ2hlY2tib3gsXG4gIGRpc2FibGVXYXRjaGxpc3QsXG4gIGV4cHJlc3Npb24sXG4gIG9uQ2hhbmdlLFxuICBvbkV4Y2x1ZGUsXG4gIHNlbGVjdGVkRGV0ZWN0aW9uLFxuICBvbkRldGVjdGlvbkNsaWNrLFxuICBvbkFkZFRvV2F0Y2hsaXN0LFxufTogRG9jdW1lbnREaXNjb3ZlcnlQcm9wcykge1xuICBjb25zdCB7IGRvY3VtZW50RGF0YSB9ID0gdXNlRG9jdW1lbnRWaWV3ZXJEYXRhKClcblxuICBjb25zdCB7XG4gICAgd2lkZ2V0QWN0aW9ucyxcbiAgICBjYXRlZ29yaWVzLFxuICAgIGxhYmVscyxcbiAgICBpc0xvYWRpbmc6IGlzRG9jRGlzY0xvYWRpbmcsXG4gIH0gPSB1c2VEb2N1bWVudERpc2NvdmVyeVdpZGdldENhdGVnb3JpZXMoXG4gICAgcnBqc29uRG9jdW1lbnQsXG4gICAgZXhwcmVzc2lvbiB8fCBkb2N1bWVudERhdGEucXVlcnk/LmV4cHJlc3Npb24sXG4gIClcblxuICBjb25zdCBsb2FkaW5nID0gaXNMb2FkaW5nIHx8IGlzRG9jRGlzY0xvYWRpbmdcbiAgY29uc3QgZ3JvdXBzID0gbG9hZGluZyA/IGxhYmVscyA6IE9iamVjdC5rZXlzKGNhdGVnb3JpZXMpXG5cbiAgcmV0dXJuIChcbiAgICA8UGFuZWxXcmFwcGVyPlxuICAgICAge2dyb3Vwcy5tYXAodHlwZSA9PiB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgPEF1dG9BbmltYXRlSGVpZ2h0IGR1cmF0aW9uPXtpc0xvYWRpbmcgPyAwIDogMC4zfSBrZXk9e3R5cGV9IG1hcmdpbj17MTZ9PlxuICAgICAgICAgICAgPEJveFxuICAgICAgICAgICAgICBkYXRhLXRlc3RpZD17YGRkLXNlY3Rpb24tJHt0eXBlfWB9XG4gICAgICAgICAgICAgIHN4PXt7XG4gICAgICAgICAgICAgICAgXCImIGxlZ2VuZFwiOiB7XG4gICAgICAgICAgICAgICAgICBvcGFjaXR5OiAwLFxuICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogXCJvcGFjaXR5IDAuMnMgZWFzZS1pbi1vdXRcIixcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIFwiJjpob3ZlclwiOiB7XG4gICAgICAgICAgICAgICAgICBcIiYgbGVnZW5kXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogMSxcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAge2xvYWRpbmcgPyAoXG4gICAgICAgICAgICAgICAgPExvYWRpbmdGaWx0ZXIgLz5cbiAgICAgICAgICAgICAgKSA6IChcbiAgICAgICAgICAgICAgICA8RG9jdW1lbnREaXNjb3ZlcnlXaWRnZXRcbiAgICAgICAgICAgICAgICAgIGlzTG9hZGluZz17aXNMb2FkaW5nfVxuICAgICAgICAgICAgICAgICAgcnBqc29uRG9jdW1lbnQ9e3JwanNvbkRvY3VtZW50fVxuICAgICAgICAgICAgICAgICAgZGlzYWJsZUNoZWNrYm94PXtkaXNhYmxlQ2hlY2tib3h9XG4gICAgICAgICAgICAgICAgICBkaXNhYmxlV2F0Y2hsaXN0PXtkaXNhYmxlV2F0Y2hsaXN0fVxuICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e29uQ2hhbmdlfVxuICAgICAgICAgICAgICAgICAgc2VsZWN0ZWREZXRlY3Rpb249e3NlbGVjdGVkRGV0ZWN0aW9ufVxuICAgICAgICAgICAgICAgICAgb25EZXRlY3Rpb25DbGljaz17b25EZXRlY3Rpb25DbGlja31cbiAgICAgICAgICAgICAgICAgIHdpZGdldEFjdGlvbnM9e3dpZGdldEFjdGlvbnN9XG4gICAgICAgICAgICAgICAgICB3aWRnZXRDYXRlZ29yeT17Y2F0ZWdvcmllc1t0eXBlXX1cbiAgICAgICAgICAgICAgICAgIG9uQWRkVG9XYXRjaGxpc3Q9e29uQWRkVG9XYXRjaGxpc3R9XG4gICAgICAgICAgICAgICAgICBvbkV4Y2x1ZGU9e29uRXhjbHVkZX1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAgPC9BdXRvQW5pbWF0ZUhlaWdodD5cbiAgICAgICAgKVxuICAgICAgfSl9XG4gICAgPC9QYW5lbFdyYXBwZXI+XG4gIClcbn1cblxuZXhwb3J0IHsgRG9jdW1lbnREaXNjb3ZlcnkgfVxuIl0sIm5hbWVzIjpbIkRvY3VtZW50RGlzY292ZXJ5IiwiaXNMb2FkaW5nIiwicnBqc29uRG9jdW1lbnQiLCJkaXNhYmxlQ2hlY2tib3giLCJkaXNhYmxlV2F0Y2hsaXN0IiwiZXhwcmVzc2lvbiIsIm9uQ2hhbmdlIiwib25FeGNsdWRlIiwic2VsZWN0ZWREZXRlY3Rpb24iLCJvbkRldGVjdGlvbkNsaWNrIiwib25BZGRUb1dhdGNobGlzdCIsImRvY3VtZW50RGF0YSIsInVzZURvY3VtZW50Vmlld2VyRGF0YSIsIndpZGdldEFjdGlvbnMiLCJjYXRlZ29yaWVzIiwibGFiZWxzIiwiaXNEb2NEaXNjTG9hZGluZyIsInVzZURvY3VtZW50RGlzY292ZXJ5V2lkZ2V0Q2F0ZWdvcmllcyIsInF1ZXJ5IiwibG9hZGluZyIsImdyb3VwcyIsIk9iamVjdCIsImtleXMiLCJQYW5lbFdyYXBwZXIiLCJtYXAiLCJ0eXBlIiwiQXV0b0FuaW1hdGVIZWlnaHQiLCJkdXJhdGlvbiIsIm1hcmdpbiIsIkJveCIsImRhdGEtdGVzdGlkIiwic3giLCJvcGFjaXR5IiwidHJhbnNpdGlvbiIsIkxvYWRpbmdGaWx0ZXIiLCJEb2N1bWVudERpc2NvdmVyeVdpZGdldCIsIndpZGdldENhdGVnb3J5Il0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkFtR1NBOzs7ZUFBQUE7Ozs7cUNBOUZ5QjtrQ0FLM0I7MkJBQytCO3NCQUNsQjt5Q0FDb0I7QUFleEMsU0FBU0Esa0JBQWtCLEVBQ3pCQyxTQUFTLEVBQ1RDLGNBQWMsRUFDZEMsZUFBZSxFQUNmQyxnQkFBZ0IsRUFDaEJDLFVBQVUsRUFDVkMsUUFBUSxFQUNSQyxTQUFTLEVBQ1RDLGlCQUFpQixFQUNqQkMsZ0JBQWdCLEVBQ2hCQyxnQkFBZ0IsRUFDTztRQVVQQztJQVRoQixNQUFNLEVBQUVBLFlBQVksRUFBRSxHQUFHQyxJQUFBQSxnQ0FBcUI7SUFFOUMsTUFBTSxFQUNKQyxhQUFhLEVBQ2JDLFVBQVUsRUFDVkMsTUFBTSxFQUNOZCxXQUFXZSxnQkFBZ0IsRUFDNUIsR0FBR0MsSUFBQUEsc0RBQW9DLEVBQ3RDZixnQkFDQUcsZ0JBQWNNLHNCQUFBQSxhQUFhTyxLQUFLLGNBQWxCUCwwQ0FBQUEsb0JBQW9CTixVQUFVO0lBRzlDLE1BQU1jLFVBQVVsQixhQUFhZTtJQUM3QixNQUFNSSxTQUFTRCxVQUFVSixTQUFTTSxPQUFPQyxJQUFJLENBQUNSO0lBRTlDLHFCQUNFLHFCQUFDUyw4QkFBWTtrQkFDVkgsT0FBT0ksR0FBRyxDQUFDQyxDQUFBQTtZQUNWLHFCQUNFLHFCQUFDQyxzQ0FBaUI7Z0JBQUNDLFVBQVUxQixZQUFZLElBQUk7Z0JBQWdCMkIsUUFBUTswQkFDbkUsY0FBQSxxQkFBQ0MsU0FBRztvQkFDRkMsZUFBYSxDQUFDLFdBQVcsRUFBRUwsS0FBSyxDQUFDO29CQUNqQ00sSUFBSTt3QkFDRixZQUFZOzRCQUNWQyxTQUFTOzRCQUNUQyxZQUFZO3dCQUNkO3dCQUNBLFdBQVc7NEJBQ1QsWUFBWTtnQ0FDVkQsU0FBUzs0QkFDWDt3QkFDRjtvQkFDRjs4QkFFQ2Isd0JBQ0MscUJBQUNlLCtCQUFhLHNCQUVkLHFCQUFDQyxnREFBdUI7d0JBQ3RCbEMsV0FBV0E7d0JBQ1hDLGdCQUFnQkE7d0JBQ2hCQyxpQkFBaUJBO3dCQUNqQkMsa0JBQWtCQTt3QkFDbEJFLFVBQVVBO3dCQUNWRSxtQkFBbUJBO3dCQUNuQkMsa0JBQWtCQTt3QkFDbEJJLGVBQWVBO3dCQUNmdUIsZ0JBQWdCdEIsVUFBVSxDQUFDVyxLQUFLO3dCQUNoQ2Ysa0JBQWtCQTt3QkFDbEJILFdBQVdBOzs7ZUE3Qm9Da0I7UUFtQzNEOztBQUdOIn0=