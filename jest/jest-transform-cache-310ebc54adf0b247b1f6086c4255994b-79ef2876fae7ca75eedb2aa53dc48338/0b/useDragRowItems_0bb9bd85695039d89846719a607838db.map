{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/composite-components/src/ReOrderableList/useDragRowItems.ts"],"sourcesContent":["import type { Identifier, XYCoord } from \"dnd-core\"\nimport { useDrag, useDrop } from \"react-dnd\"\nimport { DnDProps, ItemWithId } from \"./DraggableItem\"\n\ntype DragItem = {\n  index: number\n  id: string\n  type: string\n}\n\ntype UseDragRowProps<RowType extends ItemWithId> = DnDProps<RowType> & {\n  ref: React.RefObject<HTMLDivElement | null>\n  disableDrag?: boolean\n}\n\nconst useDragRowItems = <RowType extends ItemWithId>({\n  moveCard,\n  index,\n  item,\n  onDrop,\n  type,\n  ref,\n  disableDrag,\n}: UseDragRowProps<RowType>) => {\n  const [{ handlerId }, drop] = useDrop<DragItem, void, { handlerId: Identifier | null }>({\n    accept: type,\n    collect(monitor) {\n      return {\n        handlerId: monitor.getHandlerId(),\n      }\n    },\n    drop(_item: unknown, monitor) {\n      const didDrop = monitor.didDrop()\n      if (didDrop || monitor.getDropResult() === null) {\n        return\n      }\n      onDrop()\n    },\n    hover(item: DragItem, monitor) {\n      if (!ref.current) {\n        return\n      }\n      const dragIndex = item.index\n      const hoverIndex = index\n\n      // Don't replace items with themselves\n      if (dragIndex === hoverIndex) {\n        return\n      }\n\n      // Determine rectangle on screen\n      const hoverBoundingRect = ref.current?.getBoundingClientRect()\n\n      // Get vertical middle\n      const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2\n\n      // Determine mouse position\n      const clientOffset = monitor.getClientOffset()\n\n      // Get pixels to the top\n      const hoverClientY = (clientOffset as XYCoord).y - hoverBoundingRect.top\n\n      // Only perform the move when the mouse has crossed half of the items height\n      // When dragging downwards, only move when the cursor is below 50%\n      // When dragging upwards, only move when the cursor is above 50%\n\n      // Dragging downwards\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return\n      }\n\n      // Dragging upwards\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return\n      }\n\n      // Time to actually perform the action\n      moveCard(dragIndex, hoverIndex)\n\n      // Note: we're mutating the monitor item here!\n      // Generally it's better to avoid mutations,\n      // but it's good here for the sake of performance\n      // to avoid expensive index searches.\n\n      // eslint-disable-next-line no-param-reassign\n      item.index = hoverIndex\n    },\n  })\n\n  const [{ isDragging }, drag, preview] = useDrag({\n    type: type,\n    item: () => {\n      return { id: item.id, index, item }\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging(),\n    }),\n    canDrag: !disableDrag,\n  })\n\n  return { drop, drag, isDragging, handlerId, preview }\n}\n\nexport { useDragRowItems }\n"],"names":["useDragRowItems","moveCard","index","item","onDrop","type","ref","disableDrag","handlerId","drop","useDrop","accept","collect","monitor","getHandlerId","_item","didDrop","getDropResult","hover","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","clientOffset","getClientOffset","hoverClientY","y","isDragging","drag","preview","useDrag","id","canDrag"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAuGSA;;;eAAAA;;;0BAtGwB;AAcjC,MAAMA,kBAAkB,CAA6B,EACnDC,QAAQ,EACRC,KAAK,EACLC,IAAI,EACJC,MAAM,EACNC,IAAI,EACJC,GAAG,EACHC,WAAW,EACc;IACzB,MAAM,CAAC,EAAEC,SAAS,EAAE,EAAEC,KAAK,GAAGC,IAAAA,iBAAO,EAAmD;QACtFC,QAAQN;QACRO,SAAQC,OAAO;YACb,OAAO;gBACLL,WAAWK,QAAQC,YAAY;YACjC;QACF;QACAL,MAAKM,KAAc,EAAEF,OAAO;YAC1B,MAAMG,UAAUH,QAAQG,OAAO;YAC/B,IAAIA,WAAWH,QAAQI,aAAa,OAAO,MAAM;gBAC/C;YACF;YACAb;QACF;QACAc,OAAMf,IAAc,EAAEU,OAAO;gBAaDP;YAZ1B,IAAI,CAACA,IAAIa,OAAO,EAAE;gBAChB;YACF;YACA,MAAMC,YAAYjB,KAAKD,KAAK;YAC5B,MAAMmB,aAAanB;YAEnB,sCAAsC;YACtC,IAAIkB,cAAcC,YAAY;gBAC5B;YACF;YAEA,gCAAgC;YAChC,MAAMC,qBAAoBhB,eAAAA,IAAIa,OAAO,cAAXb,mCAAAA,aAAaiB,qBAAqB;YAE5D,sBAAsB;YACtB,MAAMC,eAAe,AAACF,CAAAA,kBAAkBG,MAAM,GAAGH,kBAAkBI,GAAG,AAAD,IAAK;YAE1E,2BAA2B;YAC3B,MAAMC,eAAed,QAAQe,eAAe;YAE5C,wBAAwB;YACxB,MAAMC,eAAe,AAACF,aAAyBG,CAAC,GAAGR,kBAAkBI,GAAG;YAExE,4EAA4E;YAC5E,kEAAkE;YAClE,gEAAgE;YAEhE,qBAAqB;YACrB,IAAIN,YAAYC,cAAcQ,eAAeL,cAAc;gBACzD;YACF;YAEA,mBAAmB;YACnB,IAAIJ,YAAYC,cAAcQ,eAAeL,cAAc;gBACzD;YACF;YAEA,sCAAsC;YACtCvB,SAASmB,WAAWC;YAEpB,8CAA8C;YAC9C,4CAA4C;YAC5C,iDAAiD;YACjD,qCAAqC;YAErC,6CAA6C;YAC7ClB,KAAKD,KAAK,GAAGmB;QACf;IACF;IAEA,MAAM,CAAC,EAAEU,UAAU,EAAE,EAAEC,MAAMC,QAAQ,GAAGC,IAAAA,iBAAO,EAAC;QAC9C7B,MAAMA;QACNF,MAAM;YACJ,OAAO;gBAAEgC,IAAIhC,KAAKgC,EAAE;gBAAEjC;gBAAOC;YAAK;QACpC;QACAS,SAASC,CAAAA,UAAY,CAAA;gBACnBkB,YAAYlB,QAAQkB,UAAU;YAChC,CAAA;QACAK,SAAS,CAAC7B;IACZ;IAEA,OAAO;QAAEE;QAAMuB;QAAMD;QAAYvB;QAAWyB;IAAQ;AACtD"}