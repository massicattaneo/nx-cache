{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/base-components/src/CopyButton/CopyButton.tsx"],"sourcesContent":["import { useState } from \"react\"\nimport { copyToClipboard } from \"@rp/react/web/common/utils\"\nimport { Box, IconButton, Skeleton, SxProps } from \"@rp/react/web/mui/core\"\nimport { ContentCopy, Done } from \"@rp/react/web/mui/icons\"\nimport { RPTooltip } from \"../RPTooltip\"\n\ntype Props = {\n  text: (() => Promise<string> | string) | string\n  html?: string\n  disabled?: boolean\n  loading?: boolean\n  sx?: SxProps\n  onTrack?: () => void\n}\n\nfunction CopyButton({ html, text, disabled, loading, sx, onTrack }: Props) {\n  const [open, setOpen] = useState(false)\n  const [copied, setCopied] = useState(false)\n  if (loading) {\n    return <Skeleton height={35} width={20} />\n  }\n  return (\n    <RPTooltip\n      title=\"Copy to Clipboard\"\n      placement=\"top\"\n      onOpen={() => {\n        if (copied || disabled) return\n        setOpen(true)\n      }}\n      onClose={() => setOpen(false)}\n      open={open}\n    >\n      <Box component=\"span\">\n        <IconButton\n          sx={\n            sx ??\n            (theme => ({\n              \"& svg\": {\n                fontSize: 16,\n                color: theme.palette.grey[300],\n              },\n              \"&:hover\": {\n                svg: { color: theme.palette.secondary.contrastText },\n              },\n            }))\n          }\n          disabled={disabled || copied}\n          onClick={async ev => {\n            ev.stopPropagation()\n            const textValue = text instanceof Function ? await text() : text\n            if (copyToClipboard({ textToCopy: textValue, targetHTML: html ?? textValue })) {\n              setCopied(true)\n              setOpen(false)\n              setTimeout(() => setCopied(false), 2000)\n              onTrack?.()\n            }\n          }}\n          size=\"small\"\n        >\n          {copied ? <Done /> : <ContentCopy />}\n        </IconButton>\n      </Box>\n    </RPTooltip>\n  )\n}\n\nexport { CopyButton }\n"],"names":["CopyButton","html","text","disabled","loading","sx","onTrack","open","setOpen","useState","copied","setCopied","Skeleton","height","width","RPTooltip","title","placement","onOpen","onClose","Box","component","IconButton","theme","fontSize","color","palette","grey","svg","secondary","contrastText","onClick","ev","stopPropagation","textValue","Function","copyToClipboard","textToCopy","targetHTML","setTimeout","size","Done","ContentCopy"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAkESA;;;eAAAA;;;;uBAlEgB;uBACO;sBACmB;uBACjB;2BACR;AAW1B,SAASA,WAAW,EAAEC,IAAI,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,EAAE,EAAEC,OAAO,EAAS;IACvE,MAAM,CAACC,MAAMC,QAAQ,GAAGC,IAAAA,eAAQ,EAAC;IACjC,MAAM,CAACC,QAAQC,UAAU,GAAGF,IAAAA,eAAQ,EAAC;IACrC,IAAIL,SAAS;QACX,qBAAO,qBAACQ,cAAQ;YAACC,QAAQ;YAAIC,OAAO;;IACtC;IACA,qBACE,qBAACC,oBAAS;QACRC,OAAM;QACNC,WAAU;QACVC,QAAQ;YACN,IAAIR,UAAUP,UAAU;YACxBK,QAAQ;QACV;QACAW,SAAS,IAAMX,QAAQ;QACvBD,MAAMA;kBAEN,cAAA,qBAACa,SAAG;YAACC,WAAU;sBACb,cAAA,qBAACC,gBAAU;gBACTjB,IACEA,eAAAA,gBAAAA,KACCkB,CAAAA,QAAU,CAAA;wBACT,SAAS;4BACPC,UAAU;4BACVC,OAAOF,MAAMG,OAAO,CAACC,IAAI,CAAC,IAAI;wBAChC;wBACA,WAAW;4BACTC,KAAK;gCAAEH,OAAOF,MAAMG,OAAO,CAACG,SAAS,CAACC,YAAY;4BAAC;wBACrD;oBACF,CAAA;gBAEF3B,UAAUA,YAAYO;gBACtBqB,SAAS,OAAMC;oBACbA,GAAGC,eAAe;oBAClB,MAAMC,YAAYhC,gBAAgBiC,WAAW,MAAMjC,SAASA;oBAC5D,IAAIkC,IAAAA,sBAAe,EAAC;wBAAEC,YAAYH;wBAAWI,YAAYrC,iBAAAA,kBAAAA,OAAQiC;oBAAU,IAAI;wBAC7EvB,UAAU;wBACVH,QAAQ;wBACR+B,WAAW,IAAM5B,UAAU,QAAQ;wBACnCL,oBAAAA,8BAAAA;oBACF;gBACF;gBACAkC,MAAK;0BAEJ9B,uBAAS,qBAAC+B,WAAI,sBAAM,qBAACC,kBAAW;;;;AAK3C"}