ff9af655c11f2480a9464ea3bdb86469
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "CopyButton", {
    enumerable: true,
    get: function() {
        return CopyButton;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _utils = require("@rp/react/web/common/utils");
const _core = require("@rp/react/web/mui/core");
const _icons = require("@rp/react/web/mui/icons");
const _RPTooltip = require("../RPTooltip");
function CopyButton({ html, text, disabled, loading, sx, onTrack }) {
    const [open, setOpen] = (0, _react.useState)(false);
    const [copied, setCopied] = (0, _react.useState)(false);
    if (loading) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Skeleton, {
            height: 35,
            width: 20
        });
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_RPTooltip.RPTooltip, {
        title: "Copy to Clipboard",
        placement: "top",
        onOpen: ()=>{
            if (copied || disabled) return;
            setOpen(true);
        },
        onClose: ()=>setOpen(false),
        open: open,
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
            component: "span",
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.IconButton, {
                sx: sx !== null && sx !== void 0 ? sx : (theme)=>({
                        "& svg": {
                            fontSize: 16,
                            color: theme.palette.grey[300]
                        },
                        "&:hover": {
                            svg: {
                                color: theme.palette.secondary.contrastText
                            }
                        }
                    }),
                disabled: disabled || copied,
                onClick: async (ev)=>{
                    ev.stopPropagation();
                    const textValue = text instanceof Function ? await text() : text;
                    if ((0, _utils.copyToClipboard)({
                        textToCopy: textValue,
                        targetHTML: html !== null && html !== void 0 ? html : textValue
                    })) {
                        setCopied(true);
                        setOpen(false);
                        setTimeout(()=>setCopied(false), 2000);
                        onTrack === null || onTrack === void 0 ? void 0 : onTrack();
                    }
                },
                size: "small",
                children: copied ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.Done, {}) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.ContentCopy, {})
            })
        })
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9iYXNlLWNvbXBvbmVudHMvc3JjL0NvcHlCdXR0b24vQ29weUJ1dHRvbi50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IHsgY29weVRvQ2xpcGJvYXJkIH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvY29tbW9uL3V0aWxzXCJcbmltcG9ydCB7IEJveCwgSWNvbkJ1dHRvbiwgU2tlbGV0b24sIFN4UHJvcHMgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9tdWkvY29yZVwiXG5pbXBvcnQgeyBDb250ZW50Q29weSwgRG9uZSB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL211aS9pY29uc1wiXG5pbXBvcnQgeyBSUFRvb2x0aXAgfSBmcm9tIFwiLi4vUlBUb29sdGlwXCJcblxudHlwZSBQcm9wcyA9IHtcbiAgdGV4dDogKCgpID0+IFByb21pc2U8c3RyaW5nPiB8IHN0cmluZykgfCBzdHJpbmdcbiAgaHRtbD86IHN0cmluZ1xuICBkaXNhYmxlZD86IGJvb2xlYW5cbiAgbG9hZGluZz86IGJvb2xlYW5cbiAgc3g/OiBTeFByb3BzXG4gIG9uVHJhY2s/OiAoKSA9PiB2b2lkXG59XG5cbmZ1bmN0aW9uIENvcHlCdXR0b24oeyBodG1sLCB0ZXh0LCBkaXNhYmxlZCwgbG9hZGluZywgc3gsIG9uVHJhY2sgfTogUHJvcHMpIHtcbiAgY29uc3QgW29wZW4sIHNldE9wZW5dID0gdXNlU3RhdGUoZmFsc2UpXG4gIGNvbnN0IFtjb3BpZWQsIHNldENvcGllZF0gPSB1c2VTdGF0ZShmYWxzZSlcbiAgaWYgKGxvYWRpbmcpIHtcbiAgICByZXR1cm4gPFNrZWxldG9uIGhlaWdodD17MzV9IHdpZHRoPXsyMH0gLz5cbiAgfVxuICByZXR1cm4gKFxuICAgIDxSUFRvb2x0aXBcbiAgICAgIHRpdGxlPVwiQ29weSB0byBDbGlwYm9hcmRcIlxuICAgICAgcGxhY2VtZW50PVwidG9wXCJcbiAgICAgIG9uT3Blbj17KCkgPT4ge1xuICAgICAgICBpZiAoY29waWVkIHx8IGRpc2FibGVkKSByZXR1cm5cbiAgICAgICAgc2V0T3Blbih0cnVlKVxuICAgICAgfX1cbiAgICAgIG9uQ2xvc2U9eygpID0+IHNldE9wZW4oZmFsc2UpfVxuICAgICAgb3Blbj17b3Blbn1cbiAgICA+XG4gICAgICA8Qm94IGNvbXBvbmVudD1cInNwYW5cIj5cbiAgICAgICAgPEljb25CdXR0b25cbiAgICAgICAgICBzeD17XG4gICAgICAgICAgICBzeCA/P1xuICAgICAgICAgICAgKHRoZW1lID0+ICh7XG4gICAgICAgICAgICAgIFwiJiBzdmdcIjoge1xuICAgICAgICAgICAgICAgIGZvbnRTaXplOiAxNixcbiAgICAgICAgICAgICAgICBjb2xvcjogdGhlbWUucGFsZXR0ZS5ncmV5WzMwMF0sXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIFwiJjpob3ZlclwiOiB7XG4gICAgICAgICAgICAgICAgc3ZnOiB7IGNvbG9yOiB0aGVtZS5wYWxldHRlLnNlY29uZGFyeS5jb250cmFzdFRleHQgfSxcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0pKVxuICAgICAgICAgIH1cbiAgICAgICAgICBkaXNhYmxlZD17ZGlzYWJsZWQgfHwgY29waWVkfVxuICAgICAgICAgIG9uQ2xpY2s9e2FzeW5jIGV2ID0+IHtcbiAgICAgICAgICAgIGV2LnN0b3BQcm9wYWdhdGlvbigpXG4gICAgICAgICAgICBjb25zdCB0ZXh0VmFsdWUgPSB0ZXh0IGluc3RhbmNlb2YgRnVuY3Rpb24gPyBhd2FpdCB0ZXh0KCkgOiB0ZXh0XG4gICAgICAgICAgICBpZiAoY29weVRvQ2xpcGJvYXJkKHsgdGV4dFRvQ29weTogdGV4dFZhbHVlLCB0YXJnZXRIVE1MOiBodG1sID8/IHRleHRWYWx1ZSB9KSkge1xuICAgICAgICAgICAgICBzZXRDb3BpZWQodHJ1ZSlcbiAgICAgICAgICAgICAgc2V0T3BlbihmYWxzZSlcbiAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiBzZXRDb3BpZWQoZmFsc2UpLCAyMDAwKVxuICAgICAgICAgICAgICBvblRyYWNrPy4oKVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH19XG4gICAgICAgICAgc2l6ZT1cInNtYWxsXCJcbiAgICAgICAgPlxuICAgICAgICAgIHtjb3BpZWQgPyA8RG9uZSAvPiA6IDxDb250ZW50Q29weSAvPn1cbiAgICAgICAgPC9JY29uQnV0dG9uPlxuICAgICAgPC9Cb3g+XG4gICAgPC9SUFRvb2x0aXA+XG4gIClcbn1cblxuZXhwb3J0IHsgQ29weUJ1dHRvbiB9XG4iXSwibmFtZXMiOlsiQ29weUJ1dHRvbiIsImh0bWwiLCJ0ZXh0IiwiZGlzYWJsZWQiLCJsb2FkaW5nIiwic3giLCJvblRyYWNrIiwib3BlbiIsInNldE9wZW4iLCJ1c2VTdGF0ZSIsImNvcGllZCIsInNldENvcGllZCIsIlNrZWxldG9uIiwiaGVpZ2h0Iiwid2lkdGgiLCJSUFRvb2x0aXAiLCJ0aXRsZSIsInBsYWNlbWVudCIsIm9uT3BlbiIsIm9uQ2xvc2UiLCJCb3giLCJjb21wb25lbnQiLCJJY29uQnV0dG9uIiwidGhlbWUiLCJmb250U2l6ZSIsImNvbG9yIiwicGFsZXR0ZSIsImdyZXkiLCJzdmciLCJzZWNvbmRhcnkiLCJjb250cmFzdFRleHQiLCJvbkNsaWNrIiwiZXYiLCJzdG9wUHJvcGFnYXRpb24iLCJ0ZXh0VmFsdWUiLCJGdW5jdGlvbiIsImNvcHlUb0NsaXBib2FyZCIsInRleHRUb0NvcHkiLCJ0YXJnZXRIVE1MIiwic2V0VGltZW91dCIsInNpemUiLCJEb25lIiwiQ29udGVudENvcHkiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkFrRVNBOzs7ZUFBQUE7Ozs7dUJBbEVnQjt1QkFDTztzQkFDbUI7dUJBQ2pCOzJCQUNSO0FBVzFCLFNBQVNBLFdBQVcsRUFBRUMsSUFBSSxFQUFFQyxJQUFJLEVBQUVDLFFBQVEsRUFBRUMsT0FBTyxFQUFFQyxFQUFFLEVBQUVDLE9BQU8sRUFBUztJQUN2RSxNQUFNLENBQUNDLE1BQU1DLFFBQVEsR0FBR0MsSUFBQUEsZUFBUSxFQUFDO0lBQ2pDLE1BQU0sQ0FBQ0MsUUFBUUMsVUFBVSxHQUFHRixJQUFBQSxlQUFRLEVBQUM7SUFDckMsSUFBSUwsU0FBUztRQUNYLHFCQUFPLHFCQUFDUSxjQUFRO1lBQUNDLFFBQVE7WUFBSUMsT0FBTzs7SUFDdEM7SUFDQSxxQkFDRSxxQkFBQ0Msb0JBQVM7UUFDUkMsT0FBTTtRQUNOQyxXQUFVO1FBQ1ZDLFFBQVE7WUFDTixJQUFJUixVQUFVUCxVQUFVO1lBQ3hCSyxRQUFRO1FBQ1Y7UUFDQVcsU0FBUyxJQUFNWCxRQUFRO1FBQ3ZCRCxNQUFNQTtrQkFFTixjQUFBLHFCQUFDYSxTQUFHO1lBQUNDLFdBQVU7c0JBQ2IsY0FBQSxxQkFBQ0MsZ0JBQVU7Z0JBQ1RqQixJQUNFQSxlQUFBQSxnQkFBQUEsS0FDQ2tCLENBQUFBLFFBQVUsQ0FBQTt3QkFDVCxTQUFTOzRCQUNQQyxVQUFVOzRCQUNWQyxPQUFPRixNQUFNRyxPQUFPLENBQUNDLElBQUksQ0FBQyxJQUFJO3dCQUNoQzt3QkFDQSxXQUFXOzRCQUNUQyxLQUFLO2dDQUFFSCxPQUFPRixNQUFNRyxPQUFPLENBQUNHLFNBQVMsQ0FBQ0MsWUFBWTs0QkFBQzt3QkFDckQ7b0JBQ0YsQ0FBQTtnQkFFRjNCLFVBQVVBLFlBQVlPO2dCQUN0QnFCLFNBQVMsT0FBTUM7b0JBQ2JBLEdBQUdDLGVBQWU7b0JBQ2xCLE1BQU1DLFlBQVloQyxnQkFBZ0JpQyxXQUFXLE1BQU1qQyxTQUFTQTtvQkFDNUQsSUFBSWtDLElBQUFBLHNCQUFlLEVBQUM7d0JBQUVDLFlBQVlIO3dCQUFXSSxZQUFZckMsaUJBQUFBLGtCQUFBQSxPQUFRaUM7b0JBQVUsSUFBSTt3QkFDN0V2QixVQUFVO3dCQUNWSCxRQUFRO3dCQUNSK0IsV0FBVyxJQUFNNUIsVUFBVSxRQUFRO3dCQUNuQ0wsb0JBQUFBLDhCQUFBQTtvQkFDRjtnQkFDRjtnQkFDQWtDLE1BQUs7MEJBRUo5Qix1QkFBUyxxQkFBQytCLFdBQUksc0JBQU0scUJBQUNDLGtCQUFXOzs7O0FBSzNDIn0=