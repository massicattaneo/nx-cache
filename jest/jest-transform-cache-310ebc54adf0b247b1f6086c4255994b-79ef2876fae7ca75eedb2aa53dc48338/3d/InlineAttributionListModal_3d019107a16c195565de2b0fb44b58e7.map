{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/chat/src/lib/Chat/Chat/ChatResponse/InlineAttribution/InlineAttributionListModal.tsx"],"sourcesContent":["import { useState } from \"react\"\nimport { Drawer, Tooltip } from \"@mui/material\"\nimport { useDeviceInfo } from \"@rp/react/web/common/hooks\"\nimport { InlineAttributionDisplay } from \"./InlineAttributionDisplay\"\nimport { InlineAttributionDisplayMobile } from \"./InlineAttributionDisplay.mobile\"\nimport { GroupedInlineAttributionList } from \"./getInlineAttributionData\"\n\ntype Props = {\n  attributions: GroupedInlineAttributionList\n  children: React.ReactElement\n  closeModal: () => void\n  isOpen: boolean\n  disabled?: boolean\n  showTooltip: boolean\n  onOpenTooltip: () => void\n  onCloseTooltip: () => void\n  enterDelay?: number\n  leaveDelay?: number\n}\n\nconst InlineAttributionListModal = ({\n  attributions,\n  children,\n  closeModal,\n  isOpen,\n  disabled = false,\n  showTooltip,\n  onCloseTooltip,\n  onOpenTooltip,\n}: Props) => {\n  const [selectedAttribution, setSelectedAttribution] = useState(0)\n  const { isMobile } = useDeviceInfo()\n\n  if (isMobile) {\n    return (\n      <>\n        {children}\n        <Drawer open={isOpen} anchor=\"bottom\" onClose={() => closeModal()}>\n          <InlineAttributionDisplayMobile\n            attributions={attributions}\n            selectedAttribution={selectedAttribution}\n            setSelectedAttribution={setSelectedAttribution}\n          />\n        </Drawer>\n      </>\n    )\n  }\n\n  return (\n    <Tooltip\n      placement=\"bottom-start\"\n      disableFocusListener={disabled}\n      disableTouchListener={disabled}\n      disableHoverListener={disabled}\n      enterNextDelay={500}\n      leaveDelay={500}\n      sx={{\n        bgcolor: \"red\",\n      }}\n      PopperProps={{\n        sx: {\n          minWidth: 300,\n          \"& > div\": {\n            borderRadius: 2,\n            p: 0,\n            bgcolor: \"elevation.dp03 !important\",\n          },\n        },\n      }}\n      open={showTooltip}\n      onOpen={onOpenTooltip}\n      onClose={onCloseTooltip}\n      title={\n        <InlineAttributionDisplay\n          attributions={attributions}\n          selectedAttribution={selectedAttribution}\n          setSelectedAttribution={setSelectedAttribution}\n        />\n      }\n    >\n      {children}\n    </Tooltip>\n  )\n}\nexport { InlineAttributionListModal }\n"],"names":["InlineAttributionListModal","attributions","children","closeModal","isOpen","disabled","showTooltip","onCloseTooltip","onOpenTooltip","selectedAttribution","setSelectedAttribution","useState","isMobile","useDeviceInfo","Drawer","open","anchor","onClose","InlineAttributionDisplayMobile","Tooltip","placement","disableFocusListener","disableTouchListener","disableHoverListener","enterNextDelay","leaveDelay","sx","bgcolor","PopperProps","minWidth","borderRadius","p","onOpen","title","InlineAttributionDisplay"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAoFSA;;;eAAAA;;;;uBApFgB;0BACO;uBACF;0CACW;gDACM;AAgB/C,MAAMA,6BAA6B,CAAC,EAClCC,YAAY,EACZC,QAAQ,EACRC,UAAU,EACVC,MAAM,EACNC,WAAW,KAAK,EAChBC,WAAW,EACXC,cAAc,EACdC,aAAa,EACP;IACN,MAAM,CAACC,qBAAqBC,uBAAuB,GAAGC,IAAAA,eAAQ,EAAC;IAC/D,MAAM,EAAEC,QAAQ,EAAE,GAAGC,IAAAA,oBAAa;IAElC,IAAID,UAAU;QACZ,qBACE;;gBACGV;8BACD,qBAACY,gBAAM;oBAACC,MAAMX;oBAAQY,QAAO;oBAASC,SAAS,IAAMd;8BACnD,cAAA,qBAACe,8DAA8B;wBAC7BjB,cAAcA;wBACdQ,qBAAqBA;wBACrBC,wBAAwBA;;;;;IAKlC;IAEA,qBACE,qBAACS,iBAAO;QACNC,WAAU;QACVC,sBAAsBhB;QACtBiB,sBAAsBjB;QACtBkB,sBAAsBlB;QACtBmB,gBAAgB;QAChBC,YAAY;QACZC,IAAI;YACFC,SAAS;QACX;QACAC,aAAa;YACXF,IAAI;gBACFG,UAAU;gBACV,WAAW;oBACTC,cAAc;oBACdC,GAAG;oBACHJ,SAAS;gBACX;YACF;QACF;QACAZ,MAAMT;QACN0B,QAAQxB;QACRS,SAASV;QACT0B,qBACE,qBAACC,kDAAwB;YACvBjC,cAAcA;YACdQ,qBAAqBA;YACrBC,wBAAwBA;;kBAI3BR;;AAGP"}