{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/node_modules/mdast-util-to-hast/lib/handlers/paragraph.js"],"sourcesContent":["/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n"],"names":["paragraph","state","node","result","type","tagName","properties","children","all","patch","applyData"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA;;;;CAIC,GAED,mDAAmD;AACnD;;;;;+BAYgBA;;;eAAAA;;;AAAT,SAASA,UAAUC,KAAK,EAAEC,IAAI;IACnC,oBAAoB,GACpB,MAAMC,SAAS;QACbC,MAAM;QACNC,SAAS;QACTC,YAAY,CAAC;QACbC,UAAUN,MAAMO,GAAG,CAACN;IACtB;IACAD,MAAMQ,KAAK,CAACP,MAAMC;IAClB,OAAOF,MAAMS,SAAS,CAACR,MAAMC;AAC/B"}