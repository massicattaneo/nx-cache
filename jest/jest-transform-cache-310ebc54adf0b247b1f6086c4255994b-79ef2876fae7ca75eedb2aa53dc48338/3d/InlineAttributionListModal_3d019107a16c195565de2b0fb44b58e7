c7818cf17cd760f5b0370eb97d847f40
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "InlineAttributionListModal", {
    enumerable: true,
    get: function() {
        return InlineAttributionListModal;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _material = require("@mui/material");
const _hooks = require("@rp/react/web/common/hooks");
const _InlineAttributionDisplay = require("./InlineAttributionDisplay");
const _InlineAttributionDisplaymobile = require("./InlineAttributionDisplay.mobile");
const InlineAttributionListModal = ({ attributions, children, closeModal, isOpen, disabled = false, showTooltip, onCloseTooltip, onOpenTooltip })=>{
    const [selectedAttribution, setSelectedAttribution] = (0, _react.useState)(0);
    const { isMobile } = (0, _hooks.useDeviceInfo)();
    if (isMobile) {
        return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
            children: [
                children,
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Drawer, {
                    open: isOpen,
                    anchor: "bottom",
                    onClose: ()=>closeModal(),
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_InlineAttributionDisplaymobile.InlineAttributionDisplayMobile, {
                        attributions: attributions,
                        selectedAttribution: selectedAttribution,
                        setSelectedAttribution: setSelectedAttribution
                    })
                })
            ]
        });
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Tooltip, {
        placement: "bottom-start",
        disableFocusListener: disabled,
        disableTouchListener: disabled,
        disableHoverListener: disabled,
        enterNextDelay: 500,
        leaveDelay: 500,
        sx: {
            bgcolor: "red"
        },
        PopperProps: {
            sx: {
                minWidth: 300,
                "& > div": {
                    borderRadius: 2,
                    p: 0,
                    bgcolor: "elevation.dp03 !important"
                }
            }
        },
        open: showTooltip,
        onOpen: onOpenTooltip,
        onClose: onCloseTooltip,
        title: /*#__PURE__*/ (0, _jsxruntime.jsx)(_InlineAttributionDisplay.InlineAttributionDisplay, {
            attributions: attributions,
            selectedAttribution: selectedAttribution,
            setSelectedAttribution: setSelectedAttribution
        }),
        children: children
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NoYXQvc3JjL2xpYi9DaGF0L0NoYXQvQ2hhdFJlc3BvbnNlL0lubGluZUF0dHJpYnV0aW9uL0lubGluZUF0dHJpYnV0aW9uTGlzdE1vZGFsLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgeyBEcmF3ZXIsIFRvb2x0aXAgfSBmcm9tIFwiQG11aS9tYXRlcmlhbFwiXG5pbXBvcnQgeyB1c2VEZXZpY2VJbmZvIH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvY29tbW9uL2hvb2tzXCJcbmltcG9ydCB7IElubGluZUF0dHJpYnV0aW9uRGlzcGxheSB9IGZyb20gXCIuL0lubGluZUF0dHJpYnV0aW9uRGlzcGxheVwiXG5pbXBvcnQgeyBJbmxpbmVBdHRyaWJ1dGlvbkRpc3BsYXlNb2JpbGUgfSBmcm9tIFwiLi9JbmxpbmVBdHRyaWJ1dGlvbkRpc3BsYXkubW9iaWxlXCJcbmltcG9ydCB7IEdyb3VwZWRJbmxpbmVBdHRyaWJ1dGlvbkxpc3QgfSBmcm9tIFwiLi9nZXRJbmxpbmVBdHRyaWJ1dGlvbkRhdGFcIlxuXG50eXBlIFByb3BzID0ge1xuICBhdHRyaWJ1dGlvbnM6IEdyb3VwZWRJbmxpbmVBdHRyaWJ1dGlvbkxpc3RcbiAgY2hpbGRyZW46IFJlYWN0LlJlYWN0RWxlbWVudFxuICBjbG9zZU1vZGFsOiAoKSA9PiB2b2lkXG4gIGlzT3BlbjogYm9vbGVhblxuICBkaXNhYmxlZD86IGJvb2xlYW5cbiAgc2hvd1Rvb2x0aXA6IGJvb2xlYW5cbiAgb25PcGVuVG9vbHRpcDogKCkgPT4gdm9pZFxuICBvbkNsb3NlVG9vbHRpcDogKCkgPT4gdm9pZFxuICBlbnRlckRlbGF5PzogbnVtYmVyXG4gIGxlYXZlRGVsYXk/OiBudW1iZXJcbn1cblxuY29uc3QgSW5saW5lQXR0cmlidXRpb25MaXN0TW9kYWwgPSAoe1xuICBhdHRyaWJ1dGlvbnMsXG4gIGNoaWxkcmVuLFxuICBjbG9zZU1vZGFsLFxuICBpc09wZW4sXG4gIGRpc2FibGVkID0gZmFsc2UsXG4gIHNob3dUb29sdGlwLFxuICBvbkNsb3NlVG9vbHRpcCxcbiAgb25PcGVuVG9vbHRpcCxcbn06IFByb3BzKSA9PiB7XG4gIGNvbnN0IFtzZWxlY3RlZEF0dHJpYnV0aW9uLCBzZXRTZWxlY3RlZEF0dHJpYnV0aW9uXSA9IHVzZVN0YXRlKDApXG4gIGNvbnN0IHsgaXNNb2JpbGUgfSA9IHVzZURldmljZUluZm8oKVxuXG4gIGlmIChpc01vYmlsZSkge1xuICAgIHJldHVybiAoXG4gICAgICA8PlxuICAgICAgICB7Y2hpbGRyZW59XG4gICAgICAgIDxEcmF3ZXIgb3Blbj17aXNPcGVufSBhbmNob3I9XCJib3R0b21cIiBvbkNsb3NlPXsoKSA9PiBjbG9zZU1vZGFsKCl9PlxuICAgICAgICAgIDxJbmxpbmVBdHRyaWJ1dGlvbkRpc3BsYXlNb2JpbGVcbiAgICAgICAgICAgIGF0dHJpYnV0aW9ucz17YXR0cmlidXRpb25zfVxuICAgICAgICAgICAgc2VsZWN0ZWRBdHRyaWJ1dGlvbj17c2VsZWN0ZWRBdHRyaWJ1dGlvbn1cbiAgICAgICAgICAgIHNldFNlbGVjdGVkQXR0cmlidXRpb249e3NldFNlbGVjdGVkQXR0cmlidXRpb259XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9EcmF3ZXI+XG4gICAgICA8Lz5cbiAgICApXG4gIH1cblxuICByZXR1cm4gKFxuICAgIDxUb29sdGlwXG4gICAgICBwbGFjZW1lbnQ9XCJib3R0b20tc3RhcnRcIlxuICAgICAgZGlzYWJsZUZvY3VzTGlzdGVuZXI9e2Rpc2FibGVkfVxuICAgICAgZGlzYWJsZVRvdWNoTGlzdGVuZXI9e2Rpc2FibGVkfVxuICAgICAgZGlzYWJsZUhvdmVyTGlzdGVuZXI9e2Rpc2FibGVkfVxuICAgICAgZW50ZXJOZXh0RGVsYXk9ezUwMH1cbiAgICAgIGxlYXZlRGVsYXk9ezUwMH1cbiAgICAgIHN4PXt7XG4gICAgICAgIGJnY29sb3I6IFwicmVkXCIsXG4gICAgICB9fVxuICAgICAgUG9wcGVyUHJvcHM9e3tcbiAgICAgICAgc3g6IHtcbiAgICAgICAgICBtaW5XaWR0aDogMzAwLFxuICAgICAgICAgIFwiJiA+IGRpdlwiOiB7XG4gICAgICAgICAgICBib3JkZXJSYWRpdXM6IDIsXG4gICAgICAgICAgICBwOiAwLFxuICAgICAgICAgICAgYmdjb2xvcjogXCJlbGV2YXRpb24uZHAwMyAhaW1wb3J0YW50XCIsXG4gICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgIH19XG4gICAgICBvcGVuPXtzaG93VG9vbHRpcH1cbiAgICAgIG9uT3Blbj17b25PcGVuVG9vbHRpcH1cbiAgICAgIG9uQ2xvc2U9e29uQ2xvc2VUb29sdGlwfVxuICAgICAgdGl0bGU9e1xuICAgICAgICA8SW5saW5lQXR0cmlidXRpb25EaXNwbGF5XG4gICAgICAgICAgYXR0cmlidXRpb25zPXthdHRyaWJ1dGlvbnN9XG4gICAgICAgICAgc2VsZWN0ZWRBdHRyaWJ1dGlvbj17c2VsZWN0ZWRBdHRyaWJ1dGlvbn1cbiAgICAgICAgICBzZXRTZWxlY3RlZEF0dHJpYnV0aW9uPXtzZXRTZWxlY3RlZEF0dHJpYnV0aW9ufVxuICAgICAgICAvPlxuICAgICAgfVxuICAgID5cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L1Rvb2x0aXA+XG4gIClcbn1cbmV4cG9ydCB7IElubGluZUF0dHJpYnV0aW9uTGlzdE1vZGFsIH1cbiJdLCJuYW1lcyI6WyJJbmxpbmVBdHRyaWJ1dGlvbkxpc3RNb2RhbCIsImF0dHJpYnV0aW9ucyIsImNoaWxkcmVuIiwiY2xvc2VNb2RhbCIsImlzT3BlbiIsImRpc2FibGVkIiwic2hvd1Rvb2x0aXAiLCJvbkNsb3NlVG9vbHRpcCIsIm9uT3BlblRvb2x0aXAiLCJzZWxlY3RlZEF0dHJpYnV0aW9uIiwic2V0U2VsZWN0ZWRBdHRyaWJ1dGlvbiIsInVzZVN0YXRlIiwiaXNNb2JpbGUiLCJ1c2VEZXZpY2VJbmZvIiwiRHJhd2VyIiwib3BlbiIsImFuY2hvciIsIm9uQ2xvc2UiLCJJbmxpbmVBdHRyaWJ1dGlvbkRpc3BsYXlNb2JpbGUiLCJUb29sdGlwIiwicGxhY2VtZW50IiwiZGlzYWJsZUZvY3VzTGlzdGVuZXIiLCJkaXNhYmxlVG91Y2hMaXN0ZW5lciIsImRpc2FibGVIb3Zlckxpc3RlbmVyIiwiZW50ZXJOZXh0RGVsYXkiLCJsZWF2ZURlbGF5Iiwic3giLCJiZ2NvbG9yIiwiUG9wcGVyUHJvcHMiLCJtaW5XaWR0aCIsImJvcmRlclJhZGl1cyIsInAiLCJvbk9wZW4iLCJ0aXRsZSIsIklubGluZUF0dHJpYnV0aW9uRGlzcGxheSJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBb0ZTQTs7O2VBQUFBOzs7O3VCQXBGZ0I7MEJBQ087dUJBQ0Y7MENBQ1c7Z0RBQ007QUFnQi9DLE1BQU1BLDZCQUE2QixDQUFDLEVBQ2xDQyxZQUFZLEVBQ1pDLFFBQVEsRUFDUkMsVUFBVSxFQUNWQyxNQUFNLEVBQ05DLFdBQVcsS0FBSyxFQUNoQkMsV0FBVyxFQUNYQyxjQUFjLEVBQ2RDLGFBQWEsRUFDUDtJQUNOLE1BQU0sQ0FBQ0MscUJBQXFCQyx1QkFBdUIsR0FBR0MsSUFBQUEsZUFBUSxFQUFDO0lBQy9ELE1BQU0sRUFBRUMsUUFBUSxFQUFFLEdBQUdDLElBQUFBLG9CQUFhO0lBRWxDLElBQUlELFVBQVU7UUFDWixxQkFDRTs7Z0JBQ0dWOzhCQUNELHFCQUFDWSxnQkFBTTtvQkFBQ0MsTUFBTVg7b0JBQVFZLFFBQU87b0JBQVNDLFNBQVMsSUFBTWQ7OEJBQ25ELGNBQUEscUJBQUNlLDhEQUE4Qjt3QkFDN0JqQixjQUFjQTt3QkFDZFEscUJBQXFCQTt3QkFDckJDLHdCQUF3QkE7Ozs7O0lBS2xDO0lBRUEscUJBQ0UscUJBQUNTLGlCQUFPO1FBQ05DLFdBQVU7UUFDVkMsc0JBQXNCaEI7UUFDdEJpQixzQkFBc0JqQjtRQUN0QmtCLHNCQUFzQmxCO1FBQ3RCbUIsZ0JBQWdCO1FBQ2hCQyxZQUFZO1FBQ1pDLElBQUk7WUFDRkMsU0FBUztRQUNYO1FBQ0FDLGFBQWE7WUFDWEYsSUFBSTtnQkFDRkcsVUFBVTtnQkFDVixXQUFXO29CQUNUQyxjQUFjO29CQUNkQyxHQUFHO29CQUNISixTQUFTO2dCQUNYO1lBQ0Y7UUFDRjtRQUNBWixNQUFNVDtRQUNOMEIsUUFBUXhCO1FBQ1JTLFNBQVNWO1FBQ1QwQixxQkFDRSxxQkFBQ0Msa0RBQXdCO1lBQ3ZCakMsY0FBY0E7WUFDZFEscUJBQXFCQTtZQUNyQkMsd0JBQXdCQTs7a0JBSTNCUjs7QUFHUCJ9