934fbe8032402dfe7d53e545ef2f0acd
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return slideToClickedSlide;
    }
});
const _utils = require("../../shared/utils.js");
function slideToClickedSlide() {
    const swiper = this;
    const { params, slidesEl } = swiper;
    const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;
    let slideToIndex = swiper.clickedIndex;
    let realIndex;
    const slideSelector = swiper.isElement ? `swiper-slide` : `.${params.slideClass}`;
    if (params.loop) {
        if (swiper.animating) return;
        realIndex = parseInt(swiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);
        if (params.centeredSlides) {
            if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {
                swiper.loopFix();
                slideToIndex = swiper.getSlideIndex((0, _utils.elementChildren)(slidesEl, `${slideSelector}[data-swiper-slide-index="${realIndex}"]`)[0]);
                (0, _utils.nextTick)(()=>{
                    swiper.slideTo(slideToIndex);
                });
            } else {
                swiper.slideTo(slideToIndex);
            }
        } else if (slideToIndex > swiper.slides.length - slidesPerView) {
            swiper.loopFix();
            slideToIndex = swiper.getSlideIndex((0, _utils.elementChildren)(slidesEl, `${slideSelector}[data-swiper-slide-index="${realIndex}"]`)[0]);
            (0, _utils.nextTick)(()=>{
                swiper.slideTo(slideToIndex);
            });
        } else {
            swiper.slideTo(slideToIndex);
        }
    } else {
        swiper.slideTo(slideToIndex);
    }
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9zd2lwZXIvY29yZS9zbGlkZS9zbGlkZVRvQ2xpY2tlZFNsaWRlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGVsZW1lbnRDaGlsZHJlbiwgbmV4dFRpY2sgfSBmcm9tICcuLi8uLi9zaGFyZWQvdXRpbHMuanMnO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc2xpZGVUb0NsaWNrZWRTbGlkZSgpIHtcbiAgY29uc3Qgc3dpcGVyID0gdGhpcztcbiAgY29uc3Qge1xuICAgIHBhcmFtcyxcbiAgICBzbGlkZXNFbFxuICB9ID0gc3dpcGVyO1xuICBjb25zdCBzbGlkZXNQZXJWaWV3ID0gcGFyYW1zLnNsaWRlc1BlclZpZXcgPT09ICdhdXRvJyA/IHN3aXBlci5zbGlkZXNQZXJWaWV3RHluYW1pYygpIDogcGFyYW1zLnNsaWRlc1BlclZpZXc7XG4gIGxldCBzbGlkZVRvSW5kZXggPSBzd2lwZXIuY2xpY2tlZEluZGV4O1xuICBsZXQgcmVhbEluZGV4O1xuICBjb25zdCBzbGlkZVNlbGVjdG9yID0gc3dpcGVyLmlzRWxlbWVudCA/IGBzd2lwZXItc2xpZGVgIDogYC4ke3BhcmFtcy5zbGlkZUNsYXNzfWA7XG4gIGlmIChwYXJhbXMubG9vcCkge1xuICAgIGlmIChzd2lwZXIuYW5pbWF0aW5nKSByZXR1cm47XG4gICAgcmVhbEluZGV4ID0gcGFyc2VJbnQoc3dpcGVyLmNsaWNrZWRTbGlkZS5nZXRBdHRyaWJ1dGUoJ2RhdGEtc3dpcGVyLXNsaWRlLWluZGV4JyksIDEwKTtcbiAgICBpZiAocGFyYW1zLmNlbnRlcmVkU2xpZGVzKSB7XG4gICAgICBpZiAoc2xpZGVUb0luZGV4IDwgc3dpcGVyLmxvb3BlZFNsaWRlcyAtIHNsaWRlc1BlclZpZXcgLyAyIHx8IHNsaWRlVG9JbmRleCA+IHN3aXBlci5zbGlkZXMubGVuZ3RoIC0gc3dpcGVyLmxvb3BlZFNsaWRlcyArIHNsaWRlc1BlclZpZXcgLyAyKSB7XG4gICAgICAgIHN3aXBlci5sb29wRml4KCk7XG4gICAgICAgIHNsaWRlVG9JbmRleCA9IHN3aXBlci5nZXRTbGlkZUluZGV4KGVsZW1lbnRDaGlsZHJlbihzbGlkZXNFbCwgYCR7c2xpZGVTZWxlY3Rvcn1bZGF0YS1zd2lwZXItc2xpZGUtaW5kZXg9XCIke3JlYWxJbmRleH1cIl1gKVswXSk7XG4gICAgICAgIG5leHRUaWNrKCgpID0+IHtcbiAgICAgICAgICBzd2lwZXIuc2xpZGVUbyhzbGlkZVRvSW5kZXgpO1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHN3aXBlci5zbGlkZVRvKHNsaWRlVG9JbmRleCk7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChzbGlkZVRvSW5kZXggPiBzd2lwZXIuc2xpZGVzLmxlbmd0aCAtIHNsaWRlc1BlclZpZXcpIHtcbiAgICAgIHN3aXBlci5sb29wRml4KCk7XG4gICAgICBzbGlkZVRvSW5kZXggPSBzd2lwZXIuZ2V0U2xpZGVJbmRleChlbGVtZW50Q2hpbGRyZW4oc2xpZGVzRWwsIGAke3NsaWRlU2VsZWN0b3J9W2RhdGEtc3dpcGVyLXNsaWRlLWluZGV4PVwiJHtyZWFsSW5kZXh9XCJdYClbMF0pO1xuICAgICAgbmV4dFRpY2soKCkgPT4ge1xuICAgICAgICBzd2lwZXIuc2xpZGVUbyhzbGlkZVRvSW5kZXgpO1xuICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN3aXBlci5zbGlkZVRvKHNsaWRlVG9JbmRleCk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIHN3aXBlci5zbGlkZVRvKHNsaWRlVG9JbmRleCk7XG4gIH1cbn0iXSwibmFtZXMiOlsic2xpZGVUb0NsaWNrZWRTbGlkZSIsInN3aXBlciIsInBhcmFtcyIsInNsaWRlc0VsIiwic2xpZGVzUGVyVmlldyIsInNsaWRlc1BlclZpZXdEeW5hbWljIiwic2xpZGVUb0luZGV4IiwiY2xpY2tlZEluZGV4IiwicmVhbEluZGV4Iiwic2xpZGVTZWxlY3RvciIsImlzRWxlbWVudCIsInNsaWRlQ2xhc3MiLCJsb29wIiwiYW5pbWF0aW5nIiwicGFyc2VJbnQiLCJjbGlja2VkU2xpZGUiLCJnZXRBdHRyaWJ1dGUiLCJjZW50ZXJlZFNsaWRlcyIsImxvb3BlZFNsaWRlcyIsInNsaWRlcyIsImxlbmd0aCIsImxvb3BGaXgiLCJnZXRTbGlkZUluZGV4IiwiZWxlbWVudENoaWxkcmVuIiwibmV4dFRpY2siLCJzbGlkZVRvIl0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBQ0E7OztlQUF3QkE7Ozt1QkFEa0I7QUFDM0IsU0FBU0E7SUFDdEIsTUFBTUMsU0FBUyxJQUFJO0lBQ25CLE1BQU0sRUFDSkMsTUFBTSxFQUNOQyxRQUFRLEVBQ1QsR0FBR0Y7SUFDSixNQUFNRyxnQkFBZ0JGLE9BQU9FLGFBQWEsS0FBSyxTQUFTSCxPQUFPSSxvQkFBb0IsS0FBS0gsT0FBT0UsYUFBYTtJQUM1RyxJQUFJRSxlQUFlTCxPQUFPTSxZQUFZO0lBQ3RDLElBQUlDO0lBQ0osTUFBTUMsZ0JBQWdCUixPQUFPUyxTQUFTLEdBQUcsQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRVIsT0FBT1MsVUFBVSxDQUFDLENBQUM7SUFDakYsSUFBSVQsT0FBT1UsSUFBSSxFQUFFO1FBQ2YsSUFBSVgsT0FBT1ksU0FBUyxFQUFFO1FBQ3RCTCxZQUFZTSxTQUFTYixPQUFPYyxZQUFZLENBQUNDLFlBQVksQ0FBQyw0QkFBNEI7UUFDbEYsSUFBSWQsT0FBT2UsY0FBYyxFQUFFO1lBQ3pCLElBQUlYLGVBQWVMLE9BQU9pQixZQUFZLEdBQUdkLGdCQUFnQixLQUFLRSxlQUFlTCxPQUFPa0IsTUFBTSxDQUFDQyxNQUFNLEdBQUduQixPQUFPaUIsWUFBWSxHQUFHZCxnQkFBZ0IsR0FBRztnQkFDM0lILE9BQU9vQixPQUFPO2dCQUNkZixlQUFlTCxPQUFPcUIsYUFBYSxDQUFDQyxJQUFBQSxzQkFBZSxFQUFDcEIsVUFBVSxDQUFDLEVBQUVNLGNBQWMsMEJBQTBCLEVBQUVELFVBQVUsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFO2dCQUM1SGdCLElBQUFBLGVBQVEsRUFBQztvQkFDUHZCLE9BQU93QixPQUFPLENBQUNuQjtnQkFDakI7WUFDRixPQUFPO2dCQUNMTCxPQUFPd0IsT0FBTyxDQUFDbkI7WUFDakI7UUFDRixPQUFPLElBQUlBLGVBQWVMLE9BQU9rQixNQUFNLENBQUNDLE1BQU0sR0FBR2hCLGVBQWU7WUFDOURILE9BQU9vQixPQUFPO1lBQ2RmLGVBQWVMLE9BQU9xQixhQUFhLENBQUNDLElBQUFBLHNCQUFlLEVBQUNwQixVQUFVLENBQUMsRUFBRU0sY0FBYywwQkFBMEIsRUFBRUQsVUFBVSxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUU7WUFDNUhnQixJQUFBQSxlQUFRLEVBQUM7Z0JBQ1B2QixPQUFPd0IsT0FBTyxDQUFDbkI7WUFDakI7UUFDRixPQUFPO1lBQ0xMLE9BQU93QixPQUFPLENBQUNuQjtRQUNqQjtJQUNGLE9BQU87UUFDTEwsT0FBT3dCLE9BQU8sQ0FBQ25CO0lBQ2pCO0FBQ0YifQ==