e93ad6439eec4fd8f62fceb2a09ce25f
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "useFileMetadata", {
    enumerable: true,
    get: function() {
        return useFileMetadata;
    }
});
const _react = require("react");
const _reactquery = require("@tanstack/react-query");
const _services = require("../services");
const _utils = require("../utils");
const _fileMetadatautils = require("../utils/fileMetadata.utils");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
const useFileMetadata = (baseFile)=>{
    const missingMetaData = (0, _fileMetadatautils.getIsMissingMetaData)(baseFile);
    const queryClient = (0, _reactquery.useQueryClient)();
    const results = (0, _reactquery.useQuery)({
        queryKey: _utils.filesQueryKeys.indexStatus(baseFile.id),
        queryFn: ()=>(0, _services.getIndexStatus)(baseFile.id),
        retry: missingMetaData,
        refetchInterval: _fileMetadatautils.getRefetchIntervalForUseFileMetadata,
        enabled: missingMetaData
    });
    (0, _react.useEffect)(()=>(0, _fileMetadatautils.handleEffectMissingMetadata)(baseFile, queryClient, results, missingMetaData), [
        baseFile,
        queryClient,
        results,
        missingMetaData
    ]);
    return _object_spread({
        missingMetaData
    }, results);
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3QvdGFuc3RhY2stYXBpL2ZpbGUvc3JjL2hvb2tzL3VzZUZpbGVNZXRhZGF0YS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IHsgRmlsZVJvd1R5cGUgfSBmcm9tIFwiQHJwL2NvbW1vbi91dGlsc1wiXG5pbXBvcnQgeyB1c2VRdWVyeSwgdXNlUXVlcnlDbGllbnQgfSBmcm9tIFwiQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5XCJcbmltcG9ydCB7IGdldEluZGV4U3RhdHVzIH0gZnJvbSBcIi4uL3NlcnZpY2VzXCJcbmltcG9ydCB7IGZpbGVzUXVlcnlLZXlzIH0gZnJvbSBcIi4uL3V0aWxzXCJcbmltcG9ydCB7XG4gIGdldElzTWlzc2luZ01ldGFEYXRhLFxuICBnZXRSZWZldGNoSW50ZXJ2YWxGb3JVc2VGaWxlTWV0YWRhdGEsXG4gIGhhbmRsZUVmZmVjdE1pc3NpbmdNZXRhZGF0YSxcbn0gZnJvbSBcIi4uL3V0aWxzL2ZpbGVNZXRhZGF0YS51dGlsc1wiXG5cbmNvbnN0IHVzZUZpbGVNZXRhZGF0YSA9IChiYXNlRmlsZTogRmlsZVJvd1R5cGUpID0+IHtcbiAgY29uc3QgbWlzc2luZ01ldGFEYXRhID0gZ2V0SXNNaXNzaW5nTWV0YURhdGEoYmFzZUZpbGUpXG5cbiAgY29uc3QgcXVlcnlDbGllbnQgPSB1c2VRdWVyeUNsaWVudCgpXG5cbiAgY29uc3QgcmVzdWx0cyA9IHVzZVF1ZXJ5KHtcbiAgICBxdWVyeUtleTogZmlsZXNRdWVyeUtleXMuaW5kZXhTdGF0dXMoYmFzZUZpbGUuaWQpLFxuICAgIHF1ZXJ5Rm46ICgpID0+IGdldEluZGV4U3RhdHVzKGJhc2VGaWxlLmlkKSxcbiAgICByZXRyeTogbWlzc2luZ01ldGFEYXRhLFxuICAgIHJlZmV0Y2hJbnRlcnZhbDogZ2V0UmVmZXRjaEludGVydmFsRm9yVXNlRmlsZU1ldGFkYXRhLFxuICAgIGVuYWJsZWQ6IG1pc3NpbmdNZXRhRGF0YSxcbiAgfSlcblxuICB1c2VFZmZlY3QoXG4gICAgKCkgPT4gaGFuZGxlRWZmZWN0TWlzc2luZ01ldGFkYXRhKGJhc2VGaWxlLCBxdWVyeUNsaWVudCwgcmVzdWx0cywgbWlzc2luZ01ldGFEYXRhKSxcbiAgICBbYmFzZUZpbGUsIHF1ZXJ5Q2xpZW50LCByZXN1bHRzLCBtaXNzaW5nTWV0YURhdGFdLFxuICApXG5cbiAgcmV0dXJuIHsgbWlzc2luZ01ldGFEYXRhLCAuLi5yZXN1bHRzIH1cbn1cblxuZXhwb3J0IHsgdXNlRmlsZU1ldGFkYXRhIH1cbiJdLCJuYW1lcyI6WyJ1c2VGaWxlTWV0YWRhdGEiLCJiYXNlRmlsZSIsIm1pc3NpbmdNZXRhRGF0YSIsImdldElzTWlzc2luZ01ldGFEYXRhIiwicXVlcnlDbGllbnQiLCJ1c2VRdWVyeUNsaWVudCIsInJlc3VsdHMiLCJ1c2VRdWVyeSIsInF1ZXJ5S2V5IiwiZmlsZXNRdWVyeUtleXMiLCJpbmRleFN0YXR1cyIsImlkIiwicXVlcnlGbiIsImdldEluZGV4U3RhdHVzIiwicmV0cnkiLCJyZWZldGNoSW50ZXJ2YWwiLCJnZXRSZWZldGNoSW50ZXJ2YWxGb3JVc2VGaWxlTWV0YWRhdGEiLCJlbmFibGVkIiwidXNlRWZmZWN0IiwiaGFuZGxlRWZmZWN0TWlzc2luZ01ldGFkYXRhIl0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQWdDU0E7OztlQUFBQTs7O3VCQWhDaUI7NEJBRWU7MEJBQ1Y7dUJBQ0E7bUNBS3hCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVQLE1BQU1BLGtCQUFrQixDQUFDQztJQUN2QixNQUFNQyxrQkFBa0JDLElBQUFBLHVDQUFvQixFQUFDRjtJQUU3QyxNQUFNRyxjQUFjQyxJQUFBQSwwQkFBYztJQUVsQyxNQUFNQyxVQUFVQyxJQUFBQSxvQkFBUSxFQUFDO1FBQ3ZCQyxVQUFVQyxxQkFBYyxDQUFDQyxXQUFXLENBQUNULFNBQVNVLEVBQUU7UUFDaERDLFNBQVMsSUFBTUMsSUFBQUEsd0JBQWMsRUFBQ1osU0FBU1UsRUFBRTtRQUN6Q0csT0FBT1o7UUFDUGEsaUJBQWlCQyx1REFBb0M7UUFDckRDLFNBQVNmO0lBQ1g7SUFFQWdCLElBQUFBLGdCQUFTLEVBQ1AsSUFBTUMsSUFBQUEsOENBQTJCLEVBQUNsQixVQUFVRyxhQUFhRSxTQUFTSixrQkFDbEU7UUFBQ0Q7UUFBVUc7UUFBYUU7UUFBU0o7S0FBZ0I7SUFHbkQsT0FBTztRQUFFQTtPQUFvQkk7QUFDL0IifQ==