cf37427f42274179f160d68d83e82dad
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "FadeInList", {
    enumerable: true,
    get: function() {
        return FadeInList;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _material = require("@mui/material");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
function FadeInList(props) {
    const [isVisible, setVisible] = (0, _react.useState)(false);
    const [opacity, setOpacity] = (0, _react.useState)(1);
    const domRef = (0, _react.useRef)(null);
    (0, _react.useEffect)(()=>{
        const options = {
            root: null,
            threshold: [
                0.1,
                0.2,
                0.3,
                0.4,
                0.5,
                0.6,
                0.7,
                0.8,
                0.9,
                1
            ]
        };
        const observer = new IntersectionObserver((entries)=>{
            entries.forEach((entry)=>{
                setOpacity(entry.intersectionRatio);
                setVisible(entry.isIntersecting);
            });
        }, options);
        domRef.current && observer.observe(domRef.current);
    }, [
        props.children
    ]);
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Box, {
        sx: isVisible ? {
            transition: " opacity 400ms ease-out, transform 800ms ease-out,visibility 800ms ease-out",
            willChange: "opacity, transform, visibility",
            opacity: opacity === 1 ? opacity : opacity / 2,
            transform: "none",
            visibility: "visible"
        } : {
            opacity: 0,
            transform: "none",
            visibility: "hidden",
            transition: "opacity 1200ms ease-out,  visibility 1200ms ease-out",
            willChange: "opacity, transform, visibility;"
        },
        ref: domRef,
        children: props.children
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9jb21wb3NpdGUtY29tcG9uZW50cy9zcmMvRmFkZUluTGlzdC9GYWRlSW5MaXN0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0LCB1c2VSZWYsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCJcbmltcG9ydCB7IEJveCB9IGZyb20gXCJAbXVpL21hdGVyaWFsXCJcblxudHlwZSBGYWRlSW5MaXN0UHJvcHMgPSB7IGNoaWxkcmVuOiBSZWFjdC5SZWFjdE5vZGUgfVxuXG5mdW5jdGlvbiBGYWRlSW5MaXN0KHByb3BzOiBGYWRlSW5MaXN0UHJvcHMpIHtcbiAgY29uc3QgW2lzVmlzaWJsZSwgc2V0VmlzaWJsZV0gPSB1c2VTdGF0ZShmYWxzZSlcbiAgY29uc3QgW29wYWNpdHksIHNldE9wYWNpdHldID0gdXNlU3RhdGUoMSlcbiAgY29uc3QgZG9tUmVmID0gdXNlUmVmPEVsZW1lbnQ+KG51bGwpXG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBvcHRpb25zID0ge1xuICAgICAgcm9vdDogbnVsbCxcbiAgICAgIHRocmVzaG9sZDogWzAuMSwgMC4yLCAwLjMsIDAuNCwgMC41LCAwLjYsIDAuNywgMC44LCAwLjksIDFdLFxuICAgIH1cbiAgICBjb25zdCBvYnNlcnZlciA9IG5ldyBJbnRlcnNlY3Rpb25PYnNlcnZlcihlbnRyaWVzID0+IHtcbiAgICAgIGVudHJpZXMuZm9yRWFjaChlbnRyeSA9PiB7XG4gICAgICAgIHNldE9wYWNpdHkoZW50cnkuaW50ZXJzZWN0aW9uUmF0aW8pXG4gICAgICAgIHNldFZpc2libGUoZW50cnkuaXNJbnRlcnNlY3RpbmcpXG4gICAgICB9KVxuICAgIH0sIG9wdGlvbnMpXG4gICAgZG9tUmVmLmN1cnJlbnQgJiYgb2JzZXJ2ZXIub2JzZXJ2ZShkb21SZWYuY3VycmVudClcbiAgfSwgW3Byb3BzLmNoaWxkcmVuXSlcbiAgcmV0dXJuIChcbiAgICA8Qm94XG4gICAgICBzeD17XG4gICAgICAgIGlzVmlzaWJsZVxuICAgICAgICAgID8ge1xuICAgICAgICAgICAgICB0cmFuc2l0aW9uOlxuICAgICAgICAgICAgICAgIFwiIG9wYWNpdHkgNDAwbXMgZWFzZS1vdXQsIHRyYW5zZm9ybSA4MDBtcyBlYXNlLW91dCx2aXNpYmlsaXR5IDgwMG1zIGVhc2Utb3V0XCIsXG4gICAgICAgICAgICAgIHdpbGxDaGFuZ2U6IFwib3BhY2l0eSwgdHJhbnNmb3JtLCB2aXNpYmlsaXR5XCIsXG4gICAgICAgICAgICAgIG9wYWNpdHk6IG9wYWNpdHkgPT09IDEgPyBvcGFjaXR5IDogb3BhY2l0eSAvIDIsXG4gICAgICAgICAgICAgIHRyYW5zZm9ybTogXCJub25lXCIsXG4gICAgICAgICAgICAgIHZpc2liaWxpdHk6IFwidmlzaWJsZVwiLFxuICAgICAgICAgICAgfVxuICAgICAgICAgIDoge1xuICAgICAgICAgICAgICBvcGFjaXR5OiAwLFxuICAgICAgICAgICAgICB0cmFuc2Zvcm06IFwibm9uZVwiLFxuICAgICAgICAgICAgICB2aXNpYmlsaXR5OiBcImhpZGRlblwiLFxuICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBcIm9wYWNpdHkgMTIwMG1zIGVhc2Utb3V0LCAgdmlzaWJpbGl0eSAxMjAwbXMgZWFzZS1vdXRcIixcbiAgICAgICAgICAgICAgd2lsbENoYW5nZTogXCJvcGFjaXR5LCB0cmFuc2Zvcm0sIHZpc2liaWxpdHk7XCIsXG4gICAgICAgICAgICB9XG4gICAgICB9XG4gICAgICByZWY9e2RvbVJlZn1cbiAgICA+XG4gICAgICB7cHJvcHMuY2hpbGRyZW59XG4gICAgPC9Cb3g+XG4gIClcbn1cblxuZXhwb3J0IHsgRmFkZUluTGlzdCB9XG4iXSwibmFtZXMiOlsiRmFkZUluTGlzdCIsInByb3BzIiwiaXNWaXNpYmxlIiwic2V0VmlzaWJsZSIsInVzZVN0YXRlIiwib3BhY2l0eSIsInNldE9wYWNpdHkiLCJkb21SZWYiLCJ1c2VSZWYiLCJ1c2VFZmZlY3QiLCJvcHRpb25zIiwicm9vdCIsInRocmVzaG9sZCIsIm9ic2VydmVyIiwiSW50ZXJzZWN0aW9uT2JzZXJ2ZXIiLCJlbnRyaWVzIiwiZm9yRWFjaCIsImVudHJ5IiwiaW50ZXJzZWN0aW9uUmF0aW8iLCJpc0ludGVyc2VjdGluZyIsImN1cnJlbnQiLCJvYnNlcnZlIiwiY2hpbGRyZW4iLCJCb3giLCJzeCIsInRyYW5zaXRpb24iLCJ3aWxsQ2hhbmdlIiwidHJhbnNmb3JtIiwidmlzaWJpbGl0eSIsInJlZiJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkFrRFNBOzs7ZUFBQUE7Ozs7K0RBbEQwQzswQkFDL0I7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUlwQixTQUFTQSxXQUFXQyxLQUFzQjtJQUN4QyxNQUFNLENBQUNDLFdBQVdDLFdBQVcsR0FBR0MsSUFBQUEsZUFBUSxFQUFDO0lBQ3pDLE1BQU0sQ0FBQ0MsU0FBU0MsV0FBVyxHQUFHRixJQUFBQSxlQUFRLEVBQUM7SUFDdkMsTUFBTUcsU0FBU0MsSUFBQUEsYUFBTSxFQUFVO0lBRS9CQyxJQUFBQSxnQkFBUyxFQUFDO1FBQ1IsTUFBTUMsVUFBVTtZQUNkQyxNQUFNO1lBQ05DLFdBQVc7Z0JBQUM7Z0JBQUs7Z0JBQUs7Z0JBQUs7Z0JBQUs7Z0JBQUs7Z0JBQUs7Z0JBQUs7Z0JBQUs7Z0JBQUs7YUFBRTtRQUM3RDtRQUNBLE1BQU1DLFdBQVcsSUFBSUMscUJBQXFCQyxDQUFBQTtZQUN4Q0EsUUFBUUMsT0FBTyxDQUFDQyxDQUFBQTtnQkFDZFgsV0FBV1csTUFBTUMsaUJBQWlCO2dCQUNsQ2YsV0FBV2MsTUFBTUUsY0FBYztZQUNqQztRQUNGLEdBQUdUO1FBQ0hILE9BQU9hLE9BQU8sSUFBSVAsU0FBU1EsT0FBTyxDQUFDZCxPQUFPYSxPQUFPO0lBQ25ELEdBQUc7UUFBQ25CLE1BQU1xQixRQUFRO0tBQUM7SUFDbkIscUJBQ0UscUJBQUNDLGFBQUc7UUFDRkMsSUFDRXRCLFlBQ0k7WUFDRXVCLFlBQ0U7WUFDRkMsWUFBWTtZQUNackIsU0FBU0EsWUFBWSxJQUFJQSxVQUFVQSxVQUFVO1lBQzdDc0IsV0FBVztZQUNYQyxZQUFZO1FBQ2QsSUFDQTtZQUNFdkIsU0FBUztZQUNUc0IsV0FBVztZQUNYQyxZQUFZO1lBQ1pILFlBQVk7WUFDWkMsWUFBWTtRQUNkO1FBRU5HLEtBQUt0QjtrQkFFSk4sTUFBTXFCLFFBQVE7O0FBR3JCIn0=