{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/chat/src/lib/Chat/Chat/ChatResponse/RealTimeAudit/getSourcesForAudit.tsx"],"sourcesContent":["import { StoredAuditTrace } from \"@rp/react/tanstack-api/chat\"\nimport {\n  LlmEngineSource,\n  LlmExternalStory,\n  LlmSummaryCqsStory,\n} from \"@rp/react/tanstack-api/llm-summary\"\n\ntype SourceChipData = {\n  sourceId: string\n  icon: string | null\n  label: string\n  documents: Array<LlmSummaryCqsStory | LlmExternalStory>\n}\n\nconst getSourcesForAudit = (\n  engineSources: Array<LlmEngineSource>,\n  auditTraces: Array<StoredAuditTrace>,\n) => {\n  const sources: Array<SourceChipData> = engineSources.map(({ name, srcKey, faviconUrl }) => ({\n    sourceId: srcKey,\n    icon: faviconUrl,\n    label: name,\n    documents: [],\n  }))\n\n  for (const trace of auditTraces) {\n    for (const result of trace.results) {\n      if (result.type === \"CQS\") {\n        for (const cqsResult of result.values) {\n          const source = sources.find(src => src.sourceId === cqsResult.srcKey)\n          if (source) {\n            source.documents.push(cqsResult)\n          } else {\n            sources.push({\n              sourceId: cqsResult.srcKey,\n              label: cqsResult.srcName ?? \"Unknown\",\n              documents: [cqsResult],\n              icon: null,\n            })\n          }\n        }\n      }\n      if (result.type === \"EXTERNAL\") {\n        for (const externalResult of result.values) {\n          if (!externalResult.id) {\n            continue\n          }\n          const source = sources.find(src => src.sourceId === externalResult.id)\n\n          if (source) {\n            source.documents.push(externalResult)\n          } else {\n            sources.push({\n              sourceId: externalResult.id,\n              label: externalResult.action.name,\n              icon: externalResult.action.faviconUrl,\n              documents: [externalResult],\n            })\n          }\n        }\n      }\n    }\n  }\n\n  return sources\n}\n\nexport { getSourcesForAudit }\nexport type { SourceChipData }\n"],"names":["getSourcesForAudit","engineSources","auditTraces","sources","map","name","srcKey","faviconUrl","sourceId","icon","label","documents","trace","result","results","type","cqsResult","values","source","find","src","push","srcName","externalResult","id","action"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAmESA;;;eAAAA;;;AArDT,MAAMA,qBAAqB,CACzBC,eACAC;IAEA,MAAMC,UAAiCF,cAAcG,GAAG,CAAC,CAAC,EAAEC,IAAI,EAAEC,MAAM,EAAEC,UAAU,EAAE,GAAM,CAAA;YAC1FC,UAAUF;YACVG,MAAMF;YACNG,OAAOL;YACPM,WAAW,EAAE;QACf,CAAA;IAEA,KAAK,MAAMC,SAASV,YAAa;QAC/B,KAAK,MAAMW,UAAUD,MAAME,OAAO,CAAE;YAClC,IAAID,OAAOE,IAAI,KAAK,OAAO;gBACzB,KAAK,MAAMC,aAAaH,OAAOI,MAAM,CAAE;oBACrC,MAAMC,SAASf,QAAQgB,IAAI,CAACC,CAAAA,MAAOA,IAAIZ,QAAQ,KAAKQ,UAAUV,MAAM;oBACpE,IAAIY,QAAQ;wBACVA,OAAOP,SAAS,CAACU,IAAI,CAACL;oBACxB,OAAO;4BAGIA;wBAFTb,QAAQkB,IAAI,CAAC;4BACXb,UAAUQ,UAAUV,MAAM;4BAC1BI,OAAOM,CAAAA,qBAAAA,UAAUM,OAAO,cAAjBN,gCAAAA,qBAAqB;4BAC5BL,WAAW;gCAACK;6BAAU;4BACtBP,MAAM;wBACR;oBACF;gBACF;YACF;YACA,IAAII,OAAOE,IAAI,KAAK,YAAY;gBAC9B,KAAK,MAAMQ,kBAAkBV,OAAOI,MAAM,CAAE;oBAC1C,IAAI,CAACM,eAAeC,EAAE,EAAE;wBACtB;oBACF;oBACA,MAAMN,SAASf,QAAQgB,IAAI,CAACC,CAAAA,MAAOA,IAAIZ,QAAQ,KAAKe,eAAeC,EAAE;oBAErE,IAAIN,QAAQ;wBACVA,OAAOP,SAAS,CAACU,IAAI,CAACE;oBACxB,OAAO;wBACLpB,QAAQkB,IAAI,CAAC;4BACXb,UAAUe,eAAeC,EAAE;4BAC3Bd,OAAOa,eAAeE,MAAM,CAACpB,IAAI;4BACjCI,MAAMc,eAAeE,MAAM,CAAClB,UAAU;4BACtCI,WAAW;gCAACY;6BAAe;wBAC7B;oBACF;gBACF;YACF;QACF;IACF;IAEA,OAAOpB;AACT"}