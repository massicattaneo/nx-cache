9fd7570c6337a9a5aa9f4580d9c8cc59
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    EngineChartWidgetsEnum: function() {
        return EngineChartWidgetsEnum;
    },
    useEngineChartMocks: function() {
        return useEngineChartMocks;
    }
});
const _adapters = require("@rp/adapters");
const _reactquery = require("@tanstack/react-query");
var EngineChartWidgetsEnum;
(function(EngineChartWidgetsEnum) {
    EngineChartWidgetsEnum["CATEGORICAL_CARTESIAN"] = "categoricalCartesian";
    EngineChartWidgetsEnum["CONTINUOUS_CARTESIAN"] = "continuousCartesian";
    EngineChartWidgetsEnum["MAP_GEO"] = "mapGeo";
    EngineChartWidgetsEnum["PIE"] = "pie";
    EngineChartWidgetsEnum["TABLE_GRID"] = "tableGrid";
    EngineChartWidgetsEnum["TILE_MATRIX"] = "tileMatrix";
    EngineChartWidgetsEnum["TIME_SERIES"] = "timeseries";
    EngineChartWidgetsEnum["TREE"] = "tree";
})(EngineChartWidgetsEnum || (EngineChartWidgetsEnum = {}));
const getEngineChartMocks = async (name)=>{
    const data = fetch(`${_adapters.adapters.location.getAbsoluteBaseUrl()}engine-chart-mocks/${name}.json`).then((res)=>res.json());
    return data;
};
const useEngineChartMocks = (name)=>{
    return (0, _reactquery.useQuery)({
        queryKey: [
            "engineChartMocks",
            name
        ],
        queryFn: ()=>getEngineChartMocks(name),
        staleTime: Infinity
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3QvY29tbW9uL2hvb2tzL3NyYy9saWIvdXNlRW5naW5lQ2hhcnRNb2Nrcy91c2VFbmdpbmVDaGFydE1vY2tzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFkYXB0ZXJzIH0gZnJvbSBcIkBycC9hZGFwdGVyc1wiXG5pbXBvcnQgeyB1c2VRdWVyeSB9IGZyb20gXCJAdGFuc3RhY2svcmVhY3QtcXVlcnlcIlxuXG5leHBvcnQgZW51bSBFbmdpbmVDaGFydFdpZGdldHNFbnVtIHtcbiAgQ0FURUdPUklDQUxfQ0FSVEVTSUFOID0gXCJjYXRlZ29yaWNhbENhcnRlc2lhblwiLFxuICBDT05USU5VT1VTX0NBUlRFU0lBTiA9IFwiY29udGludW91c0NhcnRlc2lhblwiLFxuICBNQVBfR0VPID0gXCJtYXBHZW9cIixcbiAgUElFID0gXCJwaWVcIixcbiAgVEFCTEVfR1JJRCA9IFwidGFibGVHcmlkXCIsXG4gIFRJTEVfTUFUUklYID0gXCJ0aWxlTWF0cml4XCIsXG4gIFRJTUVfU0VSSUVTID0gXCJ0aW1lc2VyaWVzXCIsXG4gIFRSRUUgPSBcInRyZWVcIixcbn1cblxudHlwZSBFbmdpbmVDaGFydFJlc3BvbnNlID0ge1xuICBhbnN3ZXI6IHN0cmluZ1xuICB3aWRnZXRfc3BlYzogQXJyYXk8UmVjb3JkPHN0cmluZywgdW5rbm93bj4+XG4gIHNxbF9xdWVyeTogc3RyaW5nXG4gIGV4cGxhaW5lcjogc3RyaW5nXG59XG5cbmNvbnN0IGdldEVuZ2luZUNoYXJ0TW9ja3MgPSBhc3luYyAobmFtZTogRW5naW5lQ2hhcnRXaWRnZXRzRW51bSkgPT4ge1xuICBjb25zdCBkYXRhID0gZmV0Y2goXG4gICAgYCR7YWRhcHRlcnMubG9jYXRpb24uZ2V0QWJzb2x1dGVCYXNlVXJsKCl9ZW5naW5lLWNoYXJ0LW1vY2tzLyR7bmFtZX0uanNvbmAsXG4gICkudGhlbihyZXMgPT4gcmVzLmpzb24oKSlcbiAgcmV0dXJuIGRhdGEgYXMgdW5rbm93biBhcyBFbmdpbmVDaGFydFJlc3BvbnNlXG59XG5cbmV4cG9ydCBjb25zdCB1c2VFbmdpbmVDaGFydE1vY2tzID0gKG5hbWU6IEVuZ2luZUNoYXJ0V2lkZ2V0c0VudW0pID0+IHtcbiAgcmV0dXJuIHVzZVF1ZXJ5KHtcbiAgICBxdWVyeUtleTogW1wiZW5naW5lQ2hhcnRNb2Nrc1wiLCBuYW1lXSxcbiAgICBxdWVyeUZuOiAoKSA9PiBnZXRFbmdpbmVDaGFydE1vY2tzKG5hbWUpLFxuICAgIHN0YWxlVGltZTogSW5maW5pdHksXG4gIH0pXG59XG4iXSwibmFtZXMiOlsidXNlRW5naW5lQ2hhcnRNb2NrcyIsIkVuZ2luZUNoYXJ0V2lkZ2V0c0VudW0iLCJnZXRFbmdpbmVDaGFydE1vY2tzIiwibmFtZSIsImRhdGEiLCJmZXRjaCIsImFkYXB0ZXJzIiwibG9jYXRpb24iLCJnZXRBYnNvbHV0ZUJhc2VVcmwiLCJ0aGVuIiwicmVzIiwianNvbiIsInVzZVF1ZXJ5IiwicXVlcnlLZXkiLCJxdWVyeUZuIiwic3RhbGVUaW1lIiwiSW5maW5pdHkiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0lBNEJhQSxtQkFBbUI7ZUFBbkJBOzs7MEJBNUJZOzRCQUNBOztVQUViQzs7Ozs7Ozs7O0dBQUFBLDJCQUFBQTtBQWtCWixNQUFNQyxzQkFBc0IsT0FBT0M7SUFDakMsTUFBTUMsT0FBT0MsTUFDWCxDQUFDLEVBQUVDLGtCQUFRLENBQUNDLFFBQVEsQ0FBQ0Msa0JBQWtCLEdBQUcsbUJBQW1CLEVBQUVMLEtBQUssS0FBSyxDQUFDLEVBQzFFTSxJQUFJLENBQUNDLENBQUFBLE1BQU9BLElBQUlDLElBQUk7SUFDdEIsT0FBT1A7QUFDVDtBQUVPLE1BQU1KLHNCQUFzQixDQUFDRztJQUNsQyxPQUFPUyxJQUFBQSxvQkFBUSxFQUFDO1FBQ2RDLFVBQVU7WUFBQztZQUFvQlY7U0FBSztRQUNwQ1csU0FBUyxJQUFNWixvQkFBb0JDO1FBQ25DWSxXQUFXQztJQUNiO0FBQ0YifQ==