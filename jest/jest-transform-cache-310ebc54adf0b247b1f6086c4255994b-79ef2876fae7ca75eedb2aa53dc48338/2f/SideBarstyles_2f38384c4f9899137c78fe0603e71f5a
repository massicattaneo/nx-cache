a5ddf135b25e66df6dd299c0eb462f94
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    CollapsableSideBarDrawerStyled: function() {
        return CollapsableSideBarDrawerStyled;
    },
    HeaderAvatar: function() {
        return HeaderAvatar;
    },
    HeaderMenu: function() {
        return HeaderMenu;
    },
    StyledSideBarLinkContained: function() {
        return StyledSideBarLinkContained;
    },
    StyledSideBarMenu: function() {
        return StyledSideBarMenu;
    },
    styledSideBarSubMenu: function() {
        return styledSideBarSubMenu;
    }
});
const _reactrouterdom = require("react-router-dom");
const _settings = require("@rp/common/settings");
const _theme = require("@rp/react/theme");
const _core = require("@rp/react/web/mui/core");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const baseButtonStyles = (theme, selected, variant = "hover")=>({
        display: "flex",
        justifyContent: "left",
        gap: theme.spacing(1),
        alignItems: "center",
        textDecoration: "none",
        width: "100%",
        borderRadius: theme.spacing(0.5),
        transition: "background-color 0.2s ease-in-out",
        cursor: "pointer",
        paddingLeft: theme.spacing(1),
        paddingRight: theme.spacing(1),
        paddingTop: theme.spacing(0.75),
        paddingBottom: theme.spacing(0.75),
        "&:hover": {
            backgroundColor: theme.palette.overlay.surface
        },
        "&:hover p, &:hover svg": {
            color: variant === "click" ? undefined : theme.palette.text.primary
        },
        "& p": {
            textTransform: variant === "click" ? undefined : "none",
            fontSize: variant === "click" ? 12 : 13,
            lineHeight: "24px",
            color: selected ? theme.palette.text.primary : theme.palette.grey[300],
            transition: "color 0.2s ease-in-out",
            fontWeight: selected || variant === "click" ? 700 : undefined
        },
        "& svg": {
            width: 24,
            height: 24,
            color: selected ? theme.palette.text.primary : theme.palette.grey[300],
            transition: "color 0.2s ease-in-out"
        }
    });
const StyledSideBarLinkContained = (0, _theme.styled)(_reactrouterdom.Link)(({ theme })=>_object_spread_props(_object_spread({}, baseButtonStyles(theme, false, "click")), {
        borderRadius: "35px",
        textTransform: "none",
        backgroundColor: (0, _core.alpha)(theme.palette.primary.main, 0.2),
        fontSize: 16,
        fontWeight: 500,
        color: theme.palette.primary.main,
        display: "flex",
        flexDirection: "row",
        justifyContent: "center",
        "& svg, &:visited, &:visited svg": {
            color: theme.palette.primary.main,
            fill: theme.palette.primary.main
        },
        "&:hover": {
            backgroundColor: (0, _core.alpha)(theme.palette.primary.main, 0.3)
        }
    }));
const StyledSideBarMenu = (0, _theme.styled)(_core.Button, {
    shouldForwardProp: (prop)=>prop !== "selected" && prop !== "menuOpen" && prop !== "menuVariant"
})(({ theme, selected, menuOpen, menuVariant })=>{
    const baseBgColor = (0, _core.alpha)(theme.palette.primary.main, 0.2);
    const baseColor = theme.palette.text.primary;
    if (menuVariant === "text") {
        return _object_spread_props(_object_spread({}, baseButtonStyles(theme, selected, "click")), {
            textTransform: "unset",
            backgroundColor: menuOpen ? theme.palette.overlay.surface : undefined,
            paddingLeft: theme.spacing(1.5),
            paddingTop: theme.spacing(0),
            paddingBottom: theme.spacing(0),
            height: 30,
            "& p": {
                fontWeight: selected ? 700 : 400,
                fontSize: 16,
                color: theme.palette.text.primary
            },
            "& svg": {
                fontSize: 20,
                color: theme.palette.text.primary
            }
        });
    }
    return _object_spread_props(_object_spread({}, baseButtonStyles(theme, selected, "click")), {
        backgroundColor: menuOpen ? theme.palette.overlay.surface : baseBgColor,
        width: "110px",
        textTransform: "none",
        fontSize: 16,
        "&:hover": {
            backgroundColor: menuOpen ? theme.palette.overlay.surface : (0, _core.alpha)(theme.palette.primary.main, 0.3)
        },
        "& > p": {
            fontWeight: 500,
            fontSize: 16,
            color: menuOpen ? baseColor : theme.palette.primary.main
        },
        "& > svg": {
            fontWeight: 400,
            marginLeft: theme.spacing(0.5),
            color: menuOpen ? baseColor : theme.palette.primary.main,
            transition: "transform 0.2s ease-in-out",
            transform: menuOpen ? "rotateZ(45deg)" : undefined
        }
    });
});
const HeaderAvatar = (0, _theme.styled)(_core.Avatar)(({ theme })=>({
        backgroundColor: theme.palette.overlay.surface,
        color: theme.palette.text.secondary,
        cursor: "pointer",
        fontSize: 14,
        width: 30,
        height: 30
    }));
const HeaderMenu = (0, _theme.styled)(_core.Menu)(({ theme })=>({
        ".MuiPaper-root": {
            backgroundColor: theme.palette.elevation.dp08,
            minWidth: 200,
            marginLeft: "12px"
        },
        a: {
            color: theme.palette.text.primary,
            textDecoration: "none"
        },
        svg: {
            color: theme.palette.grey[300]
        }
    }));
const styledSideBarSubMenu = (theme)=>({
        width: "172px",
        padding: theme.spacing(0.5),
        backgroundColor: theme.palette.elevation.dp01,
        boxShadow: "0px 11px 23px 0px #0000004D",
        borderRadius: "4px",
        ml: 1,
        display: "flex",
        gap: 0.5,
        flexDirection: "column",
        "& a.MuiMenuItem-root": {
            borderRadius: "4px",
            padding: 0.5
        },
        "& a em": {
            borderRadius: "4px",
            p: 0.5,
            display: "flex",
            alignItems: "center",
            backgroundColor: (0, _core.alpha)(theme.palette.primary.main, 0.2)
        },
        "& em svg": {
            fill: theme.palette.primary.main
        },
        "& a.MuiMenuItem-root:hover": {
            backgroundColor: theme.palette.overlay.surface
        },
        "& a p": {
            marginLeft: "12px"
        }
    });
const CollapsableSideBarDrawerStyled = (0, _theme.styled)(_core.Drawer, {
    shouldForwardProp: (prop)=>prop !== "open"
})(({ theme, open })=>({
        "& .MuiDrawer-paper": _object_spread({
            position: "relative",
            whiteSpace: "nowrap",
            width: _settings.SIDEBAR_WIDTH,
            transition: theme.transitions.create("width", {
                easing: theme.transitions.easing.sharp,
                duration: theme.transitions.duration.enteringScreen
            }),
            boxSizing: "border-box"
        }, !open && {
            overflowX: "hidden",
            transition: theme.transitions.create("width", {
                easing: theme.transitions.easing.sharp,
                duration: theme.transitions.duration.leavingScreen
            }),
            width: _settings.COLLAPSED_SIDEBAR_WIDTH
        })
    }));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9jb21wb3NpdGUtY29tcG9uZW50cy9zcmMvU2lkZUJhci9TaWRlQmFyLnN0eWxlcy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBMaW5rIH0gZnJvbSBcInJlYWN0LXJvdXRlci1kb21cIlxuaW1wb3J0IHsgQ09MTEFQU0VEX1NJREVCQVJfV0lEVEgsIFNJREVCQVJfV0lEVEggfSBmcm9tIFwiQHJwL2NvbW1vbi9zZXR0aW5nc1wiXG5pbXBvcnQgeyBSUFRoZW1lUHJvcHMsIHN0eWxlZCB9IGZyb20gXCJAcnAvcmVhY3QvdGhlbWVcIlxuaW1wb3J0IHsgQXZhdGFyLCBCdXR0b24sIERyYXdlciwgTWVudSwgU3hQcm9wcywgYWxwaGEgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9tdWkvY29yZVwiXG5cbmNvbnN0IGJhc2VCdXR0b25TdHlsZXMgPSAoXG4gIHRoZW1lOiBSUFRoZW1lUHJvcHMsXG4gIHNlbGVjdGVkPzogYm9vbGVhbixcbiAgdmFyaWFudDogXCJob3ZlclwiIHwgXCJjbGlja1wiID0gXCJob3ZlclwiLFxuKSA9PiAoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAganVzdGlmeUNvbnRlbnQ6IFwibGVmdFwiLFxuICBnYXA6IHRoZW1lLnNwYWNpbmcoMSksXG4gIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gIHRleHREZWNvcmF0aW9uOiBcIm5vbmVcIixcbiAgd2lkdGg6IFwiMTAwJVwiLFxuICBib3JkZXJSYWRpdXM6IHRoZW1lLnNwYWNpbmcoMC41KSxcbiAgdHJhbnNpdGlvbjogXCJiYWNrZ3JvdW5kLWNvbG9yIDAuMnMgZWFzZS1pbi1vdXRcIixcbiAgY3Vyc29yOiBcInBvaW50ZXJcIixcbiAgcGFkZGluZ0xlZnQ6IHRoZW1lLnNwYWNpbmcoMSksXG4gIHBhZGRpbmdSaWdodDogdGhlbWUuc3BhY2luZygxKSxcbiAgcGFkZGluZ1RvcDogdGhlbWUuc3BhY2luZygwLjc1KSxcbiAgcGFkZGluZ0JvdHRvbTogdGhlbWUuc3BhY2luZygwLjc1KSxcbiAgXCImOmhvdmVyXCI6IHtcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLnBhbGV0dGUub3ZlcmxheS5zdXJmYWNlLFxuICB9LFxuICBcIiY6aG92ZXIgcCwgJjpob3ZlciBzdmdcIjoge1xuICAgIGNvbG9yOiB2YXJpYW50ID09PSBcImNsaWNrXCIgPyB1bmRlZmluZWQgOiB0aGVtZS5wYWxldHRlLnRleHQucHJpbWFyeSxcbiAgfSxcbiAgXCImIHBcIjoge1xuICAgIHRleHRUcmFuc2Zvcm06IHZhcmlhbnQgPT09IFwiY2xpY2tcIiA/IHVuZGVmaW5lZCA6IFwibm9uZVwiLFxuICAgIGZvbnRTaXplOiB2YXJpYW50ID09PSBcImNsaWNrXCIgPyAxMiA6IDEzLFxuICAgIGxpbmVIZWlnaHQ6IFwiMjRweFwiLFxuICAgIGNvbG9yOiBzZWxlY3RlZCA/IHRoZW1lLnBhbGV0dGUudGV4dC5wcmltYXJ5IDogdGhlbWUucGFsZXR0ZS5ncmV5WzMwMF0sXG4gICAgdHJhbnNpdGlvbjogXCJjb2xvciAwLjJzIGVhc2UtaW4tb3V0XCIsXG4gICAgZm9udFdlaWdodDogc2VsZWN0ZWQgfHwgdmFyaWFudCA9PT0gXCJjbGlja1wiID8gNzAwIDogdW5kZWZpbmVkLFxuICB9LFxuICBcIiYgc3ZnXCI6IHtcbiAgICB3aWR0aDogMjQsXG4gICAgaGVpZ2h0OiAyNCxcbiAgICBjb2xvcjogc2VsZWN0ZWQgPyB0aGVtZS5wYWxldHRlLnRleHQucHJpbWFyeSA6IHRoZW1lLnBhbGV0dGUuZ3JleVszMDBdLFxuICAgIHRyYW5zaXRpb246IFwiY29sb3IgMC4ycyBlYXNlLWluLW91dFwiLFxuICB9LFxufSlcblxuY29uc3QgU3R5bGVkU2lkZUJhckxpbmtDb250YWluZWQgPSBzdHlsZWQoTGluaykoKHsgdGhlbWUgfSkgPT4gKHtcbiAgLi4uYmFzZUJ1dHRvblN0eWxlcyh0aGVtZSwgZmFsc2UsIFwiY2xpY2tcIiksXG4gIGJvcmRlclJhZGl1czogXCIzNXB4XCIsXG4gIHRleHRUcmFuc2Zvcm06IFwibm9uZVwiLFxuICBiYWNrZ3JvdW5kQ29sb3I6IGFscGhhKHRoZW1lLnBhbGV0dGUucHJpbWFyeS5tYWluLCAwLjIpLFxuICBmb250U2l6ZTogMTYsXG4gIGZvbnRXZWlnaHQ6IDUwMCxcbiAgY29sb3I6IHRoZW1lLnBhbGV0dGUucHJpbWFyeS5tYWluLFxuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgZmxleERpcmVjdGlvbjogXCJyb3dcIixcbiAganVzdGlmeUNvbnRlbnQ6IFwiY2VudGVyXCIsXG4gIFwiJiBzdmcsICY6dmlzaXRlZCwgJjp2aXNpdGVkIHN2Z1wiOiB7XG4gICAgY29sb3I6IHRoZW1lLnBhbGV0dGUucHJpbWFyeS5tYWluLFxuICAgIGZpbGw6IHRoZW1lLnBhbGV0dGUucHJpbWFyeS5tYWluLFxuICB9LFxuICBcIiY6aG92ZXJcIjoge1xuICAgIGJhY2tncm91bmRDb2xvcjogYWxwaGEodGhlbWUucGFsZXR0ZS5wcmltYXJ5Lm1haW4sIDAuMyksXG4gIH0sXG59KSlcblxuY29uc3QgU3R5bGVkU2lkZUJhck1lbnUgPSBzdHlsZWQoQnV0dG9uLCB7XG4gIHNob3VsZEZvcndhcmRQcm9wOiBwcm9wID0+IHByb3AgIT09IFwic2VsZWN0ZWRcIiAmJiBwcm9wICE9PSBcIm1lbnVPcGVuXCIgJiYgcHJvcCAhPT0gXCJtZW51VmFyaWFudFwiLFxufSk8e1xuICBzZWxlY3RlZD86IGJvb2xlYW5cbiAgbWVudU9wZW4/OiBib29sZWFuXG4gIG1lbnVWYXJpYW50OiBcImJ1dHRvblwiIHwgXCJ0ZXh0XCJcbn0+KCh7IHRoZW1lLCBzZWxlY3RlZCwgbWVudU9wZW4sIG1lbnVWYXJpYW50IH0pID0+IHtcbiAgY29uc3QgYmFzZUJnQ29sb3IgPSBhbHBoYSh0aGVtZS5wYWxldHRlLnByaW1hcnkubWFpbiwgMC4yKVxuICBjb25zdCBiYXNlQ29sb3IgPSB0aGVtZS5wYWxldHRlLnRleHQucHJpbWFyeVxuXG4gIGlmIChtZW51VmFyaWFudCA9PT0gXCJ0ZXh0XCIpIHtcbiAgICByZXR1cm4ge1xuICAgICAgLi4uYmFzZUJ1dHRvblN0eWxlcyh0aGVtZSwgc2VsZWN0ZWQsIFwiY2xpY2tcIiksXG4gICAgICB0ZXh0VHJhbnNmb3JtOiBcInVuc2V0XCIsXG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6IG1lbnVPcGVuID8gdGhlbWUucGFsZXR0ZS5vdmVybGF5LnN1cmZhY2UgOiB1bmRlZmluZWQsXG4gICAgICBwYWRkaW5nTGVmdDogdGhlbWUuc3BhY2luZygxLjUpLFxuICAgICAgcGFkZGluZ1RvcDogdGhlbWUuc3BhY2luZygwKSxcbiAgICAgIHBhZGRpbmdCb3R0b206IHRoZW1lLnNwYWNpbmcoMCksXG4gICAgICBoZWlnaHQ6IDMwLFxuICAgICAgXCImIHBcIjoge1xuICAgICAgICBmb250V2VpZ2h0OiBzZWxlY3RlZCA/IDcwMCA6IDQwMCxcbiAgICAgICAgZm9udFNpemU6IDE2LFxuICAgICAgICBjb2xvcjogdGhlbWUucGFsZXR0ZS50ZXh0LnByaW1hcnksXG4gICAgICB9LFxuICAgICAgXCImIHN2Z1wiOiB7XG4gICAgICAgIGZvbnRTaXplOiAyMCxcbiAgICAgICAgY29sb3I6IHRoZW1lLnBhbGV0dGUudGV4dC5wcmltYXJ5LFxuICAgICAgfSxcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHtcbiAgICAuLi5iYXNlQnV0dG9uU3R5bGVzKHRoZW1lLCBzZWxlY3RlZCwgXCJjbGlja1wiKSxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IG1lbnVPcGVuID8gdGhlbWUucGFsZXR0ZS5vdmVybGF5LnN1cmZhY2UgOiBiYXNlQmdDb2xvcixcbiAgICB3aWR0aDogXCIxMTBweFwiLFxuICAgIHRleHRUcmFuc2Zvcm06IFwibm9uZVwiLFxuICAgIGZvbnRTaXplOiAxNixcbiAgICBcIiY6aG92ZXJcIjoge1xuICAgICAgYmFja2dyb3VuZENvbG9yOiBtZW51T3BlblxuICAgICAgICA/IHRoZW1lLnBhbGV0dGUub3ZlcmxheS5zdXJmYWNlXG4gICAgICAgIDogYWxwaGEodGhlbWUucGFsZXR0ZS5wcmltYXJ5Lm1haW4sIDAuMyksXG4gICAgfSxcbiAgICBcIiYgPiBwXCI6IHtcbiAgICAgIGZvbnRXZWlnaHQ6IDUwMCxcbiAgICAgIGZvbnRTaXplOiAxNixcbiAgICAgIGNvbG9yOiBtZW51T3BlbiA/IGJhc2VDb2xvciA6IHRoZW1lLnBhbGV0dGUucHJpbWFyeS5tYWluLFxuICAgIH0sXG4gICAgXCImID4gc3ZnXCI6IHtcbiAgICAgIGZvbnRXZWlnaHQ6IDQwMCxcbiAgICAgIG1hcmdpbkxlZnQ6IHRoZW1lLnNwYWNpbmcoMC41KSxcbiAgICAgIGNvbG9yOiBtZW51T3BlbiA/IGJhc2VDb2xvciA6IHRoZW1lLnBhbGV0dGUucHJpbWFyeS5tYWluLFxuICAgICAgdHJhbnNpdGlvbjogXCJ0cmFuc2Zvcm0gMC4ycyBlYXNlLWluLW91dFwiLFxuICAgICAgdHJhbnNmb3JtOiBtZW51T3BlbiA/IFwicm90YXRlWig0NWRlZylcIiA6IHVuZGVmaW5lZCxcbiAgICB9LFxuICB9XG59KVxuXG5jb25zdCBIZWFkZXJBdmF0YXIgPSBzdHlsZWQoQXZhdGFyKSgoeyB0aGVtZSB9KSA9PiAoe1xuICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLnBhbGV0dGUub3ZlcmxheS5zdXJmYWNlLFxuICBjb2xvcjogdGhlbWUucGFsZXR0ZS50ZXh0LnNlY29uZGFyeSxcbiAgY3Vyc29yOiBcInBvaW50ZXJcIixcbiAgZm9udFNpemU6IDE0LFxuICB3aWR0aDogMzAsXG4gIGhlaWdodDogMzAsXG59KSlcblxuY29uc3QgSGVhZGVyTWVudSA9IHN0eWxlZChNZW51KSgoeyB0aGVtZSB9KSA9PiAoe1xuICBcIi5NdWlQYXBlci1yb290XCI6IHtcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLnBhbGV0dGUuZWxldmF0aW9uLmRwMDgsXG4gICAgbWluV2lkdGg6IDIwMCxcbiAgICBtYXJnaW5MZWZ0OiBcIjEycHhcIixcbiAgfSxcbiAgYToge1xuICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLnRleHQucHJpbWFyeSxcbiAgICB0ZXh0RGVjb3JhdGlvbjogXCJub25lXCIsXG4gIH0sXG5cbiAgc3ZnOiB7XG4gICAgY29sb3I6IHRoZW1lLnBhbGV0dGUuZ3JleVszMDBdLFxuICB9LFxufSkpXG5cbmNvbnN0IHN0eWxlZFNpZGVCYXJTdWJNZW51OiBTeFByb3BzPFJQVGhlbWVQcm9wcz4gPSB0aGVtZSA9PiAoe1xuICB3aWR0aDogXCIxNzJweFwiLFxuICBwYWRkaW5nOiB0aGVtZS5zcGFjaW5nKDAuNSksXG4gIGJhY2tncm91bmRDb2xvcjogdGhlbWUucGFsZXR0ZS5lbGV2YXRpb24uZHAwMSxcbiAgYm94U2hhZG93OiBcIjBweCAxMXB4IDIzcHggMHB4ICMwMDAwMDA0RFwiLFxuICBib3JkZXJSYWRpdXM6IFwiNHB4XCIsXG4gIG1sOiAxLFxuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgZ2FwOiAwLjUsXG4gIGZsZXhEaXJlY3Rpb246IFwiY29sdW1uXCIsXG4gIFwiJiBhLk11aU1lbnVJdGVtLXJvb3RcIjoge1xuICAgIGJvcmRlclJhZGl1czogXCI0cHhcIixcbiAgICBwYWRkaW5nOiAwLjUsXG4gIH0sXG4gIFwiJiBhIGVtXCI6IHtcbiAgICBib3JkZXJSYWRpdXM6IFwiNHB4XCIsXG4gICAgcDogMC41LFxuICAgIGRpc3BsYXk6IFwiZmxleFwiLFxuICAgIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gICAgYmFja2dyb3VuZENvbG9yOiBhbHBoYSh0aGVtZS5wYWxldHRlLnByaW1hcnkubWFpbiwgMC4yKSxcbiAgfSxcbiAgXCImIGVtIHN2Z1wiOiB7XG4gICAgZmlsbDogdGhlbWUucGFsZXR0ZS5wcmltYXJ5Lm1haW4sXG4gIH0sXG4gIFwiJiBhLk11aU1lbnVJdGVtLXJvb3Q6aG92ZXJcIjoge1xuICAgIGJhY2tncm91bmRDb2xvcjogdGhlbWUucGFsZXR0ZS5vdmVybGF5LnN1cmZhY2UsXG4gIH0sXG4gIFwiJiBhIHBcIjoge1xuICAgIG1hcmdpbkxlZnQ6IFwiMTJweFwiLFxuICB9LFxufSlcblxuY29uc3QgQ29sbGFwc2FibGVTaWRlQmFyRHJhd2VyU3R5bGVkID0gc3R5bGVkKERyYXdlciwge1xuICBzaG91bGRGb3J3YXJkUHJvcDogcHJvcCA9PiBwcm9wICE9PSBcIm9wZW5cIixcbn0pKCh7IHRoZW1lLCBvcGVuIH0pID0+ICh7XG4gIFwiJiAuTXVpRHJhd2VyLXBhcGVyXCI6IHtcbiAgICBwb3NpdGlvbjogXCJyZWxhdGl2ZVwiLFxuICAgIHdoaXRlU3BhY2U6IFwibm93cmFwXCIsXG4gICAgd2lkdGg6IFNJREVCQVJfV0lEVEgsXG4gICAgdHJhbnNpdGlvbjogdGhlbWUudHJhbnNpdGlvbnMuY3JlYXRlKFwid2lkdGhcIiwge1xuICAgICAgZWFzaW5nOiB0aGVtZS50cmFuc2l0aW9ucy5lYXNpbmcuc2hhcnAsXG4gICAgICBkdXJhdGlvbjogdGhlbWUudHJhbnNpdGlvbnMuZHVyYXRpb24uZW50ZXJpbmdTY3JlZW4sXG4gICAgfSksXG4gICAgYm94U2l6aW5nOiBcImJvcmRlci1ib3hcIixcbiAgICAuLi4oIW9wZW4gJiYge1xuICAgICAgb3ZlcmZsb3dYOiBcImhpZGRlblwiLFxuICAgICAgdHJhbnNpdGlvbjogdGhlbWUudHJhbnNpdGlvbnMuY3JlYXRlKFwid2lkdGhcIiwge1xuICAgICAgICBlYXNpbmc6IHRoZW1lLnRyYW5zaXRpb25zLmVhc2luZy5zaGFycCxcbiAgICAgICAgZHVyYXRpb246IHRoZW1lLnRyYW5zaXRpb25zLmR1cmF0aW9uLmxlYXZpbmdTY3JlZW4sXG4gICAgICB9KSxcbiAgICAgIHdpZHRoOiBDT0xMQVBTRURfU0lERUJBUl9XSURUSCxcbiAgICB9KSxcbiAgfSxcbn0pKVxuXG5leHBvcnQge1xuICBTdHlsZWRTaWRlQmFyTGlua0NvbnRhaW5lZCxcbiAgSGVhZGVyQXZhdGFyLFxuICBIZWFkZXJNZW51LFxuICBzdHlsZWRTaWRlQmFyU3ViTWVudSxcbiAgU3R5bGVkU2lkZUJhck1lbnUsXG4gIENvbGxhcHNhYmxlU2lkZUJhckRyYXdlclN0eWxlZCxcbn1cbiJdLCJuYW1lcyI6WyJDb2xsYXBzYWJsZVNpZGVCYXJEcmF3ZXJTdHlsZWQiLCJIZWFkZXJBdmF0YXIiLCJIZWFkZXJNZW51IiwiU3R5bGVkU2lkZUJhckxpbmtDb250YWluZWQiLCJTdHlsZWRTaWRlQmFyTWVudSIsInN0eWxlZFNpZGVCYXJTdWJNZW51IiwiYmFzZUJ1dHRvblN0eWxlcyIsInRoZW1lIiwic2VsZWN0ZWQiLCJ2YXJpYW50IiwiZGlzcGxheSIsImp1c3RpZnlDb250ZW50IiwiZ2FwIiwic3BhY2luZyIsImFsaWduSXRlbXMiLCJ0ZXh0RGVjb3JhdGlvbiIsIndpZHRoIiwiYm9yZGVyUmFkaXVzIiwidHJhbnNpdGlvbiIsImN1cnNvciIsInBhZGRpbmdMZWZ0IiwicGFkZGluZ1JpZ2h0IiwicGFkZGluZ1RvcCIsInBhZGRpbmdCb3R0b20iLCJiYWNrZ3JvdW5kQ29sb3IiLCJwYWxldHRlIiwib3ZlcmxheSIsInN1cmZhY2UiLCJjb2xvciIsInVuZGVmaW5lZCIsInRleHQiLCJwcmltYXJ5IiwidGV4dFRyYW5zZm9ybSIsImZvbnRTaXplIiwibGluZUhlaWdodCIsImdyZXkiLCJmb250V2VpZ2h0IiwiaGVpZ2h0Iiwic3R5bGVkIiwiTGluayIsImFscGhhIiwibWFpbiIsImZsZXhEaXJlY3Rpb24iLCJmaWxsIiwiQnV0dG9uIiwic2hvdWxkRm9yd2FyZFByb3AiLCJwcm9wIiwibWVudU9wZW4iLCJtZW51VmFyaWFudCIsImJhc2VCZ0NvbG9yIiwiYmFzZUNvbG9yIiwibWFyZ2luTGVmdCIsInRyYW5zZm9ybSIsIkF2YXRhciIsInNlY29uZGFyeSIsIk1lbnUiLCJlbGV2YXRpb24iLCJkcDA4IiwibWluV2lkdGgiLCJhIiwic3ZnIiwicGFkZGluZyIsImRwMDEiLCJib3hTaGFkb3ciLCJtbCIsInAiLCJEcmF3ZXIiLCJvcGVuIiwicG9zaXRpb24iLCJ3aGl0ZVNwYWNlIiwiU0lERUJBUl9XSURUSCIsInRyYW5zaXRpb25zIiwiY3JlYXRlIiwiZWFzaW5nIiwic2hhcnAiLCJkdXJhdGlvbiIsImVudGVyaW5nU2NyZWVuIiwiYm94U2l6aW5nIiwib3ZlcmZsb3dYIiwibGVhdmluZ1NjcmVlbiIsIkNPTExBUFNFRF9TSURFQkFSX1dJRFRIIl0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7SUErTUVBLDhCQUE4QjtlQUE5QkE7O0lBSkFDLFlBQVk7ZUFBWkE7O0lBQ0FDLFVBQVU7ZUFBVkE7O0lBRkFDLDBCQUEwQjtlQUExQkE7O0lBSUFDLGlCQUFpQjtlQUFqQkE7O0lBREFDLG9CQUFvQjtlQUFwQkE7OztnQ0E3TW1COzBCQUNrQzt1QkFDbEI7c0JBQ3dCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUU3RCxNQUFNQyxtQkFBbUIsQ0FDdkJDLE9BQ0FDLFVBQ0FDLFVBQTZCLE9BQU8sR0FDaEMsQ0FBQTtRQUNKQyxTQUFTO1FBQ1RDLGdCQUFnQjtRQUNoQkMsS0FBS0wsTUFBTU0sT0FBTyxDQUFDO1FBQ25CQyxZQUFZO1FBQ1pDLGdCQUFnQjtRQUNoQkMsT0FBTztRQUNQQyxjQUFjVixNQUFNTSxPQUFPLENBQUM7UUFDNUJLLFlBQVk7UUFDWkMsUUFBUTtRQUNSQyxhQUFhYixNQUFNTSxPQUFPLENBQUM7UUFDM0JRLGNBQWNkLE1BQU1NLE9BQU8sQ0FBQztRQUM1QlMsWUFBWWYsTUFBTU0s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