dd8abb4f4b241f1a6bef0c1a46fe1f12
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "useSourceImage", {
    enumerable: true,
    get: function() {
        return useSourceImage;
    }
});
const _react = require("react");
const _llmsummary = require("@rp/react/tanstack-api/llm-summary");
const images = {};
const urlRegex = /^(ftp|http|https):\/\/[^ "]+$/;
const useSourceImage = (sources)=>{
    var _source_imageUrls;
    const summarySources = (0, _llmsummary.renameDuplicatedSources)(sources);
    const items = summarySources.map((s)=>s.imageUrls).flat().filter((url)=>urlRegex.test(url !== null && url !== void 0 ? url : ""));
    const source = summarySources.find((s)=>{
        var _s_imageUrls;
        return ((_s_imageUrls = s.imageUrls) === null || _s_imageUrls === void 0 ? void 0 : _s_imageUrls.find((url)=>url === items[0])) ? s : undefined;
    });
    var _source_id, _images_;
    const [result, setResult] = (0, _react.useState)((_images_ = images[(_source_id = source === null || source === void 0 ? void 0 : source.id) !== null && _source_id !== void 0 ? _source_id : ""]) !== null && _images_ !== void 0 ? _images_ : {
        src: "",
        isLoaded: false,
        hasError: false,
        hd: ""
    });
    var _source_imageUrls_;
    const src = (_source_imageUrls_ = source === null || source === void 0 ? void 0 : (_source_imageUrls = source.imageUrls) === null || _source_imageUrls === void 0 ? void 0 : _source_imageUrls[0]) !== null && _source_imageUrls_ !== void 0 ? _source_imageUrls_ : "";
    var _source_id1;
    const id = (_source_id1 = source === null || source === void 0 ? void 0 : source.id) !== null && _source_id1 !== void 0 ? _source_id1 : "";
    var _source_hd;
    const hd = (_source_hd = source === null || source === void 0 ? void 0 : source.hd) !== null && _source_hd !== void 0 ? _source_hd : "";
    (0, _react.useEffect)(()=>{
        if (images[id]) {
            setResult(images[id !== null && id !== void 0 ? id : ""]);
        } else if (src) {
            const image = document.createElement("img");
            image.onload = ()=>{
                images[id] = {
                    src,
                    isLoaded: true,
                    hasError: false,
                    hd
                };
                setResult({
                    src,
                    isLoaded: true,
                    hasError: false,
                    hd
                });
            };
            image.onerror = ()=>{
                images[id] = {
                    src,
                    isLoaded: true,
                    hasError: true,
                    hd
                };
                setResult({
                    src,
                    isLoaded: true,
                    hasError: true,
                    hd
                });
            };
            image.src = src;
        } else {
            setResult({
                src: "",
                isLoaded: false,
                hasError: false,
                hd: ""
            });
        }
    }, [
        id,
        src,
        hd
    ]);
    return result;
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9wcm92aWRlcnMvc3JjL3VzZVNvdXJjZUltYWdlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IHsgcmVuYW1lRHVwbGljYXRlZFNvdXJjZXMgfSBmcm9tIFwiQHJwL3JlYWN0L3RhbnN0YWNrLWFwaS9sbG0tc3VtbWFyeVwiXG5cbnR5cGUgVmFsdWUgPSB7IHNyYzogc3RyaW5nOyBpc0xvYWRlZDogYm9vbGVhbjsgaGFzRXJyb3I6IGJvb2xlYW47IGhkOiBzdHJpbmcgfVxudHlwZSBTb3VyY2VJbWFnZSA9IHtcbiAgaWQ6IHN0cmluZ1xuICBoZDogc3RyaW5nXG4gIGltYWdlVXJscz86IEFycmF5PHN0cmluZz4gfCBudWxsXG4gIG5hbWU6IHN0cmluZ1xufVxuY29uc3QgaW1hZ2VzOiBSZWNvcmQ8c3RyaW5nLCBWYWx1ZT4gPSB7fVxuY29uc3QgdXJsUmVnZXggPSAvXihmdHB8aHR0cHxodHRwcyk6XFwvXFwvW14gXCJdKyQvXG5cbmNvbnN0IHVzZVNvdXJjZUltYWdlID0gKHNvdXJjZXM6IEFycmF5PFNvdXJjZUltYWdlPikgPT4ge1xuICBjb25zdCBzdW1tYXJ5U291cmNlcyA9IHJlbmFtZUR1cGxpY2F0ZWRTb3VyY2VzKHNvdXJjZXMpXG4gIGNvbnN0IGl0ZW1zID0gc3VtbWFyeVNvdXJjZXNcbiAgICAubWFwKHMgPT4gcy5pbWFnZVVybHMpXG4gICAgLmZsYXQoKVxuICAgIC5maWx0ZXIodXJsID0+IHVybFJlZ2V4LnRlc3QodXJsID8/IFwiXCIpKVxuICBjb25zdCBzb3VyY2UgPSBzdW1tYXJ5U291cmNlcy5maW5kKHMgPT5cbiAgICBzLmltYWdlVXJscz8uZmluZCh1cmwgPT4gdXJsID09PSBpdGVtc1swXSkgPyBzIDogdW5kZWZpbmVkLFxuICApXG5cbiAgY29uc3QgW3Jlc3VsdCwgc2V0UmVzdWx0XSA9IHVzZVN0YXRlPFZhbHVlPihcbiAgICBpbWFnZXNbc291cmNlPy5pZCA/PyBcIlwiXSA/PyB7IHNyYzogXCJcIiwgaXNMb2FkZWQ6IGZhbHNlLCBoYXNFcnJvcjogZmFsc2UsIGhkOiBcIlwiIH0sXG4gIClcblxuICBjb25zdCBzcmMgPSBzb3VyY2U/LmltYWdlVXJscz8uWzBdID8/IFwiXCJcbiAgY29uc3QgaWQgPSBzb3VyY2U/LmlkID8/IFwiXCJcbiAgY29uc3QgaGQgPSBzb3VyY2U/LmhkID8/IFwiXCJcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChpbWFnZXNbaWRdKSB7XG4gICAgICBzZXRSZXN1bHQoaW1hZ2VzW2lkID8/IFwiXCJdKVxuICAgIH0gZWxzZSBpZiAoc3JjKSB7XG4gICAgICBjb25zdCBpbWFnZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbWdcIilcbiAgICAgIGltYWdlLm9ubG9hZCA9ICgpID0+IHtcbiAgICAgICAgaW1hZ2VzW2lkXSA9IHsgc3JjLCBpc0xvYWRlZDogdHJ1ZSwgaGFzRXJyb3I6IGZhbHNlLCBoZCB9XG4gICAgICAgIHNldFJlc3VsdCh7IHNyYywgaXNMb2FkZWQ6IHRydWUsIGhhc0Vycm9yOiBmYWxzZSwgaGQgfSlcbiAgICAgIH1cbiAgICAgIGltYWdlLm9uZXJyb3IgPSAoKSA9PiB7XG4gICAgICAgIGltYWdlc1tpZF0gPSB7IHNyYywgaXNMb2FkZWQ6IHRydWUsIGhhc0Vycm9yOiB0cnVlLCBoZCB9XG4gICAgICAgIHNldFJlc3VsdCh7IHNyYywgaXNMb2FkZWQ6IHRydWUsIGhhc0Vycm9yOiB0cnVlLCBoZCB9KVxuICAgICAgfVxuICAgICAgaW1hZ2Uuc3JjID0gc3JjXG4gICAgfSBlbHNlIHtcbiAgICAgIHNldFJlc3VsdCh7IHNyYzogXCJcIiwgaXNMb2FkZWQ6IGZhbHNlLCBoYXNFcnJvcjogZmFsc2UsIGhkOiBcIlwiIH0pXG4gICAgfVxuICB9LCBbaWQsIHNyYywgaGRdKVxuXG4gIHJldHVybiByZXN1bHRcbn1cblxuZXhwb3J0IHsgdXNlU291cmNlSW1hZ2UgfVxuIl0sIm5hbWVzIjpbInVzZVNvdXJjZUltYWdlIiwiaW1hZ2VzIiwidXJsUmVnZXgiLCJzb3VyY2VzIiwic291cmNlIiwic3VtbWFyeVNvdXJjZXMiLCJyZW5hbWVEdXBsaWNhdGVkU291cmNlcyIsIml0ZW1zIiwibWFwIiwicyIsImltYWdlVXJscyIsImZsYXQiLCJmaWx0ZXIiLCJ1cmwiLCJ0ZXN0IiwiZmluZCIsInVuZGVmaW5lZCIsInJlc3VsdCIsInNldFJlc3VsdCIsInVzZVN0YXRlIiwiaWQiLCJzcmMiLCJpc0xvYWRlZCIsImhhc0Vycm9yIiwiaGQiLCJ1c2VFZmZlY3QiLCJpbWFnZSIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsIm9ubG9hZCIsIm9uZXJyb3IiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBcURTQTs7O2VBQUFBOzs7dUJBckQyQjs0QkFDSTtBQVN4QyxNQUFNQyxTQUFnQyxDQUFDO0FBQ3ZDLE1BQU1DLFdBQVc7QUFFakIsTUFBTUYsaUJBQWlCLENBQUNHO1FBY1ZDO0lBYlosTUFBTUMsaUJBQWlCQyxJQUFBQSxtQ0FBdUIsRUFBQ0g7SUFDL0MsTUFBTUksUUFBUUYsZUFDWEcsR0FBRyxDQUFDQyxDQUFBQSxJQUFLQSxFQUFFQyxTQUFTLEVBQ3BCQyxJQUFJLEdBQ0pDLE1BQU0sQ0FBQ0MsQ0FBQUEsTUFBT1gsU0FBU1ksSUFBSSxDQUFDRCxnQkFBQUEsaUJBQUFBLE1BQU87SUFDdEMsTUFBTVQsU0FBU0MsZUFBZVUsSUFBSSxDQUFDTixDQUFBQTtZQUNqQ0E7ZUFBQUEsRUFBQUEsZUFBQUEsRUFBRUMsU0FBUyxjQUFYRCxtQ0FBQUEsYUFBYU0sSUFBSSxDQUFDRixDQUFBQSxNQUFPQSxRQUFRTixLQUFLLENBQUMsRUFBRSxLQUFJRSxJQUFJTzs7UUFJMUNaLFlBQVBIO0lBREYsTUFBTSxDQUFDZ0IsUUFBUUMsVUFBVSxHQUFHQyxJQUFBQSxlQUFRLEVBQ2xDbEIsQ0FBQUEsV0FBQUEsTUFBTSxDQUFDRyxDQUFBQSxhQUFBQSxtQkFBQUEsNkJBQUFBLE9BQVFnQixFQUFFLGNBQVZoQix3QkFBQUEsYUFBYyxHQUFHLGNBQXhCSCxzQkFBQUEsV0FBNEI7UUFBRW9CLEtBQUs7UUFBSUMsVUFBVTtRQUFPQyxVQUFVO1FBQU9DLElBQUk7SUFBRztRQUd0RXBCO0lBQVosTUFBTWlCLE1BQU1qQixDQUFBQSxxQkFBQUEsbUJBQUFBLDhCQUFBQSxvQkFBQUEsT0FBUU0sU0FBUyxjQUFqQk4sd0NBQUFBLGlCQUFtQixDQUFDLEVBQUUsY0FBdEJBLGdDQUFBQSxxQkFBMEI7UUFDM0JBO0lBQVgsTUFBTWdCLEtBQUtoQixDQUFBQSxjQUFBQSxtQkFBQUEsNkJBQUFBLE9BQVFnQixFQUFFLGNBQVZoQix5QkFBQUEsY0FBYztRQUNkQTtJQUFYLE1BQU1vQixLQUFLcEIsQ0FBQUEsYUFBQUEsbUJBQUFBLDZCQUFBQSxPQUFRb0IsRUFBRSxjQUFWcEIsd0JBQUFBLGFBQWM7SUFFekJxQixJQUFBQSxnQkFBUyxFQUFDO1FBQ1IsSUFBSXhCLE1BQU0sQ0FBQ21CLEdBQUcsRUFBRTtZQUNkRixVQUFVakIsTUFBTSxDQUFDbUIsZUFBQUEsZ0JBQUFBLEtBQU0sR0FBRztRQUM1QixPQUFPLElBQUlDLEtBQUs7WUFDZCxNQUFNSyxRQUFRQyxTQUFTQyxhQUFhLENBQUM7WUFDckNGLE1BQU1HLE1BQU0sR0FBRztnQkFDYjVCLE1BQU0sQ0FBQ21CLEdBQUcsR0FBRztvQkFBRUM7b0JBQUtDLFVBQVU7b0JBQU1DLFVBQVU7b0JBQU9DO2dCQUFHO2dCQUN4RE4sVUFBVTtvQkFBRUc7b0JBQUtDLFVBQVU7b0JBQU1DLFVBQVU7b0JBQU9DO2dCQUFHO1lBQ3ZEO1lBQ0FFLE1BQU1JLE9BQU8sR0FBRztnQkFDZDdCLE1BQU0sQ0FBQ21CLEdBQUcsR0FBRztvQkFBRUM7b0JBQUtDLFVBQVU7b0JBQU1DLFVBQVU7b0JBQU1DO2dCQUFHO2dCQUN2RE4sVUFBVTtvQkFBRUc7b0JBQUtDLFVBQVU7b0JBQU1DLFVBQVU7b0JBQU1DO2dCQUFHO1lBQ3REO1lBQ0FFLE1BQU1MLEdBQUcsR0FBR0E7UUFDZCxPQUFPO1lBQ0xILFVBQVU7Z0JBQUVHLEtBQUs7Z0JBQUlDLFVBQVU7Z0JBQU9DLFVBQVU7Z0JBQU9DLElBQUk7WUFBRztRQUNoRTtJQUNGLEdBQUc7UUFBQ0o7UUFBSUM7UUFBS0c7S0FBRztJQUVoQixPQUFPUDtBQUNUIn0=