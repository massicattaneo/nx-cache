e8ea36c0a087c993fc645351a6594c4c
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "QueryChip", {
    enumerable: true,
    get: function() {
        return QueryChip;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _apitypes = require("@rp/common/api-types");
const _ArrayFilterChip = require("./ArrayFilterChip");
const _MacroSearchChip = require("./MacroSearchChip");
const _UnsupportedChip = require("./UnsupportedChip");
const _WatchlistChip = require("./WatchlistChip");
// 🐷💄
// This is putting lipstick on a pig. Only needed for a DEMO
const ENABLE_UNSUPPORTED_CHIP = false;
const QueryChip = /*#__PURE__*/ (0, _react.forwardRef)(({ filter, nestedFlatFilters, onRemove, query }, ref)=>{
    if (filter === null) {
        return null;
    }
    if ((0, _apitypes.isRpqlFlatMatchFilter)(filter)) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_MacroSearchChip.MacroSearchChip, {
            query: query,
            flatFilters: nestedFlatFilters,
            filter: filter,
            onRemove: onRemove,
            ref: ref
        });
    }
    if ((0, _apitypes.isRpqlFlatLogicalGroup)(filter) || (0, _apitypes.isRpqlFlatLogicalNot)(filter)) {
        return ENABLE_UNSUPPORTED_CHIP ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_UnsupportedChip.UnsupportedChip, {
            onRemove: onRemove
        }) : null;
    }
    if ((0, _apitypes.isRpqlFlatArrayFilter)(filter)) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_ArrayFilterChip.ArrayFilterChip, {
            query: query,
            filter: filter,
            onRemove: onRemove,
            ref: ref
        });
    }
    if ((0, _apitypes.isRpqlFlatArrayIdFilter)(filter) && filter.type === "watchlist") {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_WatchlistChip.WatchlistChip, {
            query: query,
            filter: filter,
            onRemove: onRemove,
            ref: ref
        });
    }
    return ENABLE_UNSUPPORTED_CHIP ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_UnsupportedChip.UnsupportedChip, {
        onRemove: onRemove
    }) : null;
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2Nxcy1xdWVyeS1iYXIvc3JjL2xpYi9jaGlwcy9RdWVyeUNoaXAudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGZvcndhcmRSZWYgfSBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IHtcbiAgaXNScHFsRmxhdEFycmF5RmlsdGVyLFxuICBpc1JwcWxGbGF0QXJyYXlJZEZpbHRlcixcbiAgaXNScHFsRmxhdExvZ2ljYWxHcm91cCxcbiAgaXNScHFsRmxhdExvZ2ljYWxOb3QsXG4gIGlzUnBxbEZsYXRNYXRjaEZpbHRlcixcbn0gZnJvbSBcIkBycC9jb21tb24vYXBpLXR5cGVzXCJcbmltcG9ydCB7IFJwcWxGbGF0QXJyYXlGaWx0ZXIsIFJwcWxGbGF0RmlsdGVyIH0gZnJvbSBcIkBycC9jb21tb24vYXBpLXR5cGVzXCJcbmltcG9ydCB7IENxc1F1ZXJ5QmFyQ29udGV4dCB9IGZyb20gXCIuLi9jcXMtcXVlcnktYmFyLnR5cGVzXCJcbmltcG9ydCB7IEFycmF5RmlsdGVyQ2hpcCB9IGZyb20gXCIuL0FycmF5RmlsdGVyQ2hpcFwiXG5pbXBvcnQgeyBNYWNyb1NlYXJjaENoaXAgfSBmcm9tIFwiLi9NYWNyb1NlYXJjaENoaXBcIlxuaW1wb3J0IHsgVW5zdXBwb3J0ZWRDaGlwIH0gZnJvbSBcIi4vVW5zdXBwb3J0ZWRDaGlwXCJcbmltcG9ydCB7IFdhdGNobGlzdENoaXAgfSBmcm9tIFwiLi9XYXRjaGxpc3RDaGlwXCJcblxudHlwZSBRdWVyeUNoaXBQcm9wcyA9IHtcbiAgZmlsdGVyOiBScHFsRmxhdEZpbHRlciB8IG51bGxcbiAgbmVzdGVkRmxhdEZpbHRlcnM/OiBBcnJheTxScHFsRmxhdEFycmF5RmlsdGVyIHwgbnVsbD5cbiAgb25SZW1vdmU/OiAoKSA9PiB2b2lkXG4gIHF1ZXJ5PzogQ3FzUXVlcnlCYXJDb250ZXh0XG59XG5cbi8vIPCfkLfwn5KEXG4vLyBUaGlzIGlzIHB1dHRpbmcgbGlwc3RpY2sgb24gYSBwaWcuIE9ubHkgbmVlZGVkIGZvciBhIERFTU9cbmNvbnN0IEVOQUJMRV9VTlNVUFBPUlRFRF9DSElQID0gZmFsc2VcblxuY29uc3QgUXVlcnlDaGlwID0gZm9yd2FyZFJlZjxIVE1MRGl2RWxlbWVudCwgUXVlcnlDaGlwUHJvcHM+KFxuICAoeyBmaWx0ZXIsIG5lc3RlZEZsYXRGaWx0ZXJzLCBvblJlbW92ZSwgcXVlcnkgfSwgcmVmKSA9PiB7XG4gICAgaWYgKGZpbHRlciA9PT0gbnVsbCkge1xuICAgICAgcmV0dXJuIG51bGxcbiAgICB9XG5cbiAgICBpZiAoaXNScHFsRmxhdE1hdGNoRmlsdGVyKGZpbHRlcikpIHtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxNYWNyb1NlYXJjaENoaXBcbiAgICAgICAgICBxdWVyeT17cXVlcnl9XG4gICAgICAgICAgZmxhdEZpbHRlcnM9e25lc3RlZEZsYXRGaWx0ZXJzfVxuICAgICAgICAgIGZpbHRlcj17ZmlsdGVyfVxuICAgICAgICAgIG9uUmVtb3ZlPXtvblJlbW92ZX1cbiAgICAgICAgICByZWY9e3JlZn1cbiAgICAgICAgLz5cbiAgICAgIClcbiAgICB9XG5cbiAgICBpZiAoaXNScHFsRmxhdExvZ2ljYWxHcm91cChmaWx0ZXIpIHx8IGlzUnBxbEZsYXRMb2dpY2FsTm90KGZpbHRlcikpIHtcbiAgICAgIHJldHVybiBFTkFCTEVfVU5TVVBQT1JURURfQ0hJUCA/IDxVbnN1cHBvcnRlZENoaXAgb25SZW1vdmU9e29uUmVtb3ZlfSAvPiA6IG51bGxcbiAgICB9XG5cbiAgICBpZiAoaXNScHFsRmxhdEFycmF5RmlsdGVyKGZpbHRlcikpIHtcbiAgICAgIHJldHVybiA8QXJyYXlGaWx0ZXJDaGlwIHF1ZXJ5PXtxdWVyeX0gZmlsdGVyPXtmaWx0ZXJ9IG9uUmVtb3ZlPXtvblJlbW92ZX0gcmVmPXtyZWZ9IC8+XG4gICAgfVxuXG4gICAgaWYgKGlzUnBxbEZsYXRBcnJheUlkRmlsdGVyKGZpbHRlcikgJiYgZmlsdGVyLnR5cGUgPT09IFwid2F0Y2hsaXN0XCIpIHtcbiAgICAgIHJldHVybiA8V2F0Y2hsaXN0Q2hpcCBxdWVyeT17cXVlcnl9IGZpbHRlcj17ZmlsdGVyfSBvblJlbW92ZT17b25SZW1vdmV9IHJlZj17cmVmfSAvPlxuICAgIH1cblxuICAgIHJldHVybiBFTkFCTEVfVU5TVVBQT1JURURfQ0hJUCA/IDxVbnN1cHBvcnRlZENoaXAgb25SZW1vdmU9e29uUmVtb3ZlfSAvPiA6IG51bGxcbiAgfSxcbilcblxuZXhwb3J0IHsgUXVlcnlDaGlwIH1cbiJdLCJuYW1lcyI6WyJRdWVyeUNoaXAiLCJFTkFCTEVfVU5TVVBQT1JURURfQ0hJUCIsImZvcndhcmRSZWYiLCJmaWx0ZXIiLCJuZXN0ZWRGbGF0RmlsdGVycyIsIm9uUmVtb3ZlIiwicXVlcnkiLCJyZWYiLCJpc1JwcWxGbGF0TWF0Y2hGaWx0ZXIiLCJNYWNyb1NlYXJjaENoaXAiLCJmbGF0RmlsdGVycyIsImlzUnBxbEZsYXRMb2dpY2FsR3JvdXAiLCJpc1JwcWxGbGF0TG9naWNhbE5vdCIsIlVuc3VwcG9ydGVkQ2hpcCIsImlzUnBxbEZsYXRBcnJheUZpbHRlciIsIkFycmF5RmlsdGVyQ2hpcCIsImlzUnBxbEZsYXRBcnJheUlkRmlsdGVyIiwidHlwZSIsIldhdGNobGlzdENoaXAiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQTREU0E7OztlQUFBQTs7Ozt1QkE1RGtCOzBCQU9wQjtpQ0FHeUI7aUNBQ0E7aUNBQ0E7K0JBQ0Y7QUFTOUIsT0FBTztBQUNQLDREQUE0RDtBQUM1RCxNQUFNQywwQkFBMEI7QUFFaEMsTUFBTUQsMEJBQVlFLElBQUFBLGlCQUFVLEVBQzFCLENBQUMsRUFBRUMsTUFBTSxFQUFFQyxpQkFBaUIsRUFBRUMsUUFBUSxFQUFFQyxLQUFLLEVBQUUsRUFBRUM7SUFDL0MsSUFBSUosV0FBVyxNQUFNO1FBQ25CLE9BQU87SUFDVDtJQUVBLElBQUlLLElBQUFBLCtCQUFxQixFQUFDTCxTQUFTO1FBQ2pDLHFCQUNFLHFCQUFDTSxnQ0FBZTtZQUNkSCxPQUFPQTtZQUNQSSxhQUFhTjtZQUNiRCxRQUFRQTtZQUNSRSxVQUFVQTtZQUNWRSxLQUFLQTs7SUFHWDtJQUVBLElBQUlJLElBQUFBLGdDQUFzQixFQUFDUixXQUFXUyxJQUFBQSw4QkFBb0IsRUFBQ1QsU0FBUztRQUNsRSxPQUFPRix3Q0FBMEIscUJBQUNZLGdDQUFlO1lBQUNSLFVBQVVBO2FBQWU7SUFDN0U7SUFFQSxJQUFJUyxJQUFBQSwrQkFBcUIsRUFBQ1gsU0FBUztRQUNqQyxxQkFBTyxxQkFBQ1ksZ0NBQWU7WUFBQ1QsT0FBT0E7WUFBT0gsUUFBUUE7WUFBUUUsVUFBVUE7WUFBVUUsS0FBS0E7O0lBQ2pGO0lBRUEsSUFBSVMsSUFBQUEsaUNBQXVCLEVBQUNiLFdBQVdBLE9BQU9jLElBQUksS0FBSyxhQUFhO1FBQ2xFLHFCQUFPLHFCQUFDQyw0QkFBYTtZQUFDWixPQUFPQTtZQUFPSCxRQUFRQTtZQUFRRSxVQUFVQTtZQUFVRSxLQUFLQTs7SUFDL0U7SUFFQSxPQUFPTix3Q0FBMEIscUJBQUNZLGdDQUFlO1FBQUNSLFVBQVVBO1NBQWU7QUFDN0UifQ==