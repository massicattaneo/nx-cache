{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/node_modules/mdast-util-to-hast/lib/handlers/html.js"],"sourcesContent":["/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Html} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Element | Raw | undefined}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.options.allowDangerousHtml) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  return undefined\n}\n"],"names":["html","state","node","options","allowDangerousHtml","result","type","value","patch","applyData","undefined"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA;;;;;CAKC,GAED,mDAAmD;AACnD;;;;;+BAagBA;;;eAAAA;;;AAAT,SAASA,KAAKC,KAAK,EAAEC,IAAI;IAC9B,IAAID,MAAME,OAAO,CAACC,kBAAkB,EAAE;QACpC,gBAAgB,GAChB,MAAMC,SAAS;YAACC,MAAM;YAAOC,OAAOL,KAAKK,KAAK;QAAA;QAC9CN,MAAMO,KAAK,CAACN,MAAMG;QAClB,OAAOJ,MAAMQ,SAAS,CAACP,MAAMG;IAC/B;IAEA,OAAOK;AACT"}