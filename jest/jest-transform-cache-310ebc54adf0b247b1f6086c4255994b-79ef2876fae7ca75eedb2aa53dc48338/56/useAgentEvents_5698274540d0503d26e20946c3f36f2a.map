{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/common/hooks/src/lib/useAgent/useAgentEvents.ts"],"sourcesContent":["import { useCallback, useEffect, useRef, useState } from \"react\"\nimport { getApiEnvironmentConfig } from \"@rp/common/utils\"\nimport { chatCustomerIo } from \"@rp/react/common/customer-io\"\nimport { LlmSummaryError } from \"../useChat/useChat.types\"\nimport { useSSE } from \"../useSSE\"\nimport {\n  handleActionMessage,\n  handleAnswerMessage,\n  handleAuditMessage,\n  handleCompleteMessage,\n  handleGroundingMessage,\n  handleThinkingMessage,\n} from \"./handlers\"\nimport { SummaryState } from \"./useAgent\"\nimport {\n  AgentMessage,\n  AgentMessageState,\n  ChatInteractionContext,\n  ErrorMessage,\n} from \"./useAgent.types\"\nimport { getPromptWithContext } from \"./utils/getPromptWithContext\"\n\nconst EVENT_SOURCE_URL = getApiEnvironmentConfig(\"agents\").url ?? \"\"\nconst PATH = \"/bff/v1/agent/execute\"\n\ntype Props = {\n  chatId: string\n  agentEnabled?: boolean\n  executionMode?: \"chat\" | \"research\"\n  inputMessage: string\n  onComplete: (messages: AgentMessageState) => void\n  onError?: (data: SummaryState, error: LlmSummaryError) => void\n  agentEndpointUrl?: string\n  refreshAgentData?: boolean\n  context?: Array<ChatInteractionContext>\n  enableAgentGrounding?: boolean\n  enableCompanyTearsheet?: boolean\n}\n\nconst defaultAgentData: AgentMessageState = {\n  frames: [],\n  answerStream: [],\n  closed: false,\n  isLoading: true,\n  error: undefined,\n  requestId: \"\",\n  references: {},\n}\n\nfunction useAgentEvents(props: Props) {\n  const { chatId, onComplete, agentEnabled, onError } = props\n\n  const onCompleteCallbackExecuted = useRef<boolean>(false)\n  const [agentData, setAgentData] = useState<AgentMessageState>(defaultAgentData)\n  const [isFrameCompleted, setFrameCompleted] = useState<boolean>(false)\n\n  const handleErrorMessage = useCallback(\n    function handleErrorMessage(disposeConnection: () => void, data?: ErrorMessage): void {\n      if (data) {\n        setAgentData(prevState => ({\n          ...prevState,\n          error: data.error,\n          requestId: data.requestId ?? prevState.requestId,\n        }))\n      }\n      onError?.(\n        {\n          response: \"\",\n          responseBlocks: [],\n          timings: { start: Date.now() },\n          auditTraces: [],\n          originSources: [],\n          interactionType: \"user_message\",\n          statusData: { step: \"completed\", queries: [] },\n          auditBlocks: [],\n        },\n        { message: data?.error ?? \"WebSocket connection error\", type: \"ERROR\" },\n      )\n      disposeConnection()\n    },\n    [onError],\n  )\n\n  const getBody = useCallback(\n    function getBody() {\n      const requestId = `${Date.now()}`\n      setAgentData({\n        ...defaultAgentData,\n        requestId,\n      })\n\n      chatCustomerIo.inputAgentPromptSubmit({\n        chatId: props.chatId,\n        executionMode: props.executionMode ?? \"research\",\n        requestId,\n      })\n\n      return JSON.stringify({\n        requestId,\n        chat_id: props.chatId,\n        message: getPromptWithContext(props.inputMessage, props.context),\n        mode: props.executionMode,\n      })\n    },\n    [props.chatId, props.context, props.executionMode, props.inputMessage],\n  )\n\n  const handleAgentEvent = useCallback(\n    function handleAgentEvent(event: MessageEvent, disposeConnection: () => void): void {\n      const data: AgentMessage = JSON.parse(event.data)\n\n      switch (data.type) {\n        case \"THINKING\":\n          setAgentData(prev => handleThinkingMessage(prev, data))\n          break\n        case \"ACTION\":\n          setAgentData(prev => handleActionMessage(prev, data))\n          break\n        case \"AUDIT\":\n          setAgentData(prev => handleAuditMessage(prev, data))\n          break\n        case \"ANSWER\":\n          setAgentData(prev => handleAnswerMessage(prev, data))\n          break\n        case \"GROUNDING\":\n          if (!props.enableAgentGrounding) {\n            break\n          }\n          setAgentData(prev => handleGroundingMessage(prev, data))\n          break\n        case \"COMPLETE\":\n          setFrameCompleted(true)\n          setAgentData(prev =>\n            handleCompleteMessage(prev, { executionMode: props.executionMode, chatId }),\n          )\n          break\n        case \"ERROR\":\n          handleErrorMessage(disposeConnection, data)\n          break\n        default:\n          break\n      }\n    },\n    [chatId, handleErrorMessage, props.executionMode, props.enableAgentGrounding],\n  )\n\n  useEffect(() => {\n    if (isFrameCompleted && agentEnabled && !onCompleteCallbackExecuted.current) {\n      onComplete(agentData)\n      onCompleteCallbackExecuted.current = true\n    }\n  }, [isFrameCompleted, agentData, agentEnabled, onComplete])\n\n  useSSE({\n    url: `${props.agentEndpointUrl ?? EVENT_SOURCE_URL}${PATH}`,\n    enabled: agentEnabled ?? false,\n    getBody,\n    onError: handleErrorMessage,\n    onMessage: handleAgentEvent,\n  })\n\n  return { agentData }\n}\n\nexport { useAgentEvents }\n"],"names":["useAgentEvents","getApiEnvironmentConfig","EVENT_SOURCE_URL","url","PATH","defaultAgentData","frames","answerStream","closed","isLoading","error","undefined","requestId","references","props","chatId","onComplete","agentEnabled","onError","onCompleteCallbackExecuted","useRef","agentData","setAgentData","useState","isFrameCompleted","setFrameCompleted","handleErrorMessage","useCallback","disposeConnection","data","prevState","response","responseBlocks","timings","start","Date","now","auditTraces","originSources","interactionType","statusData","step","queries","auditBlocks","message","type","getBody","chatCustomerIo","inputAgentPromptSubmit","executionMode","JSON","stringify","chat_id","getPromptWithContext","inputMessage","context","mode","handleAgentEvent","event","parse","prev","handleThinkingMessage","handleActionMessage","handleAuditMessage","handleAnswerMessage","enableAgentGrounding","handleGroundingMessage","handleCompleteMessage","useEffect","current","useSSE","agentEndpointUrl","enabled","onMessage"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}