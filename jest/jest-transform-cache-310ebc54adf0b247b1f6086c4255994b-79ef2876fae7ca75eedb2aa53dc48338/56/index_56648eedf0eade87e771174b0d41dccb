8e47ef54579e708f476684b798512fea
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "handlers", {
    enumerable: true,
    get: function() {
        return handlers;
    }
});
const _blockquote = require("./blockquote.js");
const _break = require("./break.js");
const _code = require("./code.js");
const _delete = require("./delete.js");
const _emphasis = require("./emphasis.js");
const _footnotereference = require("./footnote-reference.js");
const _heading = require("./heading.js");
const _html = require("./html.js");
const _imagereference = require("./image-reference.js");
const _image = require("./image.js");
const _inlinecode = require("./inline-code.js");
const _linkreference = require("./link-reference.js");
const _link = require("./link.js");
const _listitem = require("./list-item.js");
const _list = require("./list.js");
const _paragraph = require("./paragraph.js");
const _root = require("./root.js");
const _strong = require("./strong.js");
const _table = require("./table.js");
const _tablerow = require("./table-row.js");
const _tablecell = require("./table-cell.js");
const _text = require("./text.js");
const _thematicbreak = require("./thematic-break.js");
const handlers = {
    blockquote: _blockquote.blockquote,
    break: _break.hardBreak,
    code: _code.code,
    delete: _delete.strikethrough,
    emphasis: _emphasis.emphasis,
    footnoteReference: _footnotereference.footnoteReference,
    heading: _heading.heading,
    html: _html.html,
    imageReference: _imagereference.imageReference,
    image: _image.image,
    inlineCode: _inlinecode.inlineCode,
    linkReference: _linkreference.linkReference,
    link: _link.link,
    listItem: _listitem.listItem,
    list: _list.list,
    paragraph: _paragraph.paragraph,
    // @ts-expect-error: root is different, but hard to type.
    root: _root.root,
    strong: _strong.strong,
    table: _table.table,
    tableCell: _tablecell.tableCell,
    tableRow: _tablerow.tableRow,
    text: _text.text,
    thematicBreak: _thematicbreak.thematicBreak,
    toml: ignore,
    yaml: ignore,
    definition: ignore,
    footnoteDefinition: ignore
};
// Return nothing for nodes that are ignored.
function ignore() {
    return undefined;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9tZGFzdC11dGlsLXRvLWhhc3QvbGliL2hhbmRsZXJzL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7YmxvY2txdW90ZX0gZnJvbSAnLi9ibG9ja3F1b3RlLmpzJ1xuaW1wb3J0IHtoYXJkQnJlYWt9IGZyb20gJy4vYnJlYWsuanMnXG5pbXBvcnQge2NvZGV9IGZyb20gJy4vY29kZS5qcydcbmltcG9ydCB7c3RyaWtldGhyb3VnaH0gZnJvbSAnLi9kZWxldGUuanMnXG5pbXBvcnQge2VtcGhhc2lzfSBmcm9tICcuL2VtcGhhc2lzLmpzJ1xuaW1wb3J0IHtmb290bm90ZVJlZmVyZW5jZX0gZnJvbSAnLi9mb290bm90ZS1yZWZlcmVuY2UuanMnXG5pbXBvcnQge2hlYWRpbmd9IGZyb20gJy4vaGVhZGluZy5qcydcbmltcG9ydCB7aHRtbH0gZnJvbSAnLi9odG1sLmpzJ1xuaW1wb3J0IHtpbWFnZVJlZmVyZW5jZX0gZnJvbSAnLi9pbWFnZS1yZWZlcmVuY2UuanMnXG5pbXBvcnQge2ltYWdlfSBmcm9tICcuL2ltYWdlLmpzJ1xuaW1wb3J0IHtpbmxpbmVDb2RlfSBmcm9tICcuL2lubGluZS1jb2RlLmpzJ1xuaW1wb3J0IHtsaW5rUmVmZXJlbmNlfSBmcm9tICcuL2xpbmstcmVmZXJlbmNlLmpzJ1xuaW1wb3J0IHtsaW5rfSBmcm9tICcuL2xpbmsuanMnXG5pbXBvcnQge2xpc3RJdGVtfSBmcm9tICcuL2xpc3QtaXRlbS5qcydcbmltcG9ydCB7bGlzdH0gZnJvbSAnLi9saXN0LmpzJ1xuaW1wb3J0IHtwYXJhZ3JhcGh9IGZyb20gJy4vcGFyYWdyYXBoLmpzJ1xuaW1wb3J0IHtyb290fSBmcm9tICcuL3Jvb3QuanMnXG5pbXBvcnQge3N0cm9uZ30gZnJvbSAnLi9zdHJvbmcuanMnXG5pbXBvcnQge3RhYmxlfSBmcm9tICcuL3RhYmxlLmpzJ1xuaW1wb3J0IHt0YWJsZVJvd30gZnJvbSAnLi90YWJsZS1yb3cuanMnXG5pbXBvcnQge3RhYmxlQ2VsbH0gZnJvbSAnLi90YWJsZS1jZWxsLmpzJ1xuaW1wb3J0IHt0ZXh0fSBmcm9tICcuL3RleHQuanMnXG5pbXBvcnQge3RoZW1hdGljQnJlYWt9IGZyb20gJy4vdGhlbWF0aWMtYnJlYWsuanMnXG5cbi8qKlxuICogRGVmYXVsdCBoYW5kbGVycyBmb3Igbm9kZXMuXG4gKlxuICogQHNhdGlzZmllcyB7aW1wb3J0KCcuLi9zdGF0ZS5qcycpLkhhbmRsZXJzfVxuICovXG5leHBvcnQgY29uc3QgaGFuZGxlcnMgPSB7XG4gIGJsb2NrcXVvdGUsXG4gIGJyZWFrOiBoYXJkQnJlYWssXG4gIGNvZGUsXG4gIGRlbGV0ZTogc3RyaWtldGhyb3VnaCxcbiAgZW1waGFzaXMsXG4gIGZvb3Rub3RlUmVmZXJlbmNlLFxuICBoZWFkaW5nLFxuICBodG1sLFxuICBpbWFnZVJlZmVyZW5jZSxcbiAgaW1hZ2UsXG4gIGlubGluZUNvZGUsXG4gIGxpbmtSZWZlcmVuY2UsXG4gIGxpbmssXG4gIGxpc3RJdGVtLFxuICBsaXN0LFxuICBwYXJhZ3JhcGgsXG4gIC8vIEB0cy1leHBlY3QtZXJyb3I6IHJvb3QgaXMgZGlmZmVyZW50LCBidXQgaGFyZCB0byB0eXBlLlxuICByb290LFxuICBzdHJvbmcsXG4gIHRhYmxlLFxuICB0YWJsZUNlbGwsXG4gIHRhYmxlUm93LFxuICB0ZXh0LFxuICB0aGVtYXRpY0JyZWFrLFxuICB0b21sOiBpZ25vcmUsXG4gIHlhbWw6IGlnbm9yZSxcbiAgZGVmaW5pdGlvbjogaWdub3JlLFxuICBmb290bm90ZURlZmluaXRpb246IGlnbm9yZVxufVxuXG4vLyBSZXR1cm4gbm90aGluZyBmb3Igbm9kZXMgdGhhdCBhcmUgaWdub3JlZC5cbmZ1bmN0aW9uIGlnbm9yZSgpIHtcbiAgcmV0dXJuIHVuZGVmaW5lZFxufVxuIl0sIm5hbWVzIjpbImhhbmRsZXJzIiwiYmxvY2txdW90ZSIsImJyZWFrIiwiaGFyZEJyZWFrIiwiY29kZSIsImRlbGV0ZSIsInN0cmlrZXRocm91Z2giLCJlbXBoYXNpcyIsImZvb3Rub3RlUmVmZXJlbmNlIiwiaGVhZGluZyIsImh0bWwiLCJpbWFnZVJlZmVyZW5jZSIsImltYWdlIiwiaW5saW5lQ29kZSIsImxpbmtSZWZlcmVuY2UiLCJsaW5rIiwibGlzdEl0ZW0iLCJsaXN0IiwicGFyYWdyYXBoIiwicm9vdCIsInN0cm9uZyIsInRhYmxlIiwidGFibGVDZWxsIiwidGFibGVSb3ciLCJ0ZXh0IiwidGhlbWF0aWNCcmVhayIsInRvbWwiLCJpZ25vcmUiLCJ5YW1sIiwiZGVmaW5pdGlvbiIsImZvb3Rub3RlRGVmaW5pdGlvbiIsInVuZGVmaW5lZCJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBNkJhQTs7O2VBQUFBOzs7NEJBN0JZO3VCQUNEO3NCQUNMO3dCQUNTOzBCQUNMO21DQUNTO3lCQUNWO3NCQUNIO2dDQUNVO3VCQUNUOzRCQUNLOytCQUNHO3NCQUNUOzBCQUNJO3NCQUNKOzJCQUNLO3NCQUNMO3dCQUNFO3VCQUNEOzBCQUNHOzJCQUNDO3NCQUNMOytCQUNTO0FBT3JCLE1BQU1BLFdBQVc7SUFDdEJDLFlBQUFBLHNCQUFVO0lBQ1ZDLE9BQU9DLGdCQUFTO0lBQ2hCQyxNQUFBQSxVQUFJO0lBQ0pDLFFBQVFDLHFCQUFhO0lBQ3JCQyxVQUFBQSxrQkFBUTtJQUNSQyxtQkFBQUEsb0NBQWlCO0lBQ2pCQyxTQUFBQSxnQkFBTztJQUNQQyxNQUFBQSxVQUFJO0lBQ0pDLGdCQUFBQSw4QkFBYztJQUNkQyxPQUFBQSxZQUFLO0lBQ0xDLFlBQUFBLHNCQUFVO0lBQ1ZDLGVBQUFBLDRCQUFhO0lBQ2JDLE1BQUFBLFVBQUk7SUFDSkMsVUFBQUEsa0JBQVE7SUFDUkMsTUFBQUEsVUFBSTtJQUNKQyxXQUFBQSxvQkFBUztJQUNULHlEQUF5RDtJQUN6REMsTUFBQUEsVUFBSTtJQUNKQyxRQUFBQSxjQUFNO0lBQ05DLE9BQUFBLFlBQUs7SUFDTEMsV0FBQUEsb0JBQVM7SUFDVEMsVUFBQUEsa0JBQVE7SUFDUkMsTUFBQUEsVUFBSTtJQUNKQyxlQUFBQSw0QkFBYTtJQUNiQyxNQUFNQztJQUNOQyxNQUFNRDtJQUNORSxZQUFZRjtJQUNaRyxvQkFBb0JIO0FBQ3RCO0FBRUEsNkNBQTZDO0FBQzdDLFNBQVNBO0lBQ1AsT0FBT0k7QUFDVCJ9