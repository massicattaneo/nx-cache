5ba1cfe36fb2c2f391c1de1b30aeff39
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "ResponseActions", {
    enumerable: true,
    get: function() {
        return ResponseActions;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _basecomponents = require("@rp/react/web/common/base-components");
const _hooks = require("@rp/react/web/common/hooks");
const _icons = require("@rp/react/web/icons");
const _core = require("@rp/react/web/mui/core");
const _icons1 = require("@rp/react/web/mui/icons");
const ResponseActions = ({ onCopy, onRegenerate, onAuditToggle, onChatFeedback, isAuditActive = false, interactionTimestamp, chatFeedback, variant })=>{
    const { isHoverDevice } = (0, _hooks.useDeviceInfo)();
    const [copied, setCopied] = (0, _react.useState)(false);
    const isMobile = variant === "mobile";
    const handleCopy = ()=>{
        setCopied(true);
        onCopy === null || onCopy === void 0 ? void 0 : onCopy();
        setTimeout(()=>setCopied(false), 2000);
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
        sx: {
            display: "flex",
            ml: isMobile ? 2 : 7,
            gap: 0.5,
            "& svg": {
                height: 20,
                width: 20,
                color: "grey.300"
            },
            "& button:hover": {
                backgroundColor: isHoverDevice ? "transparent" : undefined
            },
            "& button:hover svg": {
                color: isHoverDevice ? "text.primary" : undefined
            }
        },
        children: [
            onCopy ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.RPTooltip, {
                title: copied ? "Copied" : "Copy",
                arrow: false,
                placement: "top",
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.IconButton, {
                    onClick: handleCopy,
                    size: "small",
                    children: copied ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons1.Done, {}) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons1.ContentCopy, {})
                })
            }) : null,
            onRegenerate ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.RPTooltip, {
                title: "Regenerate",
                arrow: false,
                placement: "top",
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.IconButton, {
                    onClick: onRegenerate,
                    size: "small",
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons1.Replay, {})
                })
            }) : null,
            onChatFeedback ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.RPTooltip, {
                title: "Good response",
                arrow: false,
                placement: "top",
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.IconButton, {
                    onClick: ()=>onChatFeedback({
                            feedbackSentiment: 1,
                            interactionTimestamp
                        }),
                    size: "small",
                    children: chatFeedback[interactionTimestamp] === 1 ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons1.ThumbUpAlt, {
                        sx: (theme)=>({
                                fill: theme.palette.text.primary
                            })
                    }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons1.ThumbUpOffAlt, {})
                })
            }) : null,
            onChatFeedback ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.RPTooltip, {
                title: "Bad response",
                arrow: false,
                placement: "top",
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.IconButton, {
                    onClick: ()=>onChatFeedback({
                            feedbackSentiment: -1,
                            interactionTimestamp
                        }),
                    size: "small",
                    children: chatFeedback[interactionTimestamp] === -1 ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons1.ThumbDownAlt, {
                        sx: (theme)=>({
                                fill: theme.palette.text.primary
                            })
                    }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons1.ThumbDownOffAlt, {})
                })
            }) : null,
            onAuditToggle ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.RPTooltip, {
                title: isAuditActive ? "Hide Audit Trail" : "Show Audit Trail",
                arrow: false,
                placement: "top",
                PopperProps: {
                    disablePortal: true,
                    sx: {
                        zIndex: 1
                    }
                },
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.IconButton, {
                    onClick: ()=>onAuditToggle(!isAuditActive),
                    size: "small",
                    sx: {
                        backgroundColor: isAuditActive ? "overlay.surface" : undefined,
                        "& svg": {
                            color: isAuditActive ? "text.primary" : undefined,
                            width: 24,
                            height: 24
                        },
                        "&:hover": {
                            backgroundColor: isAuditActive ? "rgba(255, 255, 255, 0.08) !important" : undefined
                        }
                    },
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.RunSearchIcon, {})
                })
            }) : null
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,