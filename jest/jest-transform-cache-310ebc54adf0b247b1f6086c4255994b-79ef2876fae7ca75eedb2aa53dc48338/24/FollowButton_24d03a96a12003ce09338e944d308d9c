52681670a8cc94963b43f21151786771
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    FollowButton: function() {
        return FollowButton;
    },
    FollowButtonStatus: function() {
        return FollowButtonStatus;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _core = require("@rp/react/web/mui/core");
const _useFollow = require("./useFollow");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
var FollowButtonStatus;
(function(FollowButtonStatus) {
    FollowButtonStatus["FOLLOW"] = "FOLLOW";
    FollowButtonStatus["FOLLOWING"] = "FOLLOWING";
    FollowButtonStatus["UNFOLLOW"] = "UNFOLLOW";
})(FollowButtonStatus || (FollowButtonStatus = {}));
const FollowButton = ({ id, saveStatus, sx, defaultStatus })=>{
    const { isLoading, isPending, onFollow, isFollowing, isUnfollowModalOpen, isFollowModalOpen } = (0, _useFollow.useFollow)(id);
    const theme = (0, _core.useTheme)();
    const [status, setStatus] = (0, _react.useState)(defaultStatus);
    const mouseExit = (0, _react.useRef)(true);
    (0, _react.useEffect)(()=>{
        if (isPending) return;
        if (isFollowModalOpen) return setStatus("FOLLOW");
        if (isUnfollowModalOpen) return setStatus("UNFOLLOW");
        else if (isFollowing) return setStatus("FOLLOWING");
        else return setStatus("FOLLOW");
    }, [
        isFollowing,
        isPending,
        isUnfollowModalOpen,
        isFollowModalOpen
    ]);
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Button, {
        sx: _object_spread_props(_object_spread({
            flexShrink: 0,
            width: "110px",
            opacity: isUnfollowModalOpen || isPending || isFollowModalOpen ? "1 !important" : undefined,
            pb: "4px"
        }, sx), {
            "&": isUnfollowModalOpen || status === "UNFOLLOW" ? {
                color: theme.palette.red[500],
                border: `1px solid ${theme.palette.red[500]}`,
                backgroundColor: (0, _core.alpha)(theme.palette.red[500], 0.12)
            } : null
        }),
        onMouseEnter: ()=>{
            if (isFollowing && mouseExit.current) setStatus("UNFOLLOW");
            mouseExit.current = false;
        },
        onMouseLeave: ()=>{
            if (isFollowing && !isUnfollowModalOpen) setStatus("FOLLOWING");
            mouseExit.current = true;
        },
        onClick: (event)=>{
            event.preventDefault();
            event.stopPropagation();
            if (status === "FOLLOWING" && isFollowing) return;
            onFollow({
                id,
                saveStatus
            });
        },
        variant: status === "UNFOLLOW" || status === "FOLLOWING" || isLoading || isPending ? "contained-light" : "contained",
        children: isLoading && !defaultStatus || isPending ? /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
            children: [
                " ",
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.CircularProgress, {
                    size: "20px"
                }),
                " "
            ]
        }) : status
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9wcm92aWRlcnMvc3JjL0ZvbGxvd0NvbnRleHQvRm9sbG93QnV0dG9uLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VFZmZlY3QsIHVzZVJlZiwgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IHsgQ3FzU2F2ZWRRdWVyeSB9IGZyb20gXCJAcnAvY29tbW9uL2FwaS10eXBlc1wiXG5pbXBvcnQgeyBCdXR0b24sIENpcmN1bGFyUHJvZ3Jlc3MsIFN4UHJvcHMsIGFscGhhLCB1c2VUaGVtZSB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL211aS9jb3JlXCJcbmltcG9ydCB7IHVzZUZvbGxvdyB9IGZyb20gXCIuL3VzZUZvbGxvd1wiXG5cbmVudW0gRm9sbG93QnV0dG9uU3RhdHVzIHtcbiAgRk9MTE9XID0gXCJGT0xMT1dcIixcbiAgRk9MTE9XSU5HID0gXCJGT0xMT1dJTkdcIixcbiAgVU5GT0xMT1cgPSBcIlVORk9MTE9XXCIsXG59XG5cbnR5cGUgRm9sbG93QnV0dG9uUHJvcHMgPSB7XG4gIGlkOiBzdHJpbmdcbiAgc2F2ZVN0YXR1cz86IENxc1NhdmVkUXVlcnlbXCJzYXZlU3RhdHVzXCJdXG4gIHN4PzogU3hQcm9wc1xuICBkZWZhdWx0U3RhdHVzPzogRm9sbG93QnV0dG9uU3RhdHVzIHwgdW5kZWZpbmVkXG59XG5cbmNvbnN0IEZvbGxvd0J1dHRvbiA9ICh7IGlkLCBzYXZlU3RhdHVzLCBzeCwgZGVmYXVsdFN0YXR1cyB9OiBGb2xsb3dCdXR0b25Qcm9wcykgPT4ge1xuICBjb25zdCB7IGlzTG9hZGluZywgaXNQZW5kaW5nLCBvbkZvbGxvdywgaXNGb2xsb3dpbmcsIGlzVW5mb2xsb3dNb2RhbE9wZW4sIGlzRm9sbG93TW9kYWxPcGVuIH0gPVxuICAgIHVzZUZvbGxvdyhpZClcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpXG4gIGNvbnN0IFtzdGF0dXMsIHNldFN0YXR1c10gPSB1c2VTdGF0ZTxGb2xsb3dCdXR0b25TdGF0dXMgfCB1bmRlZmluZWQ+KGRlZmF1bHRTdGF0dXMpXG4gIGNvbnN0IG1vdXNlRXhpdCA9IHVzZVJlZih0cnVlKVxuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKGlzUGVuZGluZykgcmV0dXJuXG4gICAgaWYgKGlzRm9sbG93TW9kYWxPcGVuKSByZXR1cm4gc2V0U3RhdHVzKEZvbGxvd0J1dHRvblN0YXR1cy5GT0xMT1cpXG4gICAgaWYgKGlzVW5mb2xsb3dNb2RhbE9wZW4pIHJldHVybiBzZXRTdGF0dXMoRm9sbG93QnV0dG9uU3RhdHVzLlVORk9MTE9XKVxuICAgIGVsc2UgaWYgKGlzRm9sbG93aW5nKSByZXR1cm4gc2V0U3RhdHVzKEZvbGxvd0J1dHRvblN0YXR1cy5GT0xMT1dJTkcpXG4gICAgZWxzZSByZXR1cm4gc2V0U3RhdHVzKEZvbGxvd0J1dHRvblN0YXR1cy5GT0xMT1cpXG4gIH0sIFtpc0ZvbGxvd2luZywgaXNQZW5kaW5nLCBpc1VuZm9sbG93TW9kYWxPcGVuLCBpc0ZvbGxvd01vZGFsT3Blbl0pXG5cbiAgcmV0dXJuIChcbiAgICA8QnV0dG9uXG4gICAgICBzeD17e1xuICAgICAgICBmbGV4U2hyaW5rOiAwLFxuICAgICAgICB3aWR0aDogXCIxMTBweFwiLFxuICAgICAgICBvcGFjaXR5OiBpc1VuZm9sbG93TW9kYWxPcGVuIHx8IGlzUGVuZGluZyB8fCBpc0ZvbGxvd01vZGFsT3BlbiA/IFwiMSAhaW1wb3J0YW50XCIgOiB1bmRlZmluZWQsXG4gICAgICAgIHBiOiBcIjRweFwiLFxuICAgICAgICAuLi5zeCxcbiAgICAgICAgXCImXCI6XG4gICAgICAgICAgaXNVbmZvbGxvd01vZGFsT3BlbiB8fCBzdGF0dXMgPT09IEZvbGxvd0J1dHRvblN0YXR1cy5VTkZPTExPV1xuICAgICAgICAgICAgPyB7XG4gICAgICAgICAgICAgICAgY29sb3I6IHRoZW1lLnBhbGV0dGUucmVkWzUwMF0sXG4gICAgICAgICAgICAgICAgYm9yZGVyOiBgMXB4IHNvbGlkICR7dGhlbWUucGFsZXR0ZS5yZWRbNTAwXX1gLFxuICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogYWxwaGEodGhlbWUucGFsZXR0ZS5yZWRbNTAwXSwgMC4xMiksXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIDogbnVsbCxcbiAgICAgIH19XG4gICAgICBvbk1vdXNlRW50ZXI9eygpID0+IHtcbiAgICAgICAgaWYgKGlzRm9sbG93aW5nICYmIG1vdXNlRXhpdC5jdXJyZW50KSBzZXRTdGF0dXMoRm9sbG93QnV0dG9uU3RhdHVzLlVORk9MTE9XKVxuICAgICAgICBtb3VzZUV4aXQuY3VycmVudCA9IGZhbHNlXG4gICAgICB9fVxuICAgICAgb25Nb3VzZUxlYXZlPXsoKSA9PiB7XG4gICAgICAgIGlmIChpc0ZvbGxvd2luZyAmJiAhaXNVbmZvbGxvd01vZGFsT3Blbikgc2V0U3RhdHVzKEZvbGxvd0J1dHRvblN0YXR1cy5GT0xMT1dJTkcpXG4gICAgICAgIG1vdXNlRXhpdC5jdXJyZW50ID0gdHJ1ZVxuICAgICAgfX1cbiAgICAgIG9uQ2xpY2s9e2V2ZW50ID0+IHtcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKVxuICAgICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKVxuICAgICAgICBpZiAoc3RhdHVzID09PSBGb2xsb3dCdXR0b25TdGF0dXMuRk9MTE9XSU5HICYmIGlzRm9sbG93aW5nKSByZXR1cm5cbiAgICAgICAgb25Gb2xsb3coeyBpZCwgc2F2ZVN0YXR1cyB9KVxuICAgICAgfX1cbiAgICAgIHZhcmlhbnQ9e1xuICAgICAgICBzdGF0dXMgPT09IEZvbGxvd0J1dHRvblN0YXR1cy5VTkZPTExPVyB8fFxuICAgICAgICBzdGF0dXMgPT09IEZvbGxvd0J1dHRvblN0YXR1cy5GT0xMT1dJTkcgfHxcbiAgICAgICAgaXNMb2FkaW5nIHx8XG4gICAgICAgIGlzUGVuZGluZ1xuICAgICAgICAgID8gXCJjb250YWluZWQtbGlnaHRcIlxuICAgICAgICAgIDogXCJjb250YWluZWRcIlxuICAgICAgfVxuICAgID5cbiAgICAgIHsoaXNMb2FkaW5nICYmICFkZWZhdWx0U3RhdHVzKSB8fCBpc1BlbmRpbmcgPyAoXG4gICAgICAgIDw+XG4gICAgICAgICAgJm5ic3A7XG4gICAgICAgICAgPENpcmN1bGFyUHJvZ3Jlc3Mgc2l6ZT1cIjIwcHhcIiAvPlxuICAgICAgICAgICZuYnNwO1xuICAgICAgICA8Lz5cbiAgICAgICkgOiAoXG4gICAgICAgIHN0YXR1c1xuICAgICAgKX1cbiAgICA8L0J1dHRvbj5cbiAgKVxufVxuXG5leHBvcnQgeyBGb2xsb3dCdXR0b24sIEZvbGxvd0J1dHRvblN0YXR1cyB9XG4iXSwibmFtZXMiOlsiRm9sbG93QnV0dG9uIiwiRm9sbG93QnV0dG9uU3RhdHVzIiwiaWQiLCJzYXZlU3RhdHVzIiwic3giLCJkZWZhdWx0U3RhdHVzIiwiaXNMb2FkaW5nIiwiaXNQZW5kaW5nIiwib25Gb2xsb3ciLCJpc0ZvbGxvd2luZyIsImlzVW5mb2xsb3dNb2RhbE9wZW4iLCJpc0ZvbGxvd01vZGFsT3BlbiIsInVzZUZvbGxvdyIsInRoZW1lIiwidXNlVGhlbWUiLCJzdGF0dXMiLCJzZXRTdGF0dXMiLCJ1c2VTdGF0ZSIsIm1vdXNlRXhpdCIsInVzZVJlZiIsInVzZUVmZmVjdCIsIkJ1dHRvbiIsImZsZXhTaHJpbmsiLCJ3aWR0aCIsIm9wYWNpdHkiLCJ1bmRlZmluZWQiLCJwYiIsImNvbG9yIiwicGFsZXR0ZSIsInJlZCIsImJvcmRlciIsImJhY2tncm91bmRDb2xvciIsImFscGhhIiwib25Nb3VzZUVudGVyIiwiY3VycmVudCIsIm9uTW91c2VMZWF2ZSIsIm9uQ2xpY2siLCJldmVudCIsInByZXZlbnREZWZhdWx0Iiwic3RvcFByb3BhZ2F0aW9uIiwidmFyaWFudCIsIkNpcmN1bGFyUHJvZ3Jlc3MiLCJzaXplIl0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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