dbf3b8f6f2c1b3f52df295c7825bb4c8
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "InlineAttributionDisplayMobile", {
    enumerable: true,
    get: function() {
        return InlineAttributionDisplayMobile;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _react1 = require("swiper/react");
const _utils = require("@rp/common/utils");
const _compositecomponents = require("@rp/react/web/common/composite-components");
const _providers = require("@rp/react/web/common/providers");
const _core = require("@rp/react/web/mui/core");
const _ExternalFavicon = require("../ExternalFavicon");
const _removeSnippetEllipsisSpace = require("../removeSnippetEllipsisSpace");
const _InlineAttributionSelector = require("./InlineAttributionSelector");
const InlineAttributionDisplayMobile = ({ attributions, selectedAttribution, setSelectedAttribution })=>{
    const [selectedChunk, setSelectedChunk] = (0, _react.useState)(0);
    const matches = attributions[selectedAttribution].data;
    const data = matches[selectedChunk];
    const { hd, sourceName, ts } = matches[0];
    const setAttributionAndResetChunk = (id)=>{
        setSelectedChunk(0);
        setSelectedAttribution(id);
    };
    const [relatedSource, documentScope, contentType, srcKey, language] = data.type === "CQS" ? [
        data.relatedSource,
        data.documentScope,
        data.contentType,
        data.srcKey,
        data.language
    ] : [];
    const [externalFavicon] = data.type === "EXTERNAL" ? [
        data.externalFavicon
    ] : [];
    const { isLoaded, src, hasError } = (0, _providers.useSourceImage)(relatedSource ? [
        relatedSource
    ] : []);
    const image = isLoaded ? /*#__PURE__*/ (0, _jsxruntime.jsx)("img", {
        alt: hd,
        src: src
    }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Skeleton, {
        height: "100%",
        sx: {
            transform: "none"
        }
    });
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
        sx: {
            py: 2.5,
            bgcolor: "elevation.dp24",
            borderTopLeftRadius: 12,
            borderTopRightRadius: 12,
            overflow: "hidden"
        },
        children: [
            attributions.length > 1 ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_InlineAttributionSelector.InlineAttributionSelector, {
                attributions: attributions,
                selectedIndex: selectedAttribution,
                onClick: setAttributionAndResetChunk
            }) : null,
            relatedSource && !hasError && src !== "" ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                sx: {
                    width: "100%",
                    height: 125,
                    mb: 2,
                    px: 2.5,
                    "& img": {
                        objectFit: "cover",
                        height: 1,
                        width: 1,
                        borderRadius: 2
                    }
                },
                children: image
            }) : null,
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                sx: {
                    display: "flex",
                    color: "text.secondary",
                    alignItems: "center",
                    my: 1.5,
                    px: 2.5,
                    "& p": {
                        fontSize: 12,
                        letterSpacing: 0.25
                    }
                },
                children: [
                    documentScope ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.DocumentIcon, {
                        documentScope: documentScope,
                        contentType: contentType,
                        text: sourceName,
                        srcKey: srcKey
                    }) : null,
                    externalFavicon ? /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                        sx: {
                            display: "flex",
                            alignItems: "center",
                            gap: 0.5,
                            mr: 0.5,
                            overflow: "hidden",
                            "& img, & svg": {
                                height: 16,
                                width: 16
                            },
                            "& div": {
                                display: "flex"
                            }
                        },
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_ExternalFavicon.ExternalFavicon, {
                                faviconUrl: externalFavicon,
                                alt: sourceName
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                                sx: {
                                    whiteSpace: "nowrap",
                                    textOverflow: "ellipsis",
                                    overflow: "hidden"
                                },
                                children: sourceName
                            })
                        ]
                    }) : null,
                    ts ? /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Typography, {
                        sx: {
                            flexShrink: 0
                        },
                        children: [
                            "· ",
                            (0, _utils.getTimePassed)(ts)
                        ]
                    }) : null,
                    language ? /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Typography, {
                        sx: {
                            ml: 0.5,
                            flexShrink: 0
                        },
                        children: [
                            "· ",
                            language
                        ]
                    }) : null
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                sx: {
                    color: "text.primary",
                    fontSize: 18,
                    fontWeight: 700,
                    lineHeight: "24px",
                    display: "-webkit-box",
                    overflowWrap: "break-word",
                    WebkitBoxOrient: "vertical",
                    WebkitLineClamp: 4,
                    overflow: "hidden",
                    mb: 2,
                    px: 2.5
                },
                children: (0, _removeSnippetEllipsisSpace.removeSnippetEllipsisSpace)(hd)
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                sx: {
                    px: 2.5,
                    "& > div::-webkit-scrollbar": {
                        display: "none"
                    }
                },
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_react1.Swiper, {
                    slidesPerView: 1,
                    style: {
                        overflow: "visible"
                    },
                    centeredSlides: true,
                    spaceBetween: 12,
                    onSlideChange: (slide)=>{
                        setSelectedChunk(slide.realIndex);
                    },
                    children: matches.map((match)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_react1.SwiperSlide, {
                            onMouseDown: (event)=>event.preventDefault(),
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                                onClick: match.onClick,
                                sx: {
                                    border: 1,
                                    borderColor: "outline.border",
                                    p: 2,
                                    borderRadius: 1
                                },
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                                    sx: {
                                        fontSize: 18,
                                        color: "text.secondary",
                                        display: "-webkit-box",
                                        overflowWrap: "break-word",
                                        WebkitBoxOrient: "vertical",
                                        WebkitLineClamp: 4,
                                        overflow: "hidden"
                                    },
                                    children: (0, _removeSnippetEllipsisSpace.removeSnippetEllipsisSpace)(match.text)
                                })
                            })
                        }, match.text))
                }, selectedAttribution)
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                sx: {
                    px: 2.5
                },
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Button, {
                    onClick: matches[selectedChunk].onClick,
                    variant: "contained-light",
                    sx: {
                        color: "primary.main",
                        width: 1,
                        letterSpacing: 1,
                        mt: 2,
                        fontSize: 18
                    },
                    children: "Read more"
                })
            })
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,