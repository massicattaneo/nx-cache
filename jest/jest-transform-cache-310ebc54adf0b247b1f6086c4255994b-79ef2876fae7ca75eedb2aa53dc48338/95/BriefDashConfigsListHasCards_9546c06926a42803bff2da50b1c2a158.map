{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/brief/src/components/BriefDashConfigsList/BriefDashConfigsListHasCards/BriefDashConfigsListHasCards.tsx"],"sourcesContent":["import React from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { BriefConfig } from \"@rp/react/tanstack-api/brief\"\nimport { Box, Typography } from \"@rp/react/web/mui/core\"\nimport { BriefConfigCard } from \"../../BriefConfigCard\"\nimport { BriefDashSubheader } from \"../../BriefDashSubheader\"\n\ntype BriefDashConfigsListHasCardsProps = {\n  sievedUserBriefConfigs: Array<BriefConfig>\n  isFiltering: boolean\n}\n\nconst BriefDashConfigsListHasCards = ({\n  sievedUserBriefConfigs,\n  isFiltering,\n}: BriefDashConfigsListHasCardsProps) => {\n  const { t } = useTranslation()\n  return (\n    <Box\n      sx={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}\n      role=\"article\"\n      aria-label=\"briefs list\"\n    >\n      {isFiltering ? (\n        <>\n          <Typography sx={{ fontWeight: 700, fontSize: \"32px\", mb: 1, mt: 3 }}>\n            {t(\"briefsPage.filterResults\", { count: sievedUserBriefConfigs.length })}\n          </Typography>\n          <Typography\n            sx={{ fontSize: \"16px\", margin: \"4px auto 16px auto\" }}\n            color=\"text.secondary\"\n          >\n            Showing briefs that match your search term\n          </Typography>\n        </>\n      ) : (\n        <>\n          <BriefDashSubheader />\n          <Typography\n            sx={{ fontSize: \"16px\", margin: \"4px auto 16px auto\" }}\n            color=\"text.secondary\"\n          >\n            These are the briefs that you have scheduled\n          </Typography>\n        </>\n      )}\n\n      <Box display=\"flex\" flexWrap=\"wrap\" width=\"780px\">\n        {sievedUserBriefConfigs.map((userBriefConfig, idx) => (\n          <BriefConfigCard key={userBriefConfig.id} userBriefConfig={userBriefConfig} idx={idx} />\n        ))}\n      </Box>\n    </Box>\n  )\n}\n\nexport { BriefDashConfigsListHasCards }\n"],"names":["BriefDashConfigsListHasCards","sievedUserBriefConfigs","isFiltering","t","useTranslation","Box","sx","display","flexDirection","alignItems","role","aria-label","Typography","fontWeight","fontSize","mb","mt","count","length","margin","color","BriefDashSubheader","flexWrap","width","map","userBriefConfig","idx","BriefConfigCard","id"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAwDSA;;;eAAAA;;;;8DAxDS;8BACa;sBAEC;iCACA;oCACG;;;;;;AAOnC,MAAMA,+BAA+B,CAAC,EACpCC,sBAAsB,EACtBC,WAAW,EACuB;IAClC,MAAM,EAAEC,CAAC,EAAE,GAAGC,IAAAA,4BAAc;IAC5B,qBACE,sBAACC,SAAG;QACFC,IAAI;YAAEC,SAAS;YAAQC,eAAe;YAAUC,YAAY;QAAS;QACrEC,MAAK;QACLC,cAAW;;YAEVT,4BACC;;kCACE,qBAACU,gBAAU;wBAACN,IAAI;4BAAEO,YAAY;4BAAKC,UAAU;4BAAQC,IAAI;4BAAGC,IAAI;wBAAE;kCAC/Db,EAAE,4BAA4B;4BAAEc,OAAOhB,uBAAuBiB,MAAM;wBAAC;;kCAExE,qBAACN,gBAAU;wBACTN,IAAI;4BAAEQ,UAAU;4BAAQK,QAAQ;wBAAqB;wBACrDC,OAAM;kCACP;;;+BAKH;;kCACE,qBAACC,sCAAkB;kCACnB,qBAACT,gBAAU;wBACTN,IAAI;4BAAEQ,UAAU;4BAAQK,QAAQ;wBAAqB;wBACrDC,OAAM;kCACP;;;;0BAML,qBAACf,SAAG;gBAACE,SAAQ;gBAAOe,UAAS;gBAAOC,OAAM;0BACvCtB,uBAAuBuB,GAAG,CAAC,CAACC,iBAAiBC,oBAC5C,qBAACC,gCAAe;wBAA0BF,iBAAiBA;wBAAiBC,KAAKA;uBAA3DD,gBAAgBG,EAAE;;;;AAKlD"}