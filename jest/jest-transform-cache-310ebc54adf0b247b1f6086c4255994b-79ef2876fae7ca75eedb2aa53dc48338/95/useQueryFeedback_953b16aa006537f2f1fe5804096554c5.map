{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/providers/src/FeedbackContext/useQueryFeedback.ts"],"sourcesContent":["import { axiosClient } from \"@rp/react/axios-client\"\nimport { useQuery } from \"@tanstack/react-query\"\nimport { Feedback } from \"./useStoryCardFeedback\"\n\nconst getQueryFeedback = async (queryId: string): Promise<Array<Feedback>> => {\n  const { data } = await axiosClient.get<Array<Feedback>>(`/feedback/${queryId}`)\n  return data\n}\n\nconst useQueryFeedback = (queryId: string) => {\n  const isFeedbackMode = window.localStorage.getItem(\"enableFeedbackMode\") === \"true\"\n  return useQuery({\n    queryKey: [\"feedback\", queryId],\n    queryFn: () => getQueryFeedback(queryId),\n    staleTime: Infinity,\n    gcTime: Infinity,\n    enabled: isFeedbackMode,\n    select: data => {\n      return new Map(data.map(({ sentenceId, rankingValue }) => [sentenceId, Number(rankingValue)]))\n    },\n  })\n}\n\nexport { useQueryFeedback }\n"],"names":["useQueryFeedback","getQueryFeedback","queryId","data","axiosClient","get","isFeedbackMode","window","localStorage","getItem","useQuery","queryKey","queryFn","staleTime","Infinity","gcTime","enabled","select","Map","map","sentenceId","rankingValue","Number"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAuBSA;;;eAAAA;;;6BAvBmB;4BACH;AAGzB,MAAMC,mBAAmB,OAAOC;IAC9B,MAAM,EAAEC,IAAI,EAAE,GAAG,MAAMC,wBAAW,CAACC,GAAG,CAAkB,CAAC,UAAU,EAAEH,QAAQ,CAAC;IAC9E,OAAOC;AACT;AAEA,MAAMH,mBAAmB,CAACE;IACxB,MAAMI,iBAAiBC,OAAOC,YAAY,CAACC,OAAO,CAAC,0BAA0B;IAC7E,OAAOC,IAAAA,oBAAQ,EAAC;QACdC,UAAU;YAAC;YAAYT;SAAQ;QAC/BU,SAAS,IAAMX,iBAAiBC;QAChCW,WAAWC;QACXC,QAAQD;QACRE,SAASV;QACTW,QAAQd,CAAAA;YACN,OAAO,IAAIe,IAAIf,KAAKgB,GAAG,CAAC,CAAC,EAAEC,UAAU,EAAEC,YAAY,EAAE,GAAK;oBAACD;oBAAYE,OAAOD;iBAAc;QAC9F;IACF;AACF"}