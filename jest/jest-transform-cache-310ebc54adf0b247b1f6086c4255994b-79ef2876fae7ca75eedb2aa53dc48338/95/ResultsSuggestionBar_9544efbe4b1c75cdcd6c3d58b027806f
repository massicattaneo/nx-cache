9a40befcfbbd09a5bdae7d93c1cd916a
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "ResultsSuggestionBar", {
    enumerable: true,
    get: function() {
        return ResultsSuggestionBar;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _userdataqueries = require("@rp/react/tanstack-api/user-data-queries");
const _providers = require("@rp/react/web/common/providers");
const _searchautosuggestinput = require("@rp/react/web/common/search-autosuggest-input");
const _cqsutils = require("@rp/react/web/cqs-utils");
const _useHandleCqsChange = require("../../hooks/useHandleCqsChange");
const ResultsSuggestionBar = ()=>{
    const handleCQSChange = (0, _useHandleCqsChange.useHandleCqsChange)();
    const { savedQuery: { query: { expression } } } = (0, _providers.useQueryContext)();
    const selectedItems = expression ? (0, _userdataqueries.getExpressionIds)(expression, {
        format: "suggestionId",
        includeMacros: true
    }) : [];
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_searchautosuggestinput.AutosuggestInput, {
        placeholder: (0, _cqsutils.isCqsQueryNotEmpty)({
            expression
        }) ? "Add more search terms to your query" : "Search for entities, topics, watchlists or keywords",
        onChange: handleCQSChange,
        excludeQueryTypes: [
            "savedSearch"
        ],
        selectedItems: [
            ...selectedItems
        ],
        variant: "results"
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2FwcHMvY2xpZW50LXdlYi9zcmMvYXBwL3BhZ2VzL1Jlc3VsdHMvUmVzdWx0c1N1Z2dlc3Rpb25CYXIudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldEV4cHJlc3Npb25JZHMgfSBmcm9tIFwiQHJwL3JlYWN0L3RhbnN0YWNrLWFwaS91c2VyLWRhdGEtcXVlcmllc1wiXG5pbXBvcnQgeyB1c2VRdWVyeUNvbnRleHQgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9jb21tb24vcHJvdmlkZXJzXCJcbmltcG9ydCB7IEF1dG9zdWdnZXN0SW5wdXQgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9jb21tb24vc2VhcmNoLWF1dG9zdWdnZXN0LWlucHV0XCJcbmltcG9ydCB7IGlzQ3FzUXVlcnlOb3RFbXB0eSB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL2Nxcy11dGlsc1wiXG5pbXBvcnQgeyB1c2VIYW5kbGVDcXNDaGFuZ2UgfSBmcm9tIFwiLi4vLi4vaG9va3MvdXNlSGFuZGxlQ3FzQ2hhbmdlXCJcblxuY29uc3QgUmVzdWx0c1N1Z2dlc3Rpb25CYXIgPSAoKSA9PiB7XG4gIGNvbnN0IGhhbmRsZUNRU0NoYW5nZSA9IHVzZUhhbmRsZUNxc0NoYW5nZSgpXG4gIGNvbnN0IHtcbiAgICBzYXZlZFF1ZXJ5OiB7XG4gICAgICBxdWVyeTogeyBleHByZXNzaW9uIH0sXG4gICAgfSxcbiAgfSA9IHVzZVF1ZXJ5Q29udGV4dCgpXG5cbiAgY29uc3Qgc2VsZWN0ZWRJdGVtczogQXJyYXk8c3RyaW5nPiA9IGV4cHJlc3Npb25cbiAgICA/IGdldEV4cHJlc3Npb25JZHMoZXhwcmVzc2lvbiwgeyBmb3JtYXQ6IFwic3VnZ2VzdGlvbklkXCIsIGluY2x1ZGVNYWNyb3M6IHRydWUgfSlcbiAgICA6IFtdXG5cbiAgcmV0dXJuIChcbiAgICA8QXV0b3N1Z2dlc3RJbnB1dFxuICAgICAgcGxhY2Vob2xkZXI9e1xuICAgICAgICBpc0Nxc1F1ZXJ5Tm90RW1wdHkoeyBleHByZXNzaW9uIH0pXG4gICAgICAgICAgPyBcIkFkZCBtb3JlIHNlYXJjaCB0ZXJtcyB0byB5b3VyIHF1ZXJ5XCJcbiAgICAgICAgICA6IFwiU2VhcmNoIGZvciBlbnRpdGllcywgdG9waWNzLCB3YXRjaGxpc3RzIG9yIGtleXdvcmRzXCJcbiAgICAgIH1cbiAgICAgIG9uQ2hhbmdlPXtoYW5kbGVDUVNDaGFuZ2V9XG4gICAgICBleGNsdWRlUXVlcnlUeXBlcz17W1wic2F2ZWRTZWFyY2hcIl19XG4gICAgICBzZWxlY3RlZEl0ZW1zPXtbLi4uc2VsZWN0ZWRJdGVtc119XG4gICAgICB2YXJpYW50PVwicmVzdWx0c1wiXG4gICAgLz5cbiAgKVxufVxuXG5leHBvcnQgeyBSZXN1bHRzU3VnZ2VzdGlvbkJhciB9XG4iXSwibmFtZXMiOlsiUmVzdWx0c1N1Z2dlc3Rpb25CYXIiLCJoYW5kbGVDUVNDaGFuZ2UiLCJ1c2VIYW5kbGVDcXNDaGFuZ2UiLCJzYXZlZFF1ZXJ5IiwicXVlcnkiLCJleHByZXNzaW9uIiwidXNlUXVlcnlDb250ZXh0Iiwic2VsZWN0ZWRJdGVtcyIsImdldEV4cHJlc3Npb25JZHMiLCJmb3JtYXQiLCJpbmNsdWRlTWFjcm9zIiwiQXV0b3N1Z2dlc3RJbnB1dCIsInBsYWNlaG9sZGVyIiwiaXNDcXNRdWVyeU5vdEVtcHR5Iiwib25DaGFuZ2UiLCJleGNsdWRlUXVlcnlUeXBlcyIsInZhcmlhbnQiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQWlDU0E7OztlQUFBQTs7OztpQ0FqQ3dCOzJCQUNEO3dDQUNDOzBCQUNFO29DQUNBO0FBRW5DLE1BQU1BLHVCQUF1QjtJQUMzQixNQUFNQyxrQkFBa0JDLElBQUFBLHNDQUFrQjtJQUMxQyxNQUFNLEVBQ0pDLFlBQVksRUFDVkMsT0FBTyxFQUFFQyxVQUFVLEVBQUUsRUFDdEIsRUFDRixHQUFHQyxJQUFBQSwwQkFBZTtJQUVuQixNQUFNQyxnQkFBK0JGLGFBQ2pDRyxJQUFBQSxpQ0FBZ0IsRUFBQ0gsWUFBWTtRQUFFSSxRQUFRO1FBQWdCQyxlQUFlO0lBQUssS0FDM0UsRUFBRTtJQUVOLHFCQUNFLHFCQUFDQyx3Q0FBZ0I7UUFDZkMsYUFDRUMsSUFBQUEsNEJBQWtCLEVBQUM7WUFBRVI7UUFBVyxLQUM1Qix3Q0FDQTtRQUVOUyxVQUFVYjtRQUNWYyxtQkFBbUI7WUFBQztTQUFjO1FBQ2xDUixlQUFlO2VBQUlBO1NBQWM7UUFDakNTLFNBQVE7O0FBR2QifQ==