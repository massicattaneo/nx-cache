{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/common/source-selector/src/hooks/useSourceSelectorStateV2.ts"],"sourcesContent":["import { useCallback, useMemo, useState } from \"react\"\nimport type {\n  AutosuggestSource,\n  ContentCategory,\n  SourceSelectorSubmissionV2,\n} from \"@rp/react/tanstack-api/content\"\nimport { useModal, useSnackbar } from \"@rp/react/web/common/providers\"\nimport { CONTENT_SOURCES_MAX_SELECTION } from \"../sourceSelector.constants\"\nimport {\n  SourceSelectorSelectedCategoryInfo,\n  SourceSelectorSelectedSourceInfoV2,\n} from \"../sourceSelector.types\"\nimport { getIsContentElementSelectedByID } from \"../utils/getIsContentElementSelectedByID\"\nimport { getIsSourceSelectorPristineV2 } from \"../utils/getIsSourceSelectorPristineV2\"\nimport { handleApplyClickFuncV2 } from \"../utils/handleApplyClickFuncV2\"\nimport { removeSelectedItemFunc } from \"../utils/removeSelectedItemFunc\"\nimport { resetSourceSelectorStateV2 } from \"../utils/resetSourceSelectorStateV2\"\nimport { toggleCategorySelectionFunc } from \"../utils/toggleCategorySelectionFunc\"\nimport { toggleSourceSelectionFuncV2 } from \"../utils/toggleSourceSelectionFuncV2\"\nimport { useSourceSelectorStateInitializeFullV2 } from \"./useSourceSelectorStateInitializeFullV2\"\n\ntype UseSourceSelectorV2Props = {\n  initialState: SourceSelectorSubmissionV2 | undefined\n  allContentCategories: Array<ContentCategory>\n  allAutosuggestSources: Array<AutosuggestSource>\n  applyCallback: (sourceSelectionSubmission: SourceSelectorSubmissionV2) => void\n}\n\ntype UseSourceSelectorV2State = {\n  getIsContentAutosuggestSelectedByID: (id: string) => boolean\n  getIsContentCategorySelectedByID: (id: string) => boolean\n  handleApplyClick: () => void\n  handleResetClick: () => void\n  isFilterInclude: boolean\n  isPristine: boolean\n  removeSelectedItem: (\n    selectedItem: SourceSelectorSelectedSourceInfoV2 | SourceSelectorSelectedCategoryInfo,\n  ) => void\n  selectedCategories: Array<SourceSelectorSelectedCategoryInfo>\n  selectedSources: Array<SourceSelectorSelectedSourceInfoV2>\n  toggleCategorySelection: (e: React.MouseEvent<HTMLDivElement>) => void\n  toggleIsFilterInclude: () => void\n  toggleSourceSelection: (e: React.MouseEvent<HTMLDivElement>) => void\n}\n\nfunction useSourceSelectorStateV2({\n  initialState,\n  allAutosuggestSources,\n  applyCallback,\n  allContentCategories,\n}: UseSourceSelectorV2Props): UseSourceSelectorV2State {\n  const { enqueueError } = useSnackbar()\n  const [isFilterInclude, setIsFilterInclude] = useState(true)\n\n  const {\n    planComparisonModal: { handleOpen: planComparisonHandleOpen },\n  } = useModal()\n\n  const [selectedSources, setSelectedSources] = useState<Array<SourceSelectorSelectedSourceInfoV2>>(\n    [],\n  )\n\n  const [selectedCategories, setSelectedCategories] = useState<\n    Array<SourceSelectorSelectedCategoryInfo>\n  >([])\n\n  const hasReachedMaxSelection = useMemo(\n    () => selectedSources.length >= CONTENT_SOURCES_MAX_SELECTION,\n    [selectedSources],\n  )\n\n  const { initialStateFull } = useSourceSelectorStateInitializeFullV2({\n    initialState,\n    setSelectedSources,\n    setSelectedCategories,\n    setIsFilterInclude,\n  })\n\n  const isPristine = useMemo(\n    () =>\n      getIsSourceSelectorPristineV2({\n        isFilterInclude,\n        selectedSources,\n        selectedCategories,\n        initialStateFull,\n      }),\n    [isFilterInclude, selectedSources, selectedCategories, initialStateFull],\n  )\n\n  const showMaxSelectionErrorToast = useCallback(() => {\n    enqueueError(`You've reached the limit of ${CONTENT_SOURCES_MAX_SELECTION} sources`)\n  }, [enqueueError])\n\n  const toggleSourceSelection = useCallback(\n    (e: React.MouseEvent<HTMLDivElement>) =>\n      toggleSourceSelectionFuncV2({\n        allAutosuggestSources,\n        e,\n        hasReachedMaxSelection,\n        planComparisonHandleOpen,\n        selectedSources,\n        setSelectedSources,\n        showMaxSelectionErrorToast,\n      }),\n    [\n      allAutosuggestSources,\n      hasReachedMaxSelection,\n      planComparisonHandleOpen,\n      selectedSources,\n      showMaxSelectionErrorToast,\n    ],\n  )\n\n  const getIsContentAutosuggestSelectedByID = useCallback(\n    (id: string) => getIsContentElementSelectedByID(id, selectedSources),\n    [selectedSources],\n  )\n\n  const getIsContentCategorySelectedByID = useCallback(\n    (id: string) => getIsContentElementSelectedByID(id, selectedCategories),\n    [selectedCategories],\n  )\n\n  const toggleIsFilterInclude = useCallback(() => setIsFilterInclude(s => !s), [])\n\n  const removeSelectedItem = useCallback(\n    (item: SourceSelectorSelectedSourceInfoV2 | SourceSelectorSelectedCategoryInfo) =>\n      removeSelectedItemFunc({\n        item,\n        selectedSources,\n        setSelectedSources,\n        selectedCategories,\n        setSelectedCategories,\n      }),\n    [selectedCategories, selectedSources],\n  )\n\n  const handleResetClick = useCallback(() => {\n    resetSourceSelectorStateV2({\n      setSelectedSources,\n      setSelectedCategories,\n      setIsFilterInclude,\n      initialStateFull,\n    })\n  }, [initialStateFull])\n\n  const handleApplyClick = useCallback(() => {\n    handleApplyClickFuncV2({\n      isFilterInclude,\n      selectedSources,\n      selectedCategories,\n      applyCallback,\n    })\n  }, [applyCallback, isFilterInclude, selectedSources, selectedCategories])\n\n  const toggleCategorySelection = useCallback(\n    (e: React.MouseEvent<HTMLDivElement>) => {\n      toggleCategorySelectionFunc({\n        allContentCategories,\n        e,\n        selectedCategories,\n        setSelectedCategories,\n      })\n    },\n    [selectedCategories, allContentCategories],\n  )\n\n  return {\n    getIsContentAutosuggestSelectedByID,\n    getIsContentCategorySelectedByID,\n    handleApplyClick,\n    handleResetClick,\n    isFilterInclude,\n    isPristine,\n    removeSelectedItem,\n    selectedCategories,\n    selectedSources,\n    toggleCategorySelection,\n    toggleIsFilterInclude,\n    toggleSourceSelection,\n  }\n}\n\nexport { useSourceSelectorStateV2 }\nexport type { UseSourceSelectorV2State }\n"],"names":["useSourceSelectorStateV2","initialState","allAutosuggestSources","applyCallback","allContentCategories","enqueueError","useSnackbar","isFilterInclude","setIsFilterInclude","useState","planComparisonModal","handleOpen","planComparisonHandleOpen","useModal","selectedSources","setSelectedSources","selectedCategories","setSelectedCategories","hasReachedMaxSelection","useMemo","length","CONTENT_SOURCES_MAX_SELECTION","initialStateFull","useSourceSelectorStateInitializeFullV2","isPristine","getIsSourceSelectorPristineV2","showMaxSelectionErrorToast","useCallback","toggleSourceSelection","e","toggleSourceSelectionFuncV2","getIsContentAutosuggestSelectedByID","id","getIsContentElementSelectedByID","getIsContentCategorySelectedByID","toggleIsFilterInclude","s","removeSelectedItem","item","removeSelectedItemFunc","handleResetClick","resetSourceSelectorStateV2","handleApplyClick","handleApplyClickFuncV2","toggleCategorySelection","toggleCategorySelectionFunc"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAuLSA;;;eAAAA;;;uBAvLsC;2BAMT;yCACQ;iDAKE;+CACF;wCACP;wCACA;4CACI;6CACC;6CACA;wDACW;AA0BvD,SAASA,yBAAyB,EAChCC,YAAY,EACZC,qBAAqB,EACrBC,aAAa,EACbC,oBAAoB,EACK;IACzB,MAAM,EAAEC,YAAY,EAAE,GAAGC,IAAAA,sBAAW;IACpC,MAAM,CAACC,iBAAiBC,mBAAmB,GAAGC,IAAAA,eAAQ,EAAC;IAEvD,MAAM,EACJC,qBAAqB,EAAEC,YAAYC,wBAAwB,EAAE,EAC9D,GAAGC,IAAAA,mBAAQ;IAEZ,MAAM,CAACC,iBAAiBC,mBAAmB,GAAGN,IAAAA,eAAQ,EACpD,EAAE;IAGJ,MAAM,CAACO,oBAAoBC,sBAAsB,GAAGR,IAAAA,eAAQ,EAE1D,EAAE;IAEJ,MAAMS,yBAAyBC,IAAAA,cAAO,EACpC,IAAML,gBAAgBM,MAAM,IAAIC,sDAA6B,EAC7D;QAACP;KAAgB;IAGnB,MAAM,EAAEQ,gBAAgB,EAAE,GAAGC,IAAAA,8EAAsC,EAAC;QAClEtB;QACAc;QACAE;QACAT;IACF;IAEA,MAAMgB,aAAaL,IAAAA,cAAO,EACxB,IACEM,IAAAA,4DAA6B,EAAC;YAC5BlB;YACAO;YACAE;YACAM;QACF,IACF;QAACf;QAAiBO;QAAiBE;QAAoBM;KAAiB;IAG1E,MAAMI,6BAA6BC,IAAAA,kBAAW,EAAC;QAC7CtB,aAAa,CAAC,4BAA4B,EAAEgB,sDAA6B,CAAC,QAAQ,CAAC;IACrF,GAAG;QAAChB;KAAa;IAEjB,MAAMuB,wBAAwBD,IAAAA,kBAAW,EACvC,CAACE,IACCC,IAAAA,wDAA2B,EAAC;YAC1B5B;YACA2B;YACAX;YACAN;YACAE;YACAC;YACAW;QACF,IACF;QACExB;QACAgB;QACAN;QACAE;QACAY;KACD;IAGH,MAAMK,sCAAsCJ,IAAAA,kBAAW,EACrD,CAACK,KAAeC,IAAAA,gEAA+B,EAACD,IAAIlB,kBACpD;QAACA;KAAgB;IAGnB,MAAMoB,mCAAmCP,IAAAA,kBAAW,EAClD,CAACK,KAAeC,IAAAA,gEAA+B,EAACD,IAAIhB,qBACpD;QAACA;KAAmB;IAGtB,MAAMmB,wBAAwBR,IAAAA,kBAAW,EAAC,IAAMnB,mBAAmB4B,CAAAA,IAAK,CAACA,IAAI,EAAE;IAE/E,MAAMC,qBAAqBV,IAAAA,kBAAW,EACpC,CAACW,OACCC,IAAAA,8CAAsB,EAAC;YACrBD;YACAxB;YACAC;YACAC;YACAC;QACF,IACF;QAACD;QAAoBF;KAAgB;IAGvC,MAAM0B,mBAAmBb,IAAAA,kBAAW,EAAC;QACnCc,IAAAA,sDAA0B,EAAC;YACzB1B;YACAE;YACAT;YACAc;QACF;IACF,GAAG;QAACA;KAAiB;IAErB,MAAMoB,mBAAmBf,IAAAA,kBAAW,EAAC;QACnCgB,IAAAA,8CAAsB,EAAC;YACrBpC;YACAO;YACAE;YACAb;QACF;IACF,GAAG;QAACA;QAAeI;QAAiBO;QAAiBE;KAAmB;IAExE,MAAM4B,0BAA0BjB,IAAAA,kBAAW,EACzC,CAACE;QACCgB,IAAAA,wDAA2B,EAAC;YAC1BzC;YACAyB;YACAb;YACAC;QACF;IACF,GACA;QAACD;QAAoBZ;KAAqB;IAG5C,OAAO;QACL2B;QACAG;QACAQ;QACAF;QACAjC;QACAiB;QACAa;QACArB;QACAF;QACA8B;QACAT;QACAP;IACF;AACF"}