7e4ab7061a918d8f7b77973ba1e77381
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return addClasses;
    }
});
function prepareClasses(entries, prefix) {
    const resultClasses = [];
    entries.forEach((item)=>{
        if (typeof item === 'object') {
            Object.keys(item).forEach((classNames)=>{
                if (item[classNames]) {
                    resultClasses.push(prefix + classNames);
                }
            });
        } else if (typeof item === 'string') {
            resultClasses.push(prefix + item);
        }
    });
    return resultClasses;
}
function addClasses() {
    const swiper = this;
    const { classNames, params, rtl, el, device } = swiper;
    // prettier-ignore
    const suffixes = prepareClasses([
        'initialized',
        params.direction,
        {
            'free-mode': swiper.params.freeMode && params.freeMode.enabled
        },
        {
            'autoheight': params.autoHeight
        },
        {
            'rtl': rtl
        },
        {
            'grid': params.grid && params.grid.rows > 1
        },
        {
            'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'
        },
        {
            'android': device.android
        },
        {
            'ios': device.ios
        },
        {
            'css-mode': params.cssMode
        },
        {
            'centered': params.cssMode && params.centeredSlides
        },
        {
            'watch-progress': params.watchSlidesProgress
        }
    ], params.containerModifierClass);
    classNames.push(...suffixes);
    el.classList.add(...classNames);
    swiper.emitContainerClasses();
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9zd2lwZXIvY29yZS9jbGFzc2VzL2FkZENsYXNzZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gcHJlcGFyZUNsYXNzZXMoZW50cmllcywgcHJlZml4KSB7XG4gIGNvbnN0IHJlc3VsdENsYXNzZXMgPSBbXTtcbiAgZW50cmllcy5mb3JFYWNoKGl0ZW0gPT4ge1xuICAgIGlmICh0eXBlb2YgaXRlbSA9PT0gJ29iamVjdCcpIHtcbiAgICAgIE9iamVjdC5rZXlzKGl0ZW0pLmZvckVhY2goY2xhc3NOYW1lcyA9PiB7XG4gICAgICAgIGlmIChpdGVtW2NsYXNzTmFtZXNdKSB7XG4gICAgICAgICAgcmVzdWx0Q2xhc3Nlcy5wdXNoKHByZWZpeCArIGNsYXNzTmFtZXMpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBpdGVtID09PSAnc3RyaW5nJykge1xuICAgICAgcmVzdWx0Q2xhc3Nlcy5wdXNoKHByZWZpeCArIGl0ZW0pO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiByZXN1bHRDbGFzc2VzO1xufVxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gYWRkQ2xhc3NlcygpIHtcbiAgY29uc3Qgc3dpcGVyID0gdGhpcztcbiAgY29uc3Qge1xuICAgIGNsYXNzTmFtZXMsXG4gICAgcGFyYW1zLFxuICAgIHJ0bCxcbiAgICBlbCxcbiAgICBkZXZpY2VcbiAgfSA9IHN3aXBlcjtcbiAgLy8gcHJldHRpZXItaWdub3JlXG4gIGNvbnN0IHN1ZmZpeGVzID0gcHJlcGFyZUNsYXNzZXMoWydpbml0aWFsaXplZCcsIHBhcmFtcy5kaXJlY3Rpb24sIHtcbiAgICAnZnJlZS1tb2RlJzogc3dpcGVyLnBhcmFtcy5mcmVlTW9kZSAmJiBwYXJhbXMuZnJlZU1vZGUuZW5hYmxlZFxuICB9LCB7XG4gICAgJ2F1dG9oZWlnaHQnOiBwYXJhbXMuYXV0b0hlaWdodFxuICB9LCB7XG4gICAgJ3J0bCc6IHJ0bFxuICB9LCB7XG4gICAgJ2dyaWQnOiBwYXJhbXMuZ3JpZCAmJiBwYXJhbXMuZ3JpZC5yb3dzID4gMVxuICB9LCB7XG4gICAgJ2dyaWQtY29sdW1uJzogcGFyYW1zLmdyaWQgJiYgcGFyYW1zLmdyaWQucm93cyA+IDEgJiYgcGFyYW1zLmdyaWQuZmlsbCA9PT0gJ2NvbHVtbidcbiAgfSwge1xuICAgICdhbmRyb2lkJzogZGV2aWNlLmFuZHJvaWRcbiAgfSwge1xuICAgICdpb3MnOiBkZXZpY2UuaW9zXG4gIH0sIHtcbiAgICAnY3NzLW1vZGUnOiBwYXJhbXMuY3NzTW9kZVxuICB9LCB7XG4gICAgJ2NlbnRlcmVkJzogcGFyYW1zLmNzc01vZGUgJiYgcGFyYW1zLmNlbnRlcmVkU2xpZGVzXG4gIH0sIHtcbiAgICAnd2F0Y2gtcHJvZ3Jlc3MnOiBwYXJhbXMud2F0Y2hTbGlkZXNQcm9ncmVzc1xuICB9XSwgcGFyYW1zLmNvbnRhaW5lck1vZGlmaWVyQ2xhc3MpO1xuICBjbGFzc05hbWVzLnB1c2goLi4uc3VmZml4ZXMpO1xuICBlbC5jbGFzc0xpc3QuYWRkKC4uLmNsYXNzTmFtZXMpO1xuICBzd2lwZXIuZW1pdENvbnRhaW5lckNsYXNzZXMoKTtcbn0iXSwibmFtZXMiOlsiYWRkQ2xhc3NlcyIsInByZXBhcmVDbGFzc2VzIiwiZW50cmllcyIsInByZWZpeCIsInJlc3VsdENsYXNzZXMiLCJmb3JFYWNoIiwiaXRlbSIsIk9iamVjdCIsImtleXMiLCJjbGFzc05hbWVzIiwicHVzaCIsInN3aXBlciIsInBhcmFtcyIsInJ0bCIsImVsIiwiZGV2aWNlIiwic3VmZml4ZXMiLCJkaXJlY3Rpb24iLCJmcmVlTW9kZSIsImVuYWJsZWQiLCJhdXRvSGVpZ2h0IiwiZ3JpZCIsInJvd3MiLCJmaWxsIiwiYW5kcm9pZCIsImlvcyIsImNzc01vZGUiLCJjZW50ZXJlZFNsaWRlcyIsIndhdGNoU2xpZGVzUHJvZ3Jlc3MiLCJjb250YWluZXJNb2RpZmllckNsYXNzIiwiY2xhc3NMaXN0IiwiYWRkIiwiZW1pdENvbnRhaW5lckNsYXNzZXMiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQWVBOzs7ZUFBd0JBOzs7QUFmeEIsU0FBU0MsZUFBZUMsT0FBTyxFQUFFQyxNQUFNO0lBQ3JDLE1BQU1DLGdCQUFnQixFQUFFO0lBQ3hCRixRQUFRRyxPQUFPLENBQUNDLENBQUFBO1FBQ2QsSUFBSSxPQUFPQSxTQUFTLFVBQVU7WUFDNUJDLE9BQU9DLElBQUksQ0FBQ0YsTUFBTUQsT0FBTyxDQUFDSSxDQUFBQTtnQkFDeEIsSUFBSUgsSUFBSSxDQUFDRyxXQUFXLEVBQUU7b0JBQ3BCTCxjQUFjTSxJQUFJLENBQUNQLFNBQVNNO2dCQUM5QjtZQUNGO1FBQ0YsT0FBTyxJQUFJLE9BQU9ILFNBQVMsVUFBVTtZQUNuQ0YsY0FBY00sSUFBSSxDQUFDUCxTQUFTRztRQUM5QjtJQUNGO0lBQ0EsT0FBT0Y7QUFDVDtBQUNlLFNBQVNKO0lBQ3RCLE1BQU1XLFNBQVMsSUFBSTtJQUNuQixNQUFNLEVBQ0pGLFVBQVUsRUFDVkcsTUFBTSxFQUNOQyxHQUFHLEVBQ0hDLEVBQUUsRUFDRkMsTUFBTSxFQUNQLEdBQUdKO0lBQ0osa0JBQWtCO0lBQ2xCLE1BQU1LLFdBQVdmLGVBQWU7UUFBQztRQUFlVyxPQUFPSyxTQUFTO1FBQUU7WUFDaEUsYUFBYU4sT0FBT0MsTUFBTSxDQUFDTSxRQUFRLElBQUlOLE9BQU9NLFFBQVEsQ0FBQ0MsT0FBTztRQUNoRTtRQUFHO1lBQ0QsY0FBY1AsT0FBT1EsVUFBVTtRQUNqQztRQUFHO1lBQ0QsT0FBT1A7UUFDVDtRQUFHO1lBQ0QsUUFBUUQsT0FBT1MsSUFBSSxJQUFJVCxPQUFPUyxJQUFJLENBQUNDLElBQUksR0FBRztRQUM1QztRQUFHO1lBQ0QsZUFBZVYsT0FBT1MsSUFBSSxJQUFJVCxPQUFPUyxJQUFJLENBQUNDLElBQUksR0FBRyxLQUFLVixPQUFPUyxJQUFJLENBQUNFLElBQUksS0FBSztRQUM3RTtRQUFHO1lBQ0QsV0FBV1IsT0FBT1MsT0FBTztRQUMzQjtRQUFHO1lBQ0QsT0FBT1QsT0FBT1UsR0FBRztRQUNuQjtRQUFHO1lBQ0QsWUFBWWIsT0FBT2MsT0FBTztRQUM1QjtRQUFHO1lBQ0QsWUFBWWQsT0FBT2MsT0FBTyxJQUFJZCxPQUFPZSxjQUFjO1FBQ3JEO1FBQUc7WUFDRCxrQkFBa0JmLE9BQU9nQixtQkFBbUI7UUFDOUM7S0FBRSxFQUFFaEIsT0FBT2lCLHNCQUFzQjtJQUNqQ3BCLFdBQVdDLElBQUksSUFBSU07SUFDbkJGLEdBQUdnQixTQUFTLENBQUNDLEdBQUcsSUFBSXRCO0lBQ3BCRSxPQUFPcUIsb0JBQW9CO0FBQzdCIn0=