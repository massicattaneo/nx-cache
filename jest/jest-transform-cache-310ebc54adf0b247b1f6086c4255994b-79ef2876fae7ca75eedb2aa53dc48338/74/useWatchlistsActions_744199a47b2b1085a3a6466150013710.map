{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/watchlists/src/lib/hooks/useWatchlistsActions.tsx"],"sourcesContent":["import { generatePath, useLocation, useNavigate } from \"react-router-dom\"\nimport { useUser } from \"@clerk/clerk-react\"\nimport { OrganizationMembershipResource } from \"@clerk/types\"\nimport { RpqlFilter, Watchlist } from \"@rp/common/api-types\"\nimport { WATCHLIST_FEATURE_NAME } from \"@rp/common/settings\"\nimport { getShareObject, truncateString } from \"@rp/common/utils\"\nimport { ChatFileContext, useIsWatchlistLimitMet } from \"@rp/react/common/hooks\"\nimport { useAccount } from \"@rp/react/common/providers\"\nimport { getWatchlistOwnerInfo } from \"@rp/react/common/watchlists\"\nimport { getWatchlistById } from \"@rp/react/tanstack-api/common\"\nimport { useCreateSavedQuery } from \"@rp/react/tanstack-api/user-data-queries\"\nimport {\n  useCreateWatchlist,\n  useFavoriteWatchlist,\n  useShareWatchlist,\n  useUnfavoriteWatchlist,\n} from \"@rp/react/tanstack-api/watchlist\"\nimport { ShareIcon } from \"@rp/react/web/common/base-components\"\nimport {\n  EditableWatchlistFields,\n  useModal,\n  useShareContext,\n  useSnackbar,\n} from \"@rp/react/web/common/providers\"\nimport { Actions, HubRow } from \"@rp/react/web/common/types\"\nimport { tagManagerEvents } from \"@rp/react/web/common/vendors/utils\"\nimport {\n  ChatBubbleOutline,\n  ContentCopy,\n  Delete,\n  Edit,\n  Search,\n  SettingsApplications,\n  Star,\n  StarBorderOutlined,\n} from \"@rp/react/web/mui/icons\"\nimport {\n  CHAT_ROUTE,\n  WATCHLIST_EDIT,\n  WATCHLIST_EDIT_NEW,\n  WATCHLIST_ID_ROUTE,\n} from \"@rp/react/web/router\"\nimport { hasPerformedSessionAction } from \"@rp/web/utils\"\n\nexport type WatchlistActions = Record<\n  \"share\" | \"copy\" | \"remove\" | \"rename\" | \"search\" | \"chat\" | \"builder\" | \"favorite\",\n  Actions<Watchlist>[number]\n>\n\ntype WatchlistActionsOptions = {\n  organizationResource?: OrganizationMembershipResource\n  removeParams?: {\n    onSuccess?: (watchlistId: string) => void\n  }\n}\n\nexport const useWatchlistsActions = (options?: WatchlistActionsOptions) => {\n  const { user } = useUser()\n  const navigate = useNavigate()\n  const { pathname } = useLocation()\n  const { cameFromLinkPathname } = useShareContext()\n  const createQuery = useCreateSavedQuery()\n  const { enqueueSuccess, enqueueError } = useSnackbar()\n  const { mutateAsync: createWatchlist } = useCreateWatchlist({ enqueueError })\n  const { mutateAsync: shareWatchlist } = useShareWatchlist({ enqueueError })\n  const {\n    deleteWatchlistModal: { handleOpen: handleDelete },\n    watchlistModal: { handleOpen: handleOpenNew, setWatchlistEditAutoFocus },\n    shareModal: { handleOpen: handleShare },\n  } = useModal()\n  const { mutate: mutateFavorite, isPending: isPendingFavorite } = useFavoriteWatchlist()\n  const { mutate: mutateUnfavorite, isPending: isPendingUnfavorite } = useUnfavoriteWatchlist()\n\n  const { quota, hasEntitlement } = useAccount()\n  const {\n    planComparisonModal: { handleOpen: planComparisonHandleOpen },\n  } = useModal()\n  const hasMetWatchlistLimit = useIsWatchlistLimitMet(quota)\n\n  const handleEditName = async (row: Watchlist, autoFocus?: EditableWatchlistFields) => {\n    handleOpenNew(row, ({ id }) => {\n      if (row.isClientWatchlist) {\n        navigate(generatePath(WATCHLIST_ID_ROUTE, { id }), { replace: true })\n      }\n      enqueueSuccess(\"Your watchlist has been saved successfully.\")\n    })\n    autoFocus && setWatchlistEditAutoFocus(autoFocus)\n  }\n\n  const handleRunSearch = ({ id, name }: { id: string; name: string }) => {\n    const expression: RpqlFilter = {\n      type: \"and\",\n      value: [{ type: \"watchlist\", operation: \"in\", value: id }],\n    }\n    createQuery.mutate(\n      {\n        name,\n        query: {\n          expression,\n        },\n      },\n      {\n        onSuccess: response => {\n          // Send the event to GTM\n          tagManagerEvents.queryInit({\n            queryId: response.id,\n            location: \"watchlist\",\n            queryType: \"watchlist\",\n          })\n          // Navigate to the search page\n          navigate(`/search/${response.id}`)\n        },\n      },\n    )\n  }\n  const handleShareWatchlist = async (watchlist: Watchlist) => {\n    const sharedStatus =\n      watchlist.shared.isPublic || watchlist.global?.status === \"published\"\n        ? \"Public\"\n        : watchlist.shared.company.permission === \"undefined\"\n        ? \"Private\"\n        : \"Organization\"\n\n    handleShare({\n      data: {\n        isEditable: watchlist.ownerUserId === user?.id,\n        shareObject: getShareObject({\n          shareObjectId: watchlist.id,\n          shareObjectType: \"watchlist\",\n          path: generatePath(WATCHLIST_ID_ROUTE, { id: watchlist.id }),\n          name: watchlist.name,\n          ownerInfo: getWatchlistOwnerInfo(watchlist, user),\n        }),\n        mutate: ({ sharedStatus: status, organizationId }) => {\n          if (status === \"Public\") {\n            return shareWatchlist({\n              id: watchlist.id,\n              sharedBody: { isPublic: true },\n            })\n          } else if (status === \"Organization\") {\n            return shareWatchlist({\n              id: watchlist.id,\n              sharedBody: { company: { permission: \"read\", organizationId }, users: [] },\n            })\n          } else {\n            return shareWatchlist({\n              id: watchlist.id,\n              sharedBody: { company: { permission: \"undefined\" }, users: [] },\n            })\n          }\n        },\n        ownerUserId: watchlist.ownerUserId,\n        sharedStatus,\n        title: `Share \"${watchlist.name}\" Watchlist`,\n        enabledOptions: [\"Private\", \"Organization\", \"Public\"],\n        orgName: user?.organizationMemberships[0]?.organization.name,\n      },\n    })\n  }\n\n  const handleCopyWatchlist = async ({ id }: HubRow) => {\n    const { name, items } = await getWatchlistById(id)\n\n    await createWatchlist({\n      name: `Copy of ${name}`,\n      items,\n    })\n\n    enqueueSuccess(\n      <span>\n        The watchlist <strong>{`Copy of ${truncateString(name)}`}</strong> has been created\n      </span>,\n    )\n  }\n\n  const actions = {\n    share: {\n      id: \"share\",\n      label: \"Share\",\n      icon: watchlist => (\n        <ShareIcon\n          size={24}\n          shared={\n            watchlist.shared.company.permission !== \"undefined\" ||\n            watchlist.shared.isPublic ||\n            watchlist.global?.status === \"published\"\n          }\n        />\n      ),\n      onClick: watchlist => handleShareWatchlist(watchlist),\n      disabledAction: watchlist => watchlist.isClientWatchlist === true,\n      allowedAction: _watchlist => false,\n    },\n    copy: {\n      id: \"copy\",\n      label: \"Make a copy\",\n      icon: <ContentCopy />,\n      onClick: watchlist => {\n        hasMetWatchlistLimit\n          ? planComparisonHandleOpen(WATCHLIST_FEATURE_NAME)\n          : handleCopyWatchlist(watchlist)\n      },\n      disabledAction: watchlist => watchlist.isClientWatchlist === true,\n    },\n    search: {\n      id: \"search\",\n      label: \"Search\",\n      icon: <Search />,\n      onClick: watchlist => handleRunSearch(watchlist),\n      allowedAction: watchlist => watchlist.isClientWatchlist === true || !hasEntitlement(\"search\"),\n    },\n    chat: {\n      id: \"chat\",\n      label: \"Chat\",\n      icon: <ChatBubbleOutline />,\n      onClick: watchlist => {\n        const state: ChatFileContext = { watchlistIds: [watchlist.id] }\n        navigate(CHAT_ROUTE, { state })\n      },\n    },\n    rename: {\n      id: \"rename\",\n      label: \"Rename\",\n      icon: <Edit />,\n      disabledAction: watchlist =>\n        watchlist.ownerUserId !== user?.id && !(watchlist.isClientWatchlist === true),\n      onClick: (watchlist, autoFocus) => handleEditName(watchlist, autoFocus),\n    },\n    remove: {\n      id: \"remove\",\n      label: \"Delete\",\n      icon: <Delete />,\n      onClick: watchlist =>\n        handleDelete({ watchlist: watchlist, onSuccess: options?.removeParams?.onSuccess }),\n      disabledAction: watchlist =>\n        watchlist.ownerUserId !== user?.id || watchlist.isClientWatchlist === true,\n      allowedAction: watchlist =>\n        watchlist.ownerUserId !== user?.id && !(watchlist.isClientWatchlist === true),\n    },\n    builder: {\n      id: \"builder\",\n      label: \"Advanced Builder\",\n      icon: <SettingsApplications />,\n      onClick: watchlist => {\n        if (watchlist.isClientWatchlist) {\n          navigate(WATCHLIST_EDIT_NEW, { replace: true })\n        } else {\n          navigate(generatePath(WATCHLIST_EDIT, { id: watchlist.id }))\n        }\n      },\n    },\n    favorite: {\n      id: \"favorite\",\n      label: watchlist => (watchlist?.isFavorite ? \"Unfavorite\" : \"Favorite\"),\n      icon: watchlist => (watchlist?.isFavorite ? <Star /> : <StarBorderOutlined />),\n      onClick: watchlist => {\n        if (isPendingFavorite || isPendingUnfavorite) return\n        const send = hasPerformedSessionAction(\n          \"shared_link_favorited\",\n          pathname,\n          cameFromLinkPathname,\n        )\n        if (watchlist?.id) {\n          watchlist.isFavorite\n            ? mutateUnfavorite(watchlist.id)\n            : mutateFavorite({\n                id: watchlist.id,\n                cameFromSharedLink: send,\n              })\n        }\n      },\n      disabledAction: watchlist => watchlist?.isClientWatchlist === true,\n    },\n  } satisfies WatchlistActions\n  return actions\n}\n"],"names":["useWatchlistsActions","options","user","useUser","navigate","useNavigate","pathname","useLocation","cameFromLinkPathname","useShareContext","createQuery","useCreateSavedQuery","enqueueSuccess","enqueueError","useSnackbar","mutateAsync","createWatchlist","useCreateWatchlist","shareWatchlist","useShareWatchlist","deleteWatchlistModal","handleOpen","handleDelete","watchlistModal","handleOpenNew","setWatchlistEditAutoFocus","shareModal","handleShare","useModal","mutate","mutateFavorite","isPending","isPendingFavorite","useFavoriteWatchlist","mutateUnfavorite","isPendingUnfavorite","useUnfavoriteWatchlist","quota","hasEntitlement","useAccount","planComparisonModal","planComparisonHandleOpen","hasMetWatchlistLimit","useIsWatchlistLimitMet","handleEditName","row","autoFocus","id","isClientWatchlist","generatePath","WATCHLIST_ID_ROUTE","replace","handleRunSearch","name","expression","type","value","operation","query","onSuccess","response","tagManagerEvents","queryInit","queryId","location","queryType","handleShareWatchlist","watchlist","sharedStatus","shared","isPublic","global","status","company","permission","data","isEditable","ownerUserId","shareObject","getShareObject","shareObjectId","shareObjectType","path","ownerInfo","getWatchlistOwnerInfo","organizationId","sharedBody","users","title","enabledOptions","orgName","organizationMemberships","organization","handleCopyWatchlist","items","getWatchlistById","span","strong","truncateString","actions","share","label","icon","ShareIcon","size","onClick","disabledAction","allowedAction","_watchlist","copy","ContentCopy","WATCHLIST_FEATURE_NAME","search","Search","chat","ChatBubbleOutline","state","watchlistIds","CHAT_ROUTE","rename","Edit","remove","Delete","removeParams","builder","SettingsApplications","WATCHLIST_EDIT_NEW","WATCHLIST_EDIT","favorite","isFavorite","Star","StarBorderOutlined","send","hasPerformedSessionAction","cameFromSharedLink"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}