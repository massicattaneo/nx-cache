dad2cd82d41fe7583a4f15164e3df995
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "EnterLeaveCounter", {
    enumerable: true,
    get: function() {
        return EnterLeaveCounter;
    }
});
const _js_utils = require("./utils/js_utils.js");
class EnterLeaveCounter {
    enter(enteringNode) {
        const previousLength = this.entered.length;
        const isNodeEntered = (node)=>this.isNodeInDocument(node) && (!node.contains || node.contains(enteringNode));
        this.entered = (0, _js_utils.union)(this.entered.filter(isNodeEntered), [
            enteringNode
        ]);
        return previousLength === 0 && this.entered.length > 0;
    }
    leave(leavingNode) {
        const previousLength = this.entered.length;
        this.entered = (0, _js_utils.without)(this.entered.filter(this.isNodeInDocument), leavingNode);
        return previousLength > 0 && this.entered.length === 0;
    }
    reset() {
        this.entered = [];
    }
    constructor(isNodeInDocument){
        this.entered = [];
        this.isNodeInDocument = isNodeInDocument;
    }
} //# sourceMappingURL=EnterLeaveCounter.js.map

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9FbnRlckxlYXZlQ291bnRlci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1bmlvbiwgd2l0aG91dCB9IGZyb20gJy4vdXRpbHMvanNfdXRpbHMuanMnXG5cbnR5cGUgTm9kZVByZWRpY2F0ZSA9IChub2RlOiBOb2RlIHwgbnVsbCB8IHVuZGVmaW5lZCkgPT4gYm9vbGVhblxuXG5leHBvcnQgY2xhc3MgRW50ZXJMZWF2ZUNvdW50ZXIge1xuXHRwcml2YXRlIGVudGVyZWQ6IGFueVtdID0gW11cblx0cHJpdmF0ZSBpc05vZGVJbkRvY3VtZW50OiBOb2RlUHJlZGljYXRlXG5cblx0cHVibGljIGNvbnN0cnVjdG9yKGlzTm9kZUluRG9jdW1lbnQ6IE5vZGVQcmVkaWNhdGUpIHtcblx0XHR0aGlzLmlzTm9kZUluRG9jdW1lbnQgPSBpc05vZGVJbkRvY3VtZW50XG5cdH1cblxuXHRwdWJsaWMgZW50ZXIoZW50ZXJpbmdOb2RlOiBFdmVudFRhcmdldCB8IG51bGwpOiBib29sZWFuIHtcblx0XHRjb25zdCBwcmV2aW91c0xlbmd0aCA9IHRoaXMuZW50ZXJlZC5sZW5ndGhcblxuXHRcdGNvbnN0IGlzTm9kZUVudGVyZWQgPSAobm9kZTogTm9kZSk6IGJvb2xlYW4gPT5cblx0XHRcdHRoaXMuaXNOb2RlSW5Eb2N1bWVudChub2RlKSAmJlxuXHRcdFx0KCFub2RlLmNvbnRhaW5zIHx8IG5vZGUuY29udGFpbnMoZW50ZXJpbmdOb2RlIGFzIE5vZGUpKVxuXG5cdFx0dGhpcy5lbnRlcmVkID0gdW5pb24odGhpcy5lbnRlcmVkLmZpbHRlcihpc05vZGVFbnRlcmVkKSwgW2VudGVyaW5nTm9kZV0pXG5cblx0XHRyZXR1cm4gcHJldmlvdXNMZW5ndGggPT09IDAgJiYgdGhpcy5lbnRlcmVkLmxlbmd0aCA+IDBcblx0fVxuXG5cdHB1YmxpYyBsZWF2ZShsZWF2aW5nTm9kZTogRXZlbnRUYXJnZXQgfCBudWxsKTogYm9vbGVhbiB7XG5cdFx0Y29uc3QgcHJldmlvdXNMZW5ndGggPSB0aGlzLmVudGVyZWQubGVuZ3RoXG5cblx0XHR0aGlzLmVudGVyZWQgPSB3aXRob3V0KFxuXHRcdFx0dGhpcy5lbnRlcmVkLmZpbHRlcih0aGlzLmlzTm9kZUluRG9jdW1lbnQpLFxuXHRcdFx0bGVhdmluZ05vZGUsXG5cdFx0KVxuXG5cdFx0cmV0dXJuIHByZXZpb3VzTGVuZ3RoID4gMCAmJiB0aGlzLmVudGVyZWQubGVuZ3RoID09PSAwXG5cdH1cblxuXHRwdWJsaWMgcmVzZXQoKTogdm9pZCB7XG5cdFx0dGhpcy5lbnRlcmVkID0gW11cblx0fVxufVxuIl0sIm5hbWVzIjpbIkVudGVyTGVhdmVDb3VudGVyIiwiZW50ZXIiLCJlbnRlcmluZ05vZGUiLCJwcmV2aW91c0xlbmd0aCIsImVudGVyZWQiLCJsZW5ndGgiLCJpc05vZGVFbnRlcmVkIiwibm9kZSIsImlzTm9kZUluRG9jdW1lbnQiLCJjb250YWlucyIsInVuaW9uIiwiZmlsdGVyIiwibGVhdmUiLCJsZWF2aW5nTm9kZSIsIndpdGhvdXQiLCJyZXNldCIsImNvbnN0cnVjdG9yIl0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkFJYUE7OztlQUFBQTs7OzBCQUprQjtBQUl4QixNQUFNQTtJQVFaQyxNQUFhQyxZQUFnQyxFQUFXO1FBQ3ZELE1BQU1DLGlCQUFpQixJQUFJLENBQUNDLE9BQU8sQ0FBQ0MsTUFBTTtRQUUxQyxNQUFNQyxnQkFBZ0IsQ0FBQ0MsT0FDdEIsSUFBSSxDQUFDQyxnQkFBZ0IsQ0FBQ0QsU0FDckIsQ0FBQSxDQUFDQSxLQUFLRSxRQUFRLElBQUlGLEtBQUtFLFFBQVEsQ0FBQ1AsYUFBWTtRQUU5QyxJQUFJLENBQUNFLE9BQU8sR0FBR00sSUFBQUEsZUFBSyxFQUFDLElBQUksQ0FBQ04sT0FBTyxDQUFDTyxNQUFNLENBQUNMLGdCQUFnQjtZQUFDSjtTQUFhO1FBRXZFLE9BQU9DLG1CQUFtQixLQUFLLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxNQUFNLEdBQUc7O0lBR3RETyxNQUFhQyxXQUErQixFQUFXO1FBQ3RELE1BQU1WLGlCQUFpQixJQUFJLENBQUNDLE9BQU8sQ0FBQ0MsTUFBTTtRQUUxQyxJQUFJLENBQUNELE9BQU8sR0FBR1UsSUFBQUEsaUJBQU8sRUFDckIsSUFBSSxDQUFDVixPQUFPLENBQUNPLE1BQU0sQ0FBQyxJQUFJLENBQUNILGdCQUFnQixHQUN6Q0s7UUFHRCxPQUFPVixpQkFBaUIsS0FBSyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0MsTUFBTSxLQUFLOztJQUd0RFUsUUFBcUI7UUFDcEIsSUFBSSxDQUFDWCxPQUFPLEdBQUcsRUFBRTs7SUE1QmxCWSxZQUFtQlIsZ0JBQStCLENBQUU7UUFIcEQsSUFBQSxDQUFRSixPQUFPLEdBQVUsRUFBRTtRQUkxQixJQUFJLENBQUNJLGdCQUFnQixHQUFHQSJ9