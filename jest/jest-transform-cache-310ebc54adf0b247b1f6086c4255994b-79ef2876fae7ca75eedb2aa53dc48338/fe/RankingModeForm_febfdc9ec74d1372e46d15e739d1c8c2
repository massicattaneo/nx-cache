32d874799af11aadde1ae915801eb0d4
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return RankingModeForm;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _core = require("@rp/react/web/mui/core");
const _FeedbackContext = require("./FeedbackContext");
const _FeedbackModestyles = require("./FeedbackMode.styles");
function RankingModeForm({ rankingProfiles }) {
    const { rankingMode, updateQueryRanking } = (0, _FeedbackContext.useFeedbackContext)();
    const handleChange = (event)=>{
        updateQueryRanking(event.target.value);
    };
    const options = rankingProfiles && rankingProfiles.map((option)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_core.MenuItem, {
            value: option,
            children: option
        }, option));
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_FeedbackModestyles.FeedbackForm, {
        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_FeedbackModestyles.FormControlStyled, {
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.InputLabel, {
                    id: "ranking-label",
                    children: "Ranking"
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Select, {
                    "data-testid": "ranking-profile",
                    value: rankingMode,
                    label: "ranking",
                    onChange: handleChange,
                    inputProps: {
                        "data-testid": "options-id"
                    },
                    children: options
                })
            ]
        })
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9wcm92aWRlcnMvc3JjL0ZlZWRiYWNrQ29udGV4dC9SYW5raW5nTW9kZUZvcm0udHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElucHV0TGFiZWwsIE1lbnVJdGVtLCBTZWxlY3QsIFNlbGVjdENoYW5nZUV2ZW50IH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvbXVpL2NvcmVcIlxuaW1wb3J0IHsgdXNlRmVlZGJhY2tDb250ZXh0IH0gZnJvbSBcIi4vRmVlZGJhY2tDb250ZXh0XCJcbmltcG9ydCB7IEZlZWRiYWNrRm9ybSwgRm9ybUNvbnRyb2xTdHlsZWQgfSBmcm9tIFwiLi9GZWVkYmFja01vZGUuc3R5bGVzXCJcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gUmFua2luZ01vZGVGb3JtKHsgcmFua2luZ1Byb2ZpbGVzIH06IHsgcmFua2luZ1Byb2ZpbGVzOiBBcnJheTxzdHJpbmc+IH0pIHtcbiAgY29uc3QgeyByYW5raW5nTW9kZSwgdXBkYXRlUXVlcnlSYW5raW5nIH0gPSB1c2VGZWVkYmFja0NvbnRleHQoKVxuXG4gIGNvbnN0IGhhbmRsZUNoYW5nZSA9IChldmVudDogU2VsZWN0Q2hhbmdlRXZlbnQpID0+IHtcbiAgICB1cGRhdGVRdWVyeVJhbmtpbmcoZXZlbnQudGFyZ2V0LnZhbHVlKVxuICB9XG5cbiAgY29uc3Qgb3B0aW9ucyA9XG4gICAgcmFua2luZ1Byb2ZpbGVzICYmXG4gICAgcmFua2luZ1Byb2ZpbGVzLm1hcChvcHRpb24gPT4gKFxuICAgICAgPE1lbnVJdGVtIGtleT17b3B0aW9ufSB2YWx1ZT17b3B0aW9ufT5cbiAgICAgICAge29wdGlvbn1cbiAgICAgIDwvTWVudUl0ZW0+XG4gICAgKSlcblxuICByZXR1cm4gKFxuICAgIDxGZWVkYmFja0Zvcm0+XG4gICAgICA8Rm9ybUNvbnRyb2xTdHlsZWQ+XG4gICAgICAgIDxJbnB1dExhYmVsIGlkPVwicmFua2luZy1sYWJlbFwiPlJhbmtpbmc8L0lucHV0TGFiZWw+XG4gICAgICAgIDxTZWxlY3RcbiAgICAgICAgICBkYXRhLXRlc3RpZD1cInJhbmtpbmctcHJvZmlsZVwiXG4gICAgICAgICAgdmFsdWU9e3JhbmtpbmdNb2RlfVxuICAgICAgICAgIGxhYmVsPVwicmFua2luZ1wiXG4gICAgICAgICAgb25DaGFuZ2U9e2hhbmRsZUNoYW5nZX1cbiAgICAgICAgICBpbnB1dFByb3BzPXt7XG4gICAgICAgICAgICBcImRhdGEtdGVzdGlkXCI6IFwib3B0aW9ucy1pZFwiLFxuICAgICAgICAgIH19XG4gICAgICAgID5cbiAgICAgICAgICB7b3B0aW9uc31cbiAgICAgICAgPC9TZWxlY3Q+XG4gICAgICA8L0Zvcm1Db250cm9sU3R5bGVkPlxuICAgIDwvRmVlZGJhY2tGb3JtPlxuICApXG59XG4iXSwibmFtZXMiOlsiUmFua2luZ01vZGVGb3JtIiwicmFua2luZ1Byb2ZpbGVzIiwicmFua2luZ01vZGUiLCJ1cGRhdGVRdWVyeVJhbmtpbmciLCJ1c2VGZWVkYmFja0NvbnRleHQiLCJoYW5kbGVDaGFuZ2UiLCJldmVudCIsInRhcmdldCIsInZhbHVlIiwib3B0aW9ucyIsIm1hcCIsIm9wdGlvbiIsIk1lbnVJdGVtIiwiRmVlZGJhY2tGb3JtIiwiRm9ybUNvbnRyb2xTdHlsZWQiLCJJbnB1dExhYmVsIiwiaWQiLCJTZWxlY3QiLCJkYXRhLXRlc3RpZCIsImxhYmVsIiwib25DaGFuZ2UiLCJpbnB1dFByb3BzIl0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBSUE7OztlQUF3QkE7Ozs7c0JBSndDO2lDQUM3QjtvQ0FDYTtBQUVqQyxTQUFTQSxnQkFBZ0IsRUFBRUMsZUFBZSxFQUFzQztJQUM3RixNQUFNLEVBQUVDLFdBQVcsRUFBRUMsa0JBQWtCLEVBQUUsR0FBR0MsSUFBQUEsbUNBQWtCO0lBRTlELE1BQU1DLGVBQWUsQ0FBQ0M7UUFDcEJILG1CQUFtQkcsTUFBTUMsTUFBTSxDQUFDQyxLQUFLO0lBQ3ZDO0lBRUEsTUFBTUMsVUFDSlIsbUJBQ0FBLGdCQUFnQlMsR0FBRyxDQUFDQyxDQUFBQSx1QkFDbEIscUJBQUNDLGNBQVE7WUFBY0osT0FBT0c7c0JBQzNCQTtXQURZQTtJQUtuQixxQkFDRSxxQkFBQ0UsZ0NBQVk7a0JBQ1gsY0FBQSxzQkFBQ0MscUNBQWlCOzs4QkFDaEIscUJBQUNDLGdCQUFVO29CQUFDQyxJQUFHOzhCQUFnQjs7OEJBQy9CLHFCQUFDQyxZQUFNO29CQUNMQyxlQUFZO29CQUNaVixPQUFPTjtvQkFDUGlCLE9BQU07b0JBQ05DLFVBQVVmO29CQUNWZ0IsWUFBWTt3QkFDVixlQUFlO29CQUNqQjs4QkFFQ1o7Ozs7O0FBS1gifQ==