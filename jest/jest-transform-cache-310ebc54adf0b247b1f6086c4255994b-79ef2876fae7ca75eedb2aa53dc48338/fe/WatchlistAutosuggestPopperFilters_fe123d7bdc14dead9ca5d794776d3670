4b5a8c44874e89326f05208a47853e29
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "WatchlistAutosuggestPopperFilters", {
    enumerable: true,
    get: function() {
        return WatchlistAutosuggestPopperFilters;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _core = require("@rp/react/web/mui/core");
const OPTIONS = [
    {
        id: "stocks",
        label: "Stocks",
        disjunctiveFacets: {
            category: "Companies",
            group1: "Public"
        }
    },
    {
        id: "etfs",
        label: "ETFs",
        disjunctiveFacets: {
            category: "ETFs"
        }
    },
    {
        id: "privateCompanies",
        label: "Private Companies",
        disjunctiveFacets: {
            category: "Companies",
            group1: "Private"
        }
    }
];
const checkFacetContainsFacet = (parent, child)=>{
    if (!parent.group1) {
        return parent.category === child.category;
    }
    return parent.category === child.category && parent.group1 === child.group1;
};
const WatchlistAutosuggestPopperFilters = ({ customFilter, onFilterClick, disjunctiveFacets })=>{
    const filteredOptions = disjunctiveFacets ? OPTIONS.filter((option)=>disjunctiveFacets.some((facet)=>checkFacetContainsFacet(facet, option.disjunctiveFacets))) : OPTIONS;
    if (filteredOptions.length <= 1) {
        return null;
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
        sx: (theme)=>({
                backgroundColor: "elevation.dp08",
                display: "flex",
                gap: 1,
                p: 1,
                "& .MuiChip-root": {
                    height: 24
                },
                "& .MuiChip-root.selected": {
                    height: 24,
                    backgroundColor: theme.palette.primary.main,
                    color: theme.palette.primary.contrastText
                },
                "& .MuiChip-label": {
                    fontSize: 14,
                    px: 1.2
                }
            }),
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Chip, {
                label: "All",
                className: customFilter === "all" ? "selected" : undefined,
                onClick: ()=>{
                    onFilterClick("all");
                }
            }),
            filteredOptions.map((option)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Chip, {
                    label: option.label,
                    className: customFilter === option.id ? "selected" : undefined,
                    onClick: ()=>{
                        onFilterClick(option.id);
                    }
                }, option.id))
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9zZWFyY2gtYXV0b3N1Z2dlc3QtaW5wdXQvc3JjL2xpYi9VbmlmaWVkU2VhcmNoL1dhdGNobGlzdEF1dG9zdWdnZXN0UG9wcGVyRmlsdGVycy50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQm94LCBDaGlwIH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvbXVpL2NvcmVcIlxuaW1wb3J0IHsgU3VnZ2VzdGlvbkN1c3RvbUZpbHRlciB9IGZyb20gXCIuL1dhdGNobGlzdEF1dG9zdWdnZXN0SW5wdXRcIlxuXG50eXBlIFdhdGNobGlzdEZhY2V0ID0ge1xuICBjYXRlZ29yeT86IHN0cmluZyB8IG51bGxcbiAgZ3JvdXAxPzogc3RyaW5nIHwgbnVsbFxufVxuXG50eXBlIE9wdGlvbiA9IHtcbiAgaWQ6IFN1Z2dlc3Rpb25DdXN0b21GaWx0ZXJcbiAgbGFiZWw6IHN0cmluZ1xuICBkaXNqdW5jdGl2ZUZhY2V0czogV2F0Y2hsaXN0RmFjZXRcbn1cbmNvbnN0IE9QVElPTlM6IEFycmF5PE9wdGlvbj4gPSBbXG4gIHtcbiAgICBpZDogXCJzdG9ja3NcIixcbiAgICBsYWJlbDogXCJTdG9ja3NcIixcbiAgICBkaXNqdW5jdGl2ZUZhY2V0czogeyBjYXRlZ29yeTogXCJDb21wYW5pZXNcIiwgZ3JvdXAxOiBcIlB1YmxpY1wiIH0sXG4gIH0sXG4gIHtcbiAgICBpZDogXCJldGZzXCIsXG4gICAgbGFiZWw6IFwiRVRGc1wiLFxuICAgIGRpc2p1bmN0aXZlRmFjZXRzOiB7IGNhdGVnb3J5OiBcIkVURnNcIiB9LFxuICB9LFxuICB7XG4gICAgaWQ6IFwicHJpdmF0ZUNvbXBhbmllc1wiLFxuICAgIGxhYmVsOiBcIlByaXZhdGUgQ29tcGFuaWVzXCIsXG4gICAgZGlzanVuY3RpdmVGYWNldHM6IHsgY2F0ZWdvcnk6IFwiQ29tcGFuaWVzXCIsIGdyb3VwMTogXCJQcml2YXRlXCIgfSxcbiAgfSxcbl1cblxuY29uc3QgY2hlY2tGYWNldENvbnRhaW5zRmFjZXQgPSAocGFyZW50OiBXYXRjaGxpc3RGYWNldCwgY2hpbGQ6IFdhdGNobGlzdEZhY2V0KSA9PiB7XG4gIGlmICghcGFyZW50Lmdyb3VwMSkge1xuICAgIHJldHVybiBwYXJlbnQuY2F0ZWdvcnkgPT09IGNoaWxkLmNhdGVnb3J5XG4gIH1cblxuICByZXR1cm4gcGFyZW50LmNhdGVnb3J5ID09PSBjaGlsZC5jYXRlZ29yeSAmJiBwYXJlbnQuZ3JvdXAxID09PSBjaGlsZC5ncm91cDFcbn1cblxudHlwZSBQcm9wcyA9IHtcbiAgY3VzdG9tRmlsdGVyOiBTdWdnZXN0aW9uQ3VzdG9tRmlsdGVyXG4gIG9uRmlsdGVyQ2xpY2s6IChmaWx0ZXI6IFN1Z2dlc3Rpb25DdXN0b21GaWx0ZXIpID0+IHZvaWRcbiAgZGlzanVuY3RpdmVGYWNldHM/OiBBcnJheTxXYXRjaGxpc3RGYWNldD5cbn1cblxuY29uc3QgV2F0Y2hsaXN0QXV0b3N1Z2dlc3RQb3BwZXJGaWx0ZXJzID0gKHtcbiAgY3VzdG9tRmlsdGVyLFxuICBvbkZpbHRlckNsaWNrLFxuICBkaXNqdW5jdGl2ZUZhY2V0cyxcbn06IFByb3BzKSA9PiB7XG4gIGNvbnN0IGZpbHRlcmVkT3B0aW9ucyA9IGRpc2p1bmN0aXZlRmFjZXRzXG4gICAgPyBPUFRJT05TLmZpbHRlcihvcHRpb24gPT5cbiAgICAgICAgZGlzanVuY3RpdmVGYWNldHMuc29tZShmYWNldCA9PiBjaGVja0ZhY2V0Q29udGFpbnNGYWNldChmYWNldCwgb3B0aW9uLmRpc2p1bmN0aXZlRmFjZXRzKSksXG4gICAgICApXG4gICAgOiBPUFRJT05TXG5cbiAgaWYgKGZpbHRlcmVkT3B0aW9ucy5sZW5ndGggPD0gMSkge1xuICAgIHJldHVybiBudWxsXG4gIH1cblxuICByZXR1cm4gKFxuICAgIDxCb3hcbiAgICAgIHN4PXt0aGVtZSA9PiAoe1xuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwiZWxldmF0aW9uLmRwMDhcIixcbiAgICAgICAgZGlzcGxheTogXCJmbGV4XCIsXG4gICAgICAgIGdhcDogMSxcbiAgICAgICAgcDogMSxcbiAgICAgICAgXCImIC5NdWlDaGlwLXJvb3RcIjogeyBoZWlnaHQ6IDI0IH0sXG4gICAgICAgIFwiJiAuTXVpQ2hpcC1yb290LnNlbGVjdGVkXCI6IHtcbiAgICAgICAgICBoZWlnaHQ6IDI0LFxuICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogdGhlbWUucGFsZXR0ZS5wcmltYXJ5Lm1haW4sXG4gICAgICAgICAgY29sb3I6IHRoZW1lLnBhbGV0dGUucHJpbWFyeS5jb250cmFzdFRleHQsXG4gICAgICAgIH0sXG4gICAgICAgIFwiJiAuTXVpQ2hpcC1sYWJlbFwiOiB7IGZvbnRTaXplOiAxNCwgcHg6IDEuMiB9LFxuICAgICAgfSl9XG4gICAgPlxuICAgICAgPENoaXBcbiAgICAgICAgbGFiZWw9XCJBbGxcIlxuICAgICAgICBjbGFzc05hbWU9e2N1c3RvbUZpbHRlciA9PT0gXCJhbGxcIiA/IFwic2VsZWN0ZWRcIiA6IHVuZGVmaW5lZH1cbiAgICAgICAgb25DbGljaz17KCkgPT4ge1xuICAgICAgICAgIG9uRmlsdGVyQ2xpY2soXCJhbGxcIilcbiAgICAgICAgfX1cbiAgICAgIC8+XG5cbiAgICAgIHtmaWx0ZXJlZE9wdGlvbnMubWFwKG9wdGlvbiA9PiAoXG4gICAgICAgIDxDaGlwXG4gICAgICAgICAgbGFiZWw9e29wdGlvbi5sYWJlbH1cbiAgICAgICAgICBrZXk9e29wdGlvbi5pZH1cbiAgICAgICAgICBjbGFzc05hbWU9e2N1c3RvbUZpbHRlciA9PT0gb3B0aW9uLmlkID8gXCJzZWxlY3RlZFwiIDogdW5kZWZpbmVkfVxuICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgIG9uRmlsdGVyQ2xpY2sob3B0aW9uLmlkKVxuICAgICAgICAgIH19XG4gICAgICAgIC8+XG4gICAgICApKX1cbiAgICA8L0JveD5cbiAgKVxufVxuXG5leHBvcnQgeyBXYXRjaGxpc3RBdXRvc3VnZ2VzdFBvcHBlckZpbHRlcnMgfVxuZXhwb3J0IHR5cGUgeyBXYXRjaGxpc3RGYWNldCB9XG4iXSwibmFtZXMiOlsiV2F0Y2hsaXN0QXV0b3N1Z2dlc3RQb3BwZXJGaWx0ZXJzIiwiT1BUSU9OUyIsImlkIiwibGFiZWwiLCJkaXNqdW5jdGl2ZUZhY2V0cyIsImNhdGVnb3J5IiwiZ3JvdXAxIiwiY2hlY2tGYWNldENvbnRhaW5zRmFjZXQiLCJwYXJlbnQiLCJjaGlsZCIsImN1c3RvbUZpbHRlciIsIm9uRmlsdGVyQ2xpY2siLCJmaWx0ZXJlZE9wdGlvbnMiLCJmaWx0ZXIiLCJvcHRpb24iLCJzb21lIiwiZmFjZXQiLCJsZW5ndGgiLCJCb3giLCJzeCIsInRoZW1lIiwiYmFja2dyb3VuZENvbG9yIiwiZGlzcGxheSIsImdhcCIsInAiLCJoZWlnaHQiLCJwYWxldHRlIiwicHJpbWFyeSIsIm1haW4iLCJjb2xvciIsImNvbnRyYXN0VGV4dCIsImZvbnRTaXplIiwicHgiLCJDaGlwIiwiY2xhc3NOYW1lIiwidW5kZWZpbmVkIiwib25DbGljayIsIm1hcCJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBa0dTQTs7O2VBQUFBOzs7O3NCQWxHaUI7QUFhMUIsTUFBTUMsVUFBeUI7SUFDN0I7UUFDRUMsSUFBSTtRQUNKQyxPQUFPO1FBQ1BDLG1CQUFtQjtZQUFFQyxVQUFVO1lBQWFDLFFBQVE7UUFBUztJQUMvRDtJQUNBO1FBQ0VKLElBQUk7UUFDSkMsT0FBTztRQUNQQyxtQkFBbUI7WUFBRUMsVUFBVTtRQUFPO0lBQ3hDO0lBQ0E7UUFDRUgsSUFBSTtRQUNKQyxPQUFPO1FBQ1BDLG1CQUFtQjtZQUFFQyxVQUFVO1lBQWFDLFFBQVE7UUFBVTtJQUNoRTtDQUNEO0FBRUQsTUFBTUMsMEJBQTBCLENBQUNDLFFBQXdCQztJQUN2RCxJQUFJLENBQUNELE9BQU9GLE1BQU0sRUFBRTtRQUNsQixPQUFPRSxPQUFPSCxRQUFRLEtBQUtJLE1BQU1KLFFBQVE7SUFDM0M7SUFFQSxPQUFPRyxPQUFPSCxRQUFRLEtBQUtJLE1BQU1KLFFBQVEsSUFBSUcsT0FBT0YsTUFBTSxLQUFLRyxNQUFNSCxNQUFNO0FBQzdFO0FBUUEsTUFBTU4sb0NBQW9DLENBQUMsRUFDekNVLFlBQVksRUFDWkMsYUFBYSxFQUNiUCxpQkFBaUIsRUFDWDtJQUNOLE1BQU1RLGtCQUFrQlIsb0JBQ3BCSCxRQUFRWSxNQUFNLENBQUNDLENBQUFBLFNBQ2JWLGtCQUFrQlcsSUFBSSxDQUFDQyxDQUFBQSxRQUFTVCx3QkFBd0JTLE9BQU9GLE9BQU9WLGlCQUFpQixNQUV6Rkg7SUFFSixJQUFJVyxnQkFBZ0JLLE1BQU0sSUFBSSxHQUFHO1FBQy9CLE9BQU87SUFDVDtJQUVBLHFCQUNFLHNCQUFDQyxTQUFHO1FBQ0ZDLElBQUlDLENBQUFBLFFBQVUsQ0FBQTtnQkFDWkMsaUJBQWlCO2dCQUNqQkMsU0FBUztnQkFDVEMsS0FBSztnQkFDTEMsR0FBRztnQkFDSCxtQkFBbUI7b0JBQUVDLFFBQVE7Z0JBQUc7Z0JBQ2hDLDRCQUE0QjtvQkFDMUJBLFFBQVE7b0JBQ1JKLGlCQUFpQkQsTUFBTU0sT0FBTyxDQUFDQyxPQUFPLENBQUNDLElBQUk7b0JBQzNDQyxPQUFPVCxNQUFNTSxPQUFPLENBQUNDLE9BQU8sQ0FBQ0csWUFBWTtnQkFDM0M7Z0JBQ0Esb0JBQW9CO29CQUFFQyxVQUFVO29CQUFJQyxJQUFJO2dCQUFJO1lBQzlDLENBQUE7OzBCQUVBLHFCQUFDQyxVQUFJO2dCQUNIOUIsT0FBTTtnQkFDTitCLFdBQVd4QixpQkFBaUIsUUFBUSxhQUFheUI7Z0JBQ2pEQyxTQUFTO29CQUNQekIsY0FBYztnQkFDaEI7O1lBR0RDLGdCQUFnQnlCLEdBQUcsQ0FBQ3ZCLENBQUFBLHVCQUNuQixxQkFBQ21CLFVBQUk7b0JBQ0g5QixPQUFPVyxPQUFPWCxLQUFLO29CQUVuQitCLFdBQVd4QixpQkFBaUJJLE9BQU9aLEVBQUUsR0FBRyxhQUFhaUM7b0JBQ3JEQyxTQUFTO3dCQUNQekIsY0FBY0csT0FBT1osRUFBRTtvQkFDekI7bUJBSktZLE9BQU9aLEVBQUU7OztBQVN4QiJ9