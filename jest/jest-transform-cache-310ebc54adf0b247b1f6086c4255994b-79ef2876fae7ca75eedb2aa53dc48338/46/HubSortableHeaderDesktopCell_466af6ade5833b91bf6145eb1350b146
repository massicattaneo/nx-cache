1b20e749d01c6971076c33712abf4d85
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "HubSortableHeaderDesktopCell", {
    enumerable: true,
    get: function() {
        return HubSortableHeaderDesktopCell;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _core = require("@rp/react/web/mui/core");
const _icons = require("@rp/react/web/mui/icons");
const HubSortableHeaderDesktopCell = ({ children, direction, onDirectionChange, sortVisible, defaultDirection })=>{
    let transform = direction === "asc" ? "rotate(180deg)" : "rotate(0deg)";
    if (!sortVisible) transform = defaultDirection === "asc" ? "rotate(180deg)" : "rotate(0deg)";
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
        sx: {
            userSelect: "none",
            display: "flex",
            alignItems: "center",
            cursor: "pointer",
            gap: 1,
            "&:hover svg": {
                opacity: sortVisible ? 1 : 0.3
            }
        },
        onClick: ()=>{
            if (sortVisible) {
                onDirectionChange === null || onDirectionChange === void 0 ? void 0 : onDirectionChange(direction === "asc" ? "desc" : "asc");
            } else {
                onDirectionChange === null || onDirectionChange === void 0 ? void 0 : onDirectionChange(defaultDirection);
            }
        },
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                sx: {
                    fontSize: 11,
                    fontWeight: 700
                },
                children: children
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.ArrowDownward, {
                sx: {
                    transform,
                    color: "text.secondary",
                    fontSize: "20px",
                    opacity: sortVisible ? 1 : 0
                }
            })
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9jb21wb3NpdGUtY29tcG9uZW50cy9zcmMvSHViVGFibGVSb3cvSHViU29ydGFibGVIZWFkZXJEZXNrdG9wQ2VsbC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJvcHNXaXRoQ2hpbGRyZW4gfSBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IHsgTGlzdFNvcnRlckRpcmVjdGlvbiB9IGZyb20gXCJAcnAvY29tbW9uL3V0aWxzXCJcbmltcG9ydCB7IEJveCwgVHlwb2dyYXBoeSB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL211aS9jb3JlXCJcbmltcG9ydCB7IEFycm93RG93bndhcmQgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9tdWkvaWNvbnNcIlxuXG5jb25zdCBIdWJTb3J0YWJsZUhlYWRlckRlc2t0b3BDZWxsID0gKHtcbiAgY2hpbGRyZW4sXG4gIGRpcmVjdGlvbixcbiAgb25EaXJlY3Rpb25DaGFuZ2UsXG4gIHNvcnRWaXNpYmxlLFxuICBkZWZhdWx0RGlyZWN0aW9uLFxufTogUHJvcHNXaXRoQ2hpbGRyZW4gJiB7XG4gIGRlZmF1bHREaXJlY3Rpb246IExpc3RTb3J0ZXJEaXJlY3Rpb25cbiAgZGlyZWN0aW9uOiBMaXN0U29ydGVyRGlyZWN0aW9uXG4gIG9uRGlyZWN0aW9uQ2hhbmdlPzogKGRpcmVjdGlvbjogTGlzdFNvcnRlckRpcmVjdGlvbikgPT4gdm9pZFxuICBzb3J0VmlzaWJsZTogYm9vbGVhblxufSkgPT4ge1xuICBsZXQgdHJhbnNmb3JtID0gZGlyZWN0aW9uID09PSBcImFzY1wiID8gXCJyb3RhdGUoMTgwZGVnKVwiIDogXCJyb3RhdGUoMGRlZylcIlxuICBpZiAoIXNvcnRWaXNpYmxlKSB0cmFuc2Zvcm0gPSBkZWZhdWx0RGlyZWN0aW9uID09PSBcImFzY1wiID8gXCJyb3RhdGUoMTgwZGVnKVwiIDogXCJyb3RhdGUoMGRlZylcIlxuICByZXR1cm4gKFxuICAgIDxCb3hcbiAgICAgIHN4PXt7XG4gICAgICAgIHVzZXJTZWxlY3Q6IFwibm9uZVwiLFxuICAgICAgICBkaXNwbGF5OiBcImZsZXhcIixcbiAgICAgICAgYWxpZ25JdGVtczogXCJjZW50ZXJcIixcbiAgICAgICAgY3Vyc29yOiBcInBvaW50ZXJcIixcbiAgICAgICAgZ2FwOiAxLFxuICAgICAgICBcIiY6aG92ZXIgc3ZnXCI6IHsgb3BhY2l0eTogc29ydFZpc2libGUgPyAxIDogMC4zIH0sXG4gICAgICB9fVxuICAgICAgb25DbGljaz17KCkgPT4ge1xuICAgICAgICBpZiAoc29ydFZpc2libGUpIHtcbiAgICAgICAgICBvbkRpcmVjdGlvbkNoYW5nZT8uKGRpcmVjdGlvbiA9PT0gXCJhc2NcIiA/IFwiZGVzY1wiIDogXCJhc2NcIilcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBvbkRpcmVjdGlvbkNoYW5nZT8uKGRlZmF1bHREaXJlY3Rpb24pXG4gICAgICAgIH1cbiAgICAgIH19XG4gICAgPlxuICAgICAgPFR5cG9ncmFwaHkgc3g9e3sgZm9udFNpemU6IDExLCBmb250V2VpZ2h0OiA3MDAgfX0+e2NoaWxkcmVufTwvVHlwb2dyYXBoeT5cbiAgICAgIDxBcnJvd0Rvd253YXJkXG4gICAgICAgIHN4PXt7XG4gICAgICAgICAgdHJhbnNmb3JtLFxuICAgICAgICAgIGNvbG9yOiBcInRleHQuc2Vjb25kYXJ5XCIsXG4gICAgICAgICAgZm9udFNpemU6IFwiMjBweFwiLFxuICAgICAgICAgIG9wYWNpdHk6IHNvcnRWaXNpYmxlID8gMSA6IDAsXG4gICAgICAgIH19XG4gICAgICAvPlxuICAgIDwvQm94PlxuICApXG59XG5cbmV4cG9ydCB7IEh1YlNvcnRhYmxlSGVhZGVyRGVza3RvcENlbGwgfVxuIl0sIm5hbWVzIjpbIkh1YlNvcnRhYmxlSGVhZGVyRGVza3RvcENlbGwiLCJjaGlsZHJlbiIsImRpcmVjdGlvbiIsIm9uRGlyZWN0aW9uQ2hhbmdlIiwic29ydFZpc2libGUiLCJkZWZhdWx0RGlyZWN0aW9uIiwidHJhbnNmb3JtIiwiQm94Iiwic3giLCJ1c2VyU2VsZWN0IiwiZGlzcGxheSIsImFsaWduSXRlbXMiLCJjdXJzb3IiLCJnYXAiLCJvcGFjaXR5Iiwib25DbGljayIsIlR5cG9ncmFwaHkiLCJmb250U2l6ZSIsImZvbnRXZWlnaHQiLCJBcnJvd0Rvd253YXJkIiwiY29sb3IiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkFrRFNBOzs7ZUFBQUE7Ozs7c0JBaER1Qjt1QkFDRjtBQUU5QixNQUFNQSwrQkFBK0IsQ0FBQyxFQUNwQ0MsUUFBUSxFQUNSQyxTQUFTLEVBQ1RDLGlCQUFpQixFQUNqQkMsV0FBVyxFQUNYQyxnQkFBZ0IsRUFNakI7SUFDQyxJQUFJQyxZQUFZSixjQUFjLFFBQVEsbUJBQW1CO0lBQ3pELElBQUksQ0FBQ0UsYUFBYUUsWUFBWUQscUJBQXFCLFFBQVEsbUJBQW1CO0lBQzlFLHFCQUNFLHNCQUFDRSxTQUFHO1FBQ0ZDLElBQUk7WUFDRkMsWUFBWTtZQUNaQyxTQUFTO1lBQ1RDLFlBQVk7WUFDWkMsUUFBUTtZQUNSQyxLQUFLO1lBQ0wsZUFBZTtnQkFBRUMsU0FBU1YsY0FBYyxJQUFJO1lBQUk7UUFDbEQ7UUFDQVcsU0FBUztZQUNQLElBQUlYLGFBQWE7Z0JBQ2ZELDhCQUFBQSx3Q0FBQUEsa0JBQW9CRCxjQUFjLFFBQVEsU0FBUztZQUNyRCxPQUFPO2dCQUNMQyw4QkFBQUEsd0NBQUFBLGtCQUFvQkU7WUFDdEI7UUFDRjs7MEJBRUEscUJBQUNXLGdCQUFVO2dCQUFDUixJQUFJO29CQUFFUyxVQUFVO29CQUFJQyxZQUFZO2dCQUFJOzBCQUFJakI7OzBCQUNwRCxxQkFBQ2tCLG9CQUFhO2dCQUNaWCxJQUFJO29CQUNGRjtvQkFDQWMsT0FBTztvQkFDUEgsVUFBVTtvQkFDVkgsU0FBU1YsY0FBYyxJQUFJO2dCQUM3Qjs7OztBQUlSIn0=