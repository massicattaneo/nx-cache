{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/watchlists/src/lib/WatchlistPortfolioHeader/WatchlistBriefButtons.tsx"],"sourcesContent":["import { generatePath, useNavigate } from \"react-router-dom\"\nimport { Watchlist } from \"@rp/common/api-types\"\nimport { MarketBriefsIcon } from \"@rp/react/common/assets\"\nimport { useUserBriefConfigs } from \"@rp/react/tanstack-api/brief\"\nimport { RPTooltip } from \"@rp/react/web/common/base-components\"\nimport { useModal } from \"@rp/react/web/common/providers\"\nimport { IconButton } from \"@rp/react/web/mui/core\"\nimport { NotificationAddOutlined, NotificationsActive } from \"@rp/react/web/mui/icons\"\nimport {\n  BRIEF_ROUTE_CREATE,\n  BRIEF_ROUTE_DETAIL_VIEW_LATEST,\n  WATCHLIST_ID_ROUTE,\n} from \"@rp/react/web/router\"\n\ntype Props = {\n  watchlist: Watchlist\n  enableBrief: boolean\n}\n\nconst WatchlistBriefButtons = ({ watchlist, enableBrief }: Props) => {\n  const navigate = useNavigate()\n  const {\n    unsubscribeBriefConfigModal: { handleOpen },\n  } = useModal()\n\n  // Get the brief configs for the user\n  const { data: briefConfigs } = useUserBriefConfigs()\n  const subscribedBrief = briefConfigs?.find(brief => brief.watchlistIds.includes(watchlist.id))\n\n  // Click Handlers\n  const handleLatestBriefClick = () => {\n    if (subscribedBrief) {\n      navigate(generatePath(BRIEF_ROUTE_DETAIL_VIEW_LATEST, { briefId: subscribedBrief?.id }))\n    }\n  }\n\n  const handleSubscribeClick = () => {\n    navigate(`${BRIEF_ROUTE_CREATE}?watchlist-id=${watchlist.id}`)\n  }\n\n  const handleUnsubscribe = () => {\n    if (subscribedBrief) {\n      handleOpen({\n        id: subscribedBrief.id,\n        redirectUrl: generatePath(WATCHLIST_ID_ROUTE, { id: watchlist.id }),\n      })\n    }\n  }\n\n  // Buttons\n  const SubscribeButton = (\n    <RPTooltip title=\"Subscribe to Brief\">\n      <IconButton aria-label=\"Subscribe to Brief\" onClick={handleSubscribeClick}>\n        <NotificationAddOutlined sx={{ height: 24, width: 24 }} />\n      </IconButton>\n    </RPTooltip>\n  )\n  const DisabledSubscribeButton = (\n    <RPTooltip title=\"This beta feature currently supports only company watchlists. Support for other types is coming soon.\">\n      <span>\n        <IconButton aria-label=\"Subscribe to Brief\" disabled>\n          <NotificationAddOutlined sx={{ height: 24, width: 24 }} />\n        </IconButton>\n      </span>\n    </RPTooltip>\n  )\n  const UnsubscribeButton = (\n    <RPTooltip title=\"Unsubscribe from Brief\">\n      <IconButton aria-label=\"Unsubscribe from Brief\" onClick={handleUnsubscribe}>\n        <NotificationsActive sx={{ height: 24, width: 24 }} />\n      </IconButton>\n    </RPTooltip>\n  )\n\n  const ReadBriefButton = (\n    <RPTooltip title=\"Read Latest Brief\">\n      <IconButton aria-label=\"Read Latest Brief\" onClick={handleLatestBriefClick}>\n        <MarketBriefsIcon height=\"24px\" width=\"24px\" />\n      </IconButton>\n    </RPTooltip>\n  )\n\n  return subscribedBrief ? (\n    <>\n      {UnsubscribeButton}\n      {ReadBriefButton}\n    </>\n  ) : enableBrief ? (\n    SubscribeButton\n  ) : (\n    DisabledSubscribeButton\n  )\n}\n\nexport { WatchlistBriefButtons }\n"],"names":["WatchlistBriefButtons","watchlist","enableBrief","navigate","useNavigate","unsubscribeBriefConfigModal","handleOpen","useModal","data","briefConfigs","useUserBriefConfigs","subscribedBrief","find","brief","watchlistIds","includes","id","handleLatestBriefClick","generatePath","BRIEF_ROUTE_DETAIL_VIEW_LATEST","briefId","handleSubscribeClick","BRIEF_ROUTE_CREATE","handleUnsubscribe","redirectUrl","WATCHLIST_ID_ROUTE","SubscribeButton","RPTooltip","title","IconButton","aria-label","onClick","NotificationAddOutlined","sx","height","width","DisabledSubscribeButton","span","disabled","UnsubscribeButton","NotificationsActive","ReadBriefButton","MarketBriefsIcon"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BA8FSA;;;eAAAA;;;;gCA9FiC;wBAET;uBACG;gCACV;2BACD;sBACE;uBACkC;wBAKtD;AAOP,MAAMA,wBAAwB,CAAC,EAAEC,SAAS,EAAEC,WAAW,EAAS;IAC9D,MAAMC,WAAWC,IAAAA,2BAAW;IAC5B,MAAM,EACJC,6BAA6B,EAAEC,UAAU,EAAE,EAC5C,GAAGC,IAAAA,mBAAQ;IAEZ,qCAAqC;IACrC,MAAM,EAAEC,MAAMC,YAAY,EAAE,GAAGC,IAAAA,0BAAmB;IAClD,MAAMC,kBAAkBF,yBAAAA,mCAAAA,aAAcG,IAAI,CAACC,CAAAA,QAASA,MAAMC,YAAY,CAACC,QAAQ,CAACd,UAAUe,EAAE;IAE5F,iBAAiB;IACjB,MAAMC,yBAAyB;QAC7B,IAAIN,iBAAiB;YACnBR,SAASe,IAAAA,4BAAY,EAACC,sCAA8B,EAAE;gBAAEC,OAAO,EAAET,4BAAAA,sCAAAA,gBAAiBK,EAAE;YAAC;QACvF;IACF;IAEA,MAAMK,uBAAuB;QAC3BlB,SAAS,CAAC,EAAEmB,0BAAkB,CAAC,cAAc,EAAErB,UAAUe,EAAE,CAAC,CAAC;IAC/D;IAEA,MAAMO,oBAAoB;QACxB,IAAIZ,iBAAiB;YACnBL,WAAW;gBACTU,IAAIL,gBAAgBK,EAAE;gBACtBQ,aAAaN,IAAAA,4BAAY,EAACO,0BAAkB,EAAE;oBAAET,IAAIf,UAAUe,EAAE;gBAAC;YACnE;QACF;IACF;IAEA,UAAU;IACV,MAAMU,gCACJ,qBAACC,yBAAS;QAACC,OAAM;kBACf,cAAA,qBAACC,gBAAU;YAACC,cAAW;YAAqBC,SAASV;sBACnD,cAAA,qBAACW,8BAAuB;gBAACC,IAAI;oBAAEC,QAAQ;oBAAIC,OAAO;gBAAG;;;;IAI3D,MAAMC,wCACJ,qBAACT,yBAAS;QAACC,OAAM;kBACf,cAAA,qBAACS;sBACC,cAAA,qBAACR,gBAAU;gBAACC,cAAW;gBAAqBQ,QAAQ;0BAClD,cAAA,qBAACN,8BAAuB;oBAACC,IAAI;wBAAEC,QAAQ;wBAAIC,OAAO;oBAAG;;;;;IAK7D,MAAMI,kCACJ,qBAACZ,yBAAS;QAACC,OAAM;kBACf,cAAA,qBAACC,gBAAU;YAACC,cAAW;YAAyBC,SAASR;sBACvD,cAAA,qBAACiB,0BAAmB;gBAACP,IAAI;oBAAEC,QAAQ;oBAAIC,OAAO;gBAAG;;;;IAKvD,MAAMM,gCACJ,qBAACd,yBAAS;QAACC,OAAM;kBACf,cAAA,qBAACC,gBAAU;YAACC,cAAW;YAAoBC,SAASd;sBAClD,cAAA,qBAACyB,wBAAgB;gBAACR,QAAO;gBAAOC,OAAM;;;;IAK5C,OAAOxB,gCACL;;YACG4B;YACAE;;SAEDvC,cACFwB,kBAEAU;AAEJ"}