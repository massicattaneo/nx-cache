4558ea23274c4b460f5c2a8d28c57409
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "WatchlistBriefButtons", {
    enumerable: true,
    get: function() {
        return WatchlistBriefButtons;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _reactrouterdom = require("react-router-dom");
const _assets = require("@rp/react/common/assets");
const _brief = require("@rp/react/tanstack-api/brief");
const _basecomponents = require("@rp/react/web/common/base-components");
const _providers = require("@rp/react/web/common/providers");
const _core = require("@rp/react/web/mui/core");
const _icons = require("@rp/react/web/mui/icons");
const _router = require("@rp/react/web/router");
const WatchlistBriefButtons = ({ watchlist, enableBrief })=>{
    const navigate = (0, _reactrouterdom.useNavigate)();
    const { unsubscribeBriefConfigModal: { handleOpen } } = (0, _providers.useModal)();
    // Get the brief configs for the user
    const { data: briefConfigs } = (0, _brief.useUserBriefConfigs)();
    const subscribedBrief = briefConfigs === null || briefConfigs === void 0 ? void 0 : briefConfigs.find((brief)=>brief.watchlistIds.includes(watchlist.id));
    // Click Handlers
    const handleLatestBriefClick = ()=>{
        if (subscribedBrief) {
            navigate((0, _reactrouterdom.generatePath)(_router.BRIEF_ROUTE_DETAIL_VIEW_LATEST, {
                briefId: subscribedBrief === null || subscribedBrief === void 0 ? void 0 : subscribedBrief.id
            }));
        }
    };
    const handleSubscribeClick = ()=>{
        navigate(`${_router.BRIEF_ROUTE_CREATE}?watchlist-id=${watchlist.id}`);
    };
    const handleUnsubscribe = ()=>{
        if (subscribedBrief) {
            handleOpen({
                id: subscribedBrief.id,
                redirectUrl: (0, _reactrouterdom.generatePath)(_router.WATCHLIST_ID_ROUTE, {
                    id: watchlist.id
                })
            });
        }
    };
    // Buttons
    const SubscribeButton = /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.RPTooltip, {
        title: "Subscribe to Brief",
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.IconButton, {
            "aria-label": "Subscribe to Brief",
            onClick: handleSubscribeClick,
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.NotificationAddOutlined, {
                sx: {
                    height: 24,
                    width: 24
                }
            })
        })
    });
    const DisabledSubscribeButton = /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.RPTooltip, {
        title: "This beta feature currently supports only company watchlists. Support for other types is coming soon.",
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.IconButton, {
                "aria-label": "Subscribe to Brief",
                disabled: true,
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.NotificationAddOutlined, {
                    sx: {
                        height: 24,
                        width: 24
                    }
                })
            })
        })
    });
    const UnsubscribeButton = /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.RPTooltip, {
        title: "Unsubscribe from Brief",
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.IconButton, {
            "aria-label": "Unsubscribe from Brief",
            onClick: handleUnsubscribe,
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.NotificationsActive, {
                sx: {
                    height: 24,
                    width: 24
                }
            })
        })
    });
    const ReadBriefButton = /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.RPTooltip, {
        title: "Read Latest Brief",
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.IconButton, {
            "aria-label": "Read Latest Brief",
            onClick: handleLatestBriefClick,
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_assets.MarketBriefsIcon, {
                height: "24px",
                width: "24px"
            })
        })
    });
    return subscribedBrief ? /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
        children: [
            UnsubscribeButton,
            ReadBriefButton
        ]
    }) : enableBrief ? SubscribeButton : DisabledSubscribeButton;
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL3dhdGNobGlzdHMvc3JjL2xpYi9XYXRjaGxpc3RQb3J0Zm9saW9IZWFkZXIvV2F0Y2hsaXN0QnJpZWZCdXR0b25zLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZW5lcmF0ZVBhdGgsIHVzZU5hdmlnYXRlIH0gZnJvbSBcInJlYWN0LXJvdXRlci1kb21cIlxuaW1wb3J0IHsgV2F0Y2hsaXN0IH0gZnJvbSBcIkBycC9jb21tb24vYXBpLXR5cGVzXCJcbmltcG9ydCB7IE1hcmtldEJyaWVmc0ljb24gfSBmcm9tIFwiQHJwL3JlYWN0L2NvbW1vbi9hc3NldHNcIlxuaW1wb3J0IHsgdXNlVXNlckJyaWVmQ29uZmlncyB9IGZyb20gXCJAcnAvcmVhY3QvdGFuc3RhY2stYXBpL2JyaWVmXCJcbmltcG9ydCB7IFJQVG9vbHRpcCB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL2NvbW1vbi9iYXNlLWNvbXBvbmVudHNcIlxuaW1wb3J0IHsgdXNlTW9kYWwgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9jb21tb24vcHJvdmlkZXJzXCJcbmltcG9ydCB7IEljb25CdXR0b24gfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9tdWkvY29yZVwiXG5pbXBvcnQgeyBOb3RpZmljYXRpb25BZGRPdXRsaW5lZCwgTm90aWZpY2F0aW9uc0FjdGl2ZSB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL211aS9pY29uc1wiXG5pbXBvcnQge1xuICBCUklFRl9ST1VURV9DUkVBVEUsXG4gIEJSSUVGX1JPVVRFX0RFVEFJTF9WSUVXX0xBVEVTVCxcbiAgV0FUQ0hMSVNUX0lEX1JPVVRFLFxufSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9yb3V0ZXJcIlxuXG50eXBlIFByb3BzID0ge1xuICB3YXRjaGxpc3Q6IFdhdGNobGlzdFxuICBlbmFibGVCcmllZjogYm9vbGVhblxufVxuXG5jb25zdCBXYXRjaGxpc3RCcmllZkJ1dHRvbnMgPSAoeyB3YXRjaGxpc3QsIGVuYWJsZUJyaWVmIH06IFByb3BzKSA9PiB7XG4gIGNvbnN0IG5hdmlnYXRlID0gdXNlTmF2aWdhdGUoKVxuICBjb25zdCB7XG4gICAgdW5zdWJzY3JpYmVCcmllZkNvbmZpZ01vZGFsOiB7IGhhbmRsZU9wZW4gfSxcbiAgfSA9IHVzZU1vZGFsKClcblxuICAvLyBHZXQgdGhlIGJyaWVmIGNvbmZpZ3MgZm9yIHRoZSB1c2VyXG4gIGNvbnN0IHsgZGF0YTogYnJpZWZDb25maWdzIH0gPSB1c2VVc2VyQnJpZWZDb25maWdzKClcbiAgY29uc3Qgc3Vic2NyaWJlZEJyaWVmID0gYnJpZWZDb25maWdzPy5maW5kKGJyaWVmID0+IGJyaWVmLndhdGNobGlzdElkcy5pbmNsdWRlcyh3YXRjaGxpc3QuaWQpKVxuXG4gIC8vIENsaWNrIEhhbmRsZXJzXG4gIGNvbnN0IGhhbmRsZUxhdGVzdEJyaWVmQ2xpY2sgPSAoKSA9PiB7XG4gICAgaWYgKHN1YnNjcmliZWRCcmllZikge1xuICAgICAgbmF2aWdhdGUoZ2VuZXJhdGVQYXRoKEJSSUVGX1JPVVRFX0RFVEFJTF9WSUVXX0xBVEVTVCwgeyBicmllZklkOiBzdWJzY3JpYmVkQnJpZWY/LmlkIH0pKVxuICAgIH1cbiAgfVxuXG4gIGNvbnN0IGhhbmRsZVN1YnNjcmliZUNsaWNrID0gKCkgPT4ge1xuICAgIG5hdmlnYXRlKGAke0JSSUVGX1JPVVRFX0NSRUFURX0/d2F0Y2hsaXN0LWlkPSR7d2F0Y2hsaXN0LmlkfWApXG4gIH1cblxuICBjb25zdCBoYW5kbGVVbnN1YnNjcmliZSA9ICgpID0+IHtcbiAgICBpZiAoc3Vic2NyaWJlZEJyaWVmKSB7XG4gICAgICBoYW5kbGVPcGVuKHtcbiAgICAgICAgaWQ6IHN1YnNjcmliZWRCcmllZi5pZCxcbiAgICAgICAgcmVkaXJlY3RVcmw6IGdlbmVyYXRlUGF0aChXQVRDSExJU1RfSURfUk9VVEUsIHsgaWQ6IHdhdGNobGlzdC5pZCB9KSxcbiAgICAgIH0pXG4gICAgfVxuICB9XG5cbiAgLy8gQnV0dG9uc1xuICBjb25zdCBTdWJzY3JpYmVCdXR0b24gPSAoXG4gICAgPFJQVG9vbHRpcCB0aXRsZT1cIlN1YnNjcmliZSB0byBCcmllZlwiPlxuICAgICAgPEljb25CdXR0b24gYXJpYS1sYWJlbD1cIlN1YnNjcmliZSB0byBCcmllZlwiIG9uQ2xpY2s9e2hhbmRsZVN1YnNjcmliZUNsaWNrfT5cbiAgICAgICAgPE5vdGlmaWNhdGlvbkFkZE91dGxpbmVkIHN4PXt7IGhlaWdodDogMjQsIHdpZHRoOiAyNCB9fSAvPlxuICAgICAgPC9JY29uQnV0dG9uPlxuICAgIDwvUlBUb29sdGlwPlxuICApXG4gIGNvbnN0IERpc2FibGVkU3Vic2NyaWJlQnV0dG9uID0gKFxuICAgIDxSUFRvb2x0aXAgdGl0bGU9XCJUaGlzIGJldGEgZmVhdHVyZSBjdXJyZW50bHkgc3VwcG9ydHMgb25seSBjb21wYW55IHdhdGNobGlzdHMuIFN1cHBvcnQgZm9yIG90aGVyIHR5cGVzIGlzIGNvbWluZyBzb29uLlwiPlxuICAgICAgPHNwYW4+XG4gICAgICAgIDxJY29uQnV0dG9uIGFyaWEtbGFiZWw9XCJTdWJzY3JpYmUgdG8gQnJpZWZcIiBkaXNhYmxlZD5cbiAgICAgICAgICA8Tm90aWZpY2F0aW9uQWRkT3V0bGluZWQgc3g9e3sgaGVpZ2h0OiAyNCwgd2lkdGg6IDI0IH19IC8+XG4gICAgICAgIDwvSWNvbkJ1dHRvbj5cbiAgICAgIDwvc3Bhbj5cbiAgICA8L1JQVG9vbHRpcD5cbiAgKVxuICBjb25zdCBVbnN1YnNjcmliZUJ1dHRvbiA9IChcbiAgICA8UlBUb29sdGlwIHRpdGxlPVwiVW5zdWJzY3JpYmUgZnJvbSBCcmllZlwiPlxuICAgICAgPEljb25CdXR0b24gYXJpYS1sYWJlbD1cIlVuc3Vic2NyaWJlIGZyb20gQnJpZWZcIiBvbkNsaWNrPXtoYW5kbGVVbnN1YnNjcmliZX0+XG4gICAgICAgIDxOb3RpZmljYXRpb25zQWN0aXZlIHN4PXt7IGhlaWdodDogMjQsIHdpZHRoOiAyNCB9fSAvPlxuICAgICAgPC9JY29uQnV0dG9uPlxuICAgIDwvUlBUb29sdGlwPlxuICApXG5cbiAgY29uc3QgUmVhZEJyaWVmQnV0dG9uID0gKFxuICAgIDxSUFRvb2x0aXAgdGl0bGU9XCJSZWFkIExhdGVzdCBCcmllZlwiPlxuICAgICAgPEljb25CdXR0b24gYXJpYS1sYWJlbD1cIlJlYWQgTGF0ZXN0IEJyaWVmXCIgb25DbGljaz17aGFuZGxlTGF0ZXN0QnJpZWZDbGlja30+XG4gICAgICAgIDxNYXJrZXRCcmllZnNJY29uIGhlaWdodD1cIjI0cHhcIiB3aWR0aD1cIjI0cHhcIiAvPlxuICAgICAgPC9JY29uQnV0dG9uPlxuICAgIDwvUlBUb29sdGlwPlxuICApXG5cbiAgcmV0dXJuIHN1YnNjcmliZWRCcmllZiA/IChcbiAgICA8PlxuICAgICAge1Vuc3Vic2NyaWJlQnV0dG9ufVxuICAgICAge1JlYWRCcmllZkJ1dHRvbn1cbiAgICA8Lz5cbiAgKSA6IGVuYWJsZUJyaWVmID8gKFxuICAgIFN1YnNjcmliZUJ1dHRvblxuICApIDogKFxuICAgIERpc2FibGVkU3Vic2NyaWJlQnV0dG9uXG4gIClcbn1cblxuZXhwb3J0IHsgV2F0Y2hsaXN0QnJpZWZCdXR0b25zIH1cbiJdLCJuYW1lcyI6WyJXYXRjaGxpc3RCcmllZkJ1dHRvbnMiLCJ3YXRjaGxpc3QiLCJlbmFibGVCcmllZiIsIm5hdmlnYXRlIiwidXNlTmF2aWdhdGUiLCJ1bnN1YnNjcmliZUJyaWVmQ29uZmlnTW9kYWwiLCJoYW5kbGVPcGVuIiwidXNlTW9kYWwiLCJkYXRhIiwiYnJpZWZDb25maWdzIiwidXNlVXNlckJyaWVmQ29uZmlncyIsInN1YnNjcmliZWRCcmllZiIsImZpbmQiLCJicmllZiIsIndhdGNobGlzdElkcyIsImluY2x1ZGVzIiwiaWQiLCJoYW5kbGVMYXRlc3RCcmllZkNsaWNrIiwiZ2VuZXJhdGVQYXRoIiwiQlJJRUZfUk9VVEVfREVUQUlMX1ZJRVdfTEFURVNUIiwiYnJpZWZJZCIsImhhbmRsZVN1YnNjcmliZUNsaWNrIiwiQlJJRUZfUk9VVEVfQ1JFQVRFIiwiaGFuZGxlVW5zdWJzY3JpYmUiLCJyZWRpcmVjdFVybCIsIldBVENITElTVF9JRF9ST1VURSIsIlN1YnNjcmliZUJ1dHRvbiIsIlJQVG9vbHRpcCIsInRpdGxlIiwiSWNvbkJ1dHRvbiIsImFyaWEtbGFiZWwiLCJvbkNsaWNrIiwiTm90aWZpY2F0aW9uQWRkT3V0bGluZWQiLCJzeCIsImhlaWdodCIsIndpZHRoIiwiRGlzYWJsZWRTdWJzY3JpYmVCdXR0b24iLCJzcGFuIiwiZGlzYWJsZWQiLCJVbnN1YnNjcmliZUJ1dHRvbiIsIk5vdGlmaWNhdGlvbnNBY3RpdmUiLCJSZWFkQnJpZWZCdXR0b24iLCJNYXJrZXRCcmllZnNJY29uIl0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkE4RlNBOzs7ZUFBQUE7Ozs7Z0NBOUZpQzt3QkFFVDt1QkFDRztnQ0FDVjsyQkFDRDtzQkFDRTt1QkFDa0M7d0JBS3REO0FBT1AsTUFBTUEsd0JBQXdCLENBQUMsRUFBRUMsU0FBUyxFQUFFQyxXQUFXLEVBQVM7SUFDOUQsTUFBTUMsV0FBV0MsSUFBQUEsMkJBQVc7SUFDNUIsTUFBTSxFQUNKQyw2QkFBNkIsRUFBRUMsVUFBVSxFQUFFLEVBQzVDLEdBQUdDLElBQUFBLG1CQUFRO0lBRVoscUNBQXFDO0lBQ3JDLE1BQU0sRUFBRUMsTUFBTUMsWUFBWSxFQUFFLEdBQUdDLElBQUFBLDBCQUFtQjtJQUNsRCxNQUFNQyxrQkFBa0JGLHlCQUFBQSxtQ0FBQUEsYUFBY0csSUFBSSxDQUFDQyxDQUFBQSxRQUFTQSxNQUFNQyxZQUFZLENBQUNDLFFBQVEsQ0FBQ2QsVUFBVWUsRUFBRTtJQUU1RixpQkFBaUI7SUFDakIsTUFBTUMseUJBQXlCO1FBQzdCLElBQUlOLGlCQUFpQjtZQUNuQlIsU0FBU2UsSUFBQUEsNEJBQVksRUFBQ0Msc0NBQThCLEVBQUU7Z0JBQUVDLE9BQU8sRUFBRVQsNEJBQUFBLHNDQUFBQSxnQkFBaUJLLEVBQUU7WUFBQztRQUN2RjtJQUNGO0lBRUEsTUFBTUssdUJBQXVCO1FBQzNCbEIsU0FBUyxDQUFDLEVBQUVtQiwwQkFBa0IsQ0FBQyxjQUFjLEVBQUVyQixVQUFVZSxFQUFFLENBQUMsQ0FBQztJQUMvRDtJQUVBLE1BQU1PLG9CQUFvQjtRQUN4QixJQUFJWixpQkFBaUI7WUFDbkJMLFdBQVc7Z0JBQ1RVLElBQUlMLGdCQUFnQkssRUFBRTtnQkFDdEJRLGFBQWFOLElBQUFBLDRCQUFZLEVBQUNPLDBCQUFrQixFQUFFO29CQUFFVCxJQUFJZixVQUFVZSxFQUFFO2dCQUFDO1lBQ25FO1FBQ0Y7SUFDRjtJQUVBLFVBQVU7SUFDVixNQUFNVSxnQ0FDSixxQkFBQ0MseUJBQVM7UUFBQ0MsT0FBTTtrQkFDZixjQUFBLHFCQUFDQyxnQkFBVTtZQUFDQyxjQUFXO1lBQXFCQyxTQUFTVjtzQkFDbkQsY0FBQSxxQkFBQ1csOEJBQXVCO2dCQUFDQyxJQUFJO29CQUFFQyxRQUFRO29CQUFJQyxPQUFPO2dCQUFHOzs7O0lBSTNELE1BQU1DLHdDQUNKLHFCQUFDVCx5QkFBUztRQUFDQyxPQUFNO2tCQUNmLGNBQUEscUJBQUNTO3NCQUNDLGNBQUEscUJBQUNSLGdCQUFVO2dCQUFDQyxjQUFXO2dCQUFxQlEsUUFBUTswQkFDbEQsY0FBQSxxQkFBQ04sOEJBQXVCO29CQUFDQyxJQUFJO3dCQUFFQyxRQUFRO3dCQUFJQyxPQUFPO29CQUFHOzs7OztJQUs3RCxNQUFNSSxrQ0FDSixxQkFBQ1oseUJBQVM7UUFBQ0MsT0FBTTtrQkFDZixjQUFBLHFCQUFDQyxnQkFBVTtZQUFDQyxjQUFXO1lBQXlCQyxTQUFTUjtzQkFDdkQsY0FBQSxxQkFBQ2lCLDBCQUFtQjtnQkFBQ1AsSUFBSTtvQkFBRUMsUUFBUTtvQkFBSUMsT0FBTztnQkFBRzs7OztJQUt2RCxNQUFNTSxnQ0FDSixxQkFBQ2QseUJBQVM7UUFBQ0MsT0FBTTtrQkFDZixjQUFBLHFCQUFDQyxnQkFBVTtZQUFDQyxjQUFXO1lBQW9CQyxTQUFTZDtzQkFDbEQsY0FBQSxxQkFBQ3lCLHdCQUFnQjtnQkFBQ1IsUUFBTztnQkFBT0MsT0FBTTs7OztJQUs1QyxPQUFPeEIsZ0NBQ0w7O1lBQ0c0QjtZQUNBRTs7U0FFRHZDLGNBQ0Z3QixrQkFFQVU7QUFFSiJ9