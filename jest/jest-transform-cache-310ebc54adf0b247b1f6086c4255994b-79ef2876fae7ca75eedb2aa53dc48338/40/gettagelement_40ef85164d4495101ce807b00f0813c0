a6947abbde12ddffdf66d23365e6ee04
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    getChildrenTagName: function() {
        return getChildrenTagName;
    },
    getTagElement: function() {
        return getTagElement;
    }
});
const _types = require("@rp/react/rpjson/types");
const _constants = require("../constants");
const getTagElement = (type)=>{
    switch(type){
        case _types.EnhancedDocumentTypes.PAGE:
            return _constants.TAG_NAMES.DIV;
        case _types.EnhancedDocumentTypes.PARAGRAPH:
            return _constants.TAG_NAMES.P;
        case _types.ContentBlockTypes.HEADING:
            return _constants.TAG_NAMES.H3;
        case _types.ContentBlockTypes.HEADER:
            return _constants.TAG_NAMES.HEADER;
        case _types.ContentBlockTypes.FOOTER:
            return _constants.TAG_NAMES.FOOTER;
        case _types.ContentBlockTypes.TABLE:
            return _constants.TAG_NAMES.TABLE;
        case _types.ContentBlockTypes.FORM:
            return _constants.TAG_NAMES.FORM;
        case _types.ContentBlockTypes.LIST_UNORDERED:
            return _constants.TAG_NAMES.UL;
        case _types.ContentBlockTypes.LIST_ORDERED:
            return _constants.TAG_NAMES.OL;
        case _types.EnhancedDocumentTypes.LIST_ITEM:
            return _constants.TAG_NAMES.LI;
        case _types.EnhancedDocumentTypes.TABLE_ROW:
            return _constants.TAG_NAMES.TR;
        case _types.EnhancedDocumentTypes.TABLE_CELL:
            return _constants.TAG_NAMES.TD;
        case _types.EnhancedDocumentTypes.CONTAINER:
            return _constants.TAG_NAMES.DIV;
        default:
            return _constants.TAG_NAMES.P;
    }
};
const getChildrenTagName = (parent)=>{
    if (parent.type === _types.ContentBlockTypes.FORM) return _constants.TAG_NAMES.DIV;
    if (parent.type === _types.ContentBlockTypes.LIST_UNORDERED) return _constants.TAG_NAMES.LI;
    if (parent.type === _types.ContentBlockTypes.LIST_ORDERED) return _constants.TAG_NAMES.LI;
    return undefined;
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL3JwanNvbi9zcmMvbGliL2NyZWF0ZS1yZWFjdC1lbGVtZW50cy9nZXQtdGFnLWVsZW1lbnQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29udGVudEJsb2NrVHlwZXMgfSBmcm9tIFwiQHJwL3JlYWN0L3JwanNvbi90eXBlc1wiXG5pbXBvcnQgeyBFbmhhbmNlZEJsb2NrLCBFbmhhbmNlZERvY3VtZW50VHlwZXMgfSBmcm9tIFwiQHJwL3JlYWN0L3JwanNvbi90eXBlc1wiXG5pbXBvcnQgeyBUQUdfTkFNRVMgfSBmcm9tIFwiLi4vY29uc3RhbnRzXCJcblxuZXhwb3J0IGNvbnN0IGdldFRhZ0VsZW1lbnQgPSAodHlwZTogc3RyaW5nIHwgdW5kZWZpbmVkKSA9PiB7XG4gIHN3aXRjaCAodHlwZSkge1xuICAgIGNhc2UgRW5oYW5jZWREb2N1bWVudFR5cGVzLlBBR0U6XG4gICAgICByZXR1cm4gVEFHX05BTUVTLkRJVlxuICAgIGNhc2UgRW5oYW5jZWREb2N1bWVudFR5cGVzLlBBUkFHUkFQSDpcbiAgICAgIHJldHVybiBUQUdfTkFNRVMuUFxuICAgIGNhc2UgQ29udGVudEJsb2NrVHlwZXMuSEVBRElORzpcbiAgICAgIHJldHVybiBUQUdfTkFNRVMuSDNcbiAgICBjYXNlIENvbnRlbnRCbG9ja1R5cGVzLkhFQURFUjpcbiAgICAgIHJldHVybiBUQUdfTkFNRVMuSEVBREVSXG4gICAgY2FzZSBDb250ZW50QmxvY2tUeXBlcy5GT09URVI6XG4gICAgICByZXR1cm4gVEFHX05BTUVTLkZPT1RFUlxuICAgIGNhc2UgQ29udGVudEJsb2NrVHlwZXMuVEFCTEU6XG4gICAgICByZXR1cm4gVEFHX05BTUVTLlRBQkxFXG4gICAgY2FzZSBDb250ZW50QmxvY2tUeXBlcy5GT1JNOlxuICAgICAgcmV0dXJuIFRBR19OQU1FUy5GT1JNXG4gICAgY2FzZSBDb250ZW50QmxvY2tUeXBlcy5MSVNUX1VOT1JERVJFRDpcbiAgICAgIHJldHVybiBUQUdfTkFNRVMuVUxcbiAgICBjYXNlIENvbnRlbnRCbG9ja1R5cGVzLkxJU1RfT1JERVJFRDpcbiAgICAgIHJldHVybiBUQUdfTkFNRVMuT0xcbiAgICBjYXNlIEVuaGFuY2VkRG9jdW1lbnRUeXBlcy5MSVNUX0lURU06XG4gICAgICByZXR1cm4gVEFHX05BTUVTLkxJXG4gICAgY2FzZSBFbmhhbmNlZERvY3VtZW50VHlwZXMuVEFCTEVfUk9XOlxuICAgICAgcmV0dXJuIFRBR19OQU1FUy5UUlxuICAgIGNhc2UgRW5oYW5jZWREb2N1bWVudFR5cGVzLlRBQkxFX0NFTEw6XG4gICAgICByZXR1cm4gVEFHX05BTUVTLlREXG4gICAgY2FzZSBFbmhhbmNlZERvY3VtZW50VHlwZXMuQ09OVEFJTkVSOlxuICAgICAgcmV0dXJuIFRBR19OQU1FUy5ESVZcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIFRBR19OQU1FUy5QXG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IGdldENoaWxkcmVuVGFnTmFtZSA9IChwYXJlbnQ6IEVuaGFuY2VkQmxvY2spID0+IHtcbiAgaWYgKHBhcmVudC50eXBlID09PSBDb250ZW50QmxvY2tUeXBlcy5GT1JNKSByZXR1cm4gVEFHX05BTUVTLkRJVlxuICBpZiAocGFyZW50LnR5cGUgPT09IENvbnRlbnRCbG9ja1R5cGVzLkxJU1RfVU5PUkRFUkVEKSByZXR1cm4gVEFHX05BTUVTLkxJXG4gIGlmIChwYXJlbnQudHlwZSA9PT0gQ29udGVudEJsb2NrVHlwZXMuTElTVF9PUkRFUkVEKSByZXR1cm4gVEFHX05BTUVTLkxJXG4gIHJldHVybiB1bmRlZmluZWRcbn1cbiJdLCJuYW1lcyI6WyJnZXRDaGlsZHJlblRhZ05hbWUiLCJnZXRUYWdFbGVtZW50IiwidHlwZSIsIkVuaGFuY2VkRG9jdW1lbnRUeXBlcyIsIlBBR0UiLCJUQUdfTkFNRVMiLCJESVYiLCJQQVJBR1JBUEgiLCJQIiwiQ29udGVudEJsb2NrVHlwZXMiLCJIRUFESU5HIiwiSDMiLCJIRUFERVIiLCJGT09URVIiLCJUQUJMRSIsIkZPUk0iLCJMSVNUX1VOT1JERVJFRCIsIlVMIiwiTElTVF9PUkRFUkVEIiwiT0wiLCJMSVNUX0lURU0iLCJMSSIsIlRBQkxFX1JPVyIsIlRSIiwiVEFCTEVfQ0VMTCIsIlREIiwiQ09OVEFJTkVSIiwicGFyZW50IiwidW5kZWZpbmVkIl0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7SUFxQ2FBLGtCQUFrQjtlQUFsQkE7O0lBakNBQyxhQUFhO2VBQWJBOzs7dUJBSnFCOzJCQUVSO0FBRW5CLE1BQU1BLGdCQUFnQixDQUFDQztJQUM1QixPQUFRQTtRQUNOLEtBQUtDLDRCQUFxQixDQUFDQyxJQUFJO1lBQzdCLE9BQU9DLG9CQUFTLENBQUNDLEdBQUc7UUFDdEIsS0FBS0gsNEJBQXFCLENBQUNJLFNBQVM7WUFDbEMsT0FBT0Ysb0JBQVMsQ0FBQ0csQ0FBQztRQUNwQixLQUFLQyx3QkFBaUIsQ0FBQ0MsT0FBTztZQUM1QixPQUFPTCxvQkFBUyxDQUFDTSxFQUFFO1FBQ3JCLEtBQUtGLHdCQUFpQixDQUFDRyxNQUFNO1lBQzNCLE9BQU9QLG9CQUFTLENBQUNPLE1BQU07UUFDekIsS0FBS0gsd0JBQWlCLENBQUNJLE1BQU07WUFDM0IsT0FBT1Isb0JBQVMsQ0FBQ1EsTUFBTTtRQUN6QixLQUFLSix3QkFBaUIsQ0FBQ0ssS0FBSztZQUMxQixPQUFPVCxvQkFBUyxDQUFDUyxLQUFLO1FBQ3hCLEtBQUtMLHdCQUFpQixDQUFDTSxJQUFJO1lBQ3pCLE9BQU9WLG9CQUFTLENBQUNVLElBQUk7UUFDdkIsS0FBS04sd0JBQWlCLENBQUNPLGNBQWM7WUFDbkMsT0FBT1gsb0JBQVMsQ0FBQ1ksRUFBRTtRQUNyQixLQUFLUix3QkFBaUIsQ0FBQ1MsWUFBWTtZQUNqQyxPQUFPYixvQkFBUyxDQUFDYyxFQUFFO1FBQ3JCLEtBQUtoQiw0QkFBcUIsQ0FBQ2lCLFNBQVM7WUFDbEMsT0FBT2Ysb0JBQVMsQ0FBQ2dCLEVBQUU7UUFDckIsS0FBS2xCLDRCQUFxQixDQUFDbUIsU0FBUztZQUNsQyxPQUFPakIsb0JBQVMsQ0FBQ2tCLEVBQUU7UUFDckIsS0FBS3BCLDRCQUFxQixDQUFDcUIsVUFBVTtZQUNuQyxPQUFPbkIsb0JBQVMsQ0FBQ29CLEVBQUU7UUFDckIsS0FBS3RCLDRCQUFxQixDQUFDdUIsU0FBUztZQUNsQyxPQUFPckIsb0JBQVMsQ0FBQ0MsR0FBRztRQUN0QjtZQUNFLE9BQU9ELG9CQUFTLENBQUNHLENBQUM7SUFDdEI7QUFDRjtBQUVPLE1BQU1SLHFCQUFxQixDQUFDMkI7SUFDakMsSUFBSUEsT0FBT3pCLElBQUksS0FBS08sd0JBQWlCLENBQUNNLElBQUksRUFBRSxPQUFPVixvQkFBUyxDQUFDQyxHQUFHO0lBQ2hFLElBQUlxQixPQUFPekIsSUFBSSxLQUFLTyx3QkFBaUIsQ0FBQ08sY0FBYyxFQUFFLE9BQU9YLG9CQUFTLENBQUNnQixFQUFFO0lBQ3pFLElBQUlNLE9BQU96QixJQUFJLEtBQUtPLHdCQUFpQixDQUFDUyxZQUFZLEVBQUUsT0FBT2Isb0JBQVMsQ0FBQ2dCLEVBQUU7SUFDdkUsT0FBT087QUFDVCJ9