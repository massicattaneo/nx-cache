{"version":3,"sources":["../../src/utils/js_utils.ts"],"sourcesContent":["// cheap lodash replacements\n\nexport function memoize<T>(fn: () => T): () => T {\n\tlet result: T | null = null\n\tconst memoized = () => {\n\t\tif (result == null) {\n\t\t\tresult = fn()\n\t\t}\n\t\treturn result\n\t}\n\treturn memoized\n}\n\n/**\n * drop-in replacement for _.without\n */\nexport function without<T>(items: T[], item: T) {\n\treturn items.filter((i) => i !== item)\n}\n\nexport function union<T extends string | number>(itemsA: T[], itemsB: T[]) {\n\tconst set = new Set<T>()\n\tconst insertItem = (item: T) => set.add(item)\n\titemsA.forEach(insertItem)\n\titemsB.forEach(insertItem)\n\n\tconst result: T[] = []\n\tset.forEach((key) => result.push(key))\n\treturn result\n}\n"],"names":["memoize","union","without","fn","result","memoized","items","item","filter","i","itemsA","itemsB","set","Set","insertItem","add","forEach","key","push"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA,4BAA4B;;;;;;;;;;;;IAEZA,OAAO;eAAPA;;IAkBAC,KAAK;eAALA;;IAJAC,OAAO;eAAPA;;;AAdT,SAASF,QAAWG,EAAW;IACrC,IAAIC,SAAmB;IACvB,MAAMC,WAAW;QAChB,IAAID,UAAU,MAAM;YACnBA,SAASD;;QAEV,OAAOC;;IAER,OAAOC;;AAMD,SAASH,QAAWI,KAAU,EAAEC,IAAO;IAC7C,OAAOD,MAAME,MAAM,CAAC,CAACC,IAAMA,MAAMF;;AAG3B,SAASN,MAAiCS,MAAW,EAAEC,MAAW;IACxE,MAAMC,MAAM,IAAIC;IAChB,MAAMC,aAAa,CAACP,OAAYK,IAAIG,GAAG,CAACR;IACxCG,OAAOM,OAAO,CAACF;IACfH,OAAOK,OAAO,CAACF;IAEf,MAAMV,SAAc,EAAE;IACtBQ,IAAII,OAAO,CAAC,CAACC,MAAQb,OAAOc,IAAI,CAACD;IACjC,OAAOb"}