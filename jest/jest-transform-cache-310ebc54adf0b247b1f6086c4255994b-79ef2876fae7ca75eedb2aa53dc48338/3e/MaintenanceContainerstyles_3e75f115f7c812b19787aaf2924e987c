973c4d1d7e00eaef404eba896ef56f25
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "StyledMaintenanceContainer", {
    enumerable: true,
    get: function() {
        return StyledMaintenanceContainer;
    }
});
const _theme = require("@rp/react/theme");
const _hooks = require("@rp/react/web/common/hooks");
const _core = require("@rp/react/web/mui/core");
const StyledMaintenanceContainer = (0, _theme.styled)(_core.Box)(({ theme })=>{
    const { isMobile } = (0, _hooks.useDeviceInfo)();
    const mobilePadding = isMobile ? 16 : 0;
    return {
        // paddingTop: "5vh",
        paddingLeft: mobilePadding,
        paddingRight: mobilePadding,
        display: "flex",
        flexDirection: "column",
        alignItems: "center",
        justifyContent: "center",
        width: "100%",
        maxWidth: 450,
        margin: theme.spacing(1),
        "& form": {
            width: "100%",
            display: "flex",
            flexDirection: "column",
            marginBottom: theme.spacing(2)
        },
        "& .MuiTextField-root": {
            width: isMobile ? "0px" : 400
        },
        "& input": {
            padding: "10px 12px",
            "&::placeholder": {
                color: theme.palette.text.primary
            }
        },
        "& label": {
            marginTop: theme.spacing(3),
            marginBottom: theme.spacing(0.5)
        },
        "& label, & .Mui-focused fieldset": {
            borderColor: `${theme.palette.text.primary} !important`,
            color: `${theme.palette.text.primary} !important`
        },
        "& a": {
            color: theme.palette.primary.main,
            textDecoration: "none",
            marginLeft: "4px",
            cursor: "pointer"
        },
        "& a:hover": {
            textDecoration: "underline"
        }
    };
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9jb21wb3NpdGUtY29tcG9uZW50cy9zcmMvTWFpbnRlbmFuY2UvTWFpbnRlbmFuY2VDb250YWluZXIuc3R5bGVzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHN0eWxlZCB9IGZyb20gXCJAcnAvcmVhY3QvdGhlbWVcIlxuaW1wb3J0IHsgdXNlRGV2aWNlSW5mbyB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL2NvbW1vbi9ob29rc1wiXG5pbXBvcnQgeyBCb3ggfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9tdWkvY29yZVwiXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRNYWludGVuYW5jZUNvbnRhaW5lciA9IHN0eWxlZChCb3gpKCh7IHRoZW1lIH0pID0+IHtcbiAgY29uc3QgeyBpc01vYmlsZSB9ID0gdXNlRGV2aWNlSW5mbygpXG4gIGNvbnN0IG1vYmlsZVBhZGRpbmcgPSBpc01vYmlsZSA/IDE2IDogMFxuICByZXR1cm4ge1xuICAgIC8vIHBhZGRpbmdUb3A6IFwiNXZoXCIsXG4gICAgcGFkZGluZ0xlZnQ6IG1vYmlsZVBhZGRpbmcsXG4gICAgcGFkZGluZ1JpZ2h0OiBtb2JpbGVQYWRkaW5nLFxuICAgIGRpc3BsYXk6IFwiZmxleFwiLFxuICAgIGZsZXhEaXJlY3Rpb246IFwiY29sdW1uXCIsXG4gICAgYWxpZ25JdGVtczogXCJjZW50ZXJcIixcbiAgICBqdXN0aWZ5Q29udGVudDogXCJjZW50ZXJcIixcbiAgICB3aWR0aDogXCIxMDAlXCIsXG4gICAgbWF4V2lkdGg6IDQ1MCxcbiAgICBtYXJnaW46IHRoZW1lLnNwYWNpbmcoMSksXG4gICAgXCImIGZvcm1cIjoge1xuICAgICAgd2lkdGg6IFwiMTAwJVwiLFxuICAgICAgZGlzcGxheTogXCJmbGV4XCIsXG4gICAgICBmbGV4RGlyZWN0aW9uOiBcImNvbHVtblwiLFxuICAgICAgbWFyZ2luQm90dG9tOiB0aGVtZS5zcGFjaW5nKDIpLFxuICAgIH0sXG4gICAgXCImIC5NdWlUZXh0RmllbGQtcm9vdFwiOiB7XG4gICAgICB3aWR0aDogaXNNb2JpbGUgPyBcIjBweFwiIDogNDAwLFxuICAgIH0sXG4gICAgXCImIGlucHV0XCI6IHtcbiAgICAgIHBhZGRpbmc6IFwiMTBweCAxMnB4XCIsXG4gICAgICBcIiY6OnBsYWNlaG9sZGVyXCI6IHtcbiAgICAgICAgY29sb3I6IHRoZW1lLnBhbGV0dGUudGV4dC5wcmltYXJ5LFxuICAgICAgfSxcbiAgICB9LFxuICAgIFwiJiBsYWJlbFwiOiB7XG4gICAgICBtYXJnaW5Ub3A6IHRoZW1lLnNwYWNpbmcoMyksXG4gICAgICBtYXJnaW5Cb3R0b206IHRoZW1lLnNwYWNpbmcoMC41KSxcbiAgICB9LFxuICAgIFwiJiBsYWJlbCwgJiAuTXVpLWZvY3VzZWQgZmllbGRzZXRcIjoge1xuICAgICAgYm9yZGVyQ29sb3I6IGAke3RoZW1lLnBhbGV0dGUudGV4dC5wcmltYXJ5fSAhaW1wb3J0YW50YCxcbiAgICAgIGNvbG9yOiBgJHt0aGVtZS5wYWxldHRlLnRleHQucHJpbWFyeX0gIWltcG9ydGFudGAsXG4gICAgfSxcbiAgICBcIiYgYVwiOiB7XG4gICAgICBjb2xvcjogdGhlbWUucGFsZXR0ZS5wcmltYXJ5Lm1haW4sXG4gICAgICB0ZXh0RGVjb3JhdGlvbjogXCJub25lXCIsXG4gICAgICBtYXJnaW5MZWZ0OiBcIjRweFwiLFxuICAgICAgY3Vyc29yOiBcInBvaW50ZXJcIixcbiAgICB9LFxuICAgIFwiJiBhOmhvdmVyXCI6IHtcbiAgICAgIHRleHREZWNvcmF0aW9uOiBcInVuZGVybGluZVwiLFxuICAgIH0sXG4gIH1cbn0pXG4iXSwibmFtZXMiOlsiU3R5bGVkTWFpbnRlbmFuY2VDb250YWluZXIiLCJzdHlsZWQiLCJCb3giLCJ0aGVtZSIsImlzTW9iaWxlIiwidXNlRGV2aWNlSW5mbyIsIm1vYmlsZVBhZGRpbmciLCJwYWRkaW5nTGVmdCIsInBhZGRpbmdSaWdodCIsImRpc3BsYXkiLCJmbGV4RGlyZWN0aW9uIiwiYWxpZ25JdGVtcyIsImp1c3RpZnlDb250ZW50Iiwid2lkdGgiLCJtYXhXaWR0aCIsIm1hcmdpbiIsInNwYWNpbmciLCJtYXJnaW5Cb3R0b20iLCJwYWRkaW5nIiwiY29sb3IiLCJwYWxldHRlIiwidGV4dCIsInByaW1hcnkiLCJtYXJnaW5Ub3AiLCJib3JkZXJDb2xvciIsIm1haW4iLCJ0ZXh0RGVjb3JhdGlvbiIsIm1hcmdpbkxlZnQiLCJjdXJzb3IiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQUlhQTs7O2VBQUFBOzs7dUJBSlU7dUJBQ087c0JBQ1Y7QUFFYixNQUFNQSw2QkFBNkJDLElBQUFBLGFBQU0sRUFBQ0MsU0FBRyxFQUFFLENBQUMsRUFBRUMsS0FBSyxFQUFFO0lBQzlELE1BQU0sRUFBRUMsUUFBUSxFQUFFLEdBQUdDLElBQUFBLG9CQUFhO0lBQ2xDLE1BQU1DLGdCQUFnQkYsV0FBVyxLQUFLO0lBQ3RDLE9BQU87UUFDTCxxQkFBcUI7UUFDckJHLGFBQWFEO1FBQ2JFLGNBQWNGO1FBQ2RHLFNBQVM7UUFDVEMsZUFBZTtRQUNmQyxZQUFZO1FBQ1pDLGdCQUFnQjtRQUNoQkMsT0FBTztRQUNQQyxVQUFVO1FBQ1ZDLFFBQVFaLE1BQU1hLE9BQU8sQ0FBQztRQUN0QixVQUFVO1lBQ1JILE9BQU87WUFDUEosU0FBUztZQUNUQyxlQUFlO1lBQ2ZPLGNBQWNkLE1BQU1hLE9BQU8sQ0FBQztRQUM5QjtRQUNBLHdCQUF3QjtZQUN0QkgsT0FBT1QsV0FBVyxRQUFRO1FBQzVCO1FBQ0EsV0FBVztZQUNUYyxTQUFTO1lBQ1Qsa0JBQWtCO2dCQUNoQkMsT0FBT2hCLE1BQU1pQixPQUFPLENBQUNDLElBQUksQ0FBQ0MsT0FBTztZQUNuQztRQUNGO1FBQ0EsV0FBVztZQUNUQyxXQUFXcEIsTUFBTWEsT0FBTyxDQUFDO1lBQ3pCQyxjQUFjZCxNQUFNYSxPQUFPLENBQUM7UUFDOUI7UUFDQSxvQ0FBb0M7WUFDbENRLGFBQWEsQ0FBQyxFQUFFckIsTUFBTWlCLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDQyxPQUFPLENBQUMsV0FBVyxDQUFDO1lBQ3ZESCxPQUFPLENBQUMsRUFBRWhCLE1BQU1pQixPQUFPLENBQUNDLElBQUksQ0FBQ0MsT0FBTyxDQUFDLFdBQVcsQ0FBQztRQUNuRDtRQUNBLE9BQU87WUFDTEgsT0FBT2hCLE1BQU1pQixPQUFPLENBQUNFLE9BQU8sQ0FBQ0csSUFBSTtZQUNqQ0MsZ0JBQWdCO1lBQ2hCQyxZQUFZO1lBQ1pDLFFBQVE7UUFDVjtRQUNBLGFBQWE7WUFDWEYsZ0JBQWdCO1FBQ2xCO0lBQ0Y7QUFDRiJ9