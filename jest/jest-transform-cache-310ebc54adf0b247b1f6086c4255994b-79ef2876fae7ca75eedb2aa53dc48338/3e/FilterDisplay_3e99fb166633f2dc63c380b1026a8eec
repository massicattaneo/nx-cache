32a7d04fe2677948b059122f4a8140fa
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "FilterDisplay", {
    enumerable: true,
    get: function() {
        return FilterDisplay;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _compositecomponents = require("@rp/react/web/common/composite-components");
const _hooks = require("@rp/react/web/common/hooks");
const _FilterInput = require("../FilterInput");
const MAX_INITIAL_FILTERS = 5;
const MAX_TOTAL_FILTERS = 15;
const FilterDisplay = ({ filters, disableCheckbox, disableWatchlist, onChange, onClick, showMore = false, toggleShowMore, onAddToWatchlist, onExclude })=>{
    const { isMobile } = (0, _hooks.useDeviceInfo)();
    const showMoreItems = filters.slice(MAX_INITIAL_FILTERS, MAX_TOTAL_FILTERS);
    const FilterInputComponent = (0, _react.useMemo)(()=>isMobile ? _FilterInput.FilterInputMobile : _FilterInput.FilterInput, [
        isMobile
    ]);
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
        children: [
            filters.slice(0, MAX_INITIAL_FILTERS).map((filter)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(FilterInputComponent, {
                    disableCheckbox: disableCheckbox,
                    filterItem: filter,
                    onChange: onChange,
                    onClick: onClick,
                    onAddToWatchlist: onAddToWatchlist,
                    onExclude: onExclude,
                    disableWatchlist: disableWatchlist
                }, `${filter.key}-selector`)),
            showMore ? showMoreItems.map((filter)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(FilterInputComponent, {
                    disableCheckbox: disableCheckbox,
                    filterItem: filter,
                    onChange: onChange,
                    onClick: onClick,
                    onAddToWatchlist: onAddToWatchlist,
                    onExclude: onExclude,
                    disableWatchlist: disableWatchlist
                }, `${filter.key}-selector`)) : null,
            filters.length > MAX_INITIAL_FILTERS ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.ShowMoreButton, {
                showMore: showMore,
                onClick: toggleShowMore,
                qty: showMoreItems.length
            }) : null
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9kaXNjb3Zlcnktc2lkZWJhci9zcmMvRmlsdGVyRGlzcGxheS9GaWx0ZXJEaXNwbGF5LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VNZW1vIH0gZnJvbSBcInJlYWN0XCJcbmltcG9ydCB7IENxc0l0ZW0gfSBmcm9tIFwiQHJwL2NvbW1vbi9hcGktdHlwZXNcIlxuaW1wb3J0IHsgV2F0Y2hsaXN0IH0gZnJvbSBcIkBycC9jb21tb24vYXBpLXR5cGVzXCJcbmltcG9ydCB7IFNob3dNb3JlQnV0dG9uIH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvY29tbW9uL2NvbXBvc2l0ZS1jb21wb25lbnRzXCJcbmltcG9ydCB7IHVzZURldmljZUluZm8gfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9jb21tb24vaG9va3NcIlxuaW1wb3J0IHsgRmlsdGVySW5wdXQsIEZpbHRlcklucHV0TW9iaWxlIH0gZnJvbSBcIi4uL0ZpbHRlcklucHV0XCJcblxuY29uc3QgTUFYX0lOSVRJQUxfRklMVEVSUyA9IDVcbmNvbnN0IE1BWF9UT1RBTF9GSUxURVJTID0gMTVcblxudHlwZSBGaWx0ZXJEaXNwbGF5UHJvcHMgPSB7XG4gIGZpbHRlcnM6IEFycmF5PENxc0l0ZW0+XG4gIGRpc2FibGVDaGVja2JveD86IGJvb2xlYW5cbiAgZGlzYWJsZVdhdGNobGlzdD86IGJvb2xlYW5cbiAgb25DaGFuZ2U/OiAoaXRlbTogQ3FzSXRlbSkgPT4gdm9pZFxuICBvbkNsaWNrPzogKGl0ZW06IENxc0l0ZW0pID0+IHZvaWRcbiAgb25FeGNsdWRlPzogKGl0ZW06IENxc0l0ZW0pID0+IHZvaWRcbiAgc2hvd01vcmU/OiBib29sZWFuXG4gIHRvZ2dsZVNob3dNb3JlOiAoKSA9PiB2b2lkXG4gIG9uQWRkVG9XYXRjaGxpc3Q/OiAod2F0Y2hsaXN0OiBXYXRjaGxpc3QpID0+IHZvaWRcbn1cblxuY29uc3QgRmlsdGVyRGlzcGxheSA9ICh7XG4gIGZpbHRlcnMsXG4gIGRpc2FibGVDaGVja2JveCxcbiAgZGlzYWJsZVdhdGNobGlzdCxcbiAgb25DaGFuZ2UsXG4gIG9uQ2xpY2ssXG4gIHNob3dNb3JlID0gZmFsc2UsXG4gIHRvZ2dsZVNob3dNb3JlLFxuICBvbkFkZFRvV2F0Y2hsaXN0LFxuICBvbkV4Y2x1ZGUsXG59OiBGaWx0ZXJEaXNwbGF5UHJvcHMpID0+IHtcbiAgY29uc3QgeyBpc01vYmlsZSB9ID0gdXNlRGV2aWNlSW5mbygpXG4gIGNvbnN0IHNob3dNb3JlSXRlbXMgPSBmaWx0ZXJzLnNsaWNlKE1BWF9JTklUSUFMX0ZJTFRFUlMsIE1BWF9UT1RBTF9GSUxURVJTKVxuXG4gIGNvbnN0IEZpbHRlcklucHV0Q29tcG9uZW50ID0gdXNlTWVtbyhcbiAgICAoKSA9PiAoaXNNb2JpbGUgPyBGaWx0ZXJJbnB1dE1vYmlsZSA6IEZpbHRlcklucHV0KSxcbiAgICBbaXNNb2JpbGVdLFxuICApXG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAge2ZpbHRlcnMuc2xpY2UoMCwgTUFYX0lOSVRJQUxfRklMVEVSUykubWFwKGZpbHRlciA9PiAoXG4gICAgICAgIDxGaWx0ZXJJbnB1dENvbXBvbmVudFxuICAgICAgICAgIGRpc2FibGVDaGVja2JveD17ZGlzYWJsZUNoZWNrYm94fVxuICAgICAgICAgIGtleT17YCR7ZmlsdGVyLmtleX0tc2VsZWN0b3JgfVxuICAgICAgICAgIGZpbHRlckl0ZW09e2ZpbHRlcn1cbiAgICAgICAgICBvbkNoYW5nZT17b25DaGFuZ2V9XG4gICAgICAgICAgb25DbGljaz17b25DbGlja31cbiAgICAgICAgICBvbkFkZFRvV2F0Y2hsaXN0PXtvbkFkZFRvV2F0Y2hsaXN0fVxuICAgICAgICAgIG9uRXhjbHVkZT17b25FeGNsdWRlfVxuICAgICAgICAgIGRpc2FibGVXYXRjaGxpc3Q9e2Rpc2FibGVXYXRjaGxpc3R9XG4gICAgICAgIC8+XG4gICAgICApKX1cblxuICAgICAge3Nob3dNb3JlXG4gICAgICAgID8gc2hvd01vcmVJdGVtcy5tYXAoZmlsdGVyID0+IChcbiAgICAgICAgICAgIDxGaWx0ZXJJbnB1dENvbXBvbmVudFxuICAgICAgICAgICAgICBkaXNhYmxlQ2hlY2tib3g9e2Rpc2FibGVDaGVja2JveH1cbiAgICAgICAgICAgICAga2V5PXtgJHtmaWx0ZXIua2V5fS1zZWxlY3RvcmB9XG4gICAgICAgICAgICAgIGZpbHRlckl0ZW09e2ZpbHRlcn1cbiAgICAgICAgICAgICAgb25DaGFuZ2U9e29uQ2hhbmdlfVxuICAgICAgICAgICAgICBvbkNsaWNrPXtvbkNsaWNrfVxuICAgICAgICAgICAgICBvbkFkZFRvV2F0Y2hsaXN0PXtvbkFkZFRvV2F0Y2hsaXN0fVxuICAgICAgICAgICAgICBvbkV4Y2x1ZGU9e29uRXhjbHVkZX1cbiAgICAgICAgICAgICAgZGlzYWJsZVdhdGNobGlzdD17ZGlzYWJsZVdhdGNobGlzdH1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgKSlcbiAgICAgICAgOiBudWxsfVxuICAgICAge2ZpbHRlcnMubGVuZ3RoID4gTUFYX0lOSVRJQUxfRklMVEVSUyA/IChcbiAgICAgICAgPFNob3dNb3JlQnV0dG9uIHNob3dNb3JlPXtzaG93TW9yZX0gb25DbGljaz17dG9nZ2xlU2hvd01vcmV9IHF0eT17c2hvd01vcmVJdGVtcy5sZW5ndGh9IC8+XG4gICAgICApIDogbnVsbH1cbiAgICA8Lz5cbiAgKVxufVxuXG5leHBvcnQgeyBGaWx0ZXJEaXNwbGF5IH1cbiJdLCJuYW1lcyI6WyJGaWx0ZXJEaXNwbGF5IiwiTUFYX0lOSVRJQUxfRklMVEVSUyIsIk1BWF9UT1RBTF9GSUxURVJTIiwiZmlsdGVycyIsImRpc2FibGVDaGVja2JveCIsImRpc2FibGVXYXRjaGxpc3QiLCJvbkNoYW5nZSIsIm9uQ2xpY2siLCJzaG93TW9yZSIsInRvZ2dsZVNob3dNb3JlIiwib25BZGRUb1dhdGNobGlzdCIsIm9uRXhjbHVkZSIsImlzTW9iaWxlIiwidXNlRGV2aWNlSW5mbyIsInNob3dNb3JlSXRlbXMiLCJzbGljZSIsIkZpbHRlcklucHV0Q29tcG9uZW50IiwidXNlTWVtbyIsIkZpbHRlcklucHV0TW9iaWxlIiwiRmlsdGVySW5wdXQiLCJtYXAiLCJmaWx0ZXIiLCJmaWx0ZXJJdGVtIiwia2V5IiwibGVuZ3RoIiwiU2hvd01vcmVCdXR0b24iLCJxdHkiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBNkVTQTs7O2VBQUFBOzs7O3VCQTdFZTtxQ0FHTzt1QkFDRDs2QkFDaUI7QUFFL0MsTUFBTUMsc0JBQXNCO0FBQzVCLE1BQU1DLG9CQUFvQjtBQWMxQixNQUFNRixnQkFBZ0IsQ0FBQyxFQUNyQkcsT0FBTyxFQUNQQyxlQUFlLEVBQ2ZDLGdCQUFnQixFQUNoQkMsUUFBUSxFQUNSQyxPQUFPLEVBQ1BDLFdBQVcsS0FBSyxFQUNoQkMsY0FBYyxFQUNkQyxnQkFBZ0IsRUFDaEJDLFNBQVMsRUFDVTtJQUNuQixNQUFNLEVBQUVDLFFBQVEsRUFBRSxHQUFHQyxJQUFBQSxvQkFBYTtJQUNsQyxNQUFNQyxnQkFBZ0JYLFFBQVFZLEtBQUssQ0FBQ2QscUJBQXFCQztJQUV6RCxNQUFNYyx1QkFBdUJDLElBQUFBLGNBQU8sRUFDbEMsSUFBT0wsV0FBV00sOEJBQWlCLEdBQUdDLHdCQUFXLEVBQ2pEO1FBQUNQO0tBQVM7SUFHWixxQkFDRTs7WUFDR1QsUUFBUVksS0FBSyxDQUFDLEdBQUdkLHFCQUFxQm1CLEdBQUcsQ0FBQ0MsQ0FBQUEsdUJBQ3pDLHFCQUFDTDtvQkFDQ1osaUJBQWlCQTtvQkFFakJrQixZQUFZRDtvQkFDWmYsVUFBVUE7b0JBQ1ZDLFNBQVNBO29CQUNURyxrQkFBa0JBO29CQUNsQkMsV0FBV0E7b0JBQ1hOLGtCQUFrQkE7bUJBTmIsQ0FBQyxFQUFFZ0IsT0FBT0UsR0FBRyxDQUFDLFNBQVMsQ0FBQztZQVVoQ2YsV0FDR00sY0FBY00sR0FBRyxDQUFDQyxDQUFBQSx1QkFDaEIscUJBQUNMO29CQUNDWixpQkFBaUJBO29CQUVqQmtCLFlBQVlEO29CQUNaZixVQUFVQTtvQkFDVkMsU0FBU0E7b0JBQ1RHLGtCQUFrQkE7b0JBQ2xCQyxXQUFXQTtvQkFDWE4sa0JBQWtCQTttQkFOYixDQUFDLEVBQUVnQixPQUFPRSxHQUFHLENBQUMsU0FBUyxDQUFDLEtBU2pDO1lBQ0hwQixRQUFRcUIsTUFBTSxHQUFHdkIsb0NBQ2hCLHFCQUFDd0IsbUNBQWM7Z0JBQUNqQixVQUFVQTtnQkFBVUQsU0FBU0U7Z0JBQWdCaUIsS0FBS1osY0FBY1UsTUFBTTtpQkFDcEY7OztBQUdWIn0=