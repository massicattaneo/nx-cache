d460e3ff441fc43578e9f52f70e7841d
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    SORT_TYPES: function() {
        return SORT_TYPES;
    },
    StoryCardsHeader: function() {
        return StoryCardsHeader;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _apitypes = require("@rp/common/api-types");
const _utils = require("@rp/common/utils");
const _compositecomponents = require("@rp/react/web/common/composite-components");
const _hooks = require("@rp/react/web/common/hooks");
const _providers = require("@rp/react/web/common/providers");
const _ScopeSelector = require("../ScopeSelector");
const _ResultsCount = require("./ResultsCount");
const _StoryCardsHeaderstyles = require("./StoryCardsHeader.styles");
const _StorySorter = /*#__PURE__*/ _interop_require_default(require("./StorySorter"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const SORT_TYPES = [
    _apitypes.CqsQuerySortEnum.Relevance,
    _apitypes.CqsQuerySortEnum.Date
];
const StoryCardsHeader = ()=>{
    const { isMobile } = (0, _hooks.useDeviceInfo)();
    // DatePicker
    const { savedQuery: { id, query: { sort = "", date } }, actions: { setSort, setDate } } = (0, _providers.useQueryContext)();
    const adaptedDateOptions = (0, _react.useMemo)(()=>Object.fromEntries(Object.entries(_utils.DATE_OPTIONS).map(([key, option])=>[
                key,
                {
                    label: option.label,
                    start: option.start(),
                    end: option.end()
                }
            ])), []);
    const handleDateSubmit = (date)=>{
        setDate(date);
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_StoryCardsHeaderstyles.StoryCardsHeaderRoot, {
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_ScopeSelector.ScopeSelector, {}),
            isMobile ? null : /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_ResultsCount.ResultsCount, {}),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_StoryCardsHeaderstyles.SortersContainer, {
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_StorySorter.default, {
                                queryId: id,
                                sorterOptions: SORT_TYPES,
                                sort: sort,
                                setSort: setSort
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.Datepicker, {
                                date: date ? (0, _compositecomponents.formatInitialDates)(date[0], adaptedDateOptions) : null,
                                defaultOption: "any_time",
                                options: adaptedDateOptions,
                                onSubmit: handleDateSubmit
                            })
                        ]
                    })
                ]
            })
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9yZXN1bHRzLXN0b3J5LWNhcmQvc3JjL1N0b3J5Q2FyZHNIZWFkZXIvU3RvcnlDYXJkc0hlYWRlci50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlTWVtbyB9IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgeyBDcXNRdWVyeVNvcnRFbnVtIH0gZnJvbSBcIkBycC9jb21tb24vYXBpLXR5cGVzXCJcbmltcG9ydCB7IFJwcWxEYXRlRmlsdGVyIH0gZnJvbSBcIkBycC9jb21tb24vYXBpLXR5cGVzXCJcbmltcG9ydCB7IERBVEVfT1BUSU9OUyB9IGZyb20gXCJAcnAvY29tbW9uL3V0aWxzXCJcbmltcG9ydCB7IERhdGVwaWNrZXIsIGZvcm1hdEluaXRpYWxEYXRlcyB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL2NvbW1vbi9jb21wb3NpdGUtY29tcG9uZW50c1wiXG4vLyBIb29rc1xuaW1wb3J0IHsgdXNlRGV2aWNlSW5mbyB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL2NvbW1vbi9ob29rc1wiXG4vLyBDb250ZXh0XG5pbXBvcnQgeyB1c2VRdWVyeUNvbnRleHQgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9jb21tb24vcHJvdmlkZXJzXCJcbi8vIENvbXBvbmVudHNcbmltcG9ydCB7IFNjb3BlU2VsZWN0b3IgfSBmcm9tIFwiLi4vU2NvcGVTZWxlY3RvclwiXG5pbXBvcnQgeyBSZXN1bHRzQ291bnQgfSBmcm9tIFwiLi9SZXN1bHRzQ291bnRcIlxuLy8gU3R5bGVzXG5pbXBvcnQgeyBTb3J0ZXJzQ29udGFpbmVyLCBTdG9yeUNhcmRzSGVhZGVyUm9vdCB9IGZyb20gXCIuL1N0b3J5Q2FyZHNIZWFkZXIuc3R5bGVzXCJcbmltcG9ydCBTdG9yeVNvcnRlciBmcm9tIFwiLi9TdG9yeVNvcnRlclwiXG5cbmV4cG9ydCBjb25zdCBTT1JUX1RZUEVTID0gW0Nxc1F1ZXJ5U29ydEVudW0uUmVsZXZhbmNlLCBDcXNRdWVyeVNvcnRFbnVtLkRhdGVdXG5cbmNvbnN0IFN0b3J5Q2FyZHNIZWFkZXIgPSAoKSA9PiB7XG4gIGNvbnN0IHsgaXNNb2JpbGUgfSA9IHVzZURldmljZUluZm8oKVxuXG4gIC8vIERhdGVQaWNrZXJcbiAgY29uc3Qge1xuICAgIHNhdmVkUXVlcnk6IHtcbiAgICAgIGlkLFxuICAgICAgcXVlcnk6IHsgc29ydCA9IFwiXCIsIGRhdGUgfSxcbiAgICB9LFxuICAgIGFjdGlvbnM6IHsgc2V0U29ydCwgc2V0RGF0ZSB9LFxuICB9ID0gdXNlUXVlcnlDb250ZXh0KClcblxuICBjb25zdCBhZGFwdGVkRGF0ZU9wdGlvbnMgPSB1c2VNZW1vKFxuICAgICgpID0+XG4gICAgICBPYmplY3QuZnJvbUVudHJpZXMoXG4gICAgICAgIE9iamVjdC5lbnRyaWVzKERBVEVfT1BUSU9OUykubWFwKChba2V5LCBvcHRpb25dKSA9PiBbXG4gICAgICAgICAga2V5LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIGxhYmVsOiBvcHRpb24ubGFiZWwsXG4gICAgICAgICAgICBzdGFydDogb3B0aW9uLnN0YXJ0KCksXG4gICAgICAgICAgICBlbmQ6IG9wdGlvbi5lbmQoKSxcbiAgICAgICAgICB9LFxuICAgICAgICBdKSxcbiAgICAgICksXG4gICAgW10sXG4gIClcblxuICBjb25zdCBoYW5kbGVEYXRlU3VibWl0ID0gKGRhdGU6IFJwcWxEYXRlRmlsdGVyKSA9PiB7XG4gICAgc2V0RGF0ZShkYXRlKVxuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8U3RvcnlDYXJkc0hlYWRlclJvb3Q+XG4gICAgICA8U2NvcGVTZWxlY3RvciAvPlxuXG4gICAgICB7aXNNb2JpbGUgPyBudWxsIDogKFxuICAgICAgICA8ZGl2PlxuICAgICAgICAgIDxSZXN1bHRzQ291bnQgLz5cbiAgICAgICAgICA8U29ydGVyc0NvbnRhaW5lcj5cbiAgICAgICAgICAgIDxTdG9yeVNvcnRlciBxdWVyeUlkPXtpZH0gc29ydGVyT3B0aW9ucz17U09SVF9UWVBFU30gc29ydD17c29ydH0gc2V0U29ydD17c2V0U29ydH0gLz5cbiAgICAgICAgICAgIDxEYXRlcGlja2VyXG4gICAgICAgICAgICAgIGRhdGU9e2RhdGUgPyBmb3JtYXRJbml0aWFsRGF0ZXMoZGF0ZVswXSwgYWRhcHRlZERhdGVPcHRpb25zKSA6IG51bGx9XG4gICAgICAgICAgICAgIGRlZmF1bHRPcHRpb249e1wiYW55X3RpbWVcIn1cbiAgICAgICAgICAgICAgb3B0aW9ucz17YWRhcHRlZERhdGVPcHRpb25zfVxuICAgICAgICAgICAgICBvblN1Ym1pdD17aGFuZGxlRGF0ZVN1Ym1pdH1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9Tb3J0ZXJzQ29udGFpbmVyPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICl9XG4gICAgPC9TdG9yeUNhcmRzSGVhZGVyUm9vdD5cbiAgKVxufVxuXG5leHBvcnQgeyBTdG9yeUNhcmRzSGVhZGVyIH1cbiJdLCJuYW1lcyI6WyJTT1JUX1RZUEVTIiwiU3RvcnlDYXJkc0hlYWRlciIsIkNxc1F1ZXJ5U29ydEVudW0iLCJSZWxldmFuY2UiLCJEYXRlIiwiaXNNb2JpbGUiLCJ1c2VEZXZpY2VJbmZvIiwic2F2ZWRRdWVyeSIsImlkIiwicXVlcnkiLCJzb3J0IiwiZGF0ZSIsImFjdGlvbnMiLCJzZXRTb3J0Iiwic2V0RGF0ZSIsInVzZVF1ZXJ5Q29udGV4dCIsImFkYXB0ZWREYXRlT3B0aW9ucyIsInVzZU1lbW8iLCJPYmplY3QiLCJmcm9tRW50cmllcyIsImVudHJpZXMiLCJEQVRFX09QVElPTlMiLCJtYXAiLCJrZXkiLCJvcHRpb24iLCJsYWJlbCIsInN0YXJ0IiwiZW5kIiwiaGFuZGxlRGF0ZVN1Ym1pdCIsIlN0b3J5Q2FyZHNIZWFkZXJSb290IiwiU2NvcGVTZWxlY3RvciIsImRpdiIsIlJlc3VsdHNDb3VudCIsIlNvcnRlcnNDb250YWluZXIiLCJTdG9yeVNvcnRlciIsInF1ZXJ5SWQiLCJzb3J0ZXJPcHRpb25zIiwiRGF0ZXBpY2tlciIsImZvcm1hdEluaXRpYWxEYXRlcyIsImRlZmF1bHRPcHRpb24iLCJvcHRpb25zIiwib25TdWJtaXQiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7SUFnQmFBLFVBQVU7ZUFBVkE7O0lBdURKQyxnQkFBZ0I7ZUFBaEJBOzs7O3VCQXZFZTswQkFDUzt1QkFFSjtxQ0FDa0I7dUJBRWpCOzJCQUVFOytCQUVGOzhCQUNEO3dDQUUwQjtvRUFDL0I7Ozs7OztBQUVqQixNQUFNRCxhQUFhO0lBQUNFLDBCQUFnQixDQUFDQyxTQUFTO0lBQUVELDBCQUFnQixDQUFDRSxJQUFJO0NBQUM7QUFFN0UsTUFBTUgsbUJBQW1CO0lBQ3ZCLE1BQU0sRUFBRUksUUFBUSxFQUFFLEdBQUdDLElBQUFBLG9CQUFhO0lBRWxDLGFBQWE7SUFDYixNQUFNLEVBQ0pDLFlBQVksRUFDVkMsRUFBRSxFQUNGQyxPQUFPLEVBQUVDLE9BQU8sRUFBRSxFQUFFQyxJQUFJLEVBQUUsRUFDM0IsRUFDREMsU0FBUyxFQUFFQyxPQUFPLEVBQUVDLE9BQU8sRUFBRSxFQUM5QixHQUFHQyxJQUFBQSwwQkFBZTtJQUVuQixNQUFNQyxxQkFBcUJDLElBQUFBLGNBQU8sRUFDaEMsSUFDRUMsT0FBT0MsV0FBVyxDQUNoQkQsT0FBT0UsT0FBTyxDQUFDQyxtQkFBWSxFQUFFQyxHQUFHLENBQUMsQ0FBQyxDQUFDQyxLQUFLQyxPQUFPLEdBQUs7Z0JBQ2xERDtnQkFDQTtvQkFDRUUsT0FBT0QsT0FBT0MsS0FBSztvQkFDbkJDLE9BQU9GLE9BQU9FLEtBQUs7b0JBQ25CQyxLQUFLSCxPQUFPRyxHQUFHO2dCQUNqQjthQUNELElBRUwsRUFBRTtJQUdKLE1BQU1DLG1CQUFtQixDQUFDakI7UUFDeEJHLFFBQVFIO0lBQ1Y7SUFFQSxxQkFDRSxzQkFBQ2tCLDRDQUFvQjs7MEJBQ25CLHFCQUFDQyw0QkFBYTtZQUViekIsV0FBVyxxQkFDVixzQkFBQzBCOztrQ0FDQyxxQkFBQ0MsMEJBQVk7a0NBQ2Isc0JBQUNDLHdDQUFnQjs7MENBQ2YscUJBQUNDLG9CQUFXO2dDQUFDQyxTQUFTM0I7Z0NBQUk0QixlQUFlcEM7Z0NBQVlVLE1BQU1BO2dDQUFNRyxTQUFTQTs7MENBQzFFLHFCQUFDd0IsK0JBQVU7Z0NBQ1QxQixNQUFNQSxPQUFPMkIsSUFBQUEsdUNBQWtCLEVBQUMzQixJQUFJLENBQUMsRUFBRSxFQUFFSyxzQkFBc0I7Z0NBQy9EdUIsZUFBZTtnQ0FDZkMsU0FBU3hCO2dDQUNUeUIsVUFBVWI7Ozs7Ozs7O0FBT3hCIn0=