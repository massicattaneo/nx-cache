{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/node_modules/micromark-util-encode/index.js"],"sourcesContent":["const characterReferences = {'\"': 'quot', '&': 'amp', '<': 'lt', '>': 'gt'}\n\n/**\n * Encode only the dangerous HTML characters.\n *\n * This ensures that certain characters which have special meaning in HTML are\n * dealt with.\n * Technically, we can skip `>` and `\"` in many cases, but CM includes them.\n *\n * @param {string} value\n *   Value to encode.\n * @returns {string}\n *   Encoded value.\n */\nexport function encode(value) {\n  return value.replace(/[\"&<>]/g, replace)\n\n  /**\n   * @param {string} value\n   * @returns {string}\n   */\n  function replace(value) {\n    // @ts-expect-error Hush, itâ€™s fine.\n    return '&' + characterReferences[value] + ';'\n  }\n}\n"],"names":["encode","characterReferences","value","replace"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAcgBA;;;eAAAA;;;AAdhB,MAAMC,sBAAsB;IAAC,KAAK;IAAQ,KAAK;IAAO,KAAK;IAAM,KAAK;AAAI;AAcnE,SAASD,OAAOE,KAAK;IAC1B,OAAOA,MAAMC,OAAO,CAAC,WAAWA;IAEhC;;;GAGC,GACD,SAASA,QAAQD,KAAK;QACpB,oCAAoC;QACpC,OAAO,MAAMD,mBAAmB,CAACC,MAAM,GAAG;IAC5C;AACF"}