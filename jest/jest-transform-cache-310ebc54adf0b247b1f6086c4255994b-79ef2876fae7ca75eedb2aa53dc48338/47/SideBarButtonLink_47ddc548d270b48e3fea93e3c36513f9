b32e8a1903bafa09efdce501b3c15528
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "SideBarButtonLink", {
    enumerable: true,
    get: function() {
        return SideBarButtonLink;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _reactrouterdom = require("react-router-dom");
const _basecomponents = require("@rp/react/web/common/base-components");
const _core = require("@rp/react/web/mui/core");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
const SideBarButtonLink = ({ startIcon, title, collapsed, children, sx, to, openInNewTab, iconSize = 20 })=>{
    const location = (0, _reactrouterdom.useLocation)();
    const match = location.pathname.startsWith(to);
    if (collapsed) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.RPTooltip, {
            title: title,
            placement: "right",
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.IconButton, {
                component: _reactrouterdom.Link,
                to: to,
                target: openInNewTab ? "_blank" : undefined,
                disableRipple: true,
                "aria-label": title,
                sx: {
                    height: 30,
                    borderRadius: 1,
                    backgroundColor: match ? "elevation.dp16" : undefined,
                    ":hover": {
                        backgroundColor: "elevation.dp16"
                    },
                    px: 0,
                    py: 1,
                    "& svg": {
                        fontSize: iconSize,
                        width: iconSize,
                        height: iconSize
                    }
                },
                children: startIcon
            })
        });
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Button, {
        sx: (theme)=>_object_spread({
                borderRadius: "4px",
                color: "text.primary",
                px: 2,
                textTransform: "unset",
                fontWeight: match ? 700 : 400,
                justifyContent: "flex-start",
                cursor: match ? "default" : "pointer",
                height: 30,
                fontSize: "16px",
                backgroundColor: match ? theme.palette.overlay.surface : undefined,
                ":hover": {
                    backgroundColor: theme.palette.overlay.surface
                },
                "& svg": {
                    width: `${iconSize}px`,
                    height: `${iconSize}px`
                }
            }, sx),
        startIcon: startIcon,
        component: _reactrouterdom.Link,
        to: to,
        target: openInNewTab ? "_blank" : undefined,
        children: children
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9jb21wb3NpdGUtY29tcG9uZW50cy9zcmMvU2lkZUJhci9TaWRlQmFyQnV0dG9uTGluay50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJvcHNXaXRoQ2hpbGRyZW4gfSBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IHsgTGluaywgdXNlTG9jYXRpb24gfSBmcm9tIFwicmVhY3Qtcm91dGVyLWRvbVwiXG5pbXBvcnQgeyBSUFRvb2x0aXAgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9jb21tb24vYmFzZS1jb21wb25lbnRzXCJcbmltcG9ydCB7IEJ1dHRvbiwgQnV0dG9uUHJvcHMsIEljb25CdXR0b24gfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9tdWkvY29yZVwiXG5cbnR5cGUgUHJvcHMgPSBQcm9wc1dpdGhDaGlsZHJlbjx7XG4gIHRvOiBzdHJpbmdcbiAgc3RhcnRJY29uOiBCdXR0b25Qcm9wc1tcInN0YXJ0SWNvblwiXVxuICBzeD86IEJ1dHRvblByb3BzW1wic3hcIl1cbiAgY29sbGFwc2VkPzogYm9vbGVhblxuICB0aXRsZTogc3RyaW5nXG4gIG9wZW5Jbk5ld1RhYj86IGJvb2xlYW5cbiAgaWNvblNpemU/OiBudW1iZXJcbn0+XG5cbmNvbnN0IFNpZGVCYXJCdXR0b25MaW5rID0gKHtcbiAgc3RhcnRJY29uLFxuICB0aXRsZSxcbiAgY29sbGFwc2VkLFxuICBjaGlsZHJlbixcbiAgc3gsXG4gIHRvLFxuICBvcGVuSW5OZXdUYWIsXG4gIGljb25TaXplID0gMjAsXG59OiBQcm9wcykgPT4ge1xuICBjb25zdCBsb2NhdGlvbiA9IHVzZUxvY2F0aW9uKClcbiAgY29uc3QgbWF0Y2ggPSBsb2NhdGlvbi5wYXRobmFtZS5zdGFydHNXaXRoKHRvKVxuICBpZiAoY29sbGFwc2VkKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxSUFRvb2x0aXAgdGl0bGU9e3RpdGxlfSBwbGFjZW1lbnQ9XCJyaWdodFwiPlxuICAgICAgICA8SWNvbkJ1dHRvblxuICAgICAgICAgIGNvbXBvbmVudD17TGlua31cbiAgICAgICAgICB0bz17dG99XG4gICAgICAgICAgdGFyZ2V0PXtvcGVuSW5OZXdUYWIgPyBcIl9ibGFua1wiIDogdW5kZWZpbmVkfVxuICAgICAgICAgIGRpc2FibGVSaXBwbGVcbiAgICAgICAgICBhcmlhLWxhYmVsPXt0aXRsZX1cbiAgICAgICAgICBzeD17e1xuICAgICAgICAgICAgaGVpZ2h0OiAzMCxcbiAgICAgICAgICAgIGJvcmRlclJhZGl1czogMSxcbiAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogbWF0Y2ggPyBcImVsZXZhdGlvbi5kcDE2XCIgOiB1bmRlZmluZWQsXG4gICAgICAgICAgICBcIjpob3ZlclwiOiB7XG4gICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogXCJlbGV2YXRpb24uZHAxNlwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHB4OiAwLFxuICAgICAgICAgICAgcHk6IDEsXG4gICAgICAgICAgICBcIiYgc3ZnXCI6IHtcbiAgICAgICAgICAgICAgZm9udFNpemU6IGljb25TaXplLFxuICAgICAgICAgICAgICB3aWR0aDogaWNvblNpemUsXG4gICAgICAgICAgICAgIGhlaWdodDogaWNvblNpemUsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIH19XG4gICAgICAgID5cbiAgICAgICAgICB7c3RhcnRJY29ufVxuICAgICAgICA8L0ljb25CdXR0b24+XG4gICAgICA8L1JQVG9vbHRpcD5cbiAgICApXG4gIH1cbiAgcmV0dXJuIChcbiAgICA8QnV0dG9uXG4gICAgICBzeD17dGhlbWUgPT4gKHtcbiAgICAgICAgYm9yZGVyUmFkaXVzOiBcIjRweFwiLFxuICAgICAgICBjb2xvcjogXCJ0ZXh0LnByaW1hcnlcIixcbiAgICAgICAgcHg6IDIsXG4gICAgICAgIHRleHRUcmFuc2Zvcm06IFwidW5zZXRcIixcbiAgICAgICAgZm9udFdlaWdodDogbWF0Y2ggPyA3MDAgOiA0MDAsXG4gICAgICAgIGp1c3RpZnlDb250ZW50OiBcImZsZXgtc3RhcnRcIixcbiAgICAgICAgY3Vyc29yOiBtYXRjaCA/IFwiZGVmYXVsdFwiIDogXCJwb2ludGVyXCIsXG4gICAgICAgIGhlaWdodDogMzAsXG4gICAgICAgIGZvbnRTaXplOiBcIjE2cHhcIixcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiBtYXRjaCA/IHRoZW1lLnBhbGV0dGUub3ZlcmxheS5zdXJmYWNlIDogdW5kZWZpbmVkLFxuICAgICAgICBcIjpob3ZlclwiOiB7XG4gICAgICAgICAgYmFja2dyb3VuZENvbG9yOiB0aGVtZS5wYWxldHRlLm92ZXJsYXkuc3VyZmFjZSxcbiAgICAgICAgfSxcbiAgICAgICAgXCImIHN2Z1wiOiB7XG4gICAgICAgICAgd2lkdGg6IGAke2ljb25TaXplfXB4YCxcbiAgICAgICAgICBoZWlnaHQ6IGAke2ljb25TaXplfXB4YCxcbiAgICAgICAgfSxcbiAgICAgICAgLi4uc3gsXG4gICAgICB9KX1cbiAgICAgIHN0YXJ0SWNvbj17c3RhcnRJY29ufVxuICAgICAgY29tcG9uZW50PXtMaW5rfVxuICAgICAgdG89e3RvfVxuICAgICAgdGFyZ2V0PXtvcGVuSW5OZXdUYWIgPyBcIl9ibGFua1wiIDogdW5kZWZpbmVkfVxuICAgID5cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L0J1dHRvbj5cbiAgKVxufVxuXG5leHBvcnQgeyBTaWRlQmFyQnV0dG9uTGluayB9XG4iXSwibmFtZXMiOlsiU2lkZUJhckJ1dHRvbkxpbmsiLCJzdGFydEljb24iLCJ0aXRsZSIsImNvbGxhcHNlZCIsImNoaWxkcmVuIiwic3giLCJ0byIsIm9wZW5Jbk5ld1RhYiIsImljb25TaXplIiwibG9jYXRpb24iLCJ1c2VMb2NhdGlvbiIsIm1hdGNoIiwicGF0aG5hbWUiLCJzdGFydHNXaXRoIiwiUlBUb29sdGlwIiwicGxhY2VtZW50IiwiSWNvbkJ1dHRvbiIsImNvbXBvbmVudCIsIkxpbmsiLCJ0YXJnZXQiLCJ1bmRlZmluZWQiLCJkaXNhYmxlUmlwcGxlIiwiYXJpYS1sYWJlbCIsImhlaWdodCIsImJvcmRlclJhZGl1cyIsImJhY2tncm91bmRDb2xvciIsInB4IiwicHkiLCJmb250U2l6ZSIsIndpZHRoIiwiQnV0dG9uIiwidGhlbWUiLCJjb2xvciIsInRleHRUcmFuc2Zvcm0iLCJmb250V2VpZ2h0IiwianVzdGlmeUNvbnRlbnQiLCJjdXJzb3IiLCJwYWxldHRlIiwib3ZlcmxheSIsInN1cmZhY2UiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkF5RlNBOzs7ZUFBQUE7Ozs7Z0NBeEZ5QjtnQ0FDUjtzQkFDc0I7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBWWhELE1BQU1BLG9CQUFvQixDQUFDLEVBQ3pCQyxTQUFTLEVBQ1RDLEtBQUssRUFDTEMsU0FBUyxFQUNUQyxRQUFRLEVBQ1JDLEVBQUUsRUFDRkMsRUFBRSxFQUNGQyxZQUFZLEVBQ1pDLFdBQVcsRUFBRSxFQUNQO0lBQ04sTUFBTUMsV0FBV0MsSUFBQUEsMkJBQVc7SUFDNUIsTUFBTUMsUUFBUUYsU0FBU0csUUFBUSxDQUFDQyxVQUFVLENBQUNQO0lBQzNDLElBQUlILFdBQVc7UUFDYixxQkFDRSxxQkFBQ1cseUJBQVM7WUFBQ1osT0FBT0E7WUFBT2EsV0FBVTtzQkFDakMsY0FBQSxxQkFBQ0MsZ0JBQVU7Z0JBQ1RDLFdBQVdDLG9CQUFJO2dCQUNmWixJQUFJQTtnQkFDSmEsUUFBUVosZUFBZSxXQUFXYTtnQkFDbENDLGFBQWE7Z0JBQ2JDLGNBQVlwQjtnQkFDWkcsSUFBSTtvQkFDRmtCLFFBQVE7b0JBQ1JDLGNBQWM7b0JBQ2RDLGlCQUFpQmQsUUFBUSxtQkFBbUJTO29CQUM1QyxVQUFVO3dCQUNSSyxpQkFBaUI7b0JBQ25CO29CQUNBQyxJQUFJO29CQUNKQyxJQUFJO29CQUNKLFNBQVM7d0JBQ1BDLFVBQVVwQjt3QkFDVnFCLE9BQU9yQjt3QkFDUGUsUUFBUWY7b0JBQ1Y7Z0JBQ0Y7MEJBRUNQOzs7SUFJVDtJQUNBLHFCQUNFLHFCQUFDNkIsWUFBTTtRQUNMekIsSUFBSTBCLENBQUFBLFFBQVU7Z0JBQ1pQLGNBQWM7Z0JBQ2RRLE9BQU87Z0JBQ1BOLElBQUk7Z0JBQ0pPLGVBQWU7Z0JBQ2ZDLFlBQVl2QixRQUFRLE1BQU07Z0JBQzFCd0IsZ0JBQWdCO2dCQUNoQkMsUUFBUXpCLFFBQVEsWUFBWTtnQkFDNUJZLFFBQVE7Z0JBQ1JLLFVBQVU7Z0JBQ1ZILGlCQUFpQmQsUUFBUW9CLE1BQU1NLE9BQU8sQ0FBQ0MsT0FBTyxDQUFDQyxPQUFPLEdBQUduQjtnQkFDekQsVUFBVTtvQkFDUkssaUJBQWlCTSxNQUFNTSxPQUFPLENBQUNDLE9BQU8sQ0FBQ0MsT0FBTztnQkFDaEQ7Z0JBQ0EsU0FBUztvQkFDUFYsT0FBTyxDQUFDLEVBQUVyQixTQUFTLEVBQUUsQ0FBQztvQkFDdEJlLFFBQVEsQ0FBQyxFQUFFZixTQUFTLEVBQUUsQ0FBQztnQkFDekI7ZUFDR0g7UUFFTEosV0FBV0E7UUFDWGdCLFdBQVdDLG9CQUFJO1FBQ2ZaLElBQUlBO1FBQ0phLFFBQVFaLGVBQWUsV0FBV2E7a0JBRWpDaEI7O0FBR1AifQ==