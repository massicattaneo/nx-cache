f52f6d7c59ebb3e7c0a9ebc7e96e1c68
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "convertSuggestionToCqsItem", {
    enumerable: true,
    get: function() {
        return convertSuggestionToCqsItem;
    }
});
const _suggestiontypeguards = require("./suggestion.type-guards");
const convertSuggestionToCqsItem = (suggestion)=>{
    if ((0, _suggestiontypeguards.isCompanySuggestion)(suggestion)) {
        var _suggestion_ticker;
        const item = {
            entityType: suggestion.entityType,
            description: suggestion.description,
            volume: 0,
            group1: suggestion.group1,
            group2: suggestion.group2,
            group3: suggestion.group3,
            group4: suggestion.group4,
            group5: suggestion.group5,
            metadata1: (_suggestion_ticker = suggestion.ticker) !== null && _suggestion_ticker !== void 0 ? _suggestion_ticker : suggestion.metadata1,
            metadata2: suggestion.metadata2,
            metadata3: suggestion.metadata3,
            metadata4: suggestion.metadata4,
            category: suggestion.category,
            key: suggestion.key,
            name: suggestion.name,
            queryType: suggestion.queryType,
            queryRelationship: "result"
        };
        return item;
    } else {
        const item = {
            entityType: suggestion.entityType,
            description: suggestion.description,
            volume: 0,
            group1: suggestion.group1,
            group2: suggestion.group2,
            group3: suggestion.group3,
            group4: suggestion.group4,
            group5: suggestion.group5,
            metadata1: suggestion.metadata1,
            category: suggestion.category,
            key: suggestion.key,
            name: suggestion.name,
            queryType: suggestion.queryType,
            queryRelationship: "result"
        };
        return item;
    }
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3QvdGFuc3RhY2stYXBpL3N1Z2dlc3Rpb24vc3JjL2NvbnZlcnRTdWdnZXN0aW9uVG9DcXNJdGVtLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENxc0l0ZW0gfSBmcm9tIFwiQHJwL2NvbW1vbi9hcGktdHlwZXNcIlxuaW1wb3J0IHsgaXNDb21wYW55U3VnZ2VzdGlvbiB9IGZyb20gXCIuL3N1Z2dlc3Rpb24udHlwZS1ndWFyZHNcIlxuaW1wb3J0IHsgRW50aXR5U3VnZ2VzdGlvbiB9IGZyb20gXCIuL3N1Z2dlc3Rpb24udHlwZXNcIlxuXG5leHBvcnQgY29uc3QgY29udmVydFN1Z2dlc3Rpb25Ub0Nxc0l0ZW0gPSAoc3VnZ2VzdGlvbjogRW50aXR5U3VnZ2VzdGlvbikgPT4ge1xuICBpZiAoaXNDb21wYW55U3VnZ2VzdGlvbihzdWdnZXN0aW9uKSkge1xuICAgIGNvbnN0IGl0ZW06IENxc0l0ZW0gPSB7XG4gICAgICBlbnRpdHlUeXBlOiBzdWdnZXN0aW9uLmVudGl0eVR5cGUsXG4gICAgICBkZXNjcmlwdGlvbjogc3VnZ2VzdGlvbi5kZXNjcmlwdGlvbixcbiAgICAgIHZvbHVtZTogMCxcbiAgICAgIGdyb3VwMTogc3VnZ2VzdGlvbi5ncm91cDEsXG4gICAgICBncm91cDI6IHN1Z2dlc3Rpb24uZ3JvdXAyLFxuICAgICAgZ3JvdXAzOiBzdWdnZXN0aW9uLmdyb3VwMyxcbiAgICAgIGdyb3VwNDogc3VnZ2VzdGlvbi5ncm91cDQsXG4gICAgICBncm91cDU6IHN1Z2dlc3Rpb24uZ3JvdXA1LFxuICAgICAgbWV0YWRhdGExOiBzdWdnZXN0aW9uLnRpY2tlciA/PyBzdWdnZXN0aW9uLm1ldGFkYXRhMSxcbiAgICAgIG1ldGFkYXRhMjogc3VnZ2VzdGlvbi5tZXRhZGF0YTIsXG4gICAgICBtZXRhZGF0YTM6IHN1Z2dlc3Rpb24ubWV0YWRhdGEzLFxuICAgICAgbWV0YWRhdGE0OiBzdWdnZXN0aW9uLm1ldGFkYXRhNCxcbiAgICAgIGNhdGVnb3J5OiBzdWdnZXN0aW9uLmNhdGVnb3J5LFxuICAgICAga2V5OiBzdWdnZXN0aW9uLmtleSxcbiAgICAgIG5hbWU6IHN1Z2dlc3Rpb24ubmFtZSxcbiAgICAgIHF1ZXJ5VHlwZTogc3VnZ2VzdGlvbi5xdWVyeVR5cGUsXG4gICAgICBxdWVyeVJlbGF0aW9uc2hpcDogXCJyZXN1bHRcIixcbiAgICB9XG4gICAgcmV0dXJuIGl0ZW1cbiAgfSBlbHNlIHtcbiAgICBjb25zdCBpdGVtOiBDcXNJdGVtID0ge1xuICAgICAgZW50aXR5VHlwZTogc3VnZ2VzdGlvbi5lbnRpdHlUeXBlLFxuICAgICAgZGVzY3JpcHRpb246IHN1Z2dlc3Rpb24uZGVzY3JpcHRpb24sXG4gICAgICB2b2x1bWU6IDAsXG4gICAgICBncm91cDE6IHN1Z2dlc3Rpb24uZ3JvdXAxLFxuICAgICAgZ3JvdXAyOiBzdWdnZXN0aW9uLmdyb3VwMixcbiAgICAgIGdyb3VwMzogc3VnZ2VzdGlvbi5ncm91cDMsXG4gICAgICBncm91cDQ6IHN1Z2dlc3Rpb24uZ3JvdXA0LFxuICAgICAgZ3JvdXA1OiBzdWdnZXN0aW9uLmdyb3VwNSxcbiAgICAgIG1ldGFkYXRhMTogc3VnZ2VzdGlvbi5tZXRhZGF0YTEsXG4gICAgICBjYXRlZ29yeTogc3VnZ2VzdGlvbi5jYXRlZ29yeSxcbiAgICAgIGtleTogc3VnZ2VzdGlvbi5rZXksXG4gICAgICBuYW1lOiBzdWdnZXN0aW9uLm5hbWUsXG4gICAgICBxdWVyeVR5cGU6IHN1Z2dlc3Rpb24ucXVlcnlUeXBlLFxuICAgICAgcXVlcnlSZWxhdGlvbnNoaXA6IFwicmVzdWx0XCIsXG4gICAgfVxuICAgIHJldHVybiBpdGVtXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJjb252ZXJ0U3VnZ2VzdGlvblRvQ3FzSXRlbSIsInN1Z2dlc3Rpb24iLCJpc0NvbXBhbnlTdWdnZXN0aW9uIiwiaXRlbSIsImVudGl0eVR5cGUiLCJkZXNjcmlwdGlvbiIsInZvbHVtZSIsImdyb3VwMSIsImdyb3VwMiIsImdyb3VwMyIsImdyb3VwNCIsImdyb3VwNSIsIm1ldGFkYXRhMSIsInRpY2tlciIsIm1ldGFkYXRhMiIsIm1ldGFkYXRhMyIsIm1ldGFkYXRhNCIsImNhdGVnb3J5Iiwia2V5IiwibmFtZSIsInF1ZXJ5VHlwZSIsInF1ZXJ5UmVsYXRpb25zaGlwIl0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQUlhQTs7O2VBQUFBOzs7c0NBSHVCO0FBRzdCLE1BQU1BLDZCQUE2QixDQUFDQztJQUN6QyxJQUFJQyxJQUFBQSx5Q0FBbUIsRUFBQ0QsYUFBYTtZQVV0QkE7UUFUYixNQUFNRSxPQUFnQjtZQUNwQkMsWUFBWUgsV0FBV0csVUFBVTtZQUNqQ0MsYUFBYUosV0FBV0ksV0FBVztZQUNuQ0MsUUFBUTtZQUNSQyxRQUFRTixXQUFXTSxNQUFNO1lBQ3pCQyxRQUFRUCxXQUFXTyxNQUFNO1lBQ3pCQyxRQUFRUixXQUFXUSxNQUFNO1lBQ3pCQyxRQUFRVCxXQUFXUyxNQUFNO1lBQ3pCQyxRQUFRVixXQUFXVSxNQUFNO1lBQ3pCQyxXQUFXWCxDQUFBQSxxQkFBQUEsV0FBV1ksTUFBTSxjQUFqQlosZ0NBQUFBLHFCQUFxQkEsV0FBV1csU0FBUztZQUNwREUsV0FBV2IsV0FBV2EsU0FBUztZQUMvQkMsV0FBV2QsV0FBV2MsU0FBUztZQUMvQkMsV0FBV2YsV0FBV2UsU0FBUztZQUMvQkMsVUFBVWhCLFdBQVdnQixRQUFRO1lBQzdCQyxLQUFLakIsV0FBV2lCLEdBQUc7WUFDbkJDLE1BQU1sQixXQUFXa0IsSUFBSTtZQUNyQkMsV0FBV25CLFdBQVdtQixTQUFTO1lBQy9CQyxtQkFBbUI7UUFDckI7UUFDQSxPQUFPbEI7SUFDVCxPQUFPO1FBQ0wsTUFBTUEsT0FBZ0I7WUFDcEJDLFlBQVlILFdBQVdHLFVBQVU7WUFDakNDLGFBQWFKLFdBQVdJLFdBQVc7WUFDbkNDLFFBQVE7WUFDUkMsUUFBUU4sV0FBV00sTUFBTTtZQUN6QkMsUUFBUVAsV0FBV08sTUFBTTtZQUN6QkMsUUFBUVIsV0FBV1EsTUFBTTtZQUN6QkMsUUFBUVQsV0FBV1MsTUFBTTtZQUN6QkMsUUFBUVYsV0FBV1UsTUFBTTtZQUN6QkMsV0FBV1gsV0FBV1csU0FBUztZQUMvQkssVUFBVWhCLFdBQVdnQixRQUFRO1lBQzdCQyxLQUFLakIsV0FBV2lCLEdBQUc7WUFDbkJDLE1BQU1sQixXQUFXa0IsSUFBSTtZQUNyQkMsV0FBV25CLFdBQVdtQixTQUFTO1lBQy9CQyxtQkFBbUI7UUFDckI7UUFDQSxPQUFPbEI7SUFDVDtBQUNGIn0=