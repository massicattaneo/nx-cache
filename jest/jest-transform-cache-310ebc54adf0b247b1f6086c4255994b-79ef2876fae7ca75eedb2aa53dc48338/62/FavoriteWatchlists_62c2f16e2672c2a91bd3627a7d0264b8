36bd623b04b30e46fbbe03f041ef9a53
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "FavoriteWatchlists", {
    enumerable: true,
    get: function() {
        return FavoriteWatchlists;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _watchlists = require("@rp/react/web/common/watchlists");
const _core = require("@rp/react/web/mui/core");
const _icons = require("@rp/react/web/mui/icons");
const _WatchlistsListView = require("../../WatchlistsListView");
const FavoriteWatchlists = ({ containerEl, onCardClick, data, initialLines, modeView })=>{
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
        sx: {
            mb: 10,
            width: "100%",
            display: "flex",
            flexDirection: "column",
            alignItems: "center"
        },
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Typography, {
                sx: {
                    fontSize: 32,
                    fontWeight: 700
                },
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.Star, {
                        sx: {
                            mr: 2
                        }
                    }),
                    "Favorites"
                ]
            }),
            (data && data.length > 0 || !data) && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                        sx: {
                            color: "text.secondary",
                            fontSize: 16,
                            my: 2
                        },
                        children: "These are your favorite watchlists"
                    }),
                    modeView === "card" && /*#__PURE__*/ (0, _jsxruntime.jsx)(_watchlists.WatchlistCardViewShowMoreList, {
                        onCardClick: onCardClick,
                        containerEl: containerEl,
                        data: data,
                        initialLines: initialLines
                    }),
                    modeView === "list" && /*#__PURE__*/ (0, _jsxruntime.jsx)(_WatchlistsListView.PublicWatchlists, {
                        data: data,
                        isLoading: !data
                    })
                ]
            }),
            data && data.length === 0 && /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                sx: {
                    color: "text.secondary",
                    fontSize: 16,
                    my: 2
                },
                children: "You haven't marked any watchlist as favorite yet."
            })
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL3dhdGNobGlzdHMvc3JjL2xpYi9XYXRjaGxpc3RzQ2FyZFZpZXcvRmF2b3JpdGVXYXRjaGxpc3RzL0Zhdm9yaXRlV2F0Y2hsaXN0cy50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT3JnYW5pemF0aW9uTWVtYmVyc2hpcFJlc291cmNlIH0gZnJvbSBcIkBjbGVyay90eXBlc1wiXG5pbXBvcnQgeyBXYXRjaGxpc3QgfSBmcm9tIFwiQHJwL2NvbW1vbi9hcGktdHlwZXNcIlxuaW1wb3J0IHsgV2F0Y2hsaXN0Q2FyZFZpZXdTaG93TW9yZUxpc3QgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9jb21tb24vd2F0Y2hsaXN0c1wiXG5pbXBvcnQgeyBCb3gsIFR5cG9ncmFwaHkgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9tdWkvY29yZVwiXG5pbXBvcnQgeyBTdGFyIH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvbXVpL2ljb25zXCJcbmltcG9ydCB7IFB1YmxpY1dhdGNobGlzdHMgfSBmcm9tIFwiLi4vLi4vV2F0Y2hsaXN0c0xpc3RWaWV3XCJcbmltcG9ydCB7IFdhdGNobGlzdHNNb2RlVmlldyB9IGZyb20gXCIuLi9XYXRjaGxpc3RzQ2FyZFZpZXdUb2dnbGVzXCJcblxudHlwZSBQcm9wcyA9IHtcbiAgZGF0YTogQXJyYXk8V2F0Y2hsaXN0ICYgeyBvd25lcjogT3JnYW5pemF0aW9uTWVtYmVyc2hpcFJlc291cmNlIHwgdW5kZWZpbmVkIH0+IHwgdW5kZWZpbmVkXG4gIGNvbnRhaW5lckVsOiBIVE1MRGl2RWxlbWVudCB8IG51bGxcbiAgb25DYXJkQ2xpY2s6ICh3YXRjaGxpc3Q6IFdhdGNobGlzdCkgPT4gdm9pZFxuICBpbml0aWFsTGluZXM/OiBudW1iZXJcbiAgbW9kZVZpZXc6IFdhdGNobGlzdHNNb2RlVmlld1xufVxuXG5leHBvcnQgY29uc3QgRmF2b3JpdGVXYXRjaGxpc3RzID0gKHtcbiAgY29udGFpbmVyRWwsXG4gIG9uQ2FyZENsaWNrLFxuICBkYXRhLFxuICBpbml0aWFsTGluZXMsXG4gIG1vZGVWaWV3LFxufTogUHJvcHMpID0+IHtcbiAgcmV0dXJuIChcbiAgICA8Qm94XG4gICAgICBzeD17e1xuICAgICAgICBtYjogMTAsXG4gICAgICAgIHdpZHRoOiBcIjEwMCVcIixcbiAgICAgICAgZGlzcGxheTogXCJmbGV4XCIsXG4gICAgICAgIGZsZXhEaXJlY3Rpb246IFwiY29sdW1uXCIsXG4gICAgICAgIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gICAgICB9fVxuICAgID5cbiAgICAgIDxUeXBvZ3JhcGh5IHN4PXt7IGZvbnRTaXplOiAzMiwgZm9udFdlaWdodDogNzAwIH19PlxuICAgICAgICA8U3RhciBzeD17eyBtcjogMiB9fSAvPlxuICAgICAgICBGYXZvcml0ZXNcbiAgICAgIDwvVHlwb2dyYXBoeT5cbiAgICAgIHsoKGRhdGEgJiYgZGF0YS5sZW5ndGggPiAwKSB8fCAhZGF0YSkgJiYgKFxuICAgICAgICA8PlxuICAgICAgICAgIDxUeXBvZ3JhcGh5IHN4PXt7IGNvbG9yOiBcInRleHQuc2Vjb25kYXJ5XCIsIGZvbnRTaXplOiAxNiwgbXk6IDIgfX0+XG4gICAgICAgICAgICBUaGVzZSBhcmUgeW91ciBmYXZvcml0ZSB3YXRjaGxpc3RzXG4gICAgICAgICAgPC9UeXBvZ3JhcGh5PlxuICAgICAgICAgIHttb2RlVmlldyA9PT0gXCJjYXJkXCIgJiYgKFxuICAgICAgICAgICAgPFdhdGNobGlzdENhcmRWaWV3U2hvd01vcmVMaXN0XG4gICAgICAgICAgICAgIG9uQ2FyZENsaWNrPXtvbkNhcmRDbGlja31cbiAgICAgICAgICAgICAgY29udGFpbmVyRWw9e2NvbnRhaW5lckVsfVxuICAgICAgICAgICAgICBkYXRhPXtkYXRhfVxuICAgICAgICAgICAgICBpbml0aWFsTGluZXM9e2luaXRpYWxMaW5lc31cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgKX1cbiAgICAgICAgICB7bW9kZVZpZXcgPT09IFwibGlzdFwiICYmIDxQdWJsaWNXYXRjaGxpc3RzIGRhdGE9e2RhdGF9IGlzTG9hZGluZz17IWRhdGF9IC8+fVxuICAgICAgICA8Lz5cbiAgICAgICl9XG4gICAgICB7ZGF0YSAmJiBkYXRhLmxlbmd0aCA9PT0gMCAmJiAoXG4gICAgICAgIDxUeXBvZ3JhcGh5IHN4PXt7IGNvbG9yOiBcInRleHQuc2Vjb25kYXJ5XCIsIGZvbnRTaXplOiAxNiwgbXk6IDIgfX0+XG4gICAgICAgICAgWW91IGhhdmVuJ3QgbWFya2VkIGFueSB3YXRjaGxpc3QgYXMgZmF2b3JpdGUgeWV0LlxuICAgICAgICA8L1R5cG9ncmFwaHk+XG4gICAgICApfVxuICAgIDwvQm94PlxuICApXG59XG4iXSwibmFtZXMiOlsiRmF2b3JpdGVXYXRjaGxpc3RzIiwiY29udGFpbmVyRWwiLCJvbkNhcmRDbGljayIsImRhdGEiLCJpbml0aWFsTGluZXMiLCJtb2RlVmlldyIsIkJveCIsInN4IiwibWIiLCJ3aWR0aCIsImRpc3BsYXkiLCJmbGV4RGlyZWN0aW9uIiwiYWxpZ25JdGVtcyIsIlR5cG9ncmFwaHkiLCJmb250U2l6ZSIsImZvbnRXZWlnaHQiLCJTdGFyIiwibXIiLCJsZW5ndGgiLCJjb2xvciIsIm15IiwiV2F0Y2hsaXN0Q2FyZFZpZXdTaG93TW9yZUxpc3QiLCJQdWJsaWNXYXRjaGxpc3RzIiwiaXNMb2FkaW5nIl0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQWdCYUE7OztlQUFBQTs7Ozs0QkFkaUM7c0JBQ2Q7dUJBQ1g7b0NBQ1k7QUFXMUIsTUFBTUEscUJBQXFCLENBQUMsRUFDakNDLFdBQVcsRUFDWEMsV0FBVyxFQUNYQyxJQUFJLEVBQ0pDLFlBQVksRUFDWkMsUUFBUSxFQUNGO0lBQ04scUJBQ0Usc0JBQUNDLFNBQUc7UUFDRkMsSUFBSTtZQUNGQyxJQUFJO1lBQ0pDLE9BQU87WUFDUEMsU0FBUztZQUNUQyxlQUFlO1lBQ2ZDLFlBQVk7UUFDZDs7MEJBRUEsc0JBQUNDLGdCQUFVO2dCQUFDTixJQUFJO29CQUFFTyxVQUFVO29CQUFJQyxZQUFZO2dCQUFJOztrQ0FDOUMscUJBQUNDLFdBQUk7d0JBQUNULElBQUk7NEJBQUVVLElBQUk7d0JBQUU7O29CQUFLOzs7WUFHdkIsQ0FBQSxBQUFDZCxRQUFRQSxLQUFLZSxNQUFNLEdBQUcsS0FBTSxDQUFDZixJQUFHLG1CQUNqQzs7a0NBQ0UscUJBQUNVLGdCQUFVO3dCQUFDTixJQUFJOzRCQUFFWSxPQUFPOzRCQUFrQkwsVUFBVTs0QkFBSU0sSUFBSTt3QkFBRTtrQ0FBRzs7b0JBR2pFZixhQUFhLHdCQUNaLHFCQUFDZ0IseUNBQTZCO3dCQUM1Qm5CLGFBQWFBO3dCQUNiRCxhQUFhQTt3QkFDYkUsTUFBTUE7d0JBQ05DLGNBQWNBOztvQkFHakJDLGFBQWEsd0JBQVUscUJBQUNpQixvQ0FBZ0I7d0JBQUNuQixNQUFNQTt3QkFBTW9CLFdBQVcsQ0FBQ3BCOzs7O1lBR3JFQSxRQUFRQSxLQUFLZSxNQUFNLEtBQUssbUJBQ3ZCLHFCQUFDTCxnQkFBVTtnQkFBQ04sSUFBSTtvQkFBRVksT0FBTztvQkFBa0JMLFVBQVU7b0JBQUlNLElBQUk7Z0JBQUU7MEJBQUc7Ozs7QUFNMUUifQ==