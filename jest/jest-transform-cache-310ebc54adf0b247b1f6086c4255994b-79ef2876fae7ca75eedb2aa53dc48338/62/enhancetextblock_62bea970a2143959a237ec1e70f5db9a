15922342a38c853e24f46ec10d7f01b1
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "enhanceTextBlock", {
    enumerable: true,
    get: function() {
        return enhanceTextBlock;
    }
});
const _types = require("@rp/react/rpjson/types");
const _generateeventid = require("../helpers/generate-event-id");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const enhanceTextBlock = (block, options)=>{
    var _block_sentences, _block_entities, _block_events;
    var _block_sentences_map, _block_entities_map, _block_events_map;
    return _object_spread_props(_object_spread({}, block), {
        type: block.type || _types.EnhancedDocumentTypes.PARAGRAPH,
        id: options.idIterator(),
        textStartAt: options.textStartAt,
        tree: options.tree.slice(0),
        sentences: (_block_sentences_map = (_block_sentences = block.sentences) === null || _block_sentences === void 0 ? void 0 : _block_sentences.map((sent)=>{
            return _object_spread_props(_object_spread({}, sent), {
                sentenceNumber: options.sentenceIterator()
            });
        })) !== null && _block_sentences_map !== void 0 ? _block_sentences_map : [],
        entities: [
            ...(_block_entities_map = (_block_entities = block.entities) === null || _block_entities === void 0 ? void 0 : _block_entities.map((item)=>({
                    id: options.idIterator(),
                    queryType: "entity",
                    key: item.rp_entity_id,
                    start: item.start,
                    end: item.end
                }))) !== null && _block_entities_map !== void 0 ? _block_entities_map : [],
            ...(_block_events_map = (_block_events = block.events) === null || _block_events === void 0 ? void 0 : _block_events.map((item)=>{
                var _options_rpjson;
                const event = (((_options_rpjson = options.rpjson) === null || _options_rpjson === void 0 ? void 0 : _options_rpjson.analytics.events) || []).find((el)=>el.event_similarity_key === item.event_similarity_key);
                return {
                    id: options.idIterator(),
                    queryType: "rp_topic",
                    key: (0, _generateeventid.generateEventId)(event),
                    start: item.start,
                    end: item.end
                };
            })) !== null && _block_events_map !== void 0 ? _block_events_map : []
        ],
        paragraphNumber: options.paragraphNumber
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3QvY29tbW9uL3JwanNvbi9zcmMvbGliL2RvY3VtZW50LWVuaGFuY2VyL2VuaGFuY2UtdGV4dC1ibG9jay50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUZXh0QmxvY2sgfSBmcm9tIFwiQHJwL3JlYWN0L3JwanNvbi90eXBlc1wiXG5pbXBvcnQge1xuICBFbmhhbmNlQmxvY2tPcHRpb25zLFxuICBFbmhhbmNlZERvY3VtZW50VHlwZXMsXG4gIEVuaGFuY2VkVGV4dEJsb2NrLFxufSBmcm9tIFwiQHJwL3JlYWN0L3JwanNvbi90eXBlc1wiXG5pbXBvcnQgeyBnZW5lcmF0ZUV2ZW50SWQgfSBmcm9tIFwiLi4vaGVscGVycy9nZW5lcmF0ZS1ldmVudC1pZFwiXG5cbmV4cG9ydCBjb25zdCBlbmhhbmNlVGV4dEJsb2NrID0gKFxuICBibG9jazogVGV4dEJsb2NrLFxuICBvcHRpb25zOiBFbmhhbmNlQmxvY2tPcHRpb25zLFxuKTogRW5oYW5jZWRUZXh0QmxvY2sgPT4ge1xuICByZXR1cm4ge1xuICAgIC4uLmJsb2NrLFxuICAgIHR5cGU6IGJsb2NrLnR5cGUgfHwgRW5oYW5jZWREb2N1bWVudFR5cGVzLlBBUkFHUkFQSCxcbiAgICBpZDogb3B0aW9ucy5pZEl0ZXJhdG9yKCksXG4gICAgdGV4dFN0YXJ0QXQ6IG9wdGlvbnMudGV4dFN0YXJ0QXQsXG4gICAgdHJlZTogb3B0aW9ucy50cmVlLnNsaWNlKDApLFxuICAgIHNlbnRlbmNlczpcbiAgICAgIGJsb2NrLnNlbnRlbmNlcz8ubWFwKHNlbnQgPT4ge1xuICAgICAgICByZXR1cm4geyAuLi5zZW50LCBzZW50ZW5jZU51bWJlcjogb3B0aW9ucy5zZW50ZW5jZUl0ZXJhdG9yKCkgfVxuICAgICAgfSkgPz8gW10sXG4gICAgZW50aXRpZXM6IFtcbiAgICAgIC4uLihibG9jay5lbnRpdGllcz8ubWFwKGl0ZW0gPT4gKHtcbiAgICAgICAgaWQ6IG9wdGlvbnMuaWRJdGVyYXRvcigpLFxuICAgICAgICBxdWVyeVR5cGU6IFwiZW50aXR5XCIgYXMgY29uc3QsXG4gICAgICAgIGtleTogaXRlbS5ycF9lbnRpdHlfaWQsXG4gICAgICAgIHN0YXJ0OiBpdGVtLnN0YXJ0LFxuICAgICAgICBlbmQ6IGl0ZW0uZW5kLFxuICAgICAgfSkpID8/IFtdKSxcbiAgICAgIC4uLihibG9jay5ldmVudHM/Lm1hcChpdGVtID0+IHtcbiAgICAgICAgY29uc3QgZXZlbnQgPSAob3B0aW9ucy5ycGpzb24/LmFuYWx5dGljcy5ldmVudHMgfHwgW10pLmZpbmQoXG4gICAgICAgICAgZWwgPT4gZWwuZXZlbnRfc2ltaWxhcml0eV9rZXkgPT09IGl0ZW0uZXZlbnRfc2ltaWxhcml0eV9rZXksXG4gICAgICAgIClcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBpZDogb3B0aW9ucy5pZEl0ZXJhdG9yKCksXG4gICAgICAgICAgcXVlcnlUeXBlOiBcInJwX3RvcGljXCIgYXMgY29uc3QsXG4gICAgICAgICAga2V5OiBnZW5lcmF0ZUV2ZW50SWQoZXZlbnQpLFxuICAgICAgICAgIHN0YXJ0OiBpdGVtLnN0YXJ0LFxuICAgICAgICAgIGVuZDogaXRlbS5lbmQsXG4gICAgICAgIH1cbiAgICAgIH0pID8/IFtdKSxcbiAgICBdLFxuICAgIHBhcmFncmFwaE51bWJlcjogb3B0aW9ucy5wYXJhZ3JhcGhOdW1iZXIsXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJlbmhhbmNlVGV4dEJsb2NrIiwiYmxvY2siLCJvcHRpb25zIiwidHlwZSIsIkVuaGFuY2VkRG9jdW1lbnRUeXBlcyIsIlBBUkFHUkFQSCIsImlkIiwiaWRJdGVyYXRvciIsInRleHRTdGFydEF0IiwidHJlZSIsInNsaWNlIiwic2VudGVuY2VzIiwibWFwIiwic2VudCIsInNlbnRlbmNlTnVtYmVyIiwic2VudGVuY2VJdGVyYXRvciIsImVudGl0aWVzIiwiaXRlbSIsInF1ZXJ5VHlwZSIsImtleSIsInJwX2VudGl0eV9pZCIsInN0YXJ0IiwiZW5kIiwiZXZlbnRzIiwiZXZlbnQiLCJycGpzb24iLCJhbmFseXRpY3MiLCJmaW5kIiwiZWwiLCJldmVudF9zaW1pbGFyaXR5X2tleSIsImdlbmVyYXRlRXZlbnRJZCIsInBhcmFncmFwaE51bWJlciJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBUWFBOzs7ZUFBQUE7Ozt1QkFITjtpQ0FDeUI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRXpCLE1BQU1BLG1CQUFtQixDQUM5QkMsT0FDQUM7UUFTSUQsa0JBSUlBLGlCQU9BQTtRQVhKQSxzQkFJSUEscUJBT0FBO0lBbEJSLE9BQU8sd0NBQ0ZBO1FBQ0hFLE1BQU1GLE1BQU1FLElBQUksSUFBSUMsNEJBQXFCLENBQUNDLFNBQVM7UUFDbkRDLElBQUlKLFFBQVFLLFVBQVU7UUFDdEJDLGFBQWFOLFFBQVFNLFdBQVc7UUFDaENDLE1BQU1QLFFBQVFPLElBQUksQ0FBQ0MsS0FBSyxDQUFDO1FBQ3pCQyxXQUNFVixDQUFBQSx3QkFBQUEsbUJBQUFBLE1BQU1VLFNBQVMsY0FBZlYsdUNBQUFBLGlCQUFpQlcsR0FBRyxDQUFDQyxDQUFBQTtZQUNuQixPQUFPLHdDQUFLQTtnQkFBTUMsZ0JBQWdCWixRQUFRYSxnQkFBZ0I7O1FBQzVELGdCQUZBZCxrQ0FBQUEsdUJBRU0sRUFBRTtRQUNWZSxVQUFVO2VBQ0pmLENBQUFBLHVCQUFBQSxrQkFBQUEsTUFBTWUsUUFBUSxjQUFkZixzQ0FBQUEsZ0JBQWdCVyxHQUFHLENBQUNLLENBQUFBLE9BQVMsQ0FBQTtvQkFDL0JYLElBQUlKLFFBQVFLLFVBQVU7b0JBQ3RCVyxXQUFXO29CQUNYQyxLQUFLRixLQUFLRyxZQUFZO29CQUN0QkMsT0FBT0osS0FBS0ksS0FBSztvQkFDakJDLEtBQUtMLEtBQUtLLEdBQUc7Z0JBQ2YsQ0FBQSxnQkFOSXJCLGlDQUFBQSxzQkFNRyxFQUFFO2VBQ0xBLENBQUFBLHFCQUFBQSxnQkFBQUEsTUFBTXNCLE1BQU0sY0FBWnRCLG9DQUFBQSxjQUFjVyxHQUFHLENBQUNLLENBQUFBO29CQUNMZjtnQkFBZixNQUFNc0IsUUFBUSxBQUFDdEIsQ0FBQUEsRUFBQUEsa0JBQUFBLFFBQVF1QixNQUFNLGNBQWR2QixzQ0FBQUEsZ0JBQWdCd0IsU0FBUyxDQUFDSCxNQUFNLEtBQUksRUFBRSxBQUFELEVBQUdJLElBQUksQ0FDekRDLENBQUFBLEtBQU1BLEdBQUdDLG9CQUFvQixLQUFLWixLQUFLWSxvQkFBb0I7Z0JBRTdELE9BQU87b0JBQ0x2QixJQUFJSixRQUFRSyxVQUFVO29CQUN0QlcsV0FBVztvQkFDWEMsS0FBS1csSUFBQUEsZ0NBQWUsRUFBQ047b0JBQ3JCSCxPQUFPSixLQUFLSSxLQUFLO29CQUNqQkMsS0FBS0wsS0FBS0ssR0FBRztnQkFDZjtZQUNGLGdCQVhJckIsK0JBQUFBLG9CQVdFLEVBQUU7U0FDVDtRQUNEOEIsaUJBQWlCN0IsUUFBUTZCLGVBQWU7O0FBRTVDIn0=