049b1a933f7d36bd20ec88dec31176bc
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "Workflow", {
    enumerable: true,
    get: function() {
        return Workflow;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _isEmpty = /*#__PURE__*/ _interop_require_default(require("lodash/isEmpty"));
const _reactrouterdom = require("react-router-dom");
const _settings = require("@rp/common/settings");
const _workflow = require("@rp/react/common/workflow");
const _workflow1 = require("@rp/react/tanstack-api/workflow");
const _brief = require("@rp/react/web/brief");
const _basecomponents = require("@rp/react/web/common/base-components");
const _compositecomponents = require("@rp/react/web/common/composite-components");
const _headercomponents = require("@rp/react/web/common/header-components");
const _providers = require("@rp/react/web/common/providers");
const _documentviewer = require("@rp/react/web/document-viewer");
const _core = require("@rp/react/web/mui/core");
const _router = require("@rp/react/web/router");
const _workflow2 = require("@rp/react/web/workflow");
const _featureflags = require("../../atoms/feature-flags");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const Workflow = ()=>{
    var _workflowData_selectedTimeframe;
    const { id } = (0, _reactrouterdom.useParams)();
    const navigate = (0, _reactrouterdom.useNavigate)();
    const { enqueueError } = (0, _providers.useSnackbar)();
    const [enableCustomInstructions] = (0, _featureflags.useFeatureAtom)("enableCustomInstructions");
    const { isLoading, data: workflow, error } = (0, _workflow1.useWorkflow)(id !== null && id !== void 0 ? id : "", {
        enableCustomInstructions
    });
    const [activeStep, setActiveStep] = (0, _react.useState)(_workflow.WorkflowSteps.SELECT_COMPANIES);
    const [workflowData, setWorkflowData] = (0, _react.useState)({
        selectedCompanies: []
    });
    const handleComplete = (0, _react.useCallback)(()=>{
        if (workflow) {
            const defaultDateFilter = (0, _workflow.getWorkflowDefaultDateFilter)(workflow);
            const workflowState = {
                originWorkflow: workflow,
                selectedData: workflow.behavior === "direct" ? _object_spread_props(_object_spread({}, workflowData), {
                    selectedTimeframe: defaultDateFilter
                }) : workflowData
            };
            navigate(_router.CHAT_ROUTE, {
                state: {
                    workflow: workflowState
                },
                replace: true
            });
        }
    }, [
        workflow,
        workflowData,
        navigate
    ]);
    const updateWorkflowData = (0, _react.useCallback)((updates)=>{
        setWorkflowData((prev)=>_object_spread({}, prev, updates));
    }, []);
    const handleCompanySelection = (0, _react.useCallback)((companies)=>{
        updateWorkflowData({
            selectedCompanies: companies
        });
    }, [
        updateWorkflowData
    ]);
    const handleTimeframeSelection = (0, _react.useCallback)((timeframe)=>{
        updateWorkflowData({
            selectedTimeframe: timeframe
        });
    }, [
        updateWorkflowData
    ]);
    const handleSectorSelection = (0, _react.useCallback)((sector)=>{
        updateWorkflowData({
            selectedSector: sector
        });
    }, [
        updateWorkflowData
    ]);
    const handleCustomInstructionsChange = (0, _react.useCallback)((text)=>{
        updateWorkflowData({
            customInstructions: text
        });
    }, [
        updateWorkflowData
    ]);
    const getNextButtonDisabled = (0, _react.useCallback)((step)=>{
        if ((step === null || step === void 0 ? void 0 : step.stepType) === "entity") {
            return (0, _isEmpty.default)(workflowData.selectedCompanies);
        }
        if ((step === null || step === void 0 ? void 0 : step.stepType) === "dateFilter") {
            var _workflowData_selectedTimeframe;
            return !workflowData.selectedTimeframe || ((_workflowData_selectedTimeframe = workflowData.selectedTimeframe) === null || _workflowData_selectedTimeframe === void 0 ? void 0 : _workflowData_selectedTimeframe.end) === "";
        }
        if ((step === null || step === void 0 ? void 0 : step.stepType) === "sector") {
            return !workflowData.selectedSector;
        }
        return false;
    }, [
        workflowData
    ]);
    // Handle errors
    (0, _react.useEffect)(()=>{
        if (error) {
            enqueueError(error.message);
            navigate(-1);
        }
    }, [
        error,
        enqueueError,
        navigate
    ]);
    (0, _react.useEffect)(()=>{
        var _workflowData_selectedTimeframe;
        if (workflow && (workflow === null || workflow === void 0 ? void 0 : workflow.defaultDateFilter) && !((_workflowData_selectedTimeframe = workflowData.selectedTimeframe) === null || _workflowData_selectedTimeframe === void 0 ? void 0 : _workflowData_selectedTimeframe.end) && workflow.behavior !== "direct") {
            setWorkflowData((prev)=>_object_spread_props(_object_spread({}, prev), {
                    selectedTimeframe: (0, _workflow.getWorkflowDefaultDateFilter)(workflow)
                }));
        }
    }, [
        workflow === null || workflow === void 0 ? void 0 : workflow.defaultDateFilter,
        (_workflowData_selectedTimeframe = workflowData.selectedTimeframe) === null || _workflowData_selectedTimeframe === void 0 ? void 0 : _workflowData_selectedTimeframe.end,
        workflow
    ]);
    // Handle direct workflow from create chat
    (0, _react.useEffect)(()=>{
        var _workflow_steps;
        if ((workflow === null || workflow === void 0 ? void 0 : workflow.behavior) === "direct" || (workflow === null || workflow === void 0 ? void 0 : (_workflow_steps = workflow.steps) === null || _workflow_steps === void 0 ? void 0 : _workflow_steps.length) === 0) {
            handleComplete();
        }
    }, [
        handleComplete,
        workflow === null || workflow === void 0 ? void 0 : workflow.behavior,
        workflow
    ]);
    const renderStepContent = (step)=>{
        if (!step) return null;
        switch(step.stepType){
            case "entity":
                var _workflow_description;
                return /*#__PURE__*/ (0, _jsxruntime.jsx)(_workflow2.CompanySearchAutocomplete, {
                    workflowDescription: (_workflow_description = workflow === null || workflow === void 0 ? void 0 : workflow.description) !== null && _workflow_description !== void 0 ? _workflow_description : "",
                    handleCompanySelection: handleCompanySelection,
                    companies: workflowData.selectedCompanies,
                    disjunctiveFacets: workflow === null || workflow === void 0 ? void 0 : workflow.disjunctiveFacets
                });
            case "dateFilter":
                return /*#__PURE__*/ (0, _jsxruntime.jsx)(_workflow2.TimeframeSelector, {
                    timeframe: workflowData.selectedTimeframe,
                    handleTimeframeSelection: handleTimeframeSelection
                });
            case "sector":
                return (workflow === null || workflow === void 0 ? void 0 : workflow.sectors) && /*#__PURE__*/ (0, _jsxruntime.jsx)(_workflow2.SectorSelector, {
                    sectorsOptions: workflow === null || workflow === void 0 ? void 0 : workflow.sectors,
                    sector: workflowData === null || workflowData === void 0 ? void 0 : workflowData.selectedSector,
                    handleSectorSelection: handleSectorSelection
                });
            case "customInstructions":
                var _workflowData_customInstructions;
                return /*#__PURE__*/ (0, _jsxruntime.jsx)(_workflow2.CustomInstructions, {
                    customInstructions: (_workflowData_customInstructions = workflowData.customInstructions) !== null && _workflowData_customInstructions !== void 0 ? _workflowData_customInstructions : "",
                    handleCustomInstructionsChange: handleCustomInstructionsChange
                });
            default:
                return null;
        }
    };
    var _workflow_flowName, _workflow_steps_length, _workflow_flowName1;
    return workflow && workflow.steps && !(0, _isEmpty.default)(workflow === null || workflow === void 0 ? void 0 : workflow.steps) ? /*#__PURE__*/ (0, _jsxruntime.jsxs)(_basecomponents.PageWrapperStyled, {
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_headercomponents.HtmlPageHead, {
                title: "Workflow"
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_brief.BriefPageHeader, {
                onBackButtonClick: ()=>navigate(-1),
                title: (_workflow_flowName = workflow === null || workflow === void 0 ? void 0 : workflow.flowName) !== null && _workflow_flowName !== void 0 ? _workflow_flowName : ""
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_documentviewer.DocumentViewerPage, {
                contentContainerProps: {
                    style: {
                        overflow: "visible"
                    }
                },
                backTitle: "",
                disableBackButton: true,
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                    sx: {
                        [`& .${_compositecomponents.VERTICAL_SCROLL_STEP_CLASS_NAME}`]: {
                            paddingBottom: "32px"
                        },
                        [`& .${_compositecomponents.VERTICAL_SCROLL_STEP_CLASS_NAME}:last-of-type`]: {
                            paddingBottom: "120px"
                        },
                        marginBottom: activeStep === _workflow.WorkflowSteps.SELECT_COMPANIES ? "60px" : undefined,
                        paddingBottom: activeStep === _workflow.WorkflowSteps.SELECT_COMPANIES ? "40px" : undefined
                    },
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.VerticalScrollStepper, {
                        activeStep: activeStep,
                        handleComplete: handleComplete,
                        completeButtonText: isLoading ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.CircularProgress, {
                            size: 16,
                            color: "inherit"
                        }) : "Create",
                        steps: (_workflow_steps_length = workflow === null || workflow === void 0 ? void 0 : workflow.steps.length) !== null && _workflow_steps_length !== void 0 ? _workflow_steps_length : 0,
                        title: (_workflow_flowName1 = workflow === null || workflow === void 0 ? void 0 : workflow.flowName) !== null && _workflow_flowName1 !== void 0 ? _workflow_flowName1 : "",
                        offsetTop: _settings.HEADER_HEIGHT,
                        nextDisabled: getNextButtonDisabled(workflow === null || workflow === void 0 ? void 0 : workflow.steps[activeStep]),
                        onStepChange: setActiveStep,
                        withKeyboardShortcuts: true,
                        children: renderStepContent(workflow === null || workflow === void 0 ? void 0 : workflow.steps[activeStep])
                    })
                })
            })
        ]
    }) : null;
};

//# sourceMappingURL=data:application/json;base64,