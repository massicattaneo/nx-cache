{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/hooks/src/useKeyboardShortcuts.ts"],"sourcesContent":["import { useCallback, useEffect, useLayoutEffect, useRef } from \"react\"\n\nconst useKeyboardShortcuts = (\n  keys: Array<string>,\n  callback: (event: KeyboardEvent) => void,\n  node = null,\n) => {\n  const callbackRef = useRef(callback)\n  useLayoutEffect(() => {\n    callbackRef.current = callback\n  })\n\n  const handleKeyPress = useCallback(\n    (event: KeyboardEvent) => {\n      const lowerCaseKey = event.key.toLowerCase()\n      if (\n        keys.some(combination => {\n          const parts = combination.split(\"+\").map(part => part.trim().toLowerCase())\n          const mainKey = parts.pop()\n\n          if (!mainKey || lowerCaseKey !== mainKey) {\n            return false\n          }\n\n          const requiredModifiers = {\n            meta: parts.includes(\"cmd\") || parts.includes(\"meta\"),\n            ctrl: parts.includes(\"ctrl\"),\n            shift: parts.includes(\"shift\"),\n            alt: parts.includes(\"alt\"),\n          }\n\n          return (\n            event.metaKey === requiredModifiers.meta &&\n            event.ctrlKey === requiredModifiers.ctrl &&\n            event.shiftKey === requiredModifiers.shift &&\n            event.altKey === requiredModifiers.alt\n          )\n        })\n      ) {\n        callbackRef.current(event)\n      }\n    },\n    [keys],\n  )\n\n  useEffect(() => {\n    const targetNode = node ?? document\n    targetNode && targetNode.addEventListener(\"keydown\", handleKeyPress)\n\n    return () => targetNode && targetNode.removeEventListener(\"keydown\", handleKeyPress)\n  }, [handleKeyPress, node])\n}\n\nexport { useKeyboardShortcuts }\n"],"names":["useKeyboardShortcuts","keys","callback","node","callbackRef","useRef","useLayoutEffect","current","handleKeyPress","useCallback","event","lowerCaseKey","key","toLowerCase","some","combination","parts","split","map","part","trim","mainKey","pop","requiredModifiers","meta","includes","ctrl","shift","alt","metaKey","ctrlKey","shiftKey","altKey","useEffect","targetNode","document","addEventListener","removeEventListener"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAqDSA;;;eAAAA;;;uBArDuD;AAEhE,MAAMA,uBAAuB,CAC3BC,MACAC,UACAC,OAAO,IAAI;IAEX,MAAMC,cAAcC,IAAAA,aAAM,EAACH;IAC3BI,IAAAA,sBAAe,EAAC;QACdF,YAAYG,OAAO,GAAGL;IACxB;IAEA,MAAMM,iBAAiBC,IAAAA,kBAAW,EAChC,CAACC;QACC,MAAMC,eAAeD,MAAME,GAAG,CAACC,WAAW;QAC1C,IACEZ,KAAKa,IAAI,CAACC,CAAAA;YACR,MAAMC,QAAQD,YAAYE,KAAK,CAAC,KAAKC,GAAG,CAACC,CAAAA,OAAQA,KAAKC,IAAI,GAAGP,WAAW;YACxE,MAAMQ,UAAUL,MAAMM,GAAG;YAEzB,IAAI,CAACD,WAAWV,iBAAiBU,SAAS;gBACxC,OAAO;YACT;YAEA,MAAME,oBAAoB;gBACxBC,MAAMR,MAAMS,QAAQ,CAAC,UAAUT,MAAMS,QAAQ,CAAC;gBAC9CC,MAAMV,MAAMS,QAAQ,CAAC;gBACrBE,OAAOX,MAAMS,QAAQ,CAAC;gBACtBG,KAAKZ,MAAMS,QAAQ,CAAC;YACtB;YAEA,OACEf,MAAMmB,OAAO,KAAKN,kBAAkBC,IAAI,IACxCd,MAAMoB,OAAO,KAAKP,kBAAkBG,IAAI,IACxChB,MAAMqB,QAAQ,KAAKR,kBAAkBI,KAAK,IAC1CjB,MAAMsB,MAAM,KAAKT,kBAAkBK,GAAG;QAE1C,IACA;YACAxB,YAAYG,OAAO,CAACG;QACtB;IACF,GACA;QAACT;KAAK;IAGRgC,IAAAA,gBAAS,EAAC;QACR,MAAMC,aAAa/B,iBAAAA,kBAAAA,OAAQgC;QAC3BD,cAAcA,WAAWE,gBAAgB,CAAC,WAAW5B;QAErD,OAAO,IAAM0B,cAAcA,WAAWG,mBAAmB,CAAC,WAAW7B;IACvE,GAAG;QAACA;QAAgBL;KAAK;AAC3B"}