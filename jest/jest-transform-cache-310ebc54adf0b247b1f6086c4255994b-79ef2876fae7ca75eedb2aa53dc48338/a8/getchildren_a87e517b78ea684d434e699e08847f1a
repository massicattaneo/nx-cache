badd8a43610f4dee2195ca7a0731e47d
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    getCellsChildren: function() {
        return getCellsChildren;
    },
    getChildren: function() {
        return getChildren;
    },
    getContentChildren: function() {
        return getContentChildren;
    },
    getEntriesChildren: function() {
        return getEntriesChildren;
    },
    getRowsChildren: function() {
        return getRowsChildren;
    },
    getTextChildren: function() {
        return getTextChildren;
    }
});
const _react = require("react");
const _types = require("@rp/react/rpjson/types");
const _constants = require("../constants");
const _createreactelements = require("./create-react-elements");
const _createreacttextelement = require("./create-react-text-element");
const _gettagelement = require("./get-tag-element");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const getContentChildren = (block, props, options)=>{
    var _block_content;
    return ((_block_content = block.content) === null || _block_content === void 0 ? void 0 : _block_content.map((cont)=>(0, _createreactelements.createReactElements)(cont, props, options) || [])) || [];
};
const getTextChildren = (block, props, options)=>{
    const rpJsonDetections = {
        entities: block.entities || []
    };
    return [
        (0, _createreacttextelement.createReactTextElement)(block, props, rpJsonDetections, options)
    ];
};
const getEntriesChildren = (block, props, options)=>{
    const tagName = (0, _gettagelement.getChildrenTagName)(block);
    return block.entries.map((entry)=>(0, _createreactelements.createReactElements)(entry, props, _object_spread_props(_object_spread({}, options), {
            tagName
        })));
};
const getRowsChildren = (block, props, options)=>(0, _react.createElement)(_constants.TAG_NAMES.TBODY, _object_spread({
        key: `${block.id}_tbody`
    }, props), block.rows.map((entry)=>(0, _createreactelements.createReactElements)(entry, props, _object_spread_props(_object_spread({}, options), {
            tagName: _constants.TAG_NAMES.TR
        }))));
const getCellsChildren = (block, props, options)=>block.cells.map((entry)=>(0, _createreactelements.createReactElements)(entry, _object_spread_props(_object_spread({}, props), {
            colSpan: entry.colspan,
            rowSpan: entry.rowspan
        }), _object_spread_props(_object_spread({}, options), {
            tagName: _constants.TAG_NAMES.TD
        })));
const getChildren = (block, props, options)=>{
    const children = [];
    if ((0, _types.isEnhancedTextBlock)(block)) children.push(...getTextChildren(block, props, options));
    if ((0, _types.isEnhancedListBlock)(block)) children.push(...getEntriesChildren(block, props, options));
    if ((0, _types.isEnhancedContent)(block)) children.push(...getContentChildren(block, props, options));
    if ((0, _types.isEnhancedTableBlock)(block)) children.push(getRowsChildren(block, props, options));
    if ((0, _types.isEnhancedRow)(block)) children.push(...getCellsChildren(block, props, options));
    return children;
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL3JwanNvbi9zcmMvbGliL2NyZWF0ZS1yZWFjdC1lbGVtZW50cy9nZXQtY2hpbGRyZW4udHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlRWxlbWVudCB9IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQge1xuICBpc0VuaGFuY2VkQ29udGVudCxcbiAgaXNFbmhhbmNlZExpc3RCbG9jayxcbiAgaXNFbmhhbmNlZFJvdyxcbiAgaXNFbmhhbmNlZFRhYmxlQmxvY2ssXG4gIGlzRW5oYW5jZWRUZXh0QmxvY2ssXG59IGZyb20gXCJAcnAvcmVhY3QvcnBqc29uL3R5cGVzXCJcbmltcG9ydCB7XG4gIEVuaGFuY2VkQ2VsbCxcbiAgRW5oYW5jZWRFbGVtZW50QmxvY2ssXG4gIEVuaGFuY2VkTGlzdEJsb2NrLFxuICBFbmhhbmNlZExpc3RFbnRyeSxcbiAgRW5oYW5jZWRSb3csXG4gIEVuaGFuY2VkVGFibGVCbG9jayxcbiAgRW5oYW5jZWRUZXh0QmxvY2ssXG59IGZyb20gXCJAcnAvcmVhY3QvcnBqc29uL3R5cGVzXCJcbmltcG9ydCB7IFRBR19OQU1FUyB9IGZyb20gXCIuLi9jb25zdGFudHNcIlxuaW1wb3J0IHsgY3JlYXRlUmVhY3RFbGVtZW50cyB9IGZyb20gXCIuL2NyZWF0ZS1yZWFjdC1lbGVtZW50c1wiXG5pbXBvcnQge1xuICBSZWFjdERvY3VtZW50T3B0aW9ucyxcbiAgUmVhY3REb2N1bWVudFByb3BzLFxuICBScEpzb25CbG9ja0RldGVjdGlvbnMsXG59IGZyb20gXCIuL2NyZWF0ZS1yZWFjdC1lbGVtZW50cy50eXBlc1wiXG5pbXBvcnQgeyBjcmVhdGVSZWFjdFRleHRFbGVtZW50IH0gZnJvbSBcIi4vY3JlYXRlLXJlYWN0LXRleHQtZWxlbWVudFwiXG5pbXBvcnQgeyBnZXRDaGlsZHJlblRhZ05hbWUgfSBmcm9tIFwiLi9nZXQtdGFnLWVsZW1lbnRcIlxuXG5leHBvcnQgY29uc3QgZ2V0Q29udGVudENoaWxkcmVuID0gKFxuICBibG9jazogRW5oYW5jZWRMaXN0RW50cnkgfCBFbmhhbmNlZENlbGwsXG4gIHByb3BzOiBSZWFjdERvY3VtZW50UHJvcHMsXG4gIG9wdGlvbnM6IFJlYWN0RG9jdW1lbnRPcHRpb25zLFxuKSA9PiBibG9jay5jb250ZW50Py5tYXAoY29udCA9PiBjcmVhdGVSZWFjdEVsZW1lbnRzKGNvbnQsIHByb3BzLCBvcHRpb25zKSB8fCBbXSkgfHwgW11cblxuZXhwb3J0IGNvbnN0IGdldFRleHRDaGlsZHJlbiA9IChcbiAgYmxvY2s6IEVuaGFuY2VkVGV4dEJsb2NrLFxuICBwcm9wczogUmVhY3REb2N1bWVudFByb3BzLFxuICBvcHRpb25zOiBSZWFjdERvY3VtZW50T3B0aW9ucyxcbikgPT4ge1xuICBjb25zdCBycEpzb25EZXRlY3Rpb25zOiBScEpzb25CbG9ja0RldGVjdGlvbnMgPSB7XG4gICAgZW50aXRpZXM6IGJsb2NrLmVudGl0aWVzIHx8IFtdLFxuICB9XG4gIHJldHVybiBbY3JlYXRlUmVhY3RUZXh0RWxlbWVudChibG9jaywgcHJvcHMsIHJwSnNvbkRldGVjdGlvbnMsIG9wdGlvbnMpXVxufVxuXG5leHBvcnQgY29uc3QgZ2V0RW50cmllc0NoaWxkcmVuID0gKFxuICBibG9jazogRW5oYW5jZWRMaXN0QmxvY2ssXG4gIHByb3BzOiBSZWFjdERvY3VtZW50UHJvcHMsXG4gIG9wdGlvbnM6IFJlYWN0RG9jdW1lbnRPcHRpb25zLFxuKSA9PiB7XG4gIGNvbnN0IHRhZ05hbWUgPSBnZXRDaGlsZHJlblRhZ05hbWUoYmxvY2spXG4gIHJldHVybiBibG9jay5lbnRyaWVzLm1hcChlbnRyeSA9PiBjcmVhdGVSZWFjdEVsZW1lbnRzKGVudHJ5LCBwcm9wcywgeyAuLi5vcHRpb25zLCB0YWdOYW1lIH0pKVxufVxuXG5leHBvcnQgY29uc3QgZ2V0Um93c0NoaWxkcmVuID0gKFxuICBibG9jazogRW5oYW5jZWRUYWJsZUJsb2NrLFxuICBwcm9wczogUmVhY3REb2N1bWVudFByb3BzLFxuICBvcHRpb25zOiBSZWFjdERvY3VtZW50T3B0aW9ucyxcbikgPT5cbiAgY3JlYXRlRWxlbWVudChcbiAgICBUQUdfTkFNRVMuVEJPRFksXG4gICAge1xuICAgICAga2V5OiBgJHtibG9jay5pZH1fdGJvZHlgLFxuICAgICAgLi4ucHJvcHMsXG4gICAgfSxcbiAgICBibG9jay5yb3dzLm1hcChlbnRyeSA9PlxuICAgICAgY3JlYXRlUmVhY3RFbGVtZW50cyhlbnRyeSwgcHJvcHMsIHsgLi4ub3B0aW9ucywgdGFnTmFtZTogVEFHX05BTUVTLlRSIH0pLFxuICAgICksXG4gIClcblxuZXhwb3J0IGNvbnN0IGdldENlbGxzQ2hpbGRyZW4gPSAoXG4gIGJsb2NrOiBFbmhhbmNlZFJvdyxcbiAgcHJvcHM6IFJlYWN0RG9jdW1lbnRQcm9wczxcInRkXCI+LFxuICBvcHRpb25zOiBSZWFjdERvY3VtZW50T3B0aW9ucyxcbikgPT5cbiAgYmxvY2suY2VsbHMubWFwKGVudHJ5ID0+XG4gICAgY3JlYXRlUmVhY3RFbGVtZW50czxcInRkXCI+KFxuICAgICAgZW50cnksXG4gICAgICB7IC4uLnByb3BzLCBjb2xTcGFuOiBlbnRyeS5jb2xzcGFuLCByb3dTcGFuOiBlbnRyeS5yb3dzcGFuIH0sXG4gICAgICB7XG4gICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgIHRhZ05hbWU6IFRBR19OQU1FUy5URCxcbiAgICAgIH0sXG4gICAgKSxcbiAgKVxuXG5leHBvcnQgY29uc3QgZ2V0Q2hpbGRyZW4gPSAoXG4gIGJsb2NrOiBFbmhhbmNlZEVsZW1lbnRCbG9jayxcbiAgcHJvcHM6IFJlYWN0RG9jdW1lbnRQcm9wcyxcbiAgb3B0aW9uczogUmVhY3REb2N1bWVudE9wdGlvbnMsXG4pID0+IHtcbiAgY29uc3QgY2hpbGRyZW4gPSBbXVxuICBpZiAoaXNFbmhhbmNlZFRleHRCbG9jayhibG9jaykpIGNoaWxkcmVuLnB1c2goLi4uZ2V0VGV4dENoaWxkcmVuKGJsb2NrLCBwcm9wcywgb3B0aW9ucykpXG4gIGlmIChpc0VuaGFuY2VkTGlzdEJsb2NrKGJsb2NrKSkgY2hpbGRyZW4ucHVzaCguLi5nZXRFbnRyaWVzQ2hpbGRyZW4oYmxvY2ssIHByb3BzLCBvcHRpb25zKSlcbiAgaWYgKGlzRW5oYW5jZWRDb250ZW50KGJsb2NrKSkgY2hpbGRyZW4ucHVzaCguLi5nZXRDb250ZW50Q2hpbGRyZW4oYmxvY2ssIHByb3BzLCBvcHRpb25zKSlcbiAgaWYgKGlzRW5oYW5jZWRUYWJsZUJsb2NrKGJsb2NrKSkgY2hpbGRyZW4ucHVzaChnZXRSb3dzQ2hpbGRyZW4oYmxvY2ssIHByb3BzLCBvcHRpb25zKSlcbiAgaWYgKGlzRW5oYW5jZWRSb3coYmxvY2spKSBjaGlsZHJlbi5wdXNoKC4uLmdldENlbGxzQ2hpbGRyZW4oYmxvY2ssIHByb3BzLCBvcHRpb25zKSlcbiAgcmV0dXJuIGNoaWxkcmVuXG59XG4iXSwibmFtZXMiOlsiZ2V0Q2VsbHNDaGlsZHJlbiIsImdldENoaWxkcmVuIiwiZ2V0Q29udGVudENoaWxkcmVuIiwiZ2V0RW50cmllc0NoaWxkcmVuIiwiZ2V0Um93c0NoaWxkcmVuIiwiZ2V0VGV4dENoaWxkcmVuIiwiYmxvY2siLCJwcm9wcyIsIm9wdGlvbnMiLCJjb250ZW50IiwibWFwIiwiY29udCIsImNyZWF0ZVJlYWN0RWxlbWVudHMiLCJycEpzb25EZXRlY3Rpb25zIiwiZW50aXRpZXMiLCJjcmVhdGVSZWFjdFRleHRFbGVtZW50IiwidGFnTmFtZSIsImdldENoaWxkcmVuVGFnTmFtZSIsImVudHJpZXMiLCJlbnRyeSIsImNyZWF0ZUVsZW1lbnQiLCJUQUdfTkFNRVMiLCJUQk9EWSIsImtleSIsImlkIiwicm93cyIsIlRSIiwiY2VsbHMiLCJjb2xTcGFuIiwiY29sc3BhbiIsInJvd1NwYW4iLCJyb3dzcGFuIiwiVEQiLCJjaGlsZHJlbiIsImlzRW5oYW5jZWRUZXh0QmxvY2siLCJwdXNoIiwiaXNFbmhhbmNlZExpc3RCbG9jayIsImlzRW5oYW5jZWRDb250ZW50IiwiaXNFbmhhbmNlZFRhYmxlQmxvY2siLCJpc0VuaGFuY2VkUm93Il0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztJQXFFYUEsZ0JBQWdCO2VBQWhCQTs7SUFnQkFDLFdBQVc7ZUFBWEE7O0lBMURBQyxrQkFBa0I7ZUFBbEJBOztJQWlCQUMsa0JBQWtCO2VBQWxCQTs7SUFTQUMsZUFBZTtlQUFmQTs7SUFwQkFDLGVBQWU7ZUFBZkE7Ozt1QkFqQ2lCO3VCQU92QjsyQkFVbUI7cUNBQ1U7d0NBTUc7K0JBQ0o7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRTVCLE1BQU1ILHFCQUFxQixDQUNoQ0ksT0FDQUMsT0FDQUM7UUFDR0Y7V0FBQUEsRUFBQUEsaUJBQUFBLE1BQU1HLE9BQU8sY0FBYkgscUNBQUFBLGVBQWVJLEdBQUcsQ0FBQ0MsQ0FBQUEsT0FBUUMsSUFBQUEsd0NBQW1CLEVBQUNELE1BQU1KLE9BQU9DLFlBQVksRUFBRSxNQUFLLEVBQUU7O0FBRS9FLE1BQU1ILGtCQUFrQixDQUM3QkMsT0FDQUMsT0FDQUM7SUFFQSxNQUFNSyxtQkFBMEM7UUFDOUNDLFVBQVVSLE1BQU1RLFFBQVEsSUFBSSxFQUFFO0lBQ2hDO0lBQ0EsT0FBTztRQUFDQyxJQUFBQSw4Q0FBc0IsRUFBQ1QsT0FBT0MsT0FBT00sa0JBQWtCTDtLQUFTO0FBQzFFO0FBRU8sTUFBTUwscUJBQXFCLENBQ2hDRyxPQUNBQyxPQUNBQztJQUVBLE1BQU1RLFVBQVVDLElBQUFBLGlDQUFrQixFQUFDWDtJQUNuQyxPQUFPQSxNQUFNWSxPQUFPLENBQUNSLEdBQUcsQ0FBQ1MsQ0FBQUEsUUFBU1AsSUFBQUEsd0NBQW1CLEVBQUNPLE9BQU9aLE9BQU8sd0NBQUtDO1lBQVNROztBQUNwRjtBQUVPLE1BQU1aLGtCQUFrQixDQUM3QkUsT0FDQUMsT0FDQUMsVUFFQVksSUFBQUEsb0JBQWEsRUFDWEMsb0JBQVMsQ0FBQ0MsS0FBSyxFQUNmO1FBQ0VDLEtBQUssQ0FBQyxFQUFFakIsTUFBTWtCLEVBQUUsQ0FBQyxNQUFNLENBQUM7T0FDckJqQixRQUVMRCxNQUFNbUIsSUFBSSxDQUFDZixHQUFHLENBQUNTLENBQUFBLFFBQ2JQLElBQUFBLHdDQUFtQixFQUFDTyxPQUFPWixPQUFPLHdDQUFLQztZQUFTUSxTQUFTSyxvQkFBUyxDQUFDSyxFQUFFOztBQUlwRSxNQUFNMUIsbUJBQW1CLENBQzlCTSxPQUNBQyxPQUNBQyxVQUVBRixNQUFNcUIsS0FBSyxDQUFDakIsR0FBRyxDQUFDUyxDQUFBQSxRQUNkUCxJQUFBQSx3Q0FBbUIsRUFDakJPLE9BQ0Esd0NBQUtaO1lBQU9xQixTQUFTVCxNQUFNVSxPQUFPO1lBQUVDLFNBQVNYLE1BQU1ZLE9BQU87WUFDMUQsd0NBQ0t2QjtZQUNIUSxTQUFTSyxvQkFBUyxDQUFDVyxFQUFFOztBQUt0QixNQUFNL0IsY0FBYyxDQUN6QkssT0FDQUMsT0FDQUM7SUFFQSxNQUFNeUIsV0FBVyxFQUFFO0lBQ25CLElBQUlDLElBQUFBLDBCQUFtQixFQUFDNUIsUUFBUTJCLFNBQVNFLElBQUksSUFBSTlCLGdCQUFnQkMsT0FBT0MsT0FBT0M7SUFDL0UsSUFBSTRCLElBQUFBLDBCQUFtQixFQUFDOUIsUUFBUTJCLFNBQVNFLElBQUksSUFBSWhDLG1CQUFtQkcsT0FBT0MsT0FBT0M7SUFDbEYsSUFBSTZCLElBQUFBLHdCQUFpQixFQUFDL0IsUUFBUTJCLFNBQVNFLElBQUksSUFBSWpDLG1CQUFtQkksT0FBT0MsT0FBT0M7SUFDaEYsSUFBSThCLElBQUFBLDJCQUFvQixFQUFDaEMsUUFBUTJCLFNBQVNFLElBQUksQ0FBQy9CLGdCQUFnQkUsT0FBT0MsT0FBT0M7SUFDN0UsSUFBSStCLElBQUFBLG9CQUFhLEVBQUNqQyxRQUFRMkIsU0FBU0UsSUFBSSxJQUFJbkMsaUJBQWlCTSxPQUFPQyxPQUFPQztJQUMxRSxPQUFPeUI7QUFDVCJ9