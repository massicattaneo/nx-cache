104746e3d9fe14c95e28abb7df262980
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "ChatContextCard", {
    enumerable: true,
    get: function() {
        return ChatContextCard;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _reactmarkdown = /*#__PURE__*/ _interop_require_default(require("react-markdown"));
const _remarkgfm = /*#__PURE__*/ _interop_require_default(require("remark-gfm"));
const _react = require("swiper/react");
const _settings = require("@rp/common/settings");
const _assets = require("@rp/react/common/assets");
const _compositecomponents = require("@rp/react/web/common/composite-components");
const _hooks = require("@rp/react/web/common/hooks");
const _core = require("@rp/react/web/mui/core");
const _Chatstyles = require("../Chat.styles");
const _SourceChatDisplay = require("../ChatResponse/SourceChatDisplay");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const ChatContextCard = ({ sources, title, summary })=>{
    const { isMobile } = (0, _hooks.useDeviceInfo)();
    const theme = (0, _core.useTheme)();
    const imageSources = sources.filter((source)=>source.type === "DOCUMENT");
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
        sx: {
            mx: isMobile ? 0 : 7
        },
        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
            sx: {
                display: "flex",
                gap: isMobile ? 1 : 2,
                flexWrap: isMobile ? "wrap" : undefined
            },
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                    sx: {
                        ml: isMobile ? 2 : 0
                    },
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_assets.BigdataChatAvatar, {
                        height: isMobile ? 28 : 40,
                        width: isMobile ? 28 : 40
                    })
                }),
                isMobile ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                    sx: {
                        mt: "3px",
                        fontSize: "body2.fontSize",
                        color: "text.secondary"
                    },
                    children: "Bigdata"
                }) : null,
                /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                    sx: {
                        position: "relative",
                        mb: 2.5,
                        py: 2,
                        borderRadius: isMobile ? "0px" : "8px",
                        backgroundColor: "elevation.dp01",
                        boxShadow: "0px 4px 11px 0px rgba(0, 0, 0, 0.50)",
                        minWidth: 0
                    },
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                            px: 2,
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                                    sx: {
                                        fontSize: 20,
                                        fontWeight: 700
                                    },
                                    children: title
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                                    sx: {
                                        my: 2,
                                        "& > div": {
                                            px: 0
                                        }
                                    },
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.SourceImageDisplay, {
                                        sources: imageSources,
                                        isSummaryCompleted: true
                                    })
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_Chatstyles.ChatResponseText, {
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactmarkdown.default, {
                                        remarkPlugins: [
                                            _remarkgfm.default
                                        ],
                                        children: summary
                                    })
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Divider, {}),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                                    sx: {
                                        fontWeight: 700,
                                        mt: 1
                                    },
                                    children: "Sources"
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.SwiperWithFadingArrows, {
                            spaceBetween: 16,
                            sx: {
                                mt: 2,
                                px: isMobile ? 0 : 2,
                                "& .swiper": {
                                    zIndex: 0
                                },
                                "& .swiper-arrow-wrapper": {
                                    zIndex: 1
                                }
                            },
                            slidesPerGroup: 1,
                            height: _settings.BIG_SUMMARY_SOURCE_HEIGHT,
                            centeredSlides: isMobile,
                            centeredSlidesBounds: isMobile,
                            bgColor: theme.palette.elevation.dp01,
                            children: sources.map((source, index)=>{
                                switch(source.type){
                                    case "DOCUMENT":
                                        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_react.SwiperSlide, {
                                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_SourceChatDisplay.SourceChatDisplay, {
                                                source: source
                                            })
                                        }, `${source.name}-${index}`);
                                    default:
                                        return null;
                                }
                            })
                        })
                    ]
                })
            ]
        })
    });
};

//# sourceMappingURL=data:application/json;base64,