adeb75e5b9bccf34a8d54da5eca48878
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "DocumentsCollectionContainer", {
    enumerable: true,
    get: function() {
        return DocumentsCollectionContainer;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _documents = require("@rp/react/tanstack-api/documents");
const _basecomponents = require("@rp/react/web/common/base-components");
const _core = require("@rp/react/web/mui/core");
const _DocumentsCollectionViewer = require("../DocumentsCollectionViewer");
const _hooks = require("../hooks");
const _useDocumentsCollectionParameters = require("../hooks/useDocumentsCollectionParameters");
const DocumentsCollectionContainer = ({ documentId: documentIdFromProps, collectionId: collectionIdFromProps, isFromChat = false })=>{
    const { documentId, collectionId } = (0, _useDocumentsCollectionParameters.useDocumentsCollectionParameters)({
        documentIdFromProps,
        collectionIdFromProps
    });
    const { data: collectionDocuments, isLoading: isLoadingDocumentsCollection } = (0, _documents.useDocumentsCollectionInfo)({
        collectionId: collectionId
    });
    const { audioItem, visualItems, eventInfo } = (0, _hooks.useDocumentsViewerData)({
        documentId,
        collectionDocuments
    });
    if (!collectionId) return null;
    if (isLoadingDocumentsCollection) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.LoadingSpinner, {});
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
        sx: {
            display: "flex",
            width: "100%"
        },
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_DocumentsCollectionViewer.DocumentsCollectionViewer, {
            audioItem: audioItem,
            visualItems: visualItems,
            eventInfo: eventInfo,
            documentId: documentId,
            isFromChat: isFromChat
        })
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2RvY3VtZW50LXZpZXdlci9zcmMvbGliL0RvY3VtZW50c0NvbGxlY3Rpb25Db250YWluZXIvRG9jdW1lbnRzQ29sbGVjdGlvbkNvbnRhaW5lci50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlRG9jdW1lbnRzQ29sbGVjdGlvbkluZm8gfSBmcm9tIFwiQHJwL3JlYWN0L3RhbnN0YWNrLWFwaS9kb2N1bWVudHNcIlxuaW1wb3J0IHsgTG9hZGluZ1NwaW5uZXIgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9jb21tb24vYmFzZS1jb21wb25lbnRzXCJcbmltcG9ydCB7IEJveCB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL211aS9jb3JlXCJcbmltcG9ydCB7IERvY3VtZW50c0NvbGxlY3Rpb25WaWV3ZXIgfSBmcm9tIFwiLi4vRG9jdW1lbnRzQ29sbGVjdGlvblZpZXdlclwiXG5pbXBvcnQgeyB1c2VEb2N1bWVudHNWaWV3ZXJEYXRhIH0gZnJvbSBcIi4uL2hvb2tzXCJcbmltcG9ydCB7IHVzZURvY3VtZW50c0NvbGxlY3Rpb25QYXJhbWV0ZXJzIH0gZnJvbSBcIi4uL2hvb2tzL3VzZURvY3VtZW50c0NvbGxlY3Rpb25QYXJhbWV0ZXJzXCJcblxudHlwZSBEb2N1bWVudHNDb2xsZWN0aW9uQ29udGFpbmVyID0ge1xuICBkb2N1bWVudElkPzogc3RyaW5nXG4gIGNvbGxlY3Rpb25JZD86IHN0cmluZ1xuICBpc0Zyb21DaGF0PzogYm9vbGVhblxufVxuXG5jb25zdCBEb2N1bWVudHNDb2xsZWN0aW9uQ29udGFpbmVyID0gKHtcbiAgZG9jdW1lbnRJZDogZG9jdW1lbnRJZEZyb21Qcm9wcyxcbiAgY29sbGVjdGlvbklkOiBjb2xsZWN0aW9uSWRGcm9tUHJvcHMsXG4gIGlzRnJvbUNoYXQgPSBmYWxzZSxcbn06IERvY3VtZW50c0NvbGxlY3Rpb25Db250YWluZXIpID0+IHtcbiAgY29uc3QgeyBkb2N1bWVudElkLCBjb2xsZWN0aW9uSWQgfSA9IHVzZURvY3VtZW50c0NvbGxlY3Rpb25QYXJhbWV0ZXJzKHtcbiAgICBkb2N1bWVudElkRnJvbVByb3BzLFxuICAgIGNvbGxlY3Rpb25JZEZyb21Qcm9wcyxcbiAgfSlcblxuICBjb25zdCB7IGRhdGE6IGNvbGxlY3Rpb25Eb2N1bWVudHMsIGlzTG9hZGluZzogaXNMb2FkaW5nRG9jdW1lbnRzQ29sbGVjdGlvbiB9ID1cbiAgICB1c2VEb2N1bWVudHNDb2xsZWN0aW9uSW5mbyh7IGNvbGxlY3Rpb25JZDogY29sbGVjdGlvbklkIH0pXG5cbiAgY29uc3QgeyBhdWRpb0l0ZW0sIHZpc3VhbEl0ZW1zLCBldmVudEluZm8gfSA9IHVzZURvY3VtZW50c1ZpZXdlckRhdGEoe1xuICAgIGRvY3VtZW50SWQsXG4gICAgY29sbGVjdGlvbkRvY3VtZW50cyxcbiAgfSlcblxuICBpZiAoIWNvbGxlY3Rpb25JZCkgcmV0dXJuIG51bGxcblxuICBpZiAoaXNMb2FkaW5nRG9jdW1lbnRzQ29sbGVjdGlvbikge1xuICAgIHJldHVybiA8TG9hZGluZ1NwaW5uZXIgLz5cbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPEJveCBzeD17eyBkaXNwbGF5OiBcImZsZXhcIiwgd2lkdGg6IFwiMTAwJVwiIH19PlxuICAgICAgPERvY3VtZW50c0NvbGxlY3Rpb25WaWV3ZXJcbiAgICAgICAgYXVkaW9JdGVtPXthdWRpb0l0ZW19XG4gICAgICAgIHZpc3VhbEl0ZW1zPXt2aXN1YWxJdGVtc31cbiAgICAgICAgZXZlbnRJbmZvPXtldmVudEluZm99XG4gICAgICAgIGRvY3VtZW50SWQ9e2RvY3VtZW50SWR9XG4gICAgICAgIGlzRnJvbUNoYXQ9e2lzRnJvbUNoYXR9XG4gICAgICAvPlxuICAgIDwvQm94PlxuICApXG59XG5cbmV4cG9ydCB7IERvY3VtZW50c0NvbGxlY3Rpb25Db250YWluZXIgfVxuIl0sIm5hbWVzIjpbIkRvY3VtZW50c0NvbGxlY3Rpb25Db250YWluZXIiLCJkb2N1bWVudElkIiwiZG9jdW1lbnRJZEZyb21Qcm9wcyIsImNvbGxlY3Rpb25JZCIsImNvbGxlY3Rpb25JZEZyb21Qcm9wcyIsImlzRnJvbUNoYXQiLCJ1c2VEb2N1bWVudHNDb2xsZWN0aW9uUGFyYW1ldGVycyIsImRhdGEiLCJjb2xsZWN0aW9uRG9jdW1lbnRzIiwiaXNMb2FkaW5nIiwiaXNMb2FkaW5nRG9jdW1lbnRzQ29sbGVjdGlvbiIsInVzZURvY3VtZW50c0NvbGxlY3Rpb25JbmZvIiwiYXVkaW9JdGVtIiwidmlzdWFsSXRlbXMiLCJldmVudEluZm8iLCJ1c2VEb2N1bWVudHNWaWV3ZXJEYXRhIiwiTG9hZGluZ1NwaW5uZXIiLCJCb3giLCJzeCIsImRpc3BsYXkiLCJ3aWR0aCIsIkRvY3VtZW50c0NvbGxlY3Rpb25WaWV3ZXIiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkFrRFNBOzs7ZUFBQUE7Ozs7MkJBbERrQztnQ0FDWjtzQkFDWDsyQ0FDc0I7dUJBQ0g7a0RBQ1U7QUFRakQsTUFBTUEsK0JBQStCLENBQUMsRUFDcENDLFlBQVlDLG1CQUFtQixFQUMvQkMsY0FBY0MscUJBQXFCLEVBQ25DQyxhQUFhLEtBQUssRUFDVztJQUM3QixNQUFNLEVBQUVKLFVBQVUsRUFBRUUsWUFBWSxFQUFFLEdBQUdHLElBQUFBLGtFQUFnQyxFQUFDO1FBQ3BFSjtRQUNBRTtJQUNGO0lBRUEsTUFBTSxFQUFFRyxNQUFNQyxtQkFBbUIsRUFBRUMsV0FBV0MsNEJBQTRCLEVBQUUsR0FDMUVDLElBQUFBLHFDQUEwQixFQUFDO1FBQUVSLGNBQWNBO0lBQWE7SUFFMUQsTUFBTSxFQUFFUyxTQUFTLEVBQUVDLFdBQVcsRUFBRUMsU0FBUyxFQUFFLEdBQUdDLElBQUFBLDZCQUFzQixFQUFDO1FBQ25FZDtRQUNBTztJQUNGO0lBRUEsSUFBSSxDQUFDTCxjQUFjLE9BQU87SUFFMUIsSUFBSU8sOEJBQThCO1FBQ2hDLHFCQUFPLHFCQUFDTSw4QkFBYztJQUN4QjtJQUVBLHFCQUNFLHFCQUFDQyxTQUFHO1FBQUNDLElBQUk7WUFBRUMsU0FBUztZQUFRQyxPQUFPO1FBQU87a0JBQ3hDLGNBQUEscUJBQUNDLG9EQUF5QjtZQUN4QlQsV0FBV0E7WUFDWEMsYUFBYUE7WUFDYkMsV0FBV0E7WUFDWGIsWUFBWUE7WUFDWkksWUFBWUE7OztBQUlwQiJ9