{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/results-story-card/src/StoryCard/StoryCard.tsx"],"sourcesContent":["import { MouseEvent, useCallback } from \"react\"\nimport {\n  CqsClusterSummaryStory,\n  CqsSearchQuery,\n  CqsStory,\n  isClusterStory,\n} from \"@rp/common/api-types\"\nimport { getRegExpKeywords } from \"@rp/common/utils\"\nimport { removeFileExtension } from \"@rp/common/utils\"\nimport { DocumentIcon } from \"@rp/react/web/common/composite-components\"\nimport { StoryCardDate } from \"@rp/react/web/common/composite-components\"\nimport { StoryCardRanking } from \"@rp/react/web/common/composite-components\"\nimport { EllipsisTooltip, ShowMoreList } from \"@rp/react/web/common/composite-components\"\nimport { DateAndTranslatedInfo } from \"@rp/react/web/common/document-viewer\"\nimport { useExternalLinkUrl, useHashParams } from \"@rp/react/web/common/hooks\"\nimport { useDeviceInfo } from \"@rp/react/web/common/hooks\"\nimport { useVisitedDocument } from \"@rp/react/web/common/hooks\"\nimport { useDocumentViewerData } from \"@rp/react/web/common/providers\"\nimport { tagManagerEvents } from \"@rp/react/web/common/vendors/utils\"\nimport { getRelevantSentenceId } from \"@rp/react/web/cqs-utils\"\nimport { Box, Collapse, Link, Skeleton, Typography, debounce } from \"@rp/react/web/mui/core\"\nimport { ExpandLess } from \"@rp/react/web/mui/icons\"\nimport { RpJsonContentBlockDisplay } from \"@rp/react/web/rpjson\"\nimport {\n  RelatedDocumentButton,\n  StoryCardClusterStyled,\n  StoryCardHeader,\n  StoryCardHeaderInfo,\n  StoryCardStory,\n  StoryCardStyled,\n  classes,\n} from \"../StoryCard.styles\"\nimport { scrollToStoryTop, storyId, transitionId } from \"../scrollToStoryTop\"\nimport { useDisplaySentence } from \"./useDisplaySentence\"\n\nexport type ActionButtonProps = {\n  story: CqsStory | CqsClusterSummaryStory\n}\n\nexport type StoryCardTypes = {\n  story: CqsStory | CqsClusterSummaryStory\n  index: number\n  query?: CqsSearchQuery\n  keywords?: Array<string>\n  documentQuery?: CqsSearchQuery\n  showCluster?: boolean\n  toggleShowCluster?: (id: string) => void\n  isFeedbackMode?: boolean\n  isClusteredStory?: boolean\n  parentId?: string\n  parentIndex?: number\n  hideRating?: boolean\n  queryId?: string\n}\n\nconst StoryCard = ({\n  story,\n  index,\n  query,\n  documentQuery,\n  keywords = [],\n  showCluster = false,\n  toggleShowCluster,\n  isFeedbackMode = false,\n  isClusteredStory,\n  parentId,\n  parentIndex,\n  hideRating,\n  queryId,\n}: StoryCardTypes) => {\n  const { isMobile } = useDeviceInfo()\n  const [{ document: documentId }, setHashParams] = useHashParams()\n  const {\n    id,\n    hd,\n    sentences,\n    documentScope,\n    srcName = \"Unknown Source\",\n    ts,\n    language = \"English\",\n    contentType,\n    srcKey,\n  } = story\n  const isCluster = isClusterStory(story)\n  const cluster = isCluster ? story.cluster : []\n  const isPrivate = documentScope === \"files\"\n  const onShowLess = useCallback(() => scrollToStoryTop(undefined, id), [id])\n  const { setDocumentData } = useDocumentViewerData()\n\n  const { redirectToContent } = useExternalLinkUrl(id)\n  const relevantSentenceId = getRelevantSentenceId(story)\n  const { displaySentence, isLoading } = useDisplaySentence(sentences, id)\n  const { pnum, snum, entities: sentenceEntities = [] } = displaySentence\n  const { entities: headlineSentences = [] } = sentences[0].pnum === 0 ? sentences[0] : {}\n\n  const gtmData = {\n    documentId: parentId ?? id,\n    index: parentIndex ?? index,\n\n    clusterDocumentId: isClusteredStory ? id : undefined,\n    clusterIndex: isClusteredStory ? index : undefined,\n\n    sentenceId: `${id}-${pnum}-${snum}`,\n    queryId,\n  }\n\n  const handleClick = (event: MouseEvent<HTMLDivElement>) => {\n    event.stopPropagation()\n\n    tagManagerEvents.storyCard({\n      action: \"click\",\n      ...gtmData,\n    })\n\n    if (story.url && story.rpProviderId === \"MRVR\") {\n      redirectToContent(story.url, sentences[0].text)\n      return\n    }\n\n    setDocumentData({\n      documentId: id,\n      documentScope,\n      language,\n      query: documentQuery,\n      queryId,\n    })\n\n    isPrivate ? setHashParams({ document: id, private: \"true\" }) : setHashParams({ document: id })\n  }\n\n  const handleMouseEnter = () => {\n    tagManagerEvents.storyCard({\n      action: \"hover\",\n      ...gtmData,\n    })\n  }\n\n  const handleToggleCluster = (event: MouseEvent<HTMLButtonElement>) => {\n    event.stopPropagation()\n\n    toggleShowCluster?.(id)\n\n    tagManagerEvents.storyCard({\n      action: \"open-cluster\",\n      ...gtmData,\n    })\n  }\n\n  const debounceHandleMouseEnter = debounce(handleMouseEnter, 500)\n\n  // Change color visited document\n  const isVisited = useVisitedDocument(id)\n\n  return (\n    <div style={{ paddingBottom: \"8px\" }}>\n      <StoryCardStyled\n        className={classes.storyCardRoot}\n        onClick={handleClick}\n        onMouseEnter={debounceHandleMouseEnter}\n        showCluster={showCluster}\n        isVisited={isVisited}\n      >\n        <Box sx={{ width: 1 }} id={isCluster ? storyId(id) : undefined}>\n          <StoryCardHeader>\n            <span className={classes.headlineContainer}>\n              <EllipsisTooltip\n                disabled={!!documentId}\n                tooltipText={hd}\n                tooltipStyles={{ maxWidth: 350 }}\n                typographyProps={{\n                  style: {\n                    whiteSpace: isMobile ? undefined : \"nowrap\",\n                  },\n                }}\n              >\n                <Link variant=\"body2\" data-testid={`story-headLine-${id}`}>\n                  {!isPrivate ? hd : removeFileExtension(hd)}\n                </Link>\n              </EllipsisTooltip>\n            </span>\n          </StoryCardHeader>\n          <StoryCardHeaderInfo data-testid={`story-headerInfo-${id}`}>\n            {documentScope !== undefined ? (\n              <DocumentIcon\n                contentType={contentType}\n                documentScope={documentScope}\n                text={!isPrivate ? srcName : null}\n                srcKey={srcKey}\n              />\n            ) : null}\n            {isFeedbackMode && story?.sourceRank ? (\n              <Typography\n                sx={{ fontSize: \"12px\", mr: \"3px\", color: \"primary.main\" }}\n                component=\"span\"\n              >\n                ({story.sourceRank})\n              </Typography>\n            ) : null}\n            {cluster.length ? (\n              <Link component=\"button\" onClick={handleToggleCluster}>\n                <StoryCardDate sx={{ color: \"primary.light\", display: \"block\" }}>\n                  +{cluster.length} more\n                </StoryCardDate>\n              </Link>\n            ) : null}\n            <DateAndTranslatedInfo\n              language={isMobile && cluster.length ? undefined : language}\n              timestamp={ts}\n            />\n          </StoryCardHeaderInfo>\n          <div>\n            {!!pnum && pnum !== 0 && (\n              <StoryCardStory data-testid={`story-text-${id}`}>\n                {isLoading ? (\n                  <>\n                    <Skeleton width=\"100%\" height={16} />\n                    <Skeleton width=\"50%\" height={16} />\n                  </>\n                ) : (\n                  <RpJsonContentBlockDisplay\n                    finds={getRegExpKeywords(keywords)}\n                    block={displaySentence}\n                    markupDetections\n                  />\n                )}\n              </StoryCardStory>\n            )}\n            {isFeedbackMode && (\n              <StoryCardRanking\n                documentId={story.id}\n                headlineEntities={headlineSentences}\n                hideRating={hideRating}\n                parentIndex={parentIndex}\n                resultIndex={index}\n                sentenceEntities={pnum === 0 ? [] : sentenceEntities}\n                sentenceId={relevantSentenceId}\n              />\n            )}\n          </div>\n        </Box>\n      </StoryCardStyled>\n      {showCluster ? (\n        <RelatedDocumentButton onClick={() => toggleShowCluster?.(id)}>\n          <Typography fontSize={14}>Related documents</Typography>\n          <ExpandLess />\n        </RelatedDocumentButton>\n      ) : null}\n      <Collapse in={showCluster} id={isCluster ? transitionId(id) : undefined}>\n        <StoryCardClusterStyled>\n          <ShowMoreList\n            items={cluster}\n            paginate={3}\n            showNextItemsNum\n            onShowLess={onShowLess}\n            renderItem={(clust, idx) => (\n              <StoryCard\n                query={query}\n                key={clust.id}\n                story={clust}\n                index={idx}\n                keywords={keywords}\n                documentQuery={documentQuery}\n                isClusteredStory\n                parentId={id}\n                parentIndex={index}\n                isFeedbackMode={isFeedbackMode}\n                hideRating\n              />\n            )}\n          />\n        </StoryCardClusterStyled>\n      </Collapse>\n    </div>\n  )\n}\n\nexport { StoryCard }\n"],"names":["StoryCard","story","index","query","documentQuery","keywords","showCluster","toggleShowCluster","isFeedbackMode","isClusteredStory","parentId","parentIndex","hideRating","queryId","isMobile","useDeviceInfo","document","documentId","setHashParams","useHashParams","id","hd","sentences","documentScope","srcName","ts","language","contentType","srcKey","isCluster","isClusterStory","cluster","isPrivate","onShowLess","useCallback","scrollToStoryTop","undefined","setDocumentData","useDocumentViewerData","redirectToContent","useExternalLinkUrl","relevantSentenceId","getRelevantSentenceId","displaySentence","isLoading","useDisplaySentence","pnum","snum","entities","sentenceEntities","headlineSentences","gtmData","clusterDocumentId","clusterIndex","sentenceId","handleClick","event","stopPropagation","tagManagerEvents","storyCard","action","url","rpProviderId","text","private","handleMouseEnter","handleToggleCluster","debounceHandleMouseEnter","debounce","isVisited","useVisitedDocument","div","style","paddingBottom","StoryCardStyled","className","classes","storyCardRoot","onClick","onMouseEnter","Box","sx","width","storyId","StoryCardHeader","span","headlineContainer","EllipsisTooltip","disabled","tooltipText","tooltipStyles","maxWidth","typographyProps","whiteSpace","Link","variant","data-testid","removeFileExtension","StoryCardHeaderInfo","DocumentIcon","sourceRank","Typography","fontSize","mr","color","component","length","StoryCardDate","display","DateAndTranslatedInfo","timestamp","StoryCardStory","Skeleton","height","RpJsonContentBlockDisplay","finds","getRegExpKeywords","block","markupDetections","StoryCardRanking","headlineEntities","resultIndex","RelatedDocumentButton","ExpandLess","Collapse","in","transitionId","StoryCardClusterStyled","ShowMoreList","items","paginate","showNextItemsNum","renderItem","clust","idx"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}