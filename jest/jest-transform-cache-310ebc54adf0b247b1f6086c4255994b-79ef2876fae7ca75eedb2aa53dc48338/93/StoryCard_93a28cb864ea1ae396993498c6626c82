36b1aef316a63fec55ed5f6bc4f1da84
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "StoryCard", {
    enumerable: true,
    get: function() {
        return StoryCard;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _apitypes = require("@rp/common/api-types");
const _utils = require("@rp/common/utils");
const _compositecomponents = require("@rp/react/web/common/composite-components");
const _documentviewer = require("@rp/react/web/common/document-viewer");
const _hooks = require("@rp/react/web/common/hooks");
const _providers = require("@rp/react/web/common/providers");
const _utils1 = require("@rp/react/web/common/vendors/utils");
const _cqsutils = require("@rp/react/web/cqs-utils");
const _core = require("@rp/react/web/mui/core");
const _icons = require("@rp/react/web/mui/icons");
const _rpjson = require("@rp/react/web/rpjson");
const _StoryCardstyles = require("../StoryCard.styles");
const _scrollToStoryTop = require("../scrollToStoryTop");
const _useDisplaySentence = require("./useDisplaySentence");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
const StoryCard = ({ story, index, query, documentQuery, keywords = [], showCluster = false, toggleShowCluster, isFeedbackMode = false, isClusteredStory, parentId, parentIndex, hideRating, queryId })=>{
    const { isMobile } = (0, _hooks.useDeviceInfo)();
    const [{ document: documentId }, setHashParams] = (0, _hooks.useHashParams)();
    const { id, hd, sentences, documentScope, srcName = "Unknown Source", ts, language = "English", contentType, srcKey } = story;
    const isCluster = (0, _apitypes.isClusterStory)(story);
    const cluster = isCluster ? story.cluster : [];
    const isPrivate = documentScope === "files";
    const onShowLess = (0, _react.useCallback)(()=>(0, _scrollToStoryTop.scrollToStoryTop)(undefined, id), [
        id
    ]);
    const { setDocumentData } = (0, _providers.useDocumentViewerData)();
    const { redirectToContent } = (0, _hooks.useExternalLinkUrl)(id);
    const relevantSentenceId = (0, _cqsutils.getRelevantSentenceId)(story);
    const { displaySentence, isLoading } = (0, _useDisplaySentence.useDisplaySentence)(sentences, id);
    const { pnum, snum, entities: sentenceEntities = [] } = displaySentence;
    const { entities: headlineSentences = [] } = sentences[0].pnum === 0 ? sentences[0] : {};
    const gtmData = {
        documentId: parentId !== null && parentId !== void 0 ? parentId : id,
        index: parentIndex !== null && parentIndex !== void 0 ? parentIndex : index,
        clusterDocumentId: isClusteredStory ? id : undefined,
        clusterIndex: isClusteredStory ? index : undefined,
        sentenceId: `${id}-${pnum}-${snum}`,
        queryId
    };
    const handleClick = (event)=>{
        event.stopPropagation();
        _utils1.tagManagerEvents.storyCard(_object_spread({
            action: "click"
        }, gtmData));
        if (story.url && story.rpProviderId === "MRVR") {
            redirectToContent(story.url, sentences[0].text);
            return;
        }
        setDocumentData({
            documentId: id,
            documentScope,
            language,
            query: documentQuery,
            queryId
        });
        isPrivate ? setHashParams({
            document: id,
            private: "true"
        }) : setHashParams({
            document: id
        });
    };
    const handleMouseEnter = ()=>{
        _utils1.tagManagerEvents.storyCard(_object_spread({
            action: "hover"
        }, gtmData));
    };
    const handleToggleCluster = (event)=>{
        event.stopPropagation();
        toggleShowCluster === null || toggleShowCluster === void 0 ? void 0 : toggleShowCluster(id);
        _utils1.tagManagerEvents.storyCard(_object_spread({
            action: "open-cluster"
        }, gtmData));
    };
    const debounceHandleMouseEnter = (0, _core.debounce)(handleMouseEnter, 500);
    // Change color visited document
    const isVisited = (0, _hooks.useVisitedDocument)(id);
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        style: {
            paddingBottom: "8px"
        },
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_StoryCardstyles.StoryCardStyled, {
                className: _StoryCardstyles.classes.storyCardRoot,
                onClick: handleClick,
                onMouseEnter: debounceHandleMouseEnter,
                showCluster: showCluster,
                isVisited: isVisited,
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                    sx: {
                        width: 1
                    },
                    id: isCluster ? (0, _scrollToStoryTop.storyId)(id) : undefined,
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_StoryCardstyles.StoryCardHeader, {
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                className: _StoryCardstyles.classes.headlineContainer,
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.EllipsisTooltip, {
                                    disabled: !!documentId,
                                    tooltipText: hd,
                                    tooltipStyles: {
                                        maxWidth: 350
                                    },
                                    typographyProps: {
                                        style: {
                                            whiteSpace: isMobile ? undefined : "nowrap"
                                        }
                                    },
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Link, {
                                        variant: "body2",
                                        "data-testid": `story-headLine-${id}`,
                                        children: !isPrivate ? hd : (0, _utils.removeFileExtension)(hd)
                                    })
                                })
                            })
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)(_StoryCardstyles.StoryCardHeaderInfo, {
                            "data-testid": `story-headerInfo-${id}`,
                            children: [
                                documentScope !== undefined ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.DocumentIcon, {
                                    contentType: contentType,
                                    documentScope: documentScope,
                                    text: !isPrivate ? srcName : null,
                                    srcKey: srcKey
                                }) : null,
                                isFeedbackMode && (story === null || story === void 0 ? void 0 : story.sourceRank) ? /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Typography, {
                                    sx: {
                                        fontSize: "12px",
                                        mr: "3px",
                                        color: "primary.main"
                                    },
                                    component: "span",
                                    children: [
                                        "(",
                                        story.sourceRank,
                                        ")"
                                    ]
                                }) : null,
                                cluster.length ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Link, {
                                    component: "button",
                                    onClick: handleToggleCluster,
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_compositecomponents.StoryCardDate, {
                                        sx: {
                                            color: "primary.light",
                                            display: "block"
                                        },
                                        children: [
                                            "+",
                                            cluster.length,
                                            " more"
                                        ]
                                    })
                                }) : null,
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_documentviewer.DateAndTranslatedInfo, {
                                    language: isMobile && cluster.length ? undefined : language,
                                    timestamp: ts
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            children: [
                                !!pnum && pnum !== 0 && /*#__PURE__*/ (0, _jsxruntime.jsx)(_StoryCardstyles.StoryCardStory, {
                                    "data-testid": `story-text-${id}`,
                                    children: isLoading ? /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Skeleton, {
                                                width: "100%",
                                                height: 16
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Skeleton, {
                                                width: "50%",
                                                height: 16
                                            })
                                        ]
                                    }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_rpjson.RpJsonContentBlockDisplay, {
                                        finds: (0, _utils.getRegExpKeywords)(keywords),
                                        block: displaySentence,
                                        markupDetections: true
                                    })
                                }),
                                isFeedbackMode && /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.StoryCardRanking, {
                                    documentId: story.id,
                                    headlineEntities: headlineSentences,
                                    hideRating: hideRating,
                                    parentIndex: parentIndex,
                                    resultIndex: index,
                                    sentenceEntities: pnum === 0 ? [] : sentenceEntities,
                                    sentenceId: relevantSentenceId
                                })
                            ]
                        })
                    ]
                })
            }),
            showCluster ? /*#__PURE__*/ (0, _jsxruntime.jsxs)(_StoryCardstyles.RelatedDocumentButton, {
                onClick: ()=>toggleShowCluster === null || toggleShowCluster === void 0 ? void 0 : toggleShowCluster(id),
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                        fontSize: 14,
                        children: "Related documents"
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.ExpandLess, {})
                ]
            }) : null,
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Collapse, {
                in: showCluster,
                id: isCluster ? (0, _scrollToStoryTop.transitionId)(id) : undefined,
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_StoryCardstyles.StoryCardClusterStyled, {
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.ShowMoreList, {
                        items: cluster,
                        paginate: 3,
                        showNextItemsNum: true,
                        onShowLess: onShowLess,
                        renderItem: (clust, idx)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(StoryCard, {
                                query: query,
                                story: clust,
                                index: idx,
                                keywords: keywords,
                                documentQuery: documentQuery,
                                isClusteredStory: true,
                                parentId: id,
                                parentIndex: index,
                                isFeedbackMode: isFeedbackMode,
                                hideRating: true
                            }, clust.id)
                    })
                })
            })
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,