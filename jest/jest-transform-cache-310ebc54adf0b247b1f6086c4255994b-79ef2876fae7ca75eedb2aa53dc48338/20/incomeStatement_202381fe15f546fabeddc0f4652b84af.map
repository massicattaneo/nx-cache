{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/watchlists/src/lib/WatchlistDataTabs/tables/incomeStatement.tsx"],"sourcesContent":["import { RequestQuoteOutlined } from \"@rp/react/web/mui/icons\"\nimport \"@tanstack/react-table\"\nimport { companyIncomeStatement } from \"../endpoints/companyIncomeStatement\"\nimport { genericTable } from \"../genericTable\"\nimport { createCacheHeaderInfo } from \"../utils/cacheTimeHelper\"\n\nconst incomeStatement = genericTable({\n  tableName: \"incomeStatement\",\n  tableLabel: \"Income Statement\",\n  tableIcon: <RequestQuoteOutlined />,\n  defaultVisible: [\n    { endpoint: \"companyIncomeStatement\", columnKey: [\"fiscalYear\", \"period\"] },\n    { endpoint: \"companyIncomeStatement\", columnKey: \"revenue\" },\n    { endpoint: \"companyIncomeStatement\", columnKey: \"grossProfit\" },\n    { endpoint: \"companyIncomeStatement\", columnKey: \"netIncome\" },\n  ],\n  headerInfo: createCacheHeaderInfo(\"Income Statement\"),\n  columns: [\n    companyIncomeStatement.fiscalYearAndPeriod(\"incomeStatement\"),\n    companyIncomeStatement.revenue(\"incomeStatement\"),\n    companyIncomeStatement.costOfRevenue(\"incomeStatement\"),\n    companyIncomeStatement.grossProfit(\"incomeStatement\"),\n    companyIncomeStatement.netIncome(\"incomeStatement\"),\n    companyIncomeStatement.researchAndDevelopmentExpenses(\"incomeStatement\"),\n    companyIncomeStatement.generalAndAdministrativeExpenses(\"incomeStatement\"),\n    companyIncomeStatement.sellingAndMarketingExpenses(\"incomeStatement\"),\n    companyIncomeStatement.sellingGeneralAndAdministrativeExpenses(\"incomeStatement\"),\n    companyIncomeStatement.otherExpenses(\"incomeStatement\"),\n    companyIncomeStatement.operatingExpenses(\"incomeStatement\"),\n    companyIncomeStatement.costAndExpenses(\"incomeStatement\"),\n    companyIncomeStatement.netInterestIncome(\"incomeStatement\"),\n    companyIncomeStatement.interestIncome(\"incomeStatement\"),\n    companyIncomeStatement.interestExpense(\"incomeStatement\"),\n    companyIncomeStatement.depreciationAndAmortization(\"incomeStatement\"),\n    companyIncomeStatement.ebitda(\"incomeStatement\"),\n    companyIncomeStatement.ebit(\"incomeStatement\"),\n    companyIncomeStatement.nonOperatingIncomeExcludingInterest(\"incomeStatement\"),\n    companyIncomeStatement.operatingIncome(\"incomeStatement\"),\n    companyIncomeStatement.totalOtherIncomeExpensesNet(\"incomeStatement\"),\n    companyIncomeStatement.incomeBeforeTax(\"incomeStatement\"),\n    companyIncomeStatement.incomeTaxExpense(\"incomeStatement\"),\n    companyIncomeStatement.netIncomeFromContinuingOperations(\"incomeStatement\"),\n    companyIncomeStatement.netIncomeFromDiscontinuedOperations(\"incomeStatement\"),\n    companyIncomeStatement.otherAdjustmentsToNetIncome(\"incomeStatement\"),\n    companyIncomeStatement.netIncomeDeductions(\"incomeStatement\"),\n    companyIncomeStatement.bottomLineNetIncome(\"incomeStatement\"),\n    companyIncomeStatement.eps(\"incomeStatement\"),\n    companyIncomeStatement.epsDiluted(\"incomeStatement\"),\n    companyIncomeStatement.weightedAverageShsOut(\"incomeStatement\"),\n    companyIncomeStatement.weightedAverageShsOutDil(\"incomeStatement\"),\n  ],\n})\n\nexport { incomeStatement }\n"],"names":["incomeStatement","genericTable","tableName","tableLabel","tableIcon","RequestQuoteOutlined","defaultVisible","endpoint","columnKey","headerInfo","createCacheHeaderInfo","columns","companyIncomeStatement","fiscalYearAndPeriod","revenue","costOfRevenue","grossProfit","netIncome","researchAndDevelopmentExpenses","generalAndAdministrativeExpenses","sellingAndMarketingExpenses","sellingGeneralAndAdministrativeExpenses","otherExpenses","operatingExpenses","costAndExpenses","netInterestIncome","interestIncome","interestExpense","depreciationAndAmortization","ebitda","ebit","nonOperatingIncomeExcludingInterest","operatingIncome","totalOtherIncomeExpensesNet","incomeBeforeTax","incomeTaxExpense","netIncomeFromContinuingOperations","netIncomeFromDiscontinuedOperations","otherAdjustmentsToNetIncome","netIncomeDeductions","bottomLineNetIncome","eps","epsDiluted","weightedAverageShsOut","weightedAverageShsOutDil"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAqDSA;;;eAAAA;;;;uBArD4B;QAC9B;wCACgC;8BACV;iCACS;AAEtC,MAAMA,kBAAkBC,IAAAA,0BAAY,EAAC;IACnCC,WAAW;IACXC,YAAY;IACZC,yBAAW,qBAACC,2BAAoB;IAChCC,gBAAgB;QACd;YAAEC,UAAU;YAA0BC,WAAW;gBAAC;gBAAc;aAAS;QAAC;QAC1E;YAAED,UAAU;YAA0BC,WAAW;QAAU;QAC3D;YAAED,UAAU;YAA0BC,WAAW;QAAc;QAC/D;YAAED,UAAU;YAA0BC,WAAW;QAAY;KAC9D;IACDC,YAAYC,IAAAA,sCAAqB,EAAC;IAClCC,SAAS;QACPC,8CAAsB,CAACC,mBAAmB,CAAC;QAC3CD,8CAAsB,CAACE,OAAO,CAAC;QAC/BF,8CAAsB,CAACG,aAAa,CAAC;QACrCH,8CAAsB,CAACI,WAAW,CAAC;QACnCJ,8CAAsB,CAACK,SAAS,CAAC;QACjCL,8CAAsB,CAACM,8BAA8B,CAAC;QACtDN,8CAAsB,CAACO,gCAAgC,CAAC;QACxDP,8CAAsB,CAACQ,2BAA2B,CAAC;QACnDR,8CAAsB,CAACS,uCAAuC,CAAC;QAC/DT,8CAAsB,CAACU,aAAa,CAAC;QACrCV,8CAAsB,CAACW,iBAAiB,CAAC;QACzCX,8CAAsB,CAACY,eAAe,CAAC;QACvCZ,8CAAsB,CAACa,iBAAiB,CAAC;QACzCb,8CAAsB,CAACc,cAAc,CAAC;QACtCd,8CAAsB,CAACe,eAAe,CAAC;QACvCf,8CAAsB,CAACgB,2BAA2B,CAAC;QACnDhB,8CAAsB,CAACiB,MAAM,CAAC;QAC9BjB,8CAAsB,CAACkB,IAAI,CAAC;QAC5BlB,8CAAsB,CAACmB,mCAAmC,CAAC;QAC3DnB,8CAAsB,CAACoB,eAAe,CAAC;QACvCpB,8CAAsB,CAACqB,2BAA2B,CAAC;QACnDrB,8CAAsB,CAACsB,eAAe,CAAC;QACvCtB,8CAAsB,CAACuB,gBAAgB,CAAC;QACxCvB,8CAAsB,CAACwB,iCAAiC,CAAC;QACzDxB,8CAAsB,CAACyB,mCAAmC,CAAC;QAC3DzB,8CAAsB,CAAC0B,2BAA2B,CAAC;QACnD1B,8CAAsB,CAAC2B,mBAAmB,CAAC;QAC3C3B,8CAAsB,CAAC4B,mBAAmB,CAAC;QAC3C5B,8CAAsB,CAAC6B,GAAG,CAAC;QAC3B7B,8CAAsB,CAAC8B,UAAU,CAAC;QAClC9B,8CAAsB,CAAC+B,qBAAqB,CAAC;QAC7C/B,8CAAsB,CAACgC,wBAAwB,CAAC;KACjD;AACH"}