{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/common/utils/src/lib/csv-to-json/csv-to-json.ts"],"sourcesContent":["type Options = {\n  formatFields?: (rawField: string) => string\n}\n\nexport const csvToJson = (csv: string, options?: Options) => {\n  const json: Array<Record<string, string>> = []\n  const [firstLine] = csv.split(\"\\n\")\n  const rawFields = firstLine.split(\",\").map(key => key.trim())\n  const fields = options?.formatFields ? rawFields.map(options.formatFields) : rawFields\n  let body = csv.replace(`${firstLine}\\n`, \"\")\n  while (body.length > 0) {\n    const line: Record<string, string> = {}\n    while (Object.keys(line).length < fields.length) {\n      let piece = \"\"\n      const startWithDoubleQuotes = body.startsWith('\"')\n      const splitter = Object.keys(line).length === fields.length - 1 ? \"\\n\" : \",\"\n      if (!startWithDoubleQuotes) {\n        piece = body.split(splitter)[0]\n        body = body.replace(`${piece}${splitter}`, \"\")\n      } else {\n        piece = body.split('\",')[0].replace('\"', \"\")\n        body = body.replace(`\"${piece}\"${splitter}`, \"\")\n      }\n      line[fields[Object.keys(line).length]] = piece\n    }\n    json.push(line)\n  }\n  return { json, fields }\n}\n"],"names":["csvToJson","csv","options","json","firstLine","split","rawFields","map","key","trim","fields","formatFields","body","replace","length","line","Object","keys","piece","startWithDoubleQuotes","startsWith","splitter","push"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAIaA;;;eAAAA;;;AAAN,MAAMA,YAAY,CAACC,KAAaC;IACrC,MAAMC,OAAsC,EAAE;IAC9C,MAAM,CAACC,UAAU,GAAGH,IAAII,KAAK,CAAC;IAC9B,MAAMC,YAAYF,UAAUC,KAAK,CAAC,KAAKE,GAAG,CAACC,CAAAA,MAAOA,IAAIC,IAAI;IAC1D,MAAMC,SAASR,CAAAA,oBAAAA,8BAAAA,QAASS,YAAY,IAAGL,UAAUC,GAAG,CAACL,QAAQS,YAAY,IAAIL;IAC7E,IAAIM,OAAOX,IAAIY,OAAO,CAAC,CAAC,EAAET,UAAU,EAAE,CAAC,EAAE;IACzC,MAAOQ,KAAKE,MAAM,GAAG,EAAG;QACtB,MAAMC,OAA+B,CAAC;QACtC,MAAOC,OAAOC,IAAI,CAACF,MAAMD,MAAM,GAAGJ,OAAOI,MAAM,CAAE;YAC/C,IAAII,QAAQ;YACZ,MAAMC,wBAAwBP,KAAKQ,UAAU,CAAC;YAC9C,MAAMC,WAAWL,OAAOC,IAAI,CAACF,MAAMD,MAAM,KAAKJ,OAAOI,MAAM,GAAG,IAAI,OAAO;YACzE,IAAI,CAACK,uBAAuB;gBAC1BD,QAAQN,KAAKP,KAAK,CAACgB,SAAS,CAAC,EAAE;gBAC/BT,OAAOA,KAAKC,OAAO,CAAC,CAAC,EAAEK,MAAM,EAAEG,SAAS,CAAC,EAAE;YAC7C,OAAO;gBACLH,QAAQN,KAAKP,KAAK,CAAC,KAAK,CAAC,EAAE,CAACQ,OAAO,CAAC,KAAK;gBACzCD,OAAOA,KAAKC,OAAO,CAAC,CAAC,CAAC,EAAEK,MAAM,CAAC,EAAEG,SAAS,CAAC,EAAE;YAC/C;YACAN,IAAI,CAACL,MAAM,CAACM,OAAOC,IAAI,CAACF,MAAMD,MAAM,CAAC,CAAC,GAAGI;QAC3C;QACAf,KAAKmB,IAAI,CAACP;IACZ;IACA,OAAO;QAAEZ;QAAMO;IAAO;AACxB"}