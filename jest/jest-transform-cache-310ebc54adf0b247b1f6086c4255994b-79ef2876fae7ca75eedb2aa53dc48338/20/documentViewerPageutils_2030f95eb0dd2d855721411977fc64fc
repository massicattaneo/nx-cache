a92baa96332400ee927a42ccf0502791
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    drawSourceHighlight: function() {
        return drawSourceHighlight;
    },
    getHasDocAndIsApple: function() {
        return getHasDocAndIsApple;
    },
    getIsAppleChrome: function() {
        return getIsAppleChrome;
    },
    getIsApplePWA: function() {
        return getIsApplePWA;
    },
    getIsHighlightValid: function() {
        return getIsHighlightValid;
    }
});
const getIsAppleChrome = ({ isMacOS, isIOS, isSafari })=>(isMacOS || isIOS) && !isSafari;
const getIsApplePWA = ({ isMacOS, isIOS, isPWA })=>(isMacOS || isIOS) && isPWA;
const getHasDocAndIsApple = ({ documentId, isAppleChrome, isApplePWA })=>!!documentId && (isAppleChrome || isApplePWA);
const HIGHLIGHT_PADDING = 0.0025;
const drawSourceHighlight = (page, boundingBox)=>{
    if (!page) return;
    const ctx = page.getContext("2d");
    if (!ctx) return;
    const { height, width } = page;
    ctx.fillStyle = "#0589FF33";
    const startPadding = HIGHLIGHT_PADDING;
    const endPadding = HIGHLIGHT_PADDING * 2;
    const rectX = width * (boundingBox.left - startPadding);
    const rectY = height * (boundingBox.top - startPadding);
    const rectWidth = width * (endPadding + boundingBox.right - boundingBox.left);
    const rectHeight = height * (endPadding + boundingBox.bottom - boundingBox.top);
    ctx.fillRect(rectX, rectY, rectWidth, rectHeight);
};
const getIsHighlightValid = (boundingBox)=>![
        boundingBox.top,
        boundingBox.left
    ].includes(0) && ![
        boundingBox.bottom,
        boundingBox.right
    ].includes(1) && boundingBox.page > 0;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2RvY3VtZW50LXZpZXdlci9zcmMvbGliL0RvY3VtZW50Vmlld2VyUGFnZS9ob29rcy9kb2N1bWVudFZpZXdlclBhZ2UudXRpbHMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQm91bmRpbmdCb3ggfSBmcm9tIFwiQHJwL2NvbW1vbi9hcGktdHlwZXNcIlxuXG5jb25zdCBnZXRJc0FwcGxlQ2hyb21lID0gKHtcbiAgaXNNYWNPUyxcbiAgaXNJT1MsXG4gIGlzU2FmYXJpLFxufToge1xuICBpc01hY09TOiBib29sZWFuXG4gIGlzSU9TOiBib29sZWFuXG4gIGlzU2FmYXJpOiBib29sZWFuXG59KTogYm9vbGVhbiA9PiAoaXNNYWNPUyB8fCBpc0lPUykgJiYgIWlzU2FmYXJpXG5cbmNvbnN0IGdldElzQXBwbGVQV0EgPSAoe1xuICBpc01hY09TLFxuICBpc0lPUyxcbiAgaXNQV0EsXG59OiB7XG4gIGlzTWFjT1M6IGJvb2xlYW5cbiAgaXNJT1M6IGJvb2xlYW5cbiAgaXNQV0E6IGJvb2xlYW5cbn0pOiBib29sZWFuID0+IChpc01hY09TIHx8IGlzSU9TKSAmJiBpc1BXQVxuXG5jb25zdCBnZXRIYXNEb2NBbmRJc0FwcGxlID0gKHtcbiAgZG9jdW1lbnRJZCxcbiAgaXNBcHBsZUNocm9tZSxcbiAgaXNBcHBsZVBXQSxcbn06IHtcbiAgZG9jdW1lbnRJZDogc3RyaW5nXG4gIGlzQXBwbGVDaHJvbWU6IGJvb2xlYW5cbiAgaXNBcHBsZVBXQTogYm9vbGVhblxufSk6IGJvb2xlYW4gPT4gISFkb2N1bWVudElkICYmIChpc0FwcGxlQ2hyb21lIHx8IGlzQXBwbGVQV0EpXG5cbmNvbnN0IEhJR0hMSUdIVF9QQURESU5HID0gMC4wMDI1XG5jb25zdCBkcmF3U291cmNlSGlnaGxpZ2h0ID0gKHBhZ2U6IEhUTUxDYW52YXNFbGVtZW50IHwgbnVsbCwgYm91bmRpbmdCb3g6IEJvdW5kaW5nQm94KTogdm9pZCA9PiB7XG4gIGlmICghcGFnZSkgcmV0dXJuXG5cbiAgY29uc3QgY3R4ID0gcGFnZS5nZXRDb250ZXh0KFwiMmRcIilcbiAgaWYgKCFjdHgpIHJldHVyblxuXG4gIGNvbnN0IHsgaGVpZ2h0LCB3aWR0aCB9ID0gcGFnZVxuXG4gIGN0eC5maWxsU3R5bGUgPSBcIiMwNTg5RkYzM1wiXG5cbiAgY29uc3Qgc3RhcnRQYWRkaW5nID0gSElHSExJR0hUX1BBRERJTkdcbiAgY29uc3QgZW5kUGFkZGluZyA9IEhJR0hMSUdIVF9QQURESU5HICogMlxuXG4gIGNvbnN0IHJlY3RYID0gd2lkdGggKiAoYm91bmRpbmdCb3gubGVmdCAtIHN0YXJ0UGFkZGluZylcbiAgY29uc3QgcmVjdFkgPSBoZWlnaHQgKiAoYm91bmRpbmdCb3gudG9wIC0gc3RhcnRQYWRkaW5nKVxuICBjb25zdCByZWN0V2lkdGggPSB3aWR0aCAqIChlbmRQYWRkaW5nICsgYm91bmRpbmdCb3gucmlnaHQgLSBib3VuZGluZ0JveC5sZWZ0KVxuICBjb25zdCByZWN0SGVpZ2h0ID0gaGVpZ2h0ICogKGVuZFBhZGRpbmcgKyBib3VuZGluZ0JveC5ib3R0b20gLSBib3VuZGluZ0JveC50b3ApXG5cbiAgY3R4LmZpbGxSZWN0KHJlY3RYLCByZWN0WSwgcmVjdFdpZHRoLCByZWN0SGVpZ2h0KVxufVxuXG5jb25zdCBnZXRJc0hpZ2hsaWdodFZhbGlkID0gKGJvdW5kaW5nQm94OiBCb3VuZGluZ0JveCkgPT5cbiAgIVtib3VuZGluZ0JveC50b3AsIGJvdW5kaW5nQm94LmxlZnRdLmluY2x1ZGVzKDApICYmXG4gICFbYm91bmRpbmdCb3guYm90dG9tLCBib3VuZGluZ0JveC5yaWdodF0uaW5jbHVkZXMoMSkgJiZcbiAgYm91bmRpbmdCb3gucGFnZSA+IDBcblxuZXhwb3J0IHtcbiAgZ2V0SXNBcHBsZUNocm9tZSxcbiAgZ2V0SXNBcHBsZVBXQSxcbiAgZ2V0SGFzRG9jQW5kSXNBcHBsZSxcbiAgZHJhd1NvdXJjZUhpZ2hsaWdodCxcbiAgZ2V0SXNIaWdobGlnaHRWYWxpZCxcbn1cbiJdLCJuYW1lcyI6WyJkcmF3U291cmNlSGlnaGxpZ2h0IiwiZ2V0SGFzRG9jQW5kSXNBcHBsZSIsImdldElzQXBwbGVDaHJvbWUiLCJnZXRJc0FwcGxlUFdBIiwiZ2V0SXNIaWdobGlnaHRWYWxpZCIsImlzTWFjT1MiLCJpc0lPUyIsImlzU2FmYXJpIiwiaXNQV0EiLCJkb2N1bWVudElkIiwiaXNBcHBsZUNocm9tZSIsImlzQXBwbGVQV0EiLCJISUdITElHSFRfUEFERElORyIsInBhZ2UiLCJib3VuZGluZ0JveCIsImN0eCIsImdldENvbnRleHQiLCJoZWlnaHQiLCJ3aWR0aCIsImZpbGxTdHlsZSIsInN0YXJ0UGFkZGluZyIsImVuZFBhZGRpbmciLCJyZWN0WCIsImxlZnQiLCJyZWN0WSIsInRvcCIsInJlY3RXaWR0aCIsInJpZ2h0IiwicmVjdEhlaWdodCIsImJvdHRvbSIsImZpbGxSZWN0IiwiaW5jbHVkZXMiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztJQStERUEsbUJBQW1CO2VBQW5CQTs7SUFEQUMsbUJBQW1CO2VBQW5CQTs7SUFGQUMsZ0JBQWdCO2VBQWhCQTs7SUFDQUMsYUFBYTtlQUFiQTs7SUFHQUMsbUJBQW1CO2VBQW5CQTs7O0FBOURGLE1BQU1GLG1CQUFtQixDQUFDLEVBQ3hCRyxPQUFPLEVBQ1BDLEtBQUssRUFDTEMsUUFBUSxFQUtULEdBQWMsQUFBQ0YsQ0FBQUEsV0FBV0MsS0FBSSxLQUFNLENBQUNDO0FBRXRDLE1BQU1KLGdCQUFnQixDQUFDLEVBQ3JCRSxPQUFPLEVBQ1BDLEtBQUssRUFDTEUsS0FBSyxFQUtOLEdBQWMsQUFBQ0gsQ0FBQUEsV0FBV0MsS0FBSSxLQUFNRTtBQUVyQyxNQUFNUCxzQkFBc0IsQ0FBQyxFQUMzQlEsVUFBVSxFQUNWQyxhQUFhLEVBQ2JDLFVBQVUsRUFLWCxHQUFjLENBQUMsQ0FBQ0YsY0FBZUMsQ0FBQUEsaUJBQWlCQyxVQUFTO0FBRTFELE1BQU1DLG9CQUFvQjtBQUMxQixNQUFNWixzQkFBc0IsQ0FBQ2EsTUFBZ0NDO0lBQzNELElBQUksQ0FBQ0QsTUFBTTtJQUVYLE1BQU1FLE1BQU1GLEtBQUtHLFVBQVUsQ0FBQztJQUM1QixJQUFJLENBQUNELEtBQUs7SUFFVixNQUFNLEVBQUVFLE1BQU0sRUFBRUMsS0FBSyxFQUFFLEdBQUdMO0lBRTFCRSxJQUFJSSxTQUFTLEdBQUc7SUFFaEIsTUFBTUMsZUFBZVI7SUFDckIsTUFBTVMsYUFBYVQsb0JBQW9CO0lBRXZDLE1BQU1VLFFBQVFKLFFBQVNKLENBQUFBLFlBQVlTLElBQUksR0FBR0gsWUFBVztJQUNyRCxNQUFNSSxRQUFRUCxTQUFVSCxDQUFBQSxZQUFZVyxHQUFHLEdBQUdMLFlBQVc7SUFDckQsTUFBTU0sWUFBWVIsUUFBU0csQ0FBQUEsYUFBYVAsWUFBWWEsS0FBSyxHQUFHYixZQUFZUyxJQUFJLEFBQUQ7SUFDM0UsTUFBTUssYUFBYVgsU0FBVUksQ0FBQUEsYUFBYVAsWUFBWWUsTUFBTSxHQUFHZixZQUFZVyxHQUFHLEFBQUQ7SUFFN0VWLElBQUllLFFBQVEsQ0FBQ1IsT0FBT0UsT0FBT0UsV0FBV0U7QUFDeEM7QUFFQSxNQUFNeEIsc0JBQXNCLENBQUNVLGNBQzNCLENBQUM7UUFBQ0EsWUFBWVcsR0FBRztRQUFFWCxZQUFZUyxJQUFJO0tBQUMsQ0FBQ1EsUUFBUSxDQUFDLE1BQzlDLENBQUM7UUFBQ2pCLFlBQVllLE1BQU07UUFBRWYsWUFBWWEsS0FBSztLQUFDLENBQUNJLFFBQVEsQ0FBQyxNQUNsRGpCLFlBQVlELElBQUksR0FBRyJ9