70a447cd6cc44bf1347c7a437c8f1b2c
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "ScrollCarousel", {
    enumerable: true,
    get: function() {
        return ScrollCarousel;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _hooks = require("@rp/react/web/common/hooks");
const _core = require("@rp/react/web/mui/core");
const _ScrollCarouselArrow = require("./ScrollCarouselArrow");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
const SAFE_AREA = 16;
const ScrollCarousel = ({ children, bgColor, onArrowMouseDown, sx })=>{
    const { isMobile } = (0, _hooks.useDeviceInfo)();
    const [visibleArrows, setVisibleArrows] = (0, _react.useState)({
        left: false,
        right: false
    });
    const container = (0, _react.useRef)(null);
    const showLeftArrow = visibleArrows.left;
    const showRightArrow = visibleArrows.right;
    const displayArrows = ({ amountScrolled, scrollWidth, elementWidth })=>{
        const shouldShowLeft = amountScrolled >= SAFE_AREA;
        const shouldShowRight = amountScrolled <= scrollWidth - elementWidth - SAFE_AREA;
        setVisibleArrows({
            left: shouldShowLeft,
            right: shouldShowRight
        });
    };
    const onArrowClick = (direction)=>{
        if (!container.current) {
            return;
        }
        const constant = direction === "left" ? -0.9 : 0.9;
        container.current.scrollBy({
            left: constant * container.current.offsetWidth,
            behavior: "smooth"
        });
    };
    const handleScroll = (0, _react.useCallback)((event)=>{
        const amountScrolled = event.currentTarget.scrollLeft;
        const elementWidth = event.currentTarget.offsetWidth;
        const scrollWidth = event.currentTarget.scrollWidth;
        displayArrows({
            amountScrolled,
            elementWidth,
            scrollWidth
        });
    }, []);
    (0, _react.useEffect)(()=>{
        if (container.current !== null) {
            displayArrows({
                amountScrolled: container.current.scrollLeft,
                elementWidth: container.current.offsetWidth,
                scrollWidth: container.current.scrollWidth
            });
        }
    }, [
        isMobile,
        children
    ]);
    const isDragging = (0, _react.useRef)(false);
    const lastDragPosition = (0, _react.useRef)(0);
    const handleMouseDown = (event)=>{
        isDragging.current = true;
        lastDragPosition.current = event.clientX;
    };
    const handleMouseMove = (event)=>{
        if (!isDragging.current) {
            return;
        }
        const scrollAmount = -1 * (event.clientX - lastDragPosition.current);
        event.currentTarget.scrollBy({
            left: scrollAmount
        });
        lastDragPosition.current = event.clientX;
    };
    const handleMouseUp = ()=>{
        isDragging.current = false;
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
        sx: _object_spread({
            position: "relative"
        }, sx),
        children: [
            showLeftArrow ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_ScrollCarouselArrow.ScrollCarouselArrow, {
                direction: "left",
                onClick: ()=>onArrowClick("left"),
                bgColor: bgColor,
                onMouseDown: onArrowMouseDown
            }) : null,
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                sx: {
                    display: "flex",
                    overflowX: "auto",
                    alignItems: "center",
                    backgroundColor: "transparent",
                    "&::-webkit-scrollbar": {
                        height: 0,
                        display: "none"
                    }
                },
                ref: container,
                onScroll: handleScroll,
                onMouseDown: isMobile ? undefined : handleMouseDown,
                onMouseMove: isMobile ? undefined : handleMouseMove,
                onMouseUp: isMobile ? undefined : handleMouseUp,
                onMouseLeave: isMobile ? undefined : handleMouseUp,
                children: children
            }),
            showRightArrow ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_ScrollCarouselArrow.ScrollCarouselArrow, {
                direction: "right",
                bgColor: bgColor,
                onClick: ()=>onArrowClick("right"),
                onMouseDown: onArrowMouseDown
            }) : null
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,