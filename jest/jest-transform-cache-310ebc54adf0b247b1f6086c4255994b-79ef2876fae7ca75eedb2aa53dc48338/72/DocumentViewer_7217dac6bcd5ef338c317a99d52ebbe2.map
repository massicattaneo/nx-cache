{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/document-viewer/src/lib/DocumentViewer.tsx"],"sourcesContent":["import { useCallback, useEffect, useRef, useState } from \"react\"\n// Hooks\nimport { getRegExpKeywords } from \"@rp/common/utils\"\nimport { RpJsonDocument } from \"@rp/react/rpjson/types\"\nimport { bigDataTheme } from \"@rp/react/theme\"\nimport {\n  MaxWidthContainer,\n  StoryCardScrollTopButton,\n} from \"@rp/react/web/common/composite-components\"\nimport {\n  useChunkStyles,\n  useDetectionStyles,\n  useEntitiesStyles,\n  useFindStyles,\n  useKeywordStyles,\n} from \"@rp/react/web/common/document-viewer\"\n// Styles\nimport { useDeviceInfo, useStopWatch } from \"@rp/react/web/common/hooks\"\nimport { tagManagerEvents } from \"@rp/react/web/common/vendors/utils\"\n// Components\nimport { Grid, Typography, useScrollTrigger } from \"@rp/react/web/mui/core\"\nimport { RpJsonAnnotationStyles, RpJsonBodyDisplay } from \"@rp/react/web/rpjson\"\nimport { useRpjsonScroll } from \"@rp/react/web/rpjson\"\nimport { getFindMatchesLength } from \"@rp/react/web/rpjson\"\nimport { CustomDocumentHeaderProps } from \"./DocumentViewer.types\"\nimport { DocumentViewerHeader } from \"./DocumentViewerHeader\"\nimport { DocumentViewerHeaderPaneVariant } from \"./DocumentViewerHeaderPaneVariant\"\nimport {\n  DocumentTextContainer,\n  RpJsonFixedContent,\n  RpJsonScrollWrapperStyled,\n} from \"./DocumentViewerPage.styles\"\nimport { observeElementHeight } from \"./helpers/observeElementHeight\"\nimport { useDocumentViewer } from \"./hooks/useDocumentViewer\"\n\ntype DocumentViewerProps = {\n  rpjsonDocument: RpJsonDocument\n  namespace: \"public\" | \"private\"\n  selectedDetection?: { pnum: number; snum: number }\n  fixedRef: HTMLDivElement | null\n  setFixedRef: (element: HTMLDivElement | null) => void\n  rpjsonHeaderOffset?: number\n  headerHeight: number\n  enableSentenceMarking?: boolean\n  shouldUseScrollTrigger: boolean\n  customDocumentHeaderProps?: CustomDocumentHeaderProps\n  customBackgroundColor?: string\n}\n\nfunction DocumentViewer({\n  rpjsonDocument,\n  namespace,\n  selectedDetection,\n  fixedRef,\n  setFixedRef,\n  headerHeight,\n  rpjsonHeaderOffset = headerHeight,\n  enableSentenceMarking,\n  shouldUseScrollTrigger,\n  customDocumentHeaderProps,\n  customBackgroundColor,\n}: DocumentViewerProps) {\n  const { isMobile } = useDeviceInfo()\n  const [markSentences, setMarkSentences] = useState<boolean>(false)\n  const [paddingTop, setPaddingTop] = useState<number | null>(null)\n  const viewHeight = document.documentElement.clientHeight || 0\n\n  const { scrollToSentence, scrollToFind, ref } = useRpjsonScroll({\n    offset: -viewHeight / 3 + (paddingTop ?? 0),\n    scrollBody: true,\n  })\n\n  const { matches, documentInfo, finds, queryId } = useDocumentViewer({\n    rpjsonDocument,\n    namespace,\n  })\n\n  const {\n    chunks,\n    selectedMatch,\n    setSelectedMatch,\n    hasQuery,\n    isLoading: areMatchesLoading,\n  } = matches\n  const lastMatchSelected = useRef<null | number>(null)\n  const { entities, documentScope, extension, language, isEmpty } = documentInfo\n  const { searchValue, setSearchValue, selectedFind, setSelectedFind, count, setCount } = finds\n\n  const highlights = [\n    ...useChunkStyles(chunks, selectedMatch, markSentences),\n    ...useFindStyles(searchValue, selectedFind),\n    ...useKeywordStyles(documentInfo.keywords, searchValue),\n    ...useDetectionStyles(selectedDetection?.pnum, selectedDetection?.snum),\n    ...useEntitiesStyles(entities, true),\n  ]\n\n  const toolbarActions = {\n    ...(enableSentenceMarking\n      ? { toggleSentences: (value: boolean) => setMarkSentences(value) }\n      : {}),\n  }\n\n  useEffect(() => {\n    if (matches.count === 0 && chunks.length === 0) window.scrollTo(0, 0)\n  }, [chunks.length, matches.count])\n\n  useEffect(() => {\n    if (!fixedRef) return\n    return observeElementHeight(fixedRef, () =>\n      setPaddingTop(prev => {\n        return Math.max(fixedRef.clientHeight + 5, prev ?? 0)\n      }),\n    )\n  }, [fixedRef])\n\n  useEffect(() => {\n    if (searchValue === \"\") {\n      return\n    }\n    setCount(getFindMatchesLength(ref.current))\n  }, [ref, searchValue, setCount])\n\n  useEffect(() => {\n    if (count !== 0) {\n      scrollToFind(0, selectedFind - 1)\n    }\n  }, [selectedFind, count]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Scroll to sentence\n  useEffect(() => {\n    if (\n      areMatchesLoading ||\n      chunks.length === 0 ||\n      lastMatchSelected.current === selectedMatch ||\n      paddingTop === null\n    ) {\n      return\n    }\n\n    const { pnum, snum } = chunks[selectedMatch].sentences[0]\n    scrollToSentence(pnum, snum)\n    lastMatchSelected.current = selectedMatch\n  }, [scrollToSentence, selectedMatch, areMatchesLoading, chunks, paddingTop])\n\n  useEffect(() => {\n    if (selectedDetection) {\n      scrollToSentence(selectedDetection.pnum, selectedDetection.snum)\n    }\n  }, [selectedDetection]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  const onFindChange = useCallback(\n    (value: string) => {\n      setSearchValue(value)\n      setSelectedFind(1)\n    },\n    [setSearchValue, setSelectedFind],\n  )\n\n  const onArrowsClick = (index: number) => {\n    setSelectedFind(index)\n    scrollToFind(0, index - 1)\n  }\n\n  // Track document reading time\n  const stopWatch = useStopWatch()\n\n  useEffect(() => {\n    stopWatch.start()\n    return () => {\n      stopWatch.stop()\n      tagManagerEvents.documentClosed({\n        documentId: rpjsonDocument.document.rp_document_id,\n        timeSpent: stopWatch.times.current.totalTime,\n        isLimited: false,\n        queryId,\n      })\n      stopWatch.reset()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const onMatchesChange = (index: number) => {\n    setSelectedMatch(index)\n\n    // Send event to GTM\n    tagManagerEvents.documentReading({\n      documentId: rpjsonDocument.document.rp_document_id,\n      matchRead: index,\n      matchesCount: matches.count,\n      isLimited: false,\n      queryId,\n    })\n  }\n\n  const isPane = customDocumentHeaderProps?.variant === \"pane\"\n  const rpjsonFixedContentXS = isPane ? undefined : isMobile ? 12 : 6\n  const trigger = useScrollTrigger({ threshold: headerHeight })\n\n  return (\n    <RpJsonScrollWrapperStyled ref={ref} isPane={isPane}>\n      {isPane && (\n        <DocumentViewerHeaderPaneVariant\n          rpjson={rpjsonDocument}\n          fileExtension={extension}\n          language={language}\n          customDocumentHeaderProps={customDocumentHeaderProps}\n        />\n      )}\n\n      <RpJsonAnnotationStyles highlights={highlights}>\n        {!isPane && (\n          <MaxWidthContainer\n            sx={{\n              position: isMobile ? undefined : \"fixed\",\n              transition: \"transform 225ms cubic-bezier(0, 0, 0.2, 1) 0ms\",\n              transform:\n                shouldUseScrollTrigger && trigger\n                  ? `translateY(${rpjsonHeaderOffset - headerHeight - 1}px)`\n                  : \"none\",\n              mt: 0,\n              pl: \"0px !important\",\n              zIndex: 5,\n            }}\n            ref={setFixedRef}\n          >\n            <Grid>\n              <RpJsonFixedContent\n                item\n                xs={rpjsonFixedContentXS}\n                sx={{\n                  backgroundColor: customBackgroundColor ?? \"surface.main\",\n                  paddingRight: isMobile ? 0 : \"105px\",\n                  width: \"100%\",\n                  position: undefined,\n                }}\n                isMobile={isMobile}\n              >\n                <DocumentViewerHeader\n                  actions={isMobile ? {} : toolbarActions}\n                  areMatchesLoading={areMatchesLoading}\n                  currentMatch={selectedMatch}\n                  documentScope={documentScope}\n                  enableMatches={hasQuery || chunks.length > 0}\n                  fileExtension={extension}\n                  foundCount={count}\n                  language={language}\n                  markSentences={markSentences}\n                  matchesCount={chunks.length}\n                  namespace={namespace}\n                  onArrowsClick={onArrowsClick}\n                  onChange={isMobile ? undefined : onFindChange}\n                  onMatchesChange={onMatchesChange}\n                  rpjson={rpjsonDocument}\n                  value=\"\"\n                  disableShrinking={isMobile}\n                  customBackground={customBackgroundColor}\n                />\n              </RpJsonFixedContent>\n            </Grid>\n          </MaxWidthContainer>\n        )}\n\n        <DocumentTextContainer\n          style={{\n            paddingTop: !isMobile && paddingTop ? paddingTop : 0,\n            backgroundColor: isPane ? bigDataTheme.palette.elevation.dp01 : undefined,\n            margin: isPane ? \"108px 16px 16px 16px\" : undefined,\n            paddingRight: isPane ? \"28px\" : undefined,\n          }}\n        >\n          <RpJsonBodyDisplay\n            rpjson={rpjsonDocument}\n            finds={[searchValue, ...getRegExpKeywords(documentInfo.keywords)]}\n          />\n\n          {isEmpty && <Typography sx={{ color: \"text.primary\" }}>Headline only</Typography>}\n        </DocumentTextContainer>\n      </RpJsonAnnotationStyles>\n\n      {!isPane && <StoryCardScrollTopButton infiniteScrollContainerRef={ref} scrollBody />}\n    </RpJsonScrollWrapperStyled>\n  )\n}\n\nexport { DocumentViewer }\nexport type { DocumentViewerProps }\n"],"names":["DocumentViewer","rpjsonDocument","namespace","selectedDetection","fixedRef","setFixedRef","headerHeight","rpjsonHeaderOffset","enableSentenceMarking","shouldUseScrollTrigger","customDocumentHeaderProps","customBackgroundColor","isMobile","useDeviceInfo","markSentences","setMarkSentences","useState","paddingTop","setPaddingTop","viewHeight","document","documentElement","clientHeight","scrollToSentence","scrollToFind","ref","useRpjsonScroll","offset","scrollBody","matches","documentInfo","finds","queryId","useDocumentViewer","chunks","selectedMatch","setSelectedMatch","hasQuery","isLoading","areMatchesLoading","lastMatchSelected","useRef","entities","documentScope","extension","language","isEmpty","searchValue","setSearchValue","selectedFind","setSelectedFind","count","setCount","highlights","useChunkStyles","useFindStyles","useKeywordStyles","keywords","useDetectionStyles","pnum","snum","useEntitiesStyles","toolbarActions","toggleSentences","value","useEffect","length","window","scrollTo","observeElementHeight","prev","Math","max","getFindMatchesLength","current","sentences","onFindChange","useCallback","onArrowsClick","index","stopWatch","useStopWatch","start","stop","tagManagerEvents","documentClosed","documentId","rp_document_id","timeSpent","times","totalTime","isLimited","reset","onMatchesChange","documentReading","matchRead","matchesCount","isPane","variant","rpjsonFixedContentXS","undefined","trigger","useScrollTrigger","threshold","RpJsonScrollWrapperStyled","DocumentViewerHeaderPaneVariant","rpjson","fileExtension","RpJsonAnnotationStyles","MaxWidthContainer","sx","position","transition","transform","mt","pl","zIndex","Grid","RpJsonFixedContent","item","xs","backgroundColor","paddingRight","width","DocumentViewerHeader","actions","currentMatch","enableMatches","foundCount","onChange","disableShrinking","customBackground","DocumentTextContainer","style","bigDataTheme","palette","elevation","dp01","margin","RpJsonBodyDisplay","getRegExpKeywords","Typography","color","StoryCardScrollTopButton","infiniteScrollContainerRef"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}