4b88c2c45dcac47158ae328501375c6a
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "DocumentPane", {
    enumerable: true,
    get: function() {
        return DocumentPane;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _reactrouter = require("react-router");
const _documentviewer = require("@rp/react/web/document-viewer");
const _core = require("@rp/react/web/mui/core");
const _ChatPaneButton = require("../ChatPaneButton");
const _ClosePaneButton = require("../ClosePaneButton");
const _ExpandPaneButton = require("../ExpandPaneButton");
const _FilesDashPane = require("../FilesDashPane");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function DocumentPane({ width, close, expandPane, compressPane, openChatPane, isChatPaneOpen }) {
    const { id: documentId } = (0, _reactrouter.useParams)();
    const customDocumentHeaderProps = (0, _react.useMemo)(()=>({
            variant: "pane",
            customButtons: [
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_ChatPaneButton.ChatPaneButton, {
                    chat: openChatPane,
                    disabled: isChatPaneOpen
                }, "chat button"),
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_ExpandPaneButton.ExpandPaneButton, {
                    expand: expandPane
                }, "expand button"),
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_ClosePaneButton.ClosePaneButton, {
                    close: close
                }, "close button")
            ]
        }), [
        close,
        expandPane,
        isChatPaneOpen,
        openChatPane
    ]);
    if (!width) return null;
    if (width === "100%") {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_documentviewer.DocumentViewerPage, {
            documentId: documentId,
            backTitle: "",
            disableBackButton: true,
            pdfHeaderOffset: 61,
            customBackClick: compressPane
        });
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_FilesDashPane.FilesDashPane, {
        width: width,
        minWidth: "350px",
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
            sx: (theme)=>_object_spread_props(_object_spread({
                    width: "100%",
                    height: "calc(100vh - 82px)"
                }, theme.scrollbarStyles), {
                    overscrollBehavior: "contain",
                    overflowY: "scroll",
                    overflowX: "hidden",
                    scrollbarGutter: "stable"
                }),
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_documentviewer.DocumentViewerPage, {
                disableDocumentDiscovery: true,
                backTitle: "",
                disableBackButton: true,
                customDocumentHeaderProps: customDocumentHeaderProps,
                documentId: documentId
            })
        })
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2FwcHMvY2xpZW50LXdlYi9zcmMvYXBwL3BhZ2VzL0ZpbGVzL0ZpbGVzVjIvY29tcG9uZW50cy9Eb2N1bWVudFBhbmUvRG9jdW1lbnRQYW5lLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlTWVtbyB9IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgeyB1c2VQYXJhbXMgfSBmcm9tIFwicmVhY3Qtcm91dGVyXCJcbmltcG9ydCB7IEN1c3RvbURvY3VtZW50SGVhZGVyUHJvcHMgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9kb2N1bWVudC12aWV3ZXJcIlxuaW1wb3J0IHsgRG9jdW1lbnRWaWV3ZXJQYWdlIH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvZG9jdW1lbnQtdmlld2VyXCJcbmltcG9ydCB7IEJveCB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL211aS9jb3JlXCJcbmltcG9ydCB7IENoYXRQYW5lQnV0dG9uIH0gZnJvbSBcIi4uL0NoYXRQYW5lQnV0dG9uXCJcbmltcG9ydCB7IENsb3NlUGFuZUJ1dHRvbiB9IGZyb20gXCIuLi9DbG9zZVBhbmVCdXR0b25cIlxuaW1wb3J0IHsgRXhwYW5kUGFuZUJ1dHRvbiB9IGZyb20gXCIuLi9FeHBhbmRQYW5lQnV0dG9uXCJcbmltcG9ydCB7IEZpbGVzRGFzaFBhbmUgfSBmcm9tIFwiLi4vRmlsZXNEYXNoUGFuZVwiXG5cbnR5cGUgRG9jdW1lbnRQYW5lUHJvcHMgPSB7XG4gIHdpZHRoOiBzdHJpbmcgfCBudWxsXG4gIGNsb3NlOiAoKSA9PiB2b2lkXG4gIGV4cGFuZFBhbmU6ICgpID0+IHZvaWRcbiAgY29tcHJlc3NQYW5lOiAoKSA9PiB2b2lkXG4gIG9wZW5DaGF0UGFuZTogKCkgPT4gdm9pZFxuICBpc0NoYXRQYW5lT3BlbjogYm9vbGVhblxufVxuXG5mdW5jdGlvbiBEb2N1bWVudFBhbmUoe1xuICB3aWR0aCxcbiAgY2xvc2UsXG4gIGV4cGFuZFBhbmUsXG4gIGNvbXByZXNzUGFuZSxcbiAgb3BlbkNoYXRQYW5lLFxuICBpc0NoYXRQYW5lT3Blbixcbn06IERvY3VtZW50UGFuZVByb3BzKSB7XG4gIGNvbnN0IHsgaWQ6IGRvY3VtZW50SWQgfSA9IHVzZVBhcmFtcygpXG4gIGNvbnN0IGN1c3RvbURvY3VtZW50SGVhZGVyUHJvcHM6IEN1c3RvbURvY3VtZW50SGVhZGVyUHJvcHMgPSB1c2VNZW1vKFxuICAgICgpID0+ICh7XG4gICAgICB2YXJpYW50OiBcInBhbmVcIixcbiAgICAgIGN1c3RvbUJ1dHRvbnM6IFtcbiAgICAgICAgPENoYXRQYW5lQnV0dG9uIGNoYXQ9e29wZW5DaGF0UGFuZX0ga2V5PVwiY2hhdCBidXR0b25cIiBkaXNhYmxlZD17aXNDaGF0UGFuZU9wZW59IC8+LFxuICAgICAgICA8RXhwYW5kUGFuZUJ1dHRvbiBleHBhbmQ9e2V4cGFuZFBhbmV9IGtleT1cImV4cGFuZCBidXR0b25cIiAvPixcbiAgICAgICAgPENsb3NlUGFuZUJ1dHRvbiBjbG9zZT17Y2xvc2V9IGtleT1cImNsb3NlIGJ1dHRvblwiIC8+LFxuICAgICAgXSxcbiAgICB9KSxcbiAgICBbY2xvc2UsIGV4cGFuZFBhbmUsIGlzQ2hhdFBhbmVPcGVuLCBvcGVuQ2hhdFBhbmVdLFxuICApXG5cbiAgaWYgKCF3aWR0aCkgcmV0dXJuIG51bGxcblxuICBpZiAod2lkdGggPT09IFwiMTAwJVwiKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxEb2N1bWVudFZpZXdlclBhZ2VcbiAgICAgICAgZG9jdW1lbnRJZD17ZG9jdW1lbnRJZH1cbiAgICAgICAgYmFja1RpdGxlPVwiXCJcbiAgICAgICAgZGlzYWJsZUJhY2tCdXR0b25cbiAgICAgICAgcGRmSGVhZGVyT2Zmc2V0PXs2MX1cbiAgICAgICAgY3VzdG9tQmFja0NsaWNrPXtjb21wcmVzc1BhbmV9XG4gICAgICAvPlxuICAgIClcbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPEZpbGVzRGFzaFBhbmUgd2lkdGg9e3dpZHRofSBtaW5XaWR0aD1cIjM1MHB4XCI+XG4gICAgICA8Qm94XG4gICAgICAgIHN4PXt0aGVtZSA9PiAoe1xuICAgICAgICAgIHdpZHRoOiBcIjEwMCVcIixcbiAgICAgICAgICBoZWlnaHQ6IFwiY2FsYygxMDB2aCAtIDgycHgpXCIsXG4gICAgICAgICAgLi4udGhlbWUuc2Nyb2xsYmFyU3R5bGVzLFxuICAgICAgICAgIG92ZXJzY3JvbGxCZWhhdmlvcjogXCJjb250YWluXCIsXG4gICAgICAgICAgb3ZlcmZsb3dZOiBcInNjcm9sbFwiLFxuICAgICAgICAgIG92ZXJmbG93WDogXCJoaWRkZW5cIixcbiAgICAgICAgICBzY3JvbGxiYXJHdXR0ZXI6IFwic3RhYmxlXCIsXG4gICAgICAgIH0pfVxuICAgICAgPlxuICAgICAgICA8RG9jdW1lbnRWaWV3ZXJQYWdlXG4gICAgICAgICAgZGlzYWJsZURvY3VtZW50RGlzY292ZXJ5XG4gICAgICAgICAgYmFja1RpdGxlPVwiXCJcbiAgICAgICAgICBkaXNhYmxlQmFja0J1dHRvblxuICAgICAgICAgIGN1c3RvbURvY3VtZW50SGVhZGVyUHJvcHM9e2N1c3RvbURvY3VtZW50SGVhZGVyUHJvcHN9XG4gICAgICAgICAgZG9jdW1lbnRJZD17ZG9jdW1lbnRJZH1cbiAgICAgICAgLz5cbiAgICAgIDwvQm94PlxuICAgIDwvRmlsZXNEYXNoUGFuZT5cbiAgKVxufVxuXG5leHBvcnQgeyBEb2N1bWVudFBhbmUgfVxuIl0sIm5hbWVzIjpbIkRvY3VtZW50UGFuZSIsIndpZHRoIiwiY2xvc2UiLCJleHBhbmRQYW5lIiwiY29tcHJlc3NQYW5lIiwib3BlbkNoYXRQYW5lIiwiaXNDaGF0UGFuZU9wZW4iLCJpZCIsImRvY3VtZW50SWQiLCJ1c2VQYXJhbXMiLCJjdXN0b21Eb2N1bWVudEhlYWRlclByb3BzIiwidXNlTWVtbyIsInZhcmlhbnQiLCJjdXN0b21CdXR0b25zIiwiQ2hhdFBhbmVCdXR0b24iLCJjaGF0IiwiZGlzYWJsZWQiLCJFeHBhbmRQYW5lQnV0dG9uIiwiZXhwYW5kIiwiQ2xvc2VQYW5lQnV0dG9uIiwiRG9jdW1lbnRWaWV3ZXJQYWdlIiwiYmFja1RpdGxlIiwiZGlzYWJsZUJhY2tCdXR0b24iLCJwZGZIZWFkZXJPZmZzZXQiLCJjdXN0b21CYWNrQ2xpY2siLCJGaWxlc0Rhc2hQYW5lIiwibWluV2lkdGgiLCJCb3giLCJzeCIsInRoZW1lIiwiaGVpZ2h0Iiwic2Nyb2xsYmFyU3R5bGVzIiwib3ZlcnNjcm9sbEJlaGF2aW9yIiwib3ZlcmZsb3dZIiwib3ZlcmZsb3dYIiwic2Nyb2xsYmFyR3V0dGVyIiwiZGlzYWJsZURvY3VtZW50RGlzY292ZXJ5Il0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBK0VTQTs7O2VBQUFBOzs7OytEQS9Fc0I7NkJBQ0w7Z0NBRVM7c0JBQ2Y7Z0NBQ1c7aUNBQ0M7a0NBQ0M7K0JBQ0g7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFXOUIsU0FBU0EsYUFBYSxFQUNwQkMsS0FBSyxFQUNMQyxLQUFLLEVBQ0xDLFVBQVUsRUFDVkMsWUFBWSxFQUNaQyxZQUFZLEVBQ1pDLGNBQWMsRUFDSTtJQUNsQixNQUFNLEVBQUVDLElBQUlDLFVBQVUsRUFBRSxHQUFHQyxJQUFBQSxzQkFBUztJQUNwQyxNQUFNQyw0QkFBdURDLElBQUFBLGNBQU8sRUFDbEUsSUFBTyxDQUFBO1lBQ0xDLFNBQVM7WUFDVEMsZUFBZTs4QkFDYixxQkFBQ0MsOEJBQWM7b0JBQUNDLE1BQU1WO29CQUFnQ1csVUFBVVY7bUJBQXhCOzhCQUN4QyxxQkFBQ1csa0NBQWdCO29CQUFDQyxRQUFRZjttQkFBZ0I7OEJBQzFDLHFCQUFDZ0IsZ0NBQWU7b0JBQUNqQixPQUFPQTttQkFBVzthQUNwQztRQUNILENBQUEsR0FDQTtRQUFDQTtRQUFPQztRQUFZRztRQUFnQkQ7S0FBYTtJQUduRCxJQUFJLENBQUNKLE9BQU8sT0FBTztJQUVuQixJQUFJQSxVQUFVLFFBQVE7UUFDcEIscUJBQ0UscUJBQUNtQixrQ0FBa0I7WUFDakJaLFlBQVlBO1lBQ1phLFdBQVU7WUFDVkMsaUJBQWlCO1lBQ2pCQyxpQkFBaUI7WUFDakJDLGlCQUFpQnBCOztJQUd2QjtJQUVBLHFCQUNFLHFCQUFDcUIsNEJBQWE7UUFBQ3hCLE9BQU9BO1FBQU95QixVQUFTO2tCQUNwQyxjQUFBLHFCQUFDQyxTQUFHO1lBQ0ZDLElBQUlDLENBQUFBLFFBQVU7b0JBQ1o1QixPQUFPO29CQUNQNkIsUUFBUTttQkFDTEQsTUFBTUUsZUFBZTtvQkFDeEJDLG9CQUFvQjtvQkFDcEJDLFdBQVc7b0JBQ1hDLFdBQVc7b0JBQ1hDLGlCQUFpQjs7c0JBR25CLGNBQUEscUJBQUNmLGtDQUFrQjtnQkFDakJnQix3QkFBd0I7Z0JBQ3hCZixXQUFVO2dCQUNWQyxpQkFBaUI7Z0JBQ2pCWiwyQkFBMkJBO2dCQUMzQkYsWUFBWUE7Ozs7QUFLdEIifQ==