d82efb6c32b423be03a233a97d8e66fe
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "HubTableRow", {
    enumerable: true,
    get: function() {
        return HubTableRow;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _hooks = require("@rp/react/web/common/hooks");
const _core = require("@rp/react/web/mui/core");
const _icons = require("@rp/react/web/mui/icons");
const _EllipsisTooltip = require("../EllipsisTooltip");
const _HubTableRowFirst = require("./HubTableRowFirst");
const _hubTableRowstyles = require("./hubTableRow.styles");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
const HubTableRow = /*#__PURE__*/ (0, _react.forwardRef)(({ sx, dragOptions, componentProps, onRowClick, columns = [], columnsWidth, mobileActions, showDragHandle, selected, showCompanyIcon, onMouseEnter, onMouseLeave, isPlaceholderData, highlightColumnIndices = [], shouldPreventMobileFormat = false }, ref)=>{
    const { isMobile: isMobileFromDevice } = (0, _hooks.useDeviceInfo)();
    const isMobile = !shouldPreventMobileFormat && isMobileFromDevice;
    const theme = (0, _core.useTheme)();
    const desktopBg = selected ? theme.palette.grey[800] : undefined;
    if (isPlaceholderData && isMobile) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_hubTableRowstyles.HubTableRowWrapper, {
            isMobile: isMobile,
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                sx: {
                    display: "flex",
                    alignItems: "center",
                    gap: 1,
                    width: 1
                },
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Skeleton, {
                    width: "100%",
                    height: 80
                })
            })
        });
    }
    if (isPlaceholderData && !isMobile) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_hubTableRowstyles.HubTableRowWrapper, {
            isMobile: isMobile,
            children: columns.map((col, index)=>{
                var _col_text;
                return /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                    sx: {
                        display: "flex",
                        alignItems: "center",
                        gap: 1,
                        width: columnsWidth[index]
                    },
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Skeleton, {
                        width: "90%",
                        height: 32
                    })
                }, ((_col_text = col.text) !== null && _col_text !== void 0 ? _col_text : "") + index.toString());
            })
        });
    }
    const isFirstColNode = !!columns[0].node;
    var _columns__text, _componentProps_filterTerm, _columns__text1;
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_hubTableRowstyles.HubTableRowWrapper, {
        role: "row",
        "aria-label": columns[0].text,
        isMobile: isMobile,
        onMouseEnter: onMouseEnter,
        onMouseLeave: onMouseLeave,
        ref: isMobile ? undefined : ref,
        onClick: onRowClick,
        sx: _object_spread({
            gap: isMobile ? undefined : theme.spacing(4.5),
            background: isMobile ? theme.palette.elevation.dp01 : desktopBg,
            cursor: onRowClick ? "pointer" : undefined,
            "& .hover-action button": {
                opacity: selected ? 1 : 0
            },
            "&:hover .hover-action button": {
                opacity: (dragOptions === null || dragOptions === void 0 ? void 0 : dragOptions.isDragging) ? 0 : 1
            }
        }, sx),
        children: [
            isFirstColNode ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                sx: {
                    width: isMobile ? 1 : columnsWidth[0]
                },
                children: columns[0].node
            }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_HubTableRowFirst.HubTableRowFirst, {
                isMobile: isMobile,
                width: isMobile ? "70%" : columnsWidth[0],
                text: (_columns__text = columns[0].text) !== null && _columns__text !== void 0 ? _columns__text : "",
                filterTerm: (_componentProps_filterTerm = componentProps === null || componentProps === void 0 ? void 0 : componentProps.filterTerm) !== null && _componentProps_filterTerm !== void 0 ? _componentProps_filterTerm : "",
                showCompanyIcon: showCompanyIcon,
                secondaryText: (_columns__text1 = columns[1].text) !== null && _columns__text1 !== void 0 ? _columns__text1 : ""
            }, columns[0].text),
            !isMobile && /*#__PURE__*/ (0, _jsxruntime.jsx)(_jsxruntime.Fragment, {
                children: columns.slice(1).map((col, index)=>{
                    if (col.node) {
                        var _col_text;
                        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                            sx: {
                                width: columnsWidth[index + 1]
                            },
                            children: col.node
                        }, ((_col_text = col.text) !== null && _col_text !== void 0 ? _col_text : "") + index.toString());
                    }
                    if (highlightColumnIndices.includes(index + 1)) {
                        var _columns__text, _componentProps_filterTerm, _columns__text1, _col_text1;
                        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_HubTableRowFirst.HubTableRowFirst, {
                            isMobile: isMobile,
                            width: isMobile ? "70%" : columnsWidth[0],
                            text: (_columns__text = columns[1].text) !== null && _columns__text !== void 0 ? _columns__text : "",
                            filterTerm: (_componentProps_filterTerm = componentProps === null || componentProps === void 0 ? void 0 : componentProps.filterTerm) !== null && _componentProps_filterTerm !== void 0 ? _componentProps_filterTerm : "",
                            showCompanyIcon: showCompanyIcon,
                            secondaryText: (_columns__text1 = columns[1].text) !== null && _columns__text1 !== void 0 ? _columns__text1 : ""
                        }, ((_col_text1 = col.text) !== null && _col_text1 !== void 0 ? _col_text1 : "") + index.toString());
                    }
                    var _col_text2, _col_text3;
                    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                        sx: {
                            display: "flex",
                            alignItems: "center",
                            color: col.disabled ? "text.disabled" : undefined,
                            gap: 1,
                            width: columnsWidth[index + 1]
                        },
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_EllipsisTooltip.EllipsisTooltip, {
                            tooltipText: (_col_text2 = col.text) !== null && _col_text2 !== void 0 ? _col_text2 : "",
                            typographyProps: {
                                fontSize: 14
                            },
                            children: col.text
                        })
                    }, ((_col_text3 = col.text) !== null && _col_text3 !== void 0 ? _col_text3 : "") + index.toString());
                })
            }),
            isMobile && mobileActions,
            showDragHandle ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                ref: isMobile ? ref : undefined,
                sx: {
                    display: "flex",
                    alignItems: "center",
                    gap: 1,
                    ml: 0.5,
                    flexShrink: 0
                },
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.DragHandle, {
                    sx: {
                        color: (dragOptions === null || dragOptions === void 0 ? void 0 : dragOptions.disableDrag) ? "text.disabled" : "text.primary",
                        cursor: "grab"
                    }
                })
            }) : null
        ]
    });
});

//# sourceMappingURL=data:application/json;base64,