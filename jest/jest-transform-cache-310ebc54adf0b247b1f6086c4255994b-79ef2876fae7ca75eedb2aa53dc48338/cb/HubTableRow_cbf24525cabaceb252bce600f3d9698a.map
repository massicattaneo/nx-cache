{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/composite-components/src/HubTableRow/HubTableRow.tsx"],"sourcesContent":["import { MouseEventHandler, ReactNode, forwardRef } from \"react\"\nimport { useDeviceInfo } from \"@rp/react/web/common/hooks\"\nimport { Box, Skeleton, SxProps, useTheme } from \"@rp/react/web/mui/core\"\nimport { DragHandle } from \"@rp/react/web/mui/icons\"\nimport { EllipsisTooltip } from \"../EllipsisTooltip\"\nimport { HubTableRowFirst } from \"./HubTableRowFirst\"\nimport { HubTableRowWrapper } from \"./hubTableRow.styles\"\n\ntype Props = {\n  columnsWidth: Array<string>\n  sx?: SxProps\n  columns?: Array<{ text?: string; node?: ReactNode; disabled?: boolean }>\n  onRowClick?: () => void\n  componentProps?: { filterTerm?: string }\n  dragOptions?: { disableDrag?: boolean; isDragging?: boolean }\n  mobileActions?: ReactNode\n  showDragHandle?: boolean\n  selected?: boolean\n  showCompanyIcon?: boolean\n  onMouseEnter?: MouseEventHandler<HTMLDivElement>\n  onMouseLeave?: MouseEventHandler<HTMLDivElement>\n  isPlaceholderData?: boolean\n  highlightColumnIndices?: Array<number>\n  shouldPreventMobileFormat?: boolean\n}\n\nconst HubTableRow = forwardRef(\n  (\n    {\n      sx,\n      dragOptions,\n      componentProps,\n      onRowClick,\n      columns = [],\n      columnsWidth,\n      mobileActions,\n      showDragHandle,\n      selected,\n      showCompanyIcon,\n      onMouseEnter,\n      onMouseLeave,\n      isPlaceholderData,\n      highlightColumnIndices = [],\n      shouldPreventMobileFormat = false,\n    }: Props,\n    ref,\n  ) => {\n    const { isMobile: isMobileFromDevice } = useDeviceInfo()\n    const isMobile = !shouldPreventMobileFormat && isMobileFromDevice\n\n    const theme = useTheme()\n    const desktopBg = selected ? theme.palette.grey[800] : undefined\n    if (isPlaceholderData && isMobile) {\n      return (\n        <HubTableRowWrapper isMobile={isMobile}>\n          <Box\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              gap: 1,\n              width: 1,\n            }}\n          >\n            <Skeleton width=\"100%\" height={80} />\n          </Box>\n        </HubTableRowWrapper>\n      )\n    }\n    if (isPlaceholderData && !isMobile) {\n      return (\n        <HubTableRowWrapper isMobile={isMobile}>\n          {columns.map((col, index) => {\n            return (\n              <Box\n                key={(col.text ?? \"\") + index.toString()}\n                sx={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  gap: 1,\n                  width: columnsWidth[index],\n                }}\n              >\n                <Skeleton width=\"90%\" height={32} />\n              </Box>\n            )\n          })}\n        </HubTableRowWrapper>\n      )\n    }\n\n    const isFirstColNode = !!columns[0].node\n\n    return (\n      <HubTableRowWrapper\n        role=\"row\"\n        aria-label={columns[0].text}\n        isMobile={isMobile}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n        ref={isMobile ? undefined : ref}\n        onClick={onRowClick}\n        sx={{\n          gap: isMobile ? undefined : theme.spacing(4.5),\n          background: isMobile ? theme.palette.elevation.dp01 : desktopBg,\n          cursor: onRowClick ? \"pointer\" : undefined,\n          \"& .hover-action button\": { opacity: selected ? 1 : 0 },\n          \"&:hover .hover-action button\": { opacity: dragOptions?.isDragging ? 0 : 1 },\n          ...sx,\n        }}\n      >\n        {isFirstColNode ? (\n          <Box sx={{ width: isMobile ? 1 : columnsWidth[0] }}>{columns[0].node}</Box>\n        ) : (\n          <HubTableRowFirst\n            isMobile={isMobile}\n            key={columns[0].text}\n            width={isMobile ? \"70%\" : columnsWidth[0]}\n            text={columns[0].text ?? \"\"}\n            filterTerm={componentProps?.filterTerm ?? \"\"}\n            showCompanyIcon={showCompanyIcon}\n            secondaryText={columns[1].text ?? \"\"}\n          />\n        )}\n        {!isMobile && (\n          <>\n            {columns.slice(1).map((col, index) => {\n              if (col.node) {\n                return (\n                  <Box\n                    sx={{ width: columnsWidth[index + 1] }}\n                    key={(col.text ?? \"\") + index.toString()}\n                  >\n                    {col.node}\n                  </Box>\n                )\n              }\n\n              if (highlightColumnIndices.includes(index + 1)) {\n                return (\n                  <HubTableRowFirst\n                    isMobile={isMobile}\n                    key={(col.text ?? \"\") + index.toString()}\n                    width={isMobile ? \"70%\" : columnsWidth[0]}\n                    text={columns[1].text ?? \"\"}\n                    filterTerm={componentProps?.filterTerm ?? \"\"}\n                    showCompanyIcon={showCompanyIcon}\n                    secondaryText={columns[1].text ?? \"\"}\n                  />\n                )\n              }\n\n              return (\n                <Box\n                  key={(col.text ?? \"\") + index.toString()}\n                  sx={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    color: col.disabled ? \"text.disabled\" : undefined,\n                    gap: 1,\n                    width: columnsWidth[index + 1],\n                  }}\n                >\n                  <EllipsisTooltip tooltipText={col.text ?? \"\"} typographyProps={{ fontSize: 14 }}>\n                    {col.text}\n                  </EllipsisTooltip>\n                </Box>\n              )\n            })}\n          </>\n        )}\n        {isMobile && mobileActions}\n        {showDragHandle ? (\n          <Box\n            ref={isMobile ? ref : undefined}\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              gap: 1,\n              ml: 0.5,\n              flexShrink: 0,\n            }}\n          >\n            <DragHandle\n              sx={{\n                color: dragOptions?.disableDrag ? \"text.disabled\" : \"text.primary\",\n                cursor: \"grab\",\n              }}\n            />\n          </Box>\n        ) : null}\n      </HubTableRowWrapper>\n    )\n  },\n)\n\nexport { HubTableRow }\n"],"names":["HubTableRow","forwardRef","sx","dragOptions","componentProps","onRowClick","columns","columnsWidth","mobileActions","showDragHandle","selected","showCompanyIcon","onMouseEnter","onMouseLeave","isPlaceholderData","highlightColumnIndices","shouldPreventMobileFormat","ref","isMobile","isMobileFromDevice","useDeviceInfo","theme","useTheme","desktopBg","palette","grey","undefined","HubTableRowWrapper","Box","display","alignItems","gap","width","Skeleton","height","map","col","index","text","toString","isFirstColNode","node","role","aria-label","onClick","spacing","background","elevation","dp01","cursor","opacity","isDragging","HubTableRowFirst","filterTerm","secondaryText","slice","includes","color","disabled","EllipsisTooltip","tooltipText","typographyProps","fontSize","ml","flexShrink","DragHandle","disableDrag"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}