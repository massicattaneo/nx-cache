b46c23ae57ad2d1a4d99d15e3069e132
/* eslint-disable react/jsx-no-useless-fragment */ // Components
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "QueryCheckbox", {
    enumerable: true,
    get: function() {
        return QueryCheckbox;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _basecomponents = require("@rp/react/web/common/base-components");
const _core = require("@rp/react/web/mui/core");
const _icons = require("@rp/react/web/mui/icons");
const _FilterInputstyles = require("./FilterInput.styles");
function QueryCheckbox({ name, queryRelationship, onChange, placement, disableCheckbox }) {
    const theme = (0, _core.useTheme)();
    const checked = [
        "direct",
        "indirect"
    ].includes(queryRelationship !== null && queryRelationship !== void 0 ? queryRelationship : "result");
    const inWatchlist = [
        "indirect"
    ].includes(queryRelationship !== null && queryRelationship !== void 0 ? queryRelationship : "result");
    const title = ()=>{
        if (inWatchlist) {
            return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Typography, {
                        variant: "subtitle2",
                        fontWeight: "bold",
                        sx: {
                            color: theme.palette.grey[100]
                        },
                        children: [
                            name,
                            " is in your Watchlists"
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                        variant: "subtitle2",
                        sx: {
                            color: theme.palette.grey[300]
                        },
                        children: "Watchlist constituents can't be removed from your query"
                    })
                ]
            });
        }
        if (checked) {
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                variant: "subtitle2",
                children: "Remove from search"
            });
        }
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
            variant: "subtitle2",
            children: "Add to Search"
        });
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.RPTooltip, {
        enterDelay: 500,
        title: title(),
        placement: placement,
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_FilterInputstyles.CheckboxStyled, {
            checked: checked,
            onChange: onChange,
            color: "default",
            size: "small",
            icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.Add, {}),
            checkedIcon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.Check, {}),
            "data-testid": name,
            inWatchlist: inWatchlist,
            disabled: disableCheckbox,
            disableCheckbox: Boolean(disableCheckbox)
        })
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9kaXNjb3Zlcnktc2lkZWJhci9zcmMvRmlsdGVySW5wdXQvUXVlcnlDaGVja2JveC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgcmVhY3QvanN4LW5vLXVzZWxlc3MtZnJhZ21lbnQgKi9cbi8vIENvbXBvbmVudHNcbmltcG9ydCB7IFF1ZXJ5UmVsYXRpb25zaGlwIH0gZnJvbSBcIkBycC9jb21tb24vYXBpLXR5cGVzXCJcbmltcG9ydCB7IFJQVG9vbHRpcCB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL2NvbW1vbi9iYXNlLWNvbXBvbmVudHNcIlxuaW1wb3J0IHsgVHlwb2dyYXBoeSwgdXNlVGhlbWUgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9tdWkvY29yZVwiXG5pbXBvcnQgeyBBZGQsIENoZWNrIH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvbXVpL2ljb25zXCJcbmltcG9ydCB7IENoZWNrYm94U3R5bGVkIH0gZnJvbSBcIi4vRmlsdGVySW5wdXQuc3R5bGVzXCJcblxudHlwZSBwbGFjZW1lbnRQcm9wcyA9XG4gIHwgXCJib3R0b20tZW5kXCJcbiAgfCBcImJvdHRvbS1zdGFydFwiXG4gIHwgXCJib3R0b21cIlxuICB8IFwibGVmdC1lbmRcIlxuICB8IFwibGVmdC1zdGFydFwiXG4gIHwgXCJsZWZ0XCJcbiAgfCBcInJpZ2h0LWVuZFwiXG4gIHwgXCJyaWdodC1zdGFydFwiXG4gIHwgXCJyaWdodFwiXG4gIHwgXCJ0b3AtZW5kXCJcbiAgfCBcInRvcC1zdGFydFwiXG4gIHwgXCJ0b3BcIlxuXG50eXBlIFF1ZXJ5Q2hlY2tib3hQcm9wcyA9IHtcbiAgbmFtZTogc3RyaW5nXG4gIHF1ZXJ5UmVsYXRpb25zaGlwOiBRdWVyeVJlbGF0aW9uc2hpcFxuICBvbkNoYW5nZTogKCkgPT4gdm9pZFxuICBwbGFjZW1lbnQ/OiBwbGFjZW1lbnRQcm9wc1xuICBkaXNhYmxlQ2hlY2tib3g/OiBib29sZWFuXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBRdWVyeUNoZWNrYm94KHtcbiAgbmFtZSxcbiAgcXVlcnlSZWxhdGlvbnNoaXAsXG4gIG9uQ2hhbmdlLFxuICBwbGFjZW1lbnQsXG4gIGRpc2FibGVDaGVja2JveCxcbn06IFF1ZXJ5Q2hlY2tib3hQcm9wcykge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKClcbiAgY29uc3QgY2hlY2tlZCA9IFtcImRpcmVjdFwiLCBcImluZGlyZWN0XCJdLmluY2x1ZGVzKHF1ZXJ5UmVsYXRpb25zaGlwID8/IFwicmVzdWx0XCIpXG4gIGNvbnN0IGluV2F0Y2hsaXN0ID0gW1wiaW5kaXJlY3RcIl0uaW5jbHVkZXMocXVlcnlSZWxhdGlvbnNoaXAgPz8gXCJyZXN1bHRcIilcblxuICBjb25zdCB0aXRsZSA9ICgpID0+IHtcbiAgICBpZiAoaW5XYXRjaGxpc3QpIHtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDw+XG4gICAgICAgICAgPFR5cG9ncmFwaHkgdmFyaWFudD1cInN1YnRpdGxlMlwiIGZvbnRXZWlnaHQ9XCJib2xkXCIgc3g9e3sgY29sb3I6IHRoZW1lLnBhbGV0dGUuZ3JleVsxMDBdIH19PlxuICAgICAgICAgICAge25hbWV9IGlzIGluIHlvdXIgV2F0Y2hsaXN0c1xuICAgICAgICAgIDwvVHlwb2dyYXBoeT5cbiAgICAgICAgICA8VHlwb2dyYXBoeSB2YXJpYW50PVwic3VidGl0bGUyXCIgc3g9e3sgY29sb3I6IHRoZW1lLnBhbGV0dGUuZ3JleVszMDBdIH19PlxuICAgICAgICAgICAgV2F0Y2hsaXN0IGNvbnN0aXR1ZW50cyBjYW4ndCBiZSByZW1vdmVkIGZyb20geW91ciBxdWVyeVxuICAgICAgICAgIDwvVHlwb2dyYXBoeT5cbiAgICAgICAgPC8+XG4gICAgICApXG4gICAgfVxuICAgIGlmIChjaGVja2VkKSB7XG4gICAgICByZXR1cm4gPFR5cG9ncmFwaHkgdmFyaWFudD1cInN1YnRpdGxlMlwiPlJlbW92ZSBmcm9tIHNlYXJjaDwvVHlwb2dyYXBoeT5cbiAgICB9XG5cbiAgICByZXR1cm4gPFR5cG9ncmFwaHkgdmFyaWFudD1cInN1YnRpdGxlMlwiPkFkZCB0byBTZWFyY2g8L1R5cG9ncmFwaHk+XG4gIH1cblxuICByZXR1cm4gKFxuICAgIDxSUFRvb2x0aXAgZW50ZXJEZWxheT17NTAwfSB0aXRsZT17dGl0bGUoKX0gcGxhY2VtZW50PXtwbGFjZW1lbnR9PlxuICAgICAgPENoZWNrYm94U3R5bGVkXG4gICAgICAgIGNoZWNrZWQ9e2NoZWNrZWR9XG4gICAgICAgIG9uQ2hhbmdlPXtvbkNoYW5nZX1cbiAgICAgICAgY29sb3I9XCJkZWZhdWx0XCJcbiAgICAgICAgc2l6ZT1cInNtYWxsXCJcbiAgICAgICAgaWNvbj17PEFkZCAvPn1cbiAgICAgICAgY2hlY2tlZEljb249ezxDaGVjayAvPn1cbiAgICAgICAgZGF0YS10ZXN0aWQ9e25hbWV9XG4gICAgICAgIGluV2F0Y2hsaXN0PXtpbldhdGNobGlzdH1cbiAgICAgICAgZGlzYWJsZWQ9e2Rpc2FibGVDaGVja2JveH1cbiAgICAgICAgZGlzYWJsZUNoZWNrYm94PXtCb29sZWFuKGRpc2FibGVDaGVja2JveCl9XG4gICAgICAvPlxuICAgIDwvUlBUb29sdGlwPlxuICApXG59XG4iXSwibmFtZXMiOlsiUXVlcnlDaGVja2JveCIsIm5hbWUiLCJxdWVyeVJlbGF0aW9uc2hpcCIsIm9uQ2hhbmdlIiwicGxhY2VtZW50IiwiZGlzYWJsZUNoZWNrYm94IiwidGhlbWUiLCJ1c2VUaGVtZSIsImNoZWNrZWQiLCJpbmNsdWRlcyIsImluV2F0Y2hsaXN0IiwidGl0bGUiLCJUeXBvZ3JhcGh5IiwidmFyaWFudCIsImZvbnRXZWlnaHQiLCJzeCIsImNvbG9yIiwicGFsZXR0ZSIsImdyZXkiLCJSUFRvb2x0aXAiLCJlbnRlckRlbGF5IiwiQ2hlY2tib3hTdHlsZWQiLCJzaXplIiwiaWNvbiIsIkFkZCIsImNoZWNrZWRJY29uIiwiQ2hlY2siLCJkYXRhLXRlc3RpZCIsImRpc2FibGVkIiwiQm9vbGVhbiJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiJBQUFBLGdEQUFnRCxHQUNoRCxhQUFhOzs7OzsrQkE2QkdBOzs7ZUFBQUE7Ozs7Z0NBM0JVO3NCQUNXO3VCQUNWO21DQUNJO0FBd0J4QixTQUFTQSxjQUFjLEVBQzVCQyxJQUFJLEVBQ0pDLGlCQUFpQixFQUNqQkMsUUFBUSxFQUNSQyxTQUFTLEVBQ1RDLGVBQWUsRUFDSTtJQUNuQixNQUFNQyxRQUFRQyxJQUFBQSxjQUFRO0lBQ3RCLE1BQU1DLFVBQVU7UUFBQztRQUFVO0tBQVcsQ0FBQ0MsUUFBUSxDQUFDUCw4QkFBQUEsK0JBQUFBLG9CQUFxQjtJQUNyRSxNQUFNUSxjQUFjO1FBQUM7S0FBVyxDQUFDRCxRQUFRLENBQUNQLDhCQUFBQSwrQkFBQUEsb0JBQXFCO0lBRS9ELE1BQU1TLFFBQVE7UUFDWixJQUFJRCxhQUFhO1lBQ2YscUJBQ0U7O2tDQUNFLHNCQUFDRSxnQkFBVTt3QkFBQ0MsU0FBUTt3QkFBWUMsWUFBVzt3QkFBT0MsSUFBSTs0QkFBRUMsT0FBT1YsTUFBTVcsT0FBTyxDQUFDQyxJQUFJLENBQUMsSUFBSTt3QkFBQzs7NEJBQ3BGakI7NEJBQUs7OztrQ0FFUixxQkFBQ1csZ0JBQVU7d0JBQUNDLFNBQVE7d0JBQVlFLElBQUk7NEJBQUVDLE9BQU9WLE1BQU1XLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDLElBQUk7d0JBQUM7a0NBQUc7Ozs7UUFLOUU7UUFDQSxJQUFJVixTQUFTO1lBQ1gscUJBQU8scUJBQUNJLGdCQUFVO2dCQUFDQyxTQUFROzBCQUFZOztRQUN6QztRQUVBLHFCQUFPLHFCQUFDRCxnQkFBVTtZQUFDQyxTQUFRO3NCQUFZOztJQUN6QztJQUVBLHFCQUNFLHFCQUFDTSx5QkFBUztRQUFDQyxZQUFZO1FBQUtULE9BQU9BO1FBQVNQLFdBQVdBO2tCQUNyRCxjQUFBLHFCQUFDaUIsaUNBQWM7WUFDYmIsU0FBU0E7WUFDVEwsVUFBVUE7WUFDVmEsT0FBTTtZQUNOTSxNQUFLO1lBQ0xDLG9CQUFNLHFCQUFDQyxVQUFHO1lBQ1ZDLDJCQUFhLHFCQUFDQyxZQUFLO1lBQ25CQyxlQUFhMUI7WUFDYlMsYUFBYUE7WUFDYmtCLFVBQVV2QjtZQUNWQSxpQkFBaUJ3QixRQUFReEI7OztBQUlqQyJ9