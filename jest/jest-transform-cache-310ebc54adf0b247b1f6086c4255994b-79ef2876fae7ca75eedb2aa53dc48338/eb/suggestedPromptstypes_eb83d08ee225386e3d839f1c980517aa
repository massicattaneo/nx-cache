009c95f5263f503c04102ff95b7e613a
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    SuggestedPromptFile: function() {
        return SuggestedPromptFile;
    },
    SuggestedPromptSchema: function() {
        return SuggestedPromptSchema;
    },
    Task: function() {
        return Task;
    },
    Topic: function() {
        return Topic;
    },
    Topics: function() {
        return Topics;
    },
    isSuggestedPromptDataset: function() {
        return isSuggestedPromptDataset;
    }
});
const _zod = require("zod");
// WARNING: This should be alphabetically ordered
const Task = [
    "Brainstorming",
    "Planning",
    "Research",
    "Screening",
    "Writing"
];
const Topic = _zod.z.object({
    title: _zod.z.string().min(1),
    description: _zod.z.string().min(1)
});
const Topics = _zod.z.record(_zod.z.string(), Topic);
const SuggestedPromptSchema = _zod.z.object({
    id: _zod.z.string(),
    prompt: _zod.z.string().min(1),
    title: _zod.z.string().min(1),
    relatedTopics: _zod.z.array(_zod.z.string()).min(1),
    task: _zod.z.enum(Task),
    scope: _zod.z.custom().optional(),
    watchlist: _zod.z.boolean().default(false),
    validity: _zod.z.object({
        from: _zod.z.string().regex(/^\d{4}-\d{2}-\d{2}T00:00:00.000$/).optional(),
        to: _zod.z.string().regex(/^\d{4}-\d{2}-\d{2}T23:59:59.999$/).optional()
    }).optional(),
    datasets: _zod.z.object({
        news: _zod.z.boolean().default(false),
        filings: _zod.z.boolean().default(false),
        transcripts: _zod.z.boolean().default(false),
        "job-analytics": _zod.z.boolean().default(false),
        price: _zod.z.boolean().default(false),
        "sentiment-attention": _zod.z.boolean().default(false),
        estimates: _zod.z.boolean().default(false),
        crunchbase: _zod.z.boolean().default(false),
        "knowledge-graph": _zod.z.boolean().default(false),
        "etf-holdings": _zod.z.boolean().default(false),
        market_intelligence: _zod.z.boolean().default(false),
        earnings_calls: _zod.z.boolean().default(false)
    })
});
const SuggestedPromptFile = _zod.z.object({
    lastUpdated: _zod.z.object({
        userClerkId: _zod.z.string(),
        userEmail: _zod.z.string(),
        timestamp: _zod.z.number()
    }),
    prompts: _zod.z.array(SuggestedPromptSchema),
    topics: Topics
});
const isSuggestedPromptDataset = (scope)=>{
    return scope in SuggestedPromptSchema.shape.datasets.shape;
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvY29tbW9uL2FwaS10eXBlcy9zcmMvbGliL3N1Z2dlc3RlZFByb21wdHMudHlwZXMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgeiB9IGZyb20gXCJ6b2RcIlxuaW1wb3J0IHsgRGF0YXNldFNjb3BlIH0gZnJvbSBcIi4vY2hhdC50eXBlc1wiXG5cbi8vIFdBUk5JTkc6IFRoaXMgc2hvdWxkIGJlIGFscGhhYmV0aWNhbGx5IG9yZGVyZWRcbmNvbnN0IFRhc2sgPSBbXCJCcmFpbnN0b3JtaW5nXCIsIFwiUGxhbm5pbmdcIiwgXCJSZXNlYXJjaFwiLCBcIlNjcmVlbmluZ1wiLCBcIldyaXRpbmdcIl0gYXMgY29uc3RcblxuY29uc3QgVG9waWMgPSB6Lm9iamVjdCh7XG4gIHRpdGxlOiB6LnN0cmluZygpLm1pbigxKSxcbiAgZGVzY3JpcHRpb246IHouc3RyaW5nKCkubWluKDEpLFxufSlcbmNvbnN0IFRvcGljcyA9IHoucmVjb3JkKHouc3RyaW5nKCksIFRvcGljKVxuXG5jb25zdCBTdWdnZXN0ZWRQcm9tcHRTY2hlbWEgPSB6Lm9iamVjdCh7XG4gIGlkOiB6LnN0cmluZygpLFxuICBwcm9tcHQ6IHouc3RyaW5nKCkubWluKDEpLFxuICB0aXRsZTogei5zdHJpbmcoKS5taW4oMSksXG4gIHJlbGF0ZWRUb3BpY3M6IHouYXJyYXkoei5zdHJpbmcoKSkubWluKDEpLFxuICB0YXNrOiB6LmVudW0oVGFzayksXG4gIHNjb3BlOiB6LmN1c3RvbTxEYXRhc2V0U2NvcGU+KCkub3B0aW9uYWwoKSxcbiAgd2F0Y2hsaXN0OiB6LmJvb2xlYW4oKS5kZWZhdWx0KGZhbHNlKSxcbiAgdmFsaWRpdHk6IHpcbiAgICAub2JqZWN0KHtcbiAgICAgIGZyb206IHpcbiAgICAgICAgLnN0cmluZygpXG4gICAgICAgIC5yZWdleCgvXlxcZHs0fS1cXGR7Mn0tXFxkezJ9VDAwOjAwOjAwLjAwMCQvKVxuICAgICAgICAub3B0aW9uYWwoKSxcbiAgICAgIHRvOiB6XG4gICAgICAgIC5zdHJpbmcoKVxuICAgICAgICAucmVnZXgoL15cXGR7NH0tXFxkezJ9LVxcZHsyfVQyMzo1OTo1OS45OTkkLylcbiAgICAgICAgLm9wdGlvbmFsKCksXG4gICAgfSlcbiAgICAub3B0aW9uYWwoKSxcbiAgZGF0YXNldHM6IHoub2JqZWN0KHtcbiAgICBuZXdzOiB6LmJvb2xlYW4oKS5kZWZhdWx0KGZhbHNlKSxcbiAgICBmaWxpbmdzOiB6LmJvb2xlYW4oKS5kZWZhdWx0KGZhbHNlKSxcbiAgICB0cmFuc2NyaXB0czogei5ib29sZWFuKCkuZGVmYXVsdChmYWxzZSksXG4gICAgXCJqb2ItYW5hbHl0aWNzXCI6IHouYm9vbGVhbigpLmRlZmF1bHQoZmFsc2UpLFxuICAgIHByaWNlOiB6LmJvb2xlYW4oKS5kZWZhdWx0KGZhbHNlKSxcbiAgICBcInNlbnRpbWVudC1hdHRlbnRpb25cIjogei5ib29sZWFuKCkuZGVmYXVsdChmYWxzZSksXG4gICAgZXN0aW1hdGVzOiB6LmJvb2xlYW4oKS5kZWZhdWx0KGZhbHNlKSxcbiAgICBjcnVuY2hiYXNlOiB6LmJvb2xlYW4oKS5kZWZhdWx0KGZhbHNlKSxcbiAgICBcImtub3dsZWRnZS1ncmFwaFwiOiB6LmJvb2xlYW4oKS5kZWZhdWx0KGZhbHNlKSxcbiAgICBcImV0Zi1ob2xkaW5nc1wiOiB6LmJvb2xlYW4oKS5kZWZhdWx0KGZhbHNlKSxcbiAgICBtYXJrZXRfaW50ZWxsaWdlbmNlOiB6LmJvb2xlYW4oKS5kZWZhdWx0KGZhbHNlKSxcbiAgICBlYXJuaW5nc19jYWxsczogei5ib29sZWFuKCkuZGVmYXVsdChmYWxzZSksXG4gIH0pLFxufSlcblxuY29uc3QgU3VnZ2VzdGVkUHJvbXB0RmlsZSA9IHoub2JqZWN0KHtcbiAgbGFzdFVwZGF0ZWQ6IHoub2JqZWN0KHtcbiAgICB1c2VyQ2xlcmtJZDogei5zdHJpbmcoKSxcbiAgICB1c2VyRW1haWw6IHouc3RyaW5nKCksXG4gICAgdGltZXN0YW1wOiB6Lm51bWJlcigpLFxuICB9KSxcbiAgcHJvbXB0czogei5hcnJheShTdWdnZXN0ZWRQcm9tcHRTY2hlbWEpLFxuICB0b3BpY3M6IFRvcGljcyxcbn0pXG5cbnR5cGUgU3VnZ2VzdGVkUHJvbXB0VHlwZSA9IHouaW5mZXI8dHlwZW9mIFN1Z2dlc3RlZFByb21wdFNjaGVtYT5cblxuY29uc3QgaXNTdWdnZXN0ZWRQcm9tcHREYXRhc2V0ID0gKFxuICBzY29wZTogc3RyaW5nLFxuKTogc2NvcGUgaXMga2V5b2YgU3VnZ2VzdGVkUHJvbXB0VHlwZVtcImRhdGFzZXRzXCJdID0+IHtcbiAgcmV0dXJuIHNjb3BlIGluIFN1Z2dlc3RlZFByb21wdFNjaGVtYS5zaGFwZS5kYXRhc2V0cy5zaGFwZVxufVxuXG5leHBvcnQgeyBUYXNrLCBTdWdnZXN0ZWRQcm9tcHRTY2hlbWEsIFN1Z2dlc3RlZFByb21wdEZpbGUsIFRvcGljcywgVG9waWMsIGlzU3VnZ2VzdGVkUHJvbXB0RGF0YXNldCB9XG4iXSwibmFtZXMiOlsiU3VnZ2VzdGVkUHJvbXB0RmlsZSIsIlN1Z2dlc3RlZFByb21wdFNjaGVtYSIsIlRhc2siLCJUb3BpYyIsIlRvcGljcyIsImlzU3VnZ2VzdGVkUHJvbXB0RGF0YXNldCIsInoiLCJvYmplY3QiLCJ0aXRsZSIsInN0cmluZyIsIm1pbiIsImRlc2NyaXB0aW9uIiwicmVjb3JkIiwiaWQiLCJwcm9tcHQiLCJyZWxhdGVkVG9waWNzIiwiYXJyYXkiLCJ0YXNrIiwiZW51bSIsInNjb3BlIiwiY3VzdG9tIiwib3B0aW9uYWwiLCJ3YXRjaGxpc3QiLCJib29sZWFuIiwiZGVmYXVsdCIsInZhbGlkaXR5IiwiZnJvbSIsInJlZ2V4IiwidG8iLCJkYXRhc2V0cyIsIm5ld3MiLCJmaWxpbmdzIiwidHJhbnNjcmlwdHMiLCJwcmljZSIsImVzdGltYXRlcyIsImNydW5jaGJhc2UiLCJtYXJrZXRfaW50ZWxsaWdlbmNlIiwiZWFybmluZ3NfY2FsbHMiLCJsYXN0VXBkYXRlZCIsInVzZXJDbGVya0lkIiwidXNlckVtYWlsIiwidGltZXN0YW1wIiwibnVtYmVyIiwicHJvbXB0cyIsInRvcGljcyIsInNoYXBlIl0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0lBa0VzQ0EsbUJBQW1CO2VBQW5CQTs7SUFBdkJDLHFCQUFxQjtlQUFyQkE7O0lBQU5DLElBQUk7ZUFBSkE7O0lBQTBEQyxLQUFLO2VBQUxBOztJQUFSQyxNQUFNO2VBQU5BOztJQUFlQyx3QkFBd0I7ZUFBeEJBOzs7cUJBbEV4RDtBQUdsQixpREFBaUQ7QUFDakQsTUFBTUgsT0FBTztJQUFDO0lBQWlCO0lBQVk7SUFBWTtJQUFhO0NBQVU7QUFFOUUsTUFBTUMsUUFBUUcsTUFBQyxDQUFDQyxNQUFNLENBQUM7SUFDckJDLE9BQU9GLE1BQUMsQ0FBQ0csTUFBTSxHQUFHQyxHQUFHLENBQUM7SUFDdEJDLGFBQWFMLE1BQUMsQ0FBQ0csTUFBTSxHQUFHQyxHQUFHLENBQUM7QUFDOUI7QUFDQSxNQUFNTixTQUFTRSxNQUFDLENBQUNNLE1BQU0sQ0FBQ04sTUFBQyxDQUFDRyxNQUFNLElBQUlOO0FBRXBDLE1BQU1GLHdCQUF3QkssTUFBQyxDQUFDQyxNQUFNLENBQUM7SUFDckNNLElBQUlQLE1BQUMsQ0FBQ0csTUFBTTtJQUNaSyxRQUFRUixNQUFDLENBQUNHLE1BQU0sR0FBR0MsR0FBRyxDQUFDO0lBQ3ZCRixPQUFPRixNQUFDLENBQUNHLE1BQU0sR0FBR0MsR0FBRyxDQUFDO0lBQ3RCSyxlQUFlVCxNQUFDLENBQUNVLEtBQUssQ0FBQ1YsTUFBQyxDQUFDRyxNQUFNLElBQUlDLEdBQUcsQ0FBQztJQUN2Q08sTUFBTVgsTUFBQyxDQUFDWSxJQUFJLENBQUNoQjtJQUNiaUIsT0FBT2IsTUFBQyxDQUFDYyxNQUFNLEdBQWlCQyxRQUFRO0lBQ3hDQyxXQUFXaEIsTUFBQyxDQUFDaUIsT0FBTyxHQUFHQyxPQUFPLENBQUM7SUFDL0JDLFVBQVVuQixNQUFDLENBQ1JDLE1BQU0sQ0FBQztRQUNObUIsTUFBTXBCLE1BQUMsQ0FDSkcsTUFBTSxHQUNOa0IsS0FBSyxDQUFDLG9DQUNOTixRQUFRO1FBQ1hPLElBQUl0QixNQUFDLENBQ0ZHLE1BQU0sR0FDTmtCLEtBQUssQ0FBQyxvQ0FDTk4sUUFBUTtJQUNiLEdBQ0NBLFFBQVE7SUFDWFEsVUFBVXZCLE1BQUMsQ0FBQ0MsTUFBTSxDQUFDO1FBQ2pCdUIsTUFBTXhCLE1BQUMsQ0FBQ2lCLE9BQU8sR0FBR0MsT0FBTyxDQUFDO1FBQzFCTyxTQUFTekIsTUFBQyxDQUFDaUIsT0FBTyxHQUFHQyxPQUFPLENBQUM7UUFDN0JRLGFBQWExQixNQUFDLENBQUNpQixPQUFPLEdBQUdDLE9BQU8sQ0FBQztRQUNqQyxpQkFBaUJsQixNQUFDLENBQUNpQixPQUFPLEdBQUdDLE9BQU8sQ0FBQztRQUNyQ1MsT0FBTzNCLE1BQUMsQ0FBQ2lCLE9BQU8sR0FBR0MsT0FBTyxDQUFDO1FBQzNCLHVCQUF1QmxCLE1BQUMsQ0FBQ2lCLE9BQU8sR0FBR0MsT0FBTyxDQUFDO1FBQzNDVSxXQUFXNUIsTUFBQyxDQUFDaUIsT0FBTyxHQUFHQyxPQUFPLENBQUM7UUFDL0JXLFlBQVk3QixNQUFDLENBQUNpQixPQUFPLEdBQUdDLE9BQU8sQ0FBQztRQUNoQyxtQkFBbUJsQixNQUFDLENBQUNpQixPQUFPLEdBQUdDLE9BQU8sQ0FBQztRQUN2QyxnQkFBZ0JsQixNQUFDLENBQUNpQixPQUFPLEdBQUdDLE9BQU8sQ0FBQztRQUNwQ1kscUJBQXFCOUIsTUFBQyxDQUFDaUIsT0FBTyxHQUFHQyxPQUFPLENBQUM7UUFDekNhLGdCQUFnQi9CLE1BQUMsQ0FBQ2lCLE9BQU8sR0FBR0MsT0FBTyxDQUFDO0lBQ3RDO0FBQ0Y7QUFFQSxNQUFNeEIsc0JBQXNCTSxNQUFDLENBQUNDLE1BQU0sQ0FBQztJQUNuQytCLGFBQWFoQyxNQUFDLENBQUNDLE1BQU0sQ0FBQztRQUNwQmdDLGFBQWFqQyxNQUFDLENBQUNHLE1BQU07UUFDckIrQixXQUFXbEMsTUFBQyxDQUFDRyxNQUFNO1FBQ25CZ0MsV0FBV25DLE1BQUMsQ0FBQ29DLE1BQU07SUFDckI7SUFDQUMsU0FBU3JDLE1BQUMsQ0FBQ1UsS0FBSyxDQUFDZjtJQUNqQjJDLFFBQVF4QztBQUNWO0FBSUEsTUFBTUMsMkJBQTJCLENBQy9CYztJQUVBLE9BQU9BLFNBQVNsQixzQkFBc0I0QyxLQUFLLENBQUNoQixRQUFRLENBQUNnQixLQUFLO0FBQzVEIn0=