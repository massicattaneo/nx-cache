{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/utils/src/copy-to-clipboard.ts"],"sourcesContent":["import copy from \"copy-to-clipboard\"\n\nconst isClipboardData = (obj: object | null): obj is ClipboardEvent[\"clipboardData\"] =>\n  !!(obj && \"setData\" in obj)\n\nfunction copyToClipboard({\n  textToCopy,\n  targetHTML,\n  onCopyCallback,\n}: {\n  textToCopy: string\n  targetHTML: string\n  onCopyCallback?: () => void\n}) {\n  return copy(targetHTML, {\n    format: \"text/html\",\n    onCopy: (clipboardData: object) => {\n      if (isClipboardData(clipboardData)) {\n        onCopyCallback?.()\n        clipboardData.setData(\"text/plain\", textToCopy)\n      }\n    },\n  })\n}\n\nexport { copyToClipboard }\n"],"names":["copyToClipboard","isClipboardData","obj","textToCopy","targetHTML","onCopyCallback","copy","format","onCopy","clipboardData","setData"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAyBSA;;;eAAAA;;;wEAzBQ;;;;;;AAEjB,MAAMC,kBAAkB,CAACC,MACvB,CAAC,CAAEA,CAAAA,OAAO,aAAaA,GAAE;AAE3B,SAASF,gBAAgB,EACvBG,UAAU,EACVC,UAAU,EACVC,cAAc,EAKf;IACC,OAAOC,IAAAA,wBAAI,EAACF,YAAY;QACtBG,QAAQ;QACRC,QAAQ,CAACC;YACP,IAAIR,gBAAgBQ,gBAAgB;gBAClCJ,2BAAAA,qCAAAA;gBACAI,cAAcC,OAAO,CAAC,cAAcP;YACtC;QACF;IACF;AACF"}