{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/common/brief/src/utils/briefPageHooks.utils.ts"],"sourcesContent":["import { isEmailNotificationSchedule } from \"@rp/common/api-types\"\nimport {\n  BriefConfigAPI,\n  BriefConfigAPIScheduleDay,\n  BriefConfigForm,\n} from \"@rp/react/tanstack-api/brief\"\n\nconst daysDict: Record<string, BriefConfigAPIScheduleDay> = {\n  MON: \"mon\" as const,\n  TUE: \"tue\" as const,\n  WED: \"wed\" as const,\n  THU: \"thu\" as const,\n  FRI: \"fri\" as const,\n  SAT: \"sat\" as const,\n  SUN: \"sun\" as const,\n}\n\nconst everyDay: Array<BriefConfigAPIScheduleDay> = [\n  daysDict.MON,\n  daysDict.TUE,\n  daysDict.WED,\n  daysDict.THU,\n  daysDict.FRI,\n  daysDict.SAT,\n  daysDict.SUN,\n]\n\nconst weekdays: Array<BriefConfigAPIScheduleDay> = [\n  daysDict.MON,\n  daysDict.TUE,\n  daysDict.WED,\n  daysDict.THU,\n  daysDict.FRI,\n]\n\nconst getScheduleDays = (dayLabel: string): BriefConfigAPIScheduleDay => daysDict[dayLabel]\n\nconst parseDaysFromCron = (daysFromCron: string): Array<BriefConfigAPIScheduleDay> => {\n  if ([\"?\", \"*\"].includes(daysFromCron)) {\n    return everyDay\n  }\n\n  if (daysFromCron === \"1-5\") {\n    return weekdays\n  }\n\n  return daysFromCron.split(\",\").map(getScheduleDays)\n}\n\nconst transformBriefFormToPost = (brief: BriefConfigForm, userId: string): BriefConfigAPI => {\n  const splitSchedule = brief.schedule.schedulerExpression.split(/\\s+/gm)\n\n  const daysFromCron = splitSchedule[4]\n  const days = parseDaysFromCron(daysFromCron)\n\n  return {\n    brief_name: brief.name.trim(),\n    user_id: userId,\n    watchlist_ids: [brief.watchlistId],\n    email: isEmailNotificationSchedule(brief.schedule)\n      ? brief.schedule.destinationParams.emails[0]\n      : \"\",\n    delivery_modes: [\"email\"],\n    schedule: {\n      timezone: brief.schedule.timezone,\n      days,\n      hour: parseInt(splitSchedule[1]),\n      minute: parseInt(splitSchedule[0]),\n    },\n  }\n}\n\nexport { transformBriefFormToPost }\n"],"names":["transformBriefFormToPost","daysDict","MON","TUE","WED","THU","FRI","SAT","SUN","everyDay","weekdays","getScheduleDays","dayLabel","parseDaysFromCron","daysFromCron","includes","split","map","brief","userId","splitSchedule","schedule","schedulerExpression","days","brief_name","name","trim","user_id","watchlist_ids","watchlistId","email","isEmailNotificationSchedule","destinationParams","emails","delivery_modes","timezone","hour","parseInt","minute"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAwESA;;;eAAAA;;;0BAxEmC;AAO5C,MAAMC,WAAsD;IAC1DC,KAAK;IACLC,KAAK;IACLC,KAAK;IACLC,KAAK;IACLC,KAAK;IACLC,KAAK;IACLC,KAAK;AACP;AAEA,MAAMC,WAA6C;IACjDR,SAASC,GAAG;IACZD,SAASE,GAAG;IACZF,SAASG,GAAG;IACZH,SAASI,GAAG;IACZJ,SAASK,GAAG;IACZL,SAASM,GAAG;IACZN,SAASO,GAAG;CACb;AAED,MAAME,WAA6C;IACjDT,SAASC,GAAG;IACZD,SAASE,GAAG;IACZF,SAASG,GAAG;IACZH,SAASI,GAAG;IACZJ,SAASK,GAAG;CACb;AAED,MAAMK,kBAAkB,CAACC,WAAgDX,QAAQ,CAACW,SAAS;AAE3F,MAAMC,oBAAoB,CAACC;IACzB,IAAI;QAAC;QAAK;KAAI,CAACC,QAAQ,CAACD,eAAe;QACrC,OAAOL;IACT;IAEA,IAAIK,iBAAiB,OAAO;QAC1B,OAAOJ;IACT;IAEA,OAAOI,aAAaE,KAAK,CAAC,KAAKC,GAAG,CAACN;AACrC;AAEA,MAAMX,2BAA2B,CAACkB,OAAwBC;IACxD,MAAMC,gBAAgBF,MAAMG,QAAQ,CAACC,mBAAmB,CAACN,KAAK,CAAC;IAE/D,MAAMF,eAAeM,aAAa,CAAC,EAAE;IACrC,MAAMG,OAAOV,kBAAkBC;IAE/B,OAAO;QACLU,YAAYN,MAAMO,IAAI,CAACC,IAAI;QAC3BC,SAASR;QACTS,eAAe;YAACV,MAAMW,WAAW;SAAC;QAClCC,OAAOC,IAAAA,qCAA2B,EAACb,MAAMG,QAAQ,IAC7CH,MAAMG,QAAQ,CAACW,iBAAiB,CAACC,MAAM,CAAC,EAAE,GAC1C;QACJC,gBAAgB;YAAC;SAAQ;QACzBb,UAAU;YACRc,UAAUjB,MAAMG,QAAQ,CAACc,QAAQ;YACjCZ;YACAa,MAAMC,SAASjB,aAAa,CAAC,EAAE;YAC/BkB,QAAQD,SAASjB,aAAa,CAAC,EAAE;QACnC;IACF;AACF"}