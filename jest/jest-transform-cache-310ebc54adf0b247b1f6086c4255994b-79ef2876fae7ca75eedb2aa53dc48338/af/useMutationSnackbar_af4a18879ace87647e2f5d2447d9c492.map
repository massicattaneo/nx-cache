{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/providers/src/Snackbar/useMutationSnackbar.ts"],"sourcesContent":["import { ReactNode } from \"react\"\nimport { useSnackbar } from \"./useSnackbar\"\n\ntype SuccessMessage = ReactNode\n\nconst useMutationSnackbar = (callback: () => Promise<SuccessMessage>) => {\n  const { enqueueSuccess, enqueueError } = useSnackbar()\n  return async () => {\n    try {\n      const success = await callback()\n      enqueueSuccess(success)\n    } catch (error) {\n      const message = error instanceof Error ? error.message : String(error)\n      enqueueError(message)\n    }\n  }\n}\n\nexport { useMutationSnackbar }\n"],"names":["useMutationSnackbar","callback","enqueueSuccess","enqueueError","useSnackbar","success","error","message","Error","String"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAkBSA;;;eAAAA;;;6BAjBmB;AAI5B,MAAMA,sBAAsB,CAACC;IAC3B,MAAM,EAAEC,cAAc,EAAEC,YAAY,EAAE,GAAGC,IAAAA,wBAAW;IACpD,OAAO;QACL,IAAI;YACF,MAAMC,UAAU,MAAMJ;YACtBC,eAAeG;QACjB,EAAE,OAAOC,OAAO;YACd,MAAMC,UAAUD,iBAAiBE,QAAQF,MAAMC,OAAO,GAAGE,OAAOH;YAChEH,aAAaI;QACf;IACF;AACF"}