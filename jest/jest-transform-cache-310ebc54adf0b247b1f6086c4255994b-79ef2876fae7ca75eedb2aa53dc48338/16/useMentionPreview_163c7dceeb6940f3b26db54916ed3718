bbc8ca23e2c62a1be87593a1b85c6318
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "useMentionPreview", {
    enumerable: true,
    get: function() {
        return useMentionPreview;
    }
});
const _providers = require("@rp/react/web/common/providers");
const _cqsquerycontext = require("@rp/react/web/cqs-query-context");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const useMentionPreview = (mention, useClusterApi = false)=>{
    const { searchQuery } = (0, _providers.useQueryContext)();
    const queryItem = (0, _cqsquerycontext.convertDiscoveryPanelItem)(mention);
    const enabled = searchQuery !== undefined;
    const expression = {
        type: "and",
        value: [
            {
                type: queryItem.type,
                operation: "in",
                value: [
                    queryItem.value
                ]
            }
        ]
    };
    if (enabled && searchQuery.expression !== undefined) {
        expression.value.push(searchQuery.expression);
    }
    const queryData = (0, _providers.useCQSPreview)(_object_spread_props(_object_spread({}, searchQuery), {
        expression
    }), "mention-preview", {
        enabled,
        useClusterApi
    });
    return _object_spread_props(_object_spread({}, queryData), {
        expression
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9kaXNjb3Zlcnktc2lkZWJhci9zcmMvaG9va3MvdXNlTWVudGlvblByZXZpZXcudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ3FzSXRlbSB9IGZyb20gXCJAcnAvY29tbW9uL2FwaS10eXBlc1wiXG5pbXBvcnQgeyBScHFsTG9naWNhbEdyb3VwRmlsdGVyIH0gZnJvbSBcIkBycC9jb21tb24vYXBpLXR5cGVzXCJcbmltcG9ydCB7IHVzZUNRU1ByZXZpZXcsIHVzZVF1ZXJ5Q29udGV4dCB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL2NvbW1vbi9wcm92aWRlcnNcIlxuaW1wb3J0IHsgY29udmVydERpc2NvdmVyeVBhbmVsSXRlbSB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL2Nxcy1xdWVyeS1jb250ZXh0XCJcblxuY29uc3QgdXNlTWVudGlvblByZXZpZXcgPSAobWVudGlvbjogQ3FzSXRlbSwgdXNlQ2x1c3RlckFwaSA9IGZhbHNlKSA9PiB7XG4gIGNvbnN0IHsgc2VhcmNoUXVlcnkgfSA9IHVzZVF1ZXJ5Q29udGV4dCgpXG4gIGNvbnN0IHF1ZXJ5SXRlbSA9IGNvbnZlcnREaXNjb3ZlcnlQYW5lbEl0ZW0obWVudGlvbilcblxuICBjb25zdCBlbmFibGVkID0gc2VhcmNoUXVlcnkgIT09IHVuZGVmaW5lZFxuXG4gIGNvbnN0IGV4cHJlc3Npb246IFJwcWxMb2dpY2FsR3JvdXBGaWx0ZXIgPSB7XG4gICAgdHlwZTogXCJhbmRcIixcbiAgICB2YWx1ZTogW3sgdHlwZTogcXVlcnlJdGVtLnR5cGUsIG9wZXJhdGlvbjogXCJpblwiLCB2YWx1ZTogW3F1ZXJ5SXRlbS52YWx1ZV0gfV0sXG4gIH1cbiAgaWYgKGVuYWJsZWQgJiYgc2VhcmNoUXVlcnkuZXhwcmVzc2lvbiAhPT0gdW5kZWZpbmVkKSB7XG4gICAgZXhwcmVzc2lvbi52YWx1ZS5wdXNoKHNlYXJjaFF1ZXJ5LmV4cHJlc3Npb24pXG4gIH1cblxuICBjb25zdCBxdWVyeURhdGEgPSB1c2VDUVNQcmV2aWV3KHsgLi4uc2VhcmNoUXVlcnksIGV4cHJlc3Npb24gfSwgXCJtZW50aW9uLXByZXZpZXdcIiwge1xuICAgIGVuYWJsZWQsXG4gICAgdXNlQ2x1c3RlckFwaSxcbiAgfSlcblxuICByZXR1cm4geyAuLi5xdWVyeURhdGEsIGV4cHJlc3Npb24gfVxufVxuXG5leHBvcnQgeyB1c2VNZW50aW9uUHJldmlldyB9XG4iXSwibmFtZXMiOlsidXNlTWVudGlvblByZXZpZXciLCJtZW50aW9uIiwidXNlQ2x1c3RlckFwaSIsInNlYXJjaFF1ZXJ5IiwidXNlUXVlcnlDb250ZXh0IiwicXVlcnlJdGVtIiwiY29udmVydERpc2NvdmVyeVBhbmVsSXRlbSIsImVuYWJsZWQiLCJ1bmRlZmluZWQiLCJleHByZXNzaW9uIiwidHlwZSIsInZhbHVlIiwib3BlcmF0aW9uIiwicHVzaCIsInF1ZXJ5RGF0YSIsInVzZUNRU1ByZXZpZXciXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBMkJTQTs7O2VBQUFBOzs7MkJBekJzQztpQ0FDTDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFMUMsTUFBTUEsb0JBQW9CLENBQUNDLFNBQWtCQyxnQkFBZ0IsS0FBSztJQUNoRSxNQUFNLEVBQUVDLFdBQVcsRUFBRSxHQUFHQyxJQUFBQSwwQkFBZTtJQUN2QyxNQUFNQyxZQUFZQyxJQUFBQSwwQ0FBeUIsRUFBQ0w7SUFFNUMsTUFBTU0sVUFBVUosZ0JBQWdCSztJQUVoQyxNQUFNQyxhQUFxQztRQUN6Q0MsTUFBTTtRQUNOQyxPQUFPO1lBQUM7Z0JBQUVELE1BQU1MLFVBQVVLLElBQUk7Z0JBQUVFLFdBQVc7Z0JBQU1ELE9BQU87b0JBQUNOLFVBQVVNLEtBQUs7aUJBQUM7WUFBQztTQUFFO0lBQzlFO0lBQ0EsSUFBSUosV0FBV0osWUFBWU0sVUFBVSxLQUFLRCxXQUFXO1FBQ25EQyxXQUFXRSxLQUFLLENBQUNFLElBQUksQ0FBQ1YsWUFBWU0sVUFBVTtJQUM5QztJQUVBLE1BQU1LLFlBQVlDLElBQUFBLHdCQUFhLEVBQUMsd0NBQUtaO1FBQWFNO1FBQWMsbUJBQW1CO1FBQ2pGRjtRQUNBTDtJQUNGO0lBRUEsT0FBTyx3Q0FBS1k7UUFBV0w7O0FBQ3pCIn0=