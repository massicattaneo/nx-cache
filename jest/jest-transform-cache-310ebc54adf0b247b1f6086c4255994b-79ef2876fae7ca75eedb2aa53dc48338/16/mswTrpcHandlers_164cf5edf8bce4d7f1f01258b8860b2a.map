{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/development/src/lib/msw/mswTrpcHandlers.ts"],"sourcesContent":["/* eslint-disable no-console */\nimport { DefaultBodyType, HttpResponse, JsonBodyType, PathParams, http, ws } from \"msw\"\nimport { HttpRequestResolverExtras } from \"msw/lib/core/handlers/HttpHandler\"\nimport { ResponseResolverInfo } from \"msw/lib/core/handlers/RequestHandler\"\nimport { environment } from \"@rp/common/environment\"\nimport { JsonDb } from \"@rp/common/json-db\"\nimport { trpcHttpAdapter } from \"@rp/common/trpc\"\nimport { newEmptyDb } from \"../database\"\nimport {\n  chatWebsocketApi,\n  clerkApiRouter,\n  trpcBigdataApiRouter,\n  trpcTextAnalyticsApiRouter,\n} from \"../trpc\"\n\nconst dbStub = new JsonDb(newEmptyDb())\n\ntype Method = \"GET\" | \"POST\" | \"PATCH\" | \"PUT\" | \"DELETE\"\n\nasync function streamToString(\n  stream: ReadableStream<Uint8Array<ArrayBufferLike>> | null,\n): Promise<string> {\n  if (!stream) return \"\"\n  try {\n    const reader = stream.getReader()\n    const decoder = new TextDecoder()\n    let result = \"\"\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      const { done, value } = await reader.read()\n      if (done) break\n      result += decoder.decode(value, { stream: true })\n    }\n\n    // Flush any remaining bytes\n    result += decoder.decode()\n    return result\n  } catch (error) {\n    return \"\"\n  }\n}\n\nconst createContext = async (\n  info: ResponseResolverInfo<HttpRequestResolverExtras<PathParams>, DefaultBodyType>,\n) => {\n  const headers: Array<{ key: string; value: string }> = []\n  info.request.headers.forEach((value: string, key: string) => {\n    return headers.push({ key, value })\n  })\n  let jsonBody: unknown = {}\n  await new Promise(res => setTimeout(res, 300)) // simulate BE latency\n  const rawBody = await streamToString(info.request.body)\n  try {\n    jsonBody = JSON.parse(rawBody)\n  } catch (e) {\n    //\n  }\n  return {\n    db: dbStub,\n    request: {\n      headers: headers.reduce((acc, { key, value }) => {\n        return { ...acc, [key]: value.toString() }\n      }, {} as Record<string, string>),\n      method: info.request.method.toUpperCase() as Method,\n      url: new URL(info.request.url),\n      jsonBody,\n      rawBody,\n    },\n  }\n}\n\nconst {\n  handler: bigdataHandler,\n  mock: api,\n  clearAllMocks: apiClear,\n} = trpcHttpAdapter({\n  router: trpcBigdataApiRouter,\n  createContext,\n})\n\nconst {\n  handler: textAnalyticsHandler,\n  mock: ta,\n  clearAllMocks: taClear,\n} = trpcHttpAdapter({\n  router: trpcTextAnalyticsApiRouter,\n  createContext,\n})\n\nconst {\n  handler,\n  mock: clerk,\n  clearAllMocks: clerkClear,\n} = trpcHttpAdapter({\n  router: clerkApiRouter,\n  createContext,\n})\n\nconst chat = ws.link(environment.app.wsUrl)\nconst { onMessage } = chatWebsocketApi({ db: dbStub })\n\n// Helpers to simulate the behavior of the application\n// givenIsANewLoggedUser({ db: dbStub, mock: { api, clerk } })\n// givenIsANewLoggedOutUser({ db: dbStub, mock: { api, clerk } })\n\nconst mswTrpcHandlers = [\n  http.all(`${environment.app.apiUrl}/**`, async info => {\n    try {\n      const res = await bigdataHandler(info)\n      if (res) return HttpResponse.json(res.json as JsonBodyType)\n      return\n    } catch (error) {\n      console.error(\"Error in bigdataHandler:\", error)\n      return HttpResponse.json({ error: \"Internal Server Error\" }, { status: 500 })\n    }\n  }),\n  http.all(`${environment.app.taUrl}/**`, async info => {\n    try {\n      const res = await textAnalyticsHandler(info)\n      if (res) return HttpResponse.json(res.json as JsonBodyType)\n      return\n    } catch (error) {\n      console.error(\"Error in textAnalyticsHandler:\", error)\n      return HttpResponse.json({ error: \"Internal Server Error\" }, { status: 500 })\n    }\n  }),\n  http.all(`${environment.clerk.origin}/**`, async info => {\n    try {\n      const res = await handler(info)\n      if (res) return HttpResponse.json(res.json as JsonBodyType)\n      return\n    } catch (error) {\n      console.error(\"Error in clerkHandler:\", error)\n      return HttpResponse.json({ error: \"Internal Server Error\" }, { status: 500 })\n    }\n  }),\n  chat.addEventListener(\"connection\", ({ client }) => {\n    client.addEventListener(\"message\", async event => {\n      const { messages } = await onMessage(event.data as string)\n      for (const message of messages) {\n        client.send(JSON.stringify(message))\n        await new Promise(resolve => setTimeout(resolve, 300)) // simulate BE latency\n      }\n    })\n  }),\n]\n\nconst mswStub = {\n  api,\n  apiClear,\n  ta,\n  taClear,\n  clerk,\n  clerkClear,\n}\n\nexport { dbStub, mswStub, mswTrpcHandlers }\n"],"names":["dbStub","mswStub","mswTrpcHandlers","JsonDb","newEmptyDb","streamToString","stream","reader","getReader","decoder","TextDecoder","result","done","value","read","decode","error","createContext","info","headers","request","forEach","key","push","jsonBody","Promise","res","setTimeout","rawBody","body","JSON","parse","e","db","reduce","acc","toString","method","toUpperCase","url","URL","handler","bigdataHandler","mock","api","clearAllMocks","apiClear","trpcHttpAdapter","router","trpcBigdataApiRouter","textAnalyticsHandler","ta","taClear","trpcTextAnalyticsApiRouter","clerk","clerkClear","clerkApiRouter","chat","ws","link","environment","app","wsUrl","onMessage","chatWebsocketApi","http","all","apiUrl","HttpResponse","json","console","status","taUrl","origin","addEventListener","client","event","messages","data","message","send","stringify","resolve"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}