77fabcc27e931e9650dc0fd8e64bfbce
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "WatchlistChatBotSuggestion", {
    enumerable: true,
    get: function() {
        return WatchlistChatBotSuggestion;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _core = require("@rp/react/web/mui/core");
const _icons = require("@rp/react/web/mui/icons");
const getIcon = (suggestion)=>{
    switch(suggestion.iconName){
        case "ArticleOutlined":
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.ArticleOutlined, {});
        case "TrendingUpOutlined":
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.TrendingUpOutlined, {});
        case "ReportGmailerrorred":
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.ReportGmailerrorred, {});
        case "ShowChartOutlined":
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.ShowChartOutlined, {});
        case "PublicOutlined":
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.PublicOutlined, {});
        case "GavelOutlined":
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.GavelOutlined, {});
        case "MergeTypeOutlined":
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.MergeTypeOutlined, {});
        case "WebOutlined":
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.WebOutlined, {});
        case "VpnKeyOutlined":
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.VpnKeyOutlined, {});
        case "NewReleasesOutlined":
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.NewReleasesOutlined, {});
        case "RocketLaunchOutlined":
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.RocketLaunchOutlined, {});
        case "GradeOutlined":
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.GradeOutlined, {});
        case "LeaderboardOutlined":
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.LeaderboardOutlined, {});
        case "PeopleOutlined":
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.PeopleOutlined, {});
        case "ReportProblemOutlined":
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.ReportProblemOutlined, {});
        case "TravelExploreOutlined":
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.TravelExploreOutlined, {});
        case "CompareArrowsOutlined":
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.CompareArrowsOutlined, {});
        case "TrendingUp":
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.TrendingUp, {});
        case "SsidChart":
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.SsidChart, {});
        case "Insights":
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.Insights, {});
        case "WorkOutlineOutlined":
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.WorkOutlineOutlined, {});
        case "AttachMoneyOutlined":
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.AttachMoneyOutlined, {});
        case "GroupWorkOutlined":
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.GroupWorkOutlined, {});
        case "FlashOn":
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.FlashOn, {});
        case "StarOutline":
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.StarOutline, {});
        case "TimelineOutlined":
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.TimelineOutlined, {});
        case "CurrencyExchangeOutlined":
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.CurrencyExchangeOutlined, {});
        case "MonetizationOnOutlined":
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.MonetizationOnOutlined, {});
        case "LegendToggleOutlined":
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.LegendToggleOutlined, {});
        case "SentimentSatisfiedAlt":
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.SentimentSatisfiedAlt, {});
        default:
            return null;
    }
};
const WatchlistChatBotSuggestion = ({ suggestion, onSuggestionClick })=>{
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Typography, {
        onClick: ()=>onSuggestionClick(suggestion),
        sx: (theme)=>({
                fontSize: 18,
                letterSpacing: "-0.25px",
                py: 0.3,
                pl: 1,
                pr: 2,
                my: 1,
                border: `1px solid transparent`,
                backgroundColor: theme.palette.elevation.dp24,
                borderRadius: "24px",
                width: "fit-content",
                display: "flex",
                alignItems: "center",
                gap: 1,
                "& svg": {
                    fontSize: 20,
                    color: "grey.300"
                },
                "&:hover": {
                    cursor: "pointer",
                    border: `1px solid ${theme.palette.outline.border}`
                }
            }),
        children: [
            getIcon(suggestion),
            suggestion.label
        ]
    }, suggestion.id);
};

//# sourceMappingURL=data:application/json;base64,