{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/common/utils/src/lib/formatTime.ts"],"sourcesContent":["import format from \"date-fns/format\"\nimport intlFormat from \"date-fns/intlFormat\"\nimport isToday from \"date-fns/isToday\"\nimport parseISO from \"date-fns/parseISO\"\n\nconst formatTime = (ts: string, localeOptions?: { locale: string | Array<string> }) => {\n  const date = new Date(ts)\n  return isToday(date)\n    ? intlFormat(date, { hour: \"2-digit\", minute: \"2-digit\", hour12: false }, localeOptions)\n    : intlFormat(date, { day: \"2-digit\", month: \"short\", year: \"numeric\" }, localeOptions)\n}\n\nconst formatISODate = (input: string, formatString = \"yyyy-MM-dd HH:mm:ss.SSS\") => {\n  const date = parseISO(input)\n\n  return format(date, formatString)\n}\n\nconst getValidDateOrStringDateFromValue = (date: Date | string | undefined): string => {\n  if (!date) return \"\"\n  if (typeof date === \"string\") return date\n  return formatISODate(date.toISOString())\n}\n\nexport { formatTime, formatISODate, getValidDateOrStringDateFromValue }\n"],"names":["formatISODate","formatTime","getValidDateOrStringDateFromValue","ts","localeOptions","date","Date","isToday","intlFormat","hour","minute","hour12","day","month","year","input","formatString","parseISO","format","toISOString"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;;;;;;;;IAwBqBA,aAAa;eAAbA;;IAAZC,UAAU;eAAVA;;IAA2BC,iCAAiC;eAAjCA;;;+DAxBjB;mEACI;gEACH;iEACC;;;;;;AAErB,MAAMD,aAAa,CAACE,IAAYC;IAC9B,MAAMC,OAAO,IAAIC,KAAKH;IACtB,OAAOI,IAAAA,gBAAO,EAACF,QACXG,IAAAA,mBAAU,EAACH,MAAM;QAAEI,MAAM;QAAWC,QAAQ;QAAWC,QAAQ;IAAM,GAAGP,iBACxEI,IAAAA,mBAAU,EAACH,MAAM;QAAEO,KAAK;QAAWC,OAAO;QAASC,MAAM;IAAU,GAAGV;AAC5E;AAEA,MAAMJ,gBAAgB,CAACe,OAAeC,eAAe,yBAAyB;IAC5E,MAAMX,OAAOY,IAAAA,iBAAQ,EAACF;IAEtB,OAAOG,IAAAA,eAAM,EAACb,MAAMW;AACtB;AAEA,MAAMd,oCAAoC,CAACG;IACzC,IAAI,CAACA,MAAM,OAAO;IAClB,IAAI,OAAOA,SAAS,UAAU,OAAOA;IACrC,OAAOL,cAAcK,KAAKc,WAAW;AACvC"}