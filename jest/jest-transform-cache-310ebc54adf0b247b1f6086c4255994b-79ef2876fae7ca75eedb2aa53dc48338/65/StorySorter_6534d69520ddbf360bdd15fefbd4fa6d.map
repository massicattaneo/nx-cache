{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/results-story-card/src/StoryCardsHeader/StorySorter.tsx"],"sourcesContent":["import { CqsQuerySortEnum } from \"@rp/common/api-types\"\nimport { styled } from \"@rp/react/theme\"\nimport { MenuItem, Select, SelectChangeEvent, Typography } from \"@rp/react/web/mui/core\"\nimport { Check, KeyboardArrowDown } from \"@rp/react/web/mui/icons\"\n\ntype SessionStorageKey = { key: \"sortBy\"; value?: string; queryId: string }\n\nconst setSessionValue = (storage: SessionStorageKey) => {\n  switch (storage.key) {\n    case \"sortBy\":\n      window.sessionStorage.setItem(`bigdata.${storage.queryId}.sortBy`, storage.value ?? \"\")\n      break\n    default:\n      break\n  }\n}\n\nconst getSessionValue = (storage: SessionStorageKey) => {\n  switch (storage.key) {\n    case \"sortBy\":\n      return window.sessionStorage.getItem(`bigdata.${storage.queryId}.sortBy`) as CqsQuerySortEnum\n    default:\n      return \"\"\n  }\n}\n\nconst PREFIX = \"StorySorter\"\n\nconst classes = {\n  sorter: `${PREFIX}-sorter`,\n  sortPicker: `${PREFIX}-sortPicker`,\n  checkIcon: `${PREFIX}-checkIcon`,\n  tr: `${PREFIX}-tr`,\n}\n\nconst StorySorterStyled = styled(\"div\")(({ theme }) => ({\n  [`&.${classes.sorter}`]: {\n    color: theme.palette.grey[300],\n    alignItems: \"center\",\n    display: \"flex\",\n    minWidth: \"150px\",\n    flexGrow: 0,\n  },\n  [`& .${classes.sortPicker}`]: {\n    background: \"transparent\",\n    padding: 0,\n    marginLeft: 3,\n    minHeight: 0,\n    color: theme.palette.common.white,\n    fontSize: 14,\n    \"&::after\": {\n      content: '\"\"',\n      border: 0,\n    },\n    \"& div\": {\n      padding: 0,\n\n      \"&:focus\": {\n        background: \"transparent\",\n      },\n    },\n  },\n}))\n\ntype SorterTypes = {\n  queryId: string\n  sorterOptions: Array<string>\n  sort: string\n  setSort: (option: CqsQuerySortEnum) => void\n}\n\nconst StorySorter = ({ sorterOptions, sort, setSort, queryId }: SorterTypes) => {\n  const sortValue =\n    getSessionValue({\n      key: \"sortBy\",\n      queryId,\n    }) ?? sort\n  const toCapitalize = (string: string | undefined) => {\n    if (!string) return \"\"\n    return string.charAt(0).toUpperCase() + string.slice(1)\n  }\n  const handleChange = (event: SelectChangeEvent) => {\n    setSessionValue({\n      key: \"sortBy\",\n      queryId,\n      value: event.target.value,\n    })\n    setSort(event.target.value as CqsQuerySortEnum)\n  }\n\n  return (\n    <StorySorterStyled className={classes.sorter}>\n      <Typography variant=\"body2\">Sort by:</Typography>\n      <Select\n        variant=\"standard\"\n        disableUnderline\n        value={sortValue}\n        onChange={handleChange}\n        className={classes.sortPicker}\n        renderValue={value => (\n          <span>{toCapitalize(sorterOptions.find(type => type === value))}</span>\n        )}\n        data-testid=\"sort-picker\"\n        IconComponent={KeyboardArrowDown}\n      >\n        {sorterOptions.map(value => (\n          <MenuItem key={value} value={value}>\n            {toCapitalize(value)}\n            {sortValue === value && <Check sx={{ ml: 2 }} />}\n          </MenuItem>\n        ))}\n      </Select>\n    </StorySorterStyled>\n  )\n}\n\nexport default StorySorter\n"],"names":["setSessionValue","storage","key","window","sessionStorage","setItem","queryId","value","getSessionValue","getItem","PREFIX","classes","sorter","sortPicker","checkIcon","tr","StorySorterStyled","styled","theme","color","palette","grey","alignItems","display","minWidth","flexGrow","background","padding","marginLeft","minHeight","common","white","fontSize","content","border","StorySorter","sorterOptions","sort","setSort","sortValue","toCapitalize","string","charAt","toUpperCase","slice","handleChange","event","target","className","Typography","variant","Select","disableUnderline","onChange","renderValue","span","find","type","data-testid","IconComponent","KeyboardArrowDown","map","MenuItem","Check","sx","ml"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAoHA;;;eAAA;;;;uBAnHuB;sBACyC;uBACvB;AAIzC,MAAMA,kBAAkB,CAACC;IACvB,OAAQA,QAAQC,GAAG;QACjB,KAAK;gBACgED;YAAnEE,OAAOC,cAAc,CAACC,OAAO,CAAC,CAAC,QAAQ,EAAEJ,QAAQK,OAAO,CAAC,OAAO,CAAC,EAAEL,CAAAA,iBAAAA,QAAQM,KAAK,cAAbN,4BAAAA,iBAAiB;YACpF;QACF;YACE;IACJ;AACF;AAEA,MAAMO,kBAAkB,CAACP;IACvB,OAAQA,QAAQC,GAAG;QACjB,KAAK;YACH,OAAOC,OAAOC,cAAc,CAACK,OAAO,CAAC,CAAC,QAAQ,EAAER,QAAQK,OAAO,CAAC,OAAO,CAAC;QAC1E;YACE,OAAO;IACX;AACF;AAEA,MAAMI,SAAS;AAEf,MAAMC,UAAU;IACdC,QAAQ,CAAC,EAAEF,OAAO,OAAO,CAAC;IAC1BG,YAAY,CAAC,EAAEH,OAAO,WAAW,CAAC;IAClCI,WAAW,CAAC,EAAEJ,OAAO,UAAU,CAAC;IAChCK,IAAI,CAAC,EAAEL,OAAO,GAAG,CAAC;AACpB;AAEA,MAAMM,oBAAoBC,IAAAA,aAAM,EAAC,OAAO,CAAC,EAAEC,KAAK,EAAE,GAAM,CAAA;QACtD,CAAC,CAAC,EAAE,EAAEP,QAAQC,MAAM,CAAC,CAAC,CAAC,EAAE;YACvBO,OAAOD,MAAME,OAAO,CAACC,IAAI,CAAC,IAAI;YAC9BC,YAAY;YACZC,SAAS;YACTC,UAAU;YACVC,UAAU;QACZ;QACA,CAAC,CAAC,GAAG,EAAEd,QAAQE,UAAU,CAAC,CAAC,CAAC,EAAE;YAC5Ba,YAAY;YACZC,SAAS;YACTC,YAAY;YACZC,WAAW;YACXV,OAAOD,MAAME,OAAO,CAACU,MAAM,CAACC,KAAK;YACjCC,UAAU;YACV,YAAY;gBACVC,SAAS;gBACTC,QAAQ;YACV;YACA,SAAS;gBACPP,SAAS;gBAET,WAAW;oBACTD,YAAY;gBACd;YACF;QACF;IACF,CAAA;AASA,MAAMS,cAAc,CAAC,EAAEC,aAAa,EAAEC,IAAI,EAAEC,OAAO,EAAEhC,OAAO,EAAe;QAEvEE;IADF,MAAM+B,YACJ/B,CAAAA,mBAAAA,gBAAgB;QACdN,KAAK;QACLI;IACF,gBAHAE,8BAAAA,mBAGM6B;IACR,MAAMG,eAAe,CAACC;QACpB,IAAI,CAACA,QAAQ,OAAO;QACpB,OAAOA,OAAOC,MAAM,CAAC,GAAGC,WAAW,KAAKF,OAAOG,KAAK,CAAC;IACvD;IACA,MAAMC,eAAe,CAACC;QACpB9C,gBAAgB;YACdE,KAAK;YACLI;YACAC,OAAOuC,MAAMC,MAAM,CAACxC,KAAK;QAC3B;QACA+B,QAAQQ,MAAMC,MAAM,CAACxC,KAAK;IAC5B;IAEA,qBACE,sBAACS;QAAkBgC,WAAWrC,QAAQC,MAAM;;0BAC1C,qBAACqC,gBAAU;gBAACC,SAAQ;0BAAQ;;0BAC5B,qBAACC,YAAM;gBACLD,SAAQ;gBACRE,gBAAgB;gBAChB7C,OAAOgC;gBACPc,UAAUR;gBACVG,WAAWrC,QAAQE,UAAU;gBAC7ByC,aAAa/C,CAAAA,sBACX,qBAACgD;kCAAMf,aAAaJ,cAAcoB,IAAI,CAACC,CAAAA,OAAQA,SAASlD;;gBAE1DmD,eAAY;gBACZC,eAAeC,wBAAiB;0BAE/BxB,cAAcyB,GAAG,CAACtD,CAAAA,sBACjB,sBAACuD,cAAQ;wBAAavD,OAAOA;;4BAC1BiC,aAAajC;4BACbgC,cAAchC,uBAAS,qBAACwD,YAAK;gCAACC,IAAI;oCAAEC,IAAI;gCAAE;;;uBAF9B1D;;;;AAQzB;MAEA,WAAe4B"}