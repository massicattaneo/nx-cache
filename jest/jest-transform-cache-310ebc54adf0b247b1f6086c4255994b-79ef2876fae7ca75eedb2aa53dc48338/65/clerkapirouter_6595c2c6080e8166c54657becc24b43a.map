{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/development/src/lib/trpc/clerk-api/clerk-api-router.ts"],"sourcesContent":["import { z } from \"zod\"\nimport { clerkClient } from \"../../msw/mocks/clerk/clerkClient\"\nimport { clerkEnvironment } from \"../../msw/mocks/clerk/clerkEnvironment\"\nimport { clerkOrganizationIdMembership } from \"../../msw/mocks/clerk/clerkOrganizationIdMembership\"\nimport { clerkSession } from \"../../msw/mocks/clerk/clerkSession\"\nimport { clerkSignUp } from \"../../msw/mocks/clerk/clerkSignUp\"\nimport { clerkTouch } from \"../../msw/mocks/clerk/clerkTouch\"\nimport { clerkApiProcedure, trpcClerkApiServer } from \"./clerk-api-procedure\"\n\nexport const clerkApiRouter = trpcClerkApiServer.router({\n  me: clerkApiProcedure\n    .meta({ openapi: { method: \"POST\", path: \"/v1/me\" } })\n    .query(async () => clerkClient),\n  environment: clerkApiProcedure\n    .meta({ openapi: { method: \"GET\", path: \"/v1/environment\" } })\n    .mutation(async () => clerkEnvironment),\n  signup: clerkApiProcedure\n    .meta({ openapi: { method: \"POST\", path: \"/v1/client/sign_ups\" } })\n    .input(z.object({ email_address: z.string() }))\n    .mutation(async ({ input }) => clerkSignUp({ email: input.email_address })),\n  finishSignUp: clerkApiProcedure\n    .meta({ openapi: { method: \"POST\", path: \"/v1/client/sign_ups/:id\" } })\n    .input(\n      z.object({\n        id: z.string(),\n        first_name: z.string(),\n        last_name: z.string(),\n        password: z.string(),\n        legal_accepted: z.string(),\n        unsafe_metadata: z.string(),\n      }),\n    )\n    .mutation(async ({ input }) => clerkSignUp({ id: input.id })),\n  prepareVerification: clerkApiProcedure\n    .meta({ openapi: { method: \"POST\", path: \"/v1/client/sign_ups/:id/prepare_verification\" } })\n    .input(z.object({ id: z.string(), strategy: z.literal(\"email_code\") }))\n    .mutation(async ({ input }) => {\n      return clerkSignUp({ id: input.id })\n    }),\n  attemptVerification: clerkApiProcedure\n    .meta({ openapi: { method: \"POST\", path: \"/v1/client/sign_ups/:id/attempt_verification\" } })\n    .input(z.object({ id: z.string(), strategy: z.literal(\"email_code\"), code: z.string() }))\n    .mutation(async () => null),\n  client: clerkApiProcedure\n    .meta({ openapi: { method: \"GET\", path: \"/v1/client\" } })\n    .query(async () => clerkClient),\n  sessions: clerkApiProcedure\n    .meta({ openapi: { method: \"POST\", path: \"/v1/client/sessions\" } })\n    .mutation(async () => clerkSession()),\n  sessionsTouch: clerkApiProcedure\n    .meta({ openapi: { method: \"POST\", path: \"/v1/client/sessions/:id/touch\" } })\n    .mutation(async () => clerkTouch),\n  templateTokens: clerkApiProcedure\n    .meta({ openapi: { method: \"POST\", path: \"/v1/client/sessions/:id/tokens/bigdata_web\" } })\n    .mutation(async () => clerkSession()),\n  tokens: clerkApiProcedure\n    .meta({ openapi: { method: \"POST\", path: \"/v1/client/sessions/:id/tokens\" } })\n    .mutation(async () => clerkSession()),\n  organizationMemberships: clerkApiProcedure\n    .meta({ openapi: { method: \"GET\", path: \"/v1/me/organization_memberships\" } })\n    .query(async () => clerkOrganizationIdMembership),\n  organizationIdMemberships: clerkApiProcedure\n    .meta({ openapi: { method: \"GET\", path: \"/v1/organizations/:id/memberships\" } })\n    .query(async () => clerkOrganizationIdMembership),\n})\n"],"names":["clerkApiRouter","trpcClerkApiServer","router","me","clerkApiProcedure","meta","openapi","method","path","query","clerkClient","environment","mutation","clerkEnvironment","signup","input","z","object","email_address","string","clerkSignUp","email","finishSignUp","id","first_name","last_name","password","legal_accepted","unsafe_metadata","prepareVerification","strategy","literal","attemptVerification","code","client","sessions","clerkSession","sessionsTouch","clerkTouch","templateTokens","tokens","organizationMemberships","clerkOrganizationIdMembership","organizationIdMemberships"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}