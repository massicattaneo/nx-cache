{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/common/api-types/src/lib/rpql-type-guards/rpql-type-guards.ts"],"sourcesContent":["import {\n  RpqlArrayFilter,\n  RpqlArrayIdFilter,\n  RpqlDateFilter,\n  RpqlFilter,\n  RpqlLogicalGroupFilter,\n  RpqlLogicalNotFilter,\n  RpqlMatchFilter,\n  RpqlRangeFilter,\n} from \"../rpql-types/api.types\"\nimport {\n  RpqlFlatArrayFilter,\n  RpqlFlatArrayIdFilter,\n  RpqlFlatDateFilter,\n  RpqlFlatExclusiveArrayFilter,\n  RpqlFlatExclusiveArrayIdFilter,\n  RpqlFlatExclusiveLogicFilter,\n  RpqlFlatFilter,\n  RpqlFlatLogicalFilter,\n  RpqlFlatLogicalNotFilter,\n  RpqlFlatMatchFilter,\n  RpqlFlatRangeFilter,\n} from \"../rpql-types/flattened.types\"\n\nconst isRpqlLogicalGroup = (obj: RpqlFilter): obj is RpqlLogicalGroupFilter => {\n  return [\"and\", \"or\"].includes(obj.type)\n}\n\nconst isRpqlFlatLogicalGroup = (obj: RpqlFlatFilter): obj is RpqlFlatLogicalFilter => {\n  return [\"and\", \"or\", \"not-and\", \"not-or\"].includes(obj.type)\n}\n\nconst isRpqlRangeFilter = (obj: RpqlFilter): obj is RpqlRangeFilter => {\n  return \"start\" in obj && \"end\" in obj\n}\nconst isRpqlDateFilter = (obj: RpqlFilter): obj is RpqlDateFilter => obj.type === \"date\"\n\nconst isRpqlLogicalNot = (obj: RpqlFilter): obj is RpqlLogicalNotFilter => obj.type === \"not\"\n\nconst isRpqlFlatLogicalNot = (obj: RpqlFlatFilter): obj is RpqlFlatLogicalNotFilter =>\n  obj.type === \"not\"\n\nconst isRpqlArrayFilter = (obj: RpqlFilter): obj is RpqlArrayFilter =>\n  !isRpqlRangeFilter(obj) &&\n  !isRpqlDateFilter(obj) &&\n  Array.isArray(obj.value) &&\n  \"operation\" in obj &&\n  [\"in\", \"all\"].includes(obj.operation)\n\nconst isRpqlFlatArrayFilter = (obj: RpqlFlatFilter): obj is RpqlFlatArrayFilter =>\n  Array.isArray(obj.value) &&\n  \"operation\" in obj &&\n  !isRpqlFlatDateFilter(obj) &&\n  [\"in\", \"all\", \"not-in\", \"not-all\"].includes(obj.operation)\n\nconst isRpqlFlatExclusiveLogicFilter = (\n  obj: RpqlFlatFilter,\n): obj is RpqlFlatExclusiveLogicFilter => {\n  return isRpqlFlatLogicalGroup(obj) && obj.type.startsWith(\"not-\")\n}\n\nconst isRpqlFlatExclusiveArrayBaseFilter = (\n  obj: RpqlFlatFilter,\n): obj is RpqlFlatExclusiveArrayFilter => {\n  return isRpqlFlatArrayFilter(obj) && obj.operation.startsWith(\"not-\")\n}\n\nconst isRpqlArrayIdFilter = (obj: RpqlFilter): obj is RpqlArrayIdFilter =>\n  !isRpqlDateFilter(obj) &&\n  \"value\" in obj &&\n  typeof obj.value === \"string\" &&\n  \"operation\" in obj &&\n  [\"in\", \"all\"].includes(obj.operation)\n\nconst isRpqlFlatArrayIdFilter = (obj: RpqlFlatFilter): obj is RpqlFlatArrayIdFilter =>\n  typeof obj.value === \"string\" &&\n  \"operation\" in obj &&\n  !isRpqlFlatDateFilter(obj) &&\n  [\"in\", \"all\", \"not-in\", \"not-all\"].includes(obj.operation)\n\nconst isRpqlFlatExclusiveArrayIdBaseFilter = (\n  obj: RpqlFlatFilter,\n): obj is RpqlFlatExclusiveArrayIdFilter => {\n  return isRpqlFlatArrayIdFilter(obj) && obj.operation.startsWith(\"not-\")\n}\n\nconst isRpqlFlatRangeFilter = (obj: RpqlFlatFilter): obj is RpqlFlatRangeFilter => {\n  return (\n    obj.type !== \"date\" &&\n    \"operation\" in obj &&\n    !isRpqlFlatDateFilter(obj) &&\n    [\"between\", \"not-between\"].includes(obj.operation)\n  )\n}\n\nconst isRpqlFlatDateFilter = (obj: RpqlFlatFilter): obj is RpqlFlatDateFilter => {\n  return obj.type === \"date\"\n}\n\nconst isRpqlMatchFilter = (obj: RpqlFilter): obj is RpqlMatchFilter => {\n  return (\n    \"value\" in obj &&\n    Array.isArray(obj.value) &&\n    obj.value.length > 0 &&\n    typeof obj.value[0] !== \"string\" &&\n    isRpqlArrayFilter(obj.value[0])\n  )\n}\n\nconst isRpqlFlatMatchFilter = (obj: RpqlFlatFilter): obj is RpqlFlatMatchFilter => {\n  return (\n    // TODO: There is no other way for now to distinguish\n    obj.type.slice(0, 6) === \"macro_\"\n  )\n}\n\nexport {\n  isRpqlLogicalGroup,\n  isRpqlFlatLogicalGroup,\n  isRpqlLogicalNot,\n  isRpqlFlatLogicalNot,\n  isRpqlArrayFilter,\n  isRpqlFlatArrayFilter,\n  isRpqlFlatExclusiveLogicFilter,\n  isRpqlFlatExclusiveArrayBaseFilter,\n  isRpqlArrayIdFilter,\n  isRpqlFlatArrayIdFilter,\n  isRpqlFlatExclusiveArrayIdBaseFilter,\n  isRpqlRangeFilter,\n  isRpqlFlatRangeFilter,\n  isRpqlDateFilter,\n  isRpqlFlatDateFilter,\n  isRpqlMatchFilter,\n  isRpqlFlatMatchFilter,\n}\n"],"names":["isRpqlArrayFilter","isRpqlArrayIdFilter","isRpqlDateFilter","isRpqlFlatArrayFilter","isRpqlFlatArrayIdFilter","isRpqlFlatDateFilter","isRpqlFlatExclusiveArrayBaseFilter","isRpqlFlatExclusiveArrayIdBaseFilter","isRpqlFlatExclusiveLogicFilter","isRpqlFlatLogicalGroup","isRpqlFlatLogicalNot","isRpqlFlatMatchFilter","isRpqlFlatRangeFilter","isRpqlLogicalGroup","isRpqlLogicalNot","isRpqlMatchFilter","isRpqlRangeFilter","obj","includes","type","Array","isArray","value","operation","startsWith","length","slice"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}