{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/composite-components/src/InfiniteList/InfiniteListItem.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\"\n\ntype Props<ItemType> = {\n  item: ItemType\n  renderItem: (\n    item: ItemType,\n    index: number,\n    intersect: (<ElementType extends HTMLElement>(node: ElementType) => void) | undefined,\n  ) => React.ReactNode\n  virtualized?: boolean\n  root?: Element | Document | null\n  index: number\n  intersect: (<ElementType extends HTMLElement>(node: ElementType) => void) | undefined\n  ariaLabel?: string\n}\n\nfunction InfiniteListItem<ItemType extends { id: string }>({\n  ariaLabel,\n  renderItem,\n  virtualized = false,\n  root = window.document,\n  item,\n  index,\n  intersect,\n}: Props<ItemType>) {\n  const [isVisible, setIsVisible] = useState(true)\n  const [height, setHeight] = useState(0)\n  const [ref, setRef] = useState<HTMLDivElement | null>(null)\n\n  useEffect(() => {\n    if (!virtualized) return\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        setHeight(entry.boundingClientRect.height)\n        setIsVisible(entry.isIntersecting)\n      },\n      {\n        root: root,\n        rootMargin: \"150px\",\n      },\n    )\n    const el = ref\n    if (el) {\n      observer.observe(el)\n    }\n    return () => {\n      if (el) {\n        observer.unobserve(el)\n      }\n    }\n  }, [virtualized, root, ref])\n\n  return (\n    <div\n      aria-label={ariaLabel}\n      data-index={index}\n      className={\"infinite-list-item\"}\n      key={item.id}\n      role=\"listitem\"\n      ref={intersect ? (node: HTMLDivElement) => intersect(node) : undefined}\n    >\n      <div ref={setRef}>\n        {!virtualized || isVisible ? (\n          renderItem(item, index, intersect)\n        ) : (\n          <div style={{ height }}></div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport { InfiniteListItem }\n"],"names":["InfiniteListItem","ariaLabel","renderItem","virtualized","root","window","document","item","index","intersect","isVisible","setIsVisible","useState","height","setHeight","ref","setRef","useEffect","observer","IntersectionObserver","entry","boundingClientRect","isIntersecting","rootMargin","el","observe","unobserve","div","aria-label","data-index","className","role","node","undefined","style","id"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAwESA;;;eAAAA;;;;uBAxE2B;AAgBpC,SAASA,iBAAkD,EACzDC,SAAS,EACTC,UAAU,EACVC,cAAc,KAAK,EACnBC,OAAOC,OAAOC,QAAQ,EACtBC,IAAI,EACJC,KAAK,EACLC,SAAS,EACO;IAChB,MAAM,CAACC,WAAWC,aAAa,GAAGC,IAAAA,eAAQ,EAAC;IAC3C,MAAM,CAACC,QAAQC,UAAU,GAAGF,IAAAA,eAAQ,EAAC;IACrC,MAAM,CAACG,KAAKC,OAAO,GAAGJ,IAAAA,eAAQ,EAAwB;IAEtDK,IAAAA,gBAAS,EAAC;QACR,IAAI,CAACd,aAAa;QAClB,MAAMe,WAAW,IAAIC,qBACnB,CAAC,CAACC,MAAM;YACNN,UAAUM,MAAMC,kBAAkB,CAACR,MAAM;YACzCF,aAAaS,MAAME,cAAc;QACnC,GACA;YACElB,MAAMA;YACNmB,YAAY;QACd;QAEF,MAAMC,KAAKT;QACX,IAAIS,IAAI;YACNN,SAASO,OAAO,CAACD;QACnB;QACA,OAAO;YACL,IAAIA,IAAI;gBACNN,SAASQ,SAAS,CAACF;YACrB;QACF;IACF,GAAG;QAACrB;QAAaC;QAAMW;KAAI;IAE3B,qBACE,qBAACY;QACCC,cAAY3B;QACZ4B,cAAYrB;QACZsB,WAAW;QAEXC,MAAK;QACLhB,KAAKN,YAAY,CAACuB,OAAyBvB,UAAUuB,QAAQC;kBAE7D,cAAA,qBAACN;YAAIZ,KAAKC;sBACP,CAACb,eAAeO,YACfR,WAAWK,MAAMC,OAAOC,2BAExB,qBAACkB;gBAAIO,OAAO;oBAAErB;gBAAO;;;OARpBN,KAAK4B,EAAE;AAalB"}