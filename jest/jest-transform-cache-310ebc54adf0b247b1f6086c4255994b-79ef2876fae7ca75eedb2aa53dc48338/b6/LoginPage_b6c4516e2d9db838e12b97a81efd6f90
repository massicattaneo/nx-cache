8efb56c119f5251a7345a12a9ace14a6
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "LoginPage", {
    enumerable: true,
    get: function() {
        return LoginPage;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _reacthookform = require("react-hook-form");
const _reacti18next = require("react-i18next");
const _reactrouterdom = require("react-router-dom");
const _zod = require("zod");
const _clerkreact = require("@clerk/clerk-react");
const _errors = require("@clerk/clerk-react/errors");
const _zod1 = require("@hookform/resolvers/zod");
const _adapters = require("@rp/adapters");
const _utils = require("@rp/common/utils");
const _basecomponents = require("@rp/react/web/common/base-components");
const _compositecomponents = require("@rp/react/web/common/composite-components");
const _hooks = require("@rp/react/web/common/hooks");
const _providers = require("@rp/react/web/common/providers");
const _core = require("@rp/react/web/mui/core");
const _icons = require("@rp/react/web/mui/icons");
const _router = require("@rp/react/web/router");
const _reactquery = require("@tanstack/react-query");
const _loginroute = require("../../atoms/login-route");
const _MobileOnboardingPage = require("../MobileOnboardingPage/MobileOnboardingPage");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function isSamlError(error) {
    var _error_errors__longMessage;
    if (!(0, _errors.isClerkAPIResponseError)(error)) {
        return false;
    }
    return (_error_errors__longMessage = error.errors[0].longMessage) === null || _error_errors__longMessage === void 0 ? void 0 : _error_errors__longMessage.toLowerCase().includes("saml");
}
function useAppSignIn({ redirect = _adapters.adapters.location.getAbsoluteBaseUrl(), email }) {
    const { signIn, setActive, isLoaded } = (0, _clerkreact.useSignIn)();
    const { enqueueError } = (0, _providers.useSnackbar)();
    const navigate = (0, _reactrouterdom.useNavigate)();
    return (0, _reactquery.useMutation)({
        mutationFn: (params)=>{
            if (!isLoaded) {
                return Promise.reject("Clerk is not loaded");
            }
            return signIn.create(params);
        },
        onSuccess: (data)=>{
            setActive === null || setActive === void 0 ? void 0 : setActive({
                session: data.createdSessionId
            });
            window.location.replace(redirect);
        },
        onError: (error)=>{
            if (isSamlError(error)) {
                enqueueError("Please log in with SSO", {
                    anchorOrigin: {
                        vertical: "bottom",
                        horizontal: "center"
                    }
                });
                navigate(`${_router.SSO_LOGIN_ROUTE}/?email=${encodeURIComponent(email)}`);
                return;
            }
            enqueueError((0, _utils.displayError)(error), {
                anchorOrigin: {
                    vertical: "bottom",
                    horizontal: "center"
                }
            });
        }
    });
}
function ForgotPasswordLink({ email }) {
    const params = new URLSearchParams();
    if (email) {
        params.set("email", email);
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactrouterdom.Link, {
        to: email ? `${_router.RESET_PASSWORD_ROUTE}/?${params.toString()}` : _router.RESET_PASSWORD_ROUTE,
        children: "Forgot your password?"
    });
}
const FormSchema = _zod.z.object({
    identifier: _zod.z.string().email(),
    password: _zod.z.string()
});
const LoginPage = ({ redirect })=>{
    const { t } = (0, _reacti18next.useTranslation)();
    const { isMobile, isIOS, isAndroid } = (0, _hooks.useDeviceInfo)();
    const { isFromNative } = (0, _hooks.useFromNative)();
    const { setLoginRoute } = (0, _loginroute.useLoginRouteAtom)();
    const [step, setStep] = (0, _react.useState)("email");
    const form = (0, _reacthookform.useForm)({
        resolver: (0, _zod1.zodResolver)(FormSchema)
    });
    const email = form.watch("identifier", "");
    const { mutate, isPending } = useAppSignIn({
        redirect,
        email
    });
    const { displayState, saveLSAndHideComponent } = (0, _hooks.useMobileNativePopup)(_utils.MOBILE_ONBOARDING_SCREEN_KEY);
    const handleSubmit = (values)=>{
        mutate(values);
    };
    (0, _react.useEffect)(()=>{
        setLoginRoute(window.location.pathname);
    }, [
        setLoginRoute
    ]);
    return isMobile && (isIOS || isAndroid) && displayState ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_MobileOnboardingPage.MobileOnboardingPage, {
        onPressContinueWeb: saveLSAndHideComponent,
        deepLinkURL: _utils.DEEP_LINK_TOOL_HTTPS_URL
    }) : /*#__PURE__*/ (0, _jsxruntime.jsxs)(_compositecomponents.LoginContainer, {
        pageTitle: t("loginPage.title"),
        title: step === "email" ? t("loginPage.title") : t("loginPage.titlePassword"),
        hideCloseIcon: true,
        children: [
            step === "password" && /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.IconButton, {
                onClick: ()=>setStep("email"),
                sx: {
                    left: isMobile ? 8 : 16,
                    top: isMobile ? 8 : 16,
                    position: "fixed"
                },
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.ArrowBack, {})
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("form", {
                onSubmit: (ev)=>{
                    if (step === "email") {
                        ev.preventDefault();
                        setStep("password");
                        setTimeout(()=>form.setFocus("password"));
                    } else {
                        form.handleSubmit(handleSubmit)(ev);
                    }
                },
                style: {
                    display: "flex",
                    flexDirection: "column",
                    gap: 24,
                    marginBottom: 24,
                    marginTop: 16
                },
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Stack, {
                        width: "100%",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.InputLabel, {
                                htmlFor: "email",
                                sx: {
                                    margin: "0 0 10px 0 !important"
                                },
                                children: t("common.emailLabel")
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.OutlinedInput, _object_spread({
                                id: "email",
                                placeholder: t("common.emailPlaceholder")
                            }, form.register("identifier")))
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Stack, {
                        width: "100%",
                        sx: {
                            display: step === "password" ? undefined : "none"
                        },
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.InputLabel, {
                                htmlFor: "password",
                                sx: {
                                    margin: "0 0 10px 0 !important"
                                },
                                children: "Password"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.PasswordInput, _object_spread({
                                id: "password",
                                placeholder: t("common.passwordPlaceholder")
                            }, form.register("password")))
                        ]
                    }),
                    step === "password" && /*#__PURE__*/ (0, _jsxruntime.jsx)(ForgotPasswordLink, {
                        email: email
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Button, {
                        variant: "contained",
                        sx: {
                            fontSize: 16
                        },
                        type: "submit",
                        fullWidth: true,
                        disabled: isPending,
                        children: t("common.continueButtonLowercase")
                    })
                ]
            }),
            step === "email" && !isFromNative && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Divider, {
                        sx: {
                            mb: 3,
                            width: "100%"
                        },
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                            variant: "subtitle2",
                            sx: {
                                color: "text.secondary"
                            },
                            children: "or"
                        })
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.SocialSignInButtons, {}),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.SSOSignInButton, {
                        email: email
                    })
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Typography, {
                mt: 3,
                fontSize: "16px",
                color: "text.secondary",
                children: [
                    t("loginPage.noAccount"),
                    "   ",
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactrouterdom.Link, {
                        to: `${_router.SIGN_UP_ROUTE}${window.location.search}`,
                        children: t("loginPage.signUp")
                    })
                ]
            })
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,