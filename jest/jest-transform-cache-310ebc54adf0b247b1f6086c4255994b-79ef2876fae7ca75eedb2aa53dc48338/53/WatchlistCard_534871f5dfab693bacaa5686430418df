8c2012dcbeb28cd5e29e7b9bccc8e265
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "WatchlistCard", {
    enumerable: true,
    get: function() {
        return WatchlistCard;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _reactrouterdom = require("react-router-dom");
const _clerkreact = require("@clerk/clerk-react");
const _assets = require("@rp/react/common/assets");
const _watchlists = require("@rp/react/common/watchlists");
const _watchlist = require("@rp/react/tanstack-api/watchlist");
const _basecomponents = require("@rp/react/web/common/base-components");
const _compositecomponents = require("@rp/react/web/common/composite-components");
const _providers = require("@rp/react/web/common/providers");
const _core = require("@rp/react/web/mui/core");
const _icons = require("@rp/react/web/mui/icons");
const _utils = require("@rp/web/utils");
const _WatchlistAveragePercentageChange = require("../WatchlistAveragePercentageChange");
const _WatchlistCardContainer = require("./WatchlistCardContainer");
const _WatchlistCardImage = require("./WatchlistCardImage");
const _WatchlistCardLoading = require("./WatchlistCardLoading");
const FavoriteButton = (0, _core.styled)(_core.Button)(({ theme })=>({
        position: "absolute",
        top: 6,
        right: 6,
        borderRadius: 10,
        opacity: 1,
        transition: "opacity 0.2s",
        minWidth: "fit-content",
        padding: 4,
        backgroundColor: theme.palette.primary.main,
        color: theme.palette.primary.contrastText,
        "&:hover": {
            backgroundColor: theme.palette.primary.dark
        }
    }));
const WatchlistCard = ({ watchlist, showPerformance = false, onClick, activeCard })=>{
    const { cameFromLinkPathname } = (0, _providers.useShareContext)();
    const { pathname } = (0, _reactrouterdom.useLocation)();
    const { mutate: mutateFavorite, isPending: isPendingFavorite } = (0, _watchlist.useFavoriteWatchlist)();
    const { mutate: mutateUnfavorite, isPending: isPendingUnfavorite } = (0, _watchlist.useUnfavoriteWatchlist)();
    const [ref, setRef] = (0, _react.useState)(null);
    var _ref_getBoundingClientRect_height;
    const titleHeight = (_ref_getBoundingClientRect_height = ref === null || ref === void 0 ? void 0 : ref.getBoundingClientRect().height) !== null && _ref_getBoundingClientRect_height !== void 0 ? _ref_getBoundingClientRect_height : 0;
    const { user } = (0, _clerkreact.useUser)();
    const { displayName, name, avatar } = (0, _watchlists.getWatchlistOwnerInfo)(watchlist, user);
    const { average, isLoading: isLoadingAverage } = (0, _watchlists.usePerformanceIndicator)(showPerformance ? watchlist === null || watchlist === void 0 ? void 0 : watchlist.id : undefined);
    const isFavorite = watchlist === null || watchlist === void 0 ? void 0 : watchlist.isFavorite;
    const countAverage = !!average || isLoadingAverage;
    const handleFavoriteClick = (e)=>{
        e.stopPropagation();
        if (isPendingFavorite || isPendingUnfavorite) {
            return;
        }
        if (watchlist === null || watchlist === void 0 ? void 0 : watchlist.id) {
            const send = (0, _utils.hasPerformedSessionAction)("shared_link_favorited", pathname, cameFromLinkPathname);
            isFavorite ? mutateUnfavorite(watchlist.id) : mutateFavorite({
                id: watchlist.id,
                cameFromSharedLink: send
            });
        }
    };
    if (!watchlist) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_WatchlistCardLoading.WatchlistCardLoading, {});
    }
    var _watchlist_imageUrl, _watchlist_description, _watchlist_description1;
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_WatchlistCardContainer.WatchlistCardContainer, {
        sx: {
            cursor: onClick ? "pointer" : undefined,
            "&:hover": {
                backgroundColor: "elevation.dp06"
            },
            "&:hover .hover-favorite": {
                opacity: 1
            },
            border: activeCard ? `2px solid #4CA7F9` : null
        },
        onClick: onClick,
        "data-testid": "watchlist-card",
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_WatchlistCardImage.WatchlistCardImage, {
                fallback: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                    sx: {
                        height: "100%",
                        display: "flex",
                        alignItems: "center",
                        justifyContent: "center"
                    },
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.ImageNotSupported, {})
                }),
                src: (_watchlist_imageUrl = watchlist.imageUrl) !== null && _watchlist_imageUrl !== void 0 ? _watchlist_imageUrl : _assets.defaultWatchlistImage,
                alt: watchlist.name
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                sx: {
                    height: "52%",
                    display: "block"
                },
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                        sx: {
                            display: "flex",
                            justifyContent: "left",
                            mt: 0.5
                        },
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_WatchlistAveragePercentageChange.WatchlistAverageChangePercentageChip, {
                            hideBackground: true,
                            isLoading: isLoadingAverage,
                            averageChangePercentage: average
                        })
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                        ref: setRef,
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.EllipsisTooltip, {
                            vertical: true,
                            numberOfLines: watchlist.description ? 2 : 4,
                            tooltipText: watchlist.name,
                            typographyProps: {
                                lineHeight: "1.4",
                                fontSize: 18,
                                fontWeight: 700,
                                mt: countAverage ? 0 : 1
                            },
                            children: watchlist.name
                        })
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.EllipsisTooltip, {
                        vertical: true,
                        numberOfLines: (titleHeight > 30 ? 4 : 5) - (countAverage ? 1 : 0),
                        tooltipText: (_watchlist_description = watchlist.description) !== null && _watchlist_description !== void 0 ? _watchlist_description : "",
                        typographyProps: {
                            lineHeight: "1.3",
                            fontSize: 14,
                            fontWeight: 400,
                            mt: 0.5,
                            color: "text.secondary"
                        },
                        children: (_watchlist_description1 = watchlist.description) !== null && _watchlist_description1 !== void 0 ? _watchlist_description1 : ""
                    })
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                sx: {
                    display: "flex",
                    alignItems: "center",
                    gap: 1,
                    mt: 1
                },
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.UserAvatar, {
                        size: 24,
                        imgUrl: avatar,
                        hasImage: !!avatar,
                        ownerName: name
                    }),
                    " ",
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.EllipsisTooltip, {
                        tooltipText: displayName,
                        typographyProps: {
                            sx: {
                                fontSize: 14,
                                color: "grey.300"
                            }
                        },
                        children: displayName
                    })
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(FavoriteButton, {
                "aria-label": "favorite",
                className: "hover-favorite",
                onClick: handleFavoriteClick,
                sx: {
                    opacity: 0,
                    fontSize: 18,
                    boxShadow: "0px 1px 5px 0px rgba(0, 0, 0, 0.2)"
                },
                children: isFavorite ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.Star, {
                    sx: {
                        fontSize: 20
                    }
                }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.StarOutline, {
                    sx: {
                        fontSize: 20
                    }
                })
            })
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,