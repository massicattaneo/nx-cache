8010b87f68c13cffff8d8a4edbc14450
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "WatchlistChatInput", {
    enumerable: true,
    get: function() {
        return WatchlistChatInput;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _settings = require("@rp/common/settings");
const _chat = require("@rp/react/web/chat");
const _core = require("@rp/react/web/mui/core");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const WatchlistChatInput = ({ variant, placeholder, addPrompt, isValidPrompt, sourceFilters, setScope, scope, filesIds, setFilesIds, currentInteraction, setCurrentInteraction, hideOpacity = false })=>{
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
        sx: {
            position: "relative",
            height: 95,
            px: 2,
            backgroundColor: "elevation.dp01",
            width: "100%",
            zIndex: 1,
            pb: 1,
            [`& .${_chat.CHAT_INPUT_CONTROLS_CLASS_NAME}`]: {
                left: "8px"
            },
            [`& .${_chat.CHAT_INPUT_HIDDEN_WRAPPER_CLASS_NAME}`]: {
                width: "calc(100% - 32px)"
            },
            [`& #${_settings.CHAT_INPUT_ID}.${_chat.CHAT_INPUT_WRAPPER_CLASS_NAME}, & .${_chat.CHAT_INPUT_HIDDEN_WRAPPER_CLASS_NAME} .${_chat.CHAT_INPUT_WRAPPER_CLASS_NAME}`]: {
                width: "100%",
                minWidth: "100%",
                [`& .${_chat.CHAT_INPUT_CONTAINER_CLASS_NAME}`]: {
                    width: "100%",
                    backgroundColor: "elevation.dp06"
                }
            }
        },
        children: [
            !hideOpacity && /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                sx: {
                    display: "block",
                    position: "absolute",
                    background: "linear-gradient(0deg, #1E1E1E 26.96%, rgba(30, 30, 30, 0) 86.27%)",
                    top: -78,
                    width: "100%",
                    height: 78,
                    pointerEvents: "none"
                }
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                sx: {
                    display: "flex",
                    flexDirection: "column",
                    gap: 1,
                    position: "absolute",
                    bottom: 0,
                    width: "calc(100% - 32px)",
                    [`& .${_chat.SCOPE_DISPLAY_CLASS_NAME}`]: {
                        backgroundColor: "elevation.dp08"
                    }
                },
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_chat.ExtendableChatInput, {
                        onPromptSubmit: (prompt)=>addPrompt({
                                prompt
                            }),
                        setScope: setScope,
                        scope: scope,
                        filesIds: filesIds,
                        setFilesIds: setFilesIds,
                        watchlistId: undefined,
                        submitWatchlistId: ()=>{},
                        openScopeSelectorModal: ()=>{},
                        sourceFilter: sourceFilters,
                        enableFreeTier: false,
                        hideControls: [
                            "watchlist",
                            "files"
                        ],
                        location: "filesPage",
                        placeholder: placeholder,
                        variant: variant,
                        isValidPrompt: isValidPrompt,
                        generating: currentInteraction !== undefined && !currentInteraction.stopped && !currentInteraction.error,
                        stopGenerating: ()=>{
                            setCurrentInteraction((prev)=>prev ? _object_spread_props(_object_spread({}, prev), {
                                    stopped: true
                                }) : undefined);
                        }
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                        sx: {
                            textAlign: "center",
                            fontSize: 12,
                            color: "grey.300"
                        },
                        children: "Bigdata can make mistakes. Please check important info."
                    })
                ]
            })
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,