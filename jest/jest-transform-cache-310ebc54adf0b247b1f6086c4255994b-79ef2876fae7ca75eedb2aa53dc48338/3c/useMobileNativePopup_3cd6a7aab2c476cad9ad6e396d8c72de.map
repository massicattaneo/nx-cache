{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/hooks/src/useMobileNativePopup.ts"],"sourcesContent":["import { useCallback } from \"react\"\nimport { atom, useAtom } from \"jotai\"\nimport { MOBILE_ONBOARDING_BANNER_KEY, MOBILE_ONBOARDING_SCREEN_KEY } from \"@rp/common/utils\"\n\nconst ONE_WEEK_IN_MILISECONDS = 7 * 24 * 60 * 60 * 1000\n\nconst saveTimeInLocalStorage = (localStorageKeyName: string) => {\n  const currentTime = new Date().getTime()\n  localStorage.setItem(localStorageKeyName, currentTime.toString())\n  return\n}\n\n//This function verifies if one week has passed since the user dismiss some of the onboarding MOBILE components\nconst shouldShowMobileOnboardingComponent = (localStorageKeyName: string) => {\n  const lastView = localStorage.getItem(localStorageKeyName)\n  if (!lastView) {\n    return true\n  }\n\n  const currentTime = new Date().getTime()\n  const lastViewTime = parseInt(lastView)\n  // Handle invalid timestamp (NaN)\n  if (isNaN(lastViewTime)) {\n    return true\n  }\n\n  const timeDiff = currentTime - lastViewTime\n  if (timeDiff >= ONE_WEEK_IN_MILISECONDS) {\n    return true\n  }\n  return false\n}\n\nexport { saveTimeInLocalStorage, shouldShowMobileOnboardingComponent }\n\nconst mobileNativePopupAtom = atom<Record<string, boolean>>({})\n\nconst useMobileNativePopup = (\n  key: typeof MOBILE_ONBOARDING_SCREEN_KEY | typeof MOBILE_ONBOARDING_BANNER_KEY,\n) => {\n  const [displayStates, setDisplayStates] = useAtom(mobileNativePopupAtom)\n\n  const displayState =\n    key in displayStates ? displayStates[key] : shouldShowMobileOnboardingComponent(key)\n\n  const saveLSAndHideComponent = useCallback(() => {\n    saveTimeInLocalStorage(key)\n    setDisplayStates(prev => ({ ...prev, [key]: false }))\n  }, [key, setDisplayStates])\n\n  return {\n    displayState,\n    saveLSAndHideComponent,\n    setDisplayState: (value: boolean) => setDisplayStates(prev => ({ ...prev, [key]: value })),\n  }\n}\n\nexport { useMobileNativePopup, mobileNativePopupAtom }\n"],"names":["mobileNativePopupAtom","saveTimeInLocalStorage","shouldShowMobileOnboardingComponent","useMobileNativePopup","ONE_WEEK_IN_MILISECONDS","localStorageKeyName","currentTime","Date","getTime","localStorage","setItem","toString","lastView","getItem","lastViewTime","parseInt","isNaN","timeDiff","atom","key","displayStates","setDisplayStates","useAtom","displayState","saveLSAndHideComponent","useCallback","prev","setDisplayState","value"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;;;;;;;;IAyD+BA,qBAAqB;eAArBA;;IAxBtBC,sBAAsB;eAAtBA;;IAAwBC,mCAAmC;eAAnCA;;IAwBxBC,oBAAoB;eAApBA;;;uBAzDmB;uBACE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAG9B,MAAMC,0BAA0B,IAAI,KAAK,KAAK,KAAK;AAEnD,MAAMH,yBAAyB,CAACI;IAC9B,MAAMC,cAAc,IAAIC,OAAOC,OAAO;IACtCC,aAAaC,OAAO,CAACL,qBAAqBC,YAAYK,QAAQ;IAC9D;AACF;AAEA,+GAA+G;AAC/G,MAAMT,sCAAsC,CAACG;IAC3C,MAAMO,WAAWH,aAAaI,OAAO,CAACR;IACtC,IAAI,CAACO,UAAU;QACb,OAAO;IACT;IAEA,MAAMN,cAAc,IAAIC,OAAOC,OAAO;IACtC,MAAMM,eAAeC,SAASH;IAC9B,iCAAiC;IACjC,IAAII,MAAMF,eAAe;QACvB,OAAO;IACT;IAEA,MAAMG,WAAWX,cAAcQ;IAC/B,IAAIG,YAAYb,yBAAyB;QACvC,OAAO;IACT;IACA,OAAO;AACT;AAIA,MAAMJ,wBAAwBkB,IAAAA,WAAI,EAA0B,CAAC;AAE7D,MAAMf,uBAAuB,CAC3BgB;IAEA,MAAM,CAACC,eAAeC,iBAAiB,GAAGC,IAAAA,cAAO,EAACtB;IAElD,MAAMuB,eACJJ,OAAOC,gBAAgBA,aAAa,CAACD,IAAI,GAAGjB,oCAAoCiB;IAElF,MAAMK,yBAAyBC,IAAAA,kBAAW,EAAC;QACzCxB,uBAAuBkB;QACvBE,iBAAiBK,CAAAA,OAAS,wCAAKA;gBAAM,CAACP,IAAI,EAAE;;IAC9C,GAAG;QAACA;QAAKE;KAAiB;IAE1B,OAAO;QACLE;QACAC;QACAG,iBAAiB,CAACC,QAAmBP,iBAAiBK,CAAAA,OAAS,wCAAKA;oBAAM,CAACP,IAAI,EAAES;;IACnF;AACF"}