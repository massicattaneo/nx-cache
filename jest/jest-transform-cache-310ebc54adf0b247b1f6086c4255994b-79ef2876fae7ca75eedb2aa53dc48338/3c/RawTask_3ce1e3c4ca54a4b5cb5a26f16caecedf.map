{"version":3,"sources":["../src/RawTask.ts"],"sourcesContent":["// We wrap tasks with recyclable task objects.  A task object implements\n\nimport type { Task, TaskFn } from 'types'\n\n// `call`, just like a function.\nexport class RawTask implements Task {\n\tpublic task: TaskFn | null = null\n\n\tpublic constructor(\n\t\tprivate onError: (err: any) => void,\n\t\tprivate release: (t: RawTask) => void,\n\t) {}\n\n\tpublic call() {\n\t\ttry {\n\t\t\tthis.task && this.task()\n\t\t} catch (error) {\n\t\t\tthis.onError(error)\n\t\t} finally {\n\t\t\tthis.task = null\n\t\t\tthis.release(this)\n\t\t}\n\t}\n}\n"],"names":["RawTask","call","task","error","onError","release","constructor"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAIA,gCAAgC;;;;;+BACnBA;;;eAAAA;;;AAAN,MAAMA;IAQZC,OAAc;QACb,IAAI;YACH,IAAI,CAACC,IAAI,IAAI,IAAI,CAACA,IAAI;UACrB,OAAOC,OAAO;YACf,IAAI,CAACC,OAAO,CAACD;iBACJ;YACT,IAAI,CAACD,IAAI,GAAG;YACZ,IAAI,CAACG,OAAO,CAAC,IAAI;;;IAZnBC,YACSF,OAA2B,EAC3BC,OAA6B,CACpC;aAFOD,OAA2B,GAA3BA;aACAC,OAA6B,GAA7BA;aAJFH,IAAI,GAAkB"}