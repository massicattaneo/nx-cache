543bedca54a460351535f02498915e1e
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "earningsSurprise", {
    enumerable: true,
    get: function() {
        return earningsSurprise;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _icons = require("@rp/react/web/mui/icons");
require("@tanstack/react-table");
const _companyLatestSurprise = require("../endpoints/companyLatestSurprise");
const _genericTable = require("../genericTable");
const _cacheTimeHelper = require("../utils/cacheTimeHelper");
const earningsSurprise = (0, _genericTable.genericTable)({
    tableName: "earningsSurprise",
    tableLabel: "Earnings Surprise",
    tableIcon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.InsertChartOutlined, {}),
    defaultVisible: [
        {
            endpoint: "companyLatestSurprise",
            columnKey: "reportingDate"
        },
        {
            endpoint: "companyLatestSurprise",
            columnKey: "epsActual"
        },
        {
            endpoint: "companyLatestSurprise",
            columnKey: "epsEstimated"
        },
        {
            endpoint: "companyLatestSurprise",
            columnKey: "epsSurprisePct"
        }
    ],
    headerInfo: (0, _cacheTimeHelper.createCacheHeaderInfo)("Earnings Surprise"),
    columns: [
        _companyLatestSurprise.companyLatestSurprise.reportingDate("earningsSurprise"),
        _companyLatestSurprise.companyLatestSurprise.epsActual("earningsSurprise"),
        _companyLatestSurprise.companyLatestSurprise.epsEstimated("earningsSurprise"),
        _companyLatestSurprise.companyLatestSurprise.epsSurprisePct("earningsSurprise"),
        _companyLatestSurprise.companyLatestSurprise.revenueActual("earningsSurprise"),
        _companyLatestSurprise.companyLatestSurprise.revenueEstimated("earningsSurprise"),
        _companyLatestSurprise.companyLatestSurprise.revenueSurprisePct("earningsSurprise")
    ]
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL3dhdGNobGlzdHMvc3JjL2xpYi9XYXRjaGxpc3REYXRhVGFicy90YWJsZXMvZWFybmluZ3NTdXJwcmlzZS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5zZXJ0Q2hhcnRPdXRsaW5lZCB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL211aS9pY29uc1wiXG5pbXBvcnQgXCJAdGFuc3RhY2svcmVhY3QtdGFibGVcIlxuaW1wb3J0IHsgY29tcGFueUxhdGVzdFN1cnByaXNlIH0gZnJvbSBcIi4uL2VuZHBvaW50cy9jb21wYW55TGF0ZXN0U3VycHJpc2VcIlxuaW1wb3J0IHsgZ2VuZXJpY1RhYmxlIH0gZnJvbSBcIi4uL2dlbmVyaWNUYWJsZVwiXG5pbXBvcnQgeyBjcmVhdGVDYWNoZUhlYWRlckluZm8gfSBmcm9tIFwiLi4vdXRpbHMvY2FjaGVUaW1lSGVscGVyXCJcblxuY29uc3QgZWFybmluZ3NTdXJwcmlzZSA9IGdlbmVyaWNUYWJsZSh7XG4gIHRhYmxlTmFtZTogXCJlYXJuaW5nc1N1cnByaXNlXCIsXG4gIHRhYmxlTGFiZWw6IFwiRWFybmluZ3MgU3VycHJpc2VcIixcbiAgdGFibGVJY29uOiA8SW5zZXJ0Q2hhcnRPdXRsaW5lZCAvPixcbiAgZGVmYXVsdFZpc2libGU6IFtcbiAgICB7IGVuZHBvaW50OiBcImNvbXBhbnlMYXRlc3RTdXJwcmlzZVwiLCBjb2x1bW5LZXk6IFwicmVwb3J0aW5nRGF0ZVwiIH0sXG4gICAgeyBlbmRwb2ludDogXCJjb21wYW55TGF0ZXN0U3VycHJpc2VcIiwgY29sdW1uS2V5OiBcImVwc0FjdHVhbFwiIH0sXG4gICAgeyBlbmRwb2ludDogXCJjb21wYW55TGF0ZXN0U3VycHJpc2VcIiwgY29sdW1uS2V5OiBcImVwc0VzdGltYXRlZFwiIH0sXG4gICAgeyBlbmRwb2ludDogXCJjb21wYW55TGF0ZXN0U3VycHJpc2VcIiwgY29sdW1uS2V5OiBcImVwc1N1cnByaXNlUGN0XCIgfSxcbiAgXSxcbiAgaGVhZGVySW5mbzogY3JlYXRlQ2FjaGVIZWFkZXJJbmZvKFwiRWFybmluZ3MgU3VycHJpc2VcIiksXG4gIGNvbHVtbnM6IFtcbiAgICBjb21wYW55TGF0ZXN0U3VycHJpc2UucmVwb3J0aW5nRGF0ZShcImVhcm5pbmdzU3VycHJpc2VcIiksXG4gICAgY29tcGFueUxhdGVzdFN1cnByaXNlLmVwc0FjdHVhbChcImVhcm5pbmdzU3VycHJpc2VcIiksXG4gICAgY29tcGFueUxhdGVzdFN1cnByaXNlLmVwc0VzdGltYXRlZChcImVhcm5pbmdzU3VycHJpc2VcIiksXG4gICAgY29tcGFueUxhdGVzdFN1cnByaXNlLmVwc1N1cnByaXNlUGN0KFwiZWFybmluZ3NTdXJwcmlzZVwiKSxcbiAgICBjb21wYW55TGF0ZXN0U3VycHJpc2UucmV2ZW51ZUFjdHVhbChcImVhcm5pbmdzU3VycHJpc2VcIiksXG4gICAgY29tcGFueUxhdGVzdFN1cnByaXNlLnJldmVudWVFc3RpbWF0ZWQoXCJlYXJuaW5nc1N1cnByaXNlXCIpLFxuICAgIGNvbXBhbnlMYXRlc3RTdXJwcmlzZS5yZXZlbnVlU3VycHJpc2VQY3QoXCJlYXJuaW5nc1N1cnByaXNlXCIpLFxuICBdLFxufSlcbmV4cG9ydCB7IGVhcm5pbmdzU3VycHJpc2UgfVxuIl0sIm5hbWVzIjpbImVhcm5pbmdzU3VycHJpc2UiLCJnZW5lcmljVGFibGUiLCJ0YWJsZU5hbWUiLCJ0YWJsZUxhYmVsIiwidGFibGVJY29uIiwiSW5zZXJ0Q2hhcnRPdXRsaW5lZCIsImRlZmF1bHRWaXNpYmxlIiwiZW5kcG9pbnQiLCJjb2x1bW5LZXkiLCJoZWFkZXJJbmZvIiwiY3JlYXRlQ2FjaGVIZWFkZXJJbmZvIiwiY29sdW1ucyIsImNvbXBhbnlMYXRlc3RTdXJwcmlzZSIsInJlcG9ydGluZ0RhdGUiLCJlcHNBY3R1YWwiLCJlcHNFc3RpbWF0ZWQiLCJlcHNTdXJwcmlzZVBjdCIsInJldmVudWVBY3R1YWwiLCJyZXZlbnVlRXN0aW1hdGVkIiwicmV2ZW51ZVN1cnByaXNlUGN0Il0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkEyQlNBOzs7ZUFBQUE7Ozs7dUJBM0IyQjtRQUM3Qjt1Q0FDK0I7OEJBQ1Q7aUNBQ1M7QUFFdEMsTUFBTUEsbUJBQW1CQyxJQUFBQSwwQkFBWSxFQUFDO0lBQ3BDQyxXQUFXO0lBQ1hDLFlBQVk7SUFDWkMseUJBQVcscUJBQUNDLDBCQUFtQjtJQUMvQkMsZ0JBQWdCO1FBQ2Q7WUFBRUMsVUFBVTtZQUF5QkMsV0FBVztRQUFnQjtRQUNoRTtZQUFFRCxVQUFVO1lBQXlCQyxXQUFXO1FBQVk7UUFDNUQ7WUFBRUQsVUFBVTtZQUF5QkMsV0FBVztRQUFlO1FBQy9EO1lBQUVELFVBQVU7WUFBeUJDLFdBQVc7UUFBaUI7S0FDbEU7SUFDREMsWUFBWUMsSUFBQUEsc0NBQXFCLEVBQUM7SUFDbENDLFNBQVM7UUFDUEMsNENBQXFCLENBQUNDLGFBQWEsQ0FBQztRQUNwQ0QsNENBQXFCLENBQUNFLFNBQVMsQ0FBQztRQUNoQ0YsNENBQXFCLENBQUNHLFlBQVksQ0FBQztRQUNuQ0gsNENBQXFCLENBQUNJLGNBQWMsQ0FBQztRQUNyQ0osNENBQXFCLENBQUNLLGFBQWEsQ0FBQztRQUNwQ0wsNENBQXFCLENBQUNNLGdCQUFnQixDQUFDO1FBQ3ZDTiw0Q0FBcUIsQ0FBQ08sa0JBQWtCLENBQUM7S0FDMUM7QUFDSCJ9