{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/common/rpjson/src/lib/useRpjson.ts"],"sourcesContent":["import { getApiEnvironmentConfig } from \"@rp/common/utils\"\nimport { axiosClient } from \"@rp/react/axios-client\"\nimport { RpJsonDocument, RpJsonError } from \"@rp/react/rpjson/types\"\nimport { UseQueryResult, useQuery } from \"@tanstack/react-query\"\nimport { convertRpTimestampsToUTC } from \"./helpers/convertRpTimestampsToUTC\"\n\nconst PUBLIC_RPJSON_ROOT = \"/rpjson\"\nconst PRIVATE_RPJSON_ROOT = getApiEnvironmentConfig(\"text-analytics\").url\nconst PRIVATE_RPJSON_OPTIONS = \"annotated\"\n\ntype UrlData = { url: string }\n\nconst isUrlData = (data: RpJsonDocument | UrlData): data is UrlData => \"url\" in data\n\nconst getPublicRpjson = async (documentId: string) => {\n  const { data } = await axiosClient.get<RpJsonDocument | UrlData>(\n    `${PUBLIC_RPJSON_ROOT}/${documentId}`,\n  )\n  if (isUrlData(data)) {\n    const { data: rpjson } = await axiosClient.get<RpJsonDocument>(data.url, {\n      withCredentials: false,\n    })\n    return rpjson\n  }\n  return data\n}\n\nconst getPrivateRpjson = async (documentId: string) => {\n  const {\n    data: { Location },\n  } = await axiosClient.get<{ Location: string }>(\n    `${PRIVATE_RPJSON_ROOT}/files/${documentId}/${PRIVATE_RPJSON_OPTIONS}?status-code-override=true`,\n  )\n\n  const { data } = await axiosClient.get<RpJsonDocument>(Location, { withCredentials: false })\n\n  return data\n}\n\nconst select = (data: RpJsonDocument): RpJsonDocument => {\n  return {\n    ...data,\n    document: {\n      ...data.document,\n      timestamps_utc: convertRpTimestampsToUTC(data.document.timestamps_utc),\n    },\n  }\n}\n\n// -------------------\n// Hooks\n// -------------------\n\nconst useRpjson = (\n  documentId: string,\n  namespace: \"public\" | \"private\",\n): UseQueryResult<RpJsonDocument, RpJsonError> => {\n  return useQuery({\n    queryKey: [\"rpjson\", documentId, namespace],\n    queryFn: () => {\n      return namespace === \"public\" ? getPublicRpjson(documentId) : getPrivateRpjson(documentId)\n    },\n    staleTime: Infinity,\n    gcTime: Infinity,\n    enabled: documentId.length > 0,\n    select,\n  })\n}\n\nexport { useRpjson }\n"],"names":["useRpjson","PUBLIC_RPJSON_ROOT","PRIVATE_RPJSON_ROOT","getApiEnvironmentConfig","url","PRIVATE_RPJSON_OPTIONS","isUrlData","data","getPublicRpjson","documentId","axiosClient","get","rpjson","withCredentials","getPrivateRpjson","Location","select","document","timestamps_utc","convertRpTimestampsToUTC","namespace","useQuery","queryKey","queryFn","staleTime","Infinity","gcTime","enabled","length"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAqESA;;;eAAAA;;;uBArE+B;6BACZ;4BAEa;0CACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEzC,MAAMC,qBAAqB;AAC3B,MAAMC,sBAAsBC,IAAAA,8BAAuB,EAAC,kBAAkBC,GAAG;AACzE,MAAMC,yBAAyB;AAI/B,MAAMC,YAAY,CAACC,OAAoD,SAASA;AAEhF,MAAMC,kBAAkB,OAAOC;IAC7B,MAAM,EAAEF,IAAI,EAAE,GAAG,MAAMG,wBAAW,CAACC,GAAG,CACpC,CAAC,EAAEV,mBAAmB,CAAC,EAAEQ,WAAW,CAAC;IAEvC,IAAIH,UAAUC,OAAO;QACnB,MAAM,EAAEA,MAAMK,MAAM,EAAE,GAAG,MAAMF,wBAAW,CAACC,GAAG,CAAiBJ,KAAKH,GAAG,EAAE;YACvES,iBAAiB;QACnB;QACA,OAAOD;IACT;IACA,OAAOL;AACT;AAEA,MAAMO,mBAAmB,OAAOL;IAC9B,MAAM,EACJF,MAAM,EAAEQ,QAAQ,EAAE,EACnB,GAAG,MAAML,wBAAW,CAACC,GAAG,CACvB,CAAC,EAAET,oBAAoB,OAAO,EAAEO,WAAW,CAAC,EAAEJ,uBAAuB,0BAA0B,CAAC;IAGlG,MAAM,EAAEE,IAAI,EAAE,GAAG,MAAMG,wBAAW,CAACC,GAAG,CAAiBI,UAAU;QAAEF,iBAAiB;IAAM;IAE1F,OAAON;AACT;AAEA,MAAMS,SAAS,CAACT;IACd,OAAO,wCACFA;QACHU,UAAU,wCACLV,KAAKU,QAAQ;YAChBC,gBAAgBC,IAAAA,kDAAwB,EAACZ,KAAKU,QAAQ,CAACC,cAAc;;;AAG3E;AAEA,sBAAsB;AACtB,QAAQ;AACR,sBAAsB;AAEtB,MAAMlB,YAAY,CAChBS,YACAW;IAEA,OAAOC,IAAAA,oBAAQ,EAAC;QACdC,UAAU;YAAC;YAAUb;YAAYW;SAAU;QAC3CG,SAAS;YACP,OAAOH,cAAc,WAAWZ,gBAAgBC,cAAcK,iBAAiBL;QACjF;QACAe,WAAWC;QACXC,QAAQD;QACRE,SAASlB,WAAWmB,MAAM,GAAG;QAC7BZ;IACF;AACF"}