1b71f9095c61efb1d7bb4984553febd0
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    mobileNativePopupAtom: function() {
        return mobileNativePopupAtom;
    },
    saveTimeInLocalStorage: function() {
        return saveTimeInLocalStorage;
    },
    shouldShowMobileOnboardingComponent: function() {
        return shouldShowMobileOnboardingComponent;
    },
    useMobileNativePopup: function() {
        return useMobileNativePopup;
    }
});
const _react = require("react");
const _jotai = require("jotai");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const ONE_WEEK_IN_MILISECONDS = 7 * 24 * 60 * 60 * 1000;
const saveTimeInLocalStorage = (localStorageKeyName)=>{
    const currentTime = new Date().getTime();
    localStorage.setItem(localStorageKeyName, currentTime.toString());
    return;
};
//This function verifies if one week has passed since the user dismiss some of the onboarding MOBILE components
const shouldShowMobileOnboardingComponent = (localStorageKeyName)=>{
    const lastView = localStorage.getItem(localStorageKeyName);
    if (!lastView) {
        return true;
    }
    const currentTime = new Date().getTime();
    const lastViewTime = parseInt(lastView);
    // Handle invalid timestamp (NaN)
    if (isNaN(lastViewTime)) {
        return true;
    }
    const timeDiff = currentTime - lastViewTime;
    if (timeDiff >= ONE_WEEK_IN_MILISECONDS) {
        return true;
    }
    return false;
};
const mobileNativePopupAtom = (0, _jotai.atom)({});
const useMobileNativePopup = (key)=>{
    const [displayStates, setDisplayStates] = (0, _jotai.useAtom)(mobileNativePopupAtom);
    const displayState = key in displayStates ? displayStates[key] : shouldShowMobileOnboardingComponent(key);
    const saveLSAndHideComponent = (0, _react.useCallback)(()=>{
        saveTimeInLocalStorage(key);
        setDisplayStates((prev)=>_object_spread_props(_object_spread({}, prev), {
                [key]: false
            }));
    }, [
        key,
        setDisplayStates
    ]);
    return {
        displayState,
        saveLSAndHideComponent,
        setDisplayState: (value)=>setDisplayStates((prev)=>_object_spread_props(_object_spread({}, prev), {
                    [key]: value
                }))
    };
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9ob29rcy9zcmMvdXNlTW9iaWxlTmF0aXZlUG9wdXAudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlQ2FsbGJhY2sgfSBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IHsgYXRvbSwgdXNlQXRvbSB9IGZyb20gXCJqb3RhaVwiXG5pbXBvcnQgeyBNT0JJTEVfT05CT0FSRElOR19CQU5ORVJfS0VZLCBNT0JJTEVfT05CT0FSRElOR19TQ1JFRU5fS0VZIH0gZnJvbSBcIkBycC9jb21tb24vdXRpbHNcIlxuXG5jb25zdCBPTkVfV0VFS19JTl9NSUxJU0VDT05EUyA9IDcgKiAyNCAqIDYwICogNjAgKiAxMDAwXG5cbmNvbnN0IHNhdmVUaW1lSW5Mb2NhbFN0b3JhZ2UgPSAobG9jYWxTdG9yYWdlS2V5TmFtZTogc3RyaW5nKSA9PiB7XG4gIGNvbnN0IGN1cnJlbnRUaW1lID0gbmV3IERhdGUoKS5nZXRUaW1lKClcbiAgbG9jYWxTdG9yYWdlLnNldEl0ZW0obG9jYWxTdG9yYWdlS2V5TmFtZSwgY3VycmVudFRpbWUudG9TdHJpbmcoKSlcbiAgcmV0dXJuXG59XG5cbi8vVGhpcyBmdW5jdGlvbiB2ZXJpZmllcyBpZiBvbmUgd2VlayBoYXMgcGFzc2VkIHNpbmNlIHRoZSB1c2VyIGRpc21pc3Mgc29tZSBvZiB0aGUgb25ib2FyZGluZyBNT0JJTEUgY29tcG9uZW50c1xuY29uc3Qgc2hvdWxkU2hvd01vYmlsZU9uYm9hcmRpbmdDb21wb25lbnQgPSAobG9jYWxTdG9yYWdlS2V5TmFtZTogc3RyaW5nKSA9PiB7XG4gIGNvbnN0IGxhc3RWaWV3ID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0obG9jYWxTdG9yYWdlS2V5TmFtZSlcbiAgaWYgKCFsYXN0Vmlldykge1xuICAgIHJldHVybiB0cnVlXG4gIH1cblxuICBjb25zdCBjdXJyZW50VGltZSA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpXG4gIGNvbnN0IGxhc3RWaWV3VGltZSA9IHBhcnNlSW50KGxhc3RWaWV3KVxuICAvLyBIYW5kbGUgaW52YWxpZCB0aW1lc3RhbXAgKE5hTilcbiAgaWYgKGlzTmFOKGxhc3RWaWV3VGltZSkpIHtcbiAgICByZXR1cm4gdHJ1ZVxuICB9XG5cbiAgY29uc3QgdGltZURpZmYgPSBjdXJyZW50VGltZSAtIGxhc3RWaWV3VGltZVxuICBpZiAodGltZURpZmYgPj0gT05FX1dFRUtfSU5fTUlMSVNFQ09ORFMpIHtcbiAgICByZXR1cm4gdHJ1ZVxuICB9XG4gIHJldHVybiBmYWxzZVxufVxuXG5leHBvcnQgeyBzYXZlVGltZUluTG9jYWxTdG9yYWdlLCBzaG91bGRTaG93TW9iaWxlT25ib2FyZGluZ0NvbXBvbmVudCB9XG5cbmNvbnN0IG1vYmlsZU5hdGl2ZVBvcHVwQXRvbSA9IGF0b208UmVjb3JkPHN0cmluZywgYm9vbGVhbj4+KHt9KVxuXG5jb25zdCB1c2VNb2JpbGVOYXRpdmVQb3B1cCA9IChcbiAga2V5OiB0eXBlb2YgTU9CSUxFX09OQk9BUkRJTkdfU0NSRUVOX0tFWSB8IHR5cGVvZiBNT0JJTEVfT05CT0FSRElOR19CQU5ORVJfS0VZLFxuKSA9PiB7XG4gIGNvbnN0IFtkaXNwbGF5U3RhdGVzLCBzZXREaXNwbGF5U3RhdGVzXSA9IHVzZUF0b20obW9iaWxlTmF0aXZlUG9wdXBBdG9tKVxuXG4gIGNvbnN0IGRpc3BsYXlTdGF0ZSA9XG4gICAga2V5IGluIGRpc3BsYXlTdGF0ZXMgPyBkaXNwbGF5U3RhdGVzW2tleV0gOiBzaG91bGRTaG93TW9iaWxlT25ib2FyZGluZ0NvbXBvbmVudChrZXkpXG5cbiAgY29uc3Qgc2F2ZUxTQW5kSGlkZUNvbXBvbmVudCA9IHVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICBzYXZlVGltZUluTG9jYWxTdG9yYWdlKGtleSlcbiAgICBzZXREaXNwbGF5U3RhdGVzKHByZXYgPT4gKHsgLi4ucHJldiwgW2tleV06IGZhbHNlIH0pKVxuICB9LCBba2V5LCBzZXREaXNwbGF5U3RhdGVzXSlcblxuICByZXR1cm4ge1xuICAgIGRpc3BsYXlTdGF0ZSxcbiAgICBzYXZlTFNBbmRIaWRlQ29tcG9uZW50LFxuICAgIHNldERpc3BsYXlTdGF0ZTogKHZhbHVlOiBib29sZWFuKSA9PiBzZXREaXNwbGF5U3RhdGVzKHByZXYgPT4gKHsgLi4ucHJldiwgW2tleV06IHZhbHVlIH0pKSxcbiAgfVxufVxuXG5leHBvcnQgeyB1c2VNb2JpbGVOYXRpdmVQb3B1cCwgbW9iaWxlTmF0aXZlUG9wdXBBdG9tIH1cbiJdLCJuYW1lcyI6WyJtb2JpbGVOYXRpdmVQb3B1cEF0b20iLCJzYXZlVGltZUluTG9jYWxTdG9yYWdlIiwic2hvdWxkU2hvd01vYmlsZU9uYm9hcmRpbmdDb21wb25lbnQiLCJ1c2VNb2JpbGVOYXRpdmVQb3B1cCIsIk9ORV9XRUVLX0lOX01JTElTRUNPTkRTIiwibG9jYWxTdG9yYWdlS2V5TmFtZSIsImN1cnJlbnRUaW1lIiwiRGF0ZSIsImdldFRpbWUiLCJsb2NhbFN0b3JhZ2UiLCJzZXRJdGVtIiwidG9TdHJpbmciLCJsYXN0VmlldyIsImdldEl0ZW0iLCJsYXN0Vmlld1RpbWUiLCJwYXJzZUludCIsImlzTmFOIiwidGltZURpZmYiLCJhdG9tIiwia2V5IiwiZGlzcGxheVN0YXRlcyIsInNldERpc3BsYXlTdGF0ZXMiLCJ1c2VBdG9tIiwiZGlzcGxheVN0YXRlIiwic2F2ZUxTQW5kSGlkZUNvbXBvbmVudCIsInVzZUNhbGxiYWNrIiwicHJldiIsInNldERpc3BsYXlTdGF0ZSIsInZhbHVlIl0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztJQXlEK0JBLHFCQUFxQjtlQUFyQkE7O0lBeEJ0QkMsc0JBQXNCO2VBQXRCQTs7SUFBd0JDLG1DQUFtQztlQUFuQ0E7O0lBd0J4QkMsb0JBQW9CO2VBQXBCQTs7O3VCQXpEbUI7dUJBQ0U7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRzlCLE1BQU1DLDBCQUEwQixJQUFJLEtBQUssS0FBSyxLQUFLO0FBRW5ELE1BQU1ILHlCQUF5QixDQUFDSTtJQUM5QixNQUFNQyxjQUFjLElBQUlDLE9BQU9DLE9BQU87SUFDdENDLGFBQWFDLE9BQU8sQ0FBQ0wscUJBQXFCQyxZQUFZSyxRQUFRO0lBQzlEO0FBQ0Y7QUFFQSwrR0FBK0c7QUFDL0csTUFBTVQsc0NBQXNDLENBQUNHO0lBQzNDLE1BQU1PLFdBQVdILGFBQWFJLE9BQU8sQ0FBQ1I7SUFDdEMsSUFBSSxDQUFDTyxVQUFVO1FBQ2IsT0FBTztJQUNUO0lBRUEsTUFBTU4sY0FBYyxJQUFJQyxPQUFPQyxPQUFPO0lBQ3RDLE1BQU1NLGVBQWVDLFNBQVNIO0lBQzlCLGlDQUFpQztJQUNqQyxJQUFJSSxNQUFNRixlQUFlO1FBQ3ZCLE9BQU87SUFDVDtJQUVBLE1BQU1HLFdBQVdYLGNBQWNRO0lBQy9CLElBQUlHLFlBQVliLHlCQUF5QjtRQUN2QyxPQUFPO0lBQ1Q7SUFDQSxPQUFPO0FBQ1Q7QUFJQSxNQUFNSix3QkFBd0JrQixJQUFBQSxXQUFJLEVBQTBCLENBQUM7QUFFN0QsTUFBTWYsdUJBQXVCLENBQzNCZ0I7SUFFQSxNQUFNLENBQUNDLGVBQWVDLGlCQUFpQixHQUFHQyxJQUFBQSxjQUFPLEVBQUN0QjtJQUVsRCxNQUFNdUIsZUFDSkosT0FBT0MsZ0JBQWdCQSxhQUFhLENBQUNELElBQUksR0FBR2pCLG9DQUFvQ2lCO0lBRWxGLE1BQU1LLHlCQUF5QkMsSUFBQUEsa0JBQVcsRUFBQztRQUN6Q3hCLHVCQUF1QmtCO1FBQ3ZCRSxpQkFBaUJLLENBQUFBLE9BQVMsd0NBQUtBO2dCQUFNLENBQUNQLElBQUksRUFBRTs7SUFDOUMsR0FBRztRQUFDQTtRQUFLRTtLQUFpQjtJQUUxQixPQUFPO1FBQ0xFO1FBQ0FDO1FBQ0FHLGlCQUFpQixDQUFDQyxRQUFtQlAsaUJBQWlCSyxDQUFBQSxPQUFTLHdDQUFLQTtvQkFBTSxDQUFDUCxJQUFJLEVBQUVTOztJQUNuRjtBQUNGIn0=