{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/watchlists/src/lib/WatchlistDataTabs/genericTable.tsx"],"sourcesContent":["import { ReactElement } from \"react\"\nimport { z } from \"zod\"\nimport { CqsItem } from \"@rp/common/api-types\"\nimport { isDefined } from \"@rp/common/utils\"\nimport {\n  financialDataEndpoints,\n  financialDataSchemas,\n  useFinancialDataInputSchema,\n} from \"@rp/common/zod-contracts/financial-data\"\nimport { useFinancialData } from \"@rp/react/tanstack-api/financial-data\"\nimport \"@tanstack/react-table\"\nimport { ColumnDef } from \"@tanstack/react-table\"\nimport { financeDataTabTablesSchema } from \"../financeDataTabTablesSchema\"\nimport { WatchlistDataTableActionsCell } from \"./WatchlistDataTableCells/WatchlistDataTableActionsCell\"\nimport { WatchlistDataTableNameCell } from \"./WatchlistDataTableCells/WatchlistDataTableNameCell\"\nimport { WatchlistDataTableTickerCell } from \"./WatchlistDataTableCells/WatchlistDataTableTickerCell\"\nimport { WatchlistDataTabsTableEntity } from \"./WatchlistDataTabsTable.types\"\n\ntype Endpoints = z.infer<typeof financialDataEndpoints>\ndeclare module \"@tanstack/react-table\" {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars, unused-imports/no-unused-vars\n  export interface ColumnMeta<TData, TValue> {\n    menuLabel: string\n    endpoint?: Endpoints\n    columnKeys?: Array<string | number | symbol>\n    extraFinanceData?: (entityIds: Array<string>) => z.infer<typeof useFinancialDataInputSchema>\n  }\n}\n\ntype FinancialDataSchemas = typeof financialDataSchemas\n\n// Create a union type where each member relates an endpoint to the correct columnKey\ntype DefaultVisibleItem = {\n  [K in keyof FinancialDataSchemas]: {\n    endpoint: K\n    columnKey:\n      | keyof z.infer<FinancialDataSchemas[K]>\n      | Array<keyof z.infer<FinancialDataSchemas[K]>>\n  }\n}[keyof FinancialDataSchemas]\n\ntype Props = {\n  tableName: z.infer<typeof financeDataTabTablesSchema>\n  tableLabel: string\n  tableIcon: ReactElement\n  defaultVisible: Array<DefaultVisibleItem>\n  columns: Array<ColumnDef<WatchlistDataTabsTableEntity>>\n  headerInfo?: (\n    entityIds: Array<CqsItem>,\n    data: ReturnType<typeof useFinancialData>,\n  ) => { text: string; tooltip?: string } | null\n}\n\nfunction genericTable({\n  columns,\n  tableIcon,\n  tableLabel,\n  tableName,\n  defaultVisible,\n  headerInfo,\n}: Props) {\n  const list: Array<ColumnDef<WatchlistDataTabsTableEntity>> = [\n    {\n      id: \"ticker\",\n      accessorFn: row => row.entityInfo.metadata1,\n      header: \"Symbol\",\n      size: 120,\n      cell: info => <WatchlistDataTableTickerCell row={info.row.original} />,\n      meta: { menuLabel: \"Symbol\" },\n      enableHiding: false,\n    },\n    {\n      id: \"name\",\n      accessorFn: row => row.entityInfo.name,\n      header: \"Name\",\n      cell: info => <WatchlistDataTableNameCell row={info.row.original} />,\n      meta: {\n        menuLabel: \"Name\",\n      },\n      enableHiding: false,\n    },\n    ...columns,\n    {\n      accessorKey: \"actions\",\n      header: \"\",\n      cell: info => <WatchlistDataTableActionsCell row={info.row.original} />,\n      size: 60,\n      enableSorting: false,\n      enableHiding: false,\n      meta: { menuLabel: \"Actions\" },\n    },\n  ]\n\n  return {\n    columns: list,\n    defaultHidden: list\n      .filter(col => {\n        if (col.id === \"ticker\" || col.id === \"name\" || col.id === \"actions\") return false\n        return !defaultVisible.find(vis => {\n          return (\n            vis.endpoint === col.meta?.endpoint &&\n            col.meta.columnKeys?.every(key =>\n              Array.isArray(vis.columnKey)\n                ? vis.columnKey.map(i => i.toString()).includes(key.toString())\n                : vis.columnKey === key,\n            )\n          )\n        })\n      })\n      .map(col => col.id ?? \"\"),\n    tableIcon,\n    tableLabel,\n    tableName,\n    headerInfo,\n    defaultSort: [{ id: \"name\", desc: false }],\n    defaultOrder: list.map(col => col.id ?? \"\"),\n    financialDataInput: (\n      entityIds: Array<CqsItem>,\n    ): z.infer<typeof useFinancialDataInputSchema> => {\n      const ep = list.map(col => col.meta?.endpoint).filter(isDefined)\n      return {\n        ...ep.reduce((acc, endpoint) => {\n          return {\n            ...acc,\n            [endpoint]: {\n              entityIds: entityIds.map(entity => entity.key),\n            },\n          }\n        }, {} as Record<Endpoints, { entityIds: Array<string> }>),\n        ...list.reduce((acc, col) => {\n          return { ...acc, ...col.meta?.extraFinanceData?.(entityIds.map(entity => entity.key)) }\n        }, {}),\n      }\n    },\n  }\n}\n\nexport { genericTable }\n"],"names":["genericTable","columns","tableIcon","tableLabel","tableName","defaultVisible","headerInfo","list","id","accessorFn","row","entityInfo","metadata1","header","size","cell","info","WatchlistDataTableTickerCell","original","meta","menuLabel","enableHiding","name","WatchlistDataTableNameCell","accessorKey","WatchlistDataTableActionsCell","enableSorting","defaultHidden","filter","col","find","vis","endpoint","columnKeys","every","key","Array","isArray","columnKey","map","i","toString","includes","defaultSort","desc","defaultOrder","financialDataInput","entityIds","ep","isDefined","reduce","acc","entity","extraFinanceData"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}