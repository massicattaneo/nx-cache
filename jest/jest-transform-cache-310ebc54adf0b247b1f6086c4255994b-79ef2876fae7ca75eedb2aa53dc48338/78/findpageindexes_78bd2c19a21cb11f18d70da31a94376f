559bd8139c58671761da27ed6f105ffb
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "findPageIndexes", {
    enumerable: true,
    get: function() {
        return findPageIndexes;
    }
});
const _types = require("@rp/react/rpjson/types");
const findPageIndexes = (block, options = {
    includeCrossPagination: false,
    pagination: false
}, accumulator = [])=>{
    if (!options.pagination) return [
        0
    ];
    if ((0, _types.isTextBlock)(block)) {
        const item = block.normalized_coordinates || [];
        accumulator.push(...item.map((page)=>page.page));
    } else if ((0, _types.isTableBlock)(block)) {
        block.rows.forEach((row)=>{
            row.cells.forEach((cell)=>{
                var _cell_content;
                (_cell_content = cell.content) === null || _cell_content === void 0 ? void 0 : _cell_content.forEach((content)=>{
                    findPageIndexes(content, options, accumulator);
                });
            });
        });
    } else if ((0, _types.isListBlock)(block)) {
        block.entries.forEach((entry)=>{
            var _entry_content;
            (_entry_content = entry.content) === null || _entry_content === void 0 ? void 0 : _entry_content.forEach((content)=>{
                findPageIndexes(content, options, accumulator);
            });
        });
    }
    const filteredArray = accumulator.filter((page, index, pages)=>pages.indexOf(page) === index);
    if (filteredArray.length === 0) return [
        1
    ];
    if (!options.includeCrossPagination) return [
        filteredArray[0]
    ];
    return filteredArray;
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3QvY29tbW9uL3JwanNvbi9zcmMvbGliL2RvY3VtZW50LWVuaGFuY2VyL2ZpbmQtcGFnZS1pbmRleGVzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzTGlzdEJsb2NrLCBpc1RhYmxlQmxvY2ssIGlzVGV4dEJsb2NrIH0gZnJvbSBcIkBycC9yZWFjdC9ycGpzb24vdHlwZXNcIlxuaW1wb3J0IHsgQ29udGVudEJsb2NrLCBOb3JtYWxpemVkQ29vcmRpbmF0ZXMgfSBmcm9tIFwiQHJwL3JlYWN0L3JwanNvbi90eXBlc1wiXG5pbXBvcnQgeyBEb2N1bWVudEVuaGFuY2VyT3B0aW9ucyB9IGZyb20gXCJAcnAvcmVhY3QvcnBqc29uL3R5cGVzXCJcblxuY29uc3QgZmluZFBhZ2VJbmRleGVzID0gKFxuICBibG9jazogQ29udGVudEJsb2NrLFxuICBvcHRpb25zOiBEb2N1bWVudEVuaGFuY2VyT3B0aW9ucyA9IHsgaW5jbHVkZUNyb3NzUGFnaW5hdGlvbjogZmFsc2UsIHBhZ2luYXRpb246IGZhbHNlIH0sXG4gIGFjY3VtdWxhdG9yOiBBcnJheTxudW1iZXI+ID0gW10sXG4pID0+IHtcbiAgaWYgKCFvcHRpb25zLnBhZ2luYXRpb24pIHJldHVybiBbMF1cbiAgaWYgKGlzVGV4dEJsb2NrKGJsb2NrKSkge1xuICAgIGNvbnN0IGl0ZW06IEFycmF5PE5vcm1hbGl6ZWRDb29yZGluYXRlcz4gPSBibG9jay5ub3JtYWxpemVkX2Nvb3JkaW5hdGVzIHx8IFtdXG4gICAgYWNjdW11bGF0b3IucHVzaCguLi5pdGVtLm1hcChwYWdlID0+IHBhZ2UucGFnZSkpXG4gIH0gZWxzZSBpZiAoaXNUYWJsZUJsb2NrKGJsb2NrKSkge1xuICAgIGJsb2NrLnJvd3MuZm9yRWFjaChyb3cgPT4ge1xuICAgICAgcm93LmNlbGxzLmZvckVhY2goY2VsbCA9PiB7XG4gICAgICAgIGNlbGwuY29udGVudD8uZm9yRWFjaChjb250ZW50ID0+IHtcbiAgICAgICAgICBmaW5kUGFnZUluZGV4ZXMoY29udGVudCwgb3B0aW9ucywgYWNjdW11bGF0b3IpXG4gICAgICAgIH0pXG4gICAgICB9KVxuICAgIH0pXG4gIH0gZWxzZSBpZiAoaXNMaXN0QmxvY2soYmxvY2spKSB7XG4gICAgYmxvY2suZW50cmllcy5mb3JFYWNoKGVudHJ5ID0+IHtcbiAgICAgIGVudHJ5LmNvbnRlbnQ/LmZvckVhY2goY29udGVudCA9PiB7XG4gICAgICAgIGZpbmRQYWdlSW5kZXhlcyhjb250ZW50LCBvcHRpb25zLCBhY2N1bXVsYXRvcilcbiAgICAgIH0pXG4gICAgfSlcbiAgfVxuICBjb25zdCBmaWx0ZXJlZEFycmF5ID0gYWNjdW11bGF0b3IuZmlsdGVyKChwYWdlLCBpbmRleCwgcGFnZXMpID0+IHBhZ2VzLmluZGV4T2YocGFnZSkgPT09IGluZGV4KVxuICBpZiAoZmlsdGVyZWRBcnJheS5sZW5ndGggPT09IDApIHJldHVybiBbMV1cbiAgaWYgKCFvcHRpb25zLmluY2x1ZGVDcm9zc1BhZ2luYXRpb24pIHJldHVybiBbZmlsdGVyZWRBcnJheVswXV1cbiAgcmV0dXJuIGZpbHRlcmVkQXJyYXlcbn1cblxuZXhwb3J0IHsgZmluZFBhZ2VJbmRleGVzIH1cbiJdLCJuYW1lcyI6WyJmaW5kUGFnZUluZGV4ZXMiLCJibG9jayIsIm9wdGlvbnMiLCJpbmNsdWRlQ3Jvc3NQYWdpbmF0aW9uIiwicGFnaW5hdGlvbiIsImFjY3VtdWxhdG9yIiwiaXNUZXh0QmxvY2siLCJpdGVtIiwibm9ybWFsaXplZF9jb29yZGluYXRlcyIsInB1c2giLCJtYXAiLCJwYWdlIiwiaXNUYWJsZUJsb2NrIiwicm93cyIsImZvckVhY2giLCJyb3ciLCJjZWxscyIsImNlbGwiLCJjb250ZW50IiwiaXNMaXN0QmxvY2siLCJlbnRyaWVzIiwiZW50cnkiLCJmaWx0ZXJlZEFycmF5IiwiZmlsdGVyIiwiaW5kZXgiLCJwYWdlcyIsImluZGV4T2YiLCJsZW5ndGgiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkFrQ1NBOzs7ZUFBQUE7Ozt1QkFsQzhDO0FBSXZELE1BQU1BLGtCQUFrQixDQUN0QkMsT0FDQUMsVUFBbUM7SUFBRUMsd0JBQXdCO0lBQU9DLFlBQVk7QUFBTSxDQUFDLEVBQ3ZGQyxjQUE2QixFQUFFO0lBRS9CLElBQUksQ0FBQ0gsUUFBUUUsVUFBVSxFQUFFLE9BQU87UUFBQztLQUFFO0lBQ25DLElBQUlFLElBQUFBLGtCQUFXLEVBQUNMLFFBQVE7UUFDdEIsTUFBTU0sT0FBcUNOLE1BQU1PLHNCQUFzQixJQUFJLEVBQUU7UUFDN0VILFlBQVlJLElBQUksSUFBSUYsS0FBS0csR0FBRyxDQUFDQyxDQUFBQSxPQUFRQSxLQUFLQSxJQUFJO0lBQ2hELE9BQU8sSUFBSUMsSUFBQUEsbUJBQVksRUFBQ1gsUUFBUTtRQUM5QkEsTUFBTVksSUFBSSxDQUFDQyxPQUFPLENBQUNDLENBQUFBO1lBQ2pCQSxJQUFJQyxLQUFLLENBQUNGLE9BQU8sQ0FBQ0csQ0FBQUE7b0JBQ2hCQTtpQkFBQUEsZ0JBQUFBLEtBQUtDLE9BQU8sY0FBWkQsb0NBQUFBLGNBQWNILE9BQU8sQ0FBQ0ksQ0FBQUE7b0JBQ3BCbEIsZ0JBQWdCa0IsU0FBU2hCLFNBQVNHO2dCQUNwQztZQUNGO1FBQ0Y7SUFDRixPQUFPLElBQUljLElBQUFBLGtCQUFXLEVBQUNsQixRQUFRO1FBQzdCQSxNQUFNbUIsT0FBTyxDQUFDTixPQUFPLENBQUNPLENBQUFBO2dCQUNwQkE7YUFBQUEsaUJBQUFBLE1BQU1ILE9BQU8sY0FBYkcscUNBQUFBLGVBQWVQLE9BQU8sQ0FBQ0ksQ0FBQUE7Z0JBQ3JCbEIsZ0JBQWdCa0IsU0FBU2hCLFNBQVNHO1lBQ3BDO1FBQ0Y7SUFDRjtJQUNBLE1BQU1pQixnQkFBZ0JqQixZQUFZa0IsTUFBTSxDQUFDLENBQUNaLE1BQU1hLE9BQU9DLFFBQVVBLE1BQU1DLE9BQU8sQ0FBQ2YsVUFBVWE7SUFDekYsSUFBSUYsY0FBY0ssTUFBTSxLQUFLLEdBQUcsT0FBTztRQUFDO0tBQUU7SUFDMUMsSUFBSSxDQUFDekIsUUFBUUMsc0JBQXNCLEVBQUUsT0FBTztRQUFDbUIsYUFBYSxDQUFDLEVBQUU7S0FBQztJQUM5RCxPQUFPQTtBQUNUIn0=