f571448532c21d9a7a32f639a7027e99
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "useDeviceInfo", {
    enumerable: true,
    get: function() {
        return useDeviceInfo;
    }
});
const _uaparserjs = /*#__PURE__*/ _interop_require_default(require("ua-parser-js"));
const _material = require("@mui/material");
const _styles = require("@mui/material/styles");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const useDeviceInfo = ()=>{
    const theme = (0, _styles.useTheme)();
    const isMobile = (0, _material.useMediaQuery)(theme.breakpoints.down("md"));
    const isSmallMobile = (0, _material.useMediaQuery)(theme.breakpoints.down("smallMobile"));
    const isWideScreen = (0, _material.useMediaQuery)(theme.breakpoints.up("xl"));
    const isHoverDevice = (0, _material.useMediaQuery)("(hover: hover)");
    const isPortrait = (0, _material.useMediaQuery)("(orientation: portrait)");
    const userAgent = window.navigator.userAgent;
    const parser = new _uaparserjs.default(userAgent);
    const browser = parser.getBrowser().name || "";
    const OS = parser.getOS().name || "";
    const isIpad = parser.getDevice().model === "iPad";
    const isIPhone = parser.getDevice().model === "iPhone";
    const isIOS = isIpad || isIPhone;
    const isAndroid = parser.getOS().name === "Android";
    const isMacOS = /Mac OS/i.test(OS);
    const isSafari = /Safari/i.test(browser);
    const isPWA = (0, _material.useMediaQuery)("(display-mode: standalone)");
    // Everything below is to try and fix Armando's iPhone in PWA.
    // The bottom nav sometimes looses its bottom padding from env(safe-area-inset-bottom)...
    // ...and the bottom nav is not clickable and too low.
    // This is a hack to remember the initial value and keep using it.
    const sat = getComputedStyle(document.documentElement).getPropertyValue("--sat");
    const sar = getComputedStyle(document.documentElement).getPropertyValue("--sar");
    const sab = getComputedStyle(document.documentElement).getPropertyValue("--sab");
    const sal = getComputedStyle(document.documentElement).getPropertyValue("--sal");
    const test = getComputedStyle(document.documentElement).getPropertyValue("--test");
    const safeArea = {
        top: sat,
        right: sar,
        bottom: isIOS && isPWA ? "34px" : sab,
        left: sal,
        test: test
    };
    return {
        isAndroid,
        isMobile,
        isWideScreen,
        isHoverDevice,
        isIOS,
        isSafari,
        isPWA,
        isMacOS,
        isIPhone,
        isIpad,
        safeArea,
        isPortrait,
        isSmallMobile
    };
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9ob29rcy9zcmMvdXNlRGV2aWNlSW5mby50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVUFQYXJzZXIgZnJvbSBcInVhLXBhcnNlci1qc1wiXG5pbXBvcnQgeyB1c2VNZWRpYVF1ZXJ5IH0gZnJvbSBcIkBtdWkvbWF0ZXJpYWxcIlxuaW1wb3J0IHsgdXNlVGhlbWUgfSBmcm9tIFwiQG11aS9tYXRlcmlhbC9zdHlsZXNcIlxuXG5jb25zdCB1c2VEZXZpY2VJbmZvID0gKCkgPT4ge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKClcblxuICBjb25zdCBpc01vYmlsZSA9IHVzZU1lZGlhUXVlcnkodGhlbWUuYnJlYWtwb2ludHMuZG93bihcIm1kXCIpKVxuICBjb25zdCBpc1NtYWxsTW9iaWxlID0gdXNlTWVkaWFRdWVyeSh0aGVtZS5icmVha3BvaW50cy5kb3duKFwic21hbGxNb2JpbGVcIikpXG4gIGNvbnN0IGlzV2lkZVNjcmVlbiA9IHVzZU1lZGlhUXVlcnkodGhlbWUuYnJlYWtwb2ludHMudXAoXCJ4bFwiKSlcbiAgY29uc3QgaXNIb3ZlckRldmljZSA9IHVzZU1lZGlhUXVlcnkoXCIoaG92ZXI6IGhvdmVyKVwiKVxuICBjb25zdCBpc1BvcnRyYWl0ID0gdXNlTWVkaWFRdWVyeShcIihvcmllbnRhdGlvbjogcG9ydHJhaXQpXCIpXG5cbiAgY29uc3QgdXNlckFnZW50ID0gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnRcblxuICBjb25zdCBwYXJzZXIgPSBuZXcgVUFQYXJzZXIodXNlckFnZW50KVxuXG4gIGNvbnN0IGJyb3dzZXIgPSBwYXJzZXIuZ2V0QnJvd3NlcigpLm5hbWUgfHwgXCJcIlxuICBjb25zdCBPUyA9IHBhcnNlci5nZXRPUygpLm5hbWUgfHwgXCJcIlxuXG4gIGNvbnN0IGlzSXBhZCA9IHBhcnNlci5nZXREZXZpY2UoKS5tb2RlbCA9PT0gXCJpUGFkXCJcbiAgY29uc3QgaXNJUGhvbmUgPSBwYXJzZXIuZ2V0RGV2aWNlKCkubW9kZWwgPT09IFwiaVBob25lXCJcblxuICBjb25zdCBpc0lPUyA9IGlzSXBhZCB8fCBpc0lQaG9uZVxuICBjb25zdCBpc0FuZHJvaWQgPSBwYXJzZXIuZ2V0T1MoKS5uYW1lID09PSBcIkFuZHJvaWRcIlxuICBjb25zdCBpc01hY09TID0gL01hYyBPUy9pLnRlc3QoT1MpXG4gIGNvbnN0IGlzU2FmYXJpID0gL1NhZmFyaS9pLnRlc3QoYnJvd3NlcilcblxuICBjb25zdCBpc1BXQSA9IHVzZU1lZGlhUXVlcnkoXCIoZGlzcGxheS1tb2RlOiBzdGFuZGFsb25lKVwiKVxuXG4gIC8vIEV2ZXJ5dGhpbmcgYmVsb3cgaXMgdG8gdHJ5IGFuZCBmaXggQXJtYW5kbydzIGlQaG9uZSBpbiBQV0EuXG4gIC8vIFRoZSBib3R0b20gbmF2IHNvbWV0aW1lcyBsb29zZXMgaXRzIGJvdHRvbSBwYWRkaW5nIGZyb20gZW52KHNhZmUtYXJlYS1pbnNldC1ib3R0b20pLi4uXG4gIC8vIC4uLmFuZCB0aGUgYm90dG9tIG5hdiBpcyBub3QgY2xpY2thYmxlIGFuZCB0b28gbG93LlxuICAvLyBUaGlzIGlzIGEgaGFjayB0byByZW1lbWJlciB0aGUgaW5pdGlhbCB2YWx1ZSBhbmQga2VlcCB1c2luZyBpdC5cblxuICBjb25zdCBzYXQgPSBnZXRDb21wdXRlZFN0eWxlKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCkuZ2V0UHJvcGVydHlWYWx1ZShcIi0tc2F0XCIpXG4gIGNvbnN0IHNhciA9IGdldENvbXB1dGVkU3R5bGUoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50KS5nZXRQcm9wZXJ0eVZhbHVlKFwiLS1zYXJcIilcbiAgY29uc3Qgc2FiID0gZ2V0Q29tcHV0ZWRTdHlsZShkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQpLmdldFByb3BlcnR5VmFsdWUoXCItLXNhYlwiKVxuICBjb25zdCBzYWwgPSBnZXRDb21wdXRlZFN0eWxlKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCkuZ2V0UHJvcGVydHlWYWx1ZShcIi0tc2FsXCIpXG4gIGNvbnN0IHRlc3QgPSBnZXRDb21wdXRlZFN0eWxlKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCkuZ2V0UHJvcGVydHlWYWx1ZShcIi0tdGVzdFwiKVxuXG4gIGNvbnN0IHNhZmVBcmVhID0ge1xuICAgIHRvcDogc2F0LFxuICAgIHJpZ2h0OiBzYXIsXG4gICAgYm90dG9tOiBpc0lPUyAmJiBpc1BXQSA/IFwiMzRweFwiIDogc2FiLFxuICAgIGxlZnQ6IHNhbCxcbiAgICB0ZXN0OiB0ZXN0LFxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBpc0FuZHJvaWQsXG4gICAgaXNNb2JpbGUsXG4gICAgaXNXaWRlU2NyZWVuLFxuICAgIGlzSG92ZXJEZXZpY2UsXG4gICAgaXNJT1MsXG4gICAgaXNTYWZhcmksXG4gICAgaXNQV0EsXG4gICAgaXNNYWNPUyxcbiAgICBpc0lQaG9uZSxcbiAgICBpc0lwYWQsXG4gICAgc2FmZUFyZWEsXG4gICAgaXNQb3J0cmFpdCxcbiAgICBpc1NtYWxsTW9iaWxlLFxuICB9XG59XG5cbmV4cG9ydCB7IHVzZURldmljZUluZm8gfVxuIl0sIm5hbWVzIjpbInVzZURldmljZUluZm8iLCJ0aGVtZSIsInVzZVRoZW1lIiwiaXNNb2JpbGUiLCJ1c2VNZWRpYVF1ZXJ5IiwiYnJlYWtwb2ludHMiLCJkb3duIiwiaXNTbWFsbE1vYmlsZSIsImlzV2lkZVNjcmVlbiIsInVwIiwiaXNIb3ZlckRldmljZSIsImlzUG9ydHJhaXQiLCJ1c2VyQWdlbnQiLCJ3aW5kb3ciLCJuYXZpZ2F0b3IiLCJwYXJzZXIiLCJVQVBhcnNlciIsImJyb3dzZXIiLCJnZXRCcm93c2VyIiwibmFtZSIsIk9TIiwiZ2V0T1MiLCJpc0lwYWQiLCJnZXREZXZpY2UiLCJtb2RlbCIsImlzSVBob25lIiwiaXNJT1MiLCJpc0FuZHJvaWQiLCJpc01hY09TIiwidGVzdCIsImlzU2FmYXJpIiwiaXNQV0EiLCJzYXQiLCJnZXRDb21wdXRlZFN0eWxlIiwiZG9jdW1lbnQiLCJkb2N1bWVudEVsZW1lbnQiLCJnZXRQcm9wZXJ0eVZhbHVlIiwic2FyIiwic2FiIiwic2FsIiwic2FmZUFyZWEiLCJ0b3AiLCJyaWdodCIsImJvdHRvbSIsImxlZnQiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkFrRVNBOzs7ZUFBQUE7OzttRUFsRVk7MEJBQ1M7d0JBQ0w7Ozs7OztBQUV6QixNQUFNQSxnQkFBZ0I7SUFDcEIsTUFBTUMsUUFBUUMsSUFBQUEsZ0JBQVE7SUFFdEIsTUFBTUMsV0FBV0MsSUFBQUEsdUJBQWEsRUFBQ0gsTUFBTUksV0FBVyxDQUFDQyxJQUFJLENBQUM7SUFDdEQsTUFBTUMsZ0JBQWdCSCxJQUFBQSx1QkFBYSxFQUFDSCxNQUFNSSxXQUFXLENBQUNDLElBQUksQ0FBQztJQUMzRCxNQUFNRSxlQUFlSixJQUFBQSx1QkFBYSxFQUFDSCxNQUFNSSxXQUFXLENBQUNJLEVBQUUsQ0FBQztJQUN4RCxNQUFNQyxnQkFBZ0JOLElBQUFBLHVCQUFhLEVBQUM7SUFDcEMsTUFBTU8sYUFBYVAsSUFBQUEsdUJBQWEsRUFBQztJQUVqQyxNQUFNUSxZQUFZQyxPQUFPQyxTQUFTLENBQUNGLFNBQVM7SUFFNUMsTUFBTUcsU0FBUyxJQUFJQyxtQkFBUSxDQUFDSjtJQUU1QixNQUFNSyxVQUFVRixPQUFPRyxVQUFVLEdBQUdDLElBQUksSUFBSTtJQUM1QyxNQUFNQyxLQUFLTCxPQUFPTSxLQUFLLEdBQUdGLElBQUksSUFBSTtJQUVsQyxNQUFNRyxTQUFTUCxPQUFPUSxTQUFTLEdBQUdDLEtBQUssS0FBSztJQUM1QyxNQUFNQyxXQUFXVixPQUFPUSxTQUFTLEdBQUdDLEtBQUssS0FBSztJQUU5QyxNQUFNRSxRQUFRSixVQUFVRztJQUN4QixNQUFNRSxZQUFZWixPQUFPTSxLQUFLLEdBQUdGLElBQUksS0FBSztJQUMxQyxNQUFNUyxVQUFVLFVBQVVDLElBQUksQ0FBQ1Q7SUFDL0IsTUFBTVUsV0FBVyxVQUFVRCxJQUFJLENBQUNaO0lBRWhDLE1BQU1jLFFBQVEzQixJQUFBQSx1QkFBYSxFQUFDO0lBRTVCLDhEQUE4RDtJQUM5RCx5RkFBeUY7SUFDekYsc0RBQXNEO0lBQ3RELGtFQUFrRTtJQUVsRSxNQUFNNEIsTUFBTUMsaUJBQWlCQyxTQUFTQyxlQUFlLEVBQUVDLGdCQUFnQixDQUFDO0lBQ3hFLE1BQU1DLE1BQU1KLGlCQUFpQkMsU0FBU0MsZUFBZSxFQUFFQyxnQkFBZ0IsQ0FBQztJQUN4RSxNQUFNRSxNQUFNTCxpQkFBaUJDLFNBQVNDLGVBQWUsRUFBRUMsZ0JBQWdCLENBQUM7SUFDeEUsTUFBTUcsTUFBTU4saUJBQWlCQyxTQUFTQyxlQUFlLEVBQUVDLGdCQUFnQixDQUFDO0lBQ3hFLE1BQU1QLE9BQU9JLGlCQUFpQkMsU0FBU0MsZUFBZSxFQUFFQyxnQkFBZ0IsQ0FBQztJQUV6RSxNQUFNSSxXQUFXO1FBQ2ZDLEtBQUtUO1FBQ0xVLE9BQU9MO1FBQ1BNLFFBQVFqQixTQUFTSyxRQUFRLFNBQVNPO1FBQ2xDTSxNQUFNTDtRQUNOVixNQUFNQTtJQUNSO0lBRUEsT0FBTztRQUNMRjtRQUNBeEI7UUFDQUs7UUFDQUU7UUFDQWdCO1FBQ0FJO1FBQ0FDO1FBQ0FIO1FBQ0FIO1FBQ0FIO1FBQ0FrQjtRQUNBN0I7UUFDQUo7SUFDRjtBQUNGIn0=