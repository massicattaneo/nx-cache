e289193c1c79656fd9d8ecf54ed8301a
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "abnormalMediaAttention", {
    enumerable: true,
    get: function() {
        return abnormalMediaAttention;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _core = require("@rp/react/web/mui/core");
const _icons = require("@rp/react/web/mui/icons");
const _WatchlistDataTableColoredCell = require("../../WatchlistDataTableCells/WatchlistDataTableColoredCell");
const _genericColumn = require("../../genericColumn");
function abnormalMediaAttention(tableName) {
    const title = "Media Buzz";
    return (0, _genericColumn.genericColumn)({
        endpoint: "companySentiment",
        columnKeys: [
            "abnormalMediaAttention"
        ],
        size: 180,
        title,
        enableSorting: true,
        enableHiding: true,
        tooltip: "Indicates whether a company is receiving more or less media attention than usual, based on recent trends.",
        cell: (info)=>{
            var _info_row_original_financialData_companySentiment_data, _info_row_original_financialData_companySentiment;
            var _info_row_original_financialData_companySentiment_data_abnormalMediaAttention;
            const rawValue = (_info_row_original_financialData_companySentiment_data_abnormalMediaAttention = (_info_row_original_financialData_companySentiment = info.row.original.financialData.companySentiment) === null || _info_row_original_financialData_companySentiment === void 0 ? void 0 : (_info_row_original_financialData_companySentiment_data = _info_row_original_financialData_companySentiment.data) === null || _info_row_original_financialData_companySentiment_data === void 0 ? void 0 : _info_row_original_financialData_companySentiment_data.abnormalMediaAttention) !== null && _info_row_original_financialData_companySentiment_data_abnormalMediaAttention !== void 0 ? _info_row_original_financialData_companySentiment_data_abnormalMediaAttention : 0;
            const isAverage = rawValue >= -0.51 && rawValue <= 0.51;
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_WatchlistDataTableColoredCell.WatchlistDataTableColoredCell, {
                queryResult: info.row.original.financialData.companySentiment,
                tooltip: "Explain the Abnormal Volume",
                onClick: ()=>{
                    var _info_row_original_financialData_companySentiment_data, _info_row_original_financialData_companySentiment, _info_row_original_onChatWithCell, _info_row_original;
                    (_info_row_original_onChatWithCell = (_info_row_original = info.row.original).onChatWithCell) === null || _info_row_original_onChatWithCell === void 0 ? void 0 : _info_row_original_onChatWithCell.call(_info_row_original, {
                        prompt: `Whatâ€™s causing abnormal media attention for ${info.row.original.entityInfo.name} recently?`,
                        value: (_info_row_original_financialData_companySentiment = info.row.original.financialData.companySentiment) === null || _info_row_original_financialData_companySentiment === void 0 ? void 0 : (_info_row_original_financialData_companySentiment_data = _info_row_original_financialData_companySentiment.data) === null || _info_row_original_financialData_companySentiment_data === void 0 ? void 0 : _info_row_original_financialData_companySentiment_data.abnormalMediaAttention,
                        entityInfo: info.row.original.entityInfo,
                        columnName: `${tableName}: ${title}`
                    });
                },
                value: isAverage ? 0 : rawValue,
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                    component: "span",
                    sx: {
                        display: "flex",
                        gap: 0.5,
                        alignItems: "center"
                    },
                    children: [
                        rawValue > 0.7 && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                            children: [
                                "Abnormally High",
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.ArrowUpward, {
                                    sx: {
                                        fontSize: 16
                                    }
                                })
                            ]
                        }),
                        rawValue > 0.51 && rawValue <= 0.7 && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                            children: [
                                "High",
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.ArrowUpward, {
                                    sx: {
                                        fontSize: 16
                                    }
                                })
                            ]
                        }),
                        isAverage && /*#__PURE__*/ (0, _jsxruntime.jsx)(_jsxruntime.Fragment, {
                            children: "Average"
                        }),
                        rawValue < -0.51 && rawValue >= -0.7 && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                            children: [
                                "Low",
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.ArrowDownward, {
                                    sx: {
                                        fontSize: 16
                                    }
                                })
                            ]
                        }),
                        rawValue < -0.7 && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                            children: [
                                "Abnormally Low",
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.ArrowDownward, {
                                    sx: {
                                        fontSize: 16
                                    }
                                })
                            ]
                        })
                    ]
                })
            });
        }
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL3dhdGNobGlzdHMvc3JjL2xpYi9XYXRjaGxpc3REYXRhVGFicy9lbmRwb2ludHMvY29tcGFueVNlbnRpbWVudC9hYm5vcm1hbE1lZGlhQXR0ZW50aW9uLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCb3ggfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9tdWkvY29yZVwiXG5pbXBvcnQgeyBBcnJvd0Rvd253YXJkLCBBcnJvd1Vwd2FyZCB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL211aS9pY29uc1wiXG5pbXBvcnQgeyBXYXRjaGxpc3REYXRhVGFibGVDb2xvcmVkQ2VsbCB9IGZyb20gXCIuLi8uLi9XYXRjaGxpc3REYXRhVGFibGVDZWxscy9XYXRjaGxpc3REYXRhVGFibGVDb2xvcmVkQ2VsbFwiXG5pbXBvcnQgeyBnZW5lcmljQ29sdW1uIH0gZnJvbSBcIi4uLy4uL2dlbmVyaWNDb2x1bW5cIlxuXG5mdW5jdGlvbiBhYm5vcm1hbE1lZGlhQXR0ZW50aW9uKHRhYmxlTmFtZTogc3RyaW5nKSB7XG4gIGNvbnN0IHRpdGxlID0gXCJNZWRpYSBCdXp6XCJcbiAgcmV0dXJuIGdlbmVyaWNDb2x1bW4oe1xuICAgIGVuZHBvaW50OiBcImNvbXBhbnlTZW50aW1lbnRcIixcbiAgICBjb2x1bW5LZXlzOiBbXCJhYm5vcm1hbE1lZGlhQXR0ZW50aW9uXCJdLFxuICAgIHNpemU6IDE4MCxcbiAgICB0aXRsZSxcbiAgICBlbmFibGVTb3J0aW5nOiB0cnVlLFxuICAgIGVuYWJsZUhpZGluZzogdHJ1ZSxcbiAgICB0b29sdGlwOlxuICAgICAgXCJJbmRpY2F0ZXMgd2hldGhlciBhIGNvbXBhbnkgaXMgcmVjZWl2aW5nIG1vcmUgb3IgbGVzcyBtZWRpYSBhdHRlbnRpb24gdGhhbiB1c3VhbCwgYmFzZWQgb24gcmVjZW50IHRyZW5kcy5cIixcbiAgICBjZWxsOiBpbmZvID0+IHtcbiAgICAgIGNvbnN0IHJhd1ZhbHVlID1cbiAgICAgICAgaW5mby5yb3cub3JpZ2luYWwuZmluYW5jaWFsRGF0YS5jb21wYW55U2VudGltZW50Py5kYXRhPy5hYm5vcm1hbE1lZGlhQXR0ZW50aW9uID8/IDBcbiAgICAgIGNvbnN0IGlzQXZlcmFnZSA9IHJhd1ZhbHVlID49IC0wLjUxICYmIHJhd1ZhbHVlIDw9IDAuNTFcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxXYXRjaGxpc3REYXRhVGFibGVDb2xvcmVkQ2VsbFxuICAgICAgICAgIHF1ZXJ5UmVzdWx0PXtpbmZvLnJvdy5vcmlnaW5hbC5maW5hbmNpYWxEYXRhLmNvbXBhbnlTZW50aW1lbnR9XG4gICAgICAgICAgdG9vbHRpcD17XCJFeHBsYWluIHRoZSBBYm5vcm1hbCBWb2x1bWVcIn1cbiAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICBpbmZvLnJvdy5vcmlnaW5hbC5vbkNoYXRXaXRoQ2VsbD8uKHtcbiAgICAgICAgICAgICAgcHJvbXB0OiBgV2hhdOKAmXMgY2F1c2luZyBhYm5vcm1hbCBtZWRpYSBhdHRlbnRpb24gZm9yICR7aW5mby5yb3cub3JpZ2luYWwuZW50aXR5SW5mby5uYW1lfSByZWNlbnRseT9gLFxuICAgICAgICAgICAgICB2YWx1ZTogaW5mby5yb3cub3JpZ2luYWwuZmluYW5jaWFsRGF0YS5jb21wYW55U2VudGltZW50Py5kYXRhPy5hYm5vcm1hbE1lZGlhQXR0ZW50aW9uLFxuICAgICAgICAgICAgICBlbnRpdHlJbmZvOiBpbmZvLnJvdy5vcmlnaW5hbC5lbnRpdHlJbmZvLFxuICAgICAgICAgICAgICBjb2x1bW5OYW1lOiBgJHt0YWJsZU5hbWV9OiAke3RpdGxlfWAsXG4gICAgICAgICAgICB9KVxuICAgICAgICAgIH19XG4gICAgICAgICAgdmFsdWU9e2lzQXZlcmFnZSA/IDAgOiByYXdWYWx1ZX1cbiAgICAgICAgPlxuICAgICAgICAgIDxCb3ggY29tcG9uZW50PVwic3BhblwiIHN4PXt7IGRpc3BsYXk6IFwiZmxleFwiLCBnYXA6IDAuNSwgYWxpZ25JdGVtczogXCJjZW50ZXJcIiB9fT5cbiAgICAgICAgICAgIHtyYXdWYWx1ZSA+IDAuNyAmJiAoXG4gICAgICAgICAgICAgIDw+XG4gICAgICAgICAgICAgICAgQWJub3JtYWxseSBIaWdoXG4gICAgICAgICAgICAgICAgPEFycm93VXB3YXJkIHN4PXt7IGZvbnRTaXplOiAxNiB9fSAvPlxuICAgICAgICAgICAgICA8Lz5cbiAgICAgICAgICAgICl9XG4gICAgICAgICAgICB7cmF3VmFsdWUgPiAwLjUxICYmIHJhd1ZhbHVlIDw9IDAuNyAmJiAoXG4gICAgICAgICAgICAgIDw+XG4gICAgICAgICAgICAgICAgSGlnaFxuICAgICAgICAgICAgICAgIDxBcnJvd1Vwd2FyZCBzeD17eyBmb250U2l6ZTogMTYgfX0gLz5cbiAgICAgICAgICAgICAgPC8+XG4gICAgICAgICAgICApfVxuICAgICAgICAgICAge2lzQXZlcmFnZSAmJiA8PkF2ZXJhZ2U8Lz59XG4gICAgICAgICAgICB7cmF3VmFsdWUgPCAtMC41MSAmJiByYXdWYWx1ZSA+PSAtMC43ICYmIChcbiAgICAgICAgICAgICAgPD5cbiAgICAgICAgICAgICAgICBMb3dcbiAgICAgICAgICAgICAgICA8QXJyb3dEb3dud2FyZCBzeD17eyBmb250U2l6ZTogMTYgfX0gLz5cbiAgICAgICAgICAgICAgPC8+XG4gICAgICAgICAgICApfVxuICAgICAgICAgICAge3Jhd1ZhbHVlIDwgLTAuNyAmJiAoXG4gICAgICAgICAgICAgIDw+XG4gICAgICAgICAgICAgICAgQWJub3JtYWxseSBMb3dcbiAgICAgICAgICAgICAgICA8QXJyb3dEb3dud2FyZCBzeD17eyBmb250U2l6ZTogMTYgfX0gLz5cbiAgICAgICAgICAgICAgPC8+XG4gICAgICAgICAgICApfVxuICAgICAgICAgIDwvQm94PlxuICAgICAgICA8L1dhdGNobGlzdERhdGFUYWJsZUNvbG9yZWRDZWxsPlxuICAgICAgKVxuICAgIH0sXG4gIH0pXG59XG5cbmV4cG9ydCB7IGFibm9ybWFsTWVkaWFBdHRlbnRpb24gfVxuIl0sIm5hbWVzIjpbImFibm9ybWFsTWVkaWFBdHRlbnRpb24iLCJ0YWJsZU5hbWUiLCJ0aXRsZSIsImdlbmVyaWNDb2x1bW4iLCJlbmRwb2ludCIsImNvbHVtbktleXMiLCJzaXplIiwiZW5hYmxlU29ydGluZyIsImVuYWJsZUhpZGluZyIsInRvb2x0aXAiLCJjZWxsIiwiaW5mbyIsInJhd1ZhbHVlIiwicm93Iiwib3JpZ2luYWwiLCJmaW5hbmNpYWxEYXRhIiwiY29tcGFueVNlbnRpbWVudCIsImRhdGEiLCJpc0F2ZXJhZ2UiLCJXYXRjaGxpc3REYXRhVGFibGVDb2xvcmVkQ2VsbCIsInF1ZXJ5UmVzdWx0Iiwib25DbGljayIsIm9uQ2hhdFdpdGhDZWxsIiwicHJvbXB0IiwiZW50aXR5SW5mbyIsIm5hbWUiLCJ2YWx1ZSIsImNvbHVtbk5hbWUiLCJCb3giLCJjb21wb25lbnQiLCJzeCIsImRpc3BsYXkiLCJnYXAiLCJhbGlnbkl0ZW1zIiwiQXJyb3dVcHdhcmQiLCJmb250U2l6ZSIsIkFycm93RG93bndhcmQiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBbUVTQTs7O2VBQUFBOzs7O3NCQW5FVzt1QkFDdUI7K0NBQ0c7K0JBQ2hCO0FBRTlCLFNBQVNBLHVCQUF1QkMsU0FBaUI7SUFDL0MsTUFBTUMsUUFBUTtJQUNkLE9BQU9DLElBQUFBLDRCQUFhLEVBQUM7UUFDbkJDLFVBQVU7UUFDVkMsWUFBWTtZQUFDO1NBQXlCO1FBQ3RDQyxNQUFNO1FBQ05KO1FBQ0FLLGVBQWU7UUFDZkMsY0FBYztRQUNkQyxTQUNFO1FBQ0ZDLE1BQU1DLENBQUFBO2dCQUVGQSx3REFBQUE7Z0JBQUFBO1lBREYsTUFBTUMsV0FDSkQsQ0FBQUEsaUZBQUFBLG9EQUFBQSxLQUFLRSxHQUFHLENBQUNDLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDQyxnQkFBZ0IsY0FBaERMLHlFQUFBQSx5REFBQUEsa0RBQWtETSxJQUFJLGNBQXRETiw2RUFBQUEsdURBQXdEWCxzQkFBc0IsY0FBOUVXLDJGQUFBQSxnRkFBa0Y7WUFDcEYsTUFBTU8sWUFBWU4sWUFBWSxDQUFDLFFBQVFBLFlBQVk7WUFDbkQscUJBQ0UscUJBQUNPLDREQUE2QjtnQkFDNUJDLGFBQWFULEtBQUtFLEdBQUcsQ0FBQ0MsUUFBUSxDQUFDQyxhQUFhLENBQUNDLGdCQUFnQjtnQkFDN0RQLFNBQVM7Z0JBQ1RZLFNBQVM7d0JBR0VWLHdEQUFBQSxtREFGVEEsbUNBQUFBO3FCQUFBQSxvQ0FBQUEsQ0FBQUEscUJBQUFBLEtBQUtFLEdBQUcsQ0FBQ0MsUUFBUSxFQUFDUSxjQUFjLGNBQWhDWCx3REFBQUEsdUNBQUFBLG9CQUFtQzt3QkFDakNZLFFBQVEsQ0FBQyw0Q0FBNEMsRUFBRVosS0FBS0UsR0FBRyxDQUFDQyxRQUFRLENBQUNVLFVBQVUsQ0FBQ0MsSUFBSSxDQUFDLFVBQVUsQ0FBQzt3QkFDcEdDLEtBQUssR0FBRWYsb0RBQUFBLEtBQUtFLEdBQUcsQ0FBQ0MsUUFBUSxDQUFDQyxhQUFhLENBQUNDLGdCQUFnQixjQUFoREwseUVBQUFBLHlEQUFBQSxrREFBa0RNLElBQUksY0FBdEROLDZFQUFBQSx1REFBd0RYLHNCQUFzQjt3QkFDckZ3QixZQUFZYixLQUFLRSxHQUFHLENBQUNDLFFBQVEsQ0FBQ1UsVUFBVTt3QkFDeENHLFlBQVksQ0FBQyxFQUFFMUIsVUFBVSxFQUFFLEVBQUVDLE1BQU0sQ0FBQztvQkFDdEM7Z0JBQ0Y7Z0JBQ0F3QixPQUFPUixZQUFZLElBQUlOOzBCQUV2QixjQUFBLHNCQUFDZ0IsU0FBRztvQkFBQ0MsV0FBVTtvQkFBT0MsSUFBSTt3QkFBRUMsU0FBUzt3QkFBUUMsS0FBSzt3QkFBS0MsWUFBWTtvQkFBUzs7d0JBQ3pFckIsV0FBVyxxQkFDVjs7Z0NBQUU7OENBRUEscUJBQUNzQixrQkFBVztvQ0FBQ0osSUFBSTt3Q0FBRUssVUFBVTtvQ0FBRzs7Ozt3QkFHbkN2QixXQUFXLFFBQVFBLFlBQVkscUJBQzlCOztnQ0FBRTs4Q0FFQSxxQkFBQ3NCLGtCQUFXO29DQUFDSixJQUFJO3dDQUFFSyxVQUFVO29DQUFHOzs7O3dCQUduQ2pCLDJCQUFhO3NDQUFFOzt3QkFDZk4sV0FBVyxDQUFDLFFBQVFBLFlBQVksQ0FBQyxxQkFDaEM7O2dDQUFFOzhDQUVBLHFCQUFDd0Isb0JBQWE7b0NBQUNOLElBQUk7d0NBQUVLLFVBQVU7b0NBQUc7Ozs7d0JBR3JDdkIsV0FBVyxDQUFDLHFCQUNYOztnQ0FBRTs4Q0FFQSxxQkFBQ3dCLG9CQUFhO29DQUFDTixJQUFJO3dDQUFFSyxVQUFVO29DQUFHOzs7Ozs7O1FBTTlDO0lBQ0Y7QUFDRiJ9