{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/chat/src/lib/Chat/Chat/ChatResponse/InlineAttribution/getInlineAttributionData.ts"],"sourcesContent":["import { MouseEvent } from \"react\"\nimport { REDIRECT_PROVIDERS } from \"@rp/common/settings\"\nimport { createChunkMap } from \"@rp/react/common/hooks\"\nimport { useHashParams } from \"@rp/react/web/common/hooks\"\nimport { useDocumentViewerData } from \"@rp/react/web/common/providers\"\nimport { getUrlWithTextFragment } from \"@rp/web/utils\"\nimport { OnUserInteractionProps } from \"../ChatResponse\"\n\ntype ChunkMap = ReturnType<typeof createChunkMap>[\"chunkMap\"]\ntype ExternalMap = ReturnType<typeof createChunkMap>[\"externalMap\"]\ntype SetDocumentData = ReturnType<typeof useDocumentViewerData>[\"setDocumentData\"]\ntype setHashParams = ReturnType<typeof useHashParams>[1]\n\nconst getCqsInlineAttributionData = ({\n  id,\n  chunkMap,\n  onUserInteraction,\n  setShowTooltip,\n  setDocumentData,\n  setHashParams,\n}: {\n  id: string\n  chunkMap: ChunkMap\n  onUserInteraction: (props: OnUserInteractionProps) => void\n  setShowTooltip: (state: boolean) => void\n  setDocumentData: SetDocumentData\n  setHashParams: setHashParams\n}) => {\n  let inlineAttributionData = undefined\n  const chunk = chunkMap[id]\n  if (chunk !== undefined) {\n    const url = chunk.parent.url\n    inlineAttributionData = {\n      type: \"CQS\" as const,\n      hd: chunk.parent.hd,\n      text: chunk.text,\n      sourceName: chunk.parent.srcName ?? \"Unknown Source\",\n      language: chunk.parent.language ?? \"English\",\n      ts: chunk.parent.ts,\n      documentScope: chunk.parent.documentScope,\n      relatedSource: chunk.relatedSource,\n      contentType: chunk.parent.contentType,\n      srcKey: chunk.parent.srcKey,\n      url: url ?? null,\n      documentId: chunk.parent.id,\n      rpProviderId: chunk.parent.rpProviderId ?? null,\n      onClick:\n        url && REDIRECT_PROVIDERS.includes(chunk.parent.rpProviderId ?? \"\")\n          ? (ev: MouseEvent) => {\n              ev.stopPropagation()\n              onUserInteraction({\n                action: \"click\",\n                sourceUrl: url,\n                sourceTitle: chunk.parent.hd,\n                documentId: null,\n                sourceId: chunk.parent.srcKey,\n                sourceName: chunk.parent.srcName ?? null,\n                providerId: chunk.parent.rpProviderId ?? null,\n              })\n              window.open(getUrlWithTextFragment(url, chunk.text), \"_blank\", \"noopener,noreferrer\")\n              setShowTooltip(false)\n            }\n          : (ev: MouseEvent) => {\n              ev.stopPropagation()\n              onUserInteraction({\n                action: \"click\",\n                sourceUrl: chunk.parent.url ?? null,\n                sourceTitle: chunk.parent.hd,\n                documentId: chunk.parent.id,\n                sourceId: chunk.parent.srcKey,\n                sourceName: chunk.parent.srcName ?? null,\n                providerId: chunk.parent.rpProviderId ?? null,\n              })\n              setDocumentData({\n                documentId: chunk.parent.id,\n                documentScope: chunk.parent.documentScope,\n                language: chunk.parent.language,\n                chunks: chunk.parent.chunks,\n                startingChunkId: chunk.cnum,\n              })\n\n              const hashParams: Record<string, string> =\n                chunk.parent.documentScope === \"files\"\n                  ? { document: chunk.parent.id, private: \"true\" }\n                  : { document: chunk.parent.id }\n              const boundingBox = chunk.boundingBoxes?.[0]\n              if (boundingBox) {\n                hashParams.bb = JSON.stringify(boundingBox)\n              }\n\n              setHashParams(hashParams)\n            },\n    }\n  }\n\n  return inlineAttributionData\n}\n\nconst getExternalInlineAttributionData = ({\n  id,\n  externalMap,\n  onUserInteraction,\n  setShowTooltip,\n}: {\n  id: string\n  externalMap: ExternalMap\n  onUserInteraction: (props: OnUserInteractionProps) => void\n  setShowTooltip: (state: boolean) => void\n}) => {\n  let inlineAttributionData = undefined\n  const result = externalMap[id]\n  if (result !== undefined) {\n    inlineAttributionData = {\n      type: \"EXTERNAL\" as const,\n      hd: result.hd,\n      text: result.text,\n      sourceName: result.action.name,\n      ts: result.ts,\n      url: result.action.url,\n      documentId: null,\n      onClick: (ev: MouseEvent) => {\n        ev.stopPropagation()\n        onUserInteraction({\n          action: \"click\",\n          sourceUrl: result.action.url,\n          sourceTitle: result.hd,\n          documentId: null,\n          sourceId: null,\n          sourceName: null,\n          providerId: null,\n        })\n        window.open(result.action.url, \"_blank\", \"noopener,noreferrer\")\n        setShowTooltip(false)\n      },\n      externalFavicon: result.action.faviconUrl,\n    }\n  }\n  return inlineAttributionData\n}\n\ntype CQSInlineAttributionDataPre = ReturnType<typeof getCqsInlineAttributionData>\ntype CQSInlineAttributionData =\n  | (Omit<Exclude<CQSInlineAttributionDataPre, undefined>, \"relatedSource\"> &\n      Partial<Pick<Exclude<CQSInlineAttributionDataPre, undefined>, \"relatedSource\">>)\n  | undefined\ntype ExternalInlineAttributionData = ReturnType<typeof getExternalInlineAttributionData>\n\ntype CQSInlineAttributionDataNoUndefined = Exclude<CQSInlineAttributionData, undefined>\ntype ExternalInlineAttributionDataNoUndefined = Exclude<ExternalInlineAttributionData, undefined>\n\ntype CQSGroupedAttribution = {\n  type: \"CQS\"\n  label: string\n  data: Array<CQSInlineAttributionDataNoUndefined>\n}\n\ntype ExternalGroupedAttribution = {\n  type: \"EXTERNAL\"\n  label: string\n  data: Array<ExternalInlineAttributionDataNoUndefined>\n}\n\ntype GroupedInlineAttributionList = Array<CQSGroupedAttribution | ExternalGroupedAttribution>\n\n// All CQS attributions from the list should go under the same document id\nconst groupInlineAttributions = (\n  list: Array<CQSInlineAttributionData | ExternalInlineAttributionData>,\n) => {\n  const cleanList = list.filter(\n    (\n      attribution,\n    ): attribution is\n      | CQSInlineAttributionDataNoUndefined\n      | ExternalInlineAttributionDataNoUndefined => attribution !== undefined,\n  )\n  const cqsCollections: Record<string, Array<CQSInlineAttributionDataNoUndefined>> = {}\n  const finalList: GroupedInlineAttributionList = []\n\n  for (const attribution of cleanList) {\n    if (attribution.type === \"EXTERNAL\") {\n      finalList.push({\n        type: \"EXTERNAL\",\n        label: attribution.sourceName,\n        data: [attribution],\n      })\n    }\n\n    if (attribution.type === \"CQS\") {\n      if (cqsCollections[attribution.documentId] === undefined) {\n        const documentList = [attribution]\n        cqsCollections[attribution.documentId] = documentList\n        finalList.push({\n          type: \"CQS\",\n          label: attribution.sourceName,\n          data: documentList,\n        })\n      } else {\n        cqsCollections[attribution.documentId].push(attribution)\n      }\n    }\n  }\n\n  return finalList\n}\n\nexport { getCqsInlineAttributionData, getExternalInlineAttributionData, groupInlineAttributions }\nexport type {\n  CQSGroupedAttribution,\n  ExternalGroupedAttribution,\n  CQSInlineAttributionDataNoUndefined,\n  ExternalInlineAttributionDataNoUndefined,\n  GroupedInlineAttributionList,\n}\n"],"names":["getCqsInlineAttributionData","getExternalInlineAttributionData","groupInlineAttributions","id","chunkMap","onUserInteraction","setShowTooltip","setDocumentData","setHashParams","inlineAttributionData","undefined","chunk","url","parent","type","hd","text","sourceName","srcName","language","ts","documentScope","relatedSource","contentType","srcKey","documentId","rpProviderId","onClick","REDIRECT_PROVIDERS","includes","ev","stopPropagation","action","sourceUrl","sourceTitle","sourceId","providerId","window","open","getUrlWithTextFragment","chunks","startingChunkId","cnum","hashParams","document","private","boundingBox","boundingBoxes","bb","JSON","stringify","externalMap","result","name","externalFavicon","faviconUrl","list","cleanList","filter","attribution","cqsCollections","finalList","push","label","data","documentList"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}