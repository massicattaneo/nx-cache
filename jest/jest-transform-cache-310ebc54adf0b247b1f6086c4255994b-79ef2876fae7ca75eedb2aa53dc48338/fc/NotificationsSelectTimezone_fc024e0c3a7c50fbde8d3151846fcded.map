{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/composite-components/src/Notifications/NotificationsSelectTimezone.tsx"],"sourcesContent":["import { useCallback } from \"react\"\nimport { NotificationSchedule } from \"@rp/common/api-types\"\nimport {\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  SelectProps,\n  Typography,\n} from \"@rp/react/web/mui/core\"\nimport { TIMEZONES, timezoneToLabel } from \"@rp/web/utils\"\n\ntype Props = {\n  disabled?: boolean\n  schedule: NotificationSchedule | null\n  setSchedule: (schedule: NotificationSchedule) => void\n  label: string\n  MenuProps?: SelectProps[\"MenuProps\"]\n}\n\nconst NotificationsSelectTimezone = ({\n  disabled = false,\n  label,\n  MenuProps,\n  schedule,\n  setSchedule,\n}: Props) => {\n  const handleChange = useCallback(\n    (ev: SelectChangeEvent<string>) => {\n      if (schedule) {\n        const newSchedule = { ...schedule, timezone: ev.target.value }\n        setSchedule(newSchedule)\n      }\n    },\n    [schedule, setSchedule],\n  )\n\n  return (\n    <>\n      <Typography sx={{ mb: 1 }}>{label}</Typography>\n      <Select\n        disabled={disabled}\n        fullWidth\n        size=\"small\"\n        value={schedule?.timezone}\n        onChange={handleChange}\n        style={{ width: \"368px\" }}\n        MenuProps={{\n          ...MenuProps,\n          style: {\n            maxHeight: 290,\n            ...MenuProps?.style,\n          },\n          anchorOrigin: {\n            vertical: \"bottom\",\n            horizontal: \"left\",\n          },\n          transformOrigin: {\n            vertical: \"top\",\n            horizontal: \"left\",\n          },\n        }}\n      >\n        {TIMEZONES.map(timezone => {\n          return (\n            <MenuItem key={timezone.id} value={timezone.value}>\n              {timezoneToLabel(timezone)} {timezone.label}\n            </MenuItem>\n          )\n        })}\n      </Select>\n    </>\n  )\n}\n\nexport { NotificationsSelectTimezone }\n"],"names":["NotificationsSelectTimezone","disabled","label","MenuProps","schedule","setSchedule","handleChange","useCallback","ev","newSchedule","timezone","target","value","Typography","sx","mb","Select","fullWidth","size","onChange","style","width","maxHeight","anchorOrigin","vertical","horizontal","transformOrigin","TIMEZONES","map","MenuItem","timezoneToLabel","id"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BA0ESA;;;eAAAA;;;;uBA1EmB;sBAQrB;uBACoC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAU3C,MAAMA,8BAA8B,CAAC,EACnCC,WAAW,KAAK,EAChBC,KAAK,EACLC,SAAS,EACTC,QAAQ,EACRC,WAAW,EACL;IACN,MAAMC,eAAeC,IAAAA,kBAAW,EAC9B,CAACC;QACC,IAAIJ,UAAU;YACZ,MAAMK,cAAc,wCAAKL;gBAAUM,UAAUF,GAAGG,MAAM,CAACC,KAAK;;YAC5DP,YAAYI;QACd;IACF,GACA;QAACL;QAAUC;KAAY;IAGzB,qBACE;;0BACE,qBAACQ,gBAAU;gBAACC,IAAI;oBAAEC,IAAI;gBAAE;0BAAIb;;0BAC5B,qBAACc,YAAM;gBACLf,UAAUA;gBACVgB,SAAS;gBACTC,MAAK;gBACLN,KAAK,EAAER,qBAAAA,+BAAAA,SAAUM,QAAQ;gBACzBS,UAAUb;gBACVc,OAAO;oBAAEC,OAAO;gBAAQ;gBACxBlB,WAAW,wCACNA;oBACHiB,OAAO;wBACLE,WAAW;uBACRnB,sBAAAA,gCAAAA,UAAWiB,KAAK;oBAErBG,cAAc;wBACZC,UAAU;wBACVC,YAAY;oBACd;oBACAC,iBAAiB;wBACfF,UAAU;wBACVC,YAAY;oBACd;;0BAGDE,gBAAS,CAACC,GAAG,CAAClB,CAAAA;oBACb,qBACE,sBAACmB,cAAQ;wBAAmBjB,OAAOF,SAASE,KAAK;;4BAC9CkB,IAAAA,sBAAe,EAACpB;4BAAU;4BAAEA,SAASR,KAAK;;uBAD9BQ,SAASqB,EAAE;gBAI9B;;;;AAIR"}