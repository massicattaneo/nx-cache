4670ec7ab3dc539ac06215290138ae4a
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "NotificationsSelectTimezone", {
    enumerable: true,
    get: function() {
        return NotificationsSelectTimezone;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _core = require("@rp/react/web/mui/core");
const _utils = require("@rp/web/utils");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const NotificationsSelectTimezone = ({ disabled = false, label, MenuProps, schedule, setSchedule })=>{
    const handleChange = (0, _react.useCallback)((ev)=>{
        if (schedule) {
            const newSchedule = _object_spread_props(_object_spread({}, schedule), {
                timezone: ev.target.value
            });
            setSchedule(newSchedule);
        }
    }, [
        schedule,
        setSchedule
    ]);
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                sx: {
                    mb: 1
                },
                children: label
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Select, {
                disabled: disabled,
                fullWidth: true,
                size: "small",
                value: schedule === null || schedule === void 0 ? void 0 : schedule.timezone,
                onChange: handleChange,
                style: {
                    width: "368px"
                },
                MenuProps: _object_spread_props(_object_spread({}, MenuProps), {
                    style: _object_spread({
                        maxHeight: 290
                    }, MenuProps === null || MenuProps === void 0 ? void 0 : MenuProps.style),
                    anchorOrigin: {
                        vertical: "bottom",
                        horizontal: "left"
                    },
                    transformOrigin: {
                        vertical: "top",
                        horizontal: "left"
                    }
                }),
                children: _utils.TIMEZONES.map((timezone)=>{
                    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.MenuItem, {
                        value: timezone.value,
                        children: [
                            (0, _utils.timezoneToLabel)(timezone),
                            " ",
                            timezone.label
                        ]
                    }, timezone.id);
                })
            })
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9jb21wb3NpdGUtY29tcG9uZW50cy9zcmMvTm90aWZpY2F0aW9ucy9Ob3RpZmljYXRpb25zU2VsZWN0VGltZXpvbmUudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZUNhbGxiYWNrIH0gZnJvbSBcInJlYWN0XCJcbmltcG9ydCB7IE5vdGlmaWNhdGlvblNjaGVkdWxlIH0gZnJvbSBcIkBycC9jb21tb24vYXBpLXR5cGVzXCJcbmltcG9ydCB7XG4gIE1lbnVJdGVtLFxuICBTZWxlY3QsXG4gIFNlbGVjdENoYW5nZUV2ZW50LFxuICBTZWxlY3RQcm9wcyxcbiAgVHlwb2dyYXBoeSxcbn0gZnJvbSBcIkBycC9yZWFjdC93ZWIvbXVpL2NvcmVcIlxuaW1wb3J0IHsgVElNRVpPTkVTLCB0aW1lem9uZVRvTGFiZWwgfSBmcm9tIFwiQHJwL3dlYi91dGlsc1wiXG5cbnR5cGUgUHJvcHMgPSB7XG4gIGRpc2FibGVkPzogYm9vbGVhblxuICBzY2hlZHVsZTogTm90aWZpY2F0aW9uU2NoZWR1bGUgfCBudWxsXG4gIHNldFNjaGVkdWxlOiAoc2NoZWR1bGU6IE5vdGlmaWNhdGlvblNjaGVkdWxlKSA9PiB2b2lkXG4gIGxhYmVsOiBzdHJpbmdcbiAgTWVudVByb3BzPzogU2VsZWN0UHJvcHNbXCJNZW51UHJvcHNcIl1cbn1cblxuY29uc3QgTm90aWZpY2F0aW9uc1NlbGVjdFRpbWV6b25lID0gKHtcbiAgZGlzYWJsZWQgPSBmYWxzZSxcbiAgbGFiZWwsXG4gIE1lbnVQcm9wcyxcbiAgc2NoZWR1bGUsXG4gIHNldFNjaGVkdWxlLFxufTogUHJvcHMpID0+IHtcbiAgY29uc3QgaGFuZGxlQ2hhbmdlID0gdXNlQ2FsbGJhY2soXG4gICAgKGV2OiBTZWxlY3RDaGFuZ2VFdmVudDxzdHJpbmc+KSA9PiB7XG4gICAgICBpZiAoc2NoZWR1bGUpIHtcbiAgICAgICAgY29uc3QgbmV3U2NoZWR1bGUgPSB7IC4uLnNjaGVkdWxlLCB0aW1lem9uZTogZXYudGFyZ2V0LnZhbHVlIH1cbiAgICAgICAgc2V0U2NoZWR1bGUobmV3U2NoZWR1bGUpXG4gICAgICB9XG4gICAgfSxcbiAgICBbc2NoZWR1bGUsIHNldFNjaGVkdWxlXSxcbiAgKVxuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxUeXBvZ3JhcGh5IHN4PXt7IG1iOiAxIH19PntsYWJlbH08L1R5cG9ncmFwaHk+XG4gICAgICA8U2VsZWN0XG4gICAgICAgIGRpc2FibGVkPXtkaXNhYmxlZH1cbiAgICAgICAgZnVsbFdpZHRoXG4gICAgICAgIHNpemU9XCJzbWFsbFwiXG4gICAgICAgIHZhbHVlPXtzY2hlZHVsZT8udGltZXpvbmV9XG4gICAgICAgIG9uQ2hhbmdlPXtoYW5kbGVDaGFuZ2V9XG4gICAgICAgIHN0eWxlPXt7IHdpZHRoOiBcIjM2OHB4XCIgfX1cbiAgICAgICAgTWVudVByb3BzPXt7XG4gICAgICAgICAgLi4uTWVudVByb3BzLFxuICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICBtYXhIZWlnaHQ6IDI5MCxcbiAgICAgICAgICAgIC4uLk1lbnVQcm9wcz8uc3R5bGUsXG4gICAgICAgICAgfSxcbiAgICAgICAgICBhbmNob3JPcmlnaW46IHtcbiAgICAgICAgICAgIHZlcnRpY2FsOiBcImJvdHRvbVwiLFxuICAgICAgICAgICAgaG9yaXpvbnRhbDogXCJsZWZ0XCIsXG4gICAgICAgICAgfSxcbiAgICAgICAgICB0cmFuc2Zvcm1PcmlnaW46IHtcbiAgICAgICAgICAgIHZlcnRpY2FsOiBcInRvcFwiLFxuICAgICAgICAgICAgaG9yaXpvbnRhbDogXCJsZWZ0XCIsXG4gICAgICAgICAgfSxcbiAgICAgICAgfX1cbiAgICAgID5cbiAgICAgICAge1RJTUVaT05FUy5tYXAodGltZXpvbmUgPT4ge1xuICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8TWVudUl0ZW0ga2V5PXt0aW1lem9uZS5pZH0gdmFsdWU9e3RpbWV6b25lLnZhbHVlfT5cbiAgICAgICAgICAgICAge3RpbWV6b25lVG9MYWJlbCh0aW1lem9uZSl9IHt0aW1lem9uZS5sYWJlbH1cbiAgICAgICAgICAgIDwvTWVudUl0ZW0+XG4gICAgICAgICAgKVxuICAgICAgICB9KX1cbiAgICAgIDwvU2VsZWN0PlxuICAgIDwvPlxuICApXG59XG5cbmV4cG9ydCB7IE5vdGlmaWNhdGlvbnNTZWxlY3RUaW1lem9uZSB9XG4iXSwibmFtZXMiOlsiTm90aWZpY2F0aW9uc1NlbGVjdFRpbWV6b25lIiwiZGlzYWJsZWQiLCJsYWJlbCIsIk1lbnVQcm9wcyIsInNjaGVkdWxlIiwic2V0U2NoZWR1bGUiLCJoYW5kbGVDaGFuZ2UiLCJ1c2VDYWxsYmFjayIsImV2IiwibmV3U2NoZWR1bGUiLCJ0aW1lem9uZSIsInRhcmdldCIsInZhbHVlIiwiVHlwb2dyYXBoeSIsInN4IiwibWIiLCJTZWxlY3QiLCJmdWxsV2lkdGgiLCJzaXplIiwib25DaGFuZ2UiLCJzdHlsZSIsIndpZHRoIiwibWF4SGVpZ2h0IiwiYW5jaG9yT3JpZ2luIiwidmVydGljYWwiLCJob3Jpem9udGFsIiwidHJhbnNmb3JtT3JpZ2luIiwiVElNRVpPTkVTIiwibWFwIiwiTWVudUl0ZW0iLCJ0aW1lem9uZVRvTGFiZWwiLCJpZCJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQTBFU0E7OztlQUFBQTs7Ozt1QkExRW1CO3NCQVFyQjt1QkFDb0M7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBVTNDLE1BQU1BLDhCQUE4QixDQUFDLEVBQ25DQyxXQUFXLEtBQUssRUFDaEJDLEtBQUssRUFDTEMsU0FBUyxFQUNUQyxRQUFRLEVBQ1JDLFdBQVcsRUFDTDtJQUNOLE1BQU1DLGVBQWVDLElBQUFBLGtCQUFXLEVBQzlCLENBQUNDO1FBQ0MsSUFBSUosVUFBVTtZQUNaLE1BQU1LLGNBQWMsd0NBQUtMO2dCQUFVTSxVQUFVRixHQUFHRyxNQUFNLENBQUNDLEtBQUs7O1lBQzVEUCxZQUFZSTtRQUNkO0lBQ0YsR0FDQTtRQUFDTDtRQUFVQztLQUFZO0lBR3pCLHFCQUNFOzswQkFDRSxxQkFBQ1EsZ0JBQVU7Z0JBQUNDLElBQUk7b0JBQUVDLElBQUk7Z0JBQUU7MEJBQUliOzswQkFDNUIscUJBQUNjLFlBQU07Z0JBQ0xmLFVBQVVBO2dCQUNWZ0IsU0FBUztnQkFDVEMsTUFBSztnQkFDTE4sS0FBSyxFQUFFUixxQkFBQUEsK0JBQUFBLFNBQVVNLFFBQVE7Z0JBQ3pCUyxVQUFVYjtnQkFDVmMsT0FBTztvQkFBRUMsT0FBTztnQkFBUTtnQkFDeEJsQixXQUFXLHdDQUNOQTtvQkFDSGlCLE9BQU87d0JBQ0xFLFdBQVc7dUJBQ1JuQixzQkFBQUEsZ0NBQUFBLFVBQVdpQixLQUFLO29CQUVyQkcsY0FBYzt3QkFDWkMsVUFBVTt3QkFDVkMsWUFBWTtvQkFDZDtvQkFDQUMsaUJBQWlCO3dCQUNmRixVQUFVO3dCQUNWQyxZQUFZO29CQUNkOzswQkFHREUsZ0JBQVMsQ0FBQ0MsR0FBRyxDQUFDbEIsQ0FBQUE7b0JBQ2IscUJBQ0Usc0JBQUNtQixjQUFRO3dCQUFtQmpCLE9BQU9GLFNBQVNFLEtBQUs7OzRCQUM5Q2tCLElBQUFBLHNCQUFlLEVBQUNwQjs0QkFBVTs0QkFBRUEsU0FBU1IsS0FBSzs7dUJBRDlCUSxTQUFTcUIsRUFBRTtnQkFJOUI7Ozs7QUFJUiJ9