0a86766dc36eb8f3bcd76fc451a90ba7
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "ChatWatchlistContextDisplay", {
    enumerable: true,
    get: function() {
        return ChatWatchlistContextDisplay;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _watchlist = require("@rp/react/tanstack-api/watchlist");
const _core = require("@rp/react/web/mui/core");
const _ChatSuggestions = require("./ChatSuggestions");
const ChatWatchlistContextDisplay = ({ watchlistId, isChatEmpty })=>{
    const { name, isLoading } = (0, _watchlist.useWatchlistName)(watchlistId);
    if (isLoading) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Fade, {
            in: true,
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                style: {
                    width: "100%"
                },
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_ChatSuggestions.ChatSuggestions, {
                    isChatEmpty: isChatEmpty,
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Skeleton, {
                            width: "100%"
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Skeleton, {
                            width: "50%"
                        })
                    ]
                })
            })
        });
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Fade, {
        in: true,
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
            sx: {
                "& .MuiTypography-root": {
                    wordBreak: "break-word"
                }
            },
            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_ChatSuggestions.ChatSuggestions, {
                isChatEmpty: isChatEmpty,
                children: [
                    'What would you like to ask about your watchlist called "',
                    name,
                    '"? If you want a',
                    " ",
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("strong", {
                        children: "summary"
                    }),
                    " or have ",
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("strong", {
                        children: "specific questions"
                    }),
                    ", please let me know!"
                ]
            })
        })
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NoYXQvc3JjL2xpYi9DaGF0L0NoYXQvQ2hhdENvbnRleHQvQ2hhdFdhdGNobGlzdENvbnRleHREaXNwbGF5LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VXYXRjaGxpc3ROYW1lIH0gZnJvbSBcIkBycC9yZWFjdC90YW5zdGFjay1hcGkvd2F0Y2hsaXN0XCJcbmltcG9ydCB7IEJveCwgRmFkZSwgU2tlbGV0b24gfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9tdWkvY29yZVwiXG5pbXBvcnQgeyBDaGF0U3VnZ2VzdGlvbnMgfSBmcm9tIFwiLi9DaGF0U3VnZ2VzdGlvbnNcIlxuXG50eXBlIFByb3BzID0ge1xuICB3YXRjaGxpc3RJZDogc3RyaW5nXG4gIGlzQ2hhdEVtcHR5OiBib29sZWFuXG59XG5jb25zdCBDaGF0V2F0Y2hsaXN0Q29udGV4dERpc3BsYXkgPSAoeyB3YXRjaGxpc3RJZCwgaXNDaGF0RW1wdHkgfTogUHJvcHMpID0+IHtcbiAgY29uc3QgeyBuYW1lLCBpc0xvYWRpbmcgfSA9IHVzZVdhdGNobGlzdE5hbWUod2F0Y2hsaXN0SWQpXG5cbiAgaWYgKGlzTG9hZGluZykge1xuICAgIHJldHVybiAoXG4gICAgICA8RmFkZSBpbj5cbiAgICAgICAgPGRpdiBzdHlsZT17eyB3aWR0aDogXCIxMDAlXCIgfX0+XG4gICAgICAgICAgPENoYXRTdWdnZXN0aW9ucyBpc0NoYXRFbXB0eT17aXNDaGF0RW1wdHl9PlxuICAgICAgICAgICAgPFNrZWxldG9uIHdpZHRoPXtcIjEwMCVcIn0gLz5cbiAgICAgICAgICAgIDxTa2VsZXRvbiB3aWR0aD17XCI1MCVcIn0gLz5cbiAgICAgICAgICA8L0NoYXRTdWdnZXN0aW9ucz5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L0ZhZGU+XG4gICAgKVxuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8RmFkZSBpbj5cbiAgICAgIDxCb3ggc3g9e3sgXCImIC5NdWlUeXBvZ3JhcGh5LXJvb3RcIjogeyB3b3JkQnJlYWs6IFwiYnJlYWstd29yZFwiIH0gfX0+XG4gICAgICAgIDxDaGF0U3VnZ2VzdGlvbnMgaXNDaGF0RW1wdHk9e2lzQ2hhdEVtcHR5fT5cbiAgICAgICAgICBXaGF0IHdvdWxkIHlvdSBsaWtlIHRvIGFzayBhYm91dCB5b3VyIHdhdGNobGlzdCBjYWxsZWQgXCJ7bmFtZX1cIj8gSWYgeW91IHdhbnQgYXtcIiBcIn1cbiAgICAgICAgICA8c3Ryb25nPnN1bW1hcnk8L3N0cm9uZz4gb3IgaGF2ZSA8c3Ryb25nPnNwZWNpZmljIHF1ZXN0aW9uczwvc3Ryb25nPiwgcGxlYXNlIGxldCBtZSBrbm93IVxuICAgICAgICA8L0NoYXRTdWdnZXN0aW9ucz5cbiAgICAgIDwvQm94PlxuICAgIDwvRmFkZT5cbiAgKVxufVxuXG5leHBvcnQgeyBDaGF0V2F0Y2hsaXN0Q29udGV4dERpc3BsYXkgfVxuIl0sIm5hbWVzIjpbIkNoYXRXYXRjaGxpc3RDb250ZXh0RGlzcGxheSIsIndhdGNobGlzdElkIiwiaXNDaGF0RW1wdHkiLCJuYW1lIiwiaXNMb2FkaW5nIiwidXNlV2F0Y2hsaXN0TmFtZSIsIkZhZGUiLCJpbiIsImRpdiIsInN0eWxlIiwid2lkdGgiLCJDaGF0U3VnZ2VzdGlvbnMiLCJTa2VsZXRvbiIsIkJveCIsInN4Iiwid29yZEJyZWFrIiwic3Ryb25nIl0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBb0NTQTs7O2VBQUFBOzs7OzJCQXBDd0I7c0JBQ0c7aUNBQ0o7QUFNaEMsTUFBTUEsOEJBQThCLENBQUMsRUFBRUMsV0FBVyxFQUFFQyxXQUFXLEVBQVM7SUFDdEUsTUFBTSxFQUFFQyxJQUFJLEVBQUVDLFNBQVMsRUFBRSxHQUFHQyxJQUFBQSwyQkFBZ0IsRUFBQ0o7SUFFN0MsSUFBSUcsV0FBVztRQUNiLHFCQUNFLHFCQUFDRSxVQUFJO1lBQUNDLEVBQUU7c0JBQ04sY0FBQSxxQkFBQ0M7Z0JBQUlDLE9BQU87b0JBQUVDLE9BQU87Z0JBQU87MEJBQzFCLGNBQUEsc0JBQUNDLGdDQUFlO29CQUFDVCxhQUFhQTs7c0NBQzVCLHFCQUFDVSxjQUFROzRCQUFDRixPQUFPOztzQ0FDakIscUJBQUNFLGNBQVE7NEJBQUNGLE9BQU87Ozs7OztJQUszQjtJQUVBLHFCQUNFLHFCQUFDSixVQUFJO1FBQUNDLEVBQUU7a0JBQ04sY0FBQSxxQkFBQ00sU0FBRztZQUFDQyxJQUFJO2dCQUFFLHlCQUF5QjtvQkFBRUMsV0FBVztnQkFBYTtZQUFFO3NCQUM5RCxjQUFBLHNCQUFDSixnQ0FBZTtnQkFBQ1QsYUFBYUE7O29CQUFhO29CQUNnQkM7b0JBQUs7b0JBQWlCO2tDQUMvRSxxQkFBQ2E7a0NBQU87O29CQUFnQjtrQ0FBUyxxQkFBQ0E7a0NBQU87O29CQUEyQjs7Ozs7QUFLOUUifQ==