da41c483789189d1d368e1aa77b8cefe
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "DraggableItems", {
    enumerable: true,
    get: function() {
        return DraggableItems;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _immutabilityhelper = /*#__PURE__*/ _interop_require_default(require("immutability-helper"));
const _reactdnd = require("react-dnd");
const _hooks = require("@rp/react/web/common/hooks");
const _DraggableItem = require("./DraggableItem");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function hasChanges(cards, list) {
    return JSON.stringify(cards) !== JSON.stringify(list);
}
function DraggableItems({ list, ListItem, onDrop, disableDrag, componentProps }) {
    const { isMobile } = (0, _hooks.useDeviceInfo)();
    const [cards, setCards] = (0, _react.useState)(list);
    const type = isMobile ? _DraggableItem.ItemTypes.MOBILE_CARD : _DraggableItem.ItemTypes.HUB_TABLE_ROW;
    const disableDragging = list.length <= 1 || disableDrag;
    (0, _react.useEffect)(()=>setCards(list), [
        list
    ]);
    const moveCard = (0, _react.useCallback)((dragIndex, hoverIndex)=>{
        setCards((prevCards)=>(0, _immutabilityhelper.default)(prevCards, {
                $splice: [
                    [
                        dragIndex,
                        1
                    ],
                    [
                        hoverIndex,
                        0,
                        prevCards[dragIndex]
                    ]
                ]
            }));
    }, []);
    const [_, drop] = (0, _reactdnd.useDrop)({
        accept: type,
        drop () {
            if (hasChanges(cards, list)) onDrop === null || onDrop === void 0 ? void 0 : onDrop(cards);
        }
    });
    (0, _react.useEffect)(()=>{
        drop(window.document.body);
    }, [
        drop
    ]);
    const isDragging = hasChanges(cards, list);
    return cards.map((row, index)=>{
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_DraggableItem.DraggableItem, {
            moveCard: moveCard,
            index: index,
            item: row,
            disableDrag: disableDragging,
            type: type,
            onDrop: ()=>{
                if (hasChanges(cards, list)) onDrop === null || onDrop === void 0 ? void 0 : onDrop(cards);
            },
            renderItem: (dragRef, dragOptions)=>{
                return /*#__PURE__*/ (0, _jsxruntime.jsx)(ListItem, {
                    ref: dragRef,
                    item: row,
                    dragOptions: _object_spread_props(_object_spread({}, dragOptions), {
                        isDragging
                    }),
                    componentProps: componentProps
                });
            }
        }, row.id);
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9jb21wb3NpdGUtY29tcG9uZW50cy9zcmMvUmVPcmRlcmFibGVMaXN0L0RyYWdnYWJsZUl0ZW1zLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBGb3J3YXJkUmVmRXhvdGljQ29tcG9uZW50LCB1c2VDYWxsYmFjaywgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgdXBkYXRlIGZyb20gXCJpbW11dGFiaWxpdHktaGVscGVyXCJcbmltcG9ydCB7IHVzZURyb3AgfSBmcm9tIFwicmVhY3QtZG5kXCJcbmltcG9ydCB7IHVzZURldmljZUluZm8gfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9jb21tb24vaG9va3NcIlxuaW1wb3J0IHsgRHJhZ09wdGlvbnMsIERyYWdnYWJsZUl0ZW0sIEl0ZW1UeXBlcyB9IGZyb20gXCIuL0RyYWdnYWJsZUl0ZW1cIlxuXG50eXBlIFByb3BzPEl0ZW0sIENQcm9wcz4gPSB7XG4gIGxpc3Q6IEFycmF5PEl0ZW0+XG4gIExpc3RJdGVtOiBGb3J3YXJkUmVmRXhvdGljQ29tcG9uZW50PFxuICAgIHtcbiAgICAgIGl0ZW06IEl0ZW1cbiAgICAgIGRyYWdPcHRpb25zPzogRHJhZ09wdGlvbnNcbiAgICAgIGNvbXBvbmVudFByb3BzPzogQ1Byb3BzXG4gICAgfSAmIFJlYWN0LlJlZkF0dHJpYnV0ZXM8dW5rbm93bj5cbiAgPlxuICBvbkRyb3A6IChvcmRlcmVkTGlzdDogQXJyYXk8SXRlbT4pID0+IHZvaWRcbiAgZGlzYWJsZURyYWc/OiBib29sZWFuXG4gIGNvbXBvbmVudFByb3BzPzogQ1Byb3BzXG59XG5cbmZ1bmN0aW9uIGhhc0NoYW5nZXM8SXRlbT4oY2FyZHM6IEFycmF5PEl0ZW0+LCBsaXN0OiBBcnJheTxJdGVtPikge1xuICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoY2FyZHMpICE9PSBKU09OLnN0cmluZ2lmeShsaXN0KVxufVxuXG5mdW5jdGlvbiBEcmFnZ2FibGVJdGVtczxJdGVtIGV4dGVuZHMgeyBpZDogc3RyaW5nIH0sIENQcm9wcz4oe1xuICBsaXN0LFxuICBMaXN0SXRlbSxcbiAgb25Ecm9wLFxuICBkaXNhYmxlRHJhZyxcbiAgY29tcG9uZW50UHJvcHMsXG59OiBQcm9wczxJdGVtLCBDUHJvcHM+KSB7XG4gIGNvbnN0IHsgaXNNb2JpbGUgfSA9IHVzZURldmljZUluZm8oKVxuICBjb25zdCBbY2FyZHMsIHNldENhcmRzXSA9IHVzZVN0YXRlKGxpc3QpXG4gIGNvbnN0IHR5cGUgPSBpc01vYmlsZSA/IEl0ZW1UeXBlcy5NT0JJTEVfQ0FSRCA6IEl0ZW1UeXBlcy5IVUJfVEFCTEVfUk9XXG4gIGNvbnN0IGRpc2FibGVEcmFnZ2luZyA9IGxpc3QubGVuZ3RoIDw9IDEgfHwgZGlzYWJsZURyYWdcblxuICB1c2VFZmZlY3QoKCkgPT4gc2V0Q2FyZHMobGlzdCksIFtsaXN0XSlcblxuICBjb25zdCBtb3ZlQ2FyZCA9IHVzZUNhbGxiYWNrKChkcmFnSW5kZXg6IG51bWJlciwgaG92ZXJJbmRleDogbnVtYmVyKSA9PiB7XG4gICAgc2V0Q2FyZHMocHJldkNhcmRzID0+XG4gICAgICB1cGRhdGUocHJldkNhcmRzLCB7XG4gICAgICAgICRzcGxpY2U6IFtcbiAgICAgICAgICBbZHJhZ0luZGV4LCAxXSxcbiAgICAgICAgICBbaG92ZXJJbmRleCwgMCwgcHJldkNhcmRzW2RyYWdJbmRleF1dLFxuICAgICAgICBdLFxuICAgICAgfSksXG4gICAgKVxuICB9LCBbXSlcblxuICBjb25zdCBbXywgZHJvcF0gPSB1c2VEcm9wKHtcbiAgICBhY2NlcHQ6IHR5cGUsXG4gICAgZHJvcCgpIHtcbiAgICAgIGlmIChoYXNDaGFuZ2VzKGNhcmRzLCBsaXN0KSkgb25Ecm9wPy4oY2FyZHMpXG4gICAgfSxcbiAgfSlcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGRyb3Aod2luZG93LmRvY3VtZW50LmJvZHkpXG4gIH0sIFtkcm9wXSlcblxuICBjb25zdCBpc0RyYWdnaW5nID0gaGFzQ2hhbmdlcyhjYXJkcywgbGlzdClcblxuICByZXR1cm4gY2FyZHMubWFwKChyb3csIGluZGV4KSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxEcmFnZ2FibGVJdGVtXG4gICAgICAgIGtleT17cm93LmlkfVxuICAgICAgICBtb3ZlQ2FyZD17bW92ZUNhcmR9XG4gICAgICAgIGluZGV4PXtpbmRleH1cbiAgICAgICAgaXRlbT17cm93fVxuICAgICAgICBkaXNhYmxlRHJhZz17ZGlzYWJsZURyYWdnaW5nfVxuICAgICAgICB0eXBlPXt0eXBlfVxuICAgICAgICBvbkRyb3A9eygpID0+IHtcbiAgICAgICAgICBpZiAoaGFzQ2hhbmdlcyhjYXJkcywgbGlzdCkpIG9uRHJvcD8uKGNhcmRzKVxuICAgICAgICB9fVxuICAgICAgICByZW5kZXJJdGVtPXsoZHJhZ1JlZiwgZHJhZ09wdGlvbnMpID0+IHtcbiAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPExpc3RJdGVtXG4gICAgICAgICAgICAgIHJlZj17ZHJhZ1JlZn1cbiAgICAgICAgICAgICAgaXRlbT17cm93fVxuICAgICAgICAgICAgICBkcmFnT3B0aW9ucz17eyAuLi5kcmFnT3B0aW9ucywgaXNEcmFnZ2luZyB9fVxuICAgICAgICAgICAgICBjb21wb25lbnRQcm9wcz17Y29tcG9uZW50UHJvcHN9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgIClcbiAgICAgICAgfX1cbiAgICAgIC8+XG4gICAgKVxuICB9KVxufVxuXG5leHBvcnQgeyBEcmFnZ2FibGVJdGVtcyB9XG4iXSwibmFtZXMiOlsiRHJhZ2dhYmxlSXRlbXMiLCJoYXNDaGFuZ2VzIiwiY2FyZHMiLCJsaXN0IiwiSlNPTiIsInN0cmluZ2lmeSIsIkxpc3RJdGVtIiwib25Ecm9wIiwiZGlzYWJsZURyYWciLCJjb21wb25lbnRQcm9wcyIsImlzTW9iaWxlIiwidXNlRGV2aWNlSW5mbyIsInNldENhcmRzIiwidXNlU3RhdGUiLCJ0eXBlIiwiSXRlbVR5cGVzIiwiTU9CSUxFX0NBUkQiLCJIVUJfVEFCTEVfUk9XIiwiZGlzYWJsZURyYWdnaW5nIiwibGVuZ3RoIiwidXNlRWZmZWN0IiwibW92ZUNhcmQiLCJ1c2VDYWxsYmFjayIsImRyYWdJbmRleCIsImhvdmVySW5kZXgiLCJwcmV2Q2FyZHMiLCJ1cGRhdGUiLCIkc3BsaWNlIiwiXyIsImRyb3AiLCJ1c2VEcm9wIiwiYWNjZXB0Iiwid2luZG93IiwiZG9jdW1lbnQiLCJib2R5IiwiaXNEcmFnZ2luZyIsIm1hcCIsInJvdyIsImluZGV4IiwiRHJhZ2dhYmxlSXRlbSIsIml0ZW0iLCJyZW5kZXJJdGVtIiwiZHJhZ1JlZiIsImRyYWdPcHRpb25zIiwicmVmIiwiaWQiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkF5RlNBOzs7ZUFBQUE7Ozs7dUJBekZtRTsyRUFDekQ7MEJBQ0s7dUJBQ007K0JBQ3dCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBZ0J0RCxTQUFTQyxXQUFpQkMsS0FBa0IsRUFBRUMsSUFBaUI7SUFDN0QsT0FBT0MsS0FBS0MsU0FBUyxDQUFDSCxXQUFXRSxLQUFLQyxTQUFTLENBQUNGO0FBQ2xEO0FBRUEsU0FBU0gsZUFBb0QsRUFDM0RHLElBQUksRUFDSkcsUUFBUSxFQUNSQyxNQUFNLEVBQ05DLFdBQVcsRUFDWEMsY0FBYyxFQUNNO0lBQ3BCLE1BQU0sRUFBRUMsUUFBUSxFQUFFLEdBQUdDLElBQUFBLG9CQUFhO0lBQ2xDLE1BQU0sQ0FBQ1QsT0FBT1UsU0FBUyxHQUFHQyxJQUFBQSxlQUFRLEVBQUNWO0lBQ25DLE1BQU1XLE9BQU9KLFdBQVdLLHdCQUFTLENBQUNDLFdBQVcsR0FBR0Qsd0JBQVMsQ0FBQ0UsYUFBYTtJQUN2RSxNQUFNQyxrQkFBa0JmLEtBQUtnQixNQUFNLElBQUksS0FBS1g7SUFFNUNZLElBQUFBLGdCQUFTLEVBQUMsSUFBTVIsU0FBU1QsT0FBTztRQUFDQTtLQUFLO0lBRXRDLE1BQU1rQixXQUFXQyxJQUFBQSxrQkFBVyxFQUFDLENBQUNDLFdBQW1CQztRQUMvQ1osU0FBU2EsQ0FBQUEsWUFDUEMsSUFBQUEsMkJBQU0sRUFBQ0QsV0FBVztnQkFDaEJFLFNBQVM7b0JBQ1A7d0JBQUNKO3dCQUFXO3FCQUFFO29CQUNkO3dCQUFDQzt3QkFBWTt3QkFBR0MsU0FBUyxDQUFDRixVQUFVO3FCQUFDO2lCQUN0QztZQUNIO0lBRUosR0FBRyxFQUFFO0lBRUwsTUFBTSxDQUFDSyxHQUFHQyxLQUFLLEdBQUdDLElBQUFBLGlCQUFPLEVBQUM7UUFDeEJDLFFBQVFqQjtRQUNSZTtZQUNFLElBQUk1QixXQUFXQyxPQUFPQyxPQUFPSSxtQkFBQUEsNkJBQUFBLE9BQVNMO1FBQ3hDO0lBQ0Y7SUFFQWtCLElBQUFBLGdCQUFTLEVBQUM7UUFDUlMsS0FBS0csT0FBT0MsUUFBUSxDQUFDQyxJQUFJO0lBQzNCLEdBQUc7UUFBQ0w7S0FBSztJQUVULE1BQU1NLGFBQWFsQyxXQUFXQyxPQUFPQztJQUVyQyxPQUFPRCxNQUFNa0MsR0FBRyxDQUFDLENBQUNDLEtBQUtDO1FBQ3JCLHFCQUNFLHFCQUFDQyw0QkFBYTtZQUVabEIsVUFBVUE7WUFDVmlCLE9BQU9BO1lBQ1BFLE1BQU1IO1lBQ043QixhQUFhVTtZQUNiSixNQUFNQTtZQUNOUCxRQUFRO2dCQUNOLElBQUlOLFdBQVdDLE9BQU9DLE9BQU9JLG1CQUFBQSw2QkFBQUEsT0FBU0w7WUFDeEM7WUFDQXVDLFlBQVksQ0FBQ0MsU0FBU0M7Z0JBQ3BCLHFCQUNFLHFCQUFDckM7b0JBQ0NzQyxLQUFLRjtvQkFDTEYsTUFBTUg7b0JBQ05NLGFBQWEsd0NBQUtBO3dCQUFhUjs7b0JBQy9CMUIsZ0JBQWdCQTs7WUFHdEI7V0FsQks0QixJQUFJUSxFQUFFO0lBcUJqQjtBQUNGIn0=