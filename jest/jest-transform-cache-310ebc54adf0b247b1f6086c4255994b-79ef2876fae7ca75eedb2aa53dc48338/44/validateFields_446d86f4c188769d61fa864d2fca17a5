b3173638eca636d3e4251d5c3fbda8d4
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "validateFields", {
    enumerable: true,
    get: function() {
        return validateFields;
    }
});
const _getMetadata = require("../services/getMetadata");
const _getExtension = require("./getExtension");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const validateFields = async (fileId, fields, queryClient)=>{
    let verifiedFields = fields;
    const file = await (0, _getMetadata.getMetadata)(fileId, queryClient);
    if (fields.file_name) {
        const prevExtension = (0, _getExtension.getExtension)(file.name);
        verifiedFields = _object_spread_props(_object_spread({}, verifiedFields), {
            file_name: `${fields.file_name}${prevExtension ? `.${prevExtension}` : ""}`
        });
    }
    return verifiedFields;
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3QvdGFuc3RhY2stYXBpL2ZpbGUvc3JjL3V0aWxzL3ZhbGlkYXRlRmllbGRzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFF1ZXJ5Q2xpZW50IH0gZnJvbSBcIkB0YW5zdGFjay9yZWFjdC1xdWVyeVwiXG5pbXBvcnQgeyBVcGRhdGVGaWxlIH0gZnJvbSBcIi4uL2ZpbGUudHlwZXNcIlxuaW1wb3J0IHsgZ2V0TWV0YWRhdGEgfSBmcm9tIFwiLi4vc2VydmljZXMvZ2V0TWV0YWRhdGFcIlxuaW1wb3J0IHsgZ2V0RXh0ZW5zaW9uIH0gZnJvbSBcIi4vZ2V0RXh0ZW5zaW9uXCJcblxuY29uc3QgdmFsaWRhdGVGaWVsZHMgPSBhc3luYyAoZmlsZUlkOiBzdHJpbmcsIGZpZWxkczogVXBkYXRlRmlsZSwgcXVlcnlDbGllbnQ6IFF1ZXJ5Q2xpZW50KSA9PiB7XG4gIGxldCB2ZXJpZmllZEZpZWxkczogVXBkYXRlRmlsZSA9IGZpZWxkc1xuICBjb25zdCBmaWxlID0gYXdhaXQgZ2V0TWV0YWRhdGEoZmlsZUlkLCBxdWVyeUNsaWVudClcbiAgaWYgKGZpZWxkcy5maWxlX25hbWUpIHtcbiAgICBjb25zdCBwcmV2RXh0ZW5zaW9uID0gZ2V0RXh0ZW5zaW9uKGZpbGUubmFtZSlcbiAgICB2ZXJpZmllZEZpZWxkcyA9IHtcbiAgICAgIC4uLnZlcmlmaWVkRmllbGRzLFxuICAgICAgZmlsZV9uYW1lOiBgJHtmaWVsZHMuZmlsZV9uYW1lfSR7cHJldkV4dGVuc2lvbiA/IGAuJHtwcmV2RXh0ZW5zaW9ufWAgOiBcIlwifWAsXG4gICAgfVxuICB9XG4gIHJldHVybiB2ZXJpZmllZEZpZWxkc1xufVxuXG5leHBvcnQgeyB2YWxpZGF0ZUZpZWxkcyB9XG4iXSwibmFtZXMiOlsidmFsaWRhdGVGaWVsZHMiLCJmaWxlSWQiLCJmaWVsZHMiLCJxdWVyeUNsaWVudCIsInZlcmlmaWVkRmllbGRzIiwiZmlsZSIsImdldE1ldGFkYXRhIiwiZmlsZV9uYW1lIiwicHJldkV4dGVuc2lvbiIsImdldEV4dGVuc2lvbiIsIm5hbWUiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBa0JTQTs7O2VBQUFBOzs7NkJBaEJtQjs4QkFDQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFN0IsTUFBTUEsaUJBQWlCLE9BQU9DLFFBQWdCQyxRQUFvQkM7SUFDaEUsSUFBSUMsaUJBQTZCRjtJQUNqQyxNQUFNRyxPQUFPLE1BQU1DLElBQUFBLHdCQUFXLEVBQUNMLFFBQVFFO0lBQ3ZDLElBQUlELE9BQU9LLFNBQVMsRUFBRTtRQUNwQixNQUFNQyxnQkFBZ0JDLElBQUFBLDBCQUFZLEVBQUNKLEtBQUtLLElBQUk7UUFDNUNOLGlCQUFpQix3Q0FDWkE7WUFDSEcsV0FBVyxDQUFDLEVBQUVMLE9BQU9LLFNBQVMsQ0FBQyxFQUFFQyxnQkFBZ0IsQ0FBQyxDQUFDLEVBQUVBLGNBQWMsQ0FBQyxHQUFHLEdBQUcsQ0FBQzs7SUFFL0U7SUFDQSxPQUFPSjtBQUNUIn0=