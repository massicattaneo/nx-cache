7d47de27218d9f760fbc99f0e2927718
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "VerticalScrollStepper", {
    enumerable: true,
    get: function() {
        return VerticalScrollStepper;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _hooks = require("@rp/react/web/common/hooks");
const _VerticalScrollStepperWrapper = require("./VerticalScrollStepperWrapper");
const _verticalScrollStepperConstants = require("./verticalScrollStepperConstants");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
const VerticalScrollStepper = (props)=>{
    const { isMobile } = (0, _hooks.useDeviceInfo)();
    const { activeStep, offsetTop = 0, steps } = props;
    (0, _react.useEffect)(()=>{
        const header = document.getElementsByClassName(_verticalScrollStepperConstants.VERTICAL_SCROLL_HEADER_CLASS_NAME)[0];
        const all = document.getElementsByClassName(_verticalScrollStepperConstants.VERTICAL_SCROLL_STEP_CLASS_NAME);
        var _header_getBoundingClientRect_height;
        const yOffset = -((_header_getBoundingClientRect_height = header === null || header === void 0 ? void 0 : header.getBoundingClientRect().height) !== null && _header_getBoundingClientRect_height !== void 0 ? _header_getBoundingClientRect_height : 60);
        const last = all[all.length - 1];
        if (last === undefined) return;
        last.classList.add("visible");
        setTimeout(()=>{
            const top = last.getBoundingClientRect().top + window.scrollY - offsetTop + yOffset;
            if (!props.disableAutoScroll) window.scrollTo({
                top,
                behavior: "smooth"
            });
        });
    }, [
        activeStep,
        offsetTop,
        props.disableAutoScroll,
        isMobile,
        steps
    ]);
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_VerticalScrollStepperWrapper.VerticalScrollStepperWrapper, _object_spread({}, props));
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9jb21wb3NpdGUtY29tcG9uZW50cy9zcmMvVmVydGljYWxTY3JvbGxTdGVwcGVyL1ZlcnRpY2FsU2Nyb2xsU3RlcHBlci50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJvcHNXaXRoQ2hpbGRyZW4sIFJlYWN0Tm9kZSwgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCJcbmltcG9ydCB7IHVzZURldmljZUluZm8gfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9jb21tb24vaG9va3NcIlxuaW1wb3J0IHsgVmVydGljYWxTY3JvbGxTdGVwcGVyV3JhcHBlciB9IGZyb20gXCIuL1ZlcnRpY2FsU2Nyb2xsU3RlcHBlcldyYXBwZXJcIlxuaW1wb3J0IHtcbiAgVkVSVElDQUxfU0NST0xMX0hFQURFUl9DTEFTU19OQU1FLFxuICBWRVJUSUNBTF9TQ1JPTExfU1RFUF9DTEFTU19OQU1FLFxufSBmcm9tIFwiLi92ZXJ0aWNhbFNjcm9sbFN0ZXBwZXJDb25zdGFudHNcIlxuXG50eXBlIFZlcnRpY2FsU2Nyb2xsU3RlcHBlclByb3BzID0gUHJvcHNXaXRoQ2hpbGRyZW48e1xuICB0aXRsZTogc3RyaW5nXG4gIHN0ZXBzOiBudW1iZXJcbiAgYWN0aXZlU3RlcDogbnVtYmVyXG4gIG9uU3RlcENoYW5nZT86IChzdGVwOiBudW1iZXIpID0+IHZvaWRcbiAgbmV4dERpc2FibGVkPzogYm9vbGVhblxuICBpc05leHRMb2FkaW5nPzogYm9vbGVhblxuICBoYW5kbGVDb21wbGV0ZT86ICgpID0+IHZvaWRcbiAgY29tcGxldGVCdXR0b25UZXh0Pzogc3RyaW5nIHwgUmVhY3ROb2RlXG4gIG9mZnNldFRvcD86IG51bWJlclxuICBzdGVwTGFiZWw/OiBzdHJpbmdcbiAgZGlzYWJsZUF1dG9TY3JvbGw/OiBib29sZWFuXG4gIHdpdGhLZXlib2FyZFNob3J0Y3V0cz86IGJvb2xlYW5cbn0+XG5cbmNvbnN0IFZlcnRpY2FsU2Nyb2xsU3RlcHBlciA9IChwcm9wczogVmVydGljYWxTY3JvbGxTdGVwcGVyUHJvcHMpID0+IHtcbiAgY29uc3QgeyBpc01vYmlsZSB9ID0gdXNlRGV2aWNlSW5mbygpXG4gIGNvbnN0IHsgYWN0aXZlU3RlcCwgb2Zmc2V0VG9wID0gMCwgc3RlcHMgfSA9IHByb3BzXG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBoZWFkZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFZFUlRJQ0FMX1NDUk9MTF9IRUFERVJfQ0xBU1NfTkFNRSlbMF1cbiAgICBjb25zdCBhbGwgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFZFUlRJQ0FMX1NDUk9MTF9TVEVQX0NMQVNTX05BTUUpXG4gICAgY29uc3QgeU9mZnNldCA9IC0oaGVhZGVyPy5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5oZWlnaHQgPz8gNjApXG4gICAgY29uc3QgbGFzdCA9IGFsbFthbGwubGVuZ3RoIC0gMV1cbiAgICBpZiAobGFzdCA9PT0gdW5kZWZpbmVkKSByZXR1cm5cbiAgICBsYXN0LmNsYXNzTGlzdC5hZGQoXCJ2aXNpYmxlXCIpXG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICBjb25zdCB0b3AgPSBsYXN0LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnRvcCArIHdpbmRvdy5zY3JvbGxZIC0gb2Zmc2V0VG9wICsgeU9mZnNldFxuICAgICAgaWYgKCFwcm9wcy5kaXNhYmxlQXV0b1Njcm9sbCkgd2luZG93LnNjcm9sbFRvKHsgdG9wLCBiZWhhdmlvcjogXCJzbW9vdGhcIiB9KVxuICAgIH0pXG4gIH0sIFthY3RpdmVTdGVwLCBvZmZzZXRUb3AsIHByb3BzLmRpc2FibGVBdXRvU2Nyb2xsLCBpc01vYmlsZSwgc3RlcHNdKVxuXG4gIHJldHVybiA8VmVydGljYWxTY3JvbGxTdGVwcGVyV3JhcHBlciB7Li4ucHJvcHN9IC8+XG59XG5cbmV4cG9ydCB7IFZlcnRpY2FsU2Nyb2xsU3RlcHBlciB9XG5leHBvcnQgdHlwZSB7IFZlcnRpY2FsU2Nyb2xsU3RlcHBlclByb3BzIH1cbiJdLCJuYW1lcyI6WyJWZXJ0aWNhbFNjcm9sbFN0ZXBwZXIiLCJwcm9wcyIsImlzTW9iaWxlIiwidXNlRGV2aWNlSW5mbyIsImFjdGl2ZVN0ZXAiLCJvZmZzZXRUb3AiLCJzdGVwcyIsInVzZUVmZmVjdCIsImhlYWRlciIsImRvY3VtZW50IiwiZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSIsIlZFUlRJQ0FMX1NDUk9MTF9IRUFERVJfQ0xBU1NfTkFNRSIsImFsbCIsIlZFUlRJQ0FMX1NDUk9MTF9TVEVQX0NMQVNTX05BTUUiLCJ5T2Zmc2V0IiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwiaGVpZ2h0IiwibGFzdCIsImxlbmd0aCIsInVuZGVmaW5lZCIsImNsYXNzTGlzdCIsImFkZCIsInNldFRpbWVvdXQiLCJ0b3AiLCJ3aW5kb3ciLCJzY3JvbGxZIiwiZGlzYWJsZUF1dG9TY3JvbGwiLCJzY3JvbGxUbyIsImJlaGF2aW9yIiwiVmVydGljYWxTY3JvbGxTdGVwcGVyV3JhcHBlciJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBMkNTQTs7O2VBQUFBOzs7O3VCQTNDK0M7dUJBQzFCOzhDQUNlO2dEQUl0Qzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQlAsTUFBTUEsd0JBQXdCLENBQUNDO0lBQzdCLE1BQU0sRUFBRUMsUUFBUSxFQUFFLEdBQUdDLElBQUFBLG9CQUFhO0lBQ2xDLE1BQU0sRUFBRUMsVUFBVSxFQUFFQyxZQUFZLENBQUMsRUFBRUMsS0FBSyxFQUFFLEdBQUdMO0lBRTdDTSxJQUFBQSxnQkFBUyxFQUFDO1FBQ1IsTUFBTUMsU0FBU0MsU0FBU0Msc0JBQXNCLENBQUNDLGlFQUFpQyxDQUFDLENBQUMsRUFBRTtRQUNwRixNQUFNQyxNQUFNSCxTQUFTQyxzQkFBc0IsQ0FBQ0csK0RBQStCO1lBQ3pETDtRQUFsQixNQUFNTSxVQUFVLENBQUVOLENBQUFBLENBQUFBLHVDQUFBQSxtQkFBQUEsNkJBQUFBLE9BQVFPLHFCQUFxQixHQUFHQyxNQUFNLGNBQXRDUixrREFBQUEsdUNBQTBDLEVBQUM7UUFDN0QsTUFBTVMsT0FBT0wsR0FBRyxDQUFDQSxJQUFJTSxNQUFNLEdBQUcsRUFBRTtRQUNoQyxJQUFJRCxTQUFTRSxXQUFXO1FBQ3hCRixLQUFLRyxTQUFTLENBQUNDLEdBQUcsQ0FBQztRQUNuQkMsV0FBVztZQUNULE1BQU1DLE1BQU1OLEtBQUtGLHFCQUFxQixHQUFHUSxHQUFHLEdBQUdDLE9BQU9DLE9BQU8sR0FBR3BCLFlBQVlTO1lBQzVFLElBQUksQ0FBQ2IsTUFBTXlCLGlCQUFpQixFQUFFRixPQUFPRyxRQUFRLENBQUM7Z0JBQUVKO2dCQUFLSyxVQUFVO1lBQVM7UUFDMUU7SUFDRixHQUFHO1FBQUN4QjtRQUFZQztRQUFXSixNQUFNeUIsaUJBQWlCO1FBQUV4QjtRQUFVSTtLQUFNO0lBRXBFLHFCQUFPLHFCQUFDdUIsMERBQTRCLHFCQUFLNUI7QUFDM0MifQ==