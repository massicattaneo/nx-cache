bde5a446d978ef28c828d95f4cbcdd7b
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "axiosClient", {
    enumerable: true,
    get: function() {
        return axiosClient;
    }
});
const _utils = require("@rp/common/utils");
const _axiosapi = require("@rp/react/axios-api");
const _interceptors = require("./interceptors");
const envConfig = (0, _utils.getApiEnvironmentConfig)();
const url = envConfig.url;
if (url === undefined) {
    // We must have a URL defined, so force the app to crash
    throw new Error("Undefined API URL");
}
const options = {
    headers: {
        "X-Client-Version": "1.0.0"
    }
};
const interceptors = {
    request: {
        success: _interceptors.requestInterceptor,
        error: _interceptors.requestErrorInterceptor
    },
    response: {
        success: _interceptors.responseInterceptor,
        error: _interceptors.responseErrorInterceptor
    }
};
const axiosClient = (0, _axiosapi.getClient)(url, options, interceptors);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3QvYXhpb3MtY2xpZW50L3NyYy9saWIvYXhpb3MudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0QXBpRW52aXJvbm1lbnRDb25maWcgfSBmcm9tIFwiQHJwL2NvbW1vbi91dGlsc1wiXG5pbXBvcnQgeyBnZXRDbGllbnQgfSBmcm9tIFwiQHJwL3JlYWN0L2F4aW9zLWFwaVwiXG5pbXBvcnQge1xuICByZXF1ZXN0RXJyb3JJbnRlcmNlcHRvcixcbiAgcmVxdWVzdEludGVyY2VwdG9yLFxuICByZXNwb25zZUVycm9ySW50ZXJjZXB0b3IsXG4gIHJlc3BvbnNlSW50ZXJjZXB0b3IsXG59IGZyb20gXCIuL2ludGVyY2VwdG9yc1wiXG5cbmNvbnN0IGVudkNvbmZpZyA9IGdldEFwaUVudmlyb25tZW50Q29uZmlnKClcbmNvbnN0IHVybCA9IGVudkNvbmZpZy51cmxcblxuaWYgKHVybCA9PT0gdW5kZWZpbmVkKSB7XG4gIC8vIFdlIG11c3QgaGF2ZSBhIFVSTCBkZWZpbmVkLCBzbyBmb3JjZSB0aGUgYXBwIHRvIGNyYXNoXG4gIHRocm93IG5ldyBFcnJvcihcIlVuZGVmaW5lZCBBUEkgVVJMXCIpXG59XG5cbmNvbnN0IG9wdGlvbnMgPSB7XG4gIGhlYWRlcnM6IHtcbiAgICBcIlgtQ2xpZW50LVZlcnNpb25cIjogXCIxLjAuMFwiLFxuICB9LFxufVxuXG5jb25zdCBpbnRlcmNlcHRvcnMgPSB7XG4gIHJlcXVlc3Q6IHsgc3VjY2VzczogcmVxdWVzdEludGVyY2VwdG9yLCBlcnJvcjogcmVxdWVzdEVycm9ySW50ZXJjZXB0b3IgfSxcbiAgcmVzcG9uc2U6IHsgc3VjY2VzczogcmVzcG9uc2VJbnRlcmNlcHRvciwgZXJyb3I6IHJlc3BvbnNlRXJyb3JJbnRlcmNlcHRvciB9LFxufVxuXG5jb25zdCBheGlvc0NsaWVudCA9IGdldENsaWVudCh1cmwsIG9wdGlvbnMsIGludGVyY2VwdG9ycylcblxuZXhwb3J0IHsgYXhpb3NDbGllbnQgfVxuIl0sIm5hbWVzIjpbImF4aW9zQ2xpZW50IiwiZW52Q29uZmlnIiwiZ2V0QXBpRW52aXJvbm1lbnRDb25maWciLCJ1cmwiLCJ1bmRlZmluZWQiLCJFcnJvciIsIm9wdGlvbnMiLCJoZWFkZXJzIiwiaW50ZXJjZXB0b3JzIiwicmVxdWVzdCIsInN1Y2Nlc3MiLCJyZXF1ZXN0SW50ZXJjZXB0b3IiLCJlcnJvciIsInJlcXVlc3RFcnJvckludGVyY2VwdG9yIiwicmVzcG9uc2UiLCJyZXNwb25zZUludGVyY2VwdG9yIiwicmVzcG9uc2VFcnJvckludGVyY2VwdG9yIiwiZ2V0Q2xpZW50Il0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBOEJTQTs7O2VBQUFBOzs7dUJBOUIrQjswQkFDZDs4QkFNbkI7QUFFUCxNQUFNQyxZQUFZQyxJQUFBQSw4QkFBdUI7QUFDekMsTUFBTUMsTUFBTUYsVUFBVUUsR0FBRztBQUV6QixJQUFJQSxRQUFRQyxXQUFXO0lBQ3JCLHdEQUF3RDtJQUN4RCxNQUFNLElBQUlDLE1BQU07QUFDbEI7QUFFQSxNQUFNQyxVQUFVO0lBQ2RDLFNBQVM7UUFDUCxvQkFBb0I7SUFDdEI7QUFDRjtBQUVBLE1BQU1DLGVBQWU7SUFDbkJDLFNBQVM7UUFBRUMsU0FBU0MsZ0NBQWtCO1FBQUVDLE9BQU9DLHFDQUF1QjtJQUFDO0lBQ3ZFQyxVQUFVO1FBQUVKLFNBQVNLLGlDQUFtQjtRQUFFSCxPQUFPSSxzQ0FBd0I7SUFBQztBQUM1RTtBQUVBLE1BQU1oQixjQUFjaUIsSUFBQUEsbUJBQVMsRUFBQ2QsS0FBS0csU0FBU0UifQ==