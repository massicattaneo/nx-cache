c5ec7d383f056cf468436fee4a5ffd14
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "FilesList", {
    enumerable: true,
    get: function() {
        return FilesList;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _settings = require("@rp/common/settings");
const _providers = require("@rp/react/common/providers");
const _file = require("@rp/react/tanstack-api/file");
const _basecomponents = require("@rp/react/web/common/base-components");
const _compositecomponents = require("@rp/react/web/common/composite-components");
const _files = require("@rp/react/web/common/files");
const _hooks = require("@rp/react/web/common/hooks");
const _core = require("@rp/react/web/mui/core");
const _icons = require("@rp/react/web/mui/icons");
const _FilesListItem = require("./FilesListItem");
const COLUMNS_WIDTH = [
    "60px",
    "60px",
    "calc(100% - 480px)",
    "0px",
    "100px",
    "130px",
    "100px"
];
const COLUMNS_WIDTH_SHARED = [
    "60px",
    "60px",
    "calc(100% - 680px)",
    "200px",
    "130px",
    "100px",
    "100px"
];
const SORT_OPTIONS = [
    {
        label: "Name",
        value: "name"
    },
    {
        label: "Upload Date",
        value: "date"
    },
    {
        label: "File Size",
        value: "size"
    }
];
const FLOATING_BUTTON_HEIGHT = 80;
const FilesList = ({ filterTerm, selected, shared, setSelected })=>{
    const [state, setState] = (0, _react.useState)(_file.FILES_INFINITE_PAGE_SIZE);
    const { isMobile, safeArea } = (0, _hooks.useDeviceInfo)();
    const { actions, deleteFiles, chatWithFiles } = (0, _files.useFileActions)();
    const { uploading, filteredFiles, isLoadingFiles, allFiles, sortBy, direction, onChange, completedFiltered, hasNextPage, fetchNextPage, isFetchingNextPage, isPlaceholderData } = (0, _files.useFileList)({
        filterTerm,
        shared
    });
    const { hasEntitlement } = (0, _providers.useAccount)();
    (0, _react.useEffect)(()=>{
        setState(_file.FILES_INFINITE_PAGE_SIZE);
    }, [
        filterTerm
    ]);
    const columnsWidth = shared ? COLUMNS_WIDTH_SHARED : COLUMNS_WIDTH;
    if (isLoadingFiles) return /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.LoadingSpinner, {});
    if (filterTerm.length > 0 && filteredFiles.length === 0) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.FindNoResults, {
            text: "No files found for your search.",
            isLoading: isPlaceholderData
        });
    }
    if (allFiles.length === 0) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
            sx: {
                height: isMobile ? "calc(100dvh - 180px)" : "100%",
                width: "100%"
            },
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.DropFileImage, {
                isLoading: isPlaceholderData
            })
        });
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
        sx: {
            width: 1,
            mt: isMobile ? 0 : 1,
            paddingBottom: isMobile ? `calc(${_compositecomponents.BOTTOM_NAV_HEIGHT + FLOATING_BUTTON_HEIGHT}px + ${safeArea.bottom})` : undefined
        },
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.HubTableRow, {
                sx: {
                    backgroundColor: "transparent",
                    gap: 0
                },
                columnsWidth: columnsWidth,
                columns: [
                    {
                        node: isMobile ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.HubSortableHeadCell, {
                            label: "NAME",
                            value: "name",
                            onChange: onChange,
                            sortBy: sortBy,
                            direction: direction,
                            sortOptions: SORT_OPTIONS
                        }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Checkbox, {
                            disabled: !!uploading.length,
                            checked: selected.length === completedFiltered.length && completedFiltered.length > 0,
                            onChange: (ev, val)=>{
                                ev.stopPropagation();
                                if (!val) {
                                    setSelected([]);
                                } else {
                                    setSelected(completedFiltered.map((f)=>({
                                            id: f.id,
                                            shared: shared !== null && shared !== void 0 ? shared : false
                                        })));
                                }
                            }
                        })
                    },
                    {
                        node: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                            sx: {
                                fontSize: 11,
                                fontWeight: 700
                            },
                            children: "TYPE"
                        })
                    },
                    {
                        node: /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.HubSortableHeadCell, {
                            label: "NAME",
                            value: "name",
                            onChange: onChange,
                            sortBy: sortBy,
                            direction: direction,
                            sortOptions: SORT_OPTIONS
                        })
                    },
                    {
                        node: shared ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                            sx: {
                                fontSize: 11,
                                fontWeight: 700
                            },
                            children: "OWNER"
                        }) : ""
                    },
                    {
                        node: /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.HubSortableHeadCell, {
                            label: "FILE SIZE",
                            value: "size",
                            onChange: onChange,
                            sortBy: sortBy,
                            direction: direction,
                            sortOptions: SORT_OPTIONS,
                            defaultDirection: "desc"
                        })
                    },
                    {
                        node: /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.HubSortableHeadCell, {
                            label: "UPLOAD DATE",
                            value: "date",
                            onChange: onChange,
                            sortBy: sortBy,
                            direction: direction,
                            sortOptions: SORT_OPTIONS,
                            defaultDirection: "desc"
                        })
                    },
                    {
                        node: selected.length > 0 ? /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                            sx: {
                                textAlign: "right"
                            },
                            children: [
                                hasEntitlement("chat:file") ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.RPTooltip, {
                                    title: selected.length > _settings.MAX_SELECTABLE_FILES ? "You can only add a maximum of 10 files" : "Chat",
                                    placement: "top",
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.IconButton, {
                                            sx: {
                                                mr: 1
                                            },
                                            onClick: ()=>chatWithFiles(selected.map((i)=>i.id)),
                                            disabled: selected.length > _settings.MAX_SELECTABLE_FILES,
                                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.ChatBubbleOutline, {})
                                        })
                                    })
                                }) : null,
                                selected.every((file)=>!file.shared) && !shared ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.IconButton, {
                                    sx: {
                                        p: "5px"
                                    },
                                    onClick: ()=>{
                                        deleteFiles(selected.map((i)=>i.id)).then(()=>{
                                            setSelected([]);
                                        });
                                    },
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.Delete, {})
                                }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                                    sx: {
                                        width: 34,
                                        display: "inline-block"
                                    }
                                })
                            ]
                        }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_jsxruntime.Fragment, {
                            children: "Â "
                        })
                    }
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.InfiniteList, {
                state: state,
                setState: setState,
                rootMargin: "0px 0px 300px 0px",
                initialElements: _file.FILES_INFINITE_PAGE_SIZE,
                pageSize: _file.FILES_INFINITE_PAGE_SIZE,
                items: filteredFiles,
                fetchNextPage: fetchNextPage,
                hasMore: hasNextPage,
                loading: isFetchingNextPage,
                renderItem: (item)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_FilesListItem.FilesListItem, {
                        shared: shared,
                        isPlaceholderData: isPlaceholderData,
                        filterTerm: filterTerm,
                        selected: selected,
                        setSelected: setSelected,
                        actions: actions,
                        item: item,
                        columnsWidth: columnsWidth
                    })
            })
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,