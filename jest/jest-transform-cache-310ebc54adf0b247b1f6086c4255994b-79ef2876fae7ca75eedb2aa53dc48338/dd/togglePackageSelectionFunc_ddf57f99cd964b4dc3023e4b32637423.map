{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/common/source-selector/src/utils/togglePackageSelectionFunc.ts"],"sourcesContent":["import { SetStateAction } from \"react\"\nimport { ContentPackage } from \"@rp/react/tanstack-api/content\"\nimport { SourceSelectorSelectedPackageInfo } from \"../sourceSelector.types\"\n\ntype TogglePackageSelectionFuncProps = {\n  e: React.MouseEvent<HTMLDivElement>\n  allContentPackages: Array<ContentPackage>\n  selectedAllPackages: Array<SourceSelectorSelectedPackageInfo>\n  setSelectedAllPackages: (value: SetStateAction<Array<SourceSelectorSelectedPackageInfo>>) => void\n  hasReachedMaxSelection: boolean\n  showMaxSelectionErrorToast: () => void\n  planComparisonHandleOpen: () => void\n}\n\nfunction togglePackageSelectionFunc({\n  e,\n  selectedAllPackages,\n  setSelectedAllPackages,\n  allContentPackages,\n  hasReachedMaxSelection,\n  showMaxSelectionErrorToast,\n  planComparisonHandleOpen,\n}: TogglePackageSelectionFuncProps): void {\n  const id = e.currentTarget.getAttribute(\"data-id\")\n  const entitled = e.currentTarget.getAttribute(\"data-entitled\") === \"true\"\n\n  if (!entitled) {\n    planComparisonHandleOpen()\n    return\n  }\n\n  if (!id) return\n\n  if (hasReachedMaxSelection) {\n    showMaxSelectionErrorToast()\n    return\n  }\n\n  const idx = selectedAllPackages.findIndex(contentPackage => contentPackage.id === id)\n\n  // removing package\n\n  if (idx !== -1) {\n    setSelectedAllPackages(selectedAllPackages => [\n      ...selectedAllPackages.slice(0, idx),\n      ...selectedAllPackages.slice(idx + 1),\n    ])\n    return\n  }\n\n  // adding package\n\n  const newContentPackage = allContentPackages.find(contentElement => contentElement.id === id)\n\n  if (!newContentPackage) return\n\n  const newPackageSelection: SourceSelectorSelectedPackageInfo = {\n    id,\n    name: newContentPackage.name,\n    sourceCount: newContentPackage.sourceCount,\n  }\n\n  setSelectedAllPackages(selectedAllPackages =>\n    [newPackageSelection, ...selectedAllPackages].sort((a, b) => a.id.localeCompare(b.id)),\n  )\n}\n\nexport { togglePackageSelectionFunc }\n"],"names":["togglePackageSelectionFunc","e","selectedAllPackages","setSelectedAllPackages","allContentPackages","hasReachedMaxSelection","showMaxSelectionErrorToast","planComparisonHandleOpen","id","currentTarget","getAttribute","entitled","idx","findIndex","contentPackage","slice","newContentPackage","find","contentElement","newPackageSelection","name","sourceCount","sort","a","b","localeCompare"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAmESA;;;eAAAA;;;AArDT,SAASA,2BAA2B,EAClCC,CAAC,EACDC,mBAAmB,EACnBC,sBAAsB,EACtBC,kBAAkB,EAClBC,sBAAsB,EACtBC,0BAA0B,EAC1BC,wBAAwB,EACQ;IAChC,MAAMC,KAAKP,EAAEQ,aAAa,CAACC,YAAY,CAAC;IACxC,MAAMC,WAAWV,EAAEQ,aAAa,CAACC,YAAY,CAAC,qBAAqB;IAEnE,IAAI,CAACC,UAAU;QACbJ;QACA;IACF;IAEA,IAAI,CAACC,IAAI;IAET,IAAIH,wBAAwB;QAC1BC;QACA;IACF;IAEA,MAAMM,MAAMV,oBAAoBW,SAAS,CAACC,CAAAA,iBAAkBA,eAAeN,EAAE,KAAKA;IAElF,mBAAmB;IAEnB,IAAII,QAAQ,CAAC,GAAG;QACdT,uBAAuBD,CAAAA,sBAAuB;mBACzCA,oBAAoBa,KAAK,CAAC,GAAGH;mBAC7BV,oBAAoBa,KAAK,CAACH,MAAM;aACpC;QACD;IACF;IAEA,iBAAiB;IAEjB,MAAMI,oBAAoBZ,mBAAmBa,IAAI,CAACC,CAAAA,iBAAkBA,eAAeV,EAAE,KAAKA;IAE1F,IAAI,CAACQ,mBAAmB;IAExB,MAAMG,sBAAyD;QAC7DX;QACAY,MAAMJ,kBAAkBI,IAAI;QAC5BC,aAAaL,kBAAkBK,WAAW;IAC5C;IAEAlB,uBAAuBD,CAAAA,sBACrB;YAACiB;eAAwBjB;SAAoB,CAACoB,IAAI,CAAC,CAACC,GAAGC,IAAMD,EAAEf,EAAE,CAACiB,aAAa,CAACD,EAAEhB,EAAE;AAExF"}