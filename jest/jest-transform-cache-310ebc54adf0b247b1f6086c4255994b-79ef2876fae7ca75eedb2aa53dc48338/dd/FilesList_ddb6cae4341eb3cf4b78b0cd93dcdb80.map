{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/apps/client-web/src/app/components/Hub/Files/FilesList/FilesList.tsx"],"sourcesContent":["import { Dispatch, SetStateAction, useEffect, useState } from \"react\"\nimport { MAX_SELECTABLE_FILES } from \"@rp/common/settings\"\nimport { useAccount } from \"@rp/react/common/providers\"\nimport { FILES_INFINITE_PAGE_SIZE } from \"@rp/react/tanstack-api/file\"\nimport { DropFileImage, RPTooltip } from \"@rp/react/web/common/base-components\"\nimport { LoadingSpinner } from \"@rp/react/web/common/base-components\"\nimport {\n  BOTTOM_NAV_HEIGHT,\n  FindNoResults,\n  HubSortableHeadCell,\n  HubTableRow,\n} from \"@rp/react/web/common/composite-components\"\nimport { InfiniteList } from \"@rp/react/web/common/composite-components\"\nimport { useFileActions, useFileList } from \"@rp/react/web/common/files\"\nimport { useDeviceInfo } from \"@rp/react/web/common/hooks\"\nimport { Box, Checkbox, IconButton, Typography } from \"@rp/react/web/mui/core\"\nimport { ChatBubbleOutline, Delete } from \"@rp/react/web/mui/icons\"\nimport { SelectedFile } from \"../Files\"\nimport { FilesListItem } from \"./FilesListItem\"\n\nconst COLUMNS_WIDTH = [\"60px\", \"60px\", \"calc(100% - 480px)\", \"0px\", \"100px\", \"130px\", \"100px\"]\nconst COLUMNS_WIDTH_SHARED = [\n  \"60px\",\n  \"60px\",\n  \"calc(100% - 680px)\",\n  \"200px\",\n  \"130px\",\n  \"100px\",\n  \"100px\",\n]\nconst SORT_OPTIONS = [\n  { label: \"Name\", value: \"name\" },\n  { label: \"Upload Date\", value: \"date\" },\n  { label: \"File Size\", value: \"size\" },\n]\n\ntype Props = {\n  filterTerm: string\n  selected: Array<SelectedFile>\n  setSelected: Dispatch<SetStateAction<Array<SelectedFile>>>\n  shared?: boolean\n}\n\nconst FLOATING_BUTTON_HEIGHT = 80\nconst FilesList = ({ filterTerm, selected, shared, setSelected }: Props) => {\n  const [state, setState] = useState(FILES_INFINITE_PAGE_SIZE)\n  const { isMobile, safeArea } = useDeviceInfo()\n  const { actions, deleteFiles, chatWithFiles } = useFileActions()\n  const {\n    uploading,\n    filteredFiles,\n    isLoadingFiles,\n    allFiles,\n    sortBy,\n    direction,\n    onChange,\n    completedFiltered,\n    hasNextPage,\n    fetchNextPage,\n    isFetchingNextPage,\n    isPlaceholderData,\n  } = useFileList({ filterTerm, shared })\n\n  const { hasEntitlement } = useAccount()\n\n  useEffect(() => {\n    setState(FILES_INFINITE_PAGE_SIZE)\n  }, [filterTerm])\n\n  const columnsWidth = shared ? COLUMNS_WIDTH_SHARED : COLUMNS_WIDTH\n  if (isLoadingFiles) return <LoadingSpinner />\n\n  if (filterTerm.length > 0 && filteredFiles.length === 0) {\n    return <FindNoResults text=\"No files found for your search.\" isLoading={isPlaceholderData} />\n  }\n\n  if (allFiles.length === 0) {\n    return (\n      <Box\n        sx={{\n          height: isMobile ? \"calc(100dvh - 180px)\" : \"100%\",\n          width: \"100%\",\n        }}\n      >\n        <DropFileImage isLoading={isPlaceholderData} />\n      </Box>\n    )\n  }\n\n  return (\n    <Box\n      sx={{\n        width: 1,\n        mt: isMobile ? 0 : 1,\n        paddingBottom: isMobile\n          ? `calc(${BOTTOM_NAV_HEIGHT + FLOATING_BUTTON_HEIGHT}px + ${safeArea.bottom})`\n          : undefined,\n      }}\n    >\n      <HubTableRow\n        sx={{ backgroundColor: \"transparent\", gap: 0 }}\n        columnsWidth={columnsWidth}\n        columns={[\n          {\n            node: isMobile ? (\n              <HubSortableHeadCell\n                label=\"NAME\"\n                value=\"name\"\n                onChange={onChange}\n                sortBy={sortBy}\n                direction={direction}\n                sortOptions={SORT_OPTIONS}\n              />\n            ) : (\n              <Checkbox\n                disabled={!!uploading.length}\n                checked={\n                  selected.length === completedFiltered.length && completedFiltered.length > 0\n                }\n                onChange={(ev, val) => {\n                  ev.stopPropagation()\n                  if (!val) {\n                    setSelected([])\n                  } else {\n                    setSelected(completedFiltered.map(f => ({ id: f.id, shared: shared ?? false })))\n                  }\n                }}\n              />\n            ),\n          },\n          {\n            node: <Typography sx={{ fontSize: 11, fontWeight: 700 }}>TYPE</Typography>,\n          },\n          {\n            node: (\n              <HubSortableHeadCell\n                label=\"NAME\"\n                value=\"name\"\n                onChange={onChange}\n                sortBy={sortBy}\n                direction={direction}\n                sortOptions={SORT_OPTIONS}\n              />\n            ),\n          },\n          {\n            node: shared ? (\n              <Typography sx={{ fontSize: 11, fontWeight: 700 }}>OWNER</Typography>\n            ) : (\n              \"\"\n            ),\n          },\n\n          {\n            node: (\n              <HubSortableHeadCell\n                label=\"FILE SIZE\"\n                value=\"size\"\n                onChange={onChange}\n                sortBy={sortBy}\n                direction={direction}\n                sortOptions={SORT_OPTIONS}\n                defaultDirection=\"desc\"\n              />\n            ),\n          },\n          {\n            node: (\n              <HubSortableHeadCell\n                label=\"UPLOAD DATE\"\n                value=\"date\"\n                onChange={onChange}\n                sortBy={sortBy}\n                direction={direction}\n                sortOptions={SORT_OPTIONS}\n                defaultDirection=\"desc\"\n              />\n            ),\n          },\n          {\n            node:\n              selected.length > 0 ? (\n                <Box sx={{ textAlign: \"right\" }}>\n                  {hasEntitlement(\"chat:file\") ? (\n                    <RPTooltip\n                      title={\n                        selected.length > MAX_SELECTABLE_FILES\n                          ? \"You can only add a maximum of 10 files\"\n                          : \"Chat\"\n                      }\n                      placement=\"top\"\n                    >\n                      <span>\n                        <IconButton\n                          sx={{ mr: 1 }}\n                          onClick={() => chatWithFiles(selected.map(i => i.id))}\n                          disabled={selected.length > MAX_SELECTABLE_FILES}\n                        >\n                          <ChatBubbleOutline />\n                        </IconButton>\n                      </span>\n                    </RPTooltip>\n                  ) : null}\n                  {selected.every(file => !file.shared) && !shared ? (\n                    <IconButton\n                      sx={{ p: \"5px\" }}\n                      onClick={() => {\n                        deleteFiles(selected.map(i => i.id)).then(() => {\n                          setSelected([])\n                        })\n                      }}\n                    >\n                      <Delete />\n                    </IconButton>\n                  ) : (\n                    <Box sx={{ width: 34, display: \"inline-block\" }} />\n                  )}\n                </Box>\n              ) : (\n                <>&nbsp;</>\n              ),\n          },\n        ]}\n      />\n\n      <InfiniteList\n        state={state}\n        setState={setState}\n        rootMargin={\"0px 0px 300px 0px\"}\n        initialElements={FILES_INFINITE_PAGE_SIZE}\n        pageSize={FILES_INFINITE_PAGE_SIZE}\n        items={filteredFiles}\n        fetchNextPage={fetchNextPage}\n        hasMore={hasNextPage}\n        loading={isFetchingNextPage}\n        renderItem={item => (\n          <FilesListItem\n            shared={shared}\n            isPlaceholderData={isPlaceholderData}\n            filterTerm={filterTerm}\n            selected={selected}\n            setSelected={setSelected}\n            actions={actions}\n            item={item}\n            columnsWidth={columnsWidth}\n          />\n        )}\n      />\n    </Box>\n  )\n}\n\nexport { FilesList }\n"],"names":["FilesList","COLUMNS_WIDTH","COLUMNS_WIDTH_SHARED","SORT_OPTIONS","label","value","FLOATING_BUTTON_HEIGHT","filterTerm","selected","shared","setSelected","state","setState","useState","FILES_INFINITE_PAGE_SIZE","isMobile","safeArea","useDeviceInfo","actions","deleteFiles","chatWithFiles","useFileActions","uploading","filteredFiles","isLoadingFiles","allFiles","sortBy","direction","onChange","completedFiltered","hasNextPage","fetchNextPage","isFetchingNextPage","isPlaceholderData","useFileList","hasEntitlement","useAccount","useEffect","columnsWidth","LoadingSpinner","length","FindNoResults","text","isLoading","Box","sx","height","width","DropFileImage","mt","paddingBottom","BOTTOM_NAV_HEIGHT","bottom","undefined","HubTableRow","backgroundColor","gap","columns","node","HubSortableHeadCell","sortOptions","Checkbox","disabled","checked","ev","val","stopPropagation","map","f","id","Typography","fontSize","fontWeight","defaultDirection","textAlign","RPTooltip","title","MAX_SELECTABLE_FILES","placement","span","IconButton","mr","onClick","i","ChatBubbleOutline","every","file","p","then","Delete","display","InfiniteList","rootMargin","initialElements","pageSize","items","hasMore","loading","renderItem","item","FilesListItem"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}