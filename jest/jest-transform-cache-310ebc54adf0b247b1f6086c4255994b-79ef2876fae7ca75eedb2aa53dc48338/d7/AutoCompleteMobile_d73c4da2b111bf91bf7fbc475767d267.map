{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/search-autosuggest-input/src/lib/UnifiedSearch/AutoCompleteMobile.tsx"],"sourcesContent":["import { useEffect } from \"react\"\nimport { EnhancedSuggestion } from \"@rp/react/tanstack-api/suggestion\"\nimport { Box } from \"@rp/react/web/mui/core\"\nimport { AutosuggestInput } from \"./AutosuggestInput\"\nimport { placeholderText } from \"./constants\"\n\nexport type AutocompleteMobileProps = {\n  onChange: (item: EnhancedSuggestion) => Promise<void> | void\n  size?: \"medium\" | \"small\"\n  selectedItems?: Array<string>\n  searchActions: {\n    isOpen: boolean\n    setIsOpen: (setOpen: boolean) => void\n  }\n  offset?: number\n  placeholder?: string\n  onClose?: () => void\n  excludeQueryTypes?: Array<string>\n  forceShowRecentSearches?: boolean\n}\n\nexport const AutoCompleteMobile = ({\n  onClose,\n  onChange,\n  selectedItems,\n  searchActions,\n  excludeQueryTypes,\n  placeholder = placeholderText,\n  forceShowRecentSearches,\n}: AutocompleteMobileProps) => {\n  const { isOpen, setIsOpen } = searchActions\n\n  // Make really sure that the overflow is back\n  useEffect(() => {\n    return () => {\n      document.body.style.removeProperty(\"overflow\")\n    }\n  }, [])\n\n  const handleClose = () => {\n    setIsOpen(false)\n    document.body.style.removeProperty(\"overflow\")\n    onClose?.()\n  }\n\n  // We need to close manually the popover after the change\n  const handleChange: typeof onChange = async suggestion => {\n    await onChange(suggestion)\n    handleClose()\n  }\n\n  return isOpen ? (\n    <Box\n      sx={{\n        backgroundColor: \"surface.main\",\n        position: \"fixed\",\n        width: \"100%\",\n        top: 0,\n        zIndex: 1051,\n        height: \"100vh\",\n        left: 0,\n      }}\n    >\n      <AutosuggestInput\n        forceShowRecentSearches={forceShowRecentSearches}\n        placeholder={placeholder}\n        onChange={handleChange}\n        selectedItems={selectedItems}\n        excludeQueryTypes={excludeQueryTypes}\n        onSearchClick={handleClose}\n        variant=\"search\"\n        onClose={handleClose}\n        keepOpen={true}\n      />\n    </Box>\n  ) : null\n}\n"],"names":["AutoCompleteMobile","onClose","onChange","selectedItems","searchActions","excludeQueryTypes","placeholder","placeholderText","forceShowRecentSearches","isOpen","setIsOpen","useEffect","document","body","style","removeProperty","handleClose","handleChange","suggestion","Box","sx","backgroundColor","position","width","top","zIndex","height","left","AutosuggestInput","onSearchClick","variant","keepOpen"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAqBaA;;;eAAAA;;;;uBArBa;sBAEN;kCACa;2BACD;AAiBzB,MAAMA,qBAAqB,CAAC,EACjCC,OAAO,EACPC,QAAQ,EACRC,aAAa,EACbC,aAAa,EACbC,iBAAiB,EACjBC,cAAcC,0BAAe,EAC7BC,uBAAuB,EACC;IACxB,MAAM,EAAEC,MAAM,EAAEC,SAAS,EAAE,GAAGN;IAE9B,6CAA6C;IAC7CO,IAAAA,gBAAS,EAAC;QACR,OAAO;YACLC,SAASC,IAAI,CAACC,KAAK,CAACC,cAAc,CAAC;QACrC;IACF,GAAG,EAAE;IAEL,MAAMC,cAAc;QAClBN,UAAU;QACVE,SAASC,IAAI,CAACC,KAAK,CAACC,cAAc,CAAC;QACnCd,oBAAAA,8BAAAA;IACF;IAEA,yDAAyD;IACzD,MAAMgB,eAAgC,OAAMC;QAC1C,MAAMhB,SAASgB;QACfF;IACF;IAEA,OAAOP,uBACL,qBAACU,SAAG;QACFC,IAAI;YACFC,iBAAiB;YACjBC,UAAU;YACVC,OAAO;YACPC,KAAK;YACLC,QAAQ;YACRC,QAAQ;YACRC,MAAM;QACR;kBAEA,cAAA,qBAACC,kCAAgB;YACfpB,yBAAyBA;YACzBF,aAAaA;YACbJ,UAAUe;YACVd,eAAeA;YACfE,mBAAmBA;YACnBwB,eAAeb;YACfc,SAAQ;YACR7B,SAASe;YACTe,UAAU;;SAGZ;AACN"}