b02fad24901f4ed83edbe260134a3f39
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "DiscoveryPanelWidget", {
    enumerable: true,
    get: function() {
        return DiscoveryPanelWidget;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _discoverysidebar = require("@rp/react/web/common/discovery-sidebar");
const _hooks = require("@rp/react/web/common/hooks");
const _providers = require("@rp/react/web/common/providers");
const _utils = require("@rp/react/web/common/vendors/utils");
const _cqsquerycontext = require("@rp/react/web/cqs-query-context");
const DiscoveryPanelWidget = ({ widgetCategory, widgetActions, mentionsItem, setMentionItem, scrollToWidgetTop, onAddToWatchlist, isFeedbackMode })=>{
    const { isMobile } = (0, _hooks.useDeviceInfo)();
    const { actions: { expression: queryCQSActions }, savedQuery: { saveStatus }, queryId } = (0, _providers.useQueryContext)();
    const handleOnChange = (element)=>{
        const shouldRemove = element.queryRelationship === "direct";
        _utils.tagManagerEvents.queryRefinement({
            action: shouldRemove ? "remove" : "add",
            component: "discoveryPanel",
            queryId,
            queryType: element.queryType,
            savedStatus: saveStatus !== null && saveStatus !== void 0 ? saveStatus : "unsaved"
        });
        const filterItem = (0, _cqsquerycontext.convertDiscoveryPanelItem)(element);
        if (shouldRemove) {
            queryCQSActions.removeItem(filterItem);
            return;
        }
        queryCQSActions.addItem(filterItem);
    };
    const handleExclude = (element)=>{
        const shouldUpdate = element.queryRelationship === "direct";
        _utils.tagManagerEvents.queryRefinement({
            action: shouldUpdate ? "changeOperation" : "add",
            component: "discoveryPanel",
            queryId,
            queryType: element.queryType,
            savedStatus: saveStatus !== null && saveStatus !== void 0 ? saveStatus : "unsaved"
        });
        const filterItem = (0, _cqsquerycontext.convertDiscoveryPanelItem)(element);
        queryCQSActions.excludeItemFromDP(filterItem, !shouldUpdate);
    };
    return mentionsItem !== undefined ? /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
        children: isMobile ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_discoverysidebar.MentionsPanelMobile, {
            isFeedbackMode: isFeedbackMode,
            title: widgetCategory.label,
            rowData: mentionsItem,
            handleClose: ()=>setMentionItem === null || setMentionItem === void 0 ? void 0 : setMentionItem(widgetCategory.id, undefined),
            onChange: ()=>handleOnChange(mentionsItem)
        }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_discoverysidebar.MentionsPanel, {
            isFeedbackMode: isFeedbackMode,
            title: widgetCategory.label,
            rowData: mentionsItem,
            handleClose: ()=>setMentionItem === null || setMentionItem === void 0 ? void 0 : setMentionItem(widgetCategory.id, undefined),
            onChange: ()=>handleOnChange(mentionsItem),
            onAddToWatchlist: onAddToWatchlist,
            onExclude: handleExclude
        })
    }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_discoverysidebar.GenericGroup, {
        widgetCategory: widgetCategory,
        onChange: handleOnChange,
        onClick: (item)=>{
            setMentionItem === null || setMentionItem === void 0 ? void 0 : setMentionItem(widgetCategory.id, item);
            scrollToWidgetTop === null || scrollToWidgetTop === void 0 ? void 0 : scrollToWidgetTop();
        },
        onExclude: handleExclude,
        widgetActions: widgetActions,
        onAddToWatchlist: onAddToWatchlist
    }, widgetCategory.label);
};

//# sourceMappingURL=data:application/json;base64,