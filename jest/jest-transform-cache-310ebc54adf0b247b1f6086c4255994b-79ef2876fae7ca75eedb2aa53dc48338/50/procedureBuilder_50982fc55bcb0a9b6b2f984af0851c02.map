{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/node_modules/@trpc/server/dist/unstable-core-do-not-import/procedureBuilder.js"],"sourcesContent":["'use strict';\n\nvar TRPCError = require('./error/TRPCError.js');\nvar middleware = require('./middleware.js');\nvar parser = require('./parser.js');\nvar utils = require('./utils.js');\n\n/** @internal */ const unsetMarker = Symbol('unsetMarker');\nfunction createNewBuilder(def1, def2) {\n    const { middlewares =[] , inputs , meta , ...rest } = def2;\n    // TODO: maybe have a fn here to warn about calls\n    return createBuilder({\n        ...utils.mergeWithoutOverrides(def1, rest),\n        inputs: [\n            ...def1.inputs,\n            ...inputs ?? []\n        ],\n        middlewares: [\n            ...def1.middlewares,\n            ...middlewares\n        ],\n        meta: def1.meta && meta ? {\n            ...def1.meta,\n            ...meta\n        } : meta ?? def1.meta\n    });\n}\nfunction createBuilder(initDef = {}) {\n    const _def = {\n        procedure: true,\n        inputs: [],\n        middlewares: [],\n        ...initDef\n    };\n    const builder = {\n        _def,\n        input (input) {\n            const parser$1 = parser.getParseFn(input);\n            return createNewBuilder(_def, {\n                inputs: [\n                    input\n                ],\n                middlewares: [\n                    middleware.createInputMiddleware(parser$1)\n                ]\n            });\n        },\n        output (output) {\n            const parser$1 = parser.getParseFn(output);\n            return createNewBuilder(_def, {\n                output,\n                middlewares: [\n                    middleware.createOutputMiddleware(parser$1)\n                ]\n            });\n        },\n        meta (meta) {\n            return createNewBuilder(_def, {\n                meta\n            });\n        },\n        use (middlewareBuilderOrFn) {\n            // Distinguish between a middleware builder and a middleware function\n            const middlewares = '_middlewares' in middlewareBuilderOrFn ? middlewareBuilderOrFn._middlewares : [\n                middlewareBuilderOrFn\n            ];\n            return createNewBuilder(_def, {\n                middlewares: middlewares\n            });\n        },\n        unstable_concat (builder) {\n            return createNewBuilder(_def, builder._def);\n        },\n        query (resolver) {\n            return createResolver({\n                ..._def,\n                type: 'query'\n            }, resolver);\n        },\n        mutation (resolver) {\n            return createResolver({\n                ..._def,\n                type: 'mutation'\n            }, resolver);\n        },\n        subscription (resolver) {\n            return createResolver({\n                ..._def,\n                type: 'subscription'\n            }, resolver);\n        }\n    };\n    return builder;\n}\nfunction createResolver(_def, resolver) {\n    const finalBuilder = createNewBuilder(_def, {\n        resolver,\n        middlewares: [\n            async function resolveMiddleware(opts) {\n                const data = await resolver(opts);\n                return {\n                    marker: middleware.middlewareMarker,\n                    ok: true,\n                    data,\n                    ctx: opts.ctx\n                };\n            }\n        ]\n    });\n    return createProcedureCaller(finalBuilder._def);\n}\nconst codeblock = `\nThis is a client-only function.\nIf you want to call this function on the server, see https://trpc.io/docs/v11/server/server-side-calls\n`.trim();\nfunction createProcedureCaller(_def) {\n    async function procedure(opts) {\n        // is direct server-side call\n        if (!opts || !('getRawInput' in opts)) {\n            throw new Error(codeblock);\n        }\n        // run the middlewares recursively with the resolver as the last one\n        async function callRecursive(callOpts = {\n            index: 0,\n            ctx: opts.ctx\n        }) {\n            try {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                const middleware = _def.middlewares[callOpts.index];\n                const result = await middleware({\n                    ctx: callOpts.ctx,\n                    type: opts.type,\n                    path: opts.path,\n                    getRawInput: callOpts.getRawInput ?? opts.getRawInput,\n                    meta: _def.meta,\n                    input: callOpts.input,\n                    next (_nextOpts) {\n                        const nextOpts = _nextOpts;\n                        return callRecursive({\n                            index: callOpts.index + 1,\n                            ctx: nextOpts && 'ctx' in nextOpts ? {\n                                ...callOpts.ctx,\n                                ...nextOpts.ctx\n                            } : callOpts.ctx,\n                            input: nextOpts && 'input' in nextOpts ? nextOpts.input : callOpts.input,\n                            getRawInput: nextOpts && 'getRawInput' in nextOpts ? nextOpts.getRawInput : callOpts.getRawInput\n                        });\n                    }\n                });\n                return result;\n            } catch (cause) {\n                return {\n                    ok: false,\n                    error: TRPCError.getTRPCErrorFromUnknown(cause),\n                    marker: middleware.middlewareMarker\n                };\n            }\n        }\n        // there's always at least one \"next\" since we wrap this.resolver in a middleware\n        const result = await callRecursive();\n        if (!result) {\n            throw new TRPCError.TRPCError({\n                code: 'INTERNAL_SERVER_ERROR',\n                message: 'No result from middlewares - did you forget to `return next()`?'\n            });\n        }\n        if (!result.ok) {\n            // re-throw original error\n            throw result.error;\n        }\n        return result.data;\n    }\n    procedure._def = _def;\n    // FIXME typecast shouldn't be needed - fixittt\n    return procedure;\n}\n\nexports.createBuilder = createBuilder;\nexports.unsetMarker = unsetMarker;\n"],"names":["TRPCError","require","middleware","parser","utils","unsetMarker","Symbol","createNewBuilder","def1","def2","middlewares","inputs","meta","rest","createBuilder","mergeWithoutOverrides","initDef","_def","procedure","builder","input","parser$1","getParseFn","createInputMiddleware","output","createOutputMiddleware","use","middlewareBuilderOrFn","_middlewares","unstable_concat","query","resolver","createResolver","type","mutation","subscription","finalBuilder","resolveMiddleware","opts","data","marker","middlewareMarker","ok","ctx","createProcedureCaller","codeblock","trim","Error","callRecursive","callOpts","index","result","path","getRawInput","next","_nextOpts","nextOpts","cause","error","getTRPCErrorFromUnknown","code","message","exports"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAIA,YAAYC,QAAQ;AACxB,IAAIC,aAAaD,QAAQ;AACzB,IAAIE,SAASF,QAAQ;AACrB,IAAIG,QAAQH,QAAQ;AAEpB,cAAc,GAAG,MAAMI,cAAcC,OAAO;AAC5C,SAASC,iBAAiBC,IAAI,EAAEC,IAAI;IAChC,MAAM,EAAEC,cAAa,EAAE,EAAGC,MAAM,EAAGC,IAAI,EAAY,GAAGH,MAATI,kCAASJ;QAA9CC;QAAkBC;QAASC;;IACnC,iDAAiD;IACjD,OAAOE,cAAc,wCACdV,MAAMW,qBAAqB,CAACP,MAAMK;QACrCF,QAAQ;eACDH,KAAKG,MAAM;eACXA,mBAAAA,oBAAAA,SAAU,EAAE;SAClB;QACDD,aAAa;eACNF,KAAKE,WAAW;eAChBA;SACN;QACDE,MAAMJ,KAAKI,IAAI,IAAIA,OAAO,mBACnBJ,KAAKI,IAAI,EACTA,QACHA,iBAAAA,kBAAAA,OAAQJ,KAAKI,IAAI;;AAE7B;AACA,SAASE,cAAcE,UAAU,CAAC,CAAC;IAC/B,MAAMC,OAAO;QACTC,WAAW;QACXP,QAAQ,EAAE;QACVD,aAAa,EAAE;OACZM;IAEP,MAAMG,UAAU;QACZF;QACAG,OAAOA,KAAK;YACR,MAAMC,WAAWlB,OAAOmB,UAAU,CAACF;YACnC,OAAOb,iBAAiBU,MAAM;gBAC1BN,QAAQ;oBACJS;iBACH;gBACDV,aAAa;oBACTR,WAAWqB,qBAAqB,CAACF;iBACpC;YACL;QACJ;QACAG,QAAQA,MAAM;YACV,MAAMH,WAAWlB,OAAOmB,UAAU,CAACE;YACnC,OAAOjB,iBAAiBU,MAAM;gBAC1BO;gBACAd,aAAa;oBACTR,WAAWuB,sBAAsB,CAACJ;iBACrC;YACL;QACJ;QACAT,MAAMA,IAAI;YACN,OAAOL,iBAAiBU,MAAM;gBAC1BL;YACJ;QACJ;QACAc,KAAKC,qBAAqB;YACtB,qEAAqE;YACrE,MAAMjB,cAAc,kBAAkBiB,wBAAwBA,sBAAsBC,YAAY,GAAG;gBAC/FD;aACH;YACD,OAAOpB,iBAAiBU,MAAM;gBAC1BP,aAAaA;YACjB;QACJ;QACAmB,iBAAiBV,OAAO;YACpB,OAAOZ,iBAAiBU,MAAME,QAAQF,IAAI;QAC9C;QACAa,OAAOC,QAAQ;YACX,OAAOC,eAAe,wCACff;gBACHgB,MAAM;gBACPF;QACP;QACAG,UAAUH,QAAQ;YACd,OAAOC,eAAe,wCACff;gBACHgB,MAAM;gBACPF;QACP;QACAI,cAAcJ,QAAQ;YAClB,OAAOC,eAAe,wCACff;gBACHgB,MAAM;gBACPF;QACP;IACJ;IACA,OAAOZ;AACX;AACA,SAASa,eAAef,IAAI,EAAEc,QAAQ;IAClC,MAAMK,eAAe7B,iBAAiBU,MAAM;QACxCc;QACArB,aAAa;YACT,eAAe2B,kBAAkBC,IAAI;gBACjC,MAAMC,OAAO,MAAMR,SAASO;gBAC5B,OAAO;oBACHE,QAAQtC,WAAWuC,gBAAgB;oBACnCC,IAAI;oBACJH;oBACAI,KAAKL,KAAKK,GAAG;gBACjB;YACJ;SACH;IACL;IACA,OAAOC,sBAAsBR,aAAanB,IAAI;AAClD;AACA,MAAM4B,YAAY,CAAC;;;AAGnB,CAAC,CAACC,IAAI;AACN,SAASF,sBAAsB3B,IAAI;IAC/B,eAAeC,UAAUoB,IAAI;QACzB,6BAA6B;QAC7B,IAAI,CAACA,QAAQ,CAAE,CAAA,iBAAiBA,IAAG,GAAI;YACnC,MAAM,IAAIS,MAAMF;QACpB;QACA,oEAAoE;QACpE,eAAeG,cAAcC,WAAW;YACpCC,OAAO;YACPP,KAAKL,KAAKK,GAAG;QACjB,CAAC;YACG,IAAI;gBACA,oEAAoE;gBACpE,MAAMzC,aAAae,KAAKP,WAAW,CAACuC,SAASC,KAAK,CAAC;oBAKlCD;gBAJjB,MAAME,SAAS,MAAMjD,WAAW;oBAC5ByC,KAAKM,SAASN,GAAG;oBACjBV,MAAMK,KAAKL,IAAI;oBACfmB,MAAMd,KAAKc,IAAI;oBACfC,aAAaJ,CAAAA,wBAAAA,SAASI,WAAW,cAApBJ,mCAAAA,wBAAwBX,KAAKe,WAAW;oBACrDzC,MAAMK,KAAKL,IAAI;oBACfQ,OAAO6B,SAAS7B,KAAK;oBACrBkC,MAAMC,SAAS;wBACX,MAAMC,WAAWD;wBACjB,OAAOP,cAAc;4BACjBE,OAAOD,SAASC,KAAK,GAAG;4BACxBP,KAAKa,YAAY,SAASA,WAAW,mBAC9BP,SAASN,GAAG,EACZa,SAASb,GAAG,IACfM,SAASN,GAAG;4BAChBvB,OAAOoC,YAAY,WAAWA,WAAWA,SAASpC,KAAK,GAAG6B,SAAS7B,KAAK;4BACxEiC,aAAaG,YAAY,iBAAiBA,WAAWA,SAASH,WAAW,GAAGJ,SAASI,WAAW;wBACpG;oBACJ;gBACJ;gBACA,OAAOF;YACX,EAAE,OAAOM,OAAO;gBACZ,OAAO;oBACHf,IAAI;oBACJgB,OAAO1D,UAAU2D,uBAAuB,CAACF;oBACzCjB,QAAQtC,WAAWuC,gBAAgB;gBACvC;YACJ;QACJ;QACA,iFAAiF;QACjF,MAAMU,SAAS,MAAMH;QACrB,IAAI,CAACG,QAAQ;YACT,MAAM,IAAInD,UAAUA,SAAS,CAAC;gBAC1B4D,MAAM;gBACNC,SAAS;YACb;QACJ;QACA,IAAI,CAACV,OAAOT,EAAE,EAAE;YACZ,0BAA0B;YAC1B,MAAMS,OAAOO,KAAK;QACtB;QACA,OAAOP,OAAOZ,IAAI;IACtB;IACArB,UAAUD,IAAI,GAAGA;IACjB,+CAA+C;IAC/C,OAAOC;AACX;AAEA4C,QAAQhD,aAAa,GAAGA;AACxBgD,QAAQzD,WAAW,GAAGA"}