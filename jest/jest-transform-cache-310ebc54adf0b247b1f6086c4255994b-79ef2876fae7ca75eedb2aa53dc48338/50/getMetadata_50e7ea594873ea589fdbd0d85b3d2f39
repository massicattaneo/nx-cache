f74c53f4b0ba3d664fb8fac43599210c
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "getMetadata", {
    enumerable: true,
    get: function() {
        return getMetadata;
    }
});
const _utils = require("@rp/common/utils");
const _axiosclient = require("@rp/react/axios-client");
const _fileconstants = require("../file.constants");
const _filesQueryKeys = require("../utils/filesQueryKeys");
const _getFileFromResponseForGetMetadata = require("../utils/getFileFromResponseForGetMetadata");
const getMetadata = async (id, queryClient)=>{
    const res = queryClient.getQueriesData({
        queryKey: _filesQueryKeys.filesQueryKeys.paginated()
    });
    const file = (0, _getFileFromResponseForGetMetadata.getFileFromResponseForGetMetadata)(res, id);
    if (file) return (0, _utils.mapServerFile)(file);
    const { data } = await _axiosclient.axiosClient.get(`${_fileconstants.FILES_BASE_URL}${_fileconstants.FILES_ROOT}/${id}/metadata`);
    return (0, _utils.mapServerFile)(data);
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3QvdGFuc3RhY2stYXBpL2ZpbGUvc3JjL3NlcnZpY2VzL2dldE1ldGFkYXRhLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEZpbGVDb2xsZWN0aW9uLCBTZXJ2ZXJGaWxlLCBtYXBTZXJ2ZXJGaWxlIH0gZnJvbSBcIkBycC9jb21tb24vdXRpbHNcIlxuaW1wb3J0IHsgYXhpb3NDbGllbnQgfSBmcm9tIFwiQHJwL3JlYWN0L2F4aW9zLWNsaWVudFwiXG5pbXBvcnQgeyBJbmZpbml0ZURhdGEsIFF1ZXJ5Q2xpZW50IH0gZnJvbSBcIkB0YW5zdGFjay9yZWFjdC1xdWVyeVwiXG5pbXBvcnQgeyBGSUxFU19CQVNFX1VSTCwgRklMRVNfUk9PVCB9IGZyb20gXCIuLi9maWxlLmNvbnN0YW50c1wiXG5pbXBvcnQgeyBmaWxlc1F1ZXJ5S2V5cyB9IGZyb20gXCIuLi91dGlscy9maWxlc1F1ZXJ5S2V5c1wiXG5pbXBvcnQgeyBnZXRGaWxlRnJvbVJlc3BvbnNlRm9yR2V0TWV0YWRhdGEgfSBmcm9tIFwiLi4vdXRpbHMvZ2V0RmlsZUZyb21SZXNwb25zZUZvckdldE1ldGFkYXRhXCJcblxuY29uc3QgZ2V0TWV0YWRhdGEgPSBhc3luYyAoaWQ6IHN0cmluZyB8IHVuZGVmaW5lZCwgcXVlcnlDbGllbnQ6IFF1ZXJ5Q2xpZW50KSA9PiB7XG4gIGNvbnN0IHJlcyA9IHF1ZXJ5Q2xpZW50LmdldFF1ZXJpZXNEYXRhPEluZmluaXRlRGF0YTxGaWxlQ29sbGVjdGlvbj4+KHtcbiAgICBxdWVyeUtleTogZmlsZXNRdWVyeUtleXMucGFnaW5hdGVkKCksXG4gIH0pXG5cbiAgY29uc3QgZmlsZSA9IGdldEZpbGVGcm9tUmVzcG9uc2VGb3JHZXRNZXRhZGF0YShyZXMsIGlkKVxuXG4gIGlmIChmaWxlKSByZXR1cm4gbWFwU2VydmVyRmlsZShmaWxlKVxuXG4gIGNvbnN0IHsgZGF0YSB9ID0gYXdhaXQgYXhpb3NDbGllbnQuZ2V0PFNlcnZlckZpbGU+KFxuICAgIGAke0ZJTEVTX0JBU0VfVVJMfSR7RklMRVNfUk9PVH0vJHtpZH0vbWV0YWRhdGFgLFxuICApXG5cbiAgcmV0dXJuIG1hcFNlcnZlckZpbGUoZGF0YSlcbn1cblxuZXhwb3J0IHsgZ2V0TWV0YWRhdGEgfVxuIl0sIm5hbWVzIjpbImdldE1ldGFkYXRhIiwiaWQiLCJxdWVyeUNsaWVudCIsInJlcyIsImdldFF1ZXJpZXNEYXRhIiwicXVlcnlLZXkiLCJmaWxlc1F1ZXJ5S2V5cyIsInBhZ2luYXRlZCIsImZpbGUiLCJnZXRGaWxlRnJvbVJlc3BvbnNlRm9yR2V0TWV0YWRhdGEiLCJtYXBTZXJ2ZXJGaWxlIiwiZGF0YSIsImF4aW9zQ2xpZW50IiwiZ2V0IiwiRklMRVNfQkFTRV9VUkwiLCJGSUxFU19ST09UIl0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQXVCU0E7OztlQUFBQTs7O3VCQXZCaUQ7NkJBQzlCOytCQUVlO2dDQUNaO21EQUNtQjtBQUVsRCxNQUFNQSxjQUFjLE9BQU9DLElBQXdCQztJQUNqRCxNQUFNQyxNQUFNRCxZQUFZRSxjQUFjLENBQStCO1FBQ25FQyxVQUFVQyw4QkFBYyxDQUFDQyxTQUFTO0lBQ3BDO0lBRUEsTUFBTUMsT0FBT0MsSUFBQUEsb0VBQWlDLEVBQUNOLEtBQUtGO0lBRXBELElBQUlPLE1BQU0sT0FBT0UsSUFBQUEsb0JBQWEsRUFBQ0Y7SUFFL0IsTUFBTSxFQUFFRyxJQUFJLEVBQUUsR0FBRyxNQUFNQyx3QkFBVyxDQUFDQyxHQUFHLENBQ3BDLENBQUMsRUFBRUMsNkJBQWMsQ0FBQyxFQUFFQyx5QkFBVSxDQUFDLENBQUMsRUFBRWQsR0FBRyxTQUFTLENBQUM7SUFHakQsT0FBT1MsSUFBQUEsb0JBQWEsRUFBQ0M7QUFDdkIifQ==