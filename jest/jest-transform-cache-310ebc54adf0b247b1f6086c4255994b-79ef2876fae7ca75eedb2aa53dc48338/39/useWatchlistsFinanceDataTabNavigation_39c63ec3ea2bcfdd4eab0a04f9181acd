05f7cbaccdbaabcb5a9b372245d95b51
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "useWatchlistsFinanceDataTabNavigation", {
    enumerable: true,
    get: function() {
        return useWatchlistsFinanceDataTabNavigation;
    }
});
const _react = require("react");
const _reactrouterdom = require("react-router-dom");
const _hooks = require("@rp/react/web/common/hooks");
const _financeDataTabTablesSchema = require("../financeDataTabTablesSchema");
const _useWatchlistsDataTabsFeatureFlag = require("./useWatchlistsDataTabsFeatureFlag");
const getTabParamValue = (tab, active)=>{
    const parse = _financeDataTabTablesSchema.financeDataTabTablesSchema.safeParse(tab);
    if (parse.success && active.includes(parse.data)) return parse.data;
    return "pricing";
};
const change = ()=>{};
const useWatchlistsFinanceDataTabNavigation = (defaultTab)=>{
    const [active] = (0, _useWatchlistsDataTabsFeatureFlag.useWatchlistsDataTabsFeatureFlag)();
    const [searchParams] = (0, _reactrouterdom.useSearchParams)();
    var _searchParams_get;
    const tabParam = (_searchParams_get = searchParams.get("tab")) !== null && _searchParams_get !== void 0 ? _searchParams_get : "";
    const replace = (0, _hooks.useReplaceSearchParam)();
    const tabFromParam = getTabParamValue(tabParam, active);
    const [tabValue, setTabValue] = (0, _react.useState)(defaultTab !== undefined && tabFromParam === "pricing" ? defaultTab : tabFromParam);
    const handleChange = (0, _react.useCallback)((newValue)=>{
        if (newValue === "pricing") {
            replace(()=>undefined);
        } else {
            _financeDataTabTablesSchema.financeDataTabTablesSchema.options.forEach((key)=>{
                if (newValue === key) replace(()=>key);
            });
        }
        setTabValue(newValue);
    }, [
        replace
    ]);
    _financeDataTabTablesSchema.financeDataTabTablesSchema.options.forEach((key)=>{
        if (!active.includes(key) && tabValue === key) return {
            tabValue: "pricing",
            handleChange: change
        };
    });
    return {
        tabValue,
        handleChange
    };
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL3dhdGNobGlzdHMvc3JjL2xpYi9ob29rcy91c2VXYXRjaGxpc3RzRmluYW5jZURhdGFUYWJOYXZpZ2F0aW9uLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZUNhbGxiYWNrLCB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgeyB1c2VTZWFyY2hQYXJhbXMgfSBmcm9tIFwicmVhY3Qtcm91dGVyLWRvbVwiXG5pbXBvcnQgeyB6IH0gZnJvbSBcInpvZFwiXG5pbXBvcnQgeyB1c2VSZXBsYWNlU2VhcmNoUGFyYW0gfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9jb21tb24vaG9va3NcIlxuaW1wb3J0IHsgZmluYW5jZURhdGFUYWJUYWJsZXNTY2hlbWEgfSBmcm9tIFwiLi4vZmluYW5jZURhdGFUYWJUYWJsZXNTY2hlbWFcIlxuaW1wb3J0IHsgdXNlV2F0Y2hsaXN0c0RhdGFUYWJzRmVhdHVyZUZsYWcgfSBmcm9tIFwiLi91c2VXYXRjaGxpc3RzRGF0YVRhYnNGZWF0dXJlRmxhZ1wiXG5cbmV4cG9ydCB0eXBlIEZpbmFuY2VEYXRhVGFicyA9IHouaW5mZXI8dHlwZW9mIGZpbmFuY2VEYXRhVGFiVGFibGVzU2NoZW1hPlxuXG5jb25zdCBnZXRUYWJQYXJhbVZhbHVlID0gKHRhYjogc3RyaW5nLCBhY3RpdmU6IEFycmF5PEZpbmFuY2VEYXRhVGFicz4pOiBGaW5hbmNlRGF0YVRhYnMgPT4ge1xuICBjb25zdCBwYXJzZSA9IGZpbmFuY2VEYXRhVGFiVGFibGVzU2NoZW1hLnNhZmVQYXJzZSh0YWIpXG4gIGlmIChwYXJzZS5zdWNjZXNzICYmIGFjdGl2ZS5pbmNsdWRlcyhwYXJzZS5kYXRhKSkgcmV0dXJuIHBhcnNlLmRhdGFcbiAgcmV0dXJuIFwicHJpY2luZ1wiXG59XG5cbmNvbnN0IGNoYW5nZSA9ICgpID0+IHt9XG5cbmV4cG9ydCBjb25zdCB1c2VXYXRjaGxpc3RzRmluYW5jZURhdGFUYWJOYXZpZ2F0aW9uID0gKGRlZmF1bHRUYWI/OiBGaW5hbmNlRGF0YVRhYnMpID0+IHtcbiAgY29uc3QgW2FjdGl2ZV0gPSB1c2VXYXRjaGxpc3RzRGF0YVRhYnNGZWF0dXJlRmxhZygpXG4gIGNvbnN0IFtzZWFyY2hQYXJhbXNdID0gdXNlU2VhcmNoUGFyYW1zKClcbiAgY29uc3QgdGFiUGFyYW0gPSBzZWFyY2hQYXJhbXMuZ2V0KFwidGFiXCIpID8/IFwiXCJcbiAgY29uc3QgcmVwbGFjZSA9IHVzZVJlcGxhY2VTZWFyY2hQYXJhbSgpXG4gIGNvbnN0IHRhYkZyb21QYXJhbSA9IGdldFRhYlBhcmFtVmFsdWUodGFiUGFyYW0sIGFjdGl2ZSlcbiAgY29uc3QgW3RhYlZhbHVlLCBzZXRUYWJWYWx1ZV0gPSB1c2VTdGF0ZTxGaW5hbmNlRGF0YVRhYnM+KFxuICAgIGRlZmF1bHRUYWIgIT09IHVuZGVmaW5lZCAmJiB0YWJGcm9tUGFyYW0gPT09IFwicHJpY2luZ1wiID8gZGVmYXVsdFRhYiA6IHRhYkZyb21QYXJhbSxcbiAgKVxuICBjb25zdCBoYW5kbGVDaGFuZ2UgPSB1c2VDYWxsYmFjayhcbiAgICAobmV3VmFsdWU6IEZpbmFuY2VEYXRhVGFicykgPT4ge1xuICAgICAgaWYgKG5ld1ZhbHVlID09PSBcInByaWNpbmdcIikge1xuICAgICAgICByZXBsYWNlKCgpID0+IHVuZGVmaW5lZClcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGZpbmFuY2VEYXRhVGFiVGFibGVzU2NoZW1hLm9wdGlvbnMuZm9yRWFjaChrZXkgPT4ge1xuICAgICAgICAgIGlmIChuZXdWYWx1ZSA9PT0ga2V5KSByZXBsYWNlKCgpID0+IGtleSlcbiAgICAgICAgfSlcbiAgICAgIH1cbiAgICAgIHNldFRhYlZhbHVlKG5ld1ZhbHVlKVxuICAgIH0sXG4gICAgW3JlcGxhY2VdLFxuICApXG5cbiAgZmluYW5jZURhdGFUYWJUYWJsZXNTY2hlbWEub3B0aW9ucy5mb3JFYWNoKGtleSA9PiB7XG4gICAgaWYgKCFhY3RpdmUuaW5jbHVkZXMoa2V5KSAmJiB0YWJWYWx1ZSA9PT0ga2V5KVxuICAgICAgcmV0dXJuIHsgdGFiVmFsdWU6IFwicHJpY2luZ1wiIGFzIGNvbnN0LCBoYW5kbGVDaGFuZ2U6IGNoYW5nZSB9XG4gIH0pXG5cbiAgcmV0dXJuIHsgdGFiVmFsdWUsIGhhbmRsZUNoYW5nZSB9XG59XG4iXSwibmFtZXMiOlsidXNlV2F0Y2hsaXN0c0ZpbmFuY2VEYXRhVGFiTmF2aWdhdGlvbiIsImdldFRhYlBhcmFtVmFsdWUiLCJ0YWIiLCJhY3RpdmUiLCJwYXJzZSIsImZpbmFuY2VEYXRhVGFiVGFibGVzU2NoZW1hIiwic2FmZVBhcnNlIiwic3VjY2VzcyIsImluY2x1ZGVzIiwiZGF0YSIsImNoYW5nZSIsImRlZmF1bHRUYWIiLCJ1c2VXYXRjaGxpc3RzRGF0YVRhYnNGZWF0dXJlRmxhZyIsInNlYXJjaFBhcmFtcyIsInVzZVNlYXJjaFBhcmFtcyIsInRhYlBhcmFtIiwiZ2V0IiwicmVwbGFjZSIsInVzZVJlcGxhY2VTZWFyY2hQYXJhbSIsInRhYkZyb21QYXJhbSIsInRhYlZhbHVlIiwic2V0VGFiVmFsdWUiLCJ1c2VTdGF0ZSIsInVuZGVmaW5lZCIsImhhbmRsZUNoYW5nZSIsInVzZUNhbGxiYWNrIiwibmV3VmFsdWUiLCJvcHRpb25zIiwiZm9yRWFjaCIsImtleSJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBaUJhQTs7O2VBQUFBOzs7dUJBakJ5QjtnQ0FDTjt1QkFFTTs0Q0FDSztrREFDTTtBQUlqRCxNQUFNQyxtQkFBbUIsQ0FBQ0MsS0FBYUM7SUFDckMsTUFBTUMsUUFBUUMsc0RBQTBCLENBQUNDLFNBQVMsQ0FBQ0o7SUFDbkQsSUFBSUUsTUFBTUcsT0FBTyxJQUFJSixPQUFPSyxRQUFRLENBQUNKLE1BQU1LLElBQUksR0FBRyxPQUFPTCxNQUFNSyxJQUFJO0lBQ25FLE9BQU87QUFDVDtBQUVBLE1BQU1DLFNBQVMsS0FBTztBQUVmLE1BQU1WLHdDQUF3QyxDQUFDVztJQUNwRCxNQUFNLENBQUNSLE9BQU8sR0FBR1MsSUFBQUEsa0VBQWdDO0lBQ2pELE1BQU0sQ0FBQ0MsYUFBYSxHQUFHQyxJQUFBQSwrQkFBZTtRQUNyQkQ7SUFBakIsTUFBTUUsV0FBV0YsQ0FBQUEsb0JBQUFBLGFBQWFHLEdBQUcsQ0FBQyxvQkFBakJILCtCQUFBQSxvQkFBMkI7SUFDNUMsTUFBTUksVUFBVUMsSUFBQUEsNEJBQXFCO0lBQ3JDLE1BQU1DLGVBQWVsQixpQkFBaUJjLFVBQVVaO0lBQ2hELE1BQU0sQ0FBQ2lCLFVBQVVDLFlBQVksR0FBR0MsSUFBQUEsZUFBUSxFQUN0Q1gsZUFBZVksYUFBYUosaUJBQWlCLFlBQVlSLGFBQWFRO0lBRXhFLE1BQU1LLGVBQWVDLElBQUFBLGtCQUFXLEVBQzlCLENBQUNDO1FBQ0MsSUFBSUEsYUFBYSxXQUFXO1lBQzFCVCxRQUFRLElBQU1NO1FBQ2hCLE9BQU87WUFDTGxCLHNEQUEwQixDQUFDc0IsT0FBTyxDQUFDQyxPQUFPLENBQUNDLENBQUFBO2dCQUN6QyxJQUFJSCxhQUFhRyxLQUFLWixRQUFRLElBQU1ZO1lBQ3RDO1FBQ0Y7UUFDQVIsWUFBWUs7SUFDZCxHQUNBO1FBQUNUO0tBQVE7SUFHWFosc0RBQTBCLENBQUNzQixPQUFPLENBQUNDLE9BQU8sQ0FBQ0MsQ0FBQUE7UUFDekMsSUFBSSxDQUFDMUIsT0FBT0ssUUFBUSxDQUFDcUIsUUFBUVQsYUFBYVMsS0FDeEMsT0FBTztZQUFFVCxVQUFVO1lBQW9CSSxjQUFjZDtRQUFPO0lBQ2hFO0lBRUEsT0FBTztRQUFFVTtRQUFVSTtJQUFhO0FBQ2xDIn0=