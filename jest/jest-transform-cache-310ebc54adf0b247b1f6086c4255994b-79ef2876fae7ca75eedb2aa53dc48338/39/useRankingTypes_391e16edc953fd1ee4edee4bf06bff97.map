{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/providers/src/FeedbackContext/useRankingTypes.ts"],"sourcesContent":["import { useUser } from \"@clerk/clerk-react\"\nimport { axiosClient } from \"@rp/react/axios-client\"\nimport { useQuery } from \"@tanstack/react-query\"\n\ntype RankingTypes = {\n  results: Array<string>\n}\nconst getRankingProfiles = async () => {\n  const { data } = await axiosClient.get<RankingTypes>(`/cqs/ranking_profiles`)\n\n  return data\n}\nconst useRankingTypes = (isFeedbackMode: boolean) => {\n  const { isLoaded } = useUser()\n\n  return useQuery({\n    queryKey: [\"ranking-profiles\"],\n    queryFn: getRankingProfiles,\n    staleTime: Infinity,\n    gcTime: Infinity,\n    retry: false,\n    enabled: isFeedbackMode && isLoaded,\n  })\n}\n\nexport { useRankingTypes }\n"],"names":["useRankingTypes","getRankingProfiles","data","axiosClient","get","isFeedbackMode","isLoaded","useUser","useQuery","queryKey","queryFn","staleTime","Infinity","gcTime","retry","enabled"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAyBSA;;;eAAAA;;;4BAzBe;6BACI;4BACH;AAKzB,MAAMC,qBAAqB;IACzB,MAAM,EAAEC,IAAI,EAAE,GAAG,MAAMC,wBAAW,CAACC,GAAG,CAAe,CAAC,qBAAqB,CAAC;IAE5E,OAAOF;AACT;AACA,MAAMF,kBAAkB,CAACK;IACvB,MAAM,EAAEC,QAAQ,EAAE,GAAGC,IAAAA,mBAAO;IAE5B,OAAOC,IAAAA,oBAAQ,EAAC;QACdC,UAAU;YAAC;SAAmB;QAC9BC,SAAST;QACTU,WAAWC;QACXC,QAAQD;QACRE,OAAO;QACPC,SAASV,kBAAkBC;IAC7B;AACF"}