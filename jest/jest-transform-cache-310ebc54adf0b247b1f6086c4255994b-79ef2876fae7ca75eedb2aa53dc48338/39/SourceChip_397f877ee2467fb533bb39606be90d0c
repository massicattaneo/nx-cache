7e29194d3e033a7398801b697eb0ecb7
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "SourceChip", {
    enumerable: true,
    get: function() {
        return SourceChip;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _compositecomponents = require("@rp/react/web/common/composite-components");
const _hooks = require("@rp/react/web/common/hooks");
const _providers = require("@rp/react/web/common/providers");
const _core = require("@rp/react/web/mui/core");
const _ExternalFavicon = require("../ExternalFavicon");
const _InlineAttributionListModal = require("../InlineAttribution/InlineAttributionListModal");
const _getInlineAttributionData = require("../InlineAttribution/getInlineAttributionData");
const _QueryChip = require("./QueryChip");
const SourceChip = ({ label, sourceId, icon, documents, chunkMap, externalMap, onUserInteraction })=>{
    const { isMobile } = (0, _hooks.useDeviceInfo)();
    const { setDocumentData } = (0, _providers.useDocumentViewerData)();
    const [, setHashParams] = (0, _hooks.useHashParams)();
    const [showTooltip, setShowTooltip] = (0, _react.useState)(false);
    const [isModalOpen, setIsModalOpen] = (0, _react.useState)(false);
    if (documents.length === 0) {
        return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
            sx: {
                display: "flex",
                alignItems: "center",
                bgcolor: showTooltip || isModalOpen ? "elevation.dp06" : "overlay.surface",
                p: 1,
                borderRadius: 1,
                gap: 0.5,
                "& svg": {
                    height: 16,
                    width: 16
                }
            },
            children: [
                icon !== null ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_ExternalFavicon.ExternalFavicon, {
                    faviconUrl: icon,
                    alt: label,
                    sx: {
                        height: 16,
                        width: 16,
                        display: "flex"
                    }
                }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.DocumentIcon, {
                    documentScope: "news",
                    srcKey: sourceId
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                    children: label
                })
            ]
        });
    }
    const data = documents.map((document)=>{
        if ((0, _QueryChip.isExternalStory)(document)) {
            var _document_id;
            return (0, _getInlineAttributionData.getExternalInlineAttributionData)({
                id: (_document_id = document.id) !== null && _document_id !== void 0 ? _document_id : "",
                externalMap,
                onUserInteraction,
                setShowTooltip
            });
        } else {
            return document.chunks.map((chunk)=>{
                var _chunk_id;
                return (0, _getInlineAttributionData.getCqsInlineAttributionData)({
                    id: (_chunk_id = chunk.id) !== null && _chunk_id !== void 0 ? _chunk_id : "",
                    chunkMap,
                    setDocumentData,
                    setHashParams,
                    onUserInteraction,
                    setShowTooltip
                });
            });
        }
    }).flat();
    const groups = (0, _getInlineAttributionData.groupInlineAttributions)(data);
    const firstItem = groups[0].data[0];
    const { onClick, url, hd, documentId } = firstItem;
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_InlineAttributionListModal.InlineAttributionListModal, {
        disabled: false,
        attributions: groups,
        closeModal: ()=>setIsModalOpen(false),
        isOpen: isModalOpen,
        showTooltip: showTooltip,
        onOpenTooltip: ()=>{
            setShowTooltip(true);
            onUserInteraction({
                action: "preview",
                sourceUrl: url,
                sourceTitle: hd,
                documentId: documentId,
                sourceId: firstItem.type === "EXTERNAL" ? null : firstItem.srcKey,
                sourceName: firstItem.type === "EXTERNAL" ? null : firstItem.sourceName,
                providerId: firstItem.type === "EXTERNAL" ? null : firstItem.rpProviderId
            });
        },
        onCloseTooltip: ()=>setShowTooltip(false),
        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
            onClick: (ev)=>{
                isMobile ? setIsModalOpen(true) : onClick(ev);
            },
            sx: {
                display: "flex",
                alignItems: "center",
                bgcolor: showTooltip || isModalOpen ? "elevation.dp06" : "overlay.surface",
                p: 1,
                borderRadius: 1,
                gap: 0.5,
                cursor: "pointer",
                outline: "1px solid",
                outlineColor: "transparent",
                "&:hover": {
                    bgcolor: "elevation.dp06",
                    outlineColor: "outline.border"
                },
                "& svg": {
                    height: 16,
                    width: 16
                }
            },
            children: [
                icon !== null ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_ExternalFavicon.ExternalFavicon, {
                    faviconUrl: icon,
                    alt: label,
                    sx: {
                        height: 16,
                        width: 16,
                        display: "flex"
                    }
                }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.DocumentIcon, {
                    documentScope: "news",
                    srcKey: sourceId
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                    children: label
                })
            ]
        })
    });
};

//# sourceMappingURL=data:application/json;base64,