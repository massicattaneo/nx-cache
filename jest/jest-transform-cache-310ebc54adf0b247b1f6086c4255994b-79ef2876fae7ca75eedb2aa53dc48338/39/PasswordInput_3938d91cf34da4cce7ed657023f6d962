6b552175dd5c73dfba5178ad2e600d81
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "PasswordInput", {
    enumerable: true,
    get: function() {
        return PasswordInput;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _core = require("@rp/react/web/mui/core");
const _icons = require("@rp/react/web/mui/icons");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
const PasswordInput = /*#__PURE__*/ (0, _react.forwardRef)((props, ref)=>{
    const [showPassword, toggleShowPassword] = (0, _react.useReducer)((show)=>!show, false);
    const Icon = showPassword ? _icons.VisibilityOffOutlined : _icons.VisibilityOutlined;
    const inputType = showPassword ? "text" : "password";
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.OutlinedInput, _object_spread({
        ref: ref,
        type: inputType,
        endAdornment: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.InputAdornment, {
            position: "end",
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.IconButton, {
                "aria-label": "toggle visibility",
                onClick: toggleShowPassword,
                onMouseDown: (evt)=>evt.preventDefault(),
                edge: "end",
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(Icon, {
                    sx: (theme)=>({
                            color: theme.palette.grey[300]
                        })
                })
            })
        })
    }, props));
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9iYXNlLWNvbXBvbmVudHMvc3JjL1Bhc3N3b3JkSW5wdXQvUGFzc3dvcmRJbnB1dC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZm9yd2FyZFJlZiwgdXNlUmVkdWNlciB9IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgeyBJY29uQnV0dG9uLCBJbnB1dEFkb3JubWVudCwgT3V0bGluZWRJbnB1dCB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL211aS9jb3JlXCJcbmltcG9ydCB7IFZpc2liaWxpdHlPZmZPdXRsaW5lZCwgVmlzaWJpbGl0eU91dGxpbmVkIH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvbXVpL2ljb25zXCJcblxudHlwZSBQYXNzd29yZElucHV0UHJvcHMgPSBSZWFjdC5Db21wb25lbnRQcm9wczx0eXBlb2YgT3V0bGluZWRJbnB1dD5cblxuY29uc3QgUGFzc3dvcmRJbnB1dCA9IGZvcndhcmRSZWYoXG4gIChwcm9wczogT21pdDxQYXNzd29yZElucHV0UHJvcHMsIFwidHlwZVwiIHwgXCJlbmRBZG9ybm1lbnRcIj4sIHJlZikgPT4ge1xuICAgIGNvbnN0IFtzaG93UGFzc3dvcmQsIHRvZ2dsZVNob3dQYXNzd29yZF0gPSB1c2VSZWR1Y2VyKHNob3cgPT4gIXNob3csIGZhbHNlKVxuICAgIGNvbnN0IEljb24gPSBzaG93UGFzc3dvcmQgPyBWaXNpYmlsaXR5T2ZmT3V0bGluZWQgOiBWaXNpYmlsaXR5T3V0bGluZWRcbiAgICBjb25zdCBpbnB1dFR5cGUgPSBzaG93UGFzc3dvcmQgPyBcInRleHRcIiA6IFwicGFzc3dvcmRcIlxuXG4gICAgcmV0dXJuIChcbiAgICAgIDxPdXRsaW5lZElucHV0XG4gICAgICAgIHJlZj17cmVmfVxuICAgICAgICB0eXBlPXtpbnB1dFR5cGV9XG4gICAgICAgIGVuZEFkb3JubWVudD17XG4gICAgICAgICAgPElucHV0QWRvcm5tZW50IHBvc2l0aW9uPVwiZW5kXCI+XG4gICAgICAgICAgICA8SWNvbkJ1dHRvblxuICAgICAgICAgICAgICBhcmlhLWxhYmVsPVwidG9nZ2xlIHZpc2liaWxpdHlcIlxuICAgICAgICAgICAgICBvbkNsaWNrPXt0b2dnbGVTaG93UGFzc3dvcmR9XG4gICAgICAgICAgICAgIG9uTW91c2VEb3duPXtldnQgPT4gZXZ0LnByZXZlbnREZWZhdWx0KCl9XG4gICAgICAgICAgICAgIGVkZ2U9XCJlbmRcIlxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICA8SWNvbiBzeD17dGhlbWUgPT4gKHsgY29sb3I6IHRoZW1lLnBhbGV0dGUuZ3JleVszMDBdIH0pfSAvPlxuICAgICAgICAgICAgPC9JY29uQnV0dG9uPlxuICAgICAgICAgIDwvSW5wdXRBZG9ybm1lbnQ+XG4gICAgICAgIH1cbiAgICAgICAgey4uLnByb3BzfVxuICAgICAgLz5cbiAgICApXG4gIH0sXG4pXG5cbmV4cG9ydCB7IFBhc3N3b3JkSW5wdXQgfVxuIl0sIm5hbWVzIjpbIlBhc3N3b3JkSW5wdXQiLCJmb3J3YXJkUmVmIiwicHJvcHMiLCJyZWYiLCJzaG93UGFzc3dvcmQiLCJ0b2dnbGVTaG93UGFzc3dvcmQiLCJ1c2VSZWR1Y2VyIiwic2hvdyIsIkljb24iLCJWaXNpYmlsaXR5T2ZmT3V0bGluZWQiLCJWaXNpYmlsaXR5T3V0bGluZWQiLCJpbnB1dFR5cGUiLCJPdXRsaW5lZElucHV0IiwidHlwZSIsImVuZEFkb3JubWVudCIsIklucHV0QWRvcm5tZW50IiwicG9zaXRpb24iLCJJY29uQnV0dG9uIiwiYXJpYS1sYWJlbCIsIm9uQ2xpY2siLCJvbk1vdXNlRG93biIsImV2dCIsInByZXZlbnREZWZhdWx0IiwiZWRnZSIsInN4IiwidGhlbWUiLCJjb2xvciIsInBhbGV0dGUiLCJncmV5Il0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBa0NTQTs7O2VBQUFBOzs7O3VCQWxDOEI7c0JBQ21CO3VCQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUkxRCxNQUFNQSw4QkFBZ0JDLElBQUFBLGlCQUFVLEVBQzlCLENBQUNDLE9BQTBEQztJQUN6RCxNQUFNLENBQUNDLGNBQWNDLG1CQUFtQixHQUFHQyxJQUFBQSxpQkFBVSxFQUFDQyxDQUFBQSxPQUFRLENBQUNBLE1BQU07SUFDckUsTUFBTUMsT0FBT0osZUFBZUssNEJBQXFCLEdBQUdDLHlCQUFrQjtJQUN0RSxNQUFNQyxZQUFZUCxlQUFlLFNBQVM7SUFFMUMscUJBQ0UscUJBQUNRLG1CQUFhO1FBQ1pULEtBQUtBO1FBQ0xVLE1BQU1GO1FBQ05HLDRCQUNFLHFCQUFDQyxvQkFBYztZQUFDQyxVQUFTO3NCQUN2QixjQUFBLHFCQUFDQyxnQkFBVTtnQkFDVEMsY0FBVztnQkFDWEMsU0FBU2Q7Z0JBQ1RlLGFBQWFDLENBQUFBLE1BQU9BLElBQUlDLGNBQWM7Z0JBQ3RDQyxNQUFLOzBCQUVMLGNBQUEscUJBQUNmO29CQUFLZ0IsSUFBSUMsQ0FBQUEsUUFBVSxDQUFBOzRCQUFFQyxPQUFPRCxNQUFNRSxPQUFPLENBQUNDLElBQUksQ0FBQyxJQUFJO3dCQUFDLENBQUE7Ozs7T0FJdkQxQjtBQUdWIn0=