{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/layout/src/BottomNav/DrawerUserMenu.tsx"],"sourcesContent":["import { JSX } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport { useClerk, useUser } from \"@clerk/clerk-react\"\nimport { getUserInitials, isAdminUser } from \"@rp/common/utils\"\nimport { useAccount } from \"@rp/react/common/providers\"\nimport { tagManagerEvents } from \"@rp/react/web/common/vendors/utils\"\nimport { Demography } from \"@rp/react/web/icons\"\nimport { Box, Divider, SvgIcon, Typography } from \"@rp/react/web/mui/core\"\nimport {\n  AdminPanelSettings,\n  Api,\n  Article,\n  AttachMoney,\n  LibraryBooks,\n  Logout,\n  PrivacyTipOutlined,\n  Settings,\n  SupportAgent,\n  ViewCarouselOutlined,\n} from \"@rp/react/web/mui/icons\"\nimport {\n  API_DOCS_ROUTE,\n  APP_DOCS_ROUTE,\n  CONTACT_SALES_ROUTE,\n  PRIVACY_POLICIES_ROUTE,\n  SALES_PORTAL_ROUTE,\n  SETTINGS_ROUTE,\n  TERMS_OF_USE_ROUTE,\n  UPGRADE_ROUTE,\n} from \"@rp/react/web/router\"\nimport { useQueryClient } from \"@tanstack/react-query\"\nimport { HeaderAvatar } from \"../Header/Header.styles\"\nimport { DrawerBase } from \"./DrawerBase\"\n\ntype ItemProps = { icon: React.ReactNode; label: string | JSX.Element; onClick: () => void }\ntype Props = {\n  open: boolean\n  toggleDrawer: () => void\n  openAdminPanel: () => void\n  openSubscriptionManagement: () => void\n}\n\nconst DrawerUserMenuItem = ({ icon, label, onClick }: ItemProps) => (\n  <Box onClick={onClick}>\n    <SvgIcon>{icon}</SvgIcon>\n    <Typography variant=\"subtitle1\" sx={{ pl: 1, width: \"100%\" }}>\n      {label}\n    </Typography>\n  </Box>\n)\n\n// const ViewPlans = () => {\n//   const buttonText = \"View Plans\"\n//   const { quota } = useAccount()\n\n//   const difference = quota?.subscriptionRenewalDate\n//     ? differenceInDays(quota.subscriptionRenewalDate, new Date())\n//     : undefined\n\n//   if (difference === undefined) {\n//     return buttonText\n//   }\n\n//   return (\n//     <Box sx={{ display: \"flex\", justifyContent: \"space-between\", width: \"100%\" }}>\n//       <span>{buttonText}</span>\n//       <Chip\n//         label={`Free Trial Â· ${difference} days left`}\n//         size=\"small\"\n//         sx={{\n//           borderRadius: \"5px\",\n//           color: \"primary.main\",\n//           backgroundColor: \"primary.background\",\n//         }}\n//       />\n//     </Box>\n//   )\n// }\n\nconst UpgradeToPro = () => {\n  const buttonText = \"Upgrade to Team\"\n\n  return buttonText\n}\n\nexport const DrawerUserMenu = ({\n  open,\n  toggleDrawer,\n  openAdminPanel,\n  openSubscriptionManagement,\n}: Props) => {\n  const navigate = useNavigate()\n  const { signOut } = useClerk()\n  const { user } = useUser()\n\n  const queryClient = useQueryClient()\n\n  const userInitials = getUserInitials(user?.fullName)\n\n  const { hasEntitlement } = useAccount()\n\n  const enableIntercom = hasEntitlement(\"support:intercom\")\n\n  const handleAdmin = () => {\n    openAdminPanel()\n    toggleDrawer()\n  }\n\n  const onContactSupport = () => {\n    tagManagerEvents.contactSupport()\n    toggleDrawer()\n  }\n  const handlePolicies = () => {\n    window.open(PRIVACY_POLICIES_ROUTE, \"_blank\")\n    toggleDrawer()\n  }\n\n  const handleTerms = () => {\n    window.open(TERMS_OF_USE_ROUTE, \"_blank\")\n    toggleDrawer()\n  }\n\n  const handleAppDocs = () => {\n    window.open(APP_DOCS_ROUTE, \"_blank\")\n    toggleDrawer()\n  }\n\n  const handleAPIDcos = () => {\n    window.open(API_DOCS_ROUTE, \"_blank\")\n    toggleDrawer()\n  }\n\n  const handleSalesPortal = () => {\n    window.open(SALES_PORTAL_ROUTE, \"_blank\")\n    toggleDrawer()\n  }\n\n  const handleLogOut = () => {\n    queryClient.clear()\n    signOut(() => navigate(\"/\"))\n  }\n  const handleSettings = () => {\n    navigate(SETTINGS_ROUTE)\n    toggleDrawer()\n  }\n\n  const handleSubscriptions = () => {\n    openSubscriptionManagement()\n    toggleDrawer()\n  }\n\n  const handleProducts = () => {\n    navigate(CONTACT_SALES_ROUTE)\n    toggleDrawer()\n  }\n\n  const handleUpgrade = () => {\n    navigate(UPGRADE_ROUTE)\n    toggleDrawer()\n  }\n\n  return (\n    <DrawerBase open={open} toggleDrawer={toggleDrawer}>\n      <Box sx={{ display: \"flex\", alignItems: \"center\", margin: 0 }}>\n        <HeaderAvatar\n          sx={{\n            height: 40,\n            width: 40,\n            fontSize: \"16px\",\n          }}\n          src={user?.hasImage ? user?.imageUrl : undefined}\n          alt={user?.fullName ?? \"User Avatar\"}\n        >\n          {userInitials}\n        </HeaderAvatar>\n\n        <div>\n          <Typography variant=\"body1\" sx={{ pl: 1 }} fontSize=\"18px\">\n            {user?.fullName}\n          </Typography>\n          <Typography variant=\"subtitle2\" color=\"grey.300\" sx={{ pl: 1 }}>\n            {user?.primaryEmailAddress?.emailAddress}\n          </Typography>\n        </div>\n      </Box>\n      <Divider sx={{ mb: 1 }} />\n      <DrawerUserMenuItem onClick={handleAppDocs} icon={<Article />} label=\"App Docs\" />\n      <DrawerUserMenuItem onClick={handleAPIDcos} icon={<Api />} label=\"API Docs\" />\n      <DrawerUserMenuItem onClick={handleSettings} icon={<Settings />} label=\"Settings\" />\n      {enableIntercom ? (\n        <DrawerUserMenuItem\n          onClick={onContactSupport}\n          icon={<SupportAgent />}\n          label=\"Talk to Support\"\n        />\n      ) : null}\n      <Divider sx={{ mb: 1 }} />\n      <DrawerUserMenuItem\n        onClick={handleSubscriptions}\n        icon={<AttachMoney />}\n        label=\"Manage Subscriptions\"\n      />\n\n      <DrawerUserMenuItem\n        onClick={user?.unsafeMetadata?.acceptedFree ? handleUpgrade : handleProducts}\n        icon={<ViewCarouselOutlined />}\n        label={<UpgradeToPro />}\n      />\n\n      <Divider sx={{ my: 1 }} />\n      {isAdminUser(user?.primaryEmailAddress?.emailAddress ?? \"\") && (\n        <DrawerUserMenuItem\n          onClick={handleAdmin}\n          icon={<AdminPanelSettings />}\n          label=\"Admin Panel\"\n        />\n      )}\n      {isAdminUser(user?.primaryEmailAddress?.emailAddress ?? \"\") && (\n        <DrawerUserMenuItem\n          onClick={handleSalesPortal}\n          icon={<LibraryBooks />}\n          label=\"Sales Portal\"\n        />\n      )}\n      <DrawerUserMenuItem\n        onClick={handlePolicies}\n        icon={<PrivacyTipOutlined />}\n        label=\"Privacy Policy\"\n      />\n      <DrawerUserMenuItem onClick={handleTerms} icon={<Demography />} label=\"Terms of Use\" />\n      <Divider sx={{ my: 1 }} />\n      <DrawerUserMenuItem onClick={handleLogOut} icon={<Logout />} label=\"Log Out\" />\n    </DrawerBase>\n  )\n}\n"],"names":["DrawerUserMenu","DrawerUserMenuItem","icon","label","onClick","Box","SvgIcon","Typography","variant","sx","pl","width","UpgradeToPro","buttonText","open","toggleDrawer","openAdminPanel","openSubscriptionManagement","user","navigate","useNavigate","signOut","useClerk","useUser","queryClient","useQueryClient","userInitials","getUserInitials","fullName","hasEntitlement","useAccount","enableIntercom","handleAdmin","onContactSupport","tagManagerEvents","contactSupport","handlePolicies","window","PRIVACY_POLICIES_ROUTE","handleTerms","TERMS_OF_USE_ROUTE","handleAppDocs","APP_DOCS_ROUTE","handleAPIDcos","API_DOCS_ROUTE","handleSalesPortal","SALES_PORTAL_ROUTE","handleLogOut","clear","handleSettings","SETTINGS_ROUTE","handleSubscriptions","handleProducts","CONTACT_SALES_ROUTE","handleUpgrade","UPGRADE_ROUTE","DrawerBase","display","alignItems","margin","HeaderAvatar","height","fontSize","src","hasImage","imageUrl","undefined","alt","div","color","primaryEmailAddress","emailAddress","Divider","mb","Article","Api","Settings","SupportAgent","AttachMoney","unsafeMetadata","acceptedFree","ViewCarouselOutlined","my","isAdminUser","AdminPanelSettings","LibraryBooks","PrivacyTipOutlined","Demography","Logout"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}