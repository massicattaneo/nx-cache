1b2095da695ad23af100c2c021489530
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    MOBILE_USER_YOU_CONTAINER_CLASS_NAME: function() {
        return MOBILE_USER_YOU_CONTAINER_CLASS_NAME;
    },
    UserInput: function() {
        return UserInput;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _core = require("@rp/react/web/mui/core");
const _icons = require("@rp/react/web/mui/icons");
const _getTextMargin = require("../getTextMargin");
const _UserEditInput = require("./UserEditInput");
const MOBILE_USER_YOU_CONTAINER_CLASS_NAME = "mobile-user-you-container";
const UserInput = ({ children, userInitials, onEdit, variant, scrollContainer, disableScroll })=>{
    const [textRef, setTextRef] = (0, _react.useState)(null);
    const [editMode, setEditMode] = (0, _react.useState)(false);
    const isMobile = variant === "mobile";
    (0, _react.useEffect)(()=>{
        if (!onEdit) {
            setEditMode(false);
        }
    }, [
        onEdit
    ]);
    (0, _react.useEffect)(()=>{
        if (scrollContainer && !disableScroll) {
            setTimeout(()=>{
                const top = scrollContainer instanceof Window ? window.document.body.scrollHeight : scrollContainer.scrollHeight - Number(getComputedStyle(scrollContainer).height.replace("px", ""));
                scrollContainer.scroll({
                    top,
                    behavior: "smooth"
                });
            }, 40);
        }
    }, [
        scrollContainer,
        disableScroll
    ]);
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
        sx: {
            display: "flex",
            flexWrap: isMobile ? "wrap" : undefined,
            gap: isMobile ? 1 : 2,
            mx: isMobile ? 2 : 0,
            alignItems: isMobile ? "center" : undefined
        },
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                sx: {
                    height: isMobile ? 28 : 40,
                    width: isMobile ? 28 : 40,
                    color: "rgba(255, 255, 255, 0.6)",
                    backgroundColor: "overlay.surface",
                    display: "flex",
                    alignItems: "center",
                    justifyContent: "center",
                    borderRadius: 1,
                    fontSize: isMobile ? "body2.fontSize" : "body1.fontSize",
                    flexShrink: 0
                },
                children: userInitials
            }),
            isMobile ? /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                className: MOBILE_USER_YOU_CONTAINER_CLASS_NAME,
                sx: {
                    display: "flex",
                    justifyContent: "space-between",
                    alignItems: "center",
                    flexGrow: 1,
                    "& button": {
                        backgroundColor: editMode ? "rgba(255, 255, 255, 0.08) !important" : "transparent"
                    }
                },
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                        sx: {
                            fontSize: "body2.fontSize",
                            color: "text.secondary"
                        },
                        children: "You"
                    }),
                    onEdit ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.IconButton, {
                        onClick: ()=>setEditMode((prev)=>!prev),
                        "aria-selected": editMode,
                        size: "small",
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.EditOutlined, {
                            sx: {
                                width: 20,
                                height: 20,
                                color: "grey.300"
                            }
                        })
                    }) : null
                ]
            }) : null,
            !editMode ? /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                sx: {
                    mt: isMobile ? 0 : (0, _getTextMargin.getTextMargin)(textRef),
                    fontSize: isMobile ? 18 : 17,
                    flexBasis: isMobile ? "100%" : undefined,
                    lineHeight: 1.7,
                    wordBreak: "break-word",
                    cursor: !isMobile && onEdit ? "pointer" : "auto",
                    whiteSpace: "pre-line",
                    width: "100%",
                    "& svg": {
                        opacity: 0,
                        transition: "opacity 0.2s"
                    },
                    "&:hover svg": {
                        opacity: 1
                    }
                },
                onClick: isMobile || !onEdit ? undefined : ()=>setEditMode(true),
                ref: setTextRef,
                children: [
                    children,
                    onEdit && !isMobile ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.EditOutlined, {
                        sx: {
                            color: "grey.300",
                            height: 16,
                            width: 16,
                            display: "inline-block",
                            ml: 1,
                            mb: -0.25
                        }
                    }) : null
                ]
            }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_UserEditInput.UserEditInput, {
                initialPrompt: children,
                onClose: ()=>setEditMode(false),
                onUpdate: (prompt)=>onEdit === null || onEdit === void 0 ? void 0 : onEdit(prompt)
            })
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,