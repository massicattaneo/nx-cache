{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/hooks/src/useHandleNewQuery.tsx"],"sourcesContent":["import { useCallback, useEffect, useState } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport { CqsUserDataQueriesPostRequest } from \"@rp/common/api-types\"\nimport { RpqlFilter } from \"@rp/common/api-types\"\nimport { EnhancedSuggestion } from \"@rp/react/tanstack-api/suggestion\"\nimport { useCreateSavedQuery } from \"@rp/react/tanstack-api/user-data-queries\"\nimport { useDynamicCQSName } from \"@rp/react/tanstack-api/user-data-queries\"\nimport { tagManagerEvents } from \"@rp/react/web/common/vendors/utils\"\nimport { convertSuggestionItem } from \"@rp/react/web/cqs-query-context\"\nimport { convertItemToFilter } from \"@rp/react/web/cqs-query-context\"\nimport { decodeString } from \"@rp/web/utils\"\n\nconst useHandleNewQuery = () => {\n  const navigate = useNavigate()\n\n  const createQuery = useCreateSavedQuery()\n  const { makeDynamicName } = useDynamicCQSName()\n\n  const [isLoading, setIsLoading] = useState(createQuery.isPending)\n  const [isSuccess, setIsSuccess] = useState(createQuery.isSuccess)\n  const [isError, setIsError] = useState(createQuery.isError)\n\n  useEffect(() => {\n    if (isLoading !== createQuery.isPending) {\n      setIsLoading(createQuery.isPending)\n    }\n    if (isSuccess !== createQuery.isSuccess) {\n      setIsSuccess(createQuery.isSuccess)\n    }\n    if (isError !== createQuery.isError) {\n      setIsError(createQuery.isError)\n    }\n  }, [\n    createQuery.isPending,\n    createQuery.isSuccess,\n    createQuery.isError,\n    isLoading,\n    isSuccess,\n    isError,\n  ])\n\n  const handleNewQuery = async (item: EnhancedSuggestion) => {\n    const itemToAdd = convertSuggestionItem(item)\n    const filterItem = convertItemToFilter(itemToAdd)\n\n    const expression: RpqlFilter = {\n      type: \"and\",\n      value: [filterItem],\n    }\n\n    const name = decodeString(makeDynamicName({ query: { expression } }))\n\n    const newQuery: CqsUserDataQueriesPostRequest = {\n      name,\n      query: { expression },\n    }\n\n    await createQuery.mutateAsync(newQuery, {\n      onSuccess: response => {\n        tagManagerEvents.queryInit({\n          queryId: response.id,\n          location: \"autosuggest\",\n          queryType: filterItem.type,\n        })\n        navigate(`/search/${response.id}`)\n      },\n    })\n  }\n\n  const handleNewQueryFromExpression = useCallback(\n    async (expression: RpqlFilter) => {\n      const name = decodeString(makeDynamicName({ query: { expression } }))\n\n      const newQuery: CqsUserDataQueriesPostRequest = {\n        name,\n        query: { expression },\n      }\n\n      await createQuery.mutateAsync(newQuery, {\n        onSuccess: response => {\n          navigate(`/search/${response.id}`)\n        },\n      })\n    },\n    [createQuery, makeDynamicName, navigate],\n  )\n\n  return { handleNewQuery, handleNewQueryFromExpression, isLoading, isSuccess, isError }\n}\n\nexport { useHandleNewQuery }\n"],"names":["useHandleNewQuery","navigate","useNavigate","createQuery","useCreateSavedQuery","makeDynamicName","useDynamicCQSName","isLoading","setIsLoading","useState","isPending","isSuccess","setIsSuccess","isError","setIsError","useEffect","handleNewQuery","item","itemToAdd","convertSuggestionItem","filterItem","convertItemToFilter","expression","type","value","name","decodeString","query","newQuery","mutateAsync","onSuccess","response","tagManagerEvents","queryInit","queryId","id","location","queryType","handleNewQueryFromExpression","useCallback"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BA0FSA;;;eAAAA;;;uBA1FwC;gCACrB;iCAIQ;uBAEH;iCACK;wBAET;AAE7B,MAAMA,oBAAoB;IACxB,MAAMC,WAAWC,IAAAA,2BAAW;IAE5B,MAAMC,cAAcC,IAAAA,oCAAmB;IACvC,MAAM,EAAEC,eAAe,EAAE,GAAGC,IAAAA,kCAAiB;IAE7C,MAAM,CAACC,WAAWC,aAAa,GAAGC,IAAAA,eAAQ,EAACN,YAAYO,SAAS;IAChE,MAAM,CAACC,WAAWC,aAAa,GAAGH,IAAAA,eAAQ,EAACN,YAAYQ,SAAS;IAChE,MAAM,CAACE,SAASC,WAAW,GAAGL,IAAAA,eAAQ,EAACN,YAAYU,OAAO;IAE1DE,IAAAA,gBAAS,EAAC;QACR,IAAIR,cAAcJ,YAAYO,SAAS,EAAE;YACvCF,aAAaL,YAAYO,SAAS;QACpC;QACA,IAAIC,cAAcR,YAAYQ,SAAS,EAAE;YACvCC,aAAaT,YAAYQ,SAAS;QACpC;QACA,IAAIE,YAAYV,YAAYU,OAAO,EAAE;YACnCC,WAAWX,YAAYU,OAAO;QAChC;IACF,GAAG;QACDV,YAAYO,SAAS;QACrBP,YAAYQ,SAAS;QACrBR,YAAYU,OAAO;QACnBN;QACAI;QACAE;KACD;IAED,MAAMG,iBAAiB,OAAOC;QAC5B,MAAMC,YAAYC,IAAAA,sCAAqB,EAACF;QACxC,MAAMG,aAAaC,IAAAA,oCAAmB,EAACH;QAEvC,MAAMI,aAAyB;YAC7BC,MAAM;YACNC,OAAO;gBAACJ;aAAW;QACrB;QAEA,MAAMK,OAAOC,IAAAA,oBAAY,EAACrB,gBAAgB;YAAEsB,OAAO;gBAAEL;YAAW;QAAE;QAElE,MAAMM,WAA0C;YAC9CH;YACAE,OAAO;gBAAEL;YAAW;QACtB;QAEA,MAAMnB,YAAY0B,WAAW,CAACD,UAAU;YACtCE,WAAWC,CAAAA;gBACTC,uBAAgB,CAACC,SAAS,CAAC;oBACzBC,SAASH,SAASI,EAAE;oBACpBC,UAAU;oBACVC,WAAWjB,WAAWG,IAAI;gBAC5B;gBACAtB,SAAS,CAAC,QAAQ,EAAE8B,SAASI,EAAE,CAAC,CAAC;YACnC;QACF;IACF;IAEA,MAAMG,+BAA+BC,IAAAA,kBAAW,EAC9C,OAAOjB;QACL,MAAMG,OAAOC,IAAAA,oBAAY,EAACrB,gBAAgB;YAAEsB,OAAO;gBAAEL;YAAW;QAAE;QAElE,MAAMM,WAA0C;YAC9CH;YACAE,OAAO;gBAAEL;YAAW;QACtB;QAEA,MAAMnB,YAAY0B,WAAW,CAACD,UAAU;YACtCE,WAAWC,CAAAA;gBACT9B,SAAS,CAAC,QAAQ,EAAE8B,SAASI,EAAE,CAAC,CAAC;YACnC;QACF;IACF,GACA;QAAChC;QAAaE;QAAiBJ;KAAS;IAG1C,OAAO;QAAEe;QAAgBsB;QAA8B/B;QAAWI;QAAWE;IAAQ;AACvF"}