caaa58d9723533cb6e8fc59e384aaa4c
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "splitKeywords", {
    enumerable: true,
    get: function() {
        return splitKeywords;
    }
});
const isQuoted = (string)=>string.startsWith("&quot") && string.endsWith("&quot");
const STOP_WORDS = [
    "a",
    "an",
    "and",
    "are",
    "as",
    "at",
    "be",
    "by",
    "for",
    "from",
    "has",
    "he",
    "in",
    "is",
    "it",
    "its",
    "of",
    "on",
    "that",
    "the",
    "to",
    "was",
    "were",
    "with"
];
const splitKeywords = (keywords)=>keywords.reduce((acc, item)=>{
        const splitted = item.split(" ");
        const splitItem = isQuoted(item) ? [
            item.slice(5, -5)
        ] : splitted.filter((word)=>!STOP_WORDS.includes(word.toLowerCase())).concat(splitted.length > 1 ? item : []);
        return [
            ...acc,
            ...splitItem
        ];
    }, []);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvY29tbW9uL3V0aWxzL3NyYy9saWIvc3BsaXRLZXl3b3Jkcy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBpc1F1b3RlZCA9IChzdHJpbmc6IHN0cmluZyk6IGJvb2xlYW4gPT4gc3RyaW5nLnN0YXJ0c1dpdGgoXCImcXVvdFwiKSAmJiBzdHJpbmcuZW5kc1dpdGgoXCImcXVvdFwiKVxuXG5jb25zdCBTVE9QX1dPUkRTID0gW1xuICBcImFcIixcbiAgXCJhblwiLFxuICBcImFuZFwiLFxuICBcImFyZVwiLFxuICBcImFzXCIsXG4gIFwiYXRcIixcbiAgXCJiZVwiLFxuICBcImJ5XCIsXG4gIFwiZm9yXCIsXG4gIFwiZnJvbVwiLFxuICBcImhhc1wiLFxuICBcImhlXCIsXG4gIFwiaW5cIixcbiAgXCJpc1wiLFxuICBcIml0XCIsXG4gIFwiaXRzXCIsXG4gIFwib2ZcIixcbiAgXCJvblwiLFxuICBcInRoYXRcIixcbiAgXCJ0aGVcIixcbiAgXCJ0b1wiLFxuICBcIndhc1wiLFxuICBcIndlcmVcIixcbiAgXCJ3aXRoXCIsXG5dXG5cbmV4cG9ydCBjb25zdCBzcGxpdEtleXdvcmRzID0gKGtleXdvcmRzOiBBcnJheTxzdHJpbmc+KSA9PlxuICBrZXl3b3Jkcy5yZWR1Y2U8QXJyYXk8c3RyaW5nPj4oKGFjYywgaXRlbSkgPT4ge1xuICAgIGNvbnN0IHNwbGl0dGVkID0gaXRlbS5zcGxpdChcIiBcIilcbiAgICBjb25zdCBzcGxpdEl0ZW0gPSBpc1F1b3RlZChpdGVtKVxuICAgICAgPyBbaXRlbS5zbGljZSg1LCAtNSldXG4gICAgICA6IHNwbGl0dGVkXG4gICAgICAgICAgLmZpbHRlcih3b3JkID0+ICFTVE9QX1dPUkRTLmluY2x1ZGVzKHdvcmQudG9Mb3dlckNhc2UoKSkpXG4gICAgICAgICAgLmNvbmNhdChzcGxpdHRlZC5sZW5ndGggPiAxID8gaXRlbSA6IFtdKVxuICAgIHJldHVybiBbLi4uYWNjLCAuLi5zcGxpdEl0ZW1dXG4gIH0sIFtdKVxuIl0sIm5hbWVzIjpbInNwbGl0S2V5d29yZHMiLCJpc1F1b3RlZCIsInN0cmluZyIsInN0YXJ0c1dpdGgiLCJlbmRzV2l0aCIsIlNUT1BfV09SRFMiLCJrZXl3b3JkcyIsInJlZHVjZSIsImFjYyIsIml0ZW0iLCJzcGxpdHRlZCIsInNwbGl0Iiwic3BsaXRJdGVtIiwic2xpY2UiLCJmaWx0ZXIiLCJ3b3JkIiwiaW5jbHVkZXMiLCJ0b0xvd2VyQ2FzZSIsImNvbmNhdCIsImxlbmd0aCJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQTZCYUE7OztlQUFBQTs7O0FBN0JiLE1BQU1DLFdBQVcsQ0FBQ0MsU0FBNEJBLE9BQU9DLFVBQVUsQ0FBQyxZQUFZRCxPQUFPRSxRQUFRLENBQUM7QUFFNUYsTUFBTUMsYUFBYTtJQUNqQjtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7Q0FDRDtBQUVNLE1BQU1MLGdCQUFnQixDQUFDTSxXQUM1QkEsU0FBU0MsTUFBTSxDQUFnQixDQUFDQyxLQUFLQztRQUNuQyxNQUFNQyxXQUFXRCxLQUFLRSxLQUFLLENBQUM7UUFDNUIsTUFBTUMsWUFBWVgsU0FBU1EsUUFDdkI7WUFBQ0EsS0FBS0ksS0FBSyxDQUFDLEdBQUcsQ0FBQztTQUFHLEdBQ25CSCxTQUNHSSxNQUFNLENBQUNDLENBQUFBLE9BQVEsQ0FBQ1YsV0FBV1csUUFBUSxDQUFDRCxLQUFLRSxXQUFXLEtBQ3BEQyxNQUFNLENBQUNSLFNBQVNTLE1BQU0sR0FBRyxJQUFJVixPQUFPLEVBQUU7UUFDN0MsT0FBTztlQUFJRDtlQUFRSTtTQUFVO0lBQy9CLEdBQUcsRUFBRSJ9