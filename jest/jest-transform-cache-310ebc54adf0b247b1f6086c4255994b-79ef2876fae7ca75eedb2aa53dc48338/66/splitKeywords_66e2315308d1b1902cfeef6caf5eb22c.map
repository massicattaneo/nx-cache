{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/common/utils/src/lib/splitKeywords.ts"],"sourcesContent":["const isQuoted = (string: string): boolean => string.startsWith(\"&quot\") && string.endsWith(\"&quot\")\n\nconst STOP_WORDS = [\n  \"a\",\n  \"an\",\n  \"and\",\n  \"are\",\n  \"as\",\n  \"at\",\n  \"be\",\n  \"by\",\n  \"for\",\n  \"from\",\n  \"has\",\n  \"he\",\n  \"in\",\n  \"is\",\n  \"it\",\n  \"its\",\n  \"of\",\n  \"on\",\n  \"that\",\n  \"the\",\n  \"to\",\n  \"was\",\n  \"were\",\n  \"with\",\n]\n\nexport const splitKeywords = (keywords: Array<string>) =>\n  keywords.reduce<Array<string>>((acc, item) => {\n    const splitted = item.split(\" \")\n    const splitItem = isQuoted(item)\n      ? [item.slice(5, -5)]\n      : splitted\n          .filter(word => !STOP_WORDS.includes(word.toLowerCase()))\n          .concat(splitted.length > 1 ? item : [])\n    return [...acc, ...splitItem]\n  }, [])\n"],"names":["splitKeywords","isQuoted","string","startsWith","endsWith","STOP_WORDS","keywords","reduce","acc","item","splitted","split","splitItem","slice","filter","word","includes","toLowerCase","concat","length"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BA6BaA;;;eAAAA;;;AA7Bb,MAAMC,WAAW,CAACC,SAA4BA,OAAOC,UAAU,CAAC,YAAYD,OAAOE,QAAQ,CAAC;AAE5F,MAAMC,aAAa;IACjB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAEM,MAAML,gBAAgB,CAACM,WAC5BA,SAASC,MAAM,CAAgB,CAACC,KAAKC;QACnC,MAAMC,WAAWD,KAAKE,KAAK,CAAC;QAC5B,MAAMC,YAAYX,SAASQ,QACvB;YAACA,KAAKI,KAAK,CAAC,GAAG,CAAC;SAAG,GACnBH,SACGI,MAAM,CAACC,CAAAA,OAAQ,CAACV,WAAWW,QAAQ,CAACD,KAAKE,WAAW,KACpDC,MAAM,CAACR,SAASS,MAAM,GAAG,IAAIV,OAAO,EAAE;QAC7C,OAAO;eAAID;eAAQI;SAAU;IAC/B,GAAG,EAAE"}