5730d9cc012aeb43d77e466decead62d
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    mockContentCategories: function() {
        return mockContentCategories;
    },
    mockContentCategoriesResponse: function() {
        return mockContentCategoriesResponse;
    },
    mockContentCategoriesWithAll: function() {
        return mockContentCategoriesWithAll;
    }
});
const _kebabCase = /*#__PURE__*/ _interop_require_default(require("lodash/kebabCase"));
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const mockContentCategories = [
    {
        name: "News",
        logo: "Newspaper",
        sourceCount: 731
    },
    {
        name: "Filings",
        logo: "ArticleOutlined",
        sourceCount: 198
    },
    {
        name: "Transcripts",
        logo: "PlaylistAddCheckOutlined",
        sourceCount: 118
    },
    {
        name: "Newsletters",
        logo: "ArtTrackOutlined",
        sourceCount: 92
    },
    {
        name: "Podcasts",
        logo: "HeadsetOutlined",
        sourceCount: 201
    },
    {
        name: "Expert Interviews",
        logo: "SettingsVoiceOutlined",
        sourceCount: 37
    },
    {
        name: "Research",
        logo: "PlagiarismOutlined",
        sourceCount: 75
    },
    {
        name: "My Files",
        logo: "FolderOutlined",
        sourceCount: 42
    }
].map((c)=>_object_spread_props(_object_spread({}, c), {
        id: (0, _kebabCase.default)(c.name.toLowerCase())
    }));
const mockContentCategoriesWithAll = [
    {
        name: "All sources",
        logo: "FilterListOutlined",
        sourceCount: null,
        id: "all"
    },
    ...mockContentCategories
];
const mockContentCategoriesResponse = {
    meta: {
        page: 1,
        limit: 10,
        total: 22,
        queryTime: 0.6880474030003825
    },
    results: mockContentCategories
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3QvdGFuc3RhY2stYXBpL2NvbnRlbnQvc3JjL19fbW9ja3NfXy9jb250ZW50Q2F0ZWdvcmllcy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQga2ViYWJDYXNlIGZyb20gXCJsb2Rhc2gva2ViYWJDYXNlXCJcbmltcG9ydCB7IENvbnRlbnRDYXRlZ29yaWVzUmVzcG9uc2UsIENvbnRlbnRDYXRlZ29yeSB9IGZyb20gXCIuLi9jb250ZW50LnR5cGVzXCJcblxuY29uc3QgbW9ja0NvbnRlbnRDYXRlZ29yaWVzOiBBcnJheTxDb250ZW50Q2F0ZWdvcnk+ID0gW1xuICB7IG5hbWU6IFwiTmV3c1wiLCBsb2dvOiBcIk5ld3NwYXBlclwiLCBzb3VyY2VDb3VudDogNzMxIH0sXG4gIHsgbmFtZTogXCJGaWxpbmdzXCIsIGxvZ286IFwiQXJ0aWNsZU91dGxpbmVkXCIsIHNvdXJjZUNvdW50OiAxOTggfSxcbiAgeyBuYW1lOiBcIlRyYW5zY3JpcHRzXCIsIGxvZ286IFwiUGxheWxpc3RBZGRDaGVja091dGxpbmVkXCIsIHNvdXJjZUNvdW50OiAxMTggfSxcbiAgeyBuYW1lOiBcIk5ld3NsZXR0ZXJzXCIsIGxvZ286IFwiQXJ0VHJhY2tPdXRsaW5lZFwiLCBzb3VyY2VDb3VudDogOTIgfSxcbiAgeyBuYW1lOiBcIlBvZGNhc3RzXCIsIGxvZ286IFwiSGVhZHNldE91dGxpbmVkXCIsIHNvdXJjZUNvdW50OiAyMDEgfSxcbiAgeyBuYW1lOiBcIkV4cGVydCBJbnRlcnZpZXdzXCIsIGxvZ286IFwiU2V0dGluZ3NWb2ljZU91dGxpbmVkXCIsIHNvdXJjZUNvdW50OiAzNyB9LFxuICB7IG5hbWU6IFwiUmVzZWFyY2hcIiwgbG9nbzogXCJQbGFnaWFyaXNtT3V0bGluZWRcIiwgc291cmNlQ291bnQ6IDc1IH0sXG4gIHsgbmFtZTogXCJNeSBGaWxlc1wiLCBsb2dvOiBcIkZvbGRlck91dGxpbmVkXCIsIHNvdXJjZUNvdW50OiA0MiB9LFxuXS5tYXAoYyA9PiAoeyAuLi5jLCBpZDoga2ViYWJDYXNlKGMubmFtZS50b0xvd2VyQ2FzZSgpKSB9KSlcblxuY29uc3QgbW9ja0NvbnRlbnRDYXRlZ29yaWVzV2l0aEFsbDogQXJyYXk8Q29udGVudENhdGVnb3J5PiA9IFtcbiAgeyBuYW1lOiBcIkFsbCBzb3VyY2VzXCIsIGxvZ286IFwiRmlsdGVyTGlzdE91dGxpbmVkXCIsIHNvdXJjZUNvdW50OiBudWxsLCBpZDogXCJhbGxcIiB9LFxuICAuLi5tb2NrQ29udGVudENhdGVnb3JpZXMsXG5dXG5cbmNvbnN0IG1vY2tDb250ZW50Q2F0ZWdvcmllc1Jlc3BvbnNlOiBDb250ZW50Q2F0ZWdvcmllc1Jlc3BvbnNlID0ge1xuICBtZXRhOiB7XG4gICAgcGFnZTogMSxcbiAgICBsaW1pdDogMTAsXG4gICAgdG90YWw6IDIyLFxuICAgIHF1ZXJ5VGltZTogMC42ODgwNDc0MDMwMDAzODI1LFxuICB9LFxuICByZXN1bHRzOiBtb2NrQ29udGVudENhdGVnb3JpZXMsXG59XG5cbmV4cG9ydCB7IG1vY2tDb250ZW50Q2F0ZWdvcmllcywgbW9ja0NvbnRlbnRDYXRlZ29yaWVzV2l0aEFsbCwgbW9ja0NvbnRlbnRDYXRlZ29yaWVzUmVzcG9uc2UgfVxuIl0sIm5hbWVzIjpbIm1vY2tDb250ZW50Q2F0ZWdvcmllcyIsIm1vY2tDb250ZW50Q2F0ZWdvcmllc1Jlc3BvbnNlIiwibW9ja0NvbnRlbnRDYXRlZ29yaWVzV2l0aEFsbCIsIm5hbWUiLCJsb2dvIiwic291cmNlQ291bnQiLCJtYXAiLCJjIiwiaWQiLCJrZWJhYkNhc2UiLCJ0b0xvd2VyQ2FzZSIsIm1ldGEiLCJwYWdlIiwibGltaXQiLCJ0b3RhbCIsInF1ZXJ5VGltZSIsInJlc3VsdHMiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0lBNkJTQSxxQkFBcUI7ZUFBckJBOztJQUFxREMsNkJBQTZCO2VBQTdCQTs7SUFBOUJDLDRCQUE0QjtlQUE1QkE7OztrRUE3QlY7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFHdEIsTUFBTUYsd0JBQWdEO0lBQ3BEO1FBQUVHLE1BQU07UUFBUUMsTUFBTTtRQUFhQyxhQUFhO0lBQUk7SUFDcEQ7UUFBRUYsTUFBTTtRQUFXQyxNQUFNO1FBQW1CQyxhQUFhO0lBQUk7SUFDN0Q7UUFBRUYsTUFBTTtRQUFlQyxNQUFNO1FBQTRCQyxhQUFhO0lBQUk7SUFDMUU7UUFBRUYsTUFBTTtRQUFlQyxNQUFNO1FBQW9CQyxhQUFhO0lBQUc7SUFDakU7UUFBRUYsTUFBTTtRQUFZQyxNQUFNO1FBQW1CQyxhQUFhO0lBQUk7SUFDOUQ7UUFBRUYsTUFBTTtRQUFxQkMsTUFBTTtRQUF5QkMsYUFBYTtJQUFHO0lBQzVFO1FBQUVGLE1BQU07UUFBWUMsTUFBTTtRQUFzQkMsYUFBYTtJQUFHO0lBQ2hFO1FBQUVGLE1BQU07UUFBWUMsTUFBTTtRQUFrQkMsYUFBYTtJQUFHO0NBQzdELENBQUNDLEdBQUcsQ0FBQ0MsQ0FBQUEsSUFBTSx3Q0FBS0E7UUFBR0MsSUFBSUMsSUFBQUEsa0JBQVMsRUFBQ0YsRUFBRUosSUFBSSxDQUFDTyxXQUFXOztBQUVwRCxNQUFNUiwrQkFBdUQ7SUFDM0Q7UUFBRUMsTUFBTTtRQUFlQyxNQUFNO1FBQXNCQyxhQUFhO1FBQU1HLElBQUk7SUFBTTtPQUM3RVI7Q0FDSjtBQUVELE1BQU1DLGdDQUEyRDtJQUMvRFUsTUFBTTtRQUNKQyxNQUFNO1FBQ05DLE9BQU87UUFDUEMsT0FBTztRQUNQQyxXQUFXO0lBQ2I7SUFDQUMsU0FBU2hCO0FBQ1gifQ==