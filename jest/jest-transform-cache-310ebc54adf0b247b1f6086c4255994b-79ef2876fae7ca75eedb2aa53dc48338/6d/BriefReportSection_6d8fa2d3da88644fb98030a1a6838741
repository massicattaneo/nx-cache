920f19082085fe72ec91dce7065278e4
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "BriefReportSection", {
    enumerable: true,
    get: function() {
        return BriefReportSection;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _reactmarkdown = /*#__PURE__*/ _interop_require_default(require("react-markdown"));
const _remarkgfm = /*#__PURE__*/ _interop_require_default(require("remark-gfm"));
const _core = require("@rp/react/web/mui/core");
const _icons = require("@rp/react/web/mui/icons");
const _BriefsInlineAttribution = require("./BriefsInlineAttribution");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const CONTENT_CLASS_NAME = "li-content";
const BriefReportSection = ({ title, body, sources, entityInfo, onAddPrompt })=>{
    const onClick = (0, _react.useCallback)((event)=>{
        event.stopPropagation();
        if (event.target instanceof Element) {
            const li = event.target.closest("li");
            if (li && li instanceof HTMLLIElement) {
                const content = li.querySelector(`.${CONTENT_CLASS_NAME}`);
                if (content && content instanceof HTMLDivElement) {
                    onAddPrompt === null || onAddPrompt === void 0 ? void 0 : onAddPrompt(content.innerText, entityInfo);
                }
            }
        }
    }, [
        entityInfo,
        onAddPrompt
    ]);
    if (!body) return null;
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
        sx: {
            my: "38px"
        },
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                sx: {
                    fontWeight: 700,
                    fontSize: "24px",
                    margin: 0,
                    padding: 0,
                    lineHeight: "24px"
                },
                children: title
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                sx: {
                    ul: {
                        listStyle: "none"
                    }
                },
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactmarkdown.default, {
                    remarkPlugins: [
                        _remarkgfm.default
                    ],
                    components: {
                        code: (0, _BriefsInlineAttribution.briefsInlineAttributionRenderer)({
                            sources
                        }),
                        li: ({ children })=>{
                            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                                component: "li",
                                sx: {
                                    py: 0.5,
                                    pl: 4,
                                    ml: -5,
                                    mb: 1,
                                    cursor: "pointer",
                                    fontSize: "18px",
                                    lineHeight: "32px",
                                    borderRadius: 2,
                                    "&:hover": {
                                        backgroundColor: "elevation.dp24",
                                        "& svg": {
                                            visibility: "visible"
                                        }
                                    }
                                },
                                onClick: onClick,
                                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                                    sx: {
                                        display: "flex",
                                        alignItems: "center",
                                        gap: 2
                                    },
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                                            sx: {
                                                alignSelf: "flex-start",
                                                ml: -2
                                            },
                                            children: "â–ª"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                                            sx: {
                                                flexGrow: 1
                                            },
                                            className: CONTENT_CLASS_NAME,
                                            children: children
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.ChatBubbleOutline, {
                                            sx: {
                                                mr: 2,
                                                visibility: "hidden",
                                                color: "text.secondary"
                                            }
                                        })
                                    ]
                                })
                            });
                        }
                    },
                    children: body !== null && body !== void 0 ? body : "No new developments"
                })
            })
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2JyaWVmL3NyYy9jb21wb25lbnRzL0JyaWVmUmVwb3J0L0JyaWVmUmVwb3J0U2VjdGlvbi9CcmllZlJlcG9ydFNlY3Rpb24udHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VDYWxsYmFjayB9IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgUmVhY3RNYXJrZG93biBmcm9tIFwicmVhY3QtbWFya2Rvd25cIlxuaW1wb3J0IHJlbWFya0dmbSBmcm9tIFwicmVtYXJrLWdmbVwiXG5pbXBvcnQgeyBCcmllZlJlcG9ydENvbXBhbnlSZXBvcnQsIEJyaWVmU291cmNlcyB9IGZyb20gXCJAcnAvcmVhY3QvdGFuc3RhY2stYXBpL2JyaWVmXCJcbmltcG9ydCB7IEJveCwgVHlwb2dyYXBoeSB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL211aS9jb3JlXCJcbmltcG9ydCB7IENoYXRCdWJibGVPdXRsaW5lIH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvbXVpL2ljb25zXCJcbmltcG9ydCB7IGJyaWVmc0lubGluZUF0dHJpYnV0aW9uUmVuZGVyZXIgfSBmcm9tIFwiLi9CcmllZnNJbmxpbmVBdHRyaWJ1dGlvblwiXG5cbnR5cGUgQnJpZWZSZXBvcnRTZWN0aW9uUHJvcHMgPSB7XG4gIHRpdGxlOiBzdHJpbmdcbiAgYm9keTogc3RyaW5nXG4gIHNvdXJjZXM6IEJyaWVmU291cmNlc1xuICBvbkFkZFByb21wdDogKHRleHQ6IHN0cmluZywgZW50aXR5SW5mbz86IEJyaWVmUmVwb3J0Q29tcGFueVJlcG9ydFtcImVudGl0eUluZm9cIl0pID0+IHZvaWRcbiAgZW50aXR5SW5mbz86IEJyaWVmUmVwb3J0Q29tcGFueVJlcG9ydFtcImVudGl0eUluZm9cIl1cbn1cblxuY29uc3QgQ09OVEVOVF9DTEFTU19OQU1FID0gXCJsaS1jb250ZW50XCJcblxuY29uc3QgQnJpZWZSZXBvcnRTZWN0aW9uID0gKHtcbiAgdGl0bGUsXG4gIGJvZHksXG4gIHNvdXJjZXMsXG4gIGVudGl0eUluZm8sXG4gIG9uQWRkUHJvbXB0LFxufTogQnJpZWZSZXBvcnRTZWN0aW9uUHJvcHMpID0+IHtcbiAgY29uc3Qgb25DbGljayA9IHVzZUNhbGxiYWNrKFxuICAgIChldmVudDogUmVhY3QuTW91c2VFdmVudCkgPT4ge1xuICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKClcbiAgICAgIGlmIChldmVudC50YXJnZXQgaW5zdGFuY2VvZiBFbGVtZW50KSB7XG4gICAgICAgIGNvbnN0IGxpID0gZXZlbnQudGFyZ2V0LmNsb3Nlc3QoXCJsaVwiKVxuICAgICAgICBpZiAobGkgJiYgbGkgaW5zdGFuY2VvZiBIVE1MTElFbGVtZW50KSB7XG4gICAgICAgICAgY29uc3QgY29udGVudCA9IGxpLnF1ZXJ5U2VsZWN0b3IoYC4ke0NPTlRFTlRfQ0xBU1NfTkFNRX1gKVxuICAgICAgICAgIGlmIChjb250ZW50ICYmIGNvbnRlbnQgaW5zdGFuY2VvZiBIVE1MRGl2RWxlbWVudCkge1xuICAgICAgICAgICAgb25BZGRQcm9tcHQ/Lihjb250ZW50LmlubmVyVGV4dCwgZW50aXR5SW5mbylcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuICAgIFtlbnRpdHlJbmZvLCBvbkFkZFByb21wdF0sXG4gIClcbiAgaWYgKCFib2R5KSByZXR1cm4gbnVsbFxuXG4gIHJldHVybiAoXG4gICAgPEJveCBzeD17eyBteTogXCIzOHB4XCIgfX0+XG4gICAgICA8VHlwb2dyYXBoeVxuICAgICAgICBzeD17e1xuICAgICAgICAgIGZvbnRXZWlnaHQ6IDcwMCxcbiAgICAgICAgICBmb250U2l6ZTogXCIyNHB4XCIsXG4gICAgICAgICAgbWFyZ2luOiAwLFxuICAgICAgICAgIHBhZGRpbmc6IDAsXG4gICAgICAgICAgbGluZUhlaWdodDogXCIyNHB4XCIsXG4gICAgICAgIH19XG4gICAgICA+XG4gICAgICAgIHt0aXRsZX1cbiAgICAgIDwvVHlwb2dyYXBoeT5cblxuICAgICAgPEJveCBzeD17eyB1bDogeyBsaXN0U3R5bGU6IFwibm9uZVwiIH0gfX0+XG4gICAgICAgIDxSZWFjdE1hcmtkb3duXG4gICAgICAgICAgcmVtYXJrUGx1Z2lucz17W3JlbWFya0dmbV19XG4gICAgICAgICAgY29tcG9uZW50cz17e1xuICAgICAgICAgICAgY29kZTogYnJpZWZzSW5saW5lQXR0cmlidXRpb25SZW5kZXJlcih7XG4gICAgICAgICAgICAgIHNvdXJjZXMsXG4gICAgICAgICAgICB9KSxcbiAgICAgICAgICAgIGxpOiAoeyBjaGlsZHJlbiB9KSA9PiB7XG4gICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgPEJveFxuICAgICAgICAgICAgICAgICAgY29tcG9uZW50PXtcImxpXCJ9XG4gICAgICAgICAgICAgICAgICBzeD17e1xuICAgICAgICAgICAgICAgICAgICBweTogMC41LFxuICAgICAgICAgICAgICAgICAgICBwbDogNCxcbiAgICAgICAgICAgICAgICAgICAgbWw6IC01LFxuICAgICAgICAgICAgICAgICAgICBtYjogMSxcbiAgICAgICAgICAgICAgICAgICAgY3Vyc29yOiBcInBvaW50ZXJcIixcbiAgICAgICAgICAgICAgICAgICAgZm9udFNpemU6IFwiMThweFwiLFxuICAgICAgICAgICAgICAgICAgICBsaW5lSGVpZ2h0OiBcIjMycHhcIixcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyUmFkaXVzOiAyLFxuICAgICAgICAgICAgICAgICAgICBcIiY6aG92ZXJcIjoge1xuICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogXCJlbGV2YXRpb24uZHAyNFwiLFxuICAgICAgICAgICAgICAgICAgICAgIFwiJiBzdmdcIjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmlzaWJpbGl0eTogXCJ2aXNpYmxlXCIsXG4gICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICBvbkNsaWNrPXtvbkNsaWNrfVxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgIDxCb3ggc3g9e3sgZGlzcGxheTogXCJmbGV4XCIsIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsIGdhcDogMiB9fT5cbiAgICAgICAgICAgICAgICAgICAgPEJveCBzeD17eyBhbGlnblNlbGY6IFwiZmxleC1zdGFydFwiLCBtbDogLTIgfX0+4paqPC9Cb3g+XG4gICAgICAgICAgICAgICAgICAgIDxCb3ggc3g9e3sgZmxleEdyb3c6IDEgfX0gY2xhc3NOYW1lPXtDT05URU5UX0NMQVNTX05BTUV9PlxuICAgICAgICAgICAgICAgICAgICAgIHtjaGlsZHJlbn1cbiAgICAgICAgICAgICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAgICAgICAgICAgIDxDaGF0QnViYmxlT3V0bGluZVxuICAgICAgICAgICAgICAgICAgICAgIHN4PXt7IG1yOiAyLCB2aXNpYmlsaXR5OiBcImhpZGRlblwiLCBjb2xvcjogXCJ0ZXh0LnNlY29uZGFyeVwiIH19XG4gICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICA8L0JveD5cbiAgICAgICAgICAgICAgICA8L0JveD5cbiAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICB9fVxuICAgICAgICA+XG4gICAgICAgICAge2JvZHkgPz8gXCJObyBuZXcgZGV2ZWxvcG1lbnRzXCJ9XG4gICAgICAgIDwvUmVhY3RNYXJrZG93bj5cbiAgICAgIDwvQm94PlxuICAgIDwvQm94PlxuICApXG59XG5cbmV4cG9ydCB7IEJyaWVmUmVwb3J0U2VjdGlvbiB9XG4iXSwibmFtZXMiOlsiQnJpZWZSZXBvcnRTZWN0aW9uIiwiQ09OVEVOVF9DTEFTU19OQU1FIiwidGl0bGUiLCJib2R5Iiwic291cmNlcyIsImVudGl0eUluZm8iLCJvbkFkZFByb21wdCIsIm9uQ2xpY2siLCJ1c2VDYWxsYmFjayIsImV2ZW50Iiwic3RvcFByb3BhZ2F0aW9uIiwidGFyZ2V0IiwiRWxlbWVudCIsImxpIiwiY2xvc2VzdCIsIkhUTUxMSUVsZW1lbnQiLCJjb250ZW50IiwicXVlcnlTZWxlY3RvciIsIkhUTUxEaXZFbGVtZW50IiwiaW5uZXJUZXh0IiwiQm94Iiwic3giLCJteSIsIlR5cG9ncmFwaHkiLCJmb250V2VpZ2h0IiwiZm9udFNpemUiLCJtYXJnaW4iLCJwYWRkaW5nIiwibGluZUhlaWdodCIsInVsIiwibGlzdFN0eWxlIiwiUmVhY3RNYXJrZG93biIsInJlbWFya1BsdWdpbnMiLCJyZW1hcmtHZm0iLCJjb21wb25lbnRzIiwiY29kZSIsImJyaWVmc0lubGluZUF0dHJpYnV0aW9uUmVuZGVyZXIiLCJjaGlsZHJlbiIsImNvbXBvbmVudCIsInB5IiwicGwiLCJtbCIsIm1iIiwiY3Vyc29yIiwiYm9yZGVyUmFkaXVzIiwiYmFja2dyb3VuZENvbG9yIiwidmlzaWJpbGl0eSIsImRpc3BsYXkiLCJhbGlnbkl0ZW1zIiwiZ2FwIiwiYWxpZ25TZWxmIiwiZmxleEdyb3ciLCJjbGFzc05hbWUiLCJDaGF0QnViYmxlT3V0bGluZSIsIm1yIiwiY29sb3IiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQTBHU0E7OztlQUFBQTs7OzsrREExRzBCO3NFQUNUO2tFQUNKO3NCQUVVO3VCQUNFO3lDQUNjOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQVVoRCxNQUFNQyxxQkFBcUI7QUFFM0IsTUFBTUQscUJBQXFCLENBQUMsRUFDMUJFLEtBQUssRUFDTEMsSUFBSSxFQUNKQyxPQUFPLEVBQ1BDLFVBQVUsRUFDVkMsV0FBVyxFQUNhO0lBQ3hCLE1BQU1DLFVBQVVDLElBQUFBLGtCQUFXLEVBQ3pCLENBQUNDO1FBQ0NBLE1BQU1DLGVBQWU7UUFDckIsSUFBSUQsTUFBTUUsTUFBTSxZQUFZQyxTQUFTO1lBQ25DLE1BQU1DLEtBQUtKLE1BQU1FLE1BQU0sQ0FBQ0csT0FBTyxDQUFDO1lBQ2hDLElBQUlELE1BQU1BLGNBQWNFLGVBQWU7Z0JBQ3JDLE1BQU1DLFVBQVVILEdBQUdJLGFBQWEsQ0FBQyxDQUFDLENBQUMsRUFBRWhCLG1CQUFtQixDQUFDO2dCQUN6RCxJQUFJZSxXQUFXQSxtQkFBbUJFLGdCQUFnQjtvQkFDaERaLHdCQUFBQSxrQ0FBQUEsWUFBY1UsUUFBUUcsU0FBUyxFQUFFZDtnQkFDbkM7WUFDRjtRQUNGO0lBQ0YsR0FDQTtRQUFDQTtRQUFZQztLQUFZO0lBRTNCLElBQUksQ0FBQ0gsTUFBTSxPQUFPO0lBRWxCLHFCQUNFLHNCQUFDaUIsU0FBRztRQUFDQyxJQUFJO1lBQUVDLElBQUk7UUFBTzs7MEJBQ3BCLHFCQUFDQyxnQkFBVTtnQkFDVEYsSUFBSTtvQkFDRkcsWUFBWTtvQkFDWkMsVUFBVTtvQkFDVkMsUUFBUTtvQkFDUkMsU0FBUztvQkFDVEMsWUFBWTtnQkFDZDswQkFFQzFCOzswQkFHSCxxQkFBQ2tCLFNBQUc7Z0JBQUNDLElBQUk7b0JBQUVRLElBQUk7d0JBQUVDLFdBQVc7b0JBQU87Z0JBQUU7MEJBQ25DLGNBQUEscUJBQUNDLHNCQUFhO29CQUNaQyxlQUFlO3dCQUFDQyxrQkFBUztxQkFBQztvQkFDMUJDLFlBQVk7d0JBQ1ZDLE1BQU1DLElBQUFBLHdEQUErQixFQUFDOzRCQUNwQ2hDO3dCQUNGO3dCQUNBUyxJQUFJLENBQUMsRUFBRXdCLFFBQVEsRUFBRTs0QkFDZixxQkFDRSxxQkFBQ2pCLFNBQUc7Z0NBQ0ZrQixXQUFXO2dDQUNYakIsSUFBSTtvQ0FDRmtCLElBQUk7b0NBQ0pDLElBQUk7b0NBQ0pDLElBQUksQ0FBQztvQ0FDTEMsSUFBSTtvQ0FDSkMsUUFBUTtvQ0FDUmxCLFVBQVU7b0NBQ1ZHLFlBQVk7b0NBQ1pnQixjQUFjO29DQUNkLFdBQVc7d0NBQ1RDLGlCQUFpQjt3Q0FDakIsU0FBUzs0Q0FDUEMsWUFBWTt3Q0FDZDtvQ0FDRjtnQ0FDRjtnQ0FDQXZDLFNBQVNBOzBDQUVULGNBQUEsc0JBQUNhLFNBQUc7b0NBQUNDLElBQUk7d0NBQUUwQixTQUFTO3dDQUFRQyxZQUFZO3dDQUFVQyxLQUFLO29DQUFFOztzREFDdkQscUJBQUM3QixTQUFHOzRDQUFDQyxJQUFJO2dEQUFFNkIsV0FBVztnREFBY1QsSUFBSSxDQUFDOzRDQUFFO3NEQUFHOztzREFDOUMscUJBQUNyQixTQUFHOzRDQUFDQyxJQUFJO2dEQUFFOEIsVUFBVTs0Q0FBRTs0Q0FBR0MsV0FBV25EO3NEQUNsQ29DOztzREFFSCxxQkFBQ2dCLHdCQUFpQjs0Q0FDaEJoQyxJQUFJO2dEQUFFaUMsSUFBSTtnREFBR1IsWUFBWTtnREFBVVMsT0FBTzs0Q0FBaUI7Ozs7O3dCQUtyRTtvQkFDRjs4QkFFQ3BELGlCQUFBQSxrQkFBQUEsT0FBUTs7Ozs7QUFLbkIifQ==