{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/results-story-card/src/StoryCardsContainer.tsx"],"sourcesContent":["// Packages\nimport { isChunkStory } from \"@rp/common/api-types\"\nimport { InfiniteList } from \"@rp/react/web/common/composite-components\"\nimport { useDeviceInfo } from \"@rp/react/web/common/hooks\"\nimport { DiscoveryPanelMobile } from \"@rp/react/web/discovery-sidebar/discovery-panel\"\nimport { RpJsonAnnotationStyles } from \"@rp/react/web/rpjson\"\n// Components\nimport { StoryCard } from \"./StoryCard\"\nimport { ChunkStoryCard } from \"./StoryCard/ChunkStoryCard\"\n// Styles\nimport { LoadingMore } from \"./StoryCardContainer.styles\"\n// Types\nimport { CardContainerProps } from \"./StoryCardContainer.types\"\n\nconst getDiscoveryPanelIndex = (stories: Array<unknown>, hasMore: boolean | undefined) => {\n  if (hasMore) return 2\n  return Math.min(stories.length - 1, 2)\n}\n\nconst StoryCardsContainer = ({\n  stories,\n  loading,\n  hasMore,\n  fetchNextPage,\n  infiniteScrollContainerRef,\n  className,\n  highlights = [],\n  toggleShowCluster,\n  showCluster,\n  keywords = [],\n  searchQuery = {},\n  documentQuery,\n  isFeedbackMode = false,\n  queryId,\n  onAddToWatchlist,\n}: CardContainerProps) => {\n  const { isMobile } = useDeviceInfo()\n\n  return (\n    <div className={className} ref={infiniteScrollContainerRef}>\n      <RpJsonAnnotationStyles highlights={highlights}>\n        <div className=\"ListInner\">\n          <InfiniteList\n            items={stories}\n            loading={loading}\n            hasMore={hasMore}\n            rootMargin=\"500px 0px 500px 0px\"\n            fetchNextPage={fetchNextPage}\n            renderItem={(story, indexStory) => {\n              return (\n                <>\n                  {isChunkStory(story) ? (\n                    <ChunkStoryCard\n                      keywords={keywords}\n                      story={story}\n                      index={indexStory}\n                      query={searchQuery}\n                      documentQuery={documentQuery}\n                      showCluster={showCluster === story.id}\n                      toggleShowCluster={toggleShowCluster}\n                      isFeedbackMode={isFeedbackMode}\n                      queryId={queryId}\n                    />\n                  ) : (\n                    <StoryCard\n                      keywords={keywords}\n                      story={story}\n                      index={indexStory}\n                      query={searchQuery}\n                      documentQuery={documentQuery}\n                      showCluster={showCluster === story.id}\n                      toggleShowCluster={toggleShowCluster}\n                      isFeedbackMode={isFeedbackMode}\n                      queryId={queryId}\n                    />\n                  )}\n                  {isMobile && indexStory === getDiscoveryPanelIndex(stories, hasMore) && (\n                    <DiscoveryPanelMobile\n                      onAddToWatchlist={onAddToWatchlist}\n                      isFeedbackMode={isFeedbackMode}\n                    />\n                  )}\n                </>\n              )\n            }}\n          />\n        </div>\n        {!stories.length && !hasMore ? (\n          <LoadingMore>No results matching your query</LoadingMore>\n        ) : null}\n      </RpJsonAnnotationStyles>\n    </div>\n  )\n}\n\nexport { StoryCardsContainer }\n"],"names":["StoryCardsContainer","getDiscoveryPanelIndex","stories","hasMore","Math","min","length","loading","fetchNextPage","infiniteScrollContainerRef","className","highlights","toggleShowCluster","showCluster","keywords","searchQuery","documentQuery","isFeedbackMode","queryId","onAddToWatchlist","isMobile","useDeviceInfo","div","ref","RpJsonAnnotationStyles","InfiniteList","items","rootMargin","renderItem","story","indexStory","isChunkStory","ChunkStoryCard","index","query","id","StoryCard","DiscoveryPanelMobile","LoadingMore"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA,WAAW;;;;;+BA+FFA;;;eAAAA;;;;0BA9FoB;qCACA;uBACC;gCACO;wBACE;2BAEb;gCACK;0CAEH;AAI5B,MAAMC,yBAAyB,CAACC,SAAyBC;IACvD,IAAIA,SAAS,OAAO;IACpB,OAAOC,KAAKC,GAAG,CAACH,QAAQI,MAAM,GAAG,GAAG;AACtC;AAEA,MAAMN,sBAAsB,CAAC,EAC3BE,OAAO,EACPK,OAAO,EACPJ,OAAO,EACPK,aAAa,EACbC,0BAA0B,EAC1BC,SAAS,EACTC,aAAa,EAAE,EACfC,iBAAiB,EACjBC,WAAW,EACXC,WAAW,EAAE,EACbC,cAAc,CAAC,CAAC,EAChBC,aAAa,EACbC,iBAAiB,KAAK,EACtBC,OAAO,EACPC,gBAAgB,EACG;IACnB,MAAM,EAAEC,QAAQ,EAAE,GAAGC,IAAAA,oBAAa;IAElC,qBACE,qBAACC;QAAIZ,WAAWA;QAAWa,KAAKd;kBAC9B,cAAA,sBAACe,8BAAsB;YAACb,YAAYA;;8BAClC,qBAACW;oBAAIZ,WAAU;8BACb,cAAA,qBAACe,iCAAY;wBACXC,OAAOxB;wBACPK,SAASA;wBACTJ,SAASA;wBACTwB,YAAW;wBACXnB,eAAeA;wBACfoB,YAAY,CAACC,OAAOC;4BAClB,qBACE;;oCACGC,IAAAA,sBAAY,EAACF,uBACZ,qBAACG,8BAAc;wCACblB,UAAUA;wCACVe,OAAOA;wCACPI,OAAOH;wCACPI,OAAOnB;wCACPC,eAAeA;wCACfH,aAAaA,gBAAgBgB,MAAMM,EAAE;wCACrCvB,mBAAmBA;wCACnBK,gBAAgBA;wCAChBC,SAASA;uDAGX,qBAACkB,oBAAS;wCACRtB,UAAUA;wCACVe,OAAOA;wCACPI,OAAOH;wCACPI,OAAOnB;wCACPC,eAAeA;wCACfH,aAAaA,gBAAgBgB,MAAMM,EAAE;wCACrCvB,mBAAmBA;wCACnBK,gBAAgBA;wCAChBC,SAASA;;oCAGZE,YAAYU,eAAe7B,uBAAuBC,SAASC,0BAC1D,qBAACkC,oCAAoB;wCACnBlB,kBAAkBA;wCAClBF,gBAAgBA;;;;wBAK1B;;;gBAGH,CAACf,QAAQI,MAAM,IAAI,CAACH,wBACnB,qBAACmC,qCAAW;8BAAC;qBACX;;;;AAIZ"}