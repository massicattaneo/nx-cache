a083f310097f31b62a7849a2f9397025
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "GenericModal", {
    enumerable: true,
    get: function() {
        return GenericModal;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _hooks = require("@rp/react/web/common/hooks");
const _core = require("@rp/react/web/mui/core");
const _GenericModalstyles = require("./GenericModal.styles");
const _GenericModalHeader = require("./GenericModalHeader");
const _GenericModalWrapper = require("./GenericModalWrapper");
const GenericModal = ({ loading, onAccept, onClose, onCancel, open, title = "Confirm", loadingButtons = false, AcceptProps, CancelProps, children, titleMultiline })=>{
    const { variant: AcceptVariant = "contained" } = AcceptProps || {};
    (0, _hooks.useDisableIOSTouch)(open);
    // Remove scrolling when modals are open on mobile IOS devices.
    (0, _react.useEffect)(()=>{
        const body = document.body;
        if (open) {
            body.style.touchAction = "none";
        }
        return ()=>{
            body.style.touchAction = "";
        };
    }, [
        open
    ]);
    var _CancelProps_text, _AcceptProps_text;
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_GenericModalWrapper.GenericModalWrapper, {
        isOpen: open,
        handleClose: onClose,
        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_GenericModalstyles.ModalStyled, {
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_GenericModalHeader.GenericModalHeader, {
                    titleMultiline: titleMultiline,
                    title: title,
                    handleClose: onClose
                }),
                loading ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                    sx: {
                        p: 3
                    },
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.CircularProgress, {
                        style: {
                            margin: "0 auto",
                            display: "block"
                        }
                    })
                }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                    sx: {
                        pt: 2
                    },
                    children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("form", {
                        onSubmit: (ev)=>{
                            ev.preventDefault();
                            onAccept(ev);
                        },
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                                sx: {
                                    fontSize: 16
                                },
                                children: children
                            }),
                            loadingButtons ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.CircularProgress, {
                                    "data-testid": "dialog-buttons-loading-spinner",
                                    size: 24,
                                    style: {
                                        margin: "10px 22px 7px 0",
                                        display: "block"
                                    }
                                })
                            }) : /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Button, {
                                        onClick: onCancel !== null && onCancel !== void 0 ? onCancel : onClose,
                                        variant: CancelProps === null || CancelProps === void 0 ? void 0 : CancelProps.variant,
                                        disabled: CancelProps === null || CancelProps === void 0 ? void 0 : CancelProps.disabled,
                                        color: "inherit",
                                        "data-testid": "dialog-close-button",
                                        children: (_CancelProps_text = CancelProps === null || CancelProps === void 0 ? void 0 : CancelProps.text) !== null && _CancelProps_text !== void 0 ? _CancelProps_text : "Cancel"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Button, {
                                        autoFocus: true,
                                        variant: AcceptVariant,
                                        disabled: AcceptProps === null || AcceptProps === void 0 ? void 0 : AcceptProps.disabled,
                                        "data-testid": "dialog-accept-button",
                                        type: "submit",
                                        children: (_AcceptProps_text = AcceptProps === null || AcceptProps === void 0 ? void 0 : AcceptProps.text) !== null && _AcceptProps_text !== void 0 ? _AcceptProps_text : "OK"
                                    })
                                ]
                            })
                        ]
                    })
                })
            ]
        })
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9jb21wb3NpdGUtY29tcG9uZW50cy9zcmMvR2VuZXJpY01vZGFsL0dlbmVyaWNNb2RhbC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJvcHNXaXRoQ2hpbGRyZW4sIFJlYWN0Tm9kZSwgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCJcbmltcG9ydCB7IHVzZURpc2FibGVJT1NUb3VjaCB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL2NvbW1vbi9ob29rc1wiXG5pbXBvcnQgeyBCb3gsIEJ1dHRvbiwgQnV0dG9uUHJvcHMsIENpcmN1bGFyUHJvZ3Jlc3MgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9tdWkvY29yZVwiXG5pbXBvcnQgeyBNb2RhbFN0eWxlZCB9IGZyb20gXCIuL0dlbmVyaWNNb2RhbC5zdHlsZXNcIlxuaW1wb3J0IHsgR2VuZXJpY01vZGFsSGVhZGVyIH0gZnJvbSBcIi4vR2VuZXJpY01vZGFsSGVhZGVyXCJcbmltcG9ydCB7IEdlbmVyaWNNb2RhbFdyYXBwZXIgfSBmcm9tIFwiLi9HZW5lcmljTW9kYWxXcmFwcGVyXCJcblxudHlwZSBQcm9wcyA9IFByb3BzV2l0aENoaWxkcmVuICYge1xuICBvbkFjY2VwdDogKGV2ZW50OiBSZWFjdC5Gb3JtRXZlbnQ8SFRNTEZvcm1FbGVtZW50PikgPT4gdm9pZCB8IFByb21pc2U8dm9pZD5cbiAgb25DbG9zZTogKCkgPT4gdm9pZFxuICBvbkNhbmNlbD86ICgpID0+IHZvaWRcbiAgb3BlbjogYm9vbGVhblxuICB0aXRsZT86IFJlYWN0Tm9kZVxuICB0aXRsZU11bHRpbGluZT86IGJvb2xlYW5cbiAgbG9hZGluZz86IGJvb2xlYW5cbiAgbG9hZGluZ0J1dHRvbnM/OiBib29sZWFuXG4gIEFjY2VwdFByb3BzPzoge1xuICAgIGRpc2FibGVkPzogYm9vbGVhblxuICAgIHRleHQ/OiBzdHJpbmdcbiAgICB2YXJpYW50PzogQnV0dG9uUHJvcHNbXCJ2YXJpYW50XCJdXG4gIH1cbiAgQ2FuY2VsUHJvcHM/OiB7XG4gICAgZGlzYWJsZWQ/OiBib29sZWFuXG4gICAgdGV4dD86IHN0cmluZ1xuICAgIHZhcmlhbnQ/OiBCdXR0b25Qcm9wc1tcInZhcmlhbnRcIl1cbiAgfVxufVxuXG5jb25zdCBHZW5lcmljTW9kYWwgPSAoe1xuICBsb2FkaW5nLFxuICBvbkFjY2VwdCxcbiAgb25DbG9zZSxcbiAgb25DYW5jZWwsXG4gIG9wZW4sXG4gIHRpdGxlID0gXCJDb25maXJtXCIsXG4gIGxvYWRpbmdCdXR0b25zID0gZmFsc2UsXG4gIEFjY2VwdFByb3BzLFxuICBDYW5jZWxQcm9wcyxcbiAgY2hpbGRyZW4sXG4gIHRpdGxlTXVsdGlsaW5lLFxufTogUHJvcHMpID0+IHtcbiAgY29uc3QgeyB2YXJpYW50OiBBY2NlcHRWYXJpYW50ID0gXCJjb250YWluZWRcIiB9ID0gQWNjZXB0UHJvcHMgfHwge31cbiAgdXNlRGlzYWJsZUlPU1RvdWNoKG9wZW4pXG5cbiAgLy8gUmVtb3ZlIHNjcm9sbGluZyB3aGVuIG1vZGFscyBhcmUgb3BlbiBvbiBtb2JpbGUgSU9TIGRldmljZXMuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3QgYm9keSA9IGRvY3VtZW50LmJvZHlcbiAgICBpZiAob3Blbikge1xuICAgICAgYm9keS5zdHlsZS50b3VjaEFjdGlvbiA9IFwibm9uZVwiXG4gICAgfVxuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBib2R5LnN0eWxlLnRvdWNoQWN0aW9uID0gXCJcIlxuICAgIH1cbiAgfSwgW29wZW5dKVxuXG4gIHJldHVybiAoXG4gICAgPEdlbmVyaWNNb2RhbFdyYXBwZXIgaXNPcGVuPXtvcGVufSBoYW5kbGVDbG9zZT17b25DbG9zZX0+XG4gICAgICA8TW9kYWxTdHlsZWQ+XG4gICAgICAgIDxHZW5lcmljTW9kYWxIZWFkZXIgdGl0bGVNdWx0aWxpbmU9e3RpdGxlTXVsdGlsaW5lfSB0aXRsZT17dGl0bGV9IGhhbmRsZUNsb3NlPXtvbkNsb3NlfSAvPlxuICAgICAgICB7bG9hZGluZyA/IChcbiAgICAgICAgICA8Qm94IHN4PXt7IHA6IDMgfX0+XG4gICAgICAgICAgICA8Q2lyY3VsYXJQcm9ncmVzcyBzdHlsZT17eyBtYXJnaW46IFwiMCBhdXRvXCIsIGRpc3BsYXk6IFwiYmxvY2tcIiB9fSAvPlxuICAgICAgICAgIDwvQm94PlxuICAgICAgICApIDogKFxuICAgICAgICAgIDxCb3ggc3g9e3sgcHQ6IDIgfX0+XG4gICAgICAgICAgICA8Zm9ybVxuICAgICAgICAgICAgICBvblN1Ym1pdD17ZXYgPT4ge1xuICAgICAgICAgICAgICAgIGV2LnByZXZlbnREZWZhdWx0KClcbiAgICAgICAgICAgICAgICBvbkFjY2VwdChldilcbiAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgPEJveCBzeD17eyBmb250U2l6ZTogMTYgfX0+e2NoaWxkcmVufTwvQm94PlxuICAgICAgICAgICAgICB7bG9hZGluZ0J1dHRvbnMgPyAoXG4gICAgICAgICAgICAgICAgPEJveD5cbiAgICAgICAgICAgICAgICAgIDxDaXJjdWxhclByb2dyZXNzXG4gICAgICAgICAgICAgICAgICAgIGRhdGEtdGVzdGlkPVwiZGlhbG9nLWJ1dHRvbnMtbG9hZGluZy1zcGlubmVyXCJcbiAgICAgICAgICAgICAgICAgICAgc2l6ZT17MjR9XG4gICAgICAgICAgICAgICAgICAgIHN0eWxlPXt7IG1hcmdpbjogXCIxMHB4IDIycHggN3B4IDBcIiwgZGlzcGxheTogXCJibG9ja1wiIH19XG4gICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDwvQm94PlxuICAgICAgICAgICAgICApIDogKFxuICAgICAgICAgICAgICAgIDxCb3g+XG4gICAgICAgICAgICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e29uQ2FuY2VsID8/IG9uQ2xvc2V9XG4gICAgICAgICAgICAgICAgICAgIHZhcmlhbnQ9e0NhbmNlbFByb3BzPy52YXJpYW50fVxuICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZD17Q2FuY2VsUHJvcHM/LmRpc2FibGVkfVxuICAgICAgICAgICAgICAgICAgICBjb2xvcj1cImluaGVyaXRcIlxuICAgICAgICAgICAgICAgICAgICBkYXRhLXRlc3RpZD1cImRpYWxvZy1jbG9zZS1idXR0b25cIlxuICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICB7Q2FuY2VsUHJvcHM/LnRleHQgPz8gXCJDYW5jZWxcIn1cbiAgICAgICAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgICAgICAgICAgPEJ1dHRvblxuICAgICAgICAgICAgICAgICAgICBhdXRvRm9jdXNcbiAgICAgICAgICAgICAgICAgICAgdmFyaWFudD17QWNjZXB0VmFyaWFudH1cbiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ9e0FjY2VwdFByb3BzPy5kaXNhYmxlZH1cbiAgICAgICAgICAgICAgICAgICAgZGF0YS10ZXN0aWQ9XCJkaWFsb2ctYWNjZXB0LWJ1dHRvblwiXG4gICAgICAgICAgICAgICAgICAgIHR5cGU9XCJzdWJtaXRcIlxuICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICB7QWNjZXB0UHJvcHM/LnRleHQgPz8gXCJPS1wifVxuICAgICAgICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAgICAgICl9XG4gICAgICAgICAgICA8L2Zvcm0+XG4gICAgICAgICAgPC9Cb3g+XG4gICAgICAgICl9XG4gICAgICA8L01vZGFsU3R5bGVkPlxuICAgIDwvR2VuZXJpY01vZGFsV3JhcHBlcj5cbiAgKVxufVxuXG5leHBvcnQgeyBHZW5lcmljTW9kYWwgfVxuIl0sIm5hbWVzIjpbIkdlbmVyaWNNb2RhbCIsImxvYWRpbmciLCJvbkFjY2VwdCIsIm9uQ2xvc2UiLCJvbkNhbmNlbCIsIm9wZW4iLCJ0aXRsZSIsImxvYWRpbmdCdXR0b25zIiwiQWNjZXB0UHJvcHMiLCJDYW5jZWxQcm9wcyIsImNoaWxkcmVuIiwidGl0bGVNdWx0aWxpbmUiLCJ2YXJpYW50IiwiQWNjZXB0VmFyaWFudCIsInVzZURpc2FibGVJT1NUb3VjaCIsInVzZUVmZmVjdCIsImJvZHkiLCJkb2N1bWVudCIsInN0eWxlIiwidG91Y2hBY3Rpb24iLCJHZW5lcmljTW9kYWxXcmFwcGVyIiwiaXNPcGVuIiwiaGFuZGxlQ2xvc2UiLCJNb2RhbFN0eWxlZCIsIkdlbmVyaWNNb2RhbEhlYWRlciIsIkJveCIsInN4IiwicCIsIkNpcmN1bGFyUHJvZ3Jlc3MiLCJtYXJnaW4iLCJkaXNwbGF5IiwicHQiLCJmb3JtIiwib25TdWJtaXQiLCJldiIsInByZXZlbnREZWZhdWx0IiwiZm9udFNpemUiLCJkYXRhLXRlc3RpZCIsInNpemUiLCJCdXR0b24iLCJvbkNsaWNrIiwiZGlzYWJsZWQiLCJjb2xvciIsInRleHQiLCJhdXRvRm9jdXMiLCJ0eXBlIl0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQThHU0E7OztlQUFBQTs7Ozt1QkE5RytDO3VCQUNyQjtzQkFDd0I7b0NBQy9CO29DQUNPO3FDQUNDO0FBdUJwQyxNQUFNQSxlQUFlLENBQUMsRUFDcEJDLE9BQU8sRUFDUEMsUUFBUSxFQUNSQyxPQUFPLEVBQ1BDLFFBQVEsRUFDUkMsSUFBSSxFQUNKQyxRQUFRLFNBQVMsRUFDakJDLGlCQUFpQixLQUFLLEVBQ3RCQyxXQUFXLEVBQ1hDLFdBQVcsRUFDWEMsUUFBUSxFQUNSQyxjQUFjLEVBQ1I7SUFDTixNQUFNLEVBQUVDLFNBQVNDLGdCQUFnQixXQUFXLEVBQUUsR0FBR0wsZUFBZSxDQUFDO0lBQ2pFTSxJQUFBQSx5QkFBa0IsRUFBQ1Q7SUFFbkIsK0RBQStEO0lBQy9EVSxJQUFBQSxnQkFBUyxFQUFDO1FBQ1IsTUFBTUMsT0FBT0MsU0FBU0QsSUFBSTtRQUMxQixJQUFJWCxNQUFNO1lBQ1JXLEtBQUtFLEtBQUssQ0FBQ0MsV0FBVyxHQUFHO1FBQzNCO1FBQ0EsT0FBTztZQUNMSCxLQUFLRSxLQUFLLENBQUNDLFdBQVcsR0FBRztRQUMzQjtJQUNGLEdBQUc7UUFBQ2Q7S0FBSztRQW9DVUksbUJBU0FEO0lBM0NuQixxQkFDRSxxQkFBQ1ksd0NBQW1CO1FBQUNDLFFBQVFoQjtRQUFNaUIsYUFBYW5CO2tCQUM5QyxjQUFBLHNCQUFDb0IsK0JBQVc7OzhCQUNWLHFCQUFDQyxzQ0FBa0I7b0JBQUNiLGdCQUFnQkE7b0JBQWdCTCxPQUFPQTtvQkFBT2dCLGFBQWFuQjs7Z0JBQzlFRix3QkFDQyxxQkFBQ3dCLFNBQUc7b0JBQUNDLElBQUk7d0JBQUVDLEdBQUc7b0JBQUU7OEJBQ2QsY0FBQSxxQkFBQ0Msc0JBQWdCO3dCQUFDVixPQUFPOzRCQUFFVyxRQUFROzRCQUFVQyxTQUFTO3dCQUFROzttQ0FHaEUscUJBQUNMLFNBQUc7b0JBQUNDLElBQUk7d0JBQUVLLElBQUk7b0JBQUU7OEJBQ2YsY0FBQSxzQkFBQ0M7d0JBQ0NDLFVBQVVDLENBQUFBOzRCQUNSQSxHQUFHQyxjQUFjOzRCQUNqQmpDLFNBQVNnQzt3QkFDWDs7MENBRUEscUJBQUNULFNBQUc7Z0NBQUNDLElBQUk7b0NBQUVVLFVBQVU7Z0NBQUc7MENBQUkxQjs7NEJBQzNCSCwrQkFDQyxxQkFBQ2tCLFNBQUc7MENBQ0YsY0FBQSxxQkFBQ0csc0JBQWdCO29DQUNmUyxlQUFZO29DQUNaQyxNQUFNO29DQUNOcEIsT0FBTzt3Q0FBRVcsUUFBUTt3Q0FBbUJDLFNBQVM7b0NBQVE7OytDQUl6RCxzQkFBQ0wsU0FBRzs7a0RBQ0YscUJBQUNjLFlBQU07d0NBQ0xDLFNBQVNwQyxxQkFBQUEsc0JBQUFBLFdBQVlEO3dDQUNyQlMsT0FBTyxFQUFFSCx3QkFBQUEsa0NBQUFBLFlBQWFHLE9BQU87d0NBQzdCNkIsUUFBUSxFQUFFaEMsd0JBQUFBLGtDQUFBQSxZQUFhZ0MsUUFBUTt3Q0FDL0JDLE9BQU07d0NBQ05MLGVBQVk7a0RBRVg1QixDQUFBQSxvQkFBQUEsd0JBQUFBLGtDQUFBQSxZQUFha0MsSUFBSSxjQUFqQmxDLCtCQUFBQSxvQkFBcUI7O2tEQUV4QixxQkFBQzhCLFlBQU07d0NBQ0xLLFNBQVM7d0NBQ1RoQyxTQUFTQzt3Q0FDVDRCLFFBQVEsRUFBRWpDLHdCQUFBQSxrQ0FBQUEsWUFBYWlDLFFBQVE7d0NBQy9CSixlQUFZO3dDQUNaUSxNQUFLO2tEQUVKckMsQ0FBQUEsb0JBQUFBLHdCQUFBQSxrQ0FBQUEsWUFBYW1DLElBQUksY0FBakJuQywrQkFBQUEsb0JBQXFCOzs7Ozs7Ozs7O0FBVTFDIn0=