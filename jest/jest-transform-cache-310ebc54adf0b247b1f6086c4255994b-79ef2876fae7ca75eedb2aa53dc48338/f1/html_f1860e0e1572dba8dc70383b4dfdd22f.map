{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/node_modules/micromark-extension-gfm-autolink-literal/lib/html.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').CompileContext} CompileContext\n * @typedef {import('micromark-util-types').Handle} Handle\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-util-types').Token} Token\n */\n\nimport {sanitizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Create an HTML extension for `micromark` to support GitHub autolink literal\n * when serializing to HTML.\n *\n * @returns {HtmlExtension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GitHub autolink literal when serializing to HTML.\n */\nexport function gfmAutolinkLiteralHtml() {\n  return {\n    exit: {\n      literalAutolinkEmail,\n      literalAutolinkHttp,\n      literalAutolinkWww\n    }\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {Handle}\n */\nfunction literalAutolinkWww(token) {\n  anchorFromToken.call(this, token, 'http://')\n}\n\n/**\n * @this {CompileContext}\n * @type {Handle}\n */\nfunction literalAutolinkEmail(token) {\n  anchorFromToken.call(this, token, 'mailto:')\n}\n\n/**\n * @this {CompileContext}\n * @type {Handle}\n */\nfunction literalAutolinkHttp(token) {\n  anchorFromToken.call(this, token)\n}\n\n/**\n * @this CompileContext\n * @param {Token} token\n * @param {string | null | undefined} [protocol]\n * @returns {undefined}\n */\nfunction anchorFromToken(token, protocol) {\n  const url = this.sliceSerialize(token)\n  this.tag('<a href=\"' + sanitizeUri((protocol || '') + url) + '\">')\n  this.raw(this.encode(url))\n  this.tag('</a>')\n}\n"],"names":["gfmAutolinkLiteralHtml","exit","literalAutolinkEmail","literalAutolinkHttp","literalAutolinkWww","token","anchorFromToken","call","protocol","url","sliceSerialize","tag","sanitizeUri","raw","encode"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA;;;;;CAKC;;;;+BAYeA;;;eAAAA;;;0CAVU;AAUnB,SAASA;IACd,OAAO;QACLC,MAAM;YACJC;YACAC;YACAC;QACF;IACF;AACF;AAEA;;;CAGC,GACD,SAASA,mBAAmBC,KAAK;IAC/BC,gBAAgBC,IAAI,CAAC,IAAI,EAAEF,OAAO;AACpC;AAEA;;;CAGC,GACD,SAASH,qBAAqBG,KAAK;IACjCC,gBAAgBC,IAAI,CAAC,IAAI,EAAEF,OAAO;AACpC;AAEA;;;CAGC,GACD,SAASF,oBAAoBE,KAAK;IAChCC,gBAAgBC,IAAI,CAAC,IAAI,EAAEF;AAC7B;AAEA;;;;;CAKC,GACD,SAASC,gBAAgBD,KAAK,EAAEG,QAAQ;IACtC,MAAMC,MAAM,IAAI,CAACC,cAAc,CAACL;IAChC,IAAI,CAACM,GAAG,CAAC,cAAcC,IAAAA,qCAAW,EAAC,AAACJ,CAAAA,YAAY,EAAC,IAAKC,OAAO;IAC7D,IAAI,CAACI,GAAG,CAAC,IAAI,CAACC,MAAM,CAACL;IACrB,IAAI,CAACE,GAAG,CAAC;AACX"}