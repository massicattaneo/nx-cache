940ec5eba749bf21126c567c0104cd03
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    InlineAttributionArrowButton: function() {
        return InlineAttributionArrowButton;
    },
    InlineAttributionNumberedButton: function() {
        return InlineAttributionNumberedButton;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _hooks = require("@rp/react/web/common/hooks");
const _core = require("@rp/react/web/mui/core");
const _icons = require("@rp/react/web/mui/icons");
const _InlineAttribution = require("./InlineAttribution");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const InlineAttributionNumberedButton = /*#__PURE__*/ (0, _react.forwardRef)((_param, ref)=>{
    var { onClick, disabled, isModalOpen } = _param, rest = _object_without_properties(_param, [
        "onClick",
        "disabled",
        "isModalOpen"
    ]);
    const { isMobile } = (0, _hooks.useDeviceInfo)();
    const disabledColor = disabled ? "text.disabled" : "primary.main";
    const disabledBgColor = disabled ? "overlay.surface" : "blue.900";
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, _object_spread_props(_object_spread({}, rest), {
        component: "span",
        onClick: !disabled ? onClick : undefined,
        ref: ref,
        sx: {
            display: "inline-block",
            position: "relative",
            height: isMobile ? 20 : 16,
            width: isMobile ? 20 : 16,
            mb: isMobile ? 0 : 0.25,
            mx: 0.25,
            cursor: isMobile || disabled ? undefined : "pointer",
            "&:hover::after, &[aria-labelledby]::after": !disabled ? {
                backgroundColor: "primary.main",
                color: "surface.main",
                transform: "rotateZ(0deg)"
            } : undefined,
            "&::after": {
                color: isModalOpen ? "surface.main" : disabledColor,
                backgroundColor: isModalOpen ? "primary.main" : disabledBgColor,
                borderRadius: "3px",
                position: "absolute",
                height: isMobile ? 20 : 16,
                width: isMobile ? 20 : 16,
                top: 4,
                left: 0,
                display: "flex",
                alignItems: "center",
                justifyContent: "center",
                fontSize: 8,
                counterIncrement: _InlineAttribution.COUNTER_NAME,
                content: `counter(${_InlineAttribution.COUNTER_NAME})`
            }
        }
    }));
});
const InlineAttributionArrowButton = /*#__PURE__*/ (0, _react.forwardRef)((_param, ref)=>{
    var { onClick, disabled = false, isModalOpen } = _param, rest = _object_without_properties(_param, [
        "onClick",
        "disabled",
        "isModalOpen"
    ]);
    const { isMobile } = (0, _hooks.useDeviceInfo)();
    const disabledColor = disabled ? "text.disabled" : "primary.main";
    const disabledBgColor = disabled ? "overlay.surface" : "blue.900";
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, _object_spread_props(_object_spread({}, rest), {
        role: "button",
        "aria-label": "Inline attribution button",
        component: "span",
        ref: ref,
        onClick: !disabled ? onClick : undefined,
        sx: {
            display: "inline-block",
            position: "relative",
            height: isMobile ? 20 : 16,
            width: isMobile ? 20 : 16,
            mb: isMobile ? 0 : 0.25,
            mx: 0.25,
            cursor: isMobile || disabled ? undefined : "pointer",
            "& svg": {
                transition: "transform 0.2s",
                fontSize: isMobile ? 18 : 14
            },
            "&:hover > div": {
                backgroundColor: "primary.main",
                color: "surface.main"
            },
            "&:hover svg": !disabled ? {
                color: "surface.main",
                transform: "rotateZ(180deg)"
            } : undefined
        },
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
            component: "span",
            sx: {
                color: isModalOpen ? "surface.main" : disabledColor,
                backgroundColor: isModalOpen ? "primary.main" : disabledBgColor,
                borderRadius: "3px",
                position: "absolute",
                height: isMobile ? 20 : 16,
                width: isMobile ? 20 : 16,
                top: 4,
                left: 0,
                display: "flex",
                alignItems: "center",
                justifyContent: "center"
            },
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.ArrowDropDown, {})
        })
    }));
});

//# sourceMappingURL=data:application/json;base64,