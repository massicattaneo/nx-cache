343b8663f279a8deecee1c77bfdf9f24
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "BriefSaveStep", {
    enumerable: true,
    get: function() {
        return BriefSaveStep;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _brief = require("@rp/react/common/brief");
const _compositecomponents = require("@rp/react/web/common/composite-components");
const _core = require("@rp/react/web/mui/core");
const _icons = require("@rp/react/web/mui/icons");
const _BriefStepsContent = require("../BriefStepsContent");
const BriefSaveStep = ({ isLoadingWatchlistPreload })=>{
    const { form: { name }, setName } = (0, _brief.useBriefConfigForm)();
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_compositecomponents.VerticalScrollStep, {
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.BriefStepsLegend, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                    children: "Give your Brief a name:"
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_BriefStepsContent.BriefStepsContent, {
                Icon: _icons.LabelOutlined,
                iconText: "Name",
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.TextField, {
                    sx: {
                        mt: 2
                    },
                    variant: "outlined",
                    fullWidth: true,
                    size: "small",
                    inputProps: {
                        role: "input",
                        "aria-label": "brief name"
                    },
                    value: name,
                    onChange: (e)=>setName(e.target.value),
                    "aria-disabled": isLoadingWatchlistPreload,
                    disabled: isLoadingWatchlistPreload
                })
            })
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2JyaWVmL3NyYy9jb21wb25lbnRzL2JyaWVmU3RlcHMvQnJpZWZTYXZlU3RlcC9CcmllZlNhdmVTdGVwLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VCcmllZkNvbmZpZ0Zvcm0gfSBmcm9tIFwiQHJwL3JlYWN0L2NvbW1vbi9icmllZlwiXG5pbXBvcnQgeyBCcmllZlN0ZXBzTGVnZW5kLCBWZXJ0aWNhbFNjcm9sbFN0ZXAgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9jb21tb24vY29tcG9zaXRlLWNvbXBvbmVudHNcIlxuaW1wb3J0IHsgVGV4dEZpZWxkLCBUeXBvZ3JhcGh5IH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvbXVpL2NvcmVcIlxuaW1wb3J0IHsgTGFiZWxPdXRsaW5lZCB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL211aS9pY29uc1wiXG5pbXBvcnQgeyBCcmllZlN0ZXBzQ29udGVudCB9IGZyb20gXCIuLi9CcmllZlN0ZXBzQ29udGVudFwiXG5cbnR5cGUgUHJvcHMgPSB7XG4gIGlzTG9hZGluZ1dhdGNobGlzdFByZWxvYWQ6IGJvb2xlYW5cbn1cblxuY29uc3QgQnJpZWZTYXZlU3RlcCA9ICh7IGlzTG9hZGluZ1dhdGNobGlzdFByZWxvYWQgfTogUHJvcHMpID0+IHtcbiAgY29uc3Qge1xuICAgIGZvcm06IHsgbmFtZSB9LFxuICAgIHNldE5hbWUsXG4gIH0gPSB1c2VCcmllZkNvbmZpZ0Zvcm0oKVxuXG4gIHJldHVybiAoXG4gICAgPFZlcnRpY2FsU2Nyb2xsU3RlcD5cbiAgICAgIDxCcmllZlN0ZXBzTGVnZW5kPlxuICAgICAgICA8VHlwb2dyYXBoeT5HaXZlIHlvdXIgQnJpZWYgYSBuYW1lOjwvVHlwb2dyYXBoeT5cbiAgICAgIDwvQnJpZWZTdGVwc0xlZ2VuZD5cbiAgICAgIDxCcmllZlN0ZXBzQ29udGVudCBJY29uPXtMYWJlbE91dGxpbmVkfSBpY29uVGV4dD1cIk5hbWVcIj5cbiAgICAgICAgPFRleHRGaWVsZFxuICAgICAgICAgIHN4PXt7IG10OiAyIH19XG4gICAgICAgICAgdmFyaWFudD1cIm91dGxpbmVkXCJcbiAgICAgICAgICBmdWxsV2lkdGhcbiAgICAgICAgICBzaXplPVwic21hbGxcIlxuICAgICAgICAgIGlucHV0UHJvcHM9e3tcbiAgICAgICAgICAgIHJvbGU6IFwiaW5wdXRcIixcbiAgICAgICAgICAgIFwiYXJpYS1sYWJlbFwiOiBcImJyaWVmIG5hbWVcIixcbiAgICAgICAgICB9fVxuICAgICAgICAgIHZhbHVlPXtuYW1lfVxuICAgICAgICAgIG9uQ2hhbmdlPXtlID0+IHNldE5hbWUoZS50YXJnZXQudmFsdWUpfVxuICAgICAgICAgIGFyaWEtZGlzYWJsZWQ9e2lzTG9hZGluZ1dhdGNobGlzdFByZWxvYWR9XG4gICAgICAgICAgZGlzYWJsZWQ9e2lzTG9hZGluZ1dhdGNobGlzdFByZWxvYWR9XG4gICAgICAgIC8+XG4gICAgICA8L0JyaWVmU3RlcHNDb250ZW50PlxuICAgIDwvVmVydGljYWxTY3JvbGxTdGVwPlxuICApXG59XG5cbmV4cG9ydCB7IEJyaWVmU2F2ZVN0ZXAgfVxuIl0sIm5hbWVzIjpbIkJyaWVmU2F2ZVN0ZXAiLCJpc0xvYWRpbmdXYXRjaGxpc3RQcmVsb2FkIiwiZm9ybSIsIm5hbWUiLCJzZXROYW1lIiwidXNlQnJpZWZDb25maWdGb3JtIiwiVmVydGljYWxTY3JvbGxTdGVwIiwiQnJpZWZTdGVwc0xlZ2VuZCIsIlR5cG9ncmFwaHkiLCJCcmllZlN0ZXBzQ29udGVudCIsIkljb24iLCJMYWJlbE91dGxpbmVkIiwiaWNvblRleHQiLCJUZXh0RmllbGQiLCJzeCIsIm10IiwidmFyaWFudCIsImZ1bGxXaWR0aCIsInNpemUiLCJpbnB1dFByb3BzIiwicm9sZSIsInZhbHVlIiwib25DaGFuZ2UiLCJlIiwidGFyZ2V0IiwiYXJpYS1kaXNhYmxlZCIsImRpc2FibGVkIl0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQXlDU0E7OztlQUFBQTs7Ozt1QkF6QzBCO3FDQUNrQjtzQkFDZjt1QkFDUjttQ0FDSTtBQU1sQyxNQUFNQSxnQkFBZ0IsQ0FBQyxFQUFFQyx5QkFBeUIsRUFBUztJQUN6RCxNQUFNLEVBQ0pDLE1BQU0sRUFBRUMsSUFBSSxFQUFFLEVBQ2RDLE9BQU8sRUFDUixHQUFHQyxJQUFBQSx5QkFBa0I7SUFFdEIscUJBQ0Usc0JBQUNDLHVDQUFrQjs7MEJBQ2pCLHFCQUFDQyxxQ0FBZ0I7MEJBQ2YsY0FBQSxxQkFBQ0MsZ0JBQVU7OEJBQUM7OzswQkFFZCxxQkFBQ0Msb0NBQWlCO2dCQUFDQyxNQUFNQyxvQkFBYTtnQkFBRUMsVUFBUzswQkFDL0MsY0FBQSxxQkFBQ0MsZUFBUztvQkFDUkMsSUFBSTt3QkFBRUMsSUFBSTtvQkFBRTtvQkFDWkMsU0FBUTtvQkFDUkMsU0FBUztvQkFDVEMsTUFBSztvQkFDTEMsWUFBWTt3QkFDVkMsTUFBTTt3QkFDTixjQUFjO29CQUNoQjtvQkFDQUMsT0FBT2xCO29CQUNQbUIsVUFBVUMsQ0FBQUEsSUFBS25CLFFBQVFtQixFQUFFQyxNQUFNLENBQUNILEtBQUs7b0JBQ3JDSSxpQkFBZXhCO29CQUNmeUIsVUFBVXpCOzs7OztBQUtwQiJ9