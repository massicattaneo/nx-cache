{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/composite-components/src/MultiSelect/MultiCheckboxSelect.tsx"],"sourcesContent":["import { ReactNode, useCallback, useRef, useState } from \"react\"\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Divider,\n  InputLabel,\n  SxProps,\n  TextField,\n  Typography,\n} from \"@rp/react/web/mui/core\"\nimport { ArrowDropDown, ArrowDropUp, Search } from \"@rp/react/web/mui/icons\"\nimport { InfiniteList } from \"../InfiniteList\"\nimport {\n  ListContainer,\n  MultiCheckboxSelectWrapper,\n  PopoverStyled,\n} from \"./MultiCheckboxSelect.styles\"\n\nconst PADDING_X = 8\n\nfunction getLabelText<T extends { value: string; label: string }>(values: Array<T>) {\n  if (!values.length) return \"All\"\n  if (values.length === 1) return values[0].label\n  return `${values[0].label} +${values.length - 1}`\n}\n\nfunction equalsCheck<T extends { value: string; label: string }>(a: Array<T>, b: Array<T>) {\n  const idsA = a.map(i => i.value)\n  const idsB = b.map(i => i.value)\n  return idsA.length === idsB.length && idsA.every(id => idsB.includes(id))\n}\n\ntype MultiCheckboxSelectProps<T> = {\n  label: string\n  placeholder: string\n  items: Array<T>\n  onChange?: (selected: Array<T>) => void\n  value?: Array<T>\n  renderItem: (item: T, index: number, searchText: string, toggle: (item: T) => void) => ReactNode\n  sx?: SxProps\n  isLoading?: boolean\n  initialElements?: number\n  search?: string\n  onSearch?: (search: string) => void\n}\n\nfunction MultiCheckboxSelect<T extends { value: string; label: string }>({\n  label,\n  placeholder,\n  items,\n  renderItem,\n  onChange,\n  value = [],\n  sx,\n  isLoading = false,\n  initialElements,\n  search = \"\",\n  onSearch,\n}: MultiCheckboxSelectProps<T>) {\n  const [anchorEl, setAnchorEl] = useState<HTMLDivElement | null>(null)\n  const [notConfirmed, setNotConfirmed] = useState<Array<T>>([])\n  const [open, setOpen] = useState(false)\n  const [width, setWidth] = useState<number | undefined>()\n  const ref = useRef<HTMLDivElement>(null)\n\n  const close = () => {\n    setWidth(undefined)\n  }\n\n  const toggle = useCallback((item: T) => {\n    setNotConfirmed(prev => {\n      const index = prev.findIndex(conf => conf.value === item.value)\n      if (index !== -1) {\n        prev.splice(index, 1)\n        return [...prev]\n      }\n      return [...prev, item]\n    })\n  }, [])\n\n  return (\n    <Box sx={sx}>\n      <MultiCheckboxSelectWrapper\n        className={open ? \"expanded\" : \"\"}\n        ref={setAnchorEl}\n        onClick={() => {\n          setOpen(prev => {\n            if (prev) close()\n            return !prev\n          })\n          setNotConfirmed([...value])\n          onSearch?.(\"\")\n        }}\n      >\n        <InputLabel>{label}</InputLabel>\n        <Typography>{getLabelText(value)}</Typography>\n        {open ? <ArrowDropUp /> : <ArrowDropDown />}\n      </MultiCheckboxSelectWrapper>\n      <PopoverStyled\n        sx={{ \"& .MuiPopover-paper\": { width, px: `${PADDING_X}px` } }}\n        open={open}\n        anchorEl={anchorEl}\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n        transformOrigin={{ horizontal: \"left\", vertical: \"top\" }}\n        onClose={() => {\n          setOpen(false)\n          close()\n        }}\n      >\n        <TextField\n          size=\"small\"\n          placeholder={placeholder}\n          sx={{ marginY: \"8px\" }}\n          InputProps={{\n            startAdornment: <Search />,\n          }}\n          onChange={ev => onSearch?.(ev.target.value)}\n          onFocus={() => {\n            if (ref.current) {\n              setWidth(ref.current.offsetWidth + PADDING_X * 2)\n            }\n          }}\n          value={search}\n        />\n        <ListContainer ref={ref}>\n          {value\n            .filter(item => item.label.toLowerCase().includes(search.toLowerCase()))\n            .map((val, index) => {\n              return (\n                <Box key={index} sx={{ display: \"flex\", alignItems: \"center\" }}>\n                  <Checkbox\n                    checked={!!notConfirmed.find(conf => conf.value === val.value)}\n                    onChange={() => toggle(val)}\n                    name={val.value}\n                    id={val.value}\n                  />\n                  {renderItem(val, index, search, toggle)}\n                </Box>\n              )\n            })}\n          {value.length ? <Divider sx={{ mr: 1, ml: 1.1 }} /> : null}\n          <InfiniteList\n            initialElements={initialElements}\n            loaderSize={24}\n            loading={isLoading}\n            items={items\n              .filter(item => item.label.toLowerCase().includes(search.toLowerCase()))\n              .map(i => ({ id: i.value, ...i }))}\n            renderItem={(item, index) => {\n              return (\n                <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n                  <Checkbox\n                    checked={!!notConfirmed.find(conf => conf.value === item.value)}\n                    onChange={() => toggle(item)}\n                    name={item.value}\n                    id={item.value}\n                  />\n                  {renderItem(item, index, search, toggle)}\n                </Box>\n              )\n            }}\n          />\n        </ListContainer>\n        <Box sx={{ display: \"flex\", justifyContent: \"right\" }}>\n          <Button\n            disabled={equalsCheck(notConfirmed, value)}\n            onClick={() => {\n              setOpen(false)\n              close()\n              const toAdd = [...notConfirmed]\n              // after popover closes\n              setTimeout(() => onChange?.(toAdd), 200)\n            }}\n          >\n            APPLY\n          </Button>\n        </Box>\n      </PopoverStyled>\n    </Box>\n  )\n}\n\nexport { MultiCheckboxSelect }\nexport type { MultiCheckboxSelectProps }\n"],"names":["MultiCheckboxSelect","PADDING_X","getLabelText","values","length","label","equalsCheck","a","b","idsA","map","i","value","idsB","every","id","includes","placeholder","items","renderItem","onChange","sx","isLoading","initialElements","search","onSearch","anchorEl","setAnchorEl","useState","notConfirmed","setNotConfirmed","open","setOpen","width","setWidth","ref","useRef","close","undefined","toggle","useCallback","item","prev","index","findIndex","conf","splice","Box","MultiCheckboxSelectWrapper","className","onClick","InputLabel","Typography","ArrowDropUp","ArrowDropDown","PopoverStyled","px","anchorOrigin","vertical","horizontal","transformOrigin","onClose","TextField","size","marginY","InputProps","startAdornment","Search","ev","target","onFocus","current","offsetWidth","ListContainer","filter","toLowerCase","val","display","alignItems","Checkbox","checked","find","name","Divider","mr","ml","InfiniteList","loaderSize","loading","justifyContent","Button","disabled","toAdd","setTimeout"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}