7a0ea24449932fba7d2892ed3b34bd90
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "ChatUploadOverlay", {
    enumerable: true,
    get: function() {
        return ChatUploadOverlay;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _basecomponents = require("@rp/react/web/common/base-components");
const _core = require("@rp/react/web/mui/core");
const ChatUploadOverlay = ({ isOverLimit })=>{
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
        sx: {
            position: "fixed",
            top: 0,
            let: 0,
            zIndex: 60,
            width: "100dvw",
            pointerEvents: "none",
            backdropFilter: "blur(30px)",
            backgroundColor: "primary.background"
        },
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Grid, {
            container: true,
            spacing: 0,
            direction: "column",
            alignItems: "center",
            justifyContent: "center",
            sx: {
                height: "100dvh"
            },
            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Grid, {
                item: true,
                sx: {
                    display: "flex",
                    flexDirection: "column",
                    alignItems: "center"
                },
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.UploadBoxIcon, {
                        disabled: isOverLimit
                    }),
                    isOverLimit ? /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Typography, {
                        textAlign: "center",
                        children: [
                            "You've reached your data analysis limit",
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("br", {}),
                            "and canâ€™t upload more files."
                        ]
                    }) : /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                                children: "Drop any document to add it to the conversation"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                                sx: (theme)=>({
                                        color: theme.palette.text.disabled
                                    }),
                                children: "PDF, HTML, CSV, TXT, DOC, XML, XLS, EML, or PPT"
                            })
                        ]
                    })
                ]
            })
        })
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NoYXQvc3JjL2xpYi9DaGF0VXBsb2FkRHJvcFpvbmUvQ2hhdFVwbG9hZE92ZXJsYXkudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFVwbG9hZEJveEljb24gfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9jb21tb24vYmFzZS1jb21wb25lbnRzXCJcbmltcG9ydCB7IEJveCwgR3JpZCwgVHlwb2dyYXBoeSB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL211aS9jb3JlXCJcblxudHlwZSBQcm9wcyA9IHtcbiAgaXNPdmVyTGltaXQ6IGJvb2xlYW5cbn1cblxuZXhwb3J0IGNvbnN0IENoYXRVcGxvYWRPdmVybGF5ID0gKHsgaXNPdmVyTGltaXQgfTogUHJvcHMpID0+IHtcbiAgcmV0dXJuIChcbiAgICA8Qm94XG4gICAgICBzeD17e1xuICAgICAgICBwb3NpdGlvbjogXCJmaXhlZFwiLFxuICAgICAgICB0b3A6IDAsXG4gICAgICAgIGxldDogMCxcbiAgICAgICAgekluZGV4OiA2MCxcbiAgICAgICAgd2lkdGg6IFwiMTAwZHZ3XCIsXG4gICAgICAgIHBvaW50ZXJFdmVudHM6IFwibm9uZVwiLFxuICAgICAgICBiYWNrZHJvcEZpbHRlcjogXCJibHVyKDMwcHgpXCIsXG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogXCJwcmltYXJ5LmJhY2tncm91bmRcIixcbiAgICAgIH19XG4gICAgPlxuICAgICAgPEdyaWRcbiAgICAgICAgY29udGFpbmVyXG4gICAgICAgIHNwYWNpbmc9ezB9XG4gICAgICAgIGRpcmVjdGlvbj1cImNvbHVtblwiXG4gICAgICAgIGFsaWduSXRlbXM9XCJjZW50ZXJcIlxuICAgICAgICBqdXN0aWZ5Q29udGVudD1cImNlbnRlclwiXG4gICAgICAgIHN4PXt7IGhlaWdodDogXCIxMDBkdmhcIiB9fVxuICAgICAgPlxuICAgICAgICA8R3JpZCBpdGVtIHN4PXt7IGRpc3BsYXk6IFwiZmxleFwiLCBmbGV4RGlyZWN0aW9uOiBcImNvbHVtblwiLCBhbGlnbkl0ZW1zOiBcImNlbnRlclwiIH19PlxuICAgICAgICAgIDxVcGxvYWRCb3hJY29uIGRpc2FibGVkPXtpc092ZXJMaW1pdH0gLz5cbiAgICAgICAgICB7aXNPdmVyTGltaXQgPyAoXG4gICAgICAgICAgICA8VHlwb2dyYXBoeSB0ZXh0QWxpZ249XCJjZW50ZXJcIj5cbiAgICAgICAgICAgICAgWW91J3ZlIHJlYWNoZWQgeW91ciBkYXRhIGFuYWx5c2lzIGxpbWl0XG4gICAgICAgICAgICAgIDxiciAvPlxuICAgICAgICAgICAgICBhbmQgY2Fu4oCZdCB1cGxvYWQgbW9yZSBmaWxlcy5cbiAgICAgICAgICAgIDwvVHlwb2dyYXBoeT5cbiAgICAgICAgICApIDogKFxuICAgICAgICAgICAgPD5cbiAgICAgICAgICAgICAgPFR5cG9ncmFwaHk+RHJvcCBhbnkgZG9jdW1lbnQgdG8gYWRkIGl0IHRvIHRoZSBjb252ZXJzYXRpb248L1R5cG9ncmFwaHk+XG4gICAgICAgICAgICAgIDxUeXBvZ3JhcGh5IHN4PXt0aGVtZSA9PiAoeyBjb2xvcjogdGhlbWUucGFsZXR0ZS50ZXh0LmRpc2FibGVkIH0pfT5cbiAgICAgICAgICAgICAgICBQREYsIEhUTUwsIENTViwgVFhULCBET0MsIFhNTCwgWExTLCBFTUwsIG9yIFBQVFxuICAgICAgICAgICAgICA8L1R5cG9ncmFwaHk+XG4gICAgICAgICAgICA8Lz5cbiAgICAgICAgICApfVxuICAgICAgICA8L0dyaWQ+XG4gICAgICA8L0dyaWQ+XG4gICAgPC9Cb3g+XG4gIClcbn1cbiJdLCJuYW1lcyI6WyJDaGF0VXBsb2FkT3ZlcmxheSIsImlzT3ZlckxpbWl0IiwiQm94Iiwic3giLCJwb3NpdGlvbiIsInRvcCIsImxldCIsInpJbmRleCIsIndpZHRoIiwicG9pbnRlckV2ZW50cyIsImJhY2tkcm9wRmlsdGVyIiwiYmFja2dyb3VuZENvbG9yIiwiR3JpZCIsImNvbnRhaW5lciIsInNwYWNpbmciLCJkaXJlY3Rpb24iLCJhbGlnbkl0ZW1zIiwianVzdGlmeUNvbnRlbnQiLCJoZWlnaHQiLCJpdGVtIiwiZGlzcGxheSIsImZsZXhEaXJlY3Rpb24iLCJVcGxvYWRCb3hJY29uIiwiZGlzYWJsZWQiLCJUeXBvZ3JhcGh5IiwidGV4dEFsaWduIiwiYnIiLCJ0aGVtZSIsImNvbG9yIiwicGFsZXR0ZSIsInRleHQiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQU9hQTs7O2VBQUFBOzs7O2dDQVBpQjtzQkFDUTtBQU0vQixNQUFNQSxvQkFBb0IsQ0FBQyxFQUFFQyxXQUFXLEVBQVM7SUFDdEQscUJBQ0UscUJBQUNDLFNBQUc7UUFDRkMsSUFBSTtZQUNGQyxVQUFVO1lBQ1ZDLEtBQUs7WUFDTEMsS0FBSztZQUNMQyxRQUFRO1lBQ1JDLE9BQU87WUFDUEMsZUFBZTtZQUNmQyxnQkFBZ0I7WUFDaEJDLGlCQUFpQjtRQUNuQjtrQkFFQSxjQUFBLHFCQUFDQyxVQUFJO1lBQ0hDLFNBQVM7WUFDVEMsU0FBUztZQUNUQyxXQUFVO1lBQ1ZDLFlBQVc7WUFDWEMsZ0JBQWU7WUFDZmQsSUFBSTtnQkFBRWUsUUFBUTtZQUFTO3NCQUV2QixjQUFBLHNCQUFDTixVQUFJO2dCQUFDTyxJQUFJO2dCQUFDaEIsSUFBSTtvQkFBRWlCLFNBQVM7b0JBQVFDLGVBQWU7b0JBQVVMLFlBQVk7Z0JBQVM7O2tDQUM5RSxxQkFBQ00sNkJBQWE7d0JBQUNDLFVBQVV0Qjs7b0JBQ3hCQSw0QkFDQyxzQkFBQ3VCLGdCQUFVO3dCQUFDQyxXQUFVOzs0QkFBUzswQ0FFN0IscUJBQUNDOzRCQUFLOzt1Q0FJUjs7MENBQ0UscUJBQUNGLGdCQUFVOzBDQUFDOzswQ0FDWixxQkFBQ0EsZ0JBQVU7Z0NBQUNyQixJQUFJd0IsQ0FBQUEsUUFBVSxDQUFBO3dDQUFFQyxPQUFPRCxNQUFNRSxPQUFPLENBQUNDLElBQUksQ0FBQ1AsUUFBUTtvQ0FBQyxDQUFBOzBDQUFJOzs7Ozs7OztBQVNqRiJ9