{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/cqs-query-bar/src/lib/groupByOperations.ts"],"sourcesContent":["import {\n  isRpqlFlatArrayFilter,\n  isRpqlFlatArrayIdFilter,\n  isRpqlFlatMatchFilter,\n} from \"@rp/common/api-types\"\nimport { RpqlFlatFilter } from \"@rp/common/api-types\"\n\ntype OperationsType = \"in\" | \"all\" | \"not-in\"\n\nconst groupByOperations = (filters: Record<string, RpqlFlatFilter | null>) => {\n  const operations: Record<OperationsType, Array<string>> = { in: [], all: [], \"not-in\": [] }\n\n  Object.entries(filters).forEach(([filterId, filter]) => {\n    if (!filter) return\n    if (isRpqlFlatMatchFilter(filter)) {\n      operations.in.push(filterId)\n      return\n    }\n    if (isRpqlFlatArrayFilter(filter) || isRpqlFlatArrayIdFilter(filter)) {\n      if (filter.operation === \"not-all\") return\n      operations[filter.operation].push(filterId)\n    }\n  })\n\n  return operations\n}\n\nexport { groupByOperations }\n"],"names":["groupByOperations","filters","operations","in","all","Object","entries","forEach","filterId","filter","isRpqlFlatMatchFilter","push","isRpqlFlatArrayFilter","isRpqlFlatArrayIdFilter","operation"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BA2BSA;;;eAAAA;;;0BAvBF;AAKP,MAAMA,oBAAoB,CAACC;IACzB,MAAMC,aAAoD;QAAEC,IAAI,EAAE;QAAEC,KAAK,EAAE;QAAE,UAAU,EAAE;IAAC;IAE1FC,OAAOC,OAAO,CAACL,SAASM,OAAO,CAAC,CAAC,CAACC,UAAUC,OAAO;QACjD,IAAI,CAACA,QAAQ;QACb,IAAIC,IAAAA,+BAAqB,EAACD,SAAS;YACjCP,WAAWC,EAAE,CAACQ,IAAI,CAACH;YACnB;QACF;QACA,IAAII,IAAAA,+BAAqB,EAACH,WAAWI,IAAAA,iCAAuB,EAACJ,SAAS;YACpE,IAAIA,OAAOK,SAAS,KAAK,WAAW;YACpCZ,UAAU,CAACO,OAAOK,SAAS,CAAC,CAACH,IAAI,CAACH;QACpC;IACF;IAEA,OAAON;AACT"}