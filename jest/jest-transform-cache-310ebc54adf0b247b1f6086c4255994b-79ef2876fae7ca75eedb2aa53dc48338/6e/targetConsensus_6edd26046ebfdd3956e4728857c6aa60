2f808ac6cedd6f1d550c9b3ea09c2f1e
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "targetConsensus", {
    enumerable: true,
    get: function() {
        return targetConsensus;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _WatchlistDataTablePriceCell = require("../../WatchlistDataTableCells/WatchlistDataTablePriceCell");
const _genericColumn = require("../../genericColumn");
function targetConsensus(tableName) {
    const title = "Average Price Target";
    return (0, _genericColumn.genericColumn)({
        endpoint: "companyPriceTarget",
        columnKeys: [
            "targetConsensus"
        ],
        size: 130,
        title,
        enableSorting: true,
        enableHiding: true,
        tooltip: "Gives a benchmark of what brokers/analysts believe is the stock's fair value.",
        extraFinanceData: (entityIds)=>({
                companyCurrency: {
                    entityIds
                }
            }),
        cell: (info)=>{
            var _info_row_original_financialData_companyCurrency_data, _info_row_original_financialData_companyCurrency, _info_row_original_financialData_companyPriceTarget_data, _info_row_original_financialData_companyPriceTarget;
            const currency = (_info_row_original_financialData_companyCurrency = info.row.original.financialData.companyCurrency) === null || _info_row_original_financialData_companyCurrency === void 0 ? void 0 : (_info_row_original_financialData_companyCurrency_data = _info_row_original_financialData_companyCurrency.data) === null || _info_row_original_financialData_companyCurrency_data === void 0 ? void 0 : _info_row_original_financialData_companyCurrency_data.tradingCurrency;
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_WatchlistDataTablePriceCell.WatchlistDataTablePriceCell, {
                queryResult: info.row.original.financialData.companyPriceTarget,
                tooltip: "Explain the Target Consensus",
                currency: currency,
                onClick: ()=>{
                    var _info_row_original_financialData_companyPriceTarget_data, _info_row_original_financialData_companyPriceTarget, _info_row_original_onChatWithCell, _info_row_original;
                    (_info_row_original_onChatWithCell = (_info_row_original = info.row.original).onChatWithCell) === null || _info_row_original_onChatWithCell === void 0 ? void 0 : _info_row_original_onChatWithCell.call(_info_row_original, {
                        prompt: `Explain how recent market trends could contribute to ${info.row.original.entityInfo.name} base-case scenario, potentially resulting in the target consensus.`,
                        value: (_info_row_original_financialData_companyPriceTarget = info.row.original.financialData.companyPriceTarget) === null || _info_row_original_financialData_companyPriceTarget === void 0 ? void 0 : (_info_row_original_financialData_companyPriceTarget_data = _info_row_original_financialData_companyPriceTarget.data) === null || _info_row_original_financialData_companyPriceTarget_data === void 0 ? void 0 : _info_row_original_financialData_companyPriceTarget_data.targetHigh,
                        entityInfo: info.row.original.entityInfo,
                        columnName: `${tableName}: ${title}`
                    });
                },
                value: (_info_row_original_financialData_companyPriceTarget = info.row.original.financialData.companyPriceTarget) === null || _info_row_original_financialData_companyPriceTarget === void 0 ? void 0 : (_info_row_original_financialData_companyPriceTarget_data = _info_row_original_financialData_companyPriceTarget.data) === null || _info_row_original_financialData_companyPriceTarget_data === void 0 ? void 0 : _info_row_original_financialData_companyPriceTarget_data.targetConsensus
            });
        }
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL3dhdGNobGlzdHMvc3JjL2xpYi9XYXRjaGxpc3REYXRhVGFicy9lbmRwb2ludHMvY29tcGFueVByaWNlVGFyZ2V0L3RhcmdldENvbnNlbnN1cy50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgV2F0Y2hsaXN0RGF0YVRhYmxlUHJpY2VDZWxsIH0gZnJvbSBcIi4uLy4uL1dhdGNobGlzdERhdGFUYWJsZUNlbGxzL1dhdGNobGlzdERhdGFUYWJsZVByaWNlQ2VsbFwiXG5pbXBvcnQgeyBnZW5lcmljQ29sdW1uIH0gZnJvbSBcIi4uLy4uL2dlbmVyaWNDb2x1bW5cIlxuXG5mdW5jdGlvbiB0YXJnZXRDb25zZW5zdXModGFibGVOYW1lOiBzdHJpbmcpIHtcbiAgY29uc3QgdGl0bGUgPSBcIkF2ZXJhZ2UgUHJpY2UgVGFyZ2V0XCJcbiAgcmV0dXJuIGdlbmVyaWNDb2x1bW4oe1xuICAgIGVuZHBvaW50OiBcImNvbXBhbnlQcmljZVRhcmdldFwiLFxuICAgIGNvbHVtbktleXM6IFtcInRhcmdldENvbnNlbnN1c1wiXSxcbiAgICBzaXplOiAxMzAsXG4gICAgdGl0bGUsXG4gICAgZW5hYmxlU29ydGluZzogdHJ1ZSxcbiAgICBlbmFibGVIaWRpbmc6IHRydWUsXG4gICAgdG9vbHRpcDogXCJHaXZlcyBhIGJlbmNobWFyayBvZiB3aGF0IGJyb2tlcnMvYW5hbHlzdHMgYmVsaWV2ZSBpcyB0aGUgc3RvY2sncyBmYWlyIHZhbHVlLlwiLFxuICAgIGV4dHJhRmluYW5jZURhdGE6IGVudGl0eUlkcyA9PiAoeyBjb21wYW55Q3VycmVuY3k6IHsgZW50aXR5SWRzIH0gfSksXG4gICAgY2VsbDogaW5mbyA9PiB7XG4gICAgICBjb25zdCBjdXJyZW5jeSA9IGluZm8ucm93Lm9yaWdpbmFsLmZpbmFuY2lhbERhdGEuY29tcGFueUN1cnJlbmN5Py5kYXRhPy50cmFkaW5nQ3VycmVuY3lcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxXYXRjaGxpc3REYXRhVGFibGVQcmljZUNlbGxcbiAgICAgICAgICBxdWVyeVJlc3VsdD17aW5mby5yb3cub3JpZ2luYWwuZmluYW5jaWFsRGF0YS5jb21wYW55UHJpY2VUYXJnZXR9XG4gICAgICAgICAgdG9vbHRpcD17XCJFeHBsYWluIHRoZSBUYXJnZXQgQ29uc2Vuc3VzXCJ9XG4gICAgICAgICAgY3VycmVuY3k9e2N1cnJlbmN5fVxuICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgIGluZm8ucm93Lm9yaWdpbmFsLm9uQ2hhdFdpdGhDZWxsPy4oe1xuICAgICAgICAgICAgICBwcm9tcHQ6IGBFeHBsYWluIGhvdyByZWNlbnQgbWFya2V0IHRyZW5kcyBjb3VsZCBjb250cmlidXRlIHRvICR7aW5mby5yb3cub3JpZ2luYWwuZW50aXR5SW5mby5uYW1lfSBiYXNlLWNhc2Ugc2NlbmFyaW8sIHBvdGVudGlhbGx5IHJlc3VsdGluZyBpbiB0aGUgdGFyZ2V0IGNvbnNlbnN1cy5gLFxuICAgICAgICAgICAgICB2YWx1ZTogaW5mby5yb3cub3JpZ2luYWwuZmluYW5jaWFsRGF0YS5jb21wYW55UHJpY2VUYXJnZXQ/LmRhdGE/LnRhcmdldEhpZ2gsXG4gICAgICAgICAgICAgIGVudGl0eUluZm86IGluZm8ucm93Lm9yaWdpbmFsLmVudGl0eUluZm8sXG4gICAgICAgICAgICAgIGNvbHVtbk5hbWU6IGAke3RhYmxlTmFtZX06ICR7dGl0bGV9YCxcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgfX1cbiAgICAgICAgICB2YWx1ZT17aW5mby5yb3cub3JpZ2luYWwuZmluYW5jaWFsRGF0YS5jb21wYW55UHJpY2VUYXJnZXQ/LmRhdGE/LnRhcmdldENvbnNlbnN1c31cbiAgICAgICAgLz5cbiAgICAgIClcbiAgICB9LFxuICB9KVxufVxuXG5leHBvcnQgeyB0YXJnZXRDb25zZW5zdXMgfVxuIl0sIm5hbWVzIjpbInRhcmdldENvbnNlbnN1cyIsInRhYmxlTmFtZSIsInRpdGxlIiwiZ2VuZXJpY0NvbHVtbiIsImVuZHBvaW50IiwiY29sdW1uS2V5cyIsInNpemUiLCJlbmFibGVTb3J0aW5nIiwiZW5hYmxlSGlkaW5nIiwidG9vbHRpcCIsImV4dHJhRmluYW5jZURhdGEiLCJlbnRpdHlJZHMiLCJjb21wYW55Q3VycmVuY3kiLCJjZWxsIiwiaW5mbyIsImN1cnJlbmN5Iiwicm93Iiwib3JpZ2luYWwiLCJmaW5hbmNpYWxEYXRhIiwiZGF0YSIsInRyYWRpbmdDdXJyZW5jeSIsIldhdGNobGlzdERhdGFUYWJsZVByaWNlQ2VsbCIsInF1ZXJ5UmVzdWx0IiwiY29tcGFueVByaWNlVGFyZ2V0Iiwib25DbGljayIsIm9uQ2hhdFdpdGhDZWxsIiwicHJvbXB0IiwiZW50aXR5SW5mbyIsIm5hbWUiLCJ2YWx1ZSIsInRhcmdldEhpZ2giLCJjb2x1bW5OYW1lIl0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQW9DU0E7OztlQUFBQTs7Ozs2Q0FwQ21DOytCQUNkO0FBRTlCLFNBQVNBLGdCQUFnQkMsU0FBaUI7SUFDeEMsTUFBTUMsUUFBUTtJQUNkLE9BQU9DLElBQUFBLDRCQUFhLEVBQUM7UUFDbkJDLFVBQVU7UUFDVkMsWUFBWTtZQUFDO1NBQWtCO1FBQy9CQyxNQUFNO1FBQ05KO1FBQ0FLLGVBQWU7UUFDZkMsY0FBYztRQUNkQyxTQUFTO1FBQ1RDLGtCQUFrQkMsQ0FBQUEsWUFBYyxDQUFBO2dCQUFFQyxpQkFBaUI7b0JBQUVEO2dCQUFVO1lBQUUsQ0FBQTtRQUNqRUUsTUFBTUMsQ0FBQUE7Z0JBQ2FBLHVEQUFBQSxrREFjTkEsMERBQUFBO1lBZFgsTUFBTUMsWUFBV0QsbURBQUFBLEtBQUtFLEdBQUcsQ0FBQ0MsUUFBUSxDQUFDQyxhQUFhLENBQUNOLGVBQWUsY0FBL0NFLHdFQUFBQSx3REFBQUEsaURBQWlESyxJQUFJLGNBQXJETCw0RUFBQUEsc0RBQXVETSxlQUFlO1lBQ3ZGLHFCQUNFLHFCQUFDQyx3REFBMkI7Z0JBQzFCQyxhQUFhUixLQUFLRSxHQUFHLENBQUNDLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDSyxrQkFBa0I7Z0JBQy9EZCxTQUFTO2dCQUNUTSxVQUFVQTtnQkFDVlMsU0FBUzt3QkFHRVYsMERBQUFBLHFEQUZUQSxtQ0FBQUE7cUJBQUFBLG9DQUFBQSxDQUFBQSxxQkFBQUEsS0FBS0UsR0FBRyxDQUFDQyxRQUFRLEVBQUNRLGNBQWMsY0FBaENYLHdEQUFBQSx1Q0FBQUEsb0JBQW1DO3dCQUNqQ1ksUUFBUSxDQUFDLHFEQUFxRCxFQUFFWixLQUFLRSxHQUFHLENBQUNDLFFBQVEsQ0FBQ1UsVUFBVSxDQUFDQyxJQUFJLENBQUMsbUVBQW1FLENBQUM7d0JBQ3RLQyxLQUFLLEdBQUVmLHNEQUFBQSxLQUFLRSxHQUFHLENBQUNDLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDSyxrQkFBa0IsY0FBbERULDJFQUFBQSwyREFBQUEsb0RBQW9ESyxJQUFJLGNBQXhETCwrRUFBQUEseURBQTBEZ0IsVUFBVTt3QkFDM0VILFlBQVliLEtBQUtFLEdBQUcsQ0FBQ0MsUUFBUSxDQUFDVSxVQUFVO3dCQUN4Q0ksWUFBWSxDQUFDLEVBQUU5QixVQUFVLEVBQUUsRUFBRUMsTUFBTSxDQUFDO29CQUN0QztnQkFDRjtnQkFDQTJCLEtBQUssR0FBRWYsc0RBQUFBLEtBQUtFLEdBQUcsQ0FBQ0MsUUFBUSxDQUFDQyxhQUFhLENBQUNLLGtCQUFrQixjQUFsRFQsMkVBQUFBLDJEQUFBQSxvREFBb0RLLElBQUksY0FBeERMLCtFQUFBQSx5REFBMERkLGVBQWU7O1FBR3RGO0lBQ0Y7QUFDRiJ9