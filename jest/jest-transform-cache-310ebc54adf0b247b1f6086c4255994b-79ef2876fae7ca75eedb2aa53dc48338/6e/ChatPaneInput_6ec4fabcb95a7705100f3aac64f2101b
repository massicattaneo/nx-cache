a08e47792ef132072add12e4f0e396c1
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "ChatPaneInput", {
    enumerable: true,
    get: function() {
        return ChatPaneInput;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _noop = /*#__PURE__*/ _interop_require_default(require("lodash/noop"));
const _settings = require("@rp/common/settings");
const _chat = require("@rp/react/web/chat");
const _core = require("@rp/react/web/mui/core");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function ChatPaneInput({ name, addPrompt, filesIds, hasChat }) {
    const variant = "new";
    const placeholder = `Ask a ${hasChat ? "follow up" : "question"} about ${name || "your files"}`;
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
        sx: {
            position: "relative",
            height: 1,
            px: 2,
            backgroundColor: "elevation.dp01",
            width: "100%",
            zIndex: 1,
            [`& .${_chat.CHAT_INPUT_CONTROLS_CLASS_NAME}`]: {
                left: "8px"
            },
            [`& .${_chat.CHAT_INPUT_HIDDEN_WRAPPER_CLASS_NAME}`]: {
                width: "calc(100% - 32px)"
            },
            [`& #${_settings.CHAT_INPUT_ID}.${_chat.CHAT_INPUT_WRAPPER_CLASS_NAME}, & .${_chat.CHAT_INPUT_HIDDEN_WRAPPER_CLASS_NAME} .${_chat.CHAT_INPUT_WRAPPER_CLASS_NAME}`]: {
                width: "100%",
                minWidth: "100%",
                [`& .${_chat.CHAT_INPUT_CONTAINER_CLASS_NAME}`]: {
                    width: "100%",
                    backgroundColor: "elevation.dp06"
                }
            }
        },
        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
            sx: {
                display: "flex",
                flexDirection: "column",
                gap: 1,
                position: "absolute",
                bottom: 0,
                width: "calc(100% - 32px)",
                [`& .${_chat.SCOPE_DISPLAY_CLASS_NAME}`]: {
                    backgroundColor: "elevation.dp08"
                }
            },
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_chat.ExtendableChatInput, {
                    enableFreeTier: false,
                    filesIds: filesIds,
                    hideControls: [
                        "watchlist",
                        "files",
                        "source"
                    ],
                    location: "filesPage",
                    openScopeSelectorModal: _noop.default,
                    placeholder: placeholder,
                    setFilesIds: _noop.default,
                    setScope: _noop.default,
                    sourceFilter: {},
                    stopGenerating: undefined,
                    submitWatchlistId: _noop.default,
                    variant: variant,
                    watchlistId: undefined,
                    onPromptSubmit: (prompt)=>addPrompt({
                            prompt
                        })
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                    sx: {
                        textAlign: "center",
                        fontSize: 12,
                        color: "grey.300",
                        mb: 2
                    },
                    children: "Bigdata can make mistakes. Please check important info."
                })
            ]
        })
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2FwcHMvY2xpZW50LXdlYi9zcmMvYXBwL3BhZ2VzL0ZpbGVzL0ZpbGVzVjIvY29tcG9uZW50cy9DaGF0UGFuZS9DaGF0UGFuZUlucHV0L0NoYXRQYW5lSW5wdXQudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IG5vb3AgZnJvbSBcImxvZGFzaC9ub29wXCJcbmltcG9ydCB7IENIQVRfSU5QVVRfSUQgfSBmcm9tIFwiQHJwL2NvbW1vbi9zZXR0aW5nc1wiXG5pbXBvcnQge1xuICBDSEFUX0lOUFVUX0NPTlRBSU5FUl9DTEFTU19OQU1FLFxuICBDSEFUX0lOUFVUX0NPTlRST0xTX0NMQVNTX05BTUUsXG4gIENIQVRfSU5QVVRfSElEREVOX1dSQVBQRVJfQ0xBU1NfTkFNRSxcbiAgQ0hBVF9JTlBVVF9XUkFQUEVSX0NMQVNTX05BTUUsXG4gIEV4dGVuZGFibGVDaGF0SW5wdXQsXG4gIFNDT1BFX0RJU1BMQVlfQ0xBU1NfTkFNRSxcbn0gZnJvbSBcIkBycC9yZWFjdC93ZWIvY2hhdFwiXG5pbXBvcnQgeyBBZGRQcm9tcHRQYXJhbXMgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9jaGF0XCJcbmltcG9ydCB7IEJveCwgVHlwb2dyYXBoeSB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL211aS9jb3JlXCJcblxudHlwZSBDaGF0UGFuZUlucHV0UHJvcHMgPSB7XG4gIG5hbWU6IHN0cmluZyB8IHVuZGVmaW5lZFxuICBhZGRQcm9tcHQ6IChwYXJhbXM6IEFkZFByb21wdFBhcmFtcykgPT4gUHJvbWlzZTx2b2lkPlxuICBmaWxlc0lkczogQXJyYXk8c3RyaW5nPlxuICBoYXNDaGF0OiBib29sZWFuXG59XG5cbmZ1bmN0aW9uIENoYXRQYW5lSW5wdXQoeyBuYW1lLCBhZGRQcm9tcHQsIGZpbGVzSWRzLCBoYXNDaGF0IH06IENoYXRQYW5lSW5wdXRQcm9wcykge1xuICBjb25zdCB2YXJpYW50ID0gXCJuZXdcIlxuICBjb25zdCBwbGFjZWhvbGRlciA9IGBBc2sgYSAke2hhc0NoYXQgPyBcImZvbGxvdyB1cFwiIDogXCJxdWVzdGlvblwifSBhYm91dCAke25hbWUgfHwgXCJ5b3VyIGZpbGVzXCJ9YFxuXG4gIHJldHVybiAoXG4gICAgPEJveFxuICAgICAgc3g9e3tcbiAgICAgICAgcG9zaXRpb246IFwicmVsYXRpdmVcIixcbiAgICAgICAgaGVpZ2h0OiAxLFxuICAgICAgICBweDogMixcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiBcImVsZXZhdGlvbi5kcDAxXCIsXG4gICAgICAgIHdpZHRoOiBcIjEwMCVcIixcbiAgICAgICAgekluZGV4OiAxLFxuICAgICAgICBbYCYgLiR7Q0hBVF9JTlBVVF9DT05UUk9MU19DTEFTU19OQU1FfWBdOiB7IGxlZnQ6IFwiOHB4XCIgfSxcbiAgICAgICAgW2AmIC4ke0NIQVRfSU5QVVRfSElEREVOX1dSQVBQRVJfQ0xBU1NfTkFNRX1gXTogeyB3aWR0aDogXCJjYWxjKDEwMCUgLSAzMnB4KVwiIH0sXG4gICAgICAgIFtgJiAjJHtDSEFUX0lOUFVUX0lEfS4ke0NIQVRfSU5QVVRfV1JBUFBFUl9DTEFTU19OQU1FfSwgJiAuJHtDSEFUX0lOUFVUX0hJRERFTl9XUkFQUEVSX0NMQVNTX05BTUV9IC4ke0NIQVRfSU5QVVRfV1JBUFBFUl9DTEFTU19OQU1FfWBdOlxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHdpZHRoOiBcIjEwMCVcIixcbiAgICAgICAgICAgIG1pbldpZHRoOiBcIjEwMCVcIixcbiAgICAgICAgICAgIFtgJiAuJHtDSEFUX0lOUFVUX0NPTlRBSU5FUl9DTEFTU19OQU1FfWBdOiB7XG4gICAgICAgICAgICAgIHdpZHRoOiBcIjEwMCVcIixcbiAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBcImVsZXZhdGlvbi5kcDA2XCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIH0sXG4gICAgICB9fVxuICAgID5cbiAgICAgIDxCb3hcbiAgICAgICAgc3g9e3tcbiAgICAgICAgICBkaXNwbGF5OiBcImZsZXhcIixcbiAgICAgICAgICBmbGV4RGlyZWN0aW9uOiBcImNvbHVtblwiLFxuICAgICAgICAgIGdhcDogMSxcbiAgICAgICAgICBwb3NpdGlvbjogXCJhYnNvbHV0ZVwiLFxuICAgICAgICAgIGJvdHRvbTogMCxcbiAgICAgICAgICB3aWR0aDogXCJjYWxjKDEwMCUgLSAzMnB4KVwiLFxuICAgICAgICAgIFtgJiAuJHtTQ09QRV9ESVNQTEFZX0NMQVNTX05BTUV9YF06IHsgYmFja2dyb3VuZENvbG9yOiBcImVsZXZhdGlvbi5kcDA4XCIgfSxcbiAgICAgICAgfX1cbiAgICAgID5cbiAgICAgICAgPEV4dGVuZGFibGVDaGF0SW5wdXRcbiAgICAgICAgICBlbmFibGVGcmVlVGllcj17ZmFsc2V9XG4gICAgICAgICAgZmlsZXNJZHM9e2ZpbGVzSWRzfVxuICAgICAgICAgIGhpZGVDb250cm9scz17W1wid2F0Y2hsaXN0XCIsIFwiZmlsZXNcIiwgXCJzb3VyY2VcIl19XG4gICAgICAgICAgbG9jYXRpb249e1wiZmlsZXNQYWdlXCJ9XG4gICAgICAgICAgb3BlblNjb3BlU2VsZWN0b3JNb2RhbD17bm9vcH1cbiAgICAgICAgICBwbGFjZWhvbGRlcj17cGxhY2Vob2xkZXJ9XG4gICAgICAgICAgc2V0RmlsZXNJZHM9e25vb3B9XG4gICAgICAgICAgc2V0U2NvcGU9e25vb3B9XG4gICAgICAgICAgc291cmNlRmlsdGVyPXt7fX1cbiAgICAgICAgICBzdG9wR2VuZXJhdGluZz17dW5kZWZpbmVkfVxuICAgICAgICAgIHN1Ym1pdFdhdGNobGlzdElkPXtub29wfVxuICAgICAgICAgIHZhcmlhbnQ9e3ZhcmlhbnR9XG4gICAgICAgICAgd2F0Y2hsaXN0SWQ9e3VuZGVmaW5lZH1cbiAgICAgICAgICBvblByb21wdFN1Ym1pdD17cHJvbXB0ID0+XG4gICAgICAgICAgICBhZGRQcm9tcHQoe1xuICAgICAgICAgICAgICBwcm9tcHQsXG4gICAgICAgICAgICAgIC8vIFRPRE86IGltcGxlbWVudCB0aGVzZVxuICAgICAgICAgICAgICAvLyBjdXN0b21UaXRsZTogZ2V0Q3VzdG9tVGl0bGUocHJvbXB0KSxcbiAgICAgICAgICAgICAgLy8gZW50aXRpZXM6IGNoYXRFbnRpdGllcyxcbiAgICAgICAgICAgICAgLy8gaW50ZXJhY3Rpb25UeXBlOiBzaG91bGRDcmVhdGVXYXRjaGxpc3RJbnRlcmFjdGlvbiA/IFwid2F0Y2hsaXN0XCIgOiB1bmRlZmluZWQsXG4gICAgICAgICAgICAgIC8vIHdhdGNobGlzdElkOiB3YXRjaGxpc3QuaWQsXG4gICAgICAgICAgICB9KVxuICAgICAgICAgIH1cbiAgICAgICAgLz5cbiAgICAgICAgPFR5cG9ncmFwaHkgc3g9e3sgdGV4dEFsaWduOiBcImNlbnRlclwiLCBmb250U2l6ZTogMTIsIGNvbG9yOiBcImdyZXkuMzAwXCIsIG1iOiAyIH19PlxuICAgICAgICAgIEJpZ2RhdGEgY2FuIG1ha2UgbWlzdGFrZXMuIFBsZWFzZSBjaGVjayBpbXBvcnRhbnQgaW5mby5cbiAgICAgICAgPC9UeXBvZ3JhcGh5PlxuICAgICAgPC9Cb3g+XG4gICAgPC9Cb3g+XG4gIClcbn1cblxuZXhwb3J0IHsgQ2hhdFBhbmVJbnB1dCB9XG4iXSwibmFtZXMiOlsiQ2hhdFBhbmVJbnB1dCIsIm5hbWUiLCJhZGRQcm9tcHQiLCJmaWxlc0lkcyIsImhhc0NoYXQiLCJ2YXJpYW50IiwicGxhY2Vob2xkZXIiLCJCb3giLCJzeCIsInBvc2l0aW9uIiwiaGVpZ2h0IiwicHgiLCJiYWNrZ3JvdW5kQ29sb3IiLCJ3aWR0aCIsInpJbmRleCIsIkNIQVRfSU5QVVRfQ09OVFJPTFNfQ0xBU1NfTkFNRSIsImxlZnQiLCJDSEFUX0lOUFVUX0hJRERFTl9XUkFQUEVSX0NMQVNTX05BTUUiLCJDSEFUX0lOUFVUX0lEIiwiQ0hBVF9JTlBVVF9XUkFQUEVSX0NMQVNTX05BTUUiLCJtaW5XaWR0aCIsIkNIQVRfSU5QVVRfQ09OVEFJTkVSX0NMQVNTX05BTUUiLCJkaXNwbGF5IiwiZmxleERpcmVjdGlvbiIsImdhcCIsImJvdHRvbSIsIlNDT1BFX0RJU1BMQVlfQ0xBU1NfTkFNRSIsIkV4dGVuZGFibGVDaGF0SW5wdXQiLCJlbmFibGVGcmVlVGllciIsImhpZGVDb250cm9scyIsImxvY2F0aW9uIiwib3BlblNjb3BlU2VsZWN0b3JNb2RhbCIsIm5vb3AiLCJzZXRGaWxlc0lkcyIsInNldFNjb3BlIiwic291cmNlRmlsdGVyIiwic3RvcEdlbmVyYXRpbmciLCJ1bmRlZmluZWQiLCJzdWJtaXRXYXRjaGxpc3RJZCIsIndhdGNobGlzdElkIiwib25Qcm9tcHRTdWJtaXQiLCJwcm9tcHQiLCJUeXBvZ3JhcGh5IiwidGV4dEFsaWduIiwiZm9udFNpemUiLCJjb2xvciIsIm1iIl0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBMkZTQTs7O2VBQUFBOzs7OzhEQTNGUzs2REFDRDswQkFDYTtzQkFRdkI7c0JBRXlCOzs7Ozs7QUFTaEMsU0FBU0EsY0FBYyxFQUFFQyxJQUFJLEVBQUVDLFNBQVMsRUFBRUMsUUFBUSxFQUFFQyxPQUFPLEVBQXNCO0lBQy9FLE1BQU1DLFVBQVU7SUFDaEIsTUFBTUMsY0FBYyxDQUFDLE1BQU0sRUFBRUYsVUFBVSxjQUFjLFdBQVcsT0FBTyxFQUFFSCxRQUFRLGFBQWEsQ0FBQztJQUUvRixxQkFDRSxxQkFBQ00sU0FBRztRQUNGQyxJQUFJO1lBQ0ZDLFVBQVU7WUFDVkMsUUFBUTtZQUNSQyxJQUFJO1lBQ0pDLGlCQUFpQjtZQUNqQkMsT0FBTztZQUNQQyxRQUFRO1lBQ1IsQ0FBQyxDQUFDLEdBQUcsRUFBRUMsb0NBQThCLENBQUMsQ0FBQyxDQUFDLEVBQUU7Z0JBQUVDLE1BQU07WUFBTTtZQUN4RCxDQUFDLENBQUMsR0FBRyxFQUFFQywwQ0FBb0MsQ0FBQyxDQUFDLENBQUMsRUFBRTtnQkFBRUosT0FBTztZQUFvQjtZQUM3RSxDQUFDLENBQUMsR0FBRyxFQUFFSyx1QkFBYSxDQUFDLENBQUMsRUFBRUMsbUNBQTZCLENBQUMsS0FBSyxFQUFFRiwwQ0FBb0MsQ0FBQyxFQUFFLEVBQUVFLG1DQUE2QixDQUFDLENBQUMsQ0FBQyxFQUNwSTtnQkFDRU4sT0FBTztnQkFDUE8sVUFBVTtnQkFDVixDQUFDLENBQUMsR0FBRyxFQUFFQyxxQ0FBK0IsQ0FBQyxDQUFDLENBQUMsRUFBRTtvQkFDekNSLE9BQU87b0JBQ1BELGlCQUFpQjtnQkFDbkI7WUFDRjtRQUNKO2tCQUVBLGNBQUEsc0JBQUNMLFNBQUc7WUFDRkMsSUFBSTtnQkFDRmMsU0FBUztnQkFDVEMsZUFBZTtnQkFDZkMsS0FBSztnQkFDTGYsVUFBVTtnQkFDVmdCLFFBQVE7Z0JBQ1JaLE9BQU87Z0JBQ1AsQ0FBQyxDQUFDLEdBQUcsRUFBRWEsOEJBQXdCLENBQUMsQ0FBQyxDQUFDLEVBQUU7b0JBQUVkLGlCQUFpQjtnQkFBaUI7WUFDMUU7OzhCQUVBLHFCQUFDZSx5QkFBbUI7b0JBQ2xCQyxnQkFBZ0I7b0JBQ2hCekIsVUFBVUE7b0JBQ1YwQixjQUFjO3dCQUFDO3dCQUFhO3dCQUFTO3FCQUFTO29CQUM5Q0MsVUFBVTtvQkFDVkMsd0JBQXdCQyxhQUFJO29CQUM1QjFCLGFBQWFBO29CQUNiMkIsYUFBYUQsYUFBSTtvQkFDakJFLFVBQVVGLGFBQUk7b0JBQ2RHLGNBQWMsQ0FBQztvQkFDZkMsZ0JBQWdCQztvQkFDaEJDLG1CQUFtQk4sYUFBSTtvQkFDdkIzQixTQUFTQTtvQkFDVGtDLGFBQWFGO29CQUNiRyxnQkFBZ0JDLENBQUFBLFNBQ2R2QyxVQUFVOzRCQUNSdUM7d0JBTUY7OzhCQUdKLHFCQUFDQyxnQkFBVTtvQkFBQ2xDLElBQUk7d0JBQUVtQyxXQUFXO3dCQUFVQyxVQUFVO3dCQUFJQyxPQUFPO3dCQUFZQyxJQUFJO29CQUFFOzhCQUFHOzs7OztBQU16RiJ9