{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/development/src/lib/trpc/bigdata-api/procedures/briefs-procedures.ts"],"sourcesContent":["import { z } from \"zod\"\nimport { bigdataSchemas } from \"@rp/common/contracts\"\nimport { TRPCError } from \"@trpc/server\"\nimport { generateBrief, generateReport } from \"../../../database\"\nimport { bigdataApiProcedure } from \"../bigdata-api-procedure\"\n\nconst createInputSchema = z.object({\n  brief_name: z.string(),\n  watchlist_ids: z.array(z.string()),\n  email: z.string(),\n  delivery_modes: z.array(bigdataSchemas.st_briefs_DeliveryDestination),\n  schedule: bigdataSchemas.st_briefs_Schedule,\n})\n\nexport const briefsProcedures = {\n  list: bigdataApiProcedure\n    .meta({ openapi: { method: \"GET\", path: \"/briefs\" } })\n    .input(z.object({}))\n    .output(bigdataSchemas.st_briefs_ListBriefConfigsResponse_Input)\n    .query(async ({ ctx }) => {\n      return { results: await ctx.db.collection(\"briefs\").find() }\n    }),\n  get: bigdataApiProcedure\n    .meta({ openapi: { method: \"GET\", path: \"/briefs/:id\" } })\n    .input(z.object({ id: z.string() }))\n    .output(bigdataSchemas.st_briefs_BriefConfigResponse_Input)\n    .query(async ({ ctx, input }) => {\n      const found = await ctx.db.collection(\"briefs\").findOne({ id: input.id })\n      if (!found) throw new TRPCError({ code: \"NOT_FOUND\" })\n      return found\n    }),\n  latest: bigdataApiProcedure\n    .meta({ openapi: { method: \"GET\", path: \"/briefs/:id/reports/latest\" } })\n    .input(z.object({ id: z.string() }))\n    .output(bigdataSchemas.st_briefs_LatestBriefReportResponse_Input)\n    .query(async ({ ctx, input }) => {\n      const brief = await ctx.db.collection(\"briefs\").findOne({ id: input.id })\n      if (!brief) throw new TRPCError({ code: \"NOT_FOUND\" })\n      const [watchlistId] = brief.watchlistIds\n      const watchlist = await ctx.db.collection(\"watchlists\").findOne({ id: watchlistId })\n      if (!watchlist) throw new TRPCError({ code: \"NOT_FOUND\" })\n      const entities = (\n        await ctx.db.collection(\"cqs\").find(item => watchlist.items.includes(item.key))\n      ).map(item => ({ ...item, id: item.key }))\n      return generateReport({\n        watchlist,\n        brief,\n        entities,\n      })\n    }),\n  create: bigdataApiProcedure\n    .meta({ openapi: { method: \"POST\", path: \"/briefs\" } })\n    .input(createInputSchema)\n    .output(bigdataSchemas.st_briefs_BriefConfigResponse_Input)\n    .mutation(async ({ ctx, input }) => {\n      return ctx.db.collection(\"briefs\").insertOne(\n        generateBrief({\n          briefName: input.brief_name,\n          watchlistIds: input.watchlist_ids,\n          ...input,\n        }),\n      )\n    }),\n  update: bigdataApiProcedure\n    .meta({ openapi: { method: \"PUT\", path: \"/briefs/:id\" } })\n    .input(z.object({ id: z.string() }).merge(createInputSchema))\n    .output(bigdataSchemas.st_briefs_BriefConfigResponse_Input)\n    .mutation(async ({ ctx, input }) => {\n      const found = await ctx.db.collection(\"briefs\").updateOne(\n        { id: input.id },\n        {\n          briefName: input.brief_name,\n          watchlistIds: input.watchlist_ids,\n          ...input,\n        },\n      )\n      if (!found) throw new TRPCError({ code: \"NOT_FOUND\" })\n      return found\n    }),\n  delete: bigdataApiProcedure\n    .meta({ openapi: { method: \"DELETE\", path: \"/briefs/:id\" } })\n    .input(z.object({ id: z.string() }))\n    .output(z.null())\n    .mutation(async ({ ctx, input }) => {\n      const found = await ctx.db.collection(\"briefs\").deleteOne({ id: input.id })\n      if (!found) throw new TRPCError({ code: \"NOT_FOUND\" })\n      return null\n    }),\n}\n"],"names":["briefsProcedures","createInputSchema","z","object","brief_name","string","watchlist_ids","array","email","delivery_modes","bigdataSchemas","st_briefs_DeliveryDestination","schedule","st_briefs_Schedule","list","bigdataApiProcedure","meta","openapi","method","path","input","output","st_briefs_ListBriefConfigsResponse_Input","query","ctx","results","db","collection","find","get","id","st_briefs_BriefConfigResponse_Input","found","findOne","TRPCError","code","latest","st_briefs_LatestBriefReportResponse_Input","brief","watchlistId","watchlistIds","watchlist","entities","item","items","includes","key","map","generateReport","create","mutation","insertOne","generateBrief","briefName","update","merge","updateOne","delete","null","deleteOne"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAcaA;;;eAAAA;;;qBAdK;2BACa;wBACL;0BACoB;qCACV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEpC,MAAMC,oBAAoBC,MAAC,CAACC,MAAM,CAAC;IACjCC,YAAYF,MAAC,CAACG,MAAM;IACpBC,eAAeJ,MAAC,CAACK,KAAK,CAACL,MAAC,CAACG,MAAM;IAC/BG,OAAON,MAAC,CAACG,MAAM;IACfI,gBAAgBP,MAAC,CAACK,KAAK,CAACG,yBAAc,CAACC,6BAA6B;IACpEC,UAAUF,yBAAc,CAACG,kBAAkB;AAC7C;AAEO,MAAMb,mBAAmB;IAC9Bc,MAAMC,wCAAmB,CACtBC,IAAI,CAAC;QAAEC,SAAS;YAAEC,QAAQ;YAAOC,MAAM;QAAU;IAAE,GACnDC,KAAK,CAAClB,MAAC,CAACC,MAAM,CAAC,CAAC,IAChBkB,MAAM,CAACX,yBAAc,CAACY,wCAAwC,EAC9DC,KAAK,CAAC,OAAO,EAAEC,GAAG,EAAE;QACnB,OAAO;YAAEC,SAAS,MAAMD,IAAIE,EAAE,CAACC,UAAU,CAAC,UAAUC,IAAI;QAAG;IAC7D;IACFC,KAAKd,wCAAmB,CACrBC,IAAI,CAAC;QAAEC,SAAS;YAAEC,QAAQ;YAAOC,MAAM;QAAc;IAAE,GACvDC,KAAK,CAAClB,MAAC,CAACC,MAAM,CAAC;QAAE2B,IAAI5B,MAAC,CAACG,MAAM;IAAG,IAChCgB,MAAM,CAACX,yBAAc,CAACqB,mCAAmC,EACzDR,KAAK,CAAC,OAAO,EAAEC,GAAG,EAAEJ,KAAK,EAAE;QAC1B,MAAMY,QAAQ,MAAMR,IAAIE,EAAE,CAACC,UAAU,CAAC,UAAUM,OAAO,CAAC;YAAEH,IAAIV,MAAMU,EAAE;QAAC;QACvE,IAAI,CAACE,OAAO,MAAM,IAAIE,iBAAS,CAAC;YAAEC,MAAM;QAAY;QACpD,OAAOH;IACT;IACFI,QAAQrB,wCAAmB,CACxBC,IAAI,CAAC;QAAEC,SAAS;YAAEC,QAAQ;YAAOC,MAAM;QAA6B;IAAE,GACtEC,KAAK,CAAClB,MAAC,CAACC,MAAM,CAAC;QAAE2B,IAAI5B,MAAC,CAACG,MAAM;IAAG,IAChCgB,MAAM,CAACX,yBAAc,CAAC2B,yCAAyC,EAC/Dd,KAAK,CAAC,OAAO,EAAEC,GAAG,EAAEJ,KAAK,EAAE;QAC1B,MAAMkB,QAAQ,MAAMd,IAAIE,EAAE,CAACC,UAAU,CAAC,UAAUM,OAAO,CAAC;YAAEH,IAAIV,MAAMU,EAAE;QAAC;QACvE,IAAI,CAACQ,OAAO,MAAM,IAAIJ,iBAAS,CAAC;YAAEC,MAAM;QAAY;QACpD,MAAM,CAACI,YAAY,GAAGD,MAAME,YAAY;QACxC,MAAMC,YAAY,MAAMjB,IAAIE,EAAE,CAACC,UAAU,CAAC,cAAcM,OAAO,CAAC;YAAEH,IAAIS;QAAY;QAClF,IAAI,CAACE,WAAW,MAAM,IAAIP,iBAAS,CAAC;YAAEC,MAAM;QAAY;QACxD,MAAMO,WAAW,AACf,CAAA,MAAMlB,IAAIE,EAAE,CAACC,UAAU,CAAC,OAAOC,IAAI,CAACe,CAAAA,OAAQF,UAAUG,KAAK,CAACC,QAAQ,CAACF,KAAKG,GAAG,EAAC,EAC9EC,GAAG,CAACJ,CAAAA,OAAS,wCAAKA;gBAAMb,IAAIa,KAAKG,GAAG;;QACtC,OAAOE,IAAAA,wBAAc,EAAC;YACpBP;YACAH;YACAI;QACF;IACF;IACFO,QAAQlC,wCAAmB,CACxBC,IAAI,CAAC;QAAEC,SAAS;YAAEC,QAAQ;YAAQC,MAAM;QAAU;IAAE,GACpDC,KAAK,CAACnB,mBACNoB,MAAM,CAACX,yBAAc,CAACqB,mCAAmC,EACzDmB,QAAQ,CAAC,OAAO,EAAE1B,GAAG,EAAEJ,KAAK,EAAE;QAC7B,OAAOI,IAAIE,EAAE,CAACC,UAAU,CAAC,UAAUwB,SAAS,CAC1CC,IAAAA,uBAAa,EAAC;YACZC,WAAWjC,MAAMhB,UAAU;YAC3BoC,cAAcpB,MAAMd,aAAa;WAC9Bc;IAGT;IACFkC,QAAQvC,wCAAmB,CACxBC,IAAI,CAAC;QAAEC,SAAS;YAAEC,QAAQ;YAAOC,MAAM;QAAc;IAAE,GACvDC,KAAK,CAAClB,MAAC,CAACC,MAAM,CAAC;QAAE2B,IAAI5B,MAAC,CAACG,MAAM;IAAG,GAAGkD,KAAK,CAACtD,oBACzCoB,MAAM,CAACX,yBAAc,CAACqB,mCAAmC,EACzDmB,QAAQ,CAAC,OAAO,EAAE1B,GAAG,EAAEJ,KAAK,EAAE;QAC7B,MAAMY,QAAQ,MAAMR,IAAIE,EAAE,CAACC,UAAU,CAAC,UAAU6B,SAAS,CACvD;YAAE1B,IAAIV,MAAMU,EAAE;QAAC,GACf;YACEuB,WAAWjC,MAAMhB,UAAU;YAC3BoC,cAAcpB,MAAMd,aAAa;WAC9Bc;QAGP,IAAI,CAACY,OAAO,MAAM,IAAIE,iBAAS,CAAC;YAAEC,MAAM;QAAY;QACpD,OAAOH;IACT;IACFyB,QAAQ1C,wCAAmB,CACxBC,IAAI,CAAC;QAAEC,SAAS;YAAEC,QAAQ;YAAUC,MAAM;QAAc;IAAE,GAC1DC,KAAK,CAAClB,MAAC,CAACC,MAAM,CAAC;QAAE2B,IAAI5B,MAAC,CAACG,MAAM;IAAG,IAChCgB,MAAM,CAACnB,MAAC,CAACwD,IAAI,IACbR,QAAQ,CAAC,OAAO,EAAE1B,GAAG,EAAEJ,KAAK,EAAE;QAC7B,MAAMY,QAAQ,MAAMR,IAAIE,EAAE,CAACC,UAAU,CAAC,UAAUgC,SAAS,CAAC;YAAE7B,IAAIV,MAAMU,EAAE;QAAC;QACzE,IAAI,CAACE,OAAO,MAAM,IAAIE,iBAAS,CAAC;YAAEC,MAAM;QAAY;QACpD,OAAO;IACT;AACJ"}