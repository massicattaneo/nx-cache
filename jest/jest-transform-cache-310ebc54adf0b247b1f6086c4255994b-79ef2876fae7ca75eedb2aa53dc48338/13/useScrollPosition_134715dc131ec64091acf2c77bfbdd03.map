{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/hooks/src/useScrollPosition.ts"],"sourcesContent":["import { useEffect } from \"react\"\nimport { useDebouncedState } from \"@rp/react/common/hooks\"\n\ntype Props = {\n  scrollContainer?: Window | HTMLElement | null\n}\n\nexport const useScrollPosition = ({ scrollContainer = window }: Props) => {\n  const [isScrolledToBottom, setIsScrolledToBottom] = useDebouncedState(true, 200)\n\n  useEffect(() => {\n    const onScroll = () => {\n      if (scrollContainer instanceof Window) {\n        // TODO\n      } else if (scrollContainer) {\n        const bool =\n          scrollContainer.scrollHeight - scrollContainer.scrollTop === scrollContainer.clientHeight\n        setIsScrolledToBottom(bool)\n      }\n    }\n    scrollContainer?.addEventListener(\"scroll\", onScroll)\n    return () => {\n      scrollContainer?.removeEventListener(\"scroll\", onScroll)\n    }\n  }, [scrollContainer, setIsScrolledToBottom])\n\n  return { isScrolledToBottom }\n}\n"],"names":["useScrollPosition","scrollContainer","window","isScrolledToBottom","setIsScrolledToBottom","useDebouncedState","useEffect","onScroll","Window","bool","scrollHeight","scrollTop","clientHeight","addEventListener","removeEventListener"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAOaA;;;eAAAA;;;uBAPa;uBACQ;AAM3B,MAAMA,oBAAoB,CAAC,EAAEC,kBAAkBC,MAAM,EAAS;IACnE,MAAM,CAACC,oBAAoBC,sBAAsB,GAAGC,IAAAA,wBAAiB,EAAC,MAAM;IAE5EC,IAAAA,gBAAS,EAAC;QACR,MAAMC,WAAW;YACf,IAAIN,2BAA2BO,QAAQ;YACrC,OAAO;YACT,OAAO,IAAIP,iBAAiB;gBAC1B,MAAMQ,OACJR,gBAAgBS,YAAY,GAAGT,gBAAgBU,SAAS,KAAKV,gBAAgBW,YAAY;gBAC3FR,sBAAsBK;YACxB;QACF;QACAR,4BAAAA,sCAAAA,gBAAiBY,gBAAgB,CAAC,UAAUN;QAC5C,OAAO;YACLN,4BAAAA,sCAAAA,gBAAiBa,mBAAmB,CAAC,UAAUP;QACjD;IACF,GAAG;QAACN;QAAiBG;KAAsB;IAE3C,OAAO;QAAED;IAAmB;AAC9B"}