{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/apps/client-web/src/app/pages/SignUp/SignUpPage.test.tsx"],"sourcesContent":["import { MemoryRouter, Route, Routes } from \"react-router-dom\"\nimport { useSignUp } from \"@clerk/clerk-react\"\nimport { useSnackbar } from \"@rp/react/web/common/providers\"\nimport { renderWithProviders } from \"@rp/react/web/common/tools\"\nimport { fireEvent, screen, waitFor } from \"@testing-library/react\"\nimport { SignUpPage } from \"./SignUpPage\"\n\nconst useSnackbarMock = useSnackbar as jest.Mock\n\nconst create = jest.fn()\nconst update = jest.fn()\nconst prepareEmailAddressVerification = jest.fn()\nconst attemptEmailAddressVerification = jest.fn()\n\nconst mockUseSignUp = useSignUp as jest.Mock\n\njest.mock(\"@rp/react/web/common/providers\", () => ({\n  ...jest.requireActual(\"@rp/react/web/common/providers\"),\n  useSnackbar: jest.fn(),\n}))\n\nconst mockGeneratedUUID = \"mock-generated-uuid\"\njest.mock(\"uuid\", () => ({\n  v4: () => mockGeneratedUUID,\n}))\n\nconst email = \"test@ravenpack.com\"\nconst password = \"aaaSSSdddFFF1!\"\n\nconst signUp = {\n  create,\n  update,\n  prepareEmailAddressVerification,\n  attemptEmailAddressVerification,\n}\n\nconst setActive = jest.fn()\n\ndescribe(\"Sign Up\", () => {\n  useSnackbarMock.mockReturnValue({ enqueueSuccess: jest.fn(), enqueueError: jest.fn() })\n\n  it(\"should render page\", () => {\n    mockUseSignUp.mockReturnValue({ isLoaded: true, signUp, setActive })\n    const { getByRole } = renderWithProviders(<SignUpPage />)\n\n    expect(getByRole(\"button\", { name: \"Continue\" })).toBeInTheDocument()\n  })\n\n  it(\"should handle success\", async () => {\n    mockUseSignUp.mockReturnValue({ isLoaded: true, signUp, setActive })\n    const { getByRole, getByLabelText, rerender } = renderWithProviders(<SignUpPage />)\n\n    const emailInput = getByLabelText(/email/i)\n    expect(emailInput).toBeInTheDocument()\n    expect(emailInput).toHaveValue(\"\")\n\n    const submitButton = getByRole(\"button\", { name: \"Continue\" })\n    expect(submitButton).toBeInTheDocument()\n\n    fireEvent.change(emailInput, { target: { value: email } })\n    fireEvent.click(submitButton)\n    await waitFor(() => {})\n\n    rerender(<SignUpPage />)\n\n    const nameInput = getByLabelText(/first name/i)\n    expect(nameInput).toBeInTheDocument()\n    expect(nameInput).toHaveValue(\"\")\n\n    const lastNameInput = getByLabelText(/last name/i)\n    expect(lastNameInput).toBeInTheDocument()\n    expect(lastNameInput).toHaveValue(\"\")\n\n    const passwordInput = getByLabelText(/password/i)\n    expect(passwordInput).toBeInTheDocument()\n    expect(passwordInput).toHaveValue(\"\")\n\n    const termsCheckbox = getByLabelText(/i agree/i)\n    expect(termsCheckbox).toBeInTheDocument()\n\n    const continueButton = getByRole(\"button\", { name: /create account/i })\n    expect(continueButton).toBeInTheDocument()\n\n    fireEvent.change(nameInput, { target: { value: \"John\" } })\n    fireEvent.change(lastNameInput, { target: { value: \"Doe\" } })\n    fireEvent.change(passwordInput, { target: { value: password } })\n    fireEvent.click(termsCheckbox)\n    fireEvent.click(continueButton)\n    await waitFor(() => {})\n\n    expect(prepareEmailAddressVerification).toBeCalledWith({ strategy: \"email_code\" })\n\n    rerender(<SignUpPage />)\n\n    const verify = getByRole(\"button\", { name: /verify/i })\n    expect(verify).toBeInTheDocument()\n\n    const codeInput = getByLabelText(/verification code/i)\n    expect(codeInput).toBeInTheDocument()\n    expect(codeInput).toHaveValue(\"\")\n\n    attemptEmailAddressVerification.mockReturnValue({ status: \"complete\", createdSessionId: \"123\" })\n\n    fireEvent.change(codeInput, { target: { value: \"123456\" } })\n    fireEvent.click(verify)\n\n    await waitFor(() => {\n      expect(attemptEmailAddressVerification).toBeCalledWith({ code: \"123456\" })\n      expect(setActive).toBeCalledWith({ session: \"123\" })\n    })\n  })\n\n  it(\"should redirect to confirmation page after entering details\", async () => {\n    mockUseSignUp.mockReturnValue({ isLoaded: true, signUp, setActive })\n    const { getByRole, getByLabelText, rerender } = renderWithProviders(<SignUpPage />)\n\n    const emailInput = getByLabelText(/email/i)\n    expect(emailInput).toBeInTheDocument()\n    expect(emailInput).toHaveValue(\"\")\n\n    const submitButton = getByRole(\"button\", { name: \"Continue\" })\n    expect(submitButton).toBeInTheDocument()\n\n    fireEvent.change(emailInput, { target: { value: email } })\n    fireEvent.click(submitButton)\n    await waitFor(() => {})\n\n    rerender(<SignUpPage />)\n\n    const nameInput = getByLabelText(/first name/i)\n    const lastNameInput = getByLabelText(/last name/i)\n    const passwordInput = getByLabelText(/password/i)\n\n    fireEvent.change(nameInput, { target: { value: \"John\" } })\n    fireEvent.change(lastNameInput, { target: { value: \"Doe\" } })\n    fireEvent.change(passwordInput, { target: { value: password } })\n    fireEvent.click(getByRole(\"button\", { name: /Create Account/i }))\n    await waitFor(() => {})\n  })\n\n  it(\"should redirect to invitation page when __clerk_ticket is present in URL\", async () => {\n    mockUseSignUp.mockReturnValue({ isLoaded: true, signUp, setActive })\n\n    const ui = (\n      <MemoryRouter initialEntries={[\"/signup?__clerk_ticket=test-ticket&otherParam=value\"]}>\n        <Routes>\n          <Route path=\"/signup\" element={<SignUpPage />} />\n          <Route\n            path=\"/invitation\"\n            element={<div data-testid=\"invitation-page\">Invitation Page</div>}\n          />\n        </Routes>\n      </MemoryRouter>\n    )\n\n    renderWithProviders(ui, {}, false)\n    const invitationPage = screen.getByTestId(\"invitation-page\")\n    expect(invitationPage).toBeInTheDocument()\n    expect(invitationPage.textContent).toBe(\"Invitation Page\")\n  })\n})\n"],"names":["jest","mock","requireActual","useSnackbar","fn","v4","mockGeneratedUUID","useSnackbarMock","create","update","prepareEmailAddressVerification","attemptEmailAddressVerification","mockUseSignUp","useSignUp","email","password","signUp","setActive","describe","mockReturnValue","enqueueSuccess","enqueueError","it","isLoaded","getByRole","renderWithProviders","SignUpPage","expect","name","toBeInTheDocument","getByLabelText","rerender","emailInput","toHaveValue","submitButton","fireEvent","change","target","value","click","waitFor","nameInput","lastNameInput","passwordInput","termsCheckbox","continueButton","toBeCalledWith","strategy","verify","codeInput","status","createdSessionId","code","session","ui","MemoryRouter","initialEntries","Routes","Route","path","element","div","data-testid","invitationPage","screen","getByTestId","textContent","toBe"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}