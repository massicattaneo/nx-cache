{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/document-viewer/src/lib/hooks/useDocumentMatches.ts"],"sourcesContent":["import { useMemo } from \"react\"\nimport {\n  CqsChunk,\n  CqsQueryChunksPostResponse,\n  CqsQueryPostResponse,\n  CqsQueryScopeEnum,\n  CqsSearchQuery,\n  CqsStorySentence,\n} from \"@rp/common/api-types\"\nimport { DEFAULT_QUERY_LIMIT } from \"@rp/common/settings\"\nimport { QUERY_KEY_FEATURE_FLAG } from \"@rp/common/settings\"\nimport { axiosClient } from \"@rp/react/axios-client\"\nimport { DEFAULT_EXPRESSION } from \"@rp/react/web/cqs-utils\"\nimport { QueryFunctionContext, keepPreviousData, useQuery } from \"@tanstack/react-query\"\n\nconst matchesPreviewKey = (key: string, search?: CqsSearchQuery, documentId?: string) =>\n  [QUERY_KEY_FEATURE_FLAG, key, search, documentId] as const\n\ntype DocumentFetchParams = QueryFunctionContext<ReturnType<typeof matchesPreviewKey>>\n\nfunction buildDocumentQuery(search: CqsSearchQuery, documentId: string): CqsSearchQuery {\n  return {\n    ...search,\n    expression: {\n      type: \"and\",\n      value: [\n        search.expression ?? DEFAULT_EXPRESSION,\n        { type: \"document\", operation: \"in\", value: [documentId] },\n      ],\n    },\n    pagination: { limit: DEFAULT_QUERY_LIMIT },\n    hybrid: true,\n  }\n}\n\nconst fetchDocumentMatches = async ({ queryKey }: DocumentFetchParams) => {\n  const [, , search, documentId] = queryKey\n  if (search === undefined || documentId === undefined) return\n  const query = buildDocumentQuery(search, documentId)\n  const { data } = await axiosClient.post<CqsQueryPostResponse>(\"/cqs/query\", query)\n  return data\n}\n\nconst fetchDocumentChunks = async ({ queryKey }: DocumentFetchParams) => {\n  const [, , search, documentId] = queryKey\n  if (search === undefined || documentId === undefined) return\n  const query = buildDocumentQuery(search, documentId)\n  const { data } = await axiosClient.post<CqsQueryChunksPostResponse>(\"/cqs/query-chunks\", query)\n  return data\n}\n\nconst useDocumentMatches = (query?: CqsSearchQuery, documentId?: string, enabled = true) => {\n  const expression = query?.expression ?? DEFAULT_EXPRESSION\n\n  const result = useQuery({\n    queryKey: matchesPreviewKey(\n      \"rpjson-document-matches\",\n      {\n        ...query,\n        expression,\n        scope: CqsQueryScopeEnum.All,\n      },\n      documentId,\n    ),\n    queryFn: fetchDocumentMatches,\n    placeholderData: keepPreviousData,\n    staleTime: Infinity,\n    refetchOnWindowFocus: false,\n    enabled: !!documentId && !!query && enabled,\n  })\n\n  const mostRelevantSentence = result.data?.stories[0]?.sentences[0]\n  // Sort sentences by pnum and snum\n  const sortedSentences: Array<CqsStorySentence> = useMemo(\n    () => (result.data?.stories[0] ? [...result.data.stories[0].sentences] : []),\n    [result.data?.stories],\n  )\n\n  sortedSentences.sort((a, b) => {\n    if (a.pnum < b.pnum) {\n      return -1\n    }\n    if (a.pnum > b.pnum) {\n      return 1\n    }\n    if (a.snum < b.snum) {\n      return -1\n    }\n    if (a.snum > b.snum) {\n      return 1\n    }\n    return 0\n  })\n  const initialIndex = mostRelevantSentence\n    ? sortedSentences.findIndex(\n        sentence =>\n          sentence.pnum === mostRelevantSentence.pnum &&\n          sentence.snum === mostRelevantSentence.snum,\n      )\n    : 0\n\n  return {\n    count: sortedSentences.length, // TODO: check with BE why result.data.count is not right\n    sentences: sortedSentences,\n    initialIndex,\n    isLoading: result.isLoading,\n    isFetching: result.isFetching,\n  }\n}\nconst useDocumentChunks = (query?: CqsSearchQuery, documentId?: string, enabled = true) => {\n  const expression = query?.expression ?? DEFAULT_EXPRESSION\n\n  const result = useQuery({\n    queryKey: matchesPreviewKey(\n      \"rpjson-document-chunks\",\n      {\n        ...query,\n        expression,\n        scope: CqsQueryScopeEnum.All,\n      },\n      documentId,\n    ),\n    queryFn: fetchDocumentChunks,\n    placeholderData: keepPreviousData,\n    staleTime: Infinity,\n    refetchOnWindowFocus: false,\n    enabled: !!documentId && !!query && enabled,\n  })\n\n  // Sort sentences by pnum and snum\n  const sortedChunks: Array<CqsChunk> = useMemo(\n    () => (result.data?.stories[0] ? [...result.data.stories[0].chunks] : []),\n    [result.data?.stories],\n  )\n\n  return {\n    count: sortedChunks.length, // TODO: check with BE why result.data.count is not right\n    chunks: sortedChunks,\n    initialIndex: 0,\n    isLoading: result.isLoading,\n    isFetching: result.isFetching,\n  }\n}\n\nexport { useDocumentMatches, useDocumentChunks, matchesPreviewKey }\n"],"names":["matchesPreviewKey","useDocumentChunks","useDocumentMatches","key","search","documentId","QUERY_KEY_FEATURE_FLAG","buildDocumentQuery","expression","type","value","DEFAULT_EXPRESSION","operation","pagination","limit","DEFAULT_QUERY_LIMIT","hybrid","fetchDocumentMatches","queryKey","undefined","query","data","axiosClient","post","fetchDocumentChunks","enabled","result","useQuery","scope","CqsQueryScopeEnum","All","queryFn","placeholderData","keepPreviousData","staleTime","Infinity","refetchOnWindowFocus","mostRelevantSentence","stories","sentences","sortedSentences","useMemo","sort","a","b","pnum","snum","initialIndex","findIndex","sentence","count","length","isLoading","isFetching","sortedChunks","chunks"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}