{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/node_modules/swiper/modules/effect-flip/effect-flip.js"],"sourcesContent":["import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectFlip({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true\n    }\n  });\n  const createSlideShadows = (slideEl, progress, params) => {\n    let shadowBefore = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    let shadowAfter = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n    if (!shadowBefore) {\n      shadowBefore = createShadow(params, slideEl, swiper.isHorizontal() ? 'left' : 'top');\n    }\n    if (!shadowAfter) {\n      shadowAfter = createShadow(params, slideEl, swiper.isHorizontal() ? 'right' : 'bottom');\n    }\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // Set shadows\n    const params = swiper.params.flipEffect;\n    swiper.slides.forEach(slideEl => {\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      createSlideShadows(slideEl, progress, params);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      rtlTranslate: rtl\n    } = swiper;\n    const params = swiper.params.flipEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress, params);\n      }\n      const transform = `translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'flip',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.flipEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}"],"names":["EffectFlip","swiper","extendParams","on","flipEffect","slideShadows","limitRotation","createSlideShadows","slideEl","progress","params","shadowBefore","isHorizontal","querySelector","shadowAfter","createShadow","style","opacity","Math","max","recreateShadows","slides","forEach","min","setTranslate","rtlTranslate","rtl","i","length","offset","swiperSlideOffset","rotate","rotateY","rotateX","tx","cssMode","translate","ty","zIndex","abs","round","transform","targetEl","effectTarget","setTransition","duration","transformElements","map","getSlideTransformEl","el","transitionDuration","querySelectorAll","shadowEl","effectVirtualTransitionEnd","effectInit","effect","getEffectParams","perspective","overwriteParams","slidesPerView","slidesPerGroup","watchSlidesProgress","spaceBetween","virtualTranslate"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}