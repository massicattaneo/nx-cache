{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/providers/src/useCustomerIOPageView/useCustomerIOPageView.ts"],"sourcesContent":["// useCustomerIOPageViewEvents.ts\nimport { useEffect, useRef } from \"react\"\nimport { useLocation, useParams } from \"react-router-dom\"\nimport { adapters } from \"@rp/adapters\"\nimport { getWatchlistAnalyticsProps } from \"@rp/react/tanstack-api/common\"\nimport { hasPerformedSessionAction } from \"@rp/web/utils\"\nimport { useQueryClient } from \"@tanstack/react-query\"\nimport { useShareContext } from \"../ShareContext\"\nimport { extractRouteParams, toDynamicRoute } from \"./useCustomerIOPageViewUtils\"\n\nexport const useCustomerIOPageViewEvents = () => {\n  const location = useLocation()\n  const params = useParams()\n  const { cameFromLinkPathname } = useShareContext()\n  const queryClient = useQueryClient()\n  const sentFor = useRef<string | null>(null)\n  const pathname = location.pathname\n  const route = toDynamicRoute(pathname, params)\n  const { watchlistId, watchlistChatId } = extractRouteParams(pathname, location.search)\n\n  useEffect(() => {\n    const trackingKey = `${pathname}?watchlistChatId=${watchlistChatId ?? \"\"}`\n    if (sentFor.current === trackingKey) return\n    sentFor.current = trackingKey\n    adapters.customerIo.pageView(undefined, async () => {\n      const sendEvent = hasPerformedSessionAction(\n        \"shared_link_seen\",\n        pathname,\n        cameFromLinkPathname,\n      )\n      const watchlistProps = await getWatchlistAnalyticsProps(watchlistId, queryClient)\n      return {\n        route,\n        ...(sendEvent && { cameFromSharedLink: true }),\n        ...watchlistProps,\n      }\n    })\n  }, [cameFromLinkPathname, pathname, queryClient, route, watchlistChatId, watchlistId])\n}\n"],"names":["useCustomerIOPageViewEvents","location","useLocation","params","useParams","cameFromLinkPathname","useShareContext","queryClient","useQueryClient","sentFor","useRef","pathname","route","toDynamicRoute","watchlistId","watchlistChatId","extractRouteParams","search","useEffect","trackingKey","current","adapters","customerIo","pageView","undefined","sendEvent","hasPerformedSessionAction","watchlistProps","getWatchlistAnalyticsProps","cameFromSharedLink"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA,iCAAiC;;;;;+BAUpBA;;;eAAAA;;;uBATqB;gCACK;0BACd;wBACkB;uBACD;4BACX;8BACC;4CACmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAE5C,MAAMA,8BAA8B;IACzC,MAAMC,WAAWC,IAAAA,2BAAW;IAC5B,MAAMC,SAASC,IAAAA,yBAAS;IACxB,MAAM,EAAEC,oBAAoB,EAAE,GAAGC,IAAAA,6BAAe;IAChD,MAAMC,cAAcC,IAAAA,0BAAc;IAClC,MAAMC,UAAUC,IAAAA,aAAM,EAAgB;IACtC,MAAMC,WAAWV,SAASU,QAAQ;IAClC,MAAMC,QAAQC,IAAAA,0CAAc,EAACF,UAAUR;IACvC,MAAM,EAAEW,WAAW,EAAEC,eAAe,EAAE,GAAGC,IAAAA,8CAAkB,EAACL,UAAUV,SAASgB,MAAM;IAErFC,IAAAA,gBAAS,EAAC;QACR,MAAMC,cAAc,CAAC,EAAER,SAAS,iBAAiB,EAAEI,4BAAAA,6BAAAA,kBAAmB,GAAG,CAAC;QAC1E,IAAIN,QAAQW,OAAO,KAAKD,aAAa;QACrCV,QAAQW,OAAO,GAAGD;QAClBE,kBAAQ,CAACC,UAAU,CAACC,QAAQ,CAACC,WAAW;YACtC,MAAMC,YAAYC,IAAAA,gCAAyB,EACzC,oBACAf,UACAN;YAEF,MAAMsB,iBAAiB,MAAMC,IAAAA,kCAA0B,EAACd,aAAaP;YACrE,OAAO;gBACLK;eACIa,aAAa;gBAAEI,oBAAoB;YAAK,GACzCF;QAEP;IACF,GAAG;QAACtB;QAAsBM;QAAUJ;QAAaK;QAAOG;QAAiBD;KAAY;AACvF"}