8aad38962841da1dd3744a3aef92e005
// useCustomerIOPageViewEvents.ts
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "useCustomerIOPageViewEvents", {
    enumerable: true,
    get: function() {
        return useCustomerIOPageViewEvents;
    }
});
const _react = require("react");
const _reactrouterdom = require("react-router-dom");
const _adapters = require("@rp/adapters");
const _common = require("@rp/react/tanstack-api/common");
const _utils = require("@rp/web/utils");
const _reactquery = require("@tanstack/react-query");
const _ShareContext = require("../ShareContext");
const _useCustomerIOPageViewUtils = require("./useCustomerIOPageViewUtils");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
const useCustomerIOPageViewEvents = ()=>{
    const location = (0, _reactrouterdom.useLocation)();
    const params = (0, _reactrouterdom.useParams)();
    const { cameFromLinkPathname } = (0, _ShareContext.useShareContext)();
    const queryClient = (0, _reactquery.useQueryClient)();
    const sentFor = (0, _react.useRef)(null);
    const pathname = location.pathname;
    const route = (0, _useCustomerIOPageViewUtils.toDynamicRoute)(pathname, params);
    const { watchlistId, watchlistChatId } = (0, _useCustomerIOPageViewUtils.extractRouteParams)(pathname, location.search);
    (0, _react.useEffect)(()=>{
        const trackingKey = `${pathname}?watchlistChatId=${watchlistChatId !== null && watchlistChatId !== void 0 ? watchlistChatId : ""}`;
        if (sentFor.current === trackingKey) return;
        sentFor.current = trackingKey;
        _adapters.adapters.customerIo.pageView(undefined, async ()=>{
            const sendEvent = (0, _utils.hasPerformedSessionAction)("shared_link_seen", pathname, cameFromLinkPathname);
            const watchlistProps = await (0, _common.getWatchlistAnalyticsProps)(watchlistId, queryClient);
            return _object_spread({
                route
            }, sendEvent && {
                cameFromSharedLink: true
            }, watchlistProps);
        });
    }, [
        cameFromLinkPathname,
        pathname,
        queryClient,
        route,
        watchlistChatId,
        watchlistId
    ]);
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9wcm92aWRlcnMvc3JjL3VzZUN1c3RvbWVySU9QYWdlVmlldy91c2VDdXN0b21lcklPUGFnZVZpZXcudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gdXNlQ3VzdG9tZXJJT1BhZ2VWaWV3RXZlbnRzLnRzXG5pbXBvcnQgeyB1c2VFZmZlY3QsIHVzZVJlZiB9IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgeyB1c2VMb2NhdGlvbiwgdXNlUGFyYW1zIH0gZnJvbSBcInJlYWN0LXJvdXRlci1kb21cIlxuaW1wb3J0IHsgYWRhcHRlcnMgfSBmcm9tIFwiQHJwL2FkYXB0ZXJzXCJcbmltcG9ydCB7IGdldFdhdGNobGlzdEFuYWx5dGljc1Byb3BzIH0gZnJvbSBcIkBycC9yZWFjdC90YW5zdGFjay1hcGkvY29tbW9uXCJcbmltcG9ydCB7IGhhc1BlcmZvcm1lZFNlc3Npb25BY3Rpb24gfSBmcm9tIFwiQHJwL3dlYi91dGlsc1wiXG5pbXBvcnQgeyB1c2VRdWVyeUNsaWVudCB9IGZyb20gXCJAdGFuc3RhY2svcmVhY3QtcXVlcnlcIlxuaW1wb3J0IHsgdXNlU2hhcmVDb250ZXh0IH0gZnJvbSBcIi4uL1NoYXJlQ29udGV4dFwiXG5pbXBvcnQgeyBleHRyYWN0Um91dGVQYXJhbXMsIHRvRHluYW1pY1JvdXRlIH0gZnJvbSBcIi4vdXNlQ3VzdG9tZXJJT1BhZ2VWaWV3VXRpbHNcIlxuXG5leHBvcnQgY29uc3QgdXNlQ3VzdG9tZXJJT1BhZ2VWaWV3RXZlbnRzID0gKCkgPT4ge1xuICBjb25zdCBsb2NhdGlvbiA9IHVzZUxvY2F0aW9uKClcbiAgY29uc3QgcGFyYW1zID0gdXNlUGFyYW1zKClcbiAgY29uc3QgeyBjYW1lRnJvbUxpbmtQYXRobmFtZSB9ID0gdXNlU2hhcmVDb250ZXh0KClcbiAgY29uc3QgcXVlcnlDbGllbnQgPSB1c2VRdWVyeUNsaWVudCgpXG4gIGNvbnN0IHNlbnRGb3IgPSB1c2VSZWY8c3RyaW5nIHwgbnVsbD4obnVsbClcbiAgY29uc3QgcGF0aG5hbWUgPSBsb2NhdGlvbi5wYXRobmFtZVxuICBjb25zdCByb3V0ZSA9IHRvRHluYW1pY1JvdXRlKHBhdGhuYW1lLCBwYXJhbXMpXG4gIGNvbnN0IHsgd2F0Y2hsaXN0SWQsIHdhdGNobGlzdENoYXRJZCB9ID0gZXh0cmFjdFJvdXRlUGFyYW1zKHBhdGhuYW1lLCBsb2NhdGlvbi5zZWFyY2gpXG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCB0cmFja2luZ0tleSA9IGAke3BhdGhuYW1lfT93YXRjaGxpc3RDaGF0SWQ9JHt3YXRjaGxpc3RDaGF0SWQgPz8gXCJcIn1gXG4gICAgaWYgKHNlbnRGb3IuY3VycmVudCA9PT0gdHJhY2tpbmdLZXkpIHJldHVyblxuICAgIHNlbnRGb3IuY3VycmVudCA9IHRyYWNraW5nS2V5XG4gICAgYWRhcHRlcnMuY3VzdG9tZXJJby5wYWdlVmlldyh1bmRlZmluZWQsIGFzeW5jICgpID0+IHtcbiAgICAgIGNvbnN0IHNlbmRFdmVudCA9IGhhc1BlcmZvcm1lZFNlc3Npb25BY3Rpb24oXG4gICAgICAgIFwic2hhcmVkX2xpbmtfc2VlblwiLFxuICAgICAgICBwYXRobmFtZSxcbiAgICAgICAgY2FtZUZyb21MaW5rUGF0aG5hbWUsXG4gICAgICApXG4gICAgICBjb25zdCB3YXRjaGxpc3RQcm9wcyA9IGF3YWl0IGdldFdhdGNobGlzdEFuYWx5dGljc1Byb3BzKHdhdGNobGlzdElkLCBxdWVyeUNsaWVudClcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHJvdXRlLFxuICAgICAgICAuLi4oc2VuZEV2ZW50ICYmIHsgY2FtZUZyb21TaGFyZWRMaW5rOiB0cnVlIH0pLFxuICAgICAgICAuLi53YXRjaGxpc3RQcm9wcyxcbiAgICAgIH1cbiAgICB9KVxuICB9LCBbY2FtZUZyb21MaW5rUGF0aG5hbWUsIHBhdGhuYW1lLCBxdWVyeUNsaWVudCwgcm91dGUsIHdhdGNobGlzdENoYXRJZCwgd2F0Y2hsaXN0SWRdKVxufVxuIl0sIm5hbWVzIjpbInVzZUN1c3RvbWVySU9QYWdlVmlld0V2ZW50cyIsImxvY2F0aW9uIiwidXNlTG9jYXRpb24iLCJwYXJhbXMiLCJ1c2VQYXJhbXMiLCJjYW1lRnJvbUxpbmtQYXRobmFtZSIsInVzZVNoYXJlQ29udGV4dCIsInF1ZXJ5Q2xpZW50IiwidXNlUXVlcnlDbGllbnQiLCJzZW50Rm9yIiwidXNlUmVmIiwicGF0aG5hbWUiLCJyb3V0ZSIsInRvRHluYW1pY1JvdXRlIiwid2F0Y2hsaXN0SWQiLCJ3YXRjaGxpc3RDaGF0SWQiLCJleHRyYWN0Um91dGVQYXJhbXMiLCJzZWFyY2giLCJ1c2VFZmZlY3QiLCJ0cmFja2luZ0tleSIsImN1cnJlbnQiLCJhZGFwdGVycyIsImN1c3RvbWVySW8iLCJwYWdlVmlldyIsInVuZGVmaW5lZCIsInNlbmRFdmVudCIsImhhc1BlcmZvcm1lZFNlc3Npb25BY3Rpb24iLCJ3YXRjaGxpc3RQcm9wcyIsImdldFdhdGNobGlzdEFuYWx5dGljc1Byb3BzIiwiY2FtZUZyb21TaGFyZWRMaW5rIl0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiQUFBQSxpQ0FBaUM7Ozs7OytCQVVwQkE7OztlQUFBQTs7O3VCQVRxQjtnQ0FDSzswQkFDZDt3QkFDa0I7dUJBQ0Q7NEJBQ1g7OEJBQ0M7NENBQ21COzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUU1QyxNQUFNQSw4QkFBOEI7SUFDekMsTUFBTUMsV0FBV0MsSUFBQUEsMkJBQVc7SUFDNUIsTUFBTUMsU0FBU0MsSUFBQUEseUJBQVM7SUFDeEIsTUFBTSxFQUFFQyxvQkFBb0IsRUFBRSxHQUFHQyxJQUFBQSw2QkFBZTtJQUNoRCxNQUFNQyxjQUFjQyxJQUFBQSwwQkFBYztJQUNsQyxNQUFNQyxVQUFVQyxJQUFBQSxhQUFNLEVBQWdCO0lBQ3RDLE1BQU1DLFdBQVdWLFNBQVNVLFFBQVE7SUFDbEMsTUFBTUMsUUFBUUMsSUFBQUEsMENBQWMsRUFBQ0YsVUFBVVI7SUFDdkMsTUFBTSxFQUFFVyxXQUFXLEVBQUVDLGVBQWUsRUFBRSxHQUFHQyxJQUFBQSw4Q0FBa0IsRUFBQ0wsVUFBVVYsU0FBU2dCLE1BQU07SUFFckZDLElBQUFBLGdCQUFTLEVBQUM7UUFDUixNQUFNQyxjQUFjLENBQUMsRUFBRVIsU0FBUyxpQkFBaUIsRUFBRUksNEJBQUFBLDZCQUFBQSxrQkFBbUIsR0FBRyxDQUFDO1FBQzFFLElBQUlOLFFBQVFXLE9BQU8sS0FBS0QsYUFBYTtRQUNyQ1YsUUFBUVcsT0FBTyxHQUFHRDtRQUNsQkUsa0JBQVEsQ0FBQ0MsVUFBVSxDQUFDQyxRQUFRLENBQUNDLFdBQVc7WUFDdEMsTUFBTUMsWUFBWUMsSUFBQUEsZ0NBQXlCLEVBQ3pDLG9CQUNBZixVQUNBTjtZQUVGLE1BQU1zQixpQkFBaUIsTUFBTUMsSUFBQUEsa0NBQTBCLEVBQUNkLGFBQWFQO1lBQ3JFLE9BQU87Z0JBQ0xLO2VBQ0lhLGFBQWE7Z0JBQUVJLG9CQUFvQjtZQUFLLEdBQ3pDRjtRQUVQO0lBQ0YsR0FBRztRQUFDdEI7UUFBc0JNO1FBQVVKO1FBQWFLO1FBQU9HO1FBQWlCRDtLQUFZO0FBQ3ZGIn0=