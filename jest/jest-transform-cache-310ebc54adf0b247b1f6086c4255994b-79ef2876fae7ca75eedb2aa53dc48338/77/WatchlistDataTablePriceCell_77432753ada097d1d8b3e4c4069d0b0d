f1ca5f50e229956223b00692b685c37e
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "WatchlistDataTablePriceCell", {
    enumerable: true,
    get: function() {
        return WatchlistDataTablePriceCell;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _utils = require("@rp/common/utils");
const _core = require("@rp/react/web/mui/core");
const _WatchlistDataTableClickableCell = require("./WatchlistDataTableClickableCell");
const _WatchlistDataTableDataStatusCell = require("./WatchlistDataTableDataStatusCell");
const shouldHideDecimals = (value)=>{
    const num = typeof value === "bigint" ? Number(value) : value;
    const absNum = Math.abs(num);
    if (absNum >= 1000000000) {
        return num % 1000000000 === 0;
    }
    if (absNum >= 1000000) {
        return num % 1000000 === 0;
    }
    return num >= 1000 || num % 1 === 0;
};
function WatchlistDataTablePriceCell({ value, currency, tooltip, queryResult, onClick }) {
    const rawPrice = value !== null && value !== void 0 ? value : 0;
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_WatchlistDataTableDataStatusCell.WatchlistDataTableDataStatusCell, {
        queryResult: queryResult,
        value: value,
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_WatchlistDataTableClickableCell.WatchlistDataTableClickableCell, {
            onClick: onClick,
            tooltip: tooltip,
            hoverBackgroundColor: (theme)=>onClick ? (0, _core.alpha)(theme.palette.text.primary, 0.2) : undefined,
            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                component: "span",
                sx: {
                    whiteSpace: "nowrap"
                },
                children: [
                    (0, _utils.formatNumberShort)(rawPrice, "en-US", {
                        minimumFractionDigits: shouldHideDecimals(rawPrice) ? 0 : 2,
                        maximumFractionDigits: shouldHideDecimals(rawPrice) ? 0 : 2
                    }),
                    " ",
                    currency ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                        component: "span",
                        sx: (theme)=>({
                                fontSize: 10,
                                color: theme.palette.textColor[700]
                            }),
                        children: currency
                    }) : null
                ]
            })
        })
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL3dhdGNobGlzdHMvc3JjL2xpYi9XYXRjaGxpc3REYXRhVGFicy9XYXRjaGxpc3REYXRhVGFibGVDZWxscy9XYXRjaGxpc3REYXRhVGFibGVQcmljZUNlbGwudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGZvcm1hdE51bWJlclNob3J0IH0gZnJvbSBcIkBycC9jb21tb24vdXRpbHNcIlxuaW1wb3J0IHsgQm94LCBUeXBvZ3JhcGh5LCBhbHBoYSB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL211aS9jb3JlXCJcbmltcG9ydCB7IFVzZVF1ZXJ5UmVzdWx0IH0gZnJvbSBcIkB0YW5zdGFjay9yZWFjdC1xdWVyeVwiXG5pbXBvcnQgeyBXYXRjaGxpc3REYXRhVGFibGVDbGlja2FibGVDZWxsIH0gZnJvbSBcIi4vV2F0Y2hsaXN0RGF0YVRhYmxlQ2xpY2thYmxlQ2VsbFwiXG5pbXBvcnQgeyBXYXRjaGxpc3REYXRhVGFibGVEYXRhU3RhdHVzQ2VsbCB9IGZyb20gXCIuL1dhdGNobGlzdERhdGFUYWJsZURhdGFTdGF0dXNDZWxsXCJcblxudHlwZSBQcmljZUNlbGxQcm9wcyA9IHtcbiAgdmFsdWU/OiBudW1iZXIgfCBudWxsXG4gIHRvb2x0aXA/OiBzdHJpbmdcbiAgb25DbGljaz86ICgpID0+IHZvaWRcbiAgcXVlcnlSZXN1bHQ/OiBVc2VRdWVyeVJlc3VsdDx1bmtub3duLCBFcnJvcj5cbiAgY3VycmVuY3k/OiBzdHJpbmcgfCBudWxsXG59XG5cbmNvbnN0IHNob3VsZEhpZGVEZWNpbWFscyA9ICh2YWx1ZTogbnVtYmVyIHwgYmlnaW50KTogYm9vbGVhbiA9PiB7XG4gIGNvbnN0IG51bSA9IHR5cGVvZiB2YWx1ZSA9PT0gXCJiaWdpbnRcIiA/IE51bWJlcih2YWx1ZSkgOiB2YWx1ZVxuICBjb25zdCBhYnNOdW0gPSBNYXRoLmFicyhudW0pXG4gIGlmIChhYnNOdW0gPj0gMV8wMDBfMDAwXzAwMCkge1xuICAgIHJldHVybiBudW0gJSAxXzAwMF8wMDBfMDAwID09PSAwXG4gIH1cbiAgaWYgKGFic051bSA+PSAxXzAwMF8wMDApIHtcbiAgICByZXR1cm4gbnVtICUgMV8wMDBfMDAwID09PSAwXG4gIH1cbiAgcmV0dXJuIG51bSA+PSAxMDAwIHx8IG51bSAlIDEgPT09IDBcbn1cblxuZnVuY3Rpb24gV2F0Y2hsaXN0RGF0YVRhYmxlUHJpY2VDZWxsKHtcbiAgdmFsdWUsXG4gIGN1cnJlbmN5LFxuICB0b29sdGlwLFxuICBxdWVyeVJlc3VsdCxcbiAgb25DbGljayxcbn06IFByaWNlQ2VsbFByb3BzKSB7XG4gIGNvbnN0IHJhd1ByaWNlID0gdmFsdWUgPz8gMFxuXG4gIHJldHVybiAoXG4gICAgPFdhdGNobGlzdERhdGFUYWJsZURhdGFTdGF0dXNDZWxsIHF1ZXJ5UmVzdWx0PXtxdWVyeVJlc3VsdH0gdmFsdWU9e3ZhbHVlfT5cbiAgICAgIDxXYXRjaGxpc3REYXRhVGFibGVDbGlja2FibGVDZWxsXG4gICAgICAgIG9uQ2xpY2s9e29uQ2xpY2t9XG4gICAgICAgIHRvb2x0aXA9e3Rvb2x0aXB9XG4gICAgICAgIGhvdmVyQmFja2dyb3VuZENvbG9yPXt0aGVtZSA9PlxuICAgICAgICAgIG9uQ2xpY2sgPyBhbHBoYSh0aGVtZS5wYWxldHRlLnRleHQucHJpbWFyeSwgMC4yKSA6IHVuZGVmaW5lZFxuICAgICAgICB9XG4gICAgICA+XG4gICAgICAgIDxCb3ggY29tcG9uZW50PVwic3BhblwiIHN4PXt7IHdoaXRlU3BhY2U6IFwibm93cmFwXCIgfX0+XG4gICAgICAgICAge2Zvcm1hdE51bWJlclNob3J0KHJhd1ByaWNlLCBcImVuLVVTXCIsIHtcbiAgICAgICAgICAgIG1pbmltdW1GcmFjdGlvbkRpZ2l0czogc2hvdWxkSGlkZURlY2ltYWxzKHJhd1ByaWNlKSA/IDAgOiAyLFxuICAgICAgICAgICAgbWF4aW11bUZyYWN0aW9uRGlnaXRzOiBzaG91bGRIaWRlRGVjaW1hbHMocmF3UHJpY2UpID8gMCA6IDIsXG4gICAgICAgICAgfSl9e1wiIFwifVxuICAgICAgICAgIHtjdXJyZW5jeSA/IChcbiAgICAgICAgICAgIDxUeXBvZ3JhcGh5XG4gICAgICAgICAgICAgIGNvbXBvbmVudD1cInNwYW5cIlxuICAgICAgICAgICAgICBzeD17dGhlbWUgPT4gKHsgZm9udFNpemU6IDEwLCBjb2xvcjogdGhlbWUucGFsZXR0ZS50ZXh0Q29sb3JbNzAwXSB9KX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAge2N1cnJlbmN5fVxuICAgICAgICAgICAgPC9UeXBvZ3JhcGh5PlxuICAgICAgICAgICkgOiBudWxsfVxuICAgICAgICA8L0JveD5cbiAgICAgIDwvV2F0Y2hsaXN0RGF0YVRhYmxlQ2xpY2thYmxlQ2VsbD5cbiAgICA8L1dhdGNobGlzdERhdGFUYWJsZURhdGFTdGF0dXNDZWxsPlxuICApXG59XG5cbmV4cG9ydCB7IFdhdGNobGlzdERhdGFUYWJsZVByaWNlQ2VsbCB9XG4iXSwibmFtZXMiOlsiV2F0Y2hsaXN0RGF0YVRhYmxlUHJpY2VDZWxsIiwic2hvdWxkSGlkZURlY2ltYWxzIiwidmFsdWUiLCJudW0iLCJOdW1iZXIiLCJhYnNOdW0iLCJNYXRoIiwiYWJzIiwiY3VycmVuY3kiLCJ0b29sdGlwIiwicXVlcnlSZXN1bHQiLCJvbkNsaWNrIiwicmF3UHJpY2UiLCJXYXRjaGxpc3REYXRhVGFibGVEYXRhU3RhdHVzQ2VsbCIsIldhdGNobGlzdERhdGFUYWJsZUNsaWNrYWJsZUNlbGwiLCJob3ZlckJhY2tncm91bmRDb2xvciIsInRoZW1lIiwiYWxwaGEiLCJwYWxldHRlIiwidGV4dCIsInByaW1hcnkiLCJ1bmRlZmluZWQiLCJCb3giLCJjb21wb25lbnQiLCJzeCIsIndoaXRlU3BhY2UiLCJmb3JtYXROdW1iZXJTaG9ydCIsIm1pbmltdW1GcmFjdGlvbkRpZ2l0cyIsIm1heGltdW1GcmFjdGlvbkRpZ2l0cyIsIlR5cG9ncmFwaHkiLCJmb250U2l6ZSIsImNvbG9yIiwidGV4dENvbG9yIl0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBK0RTQTs7O2VBQUFBOzs7O3VCQS9EeUI7c0JBQ0s7aURBRVM7a0RBQ0M7QUFVakQsTUFBTUMscUJBQXFCLENBQUNDO0lBQzFCLE1BQU1DLE1BQU0sT0FBT0QsVUFBVSxXQUFXRSxPQUFPRixTQUFTQTtJQUN4RCxNQUFNRyxTQUFTQyxLQUFLQyxHQUFHLENBQUNKO0lBQ3hCLElBQUlFLFVBQVUsWUFBZTtRQUMzQixPQUFPRixNQUFNLGVBQWtCO0lBQ2pDO0lBQ0EsSUFBSUUsVUFBVSxTQUFXO1FBQ3ZCLE9BQU9GLE1BQU0sWUFBYztJQUM3QjtJQUNBLE9BQU9BLE9BQU8sUUFBUUEsTUFBTSxNQUFNO0FBQ3BDO0FBRUEsU0FBU0gsNEJBQTRCLEVBQ25DRSxLQUFLLEVBQ0xNLFFBQVEsRUFDUkMsT0FBTyxFQUNQQyxXQUFXLEVBQ1hDLE9BQU8sRUFDUTtJQUNmLE1BQU1DLFdBQVdWLGtCQUFBQSxtQkFBQUEsUUFBUztJQUUxQixxQkFDRSxxQkFBQ1csa0VBQWdDO1FBQUNILGFBQWFBO1FBQWFSLE9BQU9BO2tCQUNqRSxjQUFBLHFCQUFDWSxnRUFBK0I7WUFDOUJILFNBQVNBO1lBQ1RGLFNBQVNBO1lBQ1RNLHNCQUFzQkMsQ0FBQUEsUUFDcEJMLFVBQVVNLElBQUFBLFdBQUssRUFBQ0QsTUFBTUUsT0FBTyxDQUFDQyxJQUFJLENBQUNDLE9BQU8sRUFBRSxPQUFPQztzQkFHckQsY0FBQSxzQkFBQ0MsU0FBRztnQkFBQ0MsV0FBVTtnQkFBT0MsSUFBSTtvQkFBRUMsWUFBWTtnQkFBUzs7b0JBQzlDQyxJQUFBQSx3QkFBaUIsRUFBQ2QsVUFBVSxTQUFTO3dCQUNwQ2UsdUJBQXVCMUIsbUJBQW1CVyxZQUFZLElBQUk7d0JBQzFEZ0IsdUJBQXVCM0IsbUJBQW1CVyxZQUFZLElBQUk7b0JBQzVEO29CQUFJO29CQUNISix5QkFDQyxxQkFBQ3FCLGdCQUFVO3dCQUNUTixXQUFVO3dCQUNWQyxJQUFJUixDQUFBQSxRQUFVLENBQUE7Z0NBQUVjLFVBQVU7Z0NBQUlDLE9BQU9mLE1BQU1FLE9BQU8sQ0FBQ2MsU0FBUyxDQUFDLElBQUk7NEJBQUMsQ0FBQTtrQ0FFakV4Qjt5QkFFRDs7Ozs7QUFLZCJ9