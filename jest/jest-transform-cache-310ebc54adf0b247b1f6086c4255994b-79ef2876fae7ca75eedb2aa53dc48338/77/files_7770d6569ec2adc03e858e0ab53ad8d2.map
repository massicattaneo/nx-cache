{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/common/utils/src/lib/files.ts"],"sourcesContent":["import { Uploadable } from \"./files.types\"\nimport { FileStatusState, ServerFile, isValidStatus } from \"./files.types\"\nimport { FileRowType } from \"./files.types\"\n\nfunction removeDuplicates<TItem>(items: Array<TItem>, key: keyof TItem): Array<TItem> {\n  const map = new Map<TItem[keyof TItem], TItem>()\n  for (const item of items) {\n    map.set(item[key], item)\n  }\n  return Array.from(map.values())\n}\n\nconst fileStatus = (status: string): FileStatusState => {\n  if (isValidStatus(status)) return status\n  return \"completed\"\n}\n\nconst mapUploadingFilesForTable = (data: Array<Uploadable> = []) =>\n  data.map(obj => {\n    return {\n      id: obj.fileId,\n      name: obj.file.name,\n      type: obj.file.name.split(\".\").pop() ?? \"\",\n      status: fileStatus(obj.status.toLocaleLowerCase()),\n      size: obj.file.size,\n      progress: obj.progress,\n      date: new Date().toISOString() ?? \"\",\n      error: obj.error,\n      sharedWith: obj.sharedWith,\n      owner: obj.owner,\n    }\n  })\n\nconst checkForDuplicates = (\n  serverFiles: Array<FileRowType>,\n  uploading: Array<Uploadable>,\n  fn: (file: Uploadable) => void,\n) => {\n  uploading.forEach(uploadingFile => {\n    serverFiles.forEach(serverFile => {\n      if (serverFile.id === uploadingFile.fileId) {\n        fn(uploadingFile)\n      }\n    })\n  })\n}\n\nconst mapServerFile = (file: ServerFile): FileRowType => {\n  const status = file.status.toLocaleLowerCase()\n  return {\n    id: file.file_id,\n    name: file.file_name,\n    type: file.file_name.split(\".\").pop() ?? \"\",\n    status: isValidStatus(status) ? status : \"completed\",\n    size: file.raw_size,\n    date: file.upload_ts.endsWith(\"Z\") ? file.upload_ts : `${file.upload_ts}Z`,\n    error: file.error,\n    sharedWith: file.shared_with,\n    owner: file.owner,\n  }\n}\n\nconst mapServerFilesForTable = (data: Array<ServerFile> = []): Array<FileRowType> => {\n  return data.map(mapServerFile)\n}\nexport {\n  mapServerFile,\n  mapServerFilesForTable,\n  mapUploadingFilesForTable,\n  removeDuplicates,\n  checkForDuplicates,\n}\n"],"names":["checkForDuplicates","mapServerFile","mapServerFilesForTable","mapUploadingFilesForTable","removeDuplicates","items","key","map","Map","item","set","Array","from","values","fileStatus","status","isValidStatus","data","obj","id","fileId","name","file","type","split","pop","toLocaleLowerCase","size","progress","date","Date","toISOString","error","sharedWith","owner","serverFiles","uploading","fn","forEach","uploadingFile","serverFile","file_id","file_name","raw_size","upload_ts","endsWith","shared_with"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;;;;;;;;IAsEEA,kBAAkB;eAAlBA;;IAJAC,aAAa;eAAbA;;IACAC,sBAAsB;eAAtBA;;IACAC,yBAAyB;eAAzBA;;IACAC,gBAAgB;eAAhBA;;;4BApEyD;AAG3D,SAASA,iBAAwBC,KAAmB,EAAEC,GAAgB;IACpE,MAAMC,MAAM,IAAIC;IAChB,KAAK,MAAMC,QAAQJ,MAAO;QACxBE,IAAIG,GAAG,CAACD,IAAI,CAACH,IAAI,EAAEG;IACrB;IACA,OAAOE,MAAMC,IAAI,CAACL,IAAIM,MAAM;AAC9B;AAEA,MAAMC,aAAa,CAACC;IAClB,IAAIC,IAAAA,yBAAa,EAACD,SAAS,OAAOA;IAClC,OAAO;AACT;AAEA,MAAMZ,4BAA4B,CAACc,OAA0B,EAAE,GAC7DA,KAAKV,GAAG,CAACW,CAAAA;YAICA,0BAIA;QAPR,OAAO;YACLC,IAAID,IAAIE,MAAM;YACdC,MAAMH,IAAII,IAAI,CAACD,IAAI;YACnBE,MAAML,CAAAA,2BAAAA,IAAII,IAAI,CAACD,IAAI,CAACG,KAAK,CAAC,KAAKC,GAAG,gBAA5BP,sCAAAA,2BAAkC;YACxCH,QAAQD,WAAWI,IAAIH,MAAM,CAACW,iBAAiB;YAC/CC,MAAMT,IAAII,IAAI,CAACK,IAAI;YACnBC,UAAUV,IAAIU,QAAQ;YACtBC,MAAM,CAAA,eAAA,IAAIC,OAAOC,WAAW,gBAAtB,0BAAA,eAA4B;YAClCC,OAAOd,IAAIc,KAAK;YAChBC,YAAYf,IAAIe,UAAU;YAC1BC,OAAOhB,IAAIgB,KAAK;QAClB;IACF;AAEF,MAAMlC,qBAAqB,CACzBmC,aACAC,WACAC;IAEAD,UAAUE,OAAO,CAACC,CAAAA;QAChBJ,YAAYG,OAAO,CAACE,CAAAA;YAClB,IAAIA,WAAWrB,EAAE,KAAKoB,cAAcnB,MAAM,EAAE;gBAC1CiB,GAAGE;YACL;QACF;IACF;AACF;AAEA,MAAMtC,gBAAgB,CAACqB;IACrB,MAAMP,SAASO,KAAKP,MAAM,CAACW,iBAAiB;QAIpCJ;IAHR,OAAO;QACLH,IAAIG,KAAKmB,OAAO;QAChBpB,MAAMC,KAAKoB,SAAS;QACpBnB,MAAMD,CAAAA,4BAAAA,KAAKoB,SAAS,CAAClB,KAAK,CAAC,KAAKC,GAAG,gBAA7BH,uCAAAA,4BAAmC;QACzCP,QAAQC,IAAAA,yBAAa,EAACD,UAAUA,SAAS;QACzCY,MAAML,KAAKqB,QAAQ;QACnBd,MAAMP,KAAKsB,SAAS,CAACC,QAAQ,CAAC,OAAOvB,KAAKsB,SAAS,GAAG,CAAC,EAAEtB,KAAKsB,SAAS,CAAC,CAAC,CAAC;QAC1EZ,OAAOV,KAAKU,KAAK;QACjBC,YAAYX,KAAKwB,WAAW;QAC5BZ,OAAOZ,KAAKY,KAAK;IACnB;AACF;AAEA,MAAMhC,yBAAyB,CAACe,OAA0B,EAAE;IAC1D,OAAOA,KAAKV,GAAG,CAACN;AAClB"}