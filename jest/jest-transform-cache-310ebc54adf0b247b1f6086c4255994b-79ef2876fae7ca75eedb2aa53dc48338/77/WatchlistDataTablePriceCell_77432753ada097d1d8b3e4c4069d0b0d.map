{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/watchlists/src/lib/WatchlistDataTabs/WatchlistDataTableCells/WatchlistDataTablePriceCell.tsx"],"sourcesContent":["import { formatNumberShort } from \"@rp/common/utils\"\nimport { Box, Typography, alpha } from \"@rp/react/web/mui/core\"\nimport { UseQueryResult } from \"@tanstack/react-query\"\nimport { WatchlistDataTableClickableCell } from \"./WatchlistDataTableClickableCell\"\nimport { WatchlistDataTableDataStatusCell } from \"./WatchlistDataTableDataStatusCell\"\n\ntype PriceCellProps = {\n  value?: number | null\n  tooltip?: string\n  onClick?: () => void\n  queryResult?: UseQueryResult<unknown, Error>\n  currency?: string | null\n}\n\nconst shouldHideDecimals = (value: number | bigint): boolean => {\n  const num = typeof value === \"bigint\" ? Number(value) : value\n  const absNum = Math.abs(num)\n  if (absNum >= 1_000_000_000) {\n    return num % 1_000_000_000 === 0\n  }\n  if (absNum >= 1_000_000) {\n    return num % 1_000_000 === 0\n  }\n  return num >= 1000 || num % 1 === 0\n}\n\nfunction WatchlistDataTablePriceCell({\n  value,\n  currency,\n  tooltip,\n  queryResult,\n  onClick,\n}: PriceCellProps) {\n  const rawPrice = value ?? 0\n\n  return (\n    <WatchlistDataTableDataStatusCell queryResult={queryResult} value={value}>\n      <WatchlistDataTableClickableCell\n        onClick={onClick}\n        tooltip={tooltip}\n        hoverBackgroundColor={theme =>\n          onClick ? alpha(theme.palette.text.primary, 0.2) : undefined\n        }\n      >\n        <Box component=\"span\" sx={{ whiteSpace: \"nowrap\" }}>\n          {formatNumberShort(rawPrice, \"en-US\", {\n            minimumFractionDigits: shouldHideDecimals(rawPrice) ? 0 : 2,\n            maximumFractionDigits: shouldHideDecimals(rawPrice) ? 0 : 2,\n          })}{\" \"}\n          {currency ? (\n            <Typography\n              component=\"span\"\n              sx={theme => ({ fontSize: 10, color: theme.palette.textColor[700] })}\n            >\n              {currency}\n            </Typography>\n          ) : null}\n        </Box>\n      </WatchlistDataTableClickableCell>\n    </WatchlistDataTableDataStatusCell>\n  )\n}\n\nexport { WatchlistDataTablePriceCell }\n"],"names":["WatchlistDataTablePriceCell","shouldHideDecimals","value","num","Number","absNum","Math","abs","currency","tooltip","queryResult","onClick","rawPrice","WatchlistDataTableDataStatusCell","WatchlistDataTableClickableCell","hoverBackgroundColor","theme","alpha","palette","text","primary","undefined","Box","component","sx","whiteSpace","formatNumberShort","minimumFractionDigits","maximumFractionDigits","Typography","fontSize","color","textColor"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BA+DSA;;;eAAAA;;;;uBA/DyB;sBACK;iDAES;kDACC;AAUjD,MAAMC,qBAAqB,CAACC;IAC1B,MAAMC,MAAM,OAAOD,UAAU,WAAWE,OAAOF,SAASA;IACxD,MAAMG,SAASC,KAAKC,GAAG,CAACJ;IACxB,IAAIE,UAAU,YAAe;QAC3B,OAAOF,MAAM,eAAkB;IACjC;IACA,IAAIE,UAAU,SAAW;QACvB,OAAOF,MAAM,YAAc;IAC7B;IACA,OAAOA,OAAO,QAAQA,MAAM,MAAM;AACpC;AAEA,SAASH,4BAA4B,EACnCE,KAAK,EACLM,QAAQ,EACRC,OAAO,EACPC,WAAW,EACXC,OAAO,EACQ;IACf,MAAMC,WAAWV,kBAAAA,mBAAAA,QAAS;IAE1B,qBACE,qBAACW,kEAAgC;QAACH,aAAaA;QAAaR,OAAOA;kBACjE,cAAA,qBAACY,gEAA+B;YAC9BH,SAASA;YACTF,SAASA;YACTM,sBAAsBC,CAAAA,QACpBL,UAAUM,IAAAA,WAAK,EAACD,MAAME,OAAO,CAACC,IAAI,CAACC,OAAO,EAAE,OAAOC;sBAGrD,cAAA,sBAACC,SAAG;gBAACC,WAAU;gBAAOC,IAAI;oBAAEC,YAAY;gBAAS;;oBAC9CC,IAAAA,wBAAiB,EAACd,UAAU,SAAS;wBACpCe,uBAAuB1B,mBAAmBW,YAAY,IAAI;wBAC1DgB,uBAAuB3B,mBAAmBW,YAAY,IAAI;oBAC5D;oBAAI;oBACHJ,yBACC,qBAACqB,gBAAU;wBACTN,WAAU;wBACVC,IAAIR,CAAAA,QAAU,CAAA;gCAAEc,UAAU;gCAAIC,OAAOf,MAAME,OAAO,CAACc,SAAS,CAAC,IAAI;4BAAC,CAAA;kCAEjExB;yBAED;;;;;AAKd"}