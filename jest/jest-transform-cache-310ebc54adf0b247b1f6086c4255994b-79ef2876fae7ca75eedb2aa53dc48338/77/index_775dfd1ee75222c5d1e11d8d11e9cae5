992d55ba1e9921068438b724def72f35
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "companyCashFlowStatement", {
    enumerable: true,
    get: function() {
        return companyCashFlowStatement;
    }
});
const _acceptedDate = require("./acceptedDate");
const _accountsPayables = require("./accountsPayables");
const _accountsReceivables = require("./accountsReceivables");
const _acquisitionsNet = require("./acquisitionsNet");
const _capitalExpenditure = require("./capitalExpenditure");
const _cashAtBeginningOfPeriod = require("./cashAtBeginningOfPeriod");
const _cashAtEndOfPeriod = require("./cashAtEndOfPeriod");
const _changeInWorkingCapital = require("./changeInWorkingCapital");
const _cik = require("./cik");
const _commonDividendsPaid = require("./commonDividendsPaid");
const _commonStockIssuance = require("./commonStockIssuance");
const _commonStockRepurchased = require("./commonStockRepurchased");
const _date = require("./date");
const _deferredIncomeTax = require("./deferredIncomeTax");
const _depreciationAndAmortization = require("./depreciationAndAmortization");
const _effectOfForexChangesOnCash = require("./effectOfForexChangesOnCash");
const _filingDate = require("./filingDate");
const _fiscalYear = require("./fiscalYear");
const _fiscalYearAndPeriod = require("./fiscalYearAndPeriod");
const _freeCashFlow = require("./freeCashFlow");
const _incomeTaxesPaid = require("./incomeTaxesPaid");
const _interestPaid = require("./interestPaid");
const _inventory = require("./inventory");
const _investmentsInPropertyPlantAndEquipment = require("./investmentsInPropertyPlantAndEquipment");
const _longTermNetDebtIssuance = require("./longTermNetDebtIssuance");
const _netCashProvidedByFinancingActivities = require("./netCashProvidedByFinancingActivities");
const _netCashProvidedByInvestingActivities = require("./netCashProvidedByInvestingActivities");
const _netCashProvidedByOperatingActivities = require("./netCashProvidedByOperatingActivities");
const _netChangeInCash = require("./netChangeInCash");
const _netCommonStockIssuance = require("./netCommonStockIssuance");
const _netDebtIssuance = require("./netDebtIssuance");
const _netDividendsPaid = require("./netDividendsPaid");
const _netIncome = require("./netIncome");
const _netPreferredStockIssuance = require("./netPreferredStockIssuance");
const _netStockIssuance = require("./netStockIssuance");
const _operatingCashFlow = require("./operatingCashFlow");
const _otherFinancingActivities = require("./otherFinancingActivities");
const _otherInvestingActivities = require("./otherInvestingActivities");
const _otherNonCashItems = require("./otherNonCashItems");
const _otherWorkingCapital = require("./otherWorkingCapital");
const _period = require("./period");
const _preferredDividendsPaid = require("./preferredDividendsPaid");
const _purchasesOfInvestments = require("./purchasesOfInvestments");
const _reportedCurrency = require("./reportedCurrency");
const _salesMaturitiesOfInvestments = require("./salesMaturitiesOfInvestments");
const _shortTermNetDebtIssuance = require("./shortTermNetDebtIssuance");
const _stockBasedCompensation = require("./stockBasedCompensation");
const companyCashFlowStatement = {
    acceptedDate: _acceptedDate.acceptedDate,
    accountsPayables: _accountsPayables.accountsPayables,
    accountsReceivables: _accountsReceivables.accountsReceivables,
    acquisitionsNet: _acquisitionsNet.acquisitionsNet,
    capitalExpenditure: _capitalExpenditure.capitalExpenditure,
    cashAtBeginningOfPeriod: _cashAtBeginningOfPeriod.cashAtBeginningOfPeriod,
    cashAtEndOfPeriod: _cashAtEndOfPeriod.cashAtEndOfPeriod,
    changeInWorkingCapital: _changeInWorkingCapital.changeInWorkingCapital,
    cik: _cik.cik,
    commonDividendsPaid: _commonDividendsPaid.commonDividendsPaid,
    commonStockIssuance: _commonStockIssuance.commonStockIssuance,
    commonStockRepurchased: _commonStockRepurchased.commonStockRepurchased,
    date: _date.date,
    depreciationAndAmortization: _depreciationAndAmortization.depreciationAndAmortization,
    deferredIncomeTax: _deferredIncomeTax.deferredIncomeTax,
    effectOfForexChangesOnCash: _effectOfForexChangesOnCash.effectOfForexChangesOnCash,
    filingDate: _filingDate.filingDate,
    fiscalYear: _fiscalYear.fiscalYear,
    fiscalYearAndPeriod: _fiscalYearAndPeriod.fiscalYearAndPeriod,
    freeCashFlow: _freeCashFlow.freeCashFlow,
    incomeTaxesPaid: _incomeTaxesPaid.incomeTaxesPaid,
    interestPaid: _interestPaid.interestPaid,
    inventory: _inventory.inventory,
    investmentsInPropertyPlantAndEquipment: _investmentsInPropertyPlantAndEquipment.investmentsInPropertyPlantAndEquipment,
    longTermNetDebtIssuance: _longTermNetDebtIssuance.longTermNetDebtIssuance,
    netCashProvidedByFinancingActivities: _netCashProvidedByFinancingActivities.netCashProvidedByFinancingActivities,
    netCashProvidedByInvestingActivities: _netCashProvidedByInvestingActivities.netCashProvidedByInvestingActivities,
    netCashProvidedByOperatingActivities: _netCashProvidedByOperatingActivities.netCashProvidedByOperatingActivities,
    netChangeInCash: _netChangeInCash.netChangeInCash,
    netCommonStockIssuance: _netCommonStockIssuance.netCommonStockIssuance,
    netDebtIssuance: _netDebtIssuance.netDebtIssuance,
    netDividendsPaid: _netDividendsPaid.netDividendsPaid,
    netIncome: _netIncome.netIncome,
    netPreferredStockIssuance: _netPreferredStockIssuance.netPreferredStockIssuance,
    netStockIssuance: _netStockIssuance.netStockIssuance,
    operatingCashFlow: _operatingCashFlow.operatingCashFlow,
    otherFinancingActivities: _otherFinancingActivities.otherFinancingActivities,
    otherInvestingActivities: _otherInvestingActivities.otherInvestingActivities,
    otherNonCashItems: _otherNonCashItems.otherNonCashItems,
    otherWorkingCapital: _otherWorkingCapital.otherWorkingCapital,
    period: _period.period,
    preferredDividendsPaid: _preferredDividendsPaid.preferredDividendsPaid,
    purchasesOfInvestments: _purchasesOfInvestments.purchasesOfInvestments,
    reportedCurrency: _reportedCurrency.reportedCurrency,
    salesMaturitiesOfInvestments: _salesMaturitiesOfInvestments.salesMaturitiesOfInvestments,
    shortTermNetDebtIssuance: _shortTermNetDebtIssuance.shortTermNetDebtIssuance,
    stockBasedCompensation: _stockBasedCompensation.stockBasedCompensation
};

//# sourceMappingURL=data:application/json;base64,