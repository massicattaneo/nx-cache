3e313c12140f8a7a638020849fb76a36
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "AdminTable", {
    enumerable: true,
    get: function() {
        return AdminTable;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _core = require("@rp/react/web/mui/core");
const _icons = require("@rp/react/web/mui/icons");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
const AdminTable = ({ data, renderRow, labels, sx, orderBy, orderDirection, onOrderClick })=>{
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Paper, {
        elevation: 1,
        sx: (theme)=>_object_spread({
                backgroundColor: "elevation.dp01",
                position: "relative"
            }, theme.scrollbarStyles, sx),
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                sx: {
                    display: "flex",
                    position: "sticky",
                    top: 0,
                    zIndex: 1,
                    backgroundColor: "elevation.dp02",
                    borderBottom: 1,
                    borderColor: "outline.sidebar",
                    fontWeight: 700,
                    px: 3
                },
                children: labels.map((label)=>{
                    const sorted = orderBy && label.orderId === orderBy ? orderDirection || "desc" : undefined;
                    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                        onClick: ()=>{
                            if (label.orderId && onOrderClick) onOrderClick(label.orderId);
                        },
                        sx: _object_spread({
                            display: "flex",
                            "& svg": {
                                fontSize: 20
                            },
                            gap: 1,
                            py: 1.5,
                            cursor: label.orderId ? "pointer" : undefined
                        }, label.sx),
                        children: [
                            label.text,
                            sorted === "asc" && /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.ArrowUpward, {}),
                            sorted === "desc" && /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.ArrowDownward, {})
                        ]
                    }, label.text);
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                sx: {
                    px: 2
                },
                children: data.map((row, index)=>renderRow(row, index))
            })
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9jb21wb3NpdGUtY29tcG9uZW50cy9zcmMvQWRtaW5UYWJsZS9BZG1pblRhYmxlLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTeXN0ZW1Dc3NQcm9wZXJ0aWVzIH0gZnJvbSBcIkBtdWkvc3lzdGVtXCJcbmltcG9ydCB7IEJveCwgUGFwZXIsIFN4UHJvcHMgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9tdWkvY29yZVwiXG5pbXBvcnQgeyBBcnJvd0Rvd253YXJkLCBBcnJvd1Vwd2FyZCB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL211aS9pY29uc1wiXG5cbnR5cGUgUHJvcHM8VERhdGEsIFNvcnRJZD4gPSB7XG4gIGRhdGE6IEFycmF5PFREYXRhPlxuICByZW5kZXJSb3c6IChyb3c6IFREYXRhLCBpbmRleDogbnVtYmVyKSA9PiBSZWFjdC5SZWFjdE5vZGVcbiAgbGFiZWxzOiBBcnJheTx7XG4gICAgdGV4dDogc3RyaW5nXG4gICAgc3g/OiBTeFByb3BzXG4gICAgb3JkZXJJZD86IFNvcnRJZFxuICB9PlxuICBvcmRlckJ5PzogU29ydElkXG4gIG9yZGVyRGlyZWN0aW9uPzogXCJhc2NcIiB8IFwiZGVzY1wiXG4gIG9uT3JkZXJDbGljaz86IChsYWJlbDogU29ydElkKSA9PiB2b2lkXG4gIHN4PzogU3lzdGVtQ3NzUHJvcGVydGllc1xufVxuY29uc3QgQWRtaW5UYWJsZSA9IDxURGF0YSwgU29ydElkPih7XG4gIGRhdGEsXG4gIHJlbmRlclJvdyxcbiAgbGFiZWxzLFxuICBzeCxcbiAgb3JkZXJCeSxcbiAgb3JkZXJEaXJlY3Rpb24sXG4gIG9uT3JkZXJDbGljayxcbn06IFByb3BzPFREYXRhLCBTb3J0SWQ+KSA9PiB7XG4gIHJldHVybiAoXG4gICAgPFBhcGVyXG4gICAgICBlbGV2YXRpb249ezF9XG4gICAgICBzeD17dGhlbWUgPT4gKHtcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiBcImVsZXZhdGlvbi5kcDAxXCIsXG4gICAgICAgIHBvc2l0aW9uOiBcInJlbGF0aXZlXCIsXG4gICAgICAgIC4uLnRoZW1lLnNjcm9sbGJhclN0eWxlcyxcbiAgICAgICAgLi4uc3gsXG4gICAgICB9KX1cbiAgICA+XG4gICAgICA8Qm94XG4gICAgICAgIHN4PXt7XG4gICAgICAgICAgZGlzcGxheTogXCJmbGV4XCIsXG4gICAgICAgICAgcG9zaXRpb246IFwic3RpY2t5XCIsXG4gICAgICAgICAgdG9wOiAwLFxuICAgICAgICAgIHpJbmRleDogMSxcbiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwiZWxldmF0aW9uLmRwMDJcIixcbiAgICAgICAgICBib3JkZXJCb3R0b206IDEsXG4gICAgICAgICAgYm9yZGVyQ29sb3I6IFwib3V0bGluZS5zaWRlYmFyXCIsXG4gICAgICAgICAgZm9udFdlaWdodDogNzAwLFxuICAgICAgICAgIHB4OiAzLFxuICAgICAgICB9fVxuICAgICAgPlxuICAgICAgICB7bGFiZWxzLm1hcChsYWJlbCA9PiB7XG4gICAgICAgICAgY29uc3Qgc29ydGVkID0gb3JkZXJCeSAmJiBsYWJlbC5vcmRlcklkID09PSBvcmRlckJ5ID8gb3JkZXJEaXJlY3Rpb24gfHwgXCJkZXNjXCIgOiB1bmRlZmluZWRcbiAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPEJveFxuICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKGxhYmVsLm9yZGVySWQgJiYgb25PcmRlckNsaWNrKSBvbk9yZGVyQ2xpY2sobGFiZWwub3JkZXJJZClcbiAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAga2V5PXtsYWJlbC50ZXh0fVxuICAgICAgICAgICAgICBzeD17e1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IFwiZmxleFwiLFxuICAgICAgICAgICAgICAgIFwiJiBzdmdcIjogeyBmb250U2l6ZTogMjAgfSxcbiAgICAgICAgICAgICAgICBnYXA6IDEsXG4gICAgICAgICAgICAgICAgcHk6IDEuNSxcbiAgICAgICAgICAgICAgICBjdXJzb3I6IGxhYmVsLm9yZGVySWQgPyBcInBvaW50ZXJcIiA6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICAuLi5sYWJlbC5zeCxcbiAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAge2xhYmVsLnRleHR9XG4gICAgICAgICAgICAgIHtzb3J0ZWQgPT09IFwiYXNjXCIgJiYgPEFycm93VXB3YXJkIC8+fVxuICAgICAgICAgICAgICB7c29ydGVkID09PSBcImRlc2NcIiAmJiA8QXJyb3dEb3dud2FyZCAvPn1cbiAgICAgICAgICAgIDwvQm94PlxuICAgICAgICAgIClcbiAgICAgICAgfSl9XG4gICAgICA8L0JveD5cbiAgICAgIDxCb3ggc3g9e3sgcHg6IDIgfX0+e2RhdGEubWFwKChyb3csIGluZGV4KSA9PiByZW5kZXJSb3cocm93LCBpbmRleCkpfTwvQm94PlxuICAgIDwvUGFwZXI+XG4gIClcbn1cblxuZXhwb3J0IHsgQWRtaW5UYWJsZSB9XG4iXSwibmFtZXMiOlsiQWRtaW5UYWJsZSIsImRhdGEiLCJyZW5kZXJSb3ciLCJsYWJlbHMiLCJzeCIsIm9yZGVyQnkiLCJvcmRlckRpcmVjdGlvbiIsIm9uT3JkZXJDbGljayIsIlBhcGVyIiwiZWxldmF0aW9uIiwidGhlbWUiLCJiYWNrZ3JvdW5kQ29sb3IiLCJwb3NpdGlvbiIsInNjcm9sbGJhclN0eWxlcyIsIkJveCIsImRpc3BsYXkiLCJ0b3AiLCJ6SW5kZXgiLCJib3JkZXJCb3R0b20iLCJib3JkZXJDb2xvciIsImZvbnRXZWlnaHQiLCJweCIsIm1hcCIsImxhYmVsIiwic29ydGVkIiwib3JkZXJJZCIsInVuZGVmaW5lZCIsIm9uQ2xpY2siLCJmb250U2l6ZSIsImdhcCIsInB5IiwiY3Vyc29yIiwidGV4dCIsIkFycm93VXB3YXJkIiwiQXJyb3dEb3dud2FyZCIsInJvdyIsImluZGV4Il0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQThFU0E7OztlQUFBQTs7OztzQkE3RTJCO3VCQUNPOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWUzQyxNQUFNQSxhQUFhLENBQWdCLEVBQ2pDQyxJQUFJLEVBQ0pDLFNBQVMsRUFDVEMsTUFBTSxFQUNOQyxFQUFFLEVBQ0ZDLE9BQU8sRUFDUEMsY0FBYyxFQUNkQyxZQUFZLEVBQ1M7SUFDckIscUJBQ0Usc0JBQUNDLFdBQUs7UUFDSkMsV0FBVztRQUNYTCxJQUFJTSxDQUFBQSxRQUFVO2dCQUNaQyxpQkFBaUI7Z0JBQ2pCQyxVQUFVO2VBQ1BGLE1BQU1HLGVBQWUsRUFDckJUOzswQkFHTCxxQkFBQ1UsU0FBRztnQkFDRlYsSUFBSTtvQkFDRlcsU0FBUztvQkFDVEgsVUFBVTtvQkFDVkksS0FBSztvQkFDTEMsUUFBUTtvQkFDUk4saUJBQWlCO29CQUNqQk8sY0FBYztvQkFDZEMsYUFBYTtvQkFDYkMsWUFBWTtvQkFDWkMsSUFBSTtnQkFDTjswQkFFQ2xCLE9BQU9tQixHQUFHLENBQUNDLENBQUFBO29CQUNWLE1BQU1DLFNBQVNuQixXQUFXa0IsTUFBTUUsT0FBTyxLQUFLcEIsVUFBVUMsa0JBQWtCLFNBQVNvQjtvQkFDakYscUJBQ0Usc0JBQUNaLFNBQUc7d0JBQ0ZhLFNBQVM7NEJBQ1AsSUFBSUosTUFBTUUsT0FBTyxJQUFJbEIsY0FBY0EsYUFBYWdCLE1BQU1FLE9BQU87d0JBQy9EO3dCQUVBckIsSUFBSTs0QkFDRlcsU0FBUzs0QkFDVCxTQUFTO2dDQUFFYSxVQUFVOzRCQUFHOzRCQUN4QkMsS0FBSzs0QkFDTEMsSUFBSTs0QkFDSkMsUUFBUVIsTUFBTUUsT0FBTyxHQUFHLFlBQVlDOzJCQUNqQ0gsTUFBTW5CLEVBQUU7OzRCQUdabUIsTUFBTVMsSUFBSTs0QkFDVlIsV0FBVyx1QkFBUyxxQkFBQ1Msa0JBQVc7NEJBQ2hDVCxXQUFXLHdCQUFVLHFCQUFDVSxvQkFBYTs7dUJBWi9CWCxNQUFNUyxJQUFJO2dCQWVyQjs7MEJBRUYscUJBQUNsQixTQUFHO2dCQUFDVixJQUFJO29CQUFFaUIsSUFBSTtnQkFBRTswQkFBSXBCLEtBQUtxQixHQUFHLENBQUMsQ0FBQ2EsS0FBS0MsUUFBVWxDLFVBQVVpQyxLQUFLQzs7OztBQUduRSJ9