b7c24f8b6dd8e0eedfd1fa0b56443c54
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "useFromNative", {
    enumerable: true,
    get: function() {
        return useFromNative;
    }
});
const _reactrouterdom = require("react-router-dom");
const _environment = require("@rp/common/environment");
const SEARCH_MEDIUM = "utm_medium";
const useFromNative = ()=>{
    const [searchParams] = (0, _reactrouterdom.useSearchParams)();
    const setFromNative = (email)=>{
        const fromNativeIOS = searchParams.get(SEARCH_MEDIUM) === "ios";
        const fromNativeAndroid = searchParams.get(SEARCH_MEDIUM) === "android";
        if (fromNativeAndroid || fromNativeIOS) {
            sessionStorage.setItem("nativeDevice", fromNativeIOS ? "ios" : "android");
        }
        if (email) {
            sessionStorage.setItem("email", email);
        }
    };
    const isFromNative = !!sessionStorage.getItem("nativeDevice");
    const getPathFromNative = (path)=>{
        const nativeDevice = sessionStorage.getItem("nativeDevice");
        const email = sessionStorage.getItem("email");
        if (!nativeDevice) {
            return;
        }
        const { iosId, androidId } = _environment.environment.nativeApp;
        const protocol = nativeDevice === "ios" ? iosId : androidId;
        const searchParams = new URLSearchParams();
        if (email) {
            searchParams.set("email", email);
        }
        const paramString = searchParams.size > 0 ? `?${searchParams.toString()}` : "";
        return `${protocol}://${path}${paramString}`;
    };
    return {
        setFromNative,
        getPathFromNative,
        isFromNative
    };
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9ob29rcy9zcmMvdXNlRnJvbU5hdGl2ZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTZWFyY2hQYXJhbXMgfSBmcm9tIFwicmVhY3Qtcm91dGVyLWRvbVwiXG5pbXBvcnQgeyBlbnZpcm9ubWVudCB9IGZyb20gXCJAcnAvY29tbW9uL2Vudmlyb25tZW50XCJcblxuY29uc3QgU0VBUkNIX01FRElVTSA9IFwidXRtX21lZGl1bVwiXG5cbmNvbnN0IHVzZUZyb21OYXRpdmUgPSAoKSA9PiB7XG4gIGNvbnN0IFtzZWFyY2hQYXJhbXNdID0gdXNlU2VhcmNoUGFyYW1zKClcblxuICBjb25zdCBzZXRGcm9tTmF0aXZlID0gKGVtYWlsPzogc3RyaW5nKSA9PiB7XG4gICAgY29uc3QgZnJvbU5hdGl2ZUlPUyA9IHNlYXJjaFBhcmFtcy5nZXQoU0VBUkNIX01FRElVTSkgPT09IFwiaW9zXCJcbiAgICBjb25zdCBmcm9tTmF0aXZlQW5kcm9pZCA9IHNlYXJjaFBhcmFtcy5nZXQoU0VBUkNIX01FRElVTSkgPT09IFwiYW5kcm9pZFwiXG5cbiAgICBpZiAoZnJvbU5hdGl2ZUFuZHJvaWQgfHwgZnJvbU5hdGl2ZUlPUykge1xuICAgICAgc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbShcIm5hdGl2ZURldmljZVwiLCBmcm9tTmF0aXZlSU9TID8gXCJpb3NcIiA6IFwiYW5kcm9pZFwiKVxuICAgIH1cbiAgICBpZiAoZW1haWwpIHtcbiAgICAgIHNlc3Npb25TdG9yYWdlLnNldEl0ZW0oXCJlbWFpbFwiLCBlbWFpbClcbiAgICB9XG4gIH1cblxuICBjb25zdCBpc0Zyb21OYXRpdmUgPSAhIXNlc3Npb25TdG9yYWdlLmdldEl0ZW0oXCJuYXRpdmVEZXZpY2VcIilcblxuICBjb25zdCBnZXRQYXRoRnJvbU5hdGl2ZSA9IChwYXRoOiBzdHJpbmcpOiBzdHJpbmcgfCB1bmRlZmluZWQgPT4ge1xuICAgIGNvbnN0IG5hdGl2ZURldmljZSA9IHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oXCJuYXRpdmVEZXZpY2VcIilcbiAgICBjb25zdCBlbWFpbCA9IHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oXCJlbWFpbFwiKVxuXG4gICAgaWYgKCFuYXRpdmVEZXZpY2UpIHtcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIGNvbnN0IHsgaW9zSWQsIGFuZHJvaWRJZCB9ID0gZW52aXJvbm1lbnQubmF0aXZlQXBwXG4gICAgY29uc3QgcHJvdG9jb2wgPSBuYXRpdmVEZXZpY2UgPT09IFwiaW9zXCIgPyBpb3NJZCA6IGFuZHJvaWRJZFxuXG4gICAgY29uc3Qgc2VhcmNoUGFyYW1zID0gbmV3IFVSTFNlYXJjaFBhcmFtcygpXG5cbiAgICBpZiAoZW1haWwpIHtcbiAgICAgIHNlYXJjaFBhcmFtcy5zZXQoXCJlbWFpbFwiLCBlbWFpbClcbiAgICB9XG5cbiAgICBjb25zdCBwYXJhbVN0cmluZyA9IHNlYXJjaFBhcmFtcy5zaXplID4gMCA/IGA/JHtzZWFyY2hQYXJhbXMudG9TdHJpbmcoKX1gIDogXCJcIlxuXG4gICAgcmV0dXJuIGAke3Byb3RvY29sfTovLyR7cGF0aH0ke3BhcmFtU3RyaW5nfWBcbiAgfVxuXG4gIHJldHVybiB7IHNldEZyb21OYXRpdmUsIGdldFBhdGhGcm9tTmF0aXZlLCBpc0Zyb21OYXRpdmUgfVxufVxuXG5leHBvcnQgeyB1c2VGcm9tTmF0aXZlIH1cbiJdLCJuYW1lcyI6WyJ1c2VGcm9tTmF0aXZlIiwiU0VBUkNIX01FRElVTSIsInNlYXJjaFBhcmFtcyIsInVzZVNlYXJjaFBhcmFtcyIsInNldEZyb21OYXRpdmUiLCJlbWFpbCIsImZyb21OYXRpdmVJT1MiLCJnZXQiLCJmcm9tTmF0aXZlQW5kcm9pZCIsInNlc3Npb25TdG9yYWdlIiwic2V0SXRlbSIsImlzRnJvbU5hdGl2ZSIsImdldEl0ZW0iLCJnZXRQYXRoRnJvbU5hdGl2ZSIsInBhdGgiLCJuYXRpdmVEZXZpY2UiLCJpb3NJZCIsImFuZHJvaWRJZCIsImVudmlyb25tZW50IiwibmF0aXZlQXBwIiwicHJvdG9jb2wiLCJVUkxTZWFyY2hQYXJhbXMiLCJzZXQiLCJwYXJhbVN0cmluZyIsInNpemUiLCJ0b1N0cmluZyJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQStDU0E7OztlQUFBQTs7O2dDQS9DdUI7NkJBQ0o7QUFFNUIsTUFBTUMsZ0JBQWdCO0FBRXRCLE1BQU1ELGdCQUFnQjtJQUNwQixNQUFNLENBQUNFLGFBQWEsR0FBR0MsSUFBQUEsK0JBQWU7SUFFdEMsTUFBTUMsZ0JBQWdCLENBQUNDO1FBQ3JCLE1BQU1DLGdCQUFnQkosYUFBYUssR0FBRyxDQUFDTixtQkFBbUI7UUFDMUQsTUFBTU8sb0JBQW9CTixhQUFhSyxHQUFHLENBQUNOLG1CQUFtQjtRQUU5RCxJQUFJTyxxQkFBcUJGLGVBQWU7WUFDdENHLGVBQWVDLE9BQU8sQ0FBQyxnQkFBZ0JKLGdCQUFnQixRQUFRO1FBQ2pFO1FBQ0EsSUFBSUQsT0FBTztZQUNUSSxlQUFlQyxPQUFPLENBQUMsU0FBU0w7UUFDbEM7SUFDRjtJQUVBLE1BQU1NLGVBQWUsQ0FBQyxDQUFDRixlQUFlRyxPQUFPLENBQUM7SUFFOUMsTUFBTUMsb0JBQW9CLENBQUNDO1FBQ3pCLE1BQU1DLGVBQWVOLGVBQWVHLE9BQU8sQ0FBQztRQUM1QyxNQUFNUCxRQUFRSSxlQUFlRyxPQUFPLENBQUM7UUFFckMsSUFBSSxDQUFDRyxjQUFjO1lBQ2pCO1FBQ0Y7UUFFQSxNQUFNLEVBQUVDLEtBQUssRUFBRUMsU0FBUyxFQUFFLEdBQUdDLHdCQUFXLENBQUNDLFNBQVM7UUFDbEQsTUFBTUMsV0FBV0wsaUJBQWlCLFFBQVFDLFFBQVFDO1FBRWxELE1BQU1mLGVBQWUsSUFBSW1CO1FBRXpCLElBQUloQixPQUFPO1lBQ1RILGFBQWFvQixHQUFHLENBQUMsU0FBU2pCO1FBQzVCO1FBRUEsTUFBTWtCLGNBQWNyQixhQUFhc0IsSUFBSSxHQUFHLElBQUksQ0FBQyxDQUFDLEVBQUV0QixhQUFhdUIsUUFBUSxHQUFHLENBQUMsR0FBRztRQUU1RSxPQUFPLENBQUMsRUFBRUwsU0FBUyxHQUFHLEVBQUVOLEtBQUssRUFBRVMsWUFBWSxDQUFDO0lBQzlDO0lBRUEsT0FBTztRQUFFbkI7UUFBZVM7UUFBbUJGO0lBQWE7QUFDMUQifQ==