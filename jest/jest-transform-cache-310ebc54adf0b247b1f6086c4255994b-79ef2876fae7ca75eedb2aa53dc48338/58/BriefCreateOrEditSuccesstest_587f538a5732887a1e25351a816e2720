e06cd7e32f65ed2e6a4e5080c965c98e
"use strict";
jest.mock("react-router-dom", ()=>_object_spread_props(_object_spread({}, jest.requireActual("react-router-dom")), {
        useNavigate: ()=>mockNavigate
    }));
jest.mock("react-use/lib/useLocation");
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _jsxruntime = require("react/jsx-runtime");
const _useLocation = /*#__PURE__*/ _interop_require_default(require("react-use/lib/useLocation"));
const _tools = require("@rp/react/web/common/tools");
const _react = require("@testing-library/react");
const _BriefCreateOrEditSuccess = require("./BriefCreateOrEditSuccess");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const mockNavigate = jest.fn();
const mockUseLocation = _useLocation.default;
beforeEach(jest.clearAllMocks);
describe("BriefSuccess", ()=>{
    describe("isEdit", ()=>{
        const isEdit = true;
        describe("rendering", ()=>{
            beforeEach(()=>{
                (0, _tools.renderWithProviders)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_BriefCreateOrEditSuccess.BriefCreateOrEditSuccess, {
                    isEdit: isEdit
                }));
            });
            it("should have header", ()=>{
                expect(_react.screen.getByText("Edit Brief")).toBeInTheDocument();
            });
            it("should have title", ()=>{
                expect(_react.screen.getByText("Edit a Brief")).toBeInTheDocument();
            });
            it("should have Back button", ()=>{
                expect(_react.screen.getByRole("button", {
                    name: "back"
                })).toBeInTheDocument();
            });
            it("should have Go Back button", ()=>{
                expect(_react.screen.getByRole("button", {
                    name: "Go Back"
                })).toBeInTheDocument();
            });
        });
    });
    describe("!isEdit", ()=>{
        const isEdit = false;
        describe("rendering", ()=>{
            beforeEach(()=>{
                (0, _tools.renderWithProviders)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_BriefCreateOrEditSuccess.BriefCreateOrEditSuccess, {
                    isEdit: isEdit
                }));
            });
            it("should have header", ()=>{
                expect(_react.screen.getByText("New Brief")).toBeInTheDocument();
            });
            it("should have title", ()=>{
                expect(_react.screen.getByText("Schedule a Brief")).toBeInTheDocument();
            });
            it("should have Back button", ()=>{
                expect(_react.screen.getByRole("button", {
                    name: "back"
                })).toBeInTheDocument();
            });
            it("should have Go Back button", ()=>{
                expect(_react.screen.getByRole("button", {
                    name: "Go Back"
                })).toBeInTheDocument();
            });
        });
    });
    describe("functionality", ()=>{
        describe("create from brief page", ()=>{
            describe("back button", ()=>{
                beforeEach(()=>{
                    (0, _tools.renderWithProviders)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_BriefCreateOrEditSuccess.BriefCreateOrEditSuccess, {}));
                    _react.fireEvent.click(_react.screen.getByRole("button", {
                        name: "back"
                    }));
                });
                it("should call navigate with the correct params", ()=>{
                    expect(mockNavigate).toHaveBeenCalledTimes(1);
                    expect(mockNavigate).toHaveBeenCalledWith("/brief", {
                        replace: true
                    });
                });
            });
            describe("home button", ()=>{
                beforeEach(()=>{
                    (0, _tools.renderWithProviders)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_BriefCreateOrEditSuccess.BriefCreateOrEditSuccess, {}));
                    _react.fireEvent.click(_react.screen.getByRole("button", {
                        name: "Go Back"
                    }));
                });
                it("should call navigate with the correct params", ()=>{
                    expect(mockNavigate).toHaveBeenCalledTimes(1);
                    expect(mockNavigate).toHaveBeenCalledWith("/brief", {
                        replace: true
                    });
                });
            });
        });
        describe("create from watchlist page", ()=>{
            beforeAll(()=>{
                mockUseLocation.mockReturnValue({
                    state: {
                        usr: {
                            initialWatchlistId: "mock-watchlist-id-123"
                        }
                    }
                });
            });
            describe("back button", ()=>{
                beforeEach(()=>{
                    (0, _tools.renderWithProviders)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_BriefCreateOrEditSuccess.BriefCreateOrEditSuccess, {}));
                    _react.fireEvent.click(_react.screen.getByRole("button", {
                        name: "back"
                    }));
                });
                it("should call navigate with the correct params", ()=>{
                    expect(mockNavigate).toHaveBeenCalledTimes(1);
                    expect(mockNavigate).toHaveBeenCalledWith("/watchlists/mock-watchlist-id-123", {
                        replace: true
                    });
                });
            });
            describe("home button", ()=>{
                beforeEach(()=>{
                    (0, _tools.renderWithProviders)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_BriefCreateOrEditSuccess.BriefCreateOrEditSuccess, {}));
                    _react.fireEvent.click(_react.screen.getByRole("button", {
                        name: "Go Back"
                    }));
                });
                it("should call navigate with the correct params", ()=>{
                    expect(mockNavigate).toHaveBeenCalledTimes(1);
                    expect(mockNavigate).toHaveBeenCalledWith("/watchlists/mock-watchlist-id-123", {
                        replace: true
                    });
                });
            });
        });
    });
});

//# sourceMappingURL=data:application/json;base64,