80c40e5211023cdafe7cf99e18452c67
/// <reference path="./jest.d.ts" />
// jest-dom adds custom jest matchers for asserting on DOM nodes.
// allows you to do things like:
// expect(element).toHaveTextContent(/react/i)
// learn more: https://github.com/testing-library/jest-dom
"use strict";
jest.mock("@clerk/clerk-react", ()=>({
        useAuth: jest.fn(()=>({})),
        useSignUp: jest.fn(()=>({})),
        useSignIn: jest.fn(()=>({})),
        ClerkProvider: jest.fn(({ children })=>children),
        OrganizationProfile: ()=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                children: "ORG_TAB"
            }),
        UserProfile: ()=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                children: "USER_TAB"
            }),
        useSession: ()=>({
                session: {}
            }),
        useClerk: jest.fn(()=>({
                user: mockUser,
                loaded: true
            })),
        useOrganizationList: jest.fn(()=>({})),
        useOrganization: jest.fn(()=>({
                isLoaded: true,
                organization: {
                    id: "organizationId",
                    name: "Organization"
                }
            })),
        useUser: jest.fn(()=>({
                isLoaded: true,
                isSignedIn: true,
                user: mockUser
            }))
    }));
// Mock LaunchDarklyProvider to avoid real SDK/network in tests
jest.mock("./libs/react/web/common/providers/src/LaunchDarklyProvider/LaunchDarklyProvider", ()=>({
        LaunchDarklyProvider: ({ children })=>children
    }));
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _jsxruntime = require("react/jsx-runtime");
const _i18next = /*#__PURE__*/ _interop_require_default(require("i18next"));
const _reacti18next = require("react-i18next");
const _internationalizationts = require("./libs/react/common/internationalization/src/lib/internationalization.ts");
const _adminPaneljson = /*#__PURE__*/ _interop_require_default(require("./libs/react/common/internationalization/src/lib/locales/en/adminPanel.json"));
const _agentChatPagejson = /*#__PURE__*/ _interop_require_default(require("./libs/react/common/internationalization/src/lib/locales/en/agentChatPage.json"));
const _apiErrorsjson = /*#__PURE__*/ _interop_require_default(require("./libs/react/common/internationalization/src/lib/locales/en/apiErrors.json"));
const _briefsjson = /*#__PURE__*/ _interop_require_default(require("./libs/react/common/internationalization/src/lib/locales/en/briefs.json"));
const _chatPagejson = /*#__PURE__*/ _interop_require_default(require("./libs/react/common/internationalization/src/lib/locales/en/chatPage.json"));
const _chatsPagejson = /*#__PURE__*/ _interop_require_default(require("./libs/react/common/internationalization/src/lib/locales/en/chatsPage.json"));
const _clerkjson = /*#__PURE__*/ _interop_require_default(require("./libs/react/common/internationalization/src/lib/locales/en/clerk.json"));
const _commonjson = /*#__PURE__*/ _interop_require_default(require("./libs/react/common/internationalization/src/lib/locales/en/common.json"));
const _errorsjson = /*#__PURE__*/ _interop_require_default(require("./libs/react/common/internationalization/src/lib/locales/en/errors.json"));
const _feedbackPagejson = /*#__PURE__*/ _interop_require_default(require("./libs/react/common/internationalization/src/lib/locales/en/feedbackPage.json"));
const _filePagejson = /*#__PURE__*/ _interop_require_default(require("./libs/react/common/internationalization/src/lib/locales/en/filePage.json"));
const _landingPagejson = /*#__PURE__*/ _interop_require_default(require("./libs/react/common/internationalization/src/lib/locales/en/landingPage.json"));
const _loginPagejson = /*#__PURE__*/ _interop_require_default(require("./libs/react/common/internationalization/src/lib/locales/en/loginPage.json"));
const _loginSSOPagejson = /*#__PURE__*/ _interop_require_default(require("./libs/react/common/internationalization/src/lib/locales/en/loginSSOPage.json"));
const _maintenancejson = /*#__PURE__*/ _interop_require_default(require("./libs/react/common/internationalization/src/lib/locales/en/maintenance.json"));
const _missingRequirementsjson = /*#__PURE__*/ _interop_require_default(require("./libs/react/common/internationalization/src/lib/locales/en/missingRequirements.json"));
const _modalsjson = /*#__PURE__*/ _interop_require_default(require("./libs/react/common/internationalization/src/lib/locales/en/modals.json"));
const _noAccessjson = /*#__PURE__*/ _interop_require_default(require("./libs/react/common/internationalization/src/lib/locales/en/noAccess.json"));
const _onboardingPagejson = /*#__PURE__*/ _interop_require_default(require("./libs/react/common/internationalization/src/lib/locales/en/onboardingPage.json"));
const _playgroundSearchPagejson = /*#__PURE__*/ _interop_require_default(require("./libs/react/common/internationalization/src/lib/locales/en/playgroundSearchPage.json"));
const _productsjson = /*#__PURE__*/ _interop_require_default(require("./libs/react/common/internationalization/src/lib/locales/en/products.json"));
const _resetPasswordjson = /*#__PURE__*/ _interop_require_default(require("./libs/react/common/internationalization/src/lib/locales/en/resetPassword.json"));
const _setUpAccountjson = /*#__PURE__*/ _interop_require_default(require("./libs/react/common/internationalization/src/lib/locales/en/setUpAccount.json"));
const _settingsjson = /*#__PURE__*/ _interop_require_default(require("./libs/react/common/internationalization/src/lib/locales/en/settings.json"));
const _signUpPagejson = /*#__PURE__*/ _interop_require_default(require("./libs/react/common/internationalization/src/lib/locales/en/signUpPage.json"));
const _tabMenujson = /*#__PURE__*/ _interop_require_default(require("./libs/react/common/internationalization/src/lib/locales/en/tabMenu.json"));
const _updateRequiredjson = /*#__PURE__*/ _interop_require_default(require("./libs/react/common/internationalization/src/lib/locales/en/updateRequired.json"));
const _versionjson = /*#__PURE__*/ _interop_require_default(require("./libs/react/common/internationalization/src/lib/locales/en/version.json"));
const _watchlistPagejson = /*#__PURE__*/ _interop_require_default(require("./libs/react/common/internationalization/src/lib/locales/en/watchlistPage.json"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const { preview } = require("./tools/jestPreviewPlugin/preview.js");
Object.assign(global, {
    preview
});
require("@testing-library/jest-dom");
const { configure } = require("@testing-library/react");
require("jest-fail-on-console")();
configure({
    asyncUtilTimeout: Number(process.env["NX_PUBLIC_JEST_TIMEOUT"])
});
jest.retryTimes(Number(process.env["NX_PUBLIC_JEST_RETRY_TIMES"]), {
    logErrorsBeforeRetry: false
});
jest.setTimeout(Number(process.env["NX_PUBLIC_JEST_TIMEOUT"]));
const mockUser = {
    id: "ownerId",
    primaryEmailAddress: {
        emailAddress: "test@test.com"
    },
    firstName: "Test",
    lastName: "User",
    username: "testuser",
    profileImageUrl: "",
    createdAt: new Date(),
    emailAddresses: [
        {
            emailAddress: "test@test.com"
        }
    ],
    organizationMemberships: [
        {
            organization: {
                name: "Organization"
            }
        }
    ],
    publicMetadata: {
        ap: [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10
        ]
    }
};
// `matchMedia` not present, legacy browsers require a polyfill
// This error occurred in WidgetCarousel test
global.matchMedia = global.matchMedia || function matchMediaFix() {
    return {
        matches: false,
        addEventListener () {},
        removeEventListener () {}
    };
};
global.__DEV__ = true;
global.HTMLElement.prototype.scroll = jest.fn();
global.IntersectionObserver = jest.fn(()=>({
        root: null,
        rootMargin: "",
        thresholds: [],
        disconnect: jest.fn(),
        takeRecords: jest.fn(),
        observe: jest.fn(),
        unobserve: jest.fn()
    }));
global.ResizeObserver = class ResizeObserver {
    observe() {}
    unobserve() {}
    disconnect() {}
};
global.scroll = jest.fn();
global.scrollTo = jest.fn();
global.console = {
    log: console.log,
    error: console.error,
    warn: console.warn,
    info: console.info,
    debug: jest.fn()
};
_i18next.default.use(_reacti18next.initReactI18next).init({
    lng: "en",
    resources: {
        en: {
            translation: {
                constants: _internationalizationts.i18nConstants,
                chatPage: _chatPagejson.default,
                clerk: _clerkjson.default,
                errors: _errorsjson.default,
                landingPage: _landingPagejson.default,
                modals: _modalsjson.default,
                loginPage: _loginPagejson.default,
                signUpPage: _signUpPagejson.default,
                tabMenu: _tabMenujson.default,
                common: _commonjson.default,
                version: _versionjson.default,
                filePage: _filePagejson.default,
                chatsPage: _chatsPagejson.default,
                feedbackPage: _feedbackPagejson.default,
                settingsPage: _settingsjson.default,
                resetPasswordPage: _resetPasswordjson.default,
                setUpAccount: _setUpAccountjson.default,
                maintenance: _maintenancejson.default,
                products: _productsjson.default,
                updateRequired: _updateRequiredjson.default,
                noAccessPage: _noAccessjson.default,
                missingRequirements: _missingRequirementsjson.default,
                onboardingPage: _onboardingPagejson.default,
                adminPanel: _adminPaneljson.default,
                apiErrors: _apiErrorsjson.default,
                watchlistPage: _watchlistPagejson.default,
                loginSSOPage: _loginSSOPagejson.default,
                briefsPage: _briefsjson.default,
                agentChatPage: _agentChatPagejson.default,
                playgroundSearchPage: _playgroundSearchPagejson.default
            }
        }
    }
});

//# sourceMappingURL=data:application/json;base64,