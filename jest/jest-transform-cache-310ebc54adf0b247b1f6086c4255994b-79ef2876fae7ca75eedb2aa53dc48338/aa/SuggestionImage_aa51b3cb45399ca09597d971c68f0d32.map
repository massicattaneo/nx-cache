{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/search-autosuggest-input/src/lib/SuggestionInput/SuggestionImage.tsx"],"sourcesContent":["import { NestedSuggestionIcon } from \"./NestedSuggestionIcon\"\nimport { SuggestionIcon } from \"./SuggestionOption.styles\"\n\ntype GetIconProps = {\n  type: string\n  category: string | undefined\n  entityType: string | undefined\n}\n\ntype Props = {\n  nested?: \"default\" | \"last\" | undefined\n  metadata4: string | undefined\n  displayLabel: string\n  type: string\n  category: string | undefined\n  entityType: string | undefined\n}\n\nconst getIcon = ({ type, category, entityType }: GetIconProps) => {\n  if (category === \"ETFs\") {\n    return \"ETF\"\n  }\n  if (entityType) {\n    return entityType\n  }\n  return type ?? \"\"\n}\n\nconst SuggestionImage = ({\n  nested,\n  metadata4,\n  displayLabel,\n  type,\n  category,\n  entityType,\n}: Props) => {\n  if (nested) {\n    return <NestedSuggestionIcon type={nested} />\n  }\n  if (metadata4) {\n    return <img src={metadata4} alt={displayLabel} height={20} width={20} />\n  }\n  const icon = getIcon({ type, category, entityType })\n  return <SuggestionIcon icon={icon} />\n}\n\nexport { SuggestionImage }\n"],"names":["SuggestionImage","getIcon","type","category","entityType","nested","metadata4","displayLabel","NestedSuggestionIcon","img","src","alt","height","width","icon","SuggestionIcon"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BA8CSA;;;eAAAA;;;;sCA9C4B;wCACN;AAiB/B,MAAMC,UAAU,CAAC,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,UAAU,EAAgB;IAC3D,IAAID,aAAa,QAAQ;QACvB,OAAO;IACT;IACA,IAAIC,YAAY;QACd,OAAOA;IACT;IACA,OAAOF,iBAAAA,kBAAAA,OAAQ;AACjB;AAEA,MAAMF,kBAAkB,CAAC,EACvBK,MAAM,EACNC,SAAS,EACTC,YAAY,EACZL,IAAI,EACJC,QAAQ,EACRC,UAAU,EACJ;IACN,IAAIC,QAAQ;QACV,qBAAO,qBAACG,0CAAoB;YAACN,MAAMG;;IACrC;IACA,IAAIC,WAAW;QACb,qBAAO,qBAACG;YAAIC,KAAKJ;YAAWK,KAAKJ;YAAcK,QAAQ;YAAIC,OAAO;;IACpE;IACA,MAAMC,OAAOb,QAAQ;QAAEC;QAAMC;QAAUC;IAAW;IAClD,qBAAO,qBAACW,sCAAc;QAACD,MAAMA;;AAC/B"}