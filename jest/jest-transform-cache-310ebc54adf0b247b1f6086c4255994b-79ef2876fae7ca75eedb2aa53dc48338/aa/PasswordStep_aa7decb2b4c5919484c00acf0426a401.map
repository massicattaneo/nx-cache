{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/apps/client-web/src/app/pages/SignUp/Steps/PasswordStep/PasswordStep.tsx"],"sourcesContent":["import { useForm } from \"react-hook-form\"\nimport { Link } from \"react-router-dom\"\nimport { useSignUp } from \"@clerk/clerk-react\"\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport { displayError } from \"@rp/common/utils\"\nimport { PasswordInput } from \"@rp/react/web/common/base-components\"\nimport { LoginContainer } from \"@rp/react/web/common/composite-components\"\nimport { useClerkSignUpUnsafeMetadata } from \"@rp/react/web/common/hooks\"\nimport { useSnackbar } from \"@rp/react/web/common/providers\"\nimport { reportError } from \"@rp/react/web/common/vendors/utils\"\nimport {\n  Box,\n  Button,\n  Checkbox,\n  FormControl,\n  FormControlLabel,\n  FormHelperText,\n  InputLabel,\n  OutlinedInput,\n  Typography,\n} from \"@rp/react/web/mui/core\"\nimport { PRIVACY_POLICIES_ROUTE, TERMS_OF_USE_ROUTE } from \"@rp/react/web/router\"\nimport { SignUpStepProps } from \"../../context\"\nimport { getSignUpUpdateValues } from \"./PasswordStep.helpers\"\nimport { FormSchema, PasswordStepFormValues } from \"./PasswordStep.types\"\n\nconst PasswordStep = (props: SignUpStepProps) => {\n  const { register, watch, formState, handleSubmit } = useForm<PasswordStepFormValues>({\n    resolver: zodResolver(FormSchema),\n    defaultValues: { terms: false, marketingAccepted: false },\n    mode: \"all\",\n  })\n  const lastNameWatch = watch(\"last\")\n  const firstNameWatch = watch(\"first\")\n  const secretWatch = watch(\"secret\")\n  const termsWatch = watch(\"terms\")\n  const marketingAcceptedWatch = watch(\"marketingAccepted\")\n\n  const { enqueueError } = useSnackbar()\n  const { isLoaded, signUp } = useSignUp()\n  const signUpUnsafeMetaData = useClerkSignUpUnsafeMetadata(marketingAcceptedWatch)\n\n  const handleSubmitForm = async ({ terms: _, ...values }: PasswordStepFormValues) => {\n    if (!isLoaded) {\n      return\n    }\n\n    try {\n      await signUp.update(getSignUpUpdateValues(values, signUpUnsafeMetaData))\n\n      // Send the user an email with the verification code\n      await signUp.prepareEmailAddressVerification({\n        strategy: \"email_code\",\n      })\n    } catch (error: unknown) {\n      reportError(error as Error, {}, () => {})\n      enqueueError(displayError(error))\n      return\n    }\n\n    props.onComplete()\n  }\n\n  return (\n    <LoginContainer pageTitle=\"Create your account\" title=\"Create your account\">\n      <form\n        id=\"formPassword\"\n        autoComplete=\"off\"\n        onSubmit={handleSubmit(handleSubmitForm)}\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n      >\n        <Box sx={{ width: \"100%\" }}>\n          <InputLabel htmlFor=\"firstName\">First Name</InputLabel>\n          <OutlinedInput\n            id=\"firstName\"\n            autoFocus\n            placeholder=\"Write your first name\"\n            style={{ width: \"100%\" }}\n            error={!!formState.errors.first}\n            inputProps={{\n              autoComplete: \"off\",\n            }}\n            {...register(\"first\")}\n          />\n          {formState.errors.first && (\n            <FormHelperText error>{formState.errors.first?.message}</FormHelperText>\n          )}\n        </Box>\n        <Box sx={{ width: \"100%\" }}>\n          <InputLabel htmlFor=\"lastName\">Last Name</InputLabel>\n          <OutlinedInput\n            id=\"lastName\"\n            placeholder=\"Write your last name\"\n            style={{ width: \"100%\" }}\n            inputProps={{\n              className: \"keeper-ignore\",\n              autoComplete: \"off\",\n            }}\n            {...register(\"last\")}\n            error={!!formState.errors.last}\n          />\n          {formState.errors.last && (\n            <FormHelperText error>{formState.errors.last?.message}</FormHelperText>\n          )}\n        </Box>\n        <Box sx={{ width: \"100%\" }}>\n          <InputLabel htmlFor=\"password\">Password</InputLabel>\n          <PasswordInput\n            id=\"password\"\n            placeholder=\"Choose a password\"\n            style={{ width: \"100%\" }}\n            error={!!formState.errors.secret}\n            inputProps={{\n              className: \"keeper-ignore\",\n              autoComplete: \"off\",\n            }}\n            {...register(\"secret\")}\n          />\n          {formState.errors.secret && (\n            <FormHelperText error>{formState.errors.secret?.message}</FormHelperText>\n          )}\n        </Box>\n        <Box sx={{ width: \"100%\" }}>\n          <FormControl required>\n            <FormControlLabel\n              control={<Checkbox {...register(\"terms\")} />}\n              label={\n                <Typography variant=\"caption\" fontSize=\"14px\" color=\"text.secondary\">\n                  I agree to Bigdata's\n                  <Link to={TERMS_OF_USE_ROUTE} target=\"_blank\" rel=\"noopener\">\n                    Terms and Conditions\n                  </Link>{\" \"}\n                  and\n                  <Link to={PRIVACY_POLICIES_ROUTE} target=\"_blank\" rel=\"noopener\">\n                    Privacy Policy\n                  </Link>\n                  .\n                </Typography>\n              }\n            />\n          </FormControl>\n        </Box>\n        <Box sx={{ width: \"100%\" }}>\n          <FormControl>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  {...register(\"marketingAccepted\", {\n                    required: false,\n                  })}\n                />\n              }\n              label={\n                <Typography variant=\"caption\" fontSize=\"14px\" color=\"text.secondary\">\n                  I consent to the processing of my personal data for direct marketing purposes,\n                  including receiving promotional communications via email or other digital channels\n                  (optional)\n                </Typography>\n              }\n            />\n          </FormControl>\n          {formState.errors.marketingAccepted && (\n            <FormHelperText error>{formState.errors.marketingAccepted?.message}</FormHelperText>\n          )}\n        </Box>\n        <Button\n          disabled={\n            !(\n              firstNameWatch &&\n              firstNameWatch.length > 1 &&\n              lastNameWatch &&\n              lastNameWatch.length > 1 &&\n              secretWatch &&\n              secretWatch.length > 1 &&\n              termsWatch\n            )\n          }\n          type=\"submit\"\n          variant=\"contained\"\n          sx={{ marginTop: 3, width: \"100%\" }}\n        >\n          Create Account\n        </Button>\n      </form>\n    </LoginContainer>\n  )\n}\n\nexport { PasswordStep }\n"],"names":["PasswordStep","props","formState","register","watch","handleSubmit","useForm","resolver","zodResolver","FormSchema","defaultValues","terms","marketingAccepted","mode","lastNameWatch","firstNameWatch","secretWatch","termsWatch","marketingAcceptedWatch","enqueueError","useSnackbar","isLoaded","signUp","useSignUp","signUpUnsafeMetaData","useClerkSignUpUnsafeMetadata","handleSubmitForm","_","values","update","getSignUpUpdateValues","prepareEmailAddressVerification","strategy","error","reportError","displayError","onComplete","LoginContainer","pageTitle","title","form","id","autoComplete","onSubmit","style","width","display","flexDirection","alignItems","Box","sx","InputLabel","htmlFor","OutlinedInput","autoFocus","placeholder","errors","first","inputProps","FormHelperText","message","className","last","PasswordInput","secret","FormControl","required","FormControlLabel","control","Checkbox","label","Typography","variant","fontSize","color","Link","to","TERMS_OF_USE_ROUTE","target","rel","PRIVACY_POLICIES_ROUTE","Button","disabled","length","type","marginTop"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}