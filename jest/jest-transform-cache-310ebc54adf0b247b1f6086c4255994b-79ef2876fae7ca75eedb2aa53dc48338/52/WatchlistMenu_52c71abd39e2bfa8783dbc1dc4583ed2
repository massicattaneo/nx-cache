e899183f624f7ba77958230b4efd6003
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "WatchlistMenu", {
    enumerable: true,
    get: function() {
        return WatchlistMenu;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _cqsbyids = require("@rp/react/tanstack-api/cqs-by-ids");
const _basecomponents = require("@rp/react/web/common/base-components");
const _providers = require("@rp/react/web/common/providers");
const _icons = require("@rp/react/web/icons");
const _core = require("@rp/react/web/mui/core");
const _CreateWatchlistButton = require("./CreateWatchlistButton");
const _WatchlistList = require("./WatchlistList");
const _WatchlistMenustyles = require("./WatchlistMenu.styles");
const _watchlisthelpers = require("./watchlist.helpers");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
const WatchlistMenu = ({ filter, iconSize = 14, zIndex, onAddToWatchlist, onHandleOpenModal })=>{
    const { enqueueSuccess, enqueueError, enqueueInfo } = (0, _providers.useSnackbar)();
    const [anchorEl, setAnchorEl] = (0, _react.useState)(undefined);
    const handleOpen = (event)=>{
        setAnchorEl(event.currentTarget);
    };
    const handleClose = ()=>{
        setAnchorEl(undefined);
    };
    const { addByIds, ids } = (0, _cqsbyids.useCqsByIdsContext)();
    (0, _react.useEffect)(()=>{
        addByIds(filter);
    }, [
        addByIds,
        filter
    ]);
    const itemsToAdd = filter.filter(({ key })=>ids[key] !== undefined).map(({ key })=>_object_spread({}, ids[key].data));
    const { addEntities, isLoading } = (0, _watchlisthelpers.useAddEntities)({
        onSuccess: onAddToWatchlist,
        enqueueSuccess,
        enqueueError,
        enqueueInfo
    });
    const handleWatchlistClick = (watchlistId, watchlistName)=>{
        addEntities(watchlistId, itemsToAdd, watchlistName);
        handleClose();
    };
    const open = anchorEl !== undefined;
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
        sx: {
            width: "30px",
            height: "30px",
            display: "flex",
            alignItems: "center",
            justifyContent: "center"
        },
        children: [
            isLoading ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.CircularProgress, {
                size: 20,
                "data-testid": "loading-watchlist-menu",
                sx: (theme)=>({
                        "& svg": {
                            color: `${theme.palette.primary.main} !important`
                        }
                    })
            }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.RPTooltip, {
                title: "Add to Watchlist",
                placement: "top",
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.IconButton, {
                    size: "small",
                    onClick: handleOpen,
                    sx: {
                        display: open ? "flex !important" : undefined
                    },
                    "data-testid": "add-to-watchlist-button",
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.SvgIcon, {
                        component: _icons.WatchlistsFilled,
                        inheritViewBox: true,
                        sx: {
                            height: iconSize
                        }
                    })
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_WatchlistMenustyles.PopperStyled, {
                open: open,
                anchorEl: anchorEl,
                transformOrigin: {
                    vertical: "top",
                    horizontal: "center"
                },
                zIndex: zIndex,
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.ClickAwayListener, {
                    onClickAway: (e)=>{
                        e.preventDefault();
                        handleClose();
                    },
                    children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_WatchlistMenustyles.WatchlistMenuContainer, {
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_WatchlistList.WatchlistList, {
                                onWatchlistClick: (id, name)=>handleWatchlistClick(id, name)
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_CreateWatchlistButton.CreateWatchlistButton, {
                                filter: itemsToAdd,
                                onClick: handleClose,
                                onHandleOpenModal: onHandleOpenModal
                            })
                        ]
                    })
                })
            })
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,