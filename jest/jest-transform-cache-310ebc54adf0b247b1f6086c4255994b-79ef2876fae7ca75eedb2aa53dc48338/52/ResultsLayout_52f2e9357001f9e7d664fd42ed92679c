720b4ba4efabc50a367dbbfd8cc49ff1
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "ResultsLayout", {
    enumerable: true,
    get: function() {
        return ResultsLayout;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _settings = require("@rp/common/settings");
const _basecomponents = require("@rp/react/web/common/base-components");
const _compositecomponents = require("@rp/react/web/common/composite-components");
const _headercomponents = require("@rp/react/web/common/header-components");
const _hooks = require("@rp/react/web/common/hooks");
const _layout = require("@rp/react/web/common/layout");
const _providers = require("@rp/react/web/common/providers");
const _resultsstorycard = require("@rp/react/web/common/results-story-card");
const _cqsquerybar = require("@rp/react/web/cqs-query-bar");
const _discoverypanel = require("@rp/react/web/discovery-sidebar/discovery-panel");
const _documentviewer = require("@rp/react/web/document-viewer");
const _core = require("@rp/react/web/mui/core");
const _ResultsSuggestionBar = require("./ResultsSuggestionBar");
const ResultsLayout = ({ handleOnChange, handleOnExclude, name, expression, isLoading, onAddToWatchlist, onHandleOpenModal, editable = false })=>{
    var _savedQuery_shared;
    const { isFeedbackMode } = (0, _providers.useFeedbackContext)();
    const { isWideScreen, isMobile } = (0, _hooks.useDeviceInfo)();
    const { queryBar, searchQuery: query, savedQuery, uiState: { isSummaryLoading } } = (0, _providers.useQueryContext)();
    const { saveSearchModal: { handleOpen } } = (0, _providers.useModal)();
    const showPublicIcon = savedQuery.shared && ((_savedQuery_shared = savedQuery.shared) === null || _savedQuery_shared === void 0 ? void 0 : _savedQuery_shared.company.permission) !== "undefined";
    const { isFetching: isLoadingResults, documentCount } = (0, _providers.useCurrentCQSPreview)();
    const isSaved = savedQuery.saveStatus === "saved";
    const snapshotData = {
        name,
        queryId: queryBar.id,
        query
    };
    const { share, rename, copyInANewTab, remove, follow } = (0, _providers.useQueryActions)(savedQuery);
    const [menuOpen, setMenuOpen] = (0, _react.useState)(false);
    var _savedQuery_ownerName;
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_headercomponents.HtmlPageHead, {
                title: `${isSaved ? name : "Untitled "} | Search`
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_layout.Header, {
                leftContent: /*#__PURE__*/ (0, _jsxruntime.jsx)(_ResultsSuggestionBar.ResultsSuggestionBar, {}),
                rightContent: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                    children: [
                        isMobile ? null : /*#__PURE__*/ (0, _jsxruntime.jsx)(_providers.SnapshotButton, {
                            snapshotData: snapshotData,
                            isSaved: isSaved,
                            notEnoughResults: documentCount < 20,
                            isLoading: isLoading || isSummaryLoading || isLoadingResults
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_providers.FeedbackButton, {}),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                            sx: {
                                display: "flex",
                                alignItems: "center",
                                maxWidth: isFeedbackMode ? `calc(100% - ${390 + (showPublicIcon ? 30 : 0)}px)` : `calc(100% - ${270 + (showPublicIcon ? 30 : 0)}px)`,
                                flexGrow: 1,
                                justifyContent: "right"
                            },
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.EllipsisTooltip, {
                                tooltipText: isSaved ? name !== null && name !== void 0 ? name : "" : "Untitled Search",
                                tooltipProps: {
                                    disableInteractive: true
                                },
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                                    component: "span",
                                    sx: {
                                        cursor: editable ? "pointer" : undefined
                                    },
                                    onClick: ()=>editable && handleOpen(savedQuery),
                                    children: isSaved ? name : "Untitled Search"
                                })
                            })
                        }),
                        showPublicIcon && /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.SearchInfo, {
                            ownerName: (_savedQuery_ownerName = savedQuery.ownerName) !== null && _savedQuery_ownerName !== void 0 ? _savedQuery_ownerName : "",
                            lastUpdated: savedQuery.lastUpdated,
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                                component: "span",
                                sx: {
                                    alignItems: "center",
                                    display: " flex"
                                },
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.ShareIcon, {
                                    shared: true
                                })
                            })
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                            sx: {
                                display: "flex",
                                gap: 0.5,
                                alignItems: "center"
                            },
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.ActionsMenu, {
                                open: menuOpen,
                                setOpen: setMenuOpen,
                                actions: [
                                    follow,
                                    share,
                                    rename,
                                    copyInANewTab,
                                    remove
                                ],
                                item: undefined,
                                anchorOrigin: {
                                    vertical: "bottom",
                                    horizontal: "right"
                                },
                                transformOrigin: {
                                    vertical: "top",
                                    horizontal: "right"
                                }
                            })
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_providers.FollowButton, {
                            id: savedQuery.id,
                            saveStatus: savedQuery.saveStatus
                        })
                    ]
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_cqsquerybar.CqsQueryBar, {
                query: queryBar,
                onHandleOpenModal: onHandleOpenModal
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_documentviewer.DocumentViewerPage, {
                backTitle: "Back to Results",
                expression: expression,
                onChange: handleOnChange,
                onExclude: handleOnExclude,
                onAddToWatchlist: onAddToWatchlist,
                pdfHeaderOffset: 97,
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Grid, {
                    container: true,
                    columnSpacing: 3,
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Grid, {
                            item: true,
                            xs: 8,
                            xl: 7,
                            marginRight: isWideScreen ? "36px" : 0,
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_resultsstorycard.StoryCardResults, {}, savedQuery.query.scope)
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Grid, {
                            item: true,
                            xs: 4,
                            mt: `${_settings.RESULTS_FILTERS_HEIGHT}px`,
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_discoverypanel.DiscoveryPanel, {
                                onAddToWatchlist: onAddToWatchlist,
                                isFeedbackMode: isFeedbackMode
                            })
                        })
                    ]
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_providers.FeedbackDrawer, {})
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,