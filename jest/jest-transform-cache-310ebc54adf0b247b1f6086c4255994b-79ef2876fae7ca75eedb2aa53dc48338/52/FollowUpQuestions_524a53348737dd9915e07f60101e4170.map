{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/chat/src/lib/Chat/Chat/ChatResponse/FollowUpQuestions/FollowUpQuestions.tsx"],"sourcesContent":["import { useState } from \"react\"\nimport { chatDatasets } from \"@rp/react/common/chat\"\nimport { Box, Fade, Typography } from \"@rp/react/web/mui/core\"\nimport { ArrowDropDown } from \"@rp/react/web/mui/icons\"\nimport { useChatDataContext } from \"../../../ChatDataProvider/ChatDataProvider\"\nimport { FollowUpQuestionButton } from \"./FollowUpQuestionButton\"\n\ntype Props = {\n  interactionId: string\n  queries: Array<{ query: string }>\n  variant: \"desktop\" | \"mobile\"\n}\nconst FollowUpQuestions = ({ queries, interactionId, variant }: Props) => {\n  const isMobile = variant === \"mobile\"\n\n  const {\n    scope: { setScope },\n    mutations: { addPrompt },\n    ui: { removeFollowUpFromInteraction },\n  } = useChatDataContext()\n\n  const [isOpen, setIsOpen] = useState(true)\n\n  return (\n    <Box sx={{ ml: isMobile ? 0 : 7, px: isMobile ? 2 : 0 }}>\n      <Box\n        sx={{ display: \"flex\", alignItems: \"center\", cursor: \"pointer\" }}\n        onClick={() => setIsOpen(prev => !prev)}\n      >\n        <Typography sx={{ fontWeight: 700, py: 2.5 }}>You might also want to ask</Typography>\n        <ArrowDropDown\n          sx={{ transform: isOpen ? undefined : \"rotateZ(-90deg)\", transition: \"transform 0.2s\" }}\n        />\n      </Box>\n      {isOpen\n        ? queries.slice(0, 4).map(({ query }, index) => (\n            <Fade in key={query} style={{ transitionDelay: `${index * 200}ms` }}>\n              <Box>\n                <FollowUpQuestionButton\n                  label={query}\n                  onClick={() => {\n                    setScope(prevScope =>\n                      prevScope && chatDatasets[prevScope].isFollowUpCompatible\n                        ? prevScope\n                        : undefined,\n                    )\n                    addPrompt({ prompt: query, followUpSuggestionIndex: index })\n                    removeFollowUpFromInteraction(interactionId)\n                  }}\n                />\n              </Box>\n            </Fade>\n          ))\n        : null}\n    </Box>\n  )\n}\n\nexport { FollowUpQuestions }\n"],"names":["FollowUpQuestions","queries","interactionId","variant","isMobile","scope","setScope","mutations","addPrompt","ui","removeFollowUpFromInteraction","useChatDataContext","isOpen","setIsOpen","useState","Box","sx","ml","px","display","alignItems","cursor","onClick","prev","Typography","fontWeight","py","ArrowDropDown","transform","undefined","transition","slice","map","query","index","Fade","in","style","transitionDelay","FollowUpQuestionButton","label","prevScope","chatDatasets","isFollowUpCompatible","prompt","followUpSuggestionIndex"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BA0DSA;;;eAAAA;;;;uBA1DgB;sBACI;sBACS;uBACR;kCACK;wCACI;AAOvC,MAAMA,oBAAoB,CAAC,EAAEC,OAAO,EAAEC,aAAa,EAAEC,OAAO,EAAS;IACnE,MAAMC,WAAWD,YAAY;IAE7B,MAAM,EACJE,OAAO,EAAEC,QAAQ,EAAE,EACnBC,WAAW,EAAEC,SAAS,EAAE,EACxBC,IAAI,EAAEC,6BAA6B,EAAE,EACtC,GAAGC,IAAAA,oCAAkB;IAEtB,MAAM,CAACC,QAAQC,UAAU,GAAGC,IAAAA,eAAQ,EAAC;IAErC,qBACE,sBAACC,SAAG;QAACC,IAAI;YAAEC,IAAIb,WAAW,IAAI;YAAGc,IAAId,WAAW,IAAI;QAAE;;0BACpD,sBAACW,SAAG;gBACFC,IAAI;oBAAEG,SAAS;oBAAQC,YAAY;oBAAUC,QAAQ;gBAAU;gBAC/DC,SAAS,IAAMT,UAAUU,CAAAA,OAAQ,CAACA;;kCAElC,qBAACC,gBAAU;wBAACR,IAAI;4BAAES,YAAY;4BAAKC,IAAI;wBAAI;kCAAG;;kCAC9C,qBAACC,oBAAa;wBACZX,IAAI;4BAAEY,WAAWhB,SAASiB,YAAY;4BAAmBC,YAAY;wBAAiB;;;;YAGzFlB,SACGX,QAAQ8B,KAAK,CAAC,GAAG,GAAGC,GAAG,CAAC,CAAC,EAAEC,KAAK,EAAE,EAAEC,sBAClC,qBAACC,UAAI;oBAACC,EAAE;oBAAaC,OAAO;wBAAEC,iBAAiB,CAAC,EAAEJ,QAAQ,IAAI,EAAE,CAAC;oBAAC;8BAChE,cAAA,qBAACnB,SAAG;kCACF,cAAA,qBAACwB,8CAAsB;4BACrBC,OAAOP;4BACPX,SAAS;gCACPhB,SAASmC,CAAAA,YACPA,aAAaC,kBAAY,CAACD,UAAU,CAACE,oBAAoB,GACrDF,YACAZ;gCAENrB,UAAU;oCAAEoC,QAAQX;oCAAOY,yBAAyBX;gCAAM;gCAC1DxB,8BAA8BR;4BAChC;;;mBAZQ+B,UAiBhB;;;AAGV"}