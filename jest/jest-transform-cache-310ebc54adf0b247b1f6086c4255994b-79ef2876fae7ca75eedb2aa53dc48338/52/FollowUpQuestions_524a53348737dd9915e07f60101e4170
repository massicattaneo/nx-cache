1fd9c16f4e34415bee51a9840efe8c4b
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "FollowUpQuestions", {
    enumerable: true,
    get: function() {
        return FollowUpQuestions;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _chat = require("@rp/react/common/chat");
const _core = require("@rp/react/web/mui/core");
const _icons = require("@rp/react/web/mui/icons");
const _ChatDataProvider = require("../../../ChatDataProvider/ChatDataProvider");
const _FollowUpQuestionButton = require("./FollowUpQuestionButton");
const FollowUpQuestions = ({ queries, interactionId, variant })=>{
    const isMobile = variant === "mobile";
    const { scope: { setScope }, mutations: { addPrompt }, ui: { removeFollowUpFromInteraction } } = (0, _ChatDataProvider.useChatDataContext)();
    const [isOpen, setIsOpen] = (0, _react.useState)(true);
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
        sx: {
            ml: isMobile ? 0 : 7,
            px: isMobile ? 2 : 0
        },
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                sx: {
                    display: "flex",
                    alignItems: "center",
                    cursor: "pointer"
                },
                onClick: ()=>setIsOpen((prev)=>!prev),
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                        sx: {
                            fontWeight: 700,
                            py: 2.5
                        },
                        children: "You might also want to ask"
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.ArrowDropDown, {
                        sx: {
                            transform: isOpen ? undefined : "rotateZ(-90deg)",
                            transition: "transform 0.2s"
                        }
                    })
                ]
            }),
            isOpen ? queries.slice(0, 4).map(({ query }, index)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Fade, {
                    in: true,
                    style: {
                        transitionDelay: `${index * 200}ms`
                    },
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_FollowUpQuestionButton.FollowUpQuestionButton, {
                            label: query,
                            onClick: ()=>{
                                setScope((prevScope)=>prevScope && _chat.chatDatasets[prevScope].isFollowUpCompatible ? prevScope : undefined);
                                addPrompt({
                                    prompt: query,
                                    followUpSuggestionIndex: index
                                });
                                removeFollowUpFromInteraction(interactionId);
                            }
                        })
                    })
                }, query)) : null
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NoYXQvc3JjL2xpYi9DaGF0L0NoYXQvQ2hhdFJlc3BvbnNlL0ZvbGxvd1VwUXVlc3Rpb25zL0ZvbGxvd1VwUXVlc3Rpb25zLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgeyBjaGF0RGF0YXNldHMgfSBmcm9tIFwiQHJwL3JlYWN0L2NvbW1vbi9jaGF0XCJcbmltcG9ydCB7IEJveCwgRmFkZSwgVHlwb2dyYXBoeSB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL211aS9jb3JlXCJcbmltcG9ydCB7IEFycm93RHJvcERvd24gfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9tdWkvaWNvbnNcIlxuaW1wb3J0IHsgdXNlQ2hhdERhdGFDb250ZXh0IH0gZnJvbSBcIi4uLy4uLy4uL0NoYXREYXRhUHJvdmlkZXIvQ2hhdERhdGFQcm92aWRlclwiXG5pbXBvcnQgeyBGb2xsb3dVcFF1ZXN0aW9uQnV0dG9uIH0gZnJvbSBcIi4vRm9sbG93VXBRdWVzdGlvbkJ1dHRvblwiXG5cbnR5cGUgUHJvcHMgPSB7XG4gIGludGVyYWN0aW9uSWQ6IHN0cmluZ1xuICBxdWVyaWVzOiBBcnJheTx7IHF1ZXJ5OiBzdHJpbmcgfT5cbiAgdmFyaWFudDogXCJkZXNrdG9wXCIgfCBcIm1vYmlsZVwiXG59XG5jb25zdCBGb2xsb3dVcFF1ZXN0aW9ucyA9ICh7IHF1ZXJpZXMsIGludGVyYWN0aW9uSWQsIHZhcmlhbnQgfTogUHJvcHMpID0+IHtcbiAgY29uc3QgaXNNb2JpbGUgPSB2YXJpYW50ID09PSBcIm1vYmlsZVwiXG5cbiAgY29uc3Qge1xuICAgIHNjb3BlOiB7IHNldFNjb3BlIH0sXG4gICAgbXV0YXRpb25zOiB7IGFkZFByb21wdCB9LFxuICAgIHVpOiB7IHJlbW92ZUZvbGxvd1VwRnJvbUludGVyYWN0aW9uIH0sXG4gIH0gPSB1c2VDaGF0RGF0YUNvbnRleHQoKVxuXG4gIGNvbnN0IFtpc09wZW4sIHNldElzT3Blbl0gPSB1c2VTdGF0ZSh0cnVlKVxuXG4gIHJldHVybiAoXG4gICAgPEJveCBzeD17eyBtbDogaXNNb2JpbGUgPyAwIDogNywgcHg6IGlzTW9iaWxlID8gMiA6IDAgfX0+XG4gICAgICA8Qm94XG4gICAgICAgIHN4PXt7IGRpc3BsYXk6IFwiZmxleFwiLCBhbGlnbkl0ZW1zOiBcImNlbnRlclwiLCBjdXJzb3I6IFwicG9pbnRlclwiIH19XG4gICAgICAgIG9uQ2xpY2s9eygpID0+IHNldElzT3BlbihwcmV2ID0+ICFwcmV2KX1cbiAgICAgID5cbiAgICAgICAgPFR5cG9ncmFwaHkgc3g9e3sgZm9udFdlaWdodDogNzAwLCBweTogMi41IH19PllvdSBtaWdodCBhbHNvIHdhbnQgdG8gYXNrPC9UeXBvZ3JhcGh5PlxuICAgICAgICA8QXJyb3dEcm9wRG93blxuICAgICAgICAgIHN4PXt7IHRyYW5zZm9ybTogaXNPcGVuID8gdW5kZWZpbmVkIDogXCJyb3RhdGVaKC05MGRlZylcIiwgdHJhbnNpdGlvbjogXCJ0cmFuc2Zvcm0gMC4yc1wiIH19XG4gICAgICAgIC8+XG4gICAgICA8L0JveD5cbiAgICAgIHtpc09wZW5cbiAgICAgICAgPyBxdWVyaWVzLnNsaWNlKDAsIDQpLm1hcCgoeyBxdWVyeSB9LCBpbmRleCkgPT4gKFxuICAgICAgICAgICAgPEZhZGUgaW4ga2V5PXtxdWVyeX0gc3R5bGU9e3sgdHJhbnNpdGlvbkRlbGF5OiBgJHtpbmRleCAqIDIwMH1tc2AgfX0+XG4gICAgICAgICAgICAgIDxCb3g+XG4gICAgICAgICAgICAgICAgPEZvbGxvd1VwUXVlc3Rpb25CdXR0b25cbiAgICAgICAgICAgICAgICAgIGxhYmVsPXtxdWVyeX1cbiAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgc2V0U2NvcGUocHJldlNjb3BlID0+XG4gICAgICAgICAgICAgICAgICAgICAgcHJldlNjb3BlICYmIGNoYXREYXRhc2V0c1twcmV2U2NvcGVdLmlzRm9sbG93VXBDb21wYXRpYmxlXG4gICAgICAgICAgICAgICAgICAgICAgICA/IHByZXZTY29wZVxuICAgICAgICAgICAgICAgICAgICAgICAgOiB1bmRlZmluZWQsXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgYWRkUHJvbXB0KHsgcHJvbXB0OiBxdWVyeSwgZm9sbG93VXBTdWdnZXN0aW9uSW5kZXg6IGluZGV4IH0pXG4gICAgICAgICAgICAgICAgICAgIHJlbW92ZUZvbGxvd1VwRnJvbUludGVyYWN0aW9uKGludGVyYWN0aW9uSWQpXG4gICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIDwvQm94PlxuICAgICAgICAgICAgPC9GYWRlPlxuICAgICAgICAgICkpXG4gICAgICAgIDogbnVsbH1cbiAgICA8L0JveD5cbiAgKVxufVxuXG5leHBvcnQgeyBGb2xsb3dVcFF1ZXN0aW9ucyB9XG4iXSwibmFtZXMiOlsiRm9sbG93VXBRdWVzdGlvbnMiLCJxdWVyaWVzIiwiaW50ZXJhY3Rpb25JZCIsInZhcmlhbnQiLCJpc01vYmlsZSIsInNjb3BlIiwic2V0U2NvcGUiLCJtdXRhdGlvbnMiLCJhZGRQcm9tcHQiLCJ1aSIsInJlbW92ZUZvbGxvd1VwRnJvbUludGVyYWN0aW9uIiwidXNlQ2hhdERhdGFDb250ZXh0IiwiaXNPcGVuIiwic2V0SXNPcGVuIiwidXNlU3RhdGUiLCJCb3giLCJzeCIsIm1sIiwicHgiLCJkaXNwbGF5IiwiYWxpZ25JdGVtcyIsImN1cnNvciIsIm9uQ2xpY2siLCJwcmV2IiwiVHlwb2dyYXBoeSIsImZvbnRXZWlnaHQiLCJweSIsIkFycm93RHJvcERvd24iLCJ0cmFuc2Zvcm0iLCJ1bmRlZmluZWQiLCJ0cmFuc2l0aW9uIiwic2xpY2UiLCJtYXAiLCJxdWVyeSIsImluZGV4IiwiRmFkZSIsImluIiwic3R5bGUiLCJ0cmFuc2l0aW9uRGVsYXkiLCJGb2xsb3dVcFF1ZXN0aW9uQnV0dG9uIiwibGFiZWwiLCJwcmV2U2NvcGUiLCJjaGF0RGF0YXNldHMiLCJpc0ZvbGxvd1VwQ29tcGF0aWJsZSIsInByb21wdCIsImZvbGxvd1VwU3VnZ2VzdGlvbkluZGV4Il0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQTBEU0E7OztlQUFBQTs7Ozt1QkExRGdCO3NCQUNJO3NCQUNTO3VCQUNSO2tDQUNLO3dDQUNJO0FBT3ZDLE1BQU1BLG9CQUFvQixDQUFDLEVBQUVDLE9BQU8sRUFBRUMsYUFBYSxFQUFFQyxPQUFPLEVBQVM7SUFDbkUsTUFBTUMsV0FBV0QsWUFBWTtJQUU3QixNQUFNLEVBQ0pFLE9BQU8sRUFBRUMsUUFBUSxFQUFFLEVBQ25CQyxXQUFXLEVBQUVDLFNBQVMsRUFBRSxFQUN4QkMsSUFBSSxFQUFFQyw2QkFBNkIsRUFBRSxFQUN0QyxHQUFHQyxJQUFBQSxvQ0FBa0I7SUFFdEIsTUFBTSxDQUFDQyxRQUFRQyxVQUFVLEdBQUdDLElBQUFBLGVBQVEsRUFBQztJQUVyQyxxQkFDRSxzQkFBQ0MsU0FBRztRQUFDQyxJQUFJO1lBQUVDLElBQUliLFdBQVcsSUFBSTtZQUFHYyxJQUFJZCxXQUFXLElBQUk7UUFBRTs7MEJBQ3BELHNCQUFDVyxTQUFHO2dCQUNGQyxJQUFJO29CQUFFRyxTQUFTO29CQUFRQyxZQUFZO29CQUFVQyxRQUFRO2dCQUFVO2dCQUMvREMsU0FBUyxJQUFNVCxVQUFVVSxDQUFBQSxPQUFRLENBQUNBOztrQ0FFbEMscUJBQUNDLGdCQUFVO3dCQUFDUixJQUFJOzRCQUFFUyxZQUFZOzRCQUFLQyxJQUFJO3dCQUFJO2tDQUFHOztrQ0FDOUMscUJBQUNDLG9CQUFhO3dCQUNaWCxJQUFJOzRCQUFFWSxXQUFXaEIsU0FBU2lCLFlBQVk7NEJBQW1CQyxZQUFZO3dCQUFpQjs7OztZQUd6RmxCLFNBQ0dYLFFBQVE4QixLQUFLLENBQUMsR0FBRyxHQUFHQyxHQUFHLENBQUMsQ0FBQyxFQUFFQyxLQUFLLEVBQUUsRUFBRUMsc0JBQ2xDLHFCQUFDQyxVQUFJO29CQUFDQyxFQUFFO29CQUFhQyxPQUFPO3dCQUFFQyxpQkFBaUIsQ0FBQyxFQUFFSixRQUFRLElBQUksRUFBRSxDQUFDO29CQUFDOzhCQUNoRSxjQUFBLHFCQUFDbkIsU0FBRztrQ0FDRixjQUFBLHFCQUFDd0IsOENBQXNCOzRCQUNyQkMsT0FBT1A7NEJBQ1BYLFNBQVM7Z0NBQ1BoQixTQUFTbUMsQ0FBQUEsWUFDUEEsYUFBYUMsa0JBQVksQ0FBQ0QsVUFBVSxDQUFDRSxvQkFBb0IsR0FDckRGLFlBQ0FaO2dDQUVOckIsVUFBVTtvQ0FBRW9DLFFBQVFYO29DQUFPWSx5QkFBeUJYO2dDQUFNO2dDQUMxRHhCLDhCQUE4QlI7NEJBQ2hDOzs7bUJBWlErQixVQWlCaEI7OztBQUdWIn0=