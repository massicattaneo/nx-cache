1116247d130ad203734f7edf43f59634
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "useBriefConfigCardActions", {
    enumerable: true,
    get: function() {
        return useBriefConfigCardActions;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _reactrouterdom = require("react-router-dom");
const _providers = require("@rp/react/web/common/providers");
const _icons = require("@rp/react/web/mui/icons");
const _router = require("@rp/react/web/router");
const useBriefConfigCardActions = ()=>{
    const { unsubscribeBriefConfigModal: { handleOpen: handleUnsubscribe } } = (0, _providers.useModal)();
    const navigate = (0, _reactrouterdom.useNavigate)();
    const actionsDict = (0, _react.useMemo)(()=>({
            edit: {
                id: "edit",
                label: "Edit Brief",
                icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.EditNote, {}),
                onClick: ({ id })=>navigate(_router.BRIEF_ROUTE_EDIT.replace(":briefId", id))
            },
            unsubscribe: {
                id: "unsubscribe",
                label: "Unsubscribe",
                icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.PlaylistRemove, {
                    sx: {
                        fill: "#FC5555"
                    }
                }),
                onClick: handleUnsubscribe,
                color: "#FC5555"
            }
        }), [
        navigate,
        handleUnsubscribe
    ]);
    return {
        actionsDict
    };
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2JyaWVmL3NyYy9ob29rcy91c2VCcmllZkNvbmZpZ0NhcmRBY3Rpb25zL3VzZUJyaWVmQ29uZmlnQ2FyZEFjdGlvbnMudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZU1lbW8gfSBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IHsgdXNlTmF2aWdhdGUgfSBmcm9tIFwicmVhY3Qtcm91dGVyLWRvbVwiXG5pbXBvcnQgeyBCcmllZkNvbmZpZyB9IGZyb20gXCJAcnAvcmVhY3QvdGFuc3RhY2stYXBpL2JyaWVmXCJcbmltcG9ydCB7IHVzZU1vZGFsIH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvY29tbW9uL3Byb3ZpZGVyc1wiXG5pbXBvcnQgeyBFZGl0Tm90ZSwgUGxheWxpc3RSZW1vdmUgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9tdWkvaWNvbnNcIlxuaW1wb3J0IHsgQlJJRUZfUk9VVEVfRURJVCB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL3JvdXRlclwiXG5pbXBvcnQgeyBCcmllZkNvbmZpZ0NhcmRBY3Rpb25zRGljdCB9IGZyb20gXCIuL2JyaWVmQ29uZmlnQ2FyZEFjdGlvbnMudHlwZVwiXG5cbnR5cGUgVXNlQnJpZWZDb25maWdDYXJkQWN0aW9uc1N0YXRlID0ge1xuICBhY3Rpb25zRGljdDogQnJpZWZDb25maWdDYXJkQWN0aW9uc0RpY3Rcbn1cblxuY29uc3QgdXNlQnJpZWZDb25maWdDYXJkQWN0aW9ucyA9ICgpOiBVc2VCcmllZkNvbmZpZ0NhcmRBY3Rpb25zU3RhdGUgPT4ge1xuICBjb25zdCB7XG4gICAgdW5zdWJzY3JpYmVCcmllZkNvbmZpZ01vZGFsOiB7IGhhbmRsZU9wZW46IGhhbmRsZVVuc3Vic2NyaWJlIH0sXG4gIH0gPSB1c2VNb2RhbCgpXG5cbiAgY29uc3QgbmF2aWdhdGUgPSB1c2VOYXZpZ2F0ZSgpXG5cbiAgY29uc3QgYWN0aW9uc0RpY3QgPSB1c2VNZW1vKFxuICAgICgpID0+ICh7XG4gICAgICBlZGl0OiB7XG4gICAgICAgIGlkOiBcImVkaXRcIixcbiAgICAgICAgbGFiZWw6IFwiRWRpdCBCcmllZlwiLFxuICAgICAgICBpY29uOiA8RWRpdE5vdGUgLz4sXG4gICAgICAgIG9uQ2xpY2s6ICh7IGlkIH06IEJyaWVmQ29uZmlnKSA9PiBuYXZpZ2F0ZShCUklFRl9ST1VURV9FRElULnJlcGxhY2UoXCI6YnJpZWZJZFwiLCBpZCkpLFxuICAgICAgfSxcbiAgICAgIHVuc3Vic2NyaWJlOiB7XG4gICAgICAgIGlkOiBcInVuc3Vic2NyaWJlXCIsXG4gICAgICAgIGxhYmVsOiBcIlVuc3Vic2NyaWJlXCIsXG4gICAgICAgIGljb246IDxQbGF5bGlzdFJlbW92ZSBzeD17eyBmaWxsOiBcIiNGQzU1NTVcIiB9fSAvPixcbiAgICAgICAgb25DbGljazogaGFuZGxlVW5zdWJzY3JpYmUsXG4gICAgICAgIGNvbG9yOiBcIiNGQzU1NTVcIixcbiAgICAgIH0sXG4gICAgfSksXG4gICAgW25hdmlnYXRlLCBoYW5kbGVVbnN1YnNjcmliZV0sXG4gIClcblxuICByZXR1cm4geyBhY3Rpb25zRGljdCB9XG59XG5cbmV4cG9ydCB7IHVzZUJyaWVmQ29uZmlnQ2FyZEFjdGlvbnMgfVxuZXhwb3J0IHR5cGUgeyBVc2VCcmllZkNvbmZpZ0NhcmRBY3Rpb25zU3RhdGUgfVxuIl0sIm5hbWVzIjpbInVzZUJyaWVmQ29uZmlnQ2FyZEFjdGlvbnMiLCJ1bnN1YnNjcmliZUJyaWVmQ29uZmlnTW9kYWwiLCJoYW5kbGVPcGVuIiwiaGFuZGxlVW5zdWJzY3JpYmUiLCJ1c2VNb2RhbCIsIm5hdmlnYXRlIiwidXNlTmF2aWdhdGUiLCJhY3Rpb25zRGljdCIsInVzZU1lbW8iLCJlZGl0IiwiaWQiLCJsYWJlbCIsImljb24iLCJFZGl0Tm90ZSIsIm9uQ2xpY2siLCJCUklFRl9ST1VURV9FRElUIiwicmVwbGFjZSIsInVuc3Vic2NyaWJlIiwiUGxheWxpc3RSZW1vdmUiLCJzeCIsImZpbGwiLCJjb2xvciJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkF5Q1NBOzs7ZUFBQUE7Ozs7dUJBekNlO2dDQUNJOzJCQUVIO3VCQUNnQjt3QkFDUjtBQU9qQyxNQUFNQSw0QkFBNEI7SUFDaEMsTUFBTSxFQUNKQyw2QkFBNkIsRUFBRUMsWUFBWUMsaUJBQWlCLEVBQUUsRUFDL0QsR0FBR0MsSUFBQUEsbUJBQVE7SUFFWixNQUFNQyxXQUFXQyxJQUFBQSwyQkFBVztJQUU1QixNQUFNQyxjQUFjQyxJQUFBQSxjQUFPLEVBQ3pCLElBQU8sQ0FBQTtZQUNMQyxNQUFNO2dCQUNKQyxJQUFJO2dCQUNKQyxPQUFPO2dCQUNQQyxvQkFBTSxxQkFBQ0MsZUFBUTtnQkFDZkMsU0FBUyxDQUFDLEVBQUVKLEVBQUUsRUFBZSxHQUFLTCxTQUFTVSx3QkFBZ0IsQ0FBQ0MsT0FBTyxDQUFDLFlBQVlOO1lBQ2xGO1lBQ0FPLGFBQWE7Z0JBQ1hQLElBQUk7Z0JBQ0pDLE9BQU87Z0JBQ1BDLG9CQUFNLHFCQUFDTSxxQkFBYztvQkFBQ0MsSUFBSTt3QkFBRUMsTUFBTTtvQkFBVTs7Z0JBQzVDTixTQUFTWDtnQkFDVGtCLE9BQU87WUFDVDtRQUNGLENBQUEsR0FDQTtRQUFDaEI7UUFBVUY7S0FBa0I7SUFHL0IsT0FBTztRQUFFSTtJQUFZO0FBQ3ZCIn0=