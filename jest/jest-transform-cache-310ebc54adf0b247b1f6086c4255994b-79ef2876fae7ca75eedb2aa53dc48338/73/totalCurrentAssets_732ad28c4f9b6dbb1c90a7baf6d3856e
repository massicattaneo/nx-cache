04af27641c6053ce38a089707b37ef31
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "totalCurrentAssets", {
    enumerable: true,
    get: function() {
        return totalCurrentAssets;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _WatchlistDataTablePriceCell = require("../../WatchlistDataTableCells/WatchlistDataTablePriceCell");
const _genericColumn = require("../../genericColumn");
const _fiscalPeriodUtils = require("../../utils/fiscalPeriodUtils");
function totalCurrentAssets(tableName) {
    const title = "Total Current Assets (FQ)";
    return (0, _genericColumn.genericColumn)({
        endpoint: "companyBalanceStatement",
        columnKeys: [
            "totalCurrentAssets"
        ],
        size: 130,
        title,
        enableSorting: true,
        enableHiding: true,
        tooltip: "Sum of all short-term assets.",
        cell: (info)=>{
            var _info_row_original_financialData_companyBalanceStatement_data, _info_row_original_financialData_companyBalanceStatement, _info_row_original_financialData_companyBalanceStatement_data1, _info_row_original_financialData_companyBalanceStatement1;
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_WatchlistDataTablePriceCell.WatchlistDataTablePriceCell, {
                tooltip: `Explain the ${title}`,
                queryResult: info.row.original.financialData.companyBalanceStatement,
                currency: (_info_row_original_financialData_companyBalanceStatement = info.row.original.financialData.companyBalanceStatement) === null || _info_row_original_financialData_companyBalanceStatement === void 0 ? void 0 : (_info_row_original_financialData_companyBalanceStatement_data = _info_row_original_financialData_companyBalanceStatement.data) === null || _info_row_original_financialData_companyBalanceStatement_data === void 0 ? void 0 : _info_row_original_financialData_companyBalanceStatement_data.reportedCurrency,
                onClick: ()=>{
                    var _info_row_original_financialData_companyBalanceStatement_data, _info_row_original_financialData_companyBalanceStatement, _info_row_original_onChatWithCell, _info_row_original;
                    const fiscalPeriod = (0, _fiscalPeriodUtils.getBalanceSheetFiscalPeriod)(info.row.original);
                    (_info_row_original_onChatWithCell = (_info_row_original = info.row.original).onChatWithCell) === null || _info_row_original_onChatWithCell === void 0 ? void 0 : _info_row_original_onChatWithCell.call(_info_row_original, {
                        prompt: `What has ${info.row.original.entityInfo.name} reported in ${fiscalPeriod} about total current assets?`,
                        value: (_info_row_original_financialData_companyBalanceStatement = info.row.original.financialData.companyBalanceStatement) === null || _info_row_original_financialData_companyBalanceStatement === void 0 ? void 0 : (_info_row_original_financialData_companyBalanceStatement_data = _info_row_original_financialData_companyBalanceStatement.data) === null || _info_row_original_financialData_companyBalanceStatement_data === void 0 ? void 0 : _info_row_original_financialData_companyBalanceStatement_data.totalCurrentAssets,
                        entityInfo: info.row.original.entityInfo,
                        columnName: `${tableName}: ${title}`
                    });
                },
                value: (_info_row_original_financialData_companyBalanceStatement1 = info.row.original.financialData.companyBalanceStatement) === null || _info_row_original_financialData_companyBalanceStatement1 === void 0 ? void 0 : (_info_row_original_financialData_companyBalanceStatement_data1 = _info_row_original_financialData_companyBalanceStatement1.data) === null || _info_row_original_financialData_companyBalanceStatement_data1 === void 0 ? void 0 : _info_row_original_financialData_companyBalanceStatement_data1.totalCurrentAssets
            });
        }
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL3dhdGNobGlzdHMvc3JjL2xpYi9XYXRjaGxpc3REYXRhVGFicy9lbmRwb2ludHMvY29tcGFueUJhbGFuY2VTdGF0ZW1lbnQvdG90YWxDdXJyZW50QXNzZXRzLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBXYXRjaGxpc3REYXRhVGFibGVQcmljZUNlbGwgfSBmcm9tIFwiLi4vLi4vV2F0Y2hsaXN0RGF0YVRhYmxlQ2VsbHMvV2F0Y2hsaXN0RGF0YVRhYmxlUHJpY2VDZWxsXCJcbmltcG9ydCB7IGdlbmVyaWNDb2x1bW4gfSBmcm9tIFwiLi4vLi4vZ2VuZXJpY0NvbHVtblwiXG5pbXBvcnQgeyBnZXRCYWxhbmNlU2hlZXRGaXNjYWxQZXJpb2QgfSBmcm9tIFwiLi4vLi4vdXRpbHMvZmlzY2FsUGVyaW9kVXRpbHNcIlxuXG5mdW5jdGlvbiB0b3RhbEN1cnJlbnRBc3NldHModGFibGVOYW1lOiBzdHJpbmcpIHtcbiAgY29uc3QgdGl0bGUgPSBcIlRvdGFsIEN1cnJlbnQgQXNzZXRzIChGUSlcIlxuICByZXR1cm4gZ2VuZXJpY0NvbHVtbih7XG4gICAgZW5kcG9pbnQ6IFwiY29tcGFueUJhbGFuY2VTdGF0ZW1lbnRcIixcbiAgICBjb2x1bW5LZXlzOiBbXCJ0b3RhbEN1cnJlbnRBc3NldHNcIl0sXG4gICAgc2l6ZTogMTMwLFxuICAgIHRpdGxlLFxuICAgIGVuYWJsZVNvcnRpbmc6IHRydWUsXG4gICAgZW5hYmxlSGlkaW5nOiB0cnVlLFxuICAgIHRvb2x0aXA6IFwiU3VtIG9mIGFsbCBzaG9ydC10ZXJtIGFzc2V0cy5cIixcbiAgICBjZWxsOiBpbmZvID0+IHtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxXYXRjaGxpc3REYXRhVGFibGVQcmljZUNlbGxcbiAgICAgICAgICB0b29sdGlwPXtgRXhwbGFpbiB0aGUgJHt0aXRsZX1gfVxuICAgICAgICAgIHF1ZXJ5UmVzdWx0PXtpbmZvLnJvdy5vcmlnaW5hbC5maW5hbmNpYWxEYXRhLmNvbXBhbnlCYWxhbmNlU3RhdGVtZW50fVxuICAgICAgICAgIGN1cnJlbmN5PXtpbmZvLnJvdy5vcmlnaW5hbC5maW5hbmNpYWxEYXRhLmNvbXBhbnlCYWxhbmNlU3RhdGVtZW50Py5kYXRhPy5yZXBvcnRlZEN1cnJlbmN5fVxuICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGZpc2NhbFBlcmlvZCA9IGdldEJhbGFuY2VTaGVldEZpc2NhbFBlcmlvZChpbmZvLnJvdy5vcmlnaW5hbClcbiAgICAgICAgICAgIGluZm8ucm93Lm9yaWdpbmFsLm9uQ2hhdFdpdGhDZWxsPy4oe1xuICAgICAgICAgICAgICBwcm9tcHQ6IGBXaGF0IGhhcyAke2luZm8ucm93Lm9yaWdpbmFsLmVudGl0eUluZm8ubmFtZX0gcmVwb3J0ZWQgaW4gJHtmaXNjYWxQZXJpb2R9IGFib3V0IHRvdGFsIGN1cnJlbnQgYXNzZXRzP2AsXG4gICAgICAgICAgICAgIHZhbHVlOlxuICAgICAgICAgICAgICAgIGluZm8ucm93Lm9yaWdpbmFsLmZpbmFuY2lhbERhdGEuY29tcGFueUJhbGFuY2VTdGF0ZW1lbnQ/LmRhdGE/LnRvdGFsQ3VycmVudEFzc2V0cyxcbiAgICAgICAgICAgICAgZW50aXR5SW5mbzogaW5mby5yb3cub3JpZ2luYWwuZW50aXR5SW5mbyxcbiAgICAgICAgICAgICAgY29sdW1uTmFtZTogYCR7dGFibGVOYW1lfTogJHt0aXRsZX1gLFxuICAgICAgICAgICAgfSlcbiAgICAgICAgICB9fVxuICAgICAgICAgIHZhbHVlPXtpbmZvLnJvdy5vcmlnaW5hbC5maW5hbmNpYWxEYXRhLmNvbXBhbnlCYWxhbmNlU3RhdGVtZW50Py5kYXRhPy50b3RhbEN1cnJlbnRBc3NldHN9XG4gICAgICAgIC8+XG4gICAgICApXG4gICAgfSxcbiAgfSlcbn1cblxuZXhwb3J0IHsgdG90YWxDdXJyZW50QXNzZXRzIH1cbiJdLCJuYW1lcyI6WyJ0b3RhbEN1cnJlbnRBc3NldHMiLCJ0YWJsZU5hbWUiLCJ0aXRsZSIsImdlbmVyaWNDb2x1bW4iLCJlbmRwb2ludCIsImNvbHVtbktleXMiLCJzaXplIiwiZW5hYmxlU29ydGluZyIsImVuYWJsZUhpZGluZyIsInRvb2x0aXAiLCJjZWxsIiwiaW5mbyIsIldhdGNobGlzdERhdGFUYWJsZVByaWNlQ2VsbCIsInF1ZXJ5UmVzdWx0Iiwicm93Iiwib3JpZ2luYWwiLCJmaW5hbmNpYWxEYXRhIiwiY29tcGFueUJhbGFuY2VTdGF0ZW1lbnQiLCJjdXJyZW5jeSIsImRhdGEiLCJyZXBvcnRlZEN1cnJlbmN5Iiwib25DbGljayIsImZpc2NhbFBlcmlvZCIsImdldEJhbGFuY2VTaGVldEZpc2NhbFBlcmlvZCIsIm9uQ2hhdFdpdGhDZWxsIiwicHJvbXB0IiwiZW50aXR5SW5mbyIsIm5hbWUiLCJ2YWx1ZSIsImNvbHVtbk5hbWUiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkFxQ1NBOzs7ZUFBQUE7Ozs7NkNBckNtQzsrQkFDZDttQ0FDYztBQUU1QyxTQUFTQSxtQkFBbUJDLFNBQWlCO0lBQzNDLE1BQU1DLFFBQVE7SUFDZCxPQUFPQyxJQUFBQSw0QkFBYSxFQUFDO1FBQ25CQyxVQUFVO1FBQ1ZDLFlBQVk7WUFBQztTQUFxQjtRQUNsQ0MsTUFBTTtRQUNOSjtRQUNBSyxlQUFlO1FBQ2ZDLGNBQWM7UUFDZEMsU0FBUztRQUNUQyxNQUFNQyxDQUFBQTtnQkFLVUEsK0RBQUFBLDBEQVdIQSxnRUFBQUE7WUFmWCxxQkFDRSxxQkFBQ0Msd0RBQTJCO2dCQUMxQkgsU0FBUyxDQUFDLFlBQVksRUFBRVAsTUFBTSxDQUFDO2dCQUMvQlcsYUFBYUYsS0FBS0csR0FBRyxDQUFDQyxRQUFRLENBQUNDLGFBQWEsQ0FBQ0MsdUJBQXVCO2dCQUNwRUMsUUFBUSxHQUFFUCwyREFBQUEsS0FBS0csR0FBRyxDQUFDQyxRQUFRLENBQUNDLGFBQWEsQ0FBQ0MsdUJBQXVCLGNBQXZETixnRkFBQUEsZ0VBQUFBLHlEQUF5RFEsSUFBSSxjQUE3RFIsb0ZBQUFBLDhEQUErRFMsZ0JBQWdCO2dCQUN6RkMsU0FBUzt3QkFLSFYsK0RBQUFBLDBEQUhKQSxtQ0FBQUE7b0JBREEsTUFBTVcsZUFBZUMsSUFBQUEsOENBQTJCLEVBQUNaLEtBQUtHLEdBQUcsQ0FBQ0MsUUFBUTtxQkFDbEVKLG9DQUFBQSxDQUFBQSxxQkFBQUEsS0FBS0csR0FBRyxDQUFDQyxRQUFRLEVBQUNTLGNBQWMsY0FBaENiLHdEQUFBQSx1Q0FBQUEsb0JBQW1DO3dCQUNqQ2MsUUFBUSxDQUFDLFNBQVMsRUFBRWQsS0FBS0csR0FBRyxDQUFDQyxRQUFRLENBQUNXLFVBQVUsQ0FBQ0MsSUFBSSxDQUFDLGFBQWEsRUFBRUwsYUFBYSw0QkFBNEIsQ0FBQzt3QkFDL0dNLEtBQUssR0FDSGpCLDJEQUFBQSxLQUFLRyxHQUFHLENBQUNDLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDQyx1QkFBdUIsY0FBdkROLGdGQUFBQSxnRUFBQUEseURBQXlEUSxJQUFJLGNBQTdEUixvRkFBQUEsOERBQStEWCxrQkFBa0I7d0JBQ25GMEIsWUFBWWYsS0FBS0csR0FBRyxDQUFDQyxRQUFRLENBQUNXLFVBQVU7d0JBQ3hDRyxZQUFZLENBQUMsRUFBRTVCLFVBQVUsRUFBRSxFQUFFQyxNQUFNLENBQUM7b0JBQ3RDO2dCQUNGO2dCQUNBMEIsS0FBSyxHQUFFakIsNERBQUFBLEtBQUtHLEdBQUcsQ0FBQ0MsUUFBUSxDQUFDQyxhQUFhLENBQUNDLHVCQUF1QixjQUF2RE4saUZBQUFBLGlFQUFBQSwwREFBeURRLElBQUksY0FBN0RSLHFGQUFBQSwrREFBK0RYLGtCQUFrQjs7UUFHOUY7SUFDRjtBQUNGIn0=