a88426b8661f16cc9450de858cbd2ee8
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "BriefWatchlistSelectionStep", {
    enumerable: true,
    get: function() {
        return BriefWatchlistSelectionStep;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _clerkreact = require("@clerk/clerk-react");
const _providers = require("@rp/react/common/providers");
const _watchlist = require("@rp/react/tanstack-api/watchlist");
const _compositecomponents = require("@rp/react/web/common/composite-components");
const _core = require("@rp/react/web/mui/core");
const _icons = require("@rp/react/web/mui/icons");
const _BriefStepsContent = require("../BriefStepsContent");
const _BriefUserWatchlists = require("./BriefUserWatchlists");
const _BriefWatchlistsSubheader = require("./BriefWatchlistsSubheader");
const _constants = require("./constants");
const _useWatchlistFiltering = require("./hooks/useWatchlistFiltering");
const _useWatchlistSearch = require("./hooks/useWatchlistSearch");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
function BriefWatchlistSelectionStep() {
    const { user } = (0, _clerkreact.useUser)();
    const { canShare } = (0, _providers.useAccount)();
    const userId = user === null || user === void 0 ? void 0 : user.id;
    const [activeTab, setActiveTab] = (0, _react.useState)(_constants.DEFAULT_WATCHLIST_TAB);
    const { filterTerm, setFilterTerm, isSearching } = (0, _useWatchlistSearch.useWatchlistSearch)();
    const { isLoading: isLoadingAllWatchlists, data: allWatchlists = _constants.EMPTY_WATCHLISTS } = (0, _watchlist.useAllWatchlists)();
    const { filteredWatchlists } = (0, _useWatchlistFiltering.useWatchlistFiltering)({
        allWatchlists,
        activeTab,
        userId,
        isSearching
    });
    // Calculate filtered results count (applies search filter)
    const filteredResultsCount = (0, _react.useMemo)(()=>{
        if (isSearching) {
            return filteredWatchlists.filter((item)=>item.name.toLowerCase().includes(filterTerm.toLowerCase())).length;
        }
        return filteredWatchlists.length;
    }, [
        filteredWatchlists,
        filterTerm,
        isSearching
    ]);
    const shouldHideFilter = isLoadingAllWatchlists;
    const hasNoResults = filteredResultsCount === 0 && !isLoadingAllWatchlists;
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.BriefStepsLegend, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                    children: "Select a watchlist to schedule a brief and stay up to date:"
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                sx: {
                    backgroundColor: "grey.800",
                    p: 1.5,
                    borderRadius: 2,
                    marginTop: 1.5
                },
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Typography, {
                    fontSize: "13px",
                    color: "text.200",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.InfoOutlined, {
                            style: {
                                marginBottom: "-3.5px",
                                marginRight: "8px",
                                color: "text.200",
                                width: "16px",
                                height: "16px"
                            }
                        }),
                        "This feature currently supports only",
                        " ",
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                            style: {
                                fontWeight: 700
                            },
                            children: "company watchlists"
                        }),
                        ". Up to",
                        " ",
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                            style: {
                                fontWeight: 700
                            },
                            children: "100"
                        }),
                        " companies will be included in the brief."
                    ]
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_BriefStepsContent.BriefStepsContent, {
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_BriefWatchlistsSubheader.BriefWatchlistsSubheader, {
                        shouldHideFilter: shouldHideFilter,
                        activeTab: isSearching ? null : activeTab,
                        onTabChange: setActiveTab,
                        canShare: canShare,
                        filterTerm: filterTerm,
                        setFilterTerm: setFilterTerm,
                        filteredResultsCount: filteredResultsCount,
                        isSearching: isSearching,
                        hasNoResults: hasNoResults
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_BriefUserWatchlists.BriefUserWatchlists, {
                        userWatchlists: filteredWatchlists,
                        isLoadingUserWatchlists: isLoadingAllWatchlists,
                        activeTab: activeTab
                    })
                ]
            })
        ]
    });
}

//# sourceMappingURL=data:application/json;base64,