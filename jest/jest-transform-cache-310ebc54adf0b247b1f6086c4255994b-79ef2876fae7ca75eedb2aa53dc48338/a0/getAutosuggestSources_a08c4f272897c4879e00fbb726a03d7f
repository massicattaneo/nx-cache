b5de05dbdc455310cb2fe6e4976e266b
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "getAutosuggestSources", {
    enumerable: true,
    get: function() {
        return getAutosuggestSources;
    }
});
const _axiosclient = require("@rp/react/axios-client");
const _contentconstants = require("../content.constants");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const category = [
    "Sources"
];
async function getAutosuggestSources({ offset = 0, pageCount, contentPackage, contentCategory, query = "" }) {
    const params = {
        query,
        category,
        sourceCategory: contentCategory ? [
            contentCategory
        ] : undefined,
        rpPackageId: contentPackage ? [
            contentPackage
        ] : undefined,
        perPage: pageCount,
        page: offset + 1
    };
    const { data } = await _axiosclient.axiosClient.post(_contentconstants.AUTOSUGGEST_SOURCES_ROUTE, params);
    const response = {
        count: data.count,
        page: data.page,
        results: data.results.map((result)=>_object_spread_props(_object_spread({}, result), {
                id: result.key
            }))
    };
    return response;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3QvdGFuc3RhY2stYXBpL2NvbnRlbnQvc3JjL3NlcnZpY2VzL2dldEF1dG9zdWdnZXN0U291cmNlcy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBheGlvc0NsaWVudCB9IGZyb20gXCJAcnAvcmVhY3QvYXhpb3MtY2xpZW50XCJcbmltcG9ydCB0eXBlIHsgQXV0b3N1Z2dlc3RTb3VyY2VzUmVzcG9uc2UsIEF1dG9zdWdnZXN0U291cmNlc1Jlc3BvbnNlRFRPIH0gZnJvbSBcIi4uXCJcbmltcG9ydCB7IEFVVE9TVUdHRVNUX1NPVVJDRVNfUk9VVEUgfSBmcm9tIFwiLi4vY29udGVudC5jb25zdGFudHNcIlxuXG50eXBlIEdldEF1dG9zdWdnZXN0U291cmNlc1Byb3BzID0ge1xuICBwYWdlQ291bnQ6IG51bWJlclxuICBvZmZzZXQ/OiBudW1iZXJcbiAgY29udGVudFBhY2thZ2U/OiBzdHJpbmcgfCB1bmRlZmluZWRcbiAgY29udGVudENhdGVnb3J5Pzogc3RyaW5nIHwgdW5kZWZpbmVkXG4gIHF1ZXJ5Pzogc3RyaW5nXG59XG5cbmNvbnN0IGNhdGVnb3J5ID0gW1wiU291cmNlc1wiXVxuYXN5bmMgZnVuY3Rpb24gZ2V0QXV0b3N1Z2dlc3RTb3VyY2VzKHtcbiAgb2Zmc2V0ID0gMCxcbiAgcGFnZUNvdW50LFxuICBjb250ZW50UGFja2FnZSxcbiAgY29udGVudENhdGVnb3J5LFxuICBxdWVyeSA9IFwiXCIsXG59OiBHZXRBdXRvc3VnZ2VzdFNvdXJjZXNQcm9wcyk6IFByb21pc2U8QXV0b3N1Z2dlc3RTb3VyY2VzUmVzcG9uc2U+IHtcbiAgY29uc3QgcGFyYW1zID0ge1xuICAgIHF1ZXJ5LFxuICAgIGNhdGVnb3J5LFxuICAgIHNvdXJjZUNhdGVnb3J5OiBjb250ZW50Q2F0ZWdvcnkgPyBbY29udGVudENhdGVnb3J5XSA6IHVuZGVmaW5lZCxcbiAgICBycFBhY2thZ2VJZDogY29udGVudFBhY2thZ2UgPyBbY29udGVudFBhY2thZ2VdIDogdW5kZWZpbmVkLFxuICAgIHBlclBhZ2U6IHBhZ2VDb3VudCxcbiAgICBwYWdlOiBvZmZzZXQgKyAxLFxuICB9XG5cbiAgY29uc3QgeyBkYXRhIH0gPSBhd2FpdCBheGlvc0NsaWVudC5wb3N0PEF1dG9zdWdnZXN0U291cmNlc1Jlc3BvbnNlRFRPPihcbiAgICBBVVRPU1VHR0VTVF9TT1VSQ0VTX1JPVVRFLFxuICAgIHBhcmFtcyxcbiAgKVxuXG4gIGNvbnN0IHJlc3BvbnNlOiBBdXRvc3VnZ2VzdFNvdXJjZXNSZXNwb25zZSA9IHtcbiAgICBjb3VudDogZGF0YS5jb3VudCxcbiAgICBwYWdlOiBkYXRhLnBhZ2UsXG4gICAgcmVzdWx0czogZGF0YS5yZXN1bHRzLm1hcChyZXN1bHQgPT4gKHtcbiAgICAgIC4uLnJlc3VsdCxcbiAgICAgIGlkOiByZXN1bHQua2V5LFxuICAgIH0pKSxcbiAgfVxuXG4gIHJldHVybiByZXNwb25zZVxufVxuXG5leHBvcnQgeyBnZXRBdXRvc3VnZ2VzdFNvdXJjZXMgfVxuIl0sIm5hbWVzIjpbImdldEF1dG9zdWdnZXN0U291cmNlcyIsImNhdGVnb3J5Iiwib2Zmc2V0IiwicGFnZUNvdW50IiwiY29udGVudFBhY2thZ2UiLCJjb250ZW50Q2F0ZWdvcnkiLCJxdWVyeSIsInBhcmFtcyIsInNvdXJjZUNhdGVnb3J5IiwidW5kZWZpbmVkIiwicnBQYWNrYWdlSWQiLCJwZXJQYWdlIiwicGFnZSIsImRhdGEiLCJheGlvc0NsaWVudCIsInBvc3QiLCJBVVRPU1VHR0VTVF9TT1VSQ0VTX1JPVVRFIiwicmVzcG9uc2UiLCJjb3VudCIsInJlc3VsdHMiLCJtYXAiLCJyZXN1bHQiLCJpZCIsImtleSJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkE4Q1NBOzs7ZUFBQUE7Ozs2QkE5Q21CO2tDQUVjOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQVUxQyxNQUFNQyxXQUFXO0lBQUM7Q0FBVTtBQUM1QixlQUFlRCxzQkFBc0IsRUFDbkNFLFNBQVMsQ0FBQyxFQUNWQyxTQUFTLEVBQ1RDLGNBQWMsRUFDZEMsZUFBZSxFQUNmQyxRQUFRLEVBQUUsRUFDaUI7SUFDM0IsTUFBTUMsU0FBUztRQUNiRDtRQUNBTDtRQUNBTyxnQkFBZ0JILGtCQUFrQjtZQUFDQTtTQUFnQixHQUFHSTtRQUN0REMsYUFBYU4saUJBQWlCO1lBQUNBO1NBQWUsR0FBR0s7UUFDakRFLFNBQVNSO1FBQ1RTLE1BQU1WLFNBQVM7SUFDakI7SUFFQSxNQUFNLEVBQUVXLElBQUksRUFBRSxHQUFHLE1BQU1DLHdCQUFXLENBQUNDLElBQUksQ0FDckNDLDJDQUF5QixFQUN6QlQ7SUFHRixNQUFNVSxXQUF1QztRQUMzQ0MsT0FBT0wsS0FBS0ssS0FBSztRQUNqQk4sTUFBTUMsS0FBS0QsSUFBSTtRQUNmTyxTQUFTTixLQUFLTSxPQUFPLENBQUNDLEdBQUcsQ0FBQ0MsQ0FBQUEsU0FBVyx3Q0FDaENBO2dCQUNIQyxJQUFJRCxPQUFPRSxHQUFHOztJQUVsQjtJQUVBLE9BQU9OO0FBQ1QifQ==