{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/node_modules/mdast-util-to-hast/lib/handlers/break.js"],"sourcesContent":["/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n"],"names":["hardBreak","state","node","result","type","tagName","properties","children","patch","applyData","value"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA;;;;;CAKC,GAED,mDAAmD;AACnD;;;;;+BAYgBA;;;eAAAA;;;AAAT,SAASA,UAAUC,KAAK,EAAEC,IAAI;IACnC,oBAAoB,GACpB,MAAMC,SAAS;QAACC,MAAM;QAAWC,SAAS;QAAMC,YAAY,CAAC;QAAGC,UAAU,EAAE;IAAA;IAC5EN,MAAMO,KAAK,CAACN,MAAMC;IAClB,OAAO;QAACF,MAAMQ,SAAS,CAACP,MAAMC;QAAS;YAACC,MAAM;YAAQM,OAAO;QAAI;KAAE;AACrE"}