{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/rpjson/src/lib/create-react-elements/create-react-elements.ts"],"sourcesContent":["import React, { ElementType, createElement } from \"react\"\nimport { ContentBlockTypes } from \"@rp/react/rpjson/types\"\nimport { EnhancedElementBlock } from \"@rp/react/rpjson/types\"\nimport { ReactDocumentOptions, ReactDocumentProps } from \"./create-react-elements.types\"\nimport { getChildren } from \"./get-children\"\nimport { getTagElement } from \"./get-tag-element\"\nimport { getTitle, parseCoordinates } from \"./utils\"\n\nexport const createReactElements = <T extends ElementType = \"div\">(\n  block: EnhancedElementBlock,\n  props: ReactDocumentProps<T> = {},\n  options: ReactDocumentOptions = {},\n): React.ReactElement => {\n  const {\n    tagName = getTagElement(block.type),\n    addTitle = false,\n    finds = [],\n    idIterator = () => 0,\n    findsCounter = {},\n    performance = { markupSentences: false, markupDetections: false, markupNewLines: false },\n  } = options\n  if (block.type === ContentBlockTypes.TABLE) {\n    return createElement(\n      \"div\",\n      { key: `table-wrapper-${block.id}`, style: { overflowX: \"auto\" } },\n      [\n        createElement(\n          tagName,\n          {\n            key: block.id,\n            ...props,\n            title: getTitle(block.tree, options),\n            onClick: (event: React.MouseEvent) => parseCoordinates(props.onClick, event, block),\n            onMouseEnter: (event: React.MouseEvent) =>\n              parseCoordinates(props.onMouseEnter, event, block),\n            onMouseLeave: (event: React.MouseEvent) =>\n              parseCoordinates(props.onMouseLeave, event, block),\n          },\n          getChildren(block, props, {\n            addTitle,\n            finds,\n            idIterator,\n            findsCounter,\n            performance,\n          }),\n        ),\n      ],\n    )\n  }\n  return createElement(\n    tagName,\n    {\n      key: block.id,\n      ...props,\n      title: getTitle(block.tree, options),\n    },\n    getChildren(block, props, {\n      addTitle,\n      finds,\n      idIterator,\n      findsCounter,\n      performance,\n    }),\n  )\n}\n"],"names":["createReactElements","block","props","options","tagName","getTagElement","type","addTitle","finds","idIterator","findsCounter","performance","markupSentences","markupDetections","markupNewLines","ContentBlockTypes","TABLE","createElement","key","id","style","overflowX","title","getTitle","tree","onClick","event","parseCoordinates","onMouseEnter","onMouseLeave","getChildren"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAQaA;;;eAAAA;;;+DARqC;uBAChB;6BAGN;+BACE;uBACa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEpC,MAAMA,sBAAsB,CACjCC,OACAC,QAA+B,CAAC,CAAC,EACjCC,UAAgC,CAAC,CAAC;IAElC,MAAM,EACJC,UAAUC,IAAAA,4BAAa,EAACJ,MAAMK,IAAI,CAAC,EACnCC,WAAW,KAAK,EAChBC,QAAQ,EAAE,EACVC,aAAa,IAAM,CAAC,EACpBC,eAAe,CAAC,CAAC,EACjBC,cAAc;QAAEC,iBAAiB;QAAOC,kBAAkB;QAAOC,gBAAgB;IAAM,CAAC,EACzF,GAAGX;IACJ,IAAIF,MAAMK,IAAI,KAAKS,wBAAiB,CAACC,KAAK,EAAE;QAC1C,OAAOC,IAAAA,oBAAa,EAClB,OACA;YAAEC,KAAK,CAAC,cAAc,EAAEjB,MAAMkB,EAAE,CAAC,CAAC;YAAEC,OAAO;gBAAEC,WAAW;YAAO;QAAE,GACjE;YACEJ,IAAAA,oBAAa,EACXb,SACA;gBACEc,KAAKjB,MAAMkB,EAAE;eACVjB;gBACHoB,OAAOC,IAAAA,eAAQ,EAACtB,MAAMuB,IAAI,EAAErB;gBAC5BsB,SAAS,CAACC,QAA4BC,IAAAA,uBAAgB,EAACzB,MAAMuB,OAAO,EAAEC,OAAOzB;gBAC7E2B,cAAc,CAACF,QACbC,IAAAA,uBAAgB,EAACzB,MAAM0B,YAAY,EAAEF,OAAOzB;gBAC9C4B,cAAc,CAACH,QACbC,IAAAA,uBAAgB,EAACzB,MAAM2B,YAAY,EAAEH,OAAOzB;gBAEhD6B,IAAAA,wBAAW,EAAC7B,OAAOC,OAAO;gBACxBK;gBACAC;gBACAC;gBACAC;gBACAC;YACF;SAEH;IAEL;IACA,OAAOM,IAAAA,oBAAa,EAClBb,SACA;QACEc,KAAKjB,MAAMkB,EAAE;OACVjB;QACHoB,OAAOC,IAAAA,eAAQ,EAACtB,MAAMuB,IAAI,EAAErB;QAE9B2B,IAAAA,wBAAW,EAAC7B,OAAOC,OAAO;QACxBK;QACAC;QACAC;QACAC;QACAC;IACF;AAEJ"}