505235ebf3cdc96466c06248b0d035b0
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "createReactElements", {
    enumerable: true,
    get: function() {
        return createReactElements;
    }
});
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _types = require("@rp/react/rpjson/types");
const _getchildren = require("./get-children");
const _gettagelement = require("./get-tag-element");
const _utils = require("./utils");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const createReactElements = (block, props = {}, options = {})=>{
    const { tagName = (0, _gettagelement.getTagElement)(block.type), addTitle = false, finds = [], idIterator = ()=>0, findsCounter = {}, performance = {
        markupSentences: false,
        markupDetections: false,
        markupNewLines: false
    } } = options;
    if (block.type === _types.ContentBlockTypes.TABLE) {
        return (0, _react.createElement)("div", {
            key: `table-wrapper-${block.id}`,
            style: {
                overflowX: "auto"
            }
        }, [
            (0, _react.createElement)(tagName, _object_spread_props(_object_spread({
                key: block.id
            }, props), {
                title: (0, _utils.getTitle)(block.tree, options),
                onClick: (event)=>(0, _utils.parseCoordinates)(props.onClick, event, block),
                onMouseEnter: (event)=>(0, _utils.parseCoordinates)(props.onMouseEnter, event, block),
                onMouseLeave: (event)=>(0, _utils.parseCoordinates)(props.onMouseLeave, event, block)
            }), (0, _getchildren.getChildren)(block, props, {
                addTitle,
                finds,
                idIterator,
                findsCounter,
                performance
            }))
        ]);
    }
    return (0, _react.createElement)(tagName, _object_spread_props(_object_spread({
        key: block.id
    }, props), {
        title: (0, _utils.getTitle)(block.tree, options)
    }), (0, _getchildren.getChildren)(block, props, {
        addTitle,
        finds,
        idIterator,
        findsCounter,
        performance
    }));
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL3JwanNvbi9zcmMvbGliL2NyZWF0ZS1yZWFjdC1lbGVtZW50cy9jcmVhdGUtcmVhY3QtZWxlbWVudHMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IEVsZW1lbnRUeXBlLCBjcmVhdGVFbGVtZW50IH0gZnJvbSBcInJlYWN0XCJcbmltcG9ydCB7IENvbnRlbnRCbG9ja1R5cGVzIH0gZnJvbSBcIkBycC9yZWFjdC9ycGpzb24vdHlwZXNcIlxuaW1wb3J0IHsgRW5oYW5jZWRFbGVtZW50QmxvY2sgfSBmcm9tIFwiQHJwL3JlYWN0L3JwanNvbi90eXBlc1wiXG5pbXBvcnQgeyBSZWFjdERvY3VtZW50T3B0aW9ucywgUmVhY3REb2N1bWVudFByb3BzIH0gZnJvbSBcIi4vY3JlYXRlLXJlYWN0LWVsZW1lbnRzLnR5cGVzXCJcbmltcG9ydCB7IGdldENoaWxkcmVuIH0gZnJvbSBcIi4vZ2V0LWNoaWxkcmVuXCJcbmltcG9ydCB7IGdldFRhZ0VsZW1lbnQgfSBmcm9tIFwiLi9nZXQtdGFnLWVsZW1lbnRcIlxuaW1wb3J0IHsgZ2V0VGl0bGUsIHBhcnNlQ29vcmRpbmF0ZXMgfSBmcm9tIFwiLi91dGlsc1wiXG5cbmV4cG9ydCBjb25zdCBjcmVhdGVSZWFjdEVsZW1lbnRzID0gPFQgZXh0ZW5kcyBFbGVtZW50VHlwZSA9IFwiZGl2XCI+KFxuICBibG9jazogRW5oYW5jZWRFbGVtZW50QmxvY2ssXG4gIHByb3BzOiBSZWFjdERvY3VtZW50UHJvcHM8VD4gPSB7fSxcbiAgb3B0aW9uczogUmVhY3REb2N1bWVudE9wdGlvbnMgPSB7fSxcbik6IFJlYWN0LlJlYWN0RWxlbWVudCA9PiB7XG4gIGNvbnN0IHtcbiAgICB0YWdOYW1lID0gZ2V0VGFnRWxlbWVudChibG9jay50eXBlKSxcbiAgICBhZGRUaXRsZSA9IGZhbHNlLFxuICAgIGZpbmRzID0gW10sXG4gICAgaWRJdGVyYXRvciA9ICgpID0+IDAsXG4gICAgZmluZHNDb3VudGVyID0ge30sXG4gICAgcGVyZm9ybWFuY2UgPSB7IG1hcmt1cFNlbnRlbmNlczogZmFsc2UsIG1hcmt1cERldGVjdGlvbnM6IGZhbHNlLCBtYXJrdXBOZXdMaW5lczogZmFsc2UgfSxcbiAgfSA9IG9wdGlvbnNcbiAgaWYgKGJsb2NrLnR5cGUgPT09IENvbnRlbnRCbG9ja1R5cGVzLlRBQkxFKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUVsZW1lbnQoXG4gICAgICBcImRpdlwiLFxuICAgICAgeyBrZXk6IGB0YWJsZS13cmFwcGVyLSR7YmxvY2suaWR9YCwgc3R5bGU6IHsgb3ZlcmZsb3dYOiBcImF1dG9cIiB9IH0sXG4gICAgICBbXG4gICAgICAgIGNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgdGFnTmFtZSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBrZXk6IGJsb2NrLmlkLFxuICAgICAgICAgICAgLi4ucHJvcHMsXG4gICAgICAgICAgICB0aXRsZTogZ2V0VGl0bGUoYmxvY2sudHJlZSwgb3B0aW9ucyksXG4gICAgICAgICAgICBvbkNsaWNrOiAoZXZlbnQ6IFJlYWN0Lk1vdXNlRXZlbnQpID0+IHBhcnNlQ29vcmRpbmF0ZXMocHJvcHMub25DbGljaywgZXZlbnQsIGJsb2NrKSxcbiAgICAgICAgICAgIG9uTW91c2VFbnRlcjogKGV2ZW50OiBSZWFjdC5Nb3VzZUV2ZW50KSA9PlxuICAgICAgICAgICAgICBwYXJzZUNvb3JkaW5hdGVzKHByb3BzLm9uTW91c2VFbnRlciwgZXZlbnQsIGJsb2NrKSxcbiAgICAgICAgICAgIG9uTW91c2VMZWF2ZTogKGV2ZW50OiBSZWFjdC5Nb3VzZUV2ZW50KSA9PlxuICAgICAgICAgICAgICBwYXJzZUNvb3JkaW5hdGVzKHByb3BzLm9uTW91c2VMZWF2ZSwgZXZlbnQsIGJsb2NrKSxcbiAgICAgICAgICB9LFxuICAgICAgICAgIGdldENoaWxkcmVuKGJsb2NrLCBwcm9wcywge1xuICAgICAgICAgICAgYWRkVGl0bGUsXG4gICAgICAgICAgICBmaW5kcyxcbiAgICAgICAgICAgIGlkSXRlcmF0b3IsXG4gICAgICAgICAgICBmaW5kc0NvdW50ZXIsXG4gICAgICAgICAgICBwZXJmb3JtYW5jZSxcbiAgICAgICAgICB9KSxcbiAgICAgICAgKSxcbiAgICAgIF0sXG4gICAgKVxuICB9XG4gIHJldHVybiBjcmVhdGVFbGVtZW50KFxuICAgIHRhZ05hbWUsXG4gICAge1xuICAgICAga2V5OiBibG9jay5pZCxcbiAgICAgIC4uLnByb3BzLFxuICAgICAgdGl0bGU6IGdldFRpdGxlKGJsb2NrLnRyZWUsIG9wdGlvbnMpLFxuICAgIH0sXG4gICAgZ2V0Q2hpbGRyZW4oYmxvY2ssIHByb3BzLCB7XG4gICAgICBhZGRUaXRsZSxcbiAgICAgIGZpbmRzLFxuICAgICAgaWRJdGVyYXRvcixcbiAgICAgIGZpbmRzQ291bnRlcixcbiAgICAgIHBlcmZvcm1hbmNlLFxuICAgIH0pLFxuICApXG59XG4iXSwibmFtZXMiOlsiY3JlYXRlUmVhY3RFbGVtZW50cyIsImJsb2NrIiwicHJvcHMiLCJvcHRpb25zIiwidGFnTmFtZSIsImdldFRhZ0VsZW1lbnQiLCJ0eXBlIiwiYWRkVGl0bGUiLCJmaW5kcyIsImlkSXRlcmF0b3IiLCJmaW5kc0NvdW50ZXIiLCJwZXJmb3JtYW5jZSIsIm1hcmt1cFNlbnRlbmNlcyIsIm1hcmt1cERldGVjdGlvbnMiLCJtYXJrdXBOZXdMaW5lcyIsIkNvbnRlbnRCbG9ja1R5cGVzIiwiVEFCTEUiLCJjcmVhdGVFbGVtZW50Iiwia2V5IiwiaWQiLCJzdHlsZSIsIm92ZXJmbG93WCIsInRpdGxlIiwiZ2V0VGl0bGUiLCJ0cmVlIiwib25DbGljayIsImV2ZW50IiwicGFyc2VDb29yZGluYXRlcyIsIm9uTW91c2VFbnRlciIsIm9uTW91c2VMZWF2ZSIsImdldENoaWxkcmVuIl0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBUWFBOzs7ZUFBQUE7OzsrREFScUM7dUJBQ2hCOzZCQUdOOytCQUNFO3VCQUNhOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRXBDLE1BQU1BLHNCQUFzQixDQUNqQ0MsT0FDQUMsUUFBK0IsQ0FBQyxDQUFDLEVBQ2pDQyxVQUFnQyxDQUFDLENBQUM7SUFFbEMsTUFBTSxFQUNKQyxVQUFVQyxJQUFBQSw0QkFBYSxFQUFDSixNQUFNSyxJQUFJLENBQUMsRUFDbkNDLFdBQVcsS0FBSyxFQUNoQkMsUUFBUSxFQUFFLEVBQ1ZDLGFBQWEsSUFBTSxDQUFDLEVBQ3BCQyxlQUFlLENBQUMsQ0FBQyxFQUNqQkMsY0FBYztRQUFFQyxpQkFBaUI7UUFBT0Msa0JBQWtCO1FBQU9DLGdCQUFnQjtJQUFNLENBQUMsRUFDekYsR0FBR1g7SUFDSixJQUFJRixNQUFNSyxJQUFJLEtBQUtTLHdCQUFpQixDQUFDQyxLQUFLLEVBQUU7UUFDMUMsT0FBT0MsSUFBQUEsb0JBQWEsRUFDbEIsT0FDQTtZQUFFQyxLQUFLLENBQUMsY0FBYyxFQUFFakIsTUFBTWtCLEVBQUUsQ0FBQyxDQUFDO1lBQUVDLE9BQU87Z0JBQUVDLFdBQVc7WUFBTztRQUFFLEdBQ2pFO1lBQ0VKLElBQUFBLG9CQUFhLEVBQ1hiLFNBQ0E7Z0JBQ0VjLEtBQUtqQixNQUFNa0IsRUFBRTtlQUNWakI7Z0JBQ0hvQixPQUFPQyxJQUFBQSxlQUFRLEVBQUN0QixNQUFNdUIsSUFBSSxFQUFFckI7Z0JBQzVCc0IsU0FBUyxDQUFDQyxRQUE0QkMsSUFBQUEsdUJBQWdCLEVBQUN6QixNQUFNdUIsT0FBTyxFQUFFQyxPQUFPekI7Z0JBQzdFMkIsY0FBYyxDQUFDRixRQUNiQyxJQUFBQSx1QkFBZ0IsRUFBQ3pCLE1BQU0wQixZQUFZLEVBQUVGLE9BQU96QjtnQkFDOUM0QixjQUFjLENBQUNILFFBQ2JDLElBQUFBLHVCQUFnQixFQUFDekIsTUFBTTJCLFlBQVksRUFBRUgsT0FBT3pCO2dCQUVoRDZCLElBQUFBLHdCQUFXLEVBQUM3QixPQUFPQyxPQUFPO2dCQUN4Qks7Z0JBQ0FDO2dCQUNBQztnQkFDQUM7Z0JBQ0FDO1lBQ0Y7U0FFSDtJQUVMO0lBQ0EsT0FBT00sSUFBQUEsb0JBQWEsRUFDbEJiLFNBQ0E7UUFDRWMsS0FBS2pCLE1BQU1rQixFQUFFO09BQ1ZqQjtRQUNIb0IsT0FBT0MsSUFBQUEsZUFBUSxFQUFDdEIsTUFBTXVCLElBQUksRUFBRXJCO1FBRTlCMkIsSUFBQUEsd0JBQVcsRUFBQzdCLE9BQU9DLE9BQU87UUFDeEJLO1FBQ0FDO1FBQ0FDO1FBQ0FDO1FBQ0FDO0lBQ0Y7QUFFSiJ9