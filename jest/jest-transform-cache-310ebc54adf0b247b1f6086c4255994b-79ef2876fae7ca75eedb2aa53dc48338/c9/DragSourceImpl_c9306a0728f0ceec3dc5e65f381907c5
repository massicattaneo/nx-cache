5dccbe4ba2ddb97cd84172ceea10fe67
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "DragSourceImpl", {
    enumerable: true,
    get: function() {
        return DragSourceImpl;
    }
});
class DragSourceImpl {
    beginDrag() {
        const spec = this.spec;
        const monitor = this.monitor;
        let result = null;
        if (typeof spec.item === 'object') {
            result = spec.item;
        } else if (typeof spec.item === 'function') {
            result = spec.item(monitor);
        } else {
            result = {};
        }
        return result !== null && result !== void 0 ? result : null;
    }
    canDrag() {
        const spec = this.spec;
        const monitor = this.monitor;
        if (typeof spec.canDrag === 'boolean') {
            return spec.canDrag;
        } else if (typeof spec.canDrag === 'function') {
            return spec.canDrag(monitor);
        } else {
            return true;
        }
    }
    isDragging(globalMonitor, target) {
        const spec = this.spec;
        const monitor = this.monitor;
        const { isDragging } = spec;
        return isDragging ? isDragging(monitor) : target === globalMonitor.getSourceId();
    }
    endDrag() {
        const spec = this.spec;
        const monitor = this.monitor;
        const connector = this.connector;
        const { end } = spec;
        if (end) {
            end(monitor.getItem(), monitor);
        }
        connector.reconnect();
    }
    constructor(spec, monitor, connector){
        this.spec = spec;
        this.monitor = monitor;
        this.connector = connector;
    }
} //# sourceMappingURL=DragSourceImpl.js.map

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9ob29rcy91c2VEcmFnL0RyYWdTb3VyY2VJbXBsLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgRHJhZ0Ryb3BNb25pdG9yLCBEcmFnU291cmNlLCBJZGVudGlmaWVyIH0gZnJvbSAnZG5kLWNvcmUnXG5cbmltcG9ydCB0eXBlIHsgQ29ubmVjdG9yIH0gZnJvbSAnLi4vLi4vaW50ZXJuYWxzL2luZGV4LmpzJ1xuaW1wb3J0IHR5cGUgeyBEcmFnU291cmNlTW9uaXRvciB9IGZyb20gJy4uLy4uL3R5cGVzL2luZGV4LmpzJ1xuaW1wb3J0IHR5cGUgeyBEcmFnT2JqZWN0RmFjdG9yeSwgRHJhZ1NvdXJjZUhvb2tTcGVjIH0gZnJvbSAnLi4vdHlwZXMuanMnXG5cbmV4cG9ydCBjbGFzcyBEcmFnU291cmNlSW1wbDxPLCBSLCBQPiBpbXBsZW1lbnRzIERyYWdTb3VyY2Uge1xuXHRwdWJsaWMgY29uc3RydWN0b3IoXG5cdFx0cHVibGljIHNwZWM6IERyYWdTb3VyY2VIb29rU3BlYzxPLCBSLCBQPixcblx0XHRwcml2YXRlIG1vbml0b3I6IERyYWdTb3VyY2VNb25pdG9yPE8sIFI+LFxuXHRcdHByaXZhdGUgY29ubmVjdG9yOiBDb25uZWN0b3IsXG5cdCkge31cblxuXHRwdWJsaWMgYmVnaW5EcmFnKCkge1xuXHRcdGNvbnN0IHNwZWMgPSB0aGlzLnNwZWNcblx0XHRjb25zdCBtb25pdG9yID0gdGhpcy5tb25pdG9yXG5cblx0XHRsZXQgcmVzdWx0OiBPIHwgbnVsbCA9IG51bGxcblx0XHRpZiAodHlwZW9mIHNwZWMuaXRlbSA9PT0gJ29iamVjdCcpIHtcblx0XHRcdHJlc3VsdCA9IHNwZWMuaXRlbSBhcyBPXG5cdFx0fSBlbHNlIGlmICh0eXBlb2Ygc3BlYy5pdGVtID09PSAnZnVuY3Rpb24nKSB7XG5cdFx0XHRyZXN1bHQgPSAoc3BlYy5pdGVtIGFzIERyYWdPYmplY3RGYWN0b3J5PE8+KShtb25pdG9yKVxuXHRcdH0gZWxzZSB7XG5cdFx0XHRyZXN1bHQgPSB7fSBhcyBPXG5cdFx0fVxuXHRcdHJldHVybiByZXN1bHQgPz8gbnVsbFxuXHR9XG5cblx0cHVibGljIGNhbkRyYWcoKSB7XG5cdFx0Y29uc3Qgc3BlYyA9IHRoaXMuc3BlY1xuXHRcdGNvbnN0IG1vbml0b3IgPSB0aGlzLm1vbml0b3Jcblx0XHRpZiAodHlwZW9mIHNwZWMuY2FuRHJhZyA9PT0gJ2Jvb2xlYW4nKSB7XG5cdFx0XHRyZXR1cm4gc3BlYy5jYW5EcmFnXG5cdFx0fSBlbHNlIGlmICh0eXBlb2Ygc3BlYy5jYW5EcmFnID09PSAnZnVuY3Rpb24nKSB7XG5cdFx0XHRyZXR1cm4gc3BlYy5jYW5EcmFnKG1vbml0b3IpXG5cdFx0fSBlbHNlIHtcblx0XHRcdHJldHVybiB0cnVlXG5cdFx0fVxuXHR9XG5cblx0cHVibGljIGlzRHJhZ2dpbmcoZ2xvYmFsTW9uaXRvcjogRHJhZ0Ryb3BNb25pdG9yLCB0YXJnZXQ6IElkZW50aWZpZXIpIHtcblx0XHRjb25zdCBzcGVjID0gdGhpcy5zcGVjXG5cdFx0Y29uc3QgbW9uaXRvciA9IHRoaXMubW9uaXRvclxuXHRcdGNvbnN0IHsgaXNEcmFnZ2luZyB9ID0gc3BlY1xuXHRcdHJldHVybiBpc0RyYWdnaW5nXG5cdFx0XHQ/IGlzRHJhZ2dpbmcobW9uaXRvcilcblx0XHRcdDogdGFyZ2V0ID09PSBnbG9iYWxNb25pdG9yLmdldFNvdXJjZUlkKClcblx0fVxuXG5cdHB1YmxpYyBlbmREcmFnKCkge1xuXHRcdGNvbnN0IHNwZWMgPSB0aGlzLnNwZWNcblx0XHRjb25zdCBtb25pdG9yID0gdGhpcy5tb25pdG9yXG5cdFx0Y29uc3QgY29ubmVjdG9yID0gdGhpcy5jb25uZWN0b3Jcblx0XHRjb25zdCB7IGVuZCB9ID0gc3BlY1xuXHRcdGlmIChlbmQpIHtcblx0XHRcdGVuZChtb25pdG9yLmdldEl0ZW0oKSwgbW9uaXRvcilcblx0XHR9XG5cdFx0Y29ubmVjdG9yLnJlY29ubmVjdCgpXG5cdH1cbn1cbiJdLCJuYW1lcyI6WyJEcmFnU291cmNlSW1wbCIsImJlZ2luRHJhZyIsInNwZWMiLCJtb25pdG9yIiwicmVzdWx0IiwiaXRlbSIsImNhbkRyYWciLCJpc0RyYWdnaW5nIiwiZ2xvYmFsTW9uaXRvciIsInRhcmdldCIsImdldFNvdXJjZUlkIiwiZW5kRHJhZyIsImNvbm5lY3RvciIsImVuZCIsImdldEl0ZW0iLCJyZWNvbm5lY3QiLCJjb25zdHJ1Y3RvciJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBTWFBOzs7ZUFBQUE7OztBQUFOLE1BQU1BO0lBT1pDLFlBQW1CO1FBQ2xCLE1BQU1DLE9BQU8sSUFBSSxDQUFDQSxJQUFJO1FBQ3RCLE1BQU1DLFVBQVUsSUFBSSxDQUFDQSxPQUFPO1FBRTVCLElBQUlDLFNBQW1CO1FBQ3ZCLElBQUksT0FBT0YsS0FBS0csSUFBSSxLQUFLLFVBQVU7WUFDbENELFNBQVNGLEtBQUtHLElBQUk7ZUFDWixJQUFJLE9BQU9ILEtBQUtHLElBQUksS0FBSyxZQUFZO1lBQzNDRCxTQUFTRixLQUFNRyxJQUFJLENBQTBCRjtlQUN2QztZQUNOQyxTQUFTLENBQUE7O1FBRVYsT0FBT0EsV0FBTSxRQUFOQSxXQUFNLEtBQUEsSUFBTkEsU0FBVTs7SUFHbEJFLFVBQWlCO1FBQ2hCLE1BQU1KLE9BQU8sSUFBSSxDQUFDQSxJQUFJO1FBQ3RCLE1BQU1DLFVBQVUsSUFBSSxDQUFDQSxPQUFPO1FBQzVCLElBQUksT0FBT0QsS0FBS0ksT0FBTyxLQUFLLFdBQVc7WUFDdEMsT0FBT0osS0FBS0ksT0FBTztlQUNiLElBQUksT0FBT0osS0FBS0ksT0FBTyxLQUFLLFlBQVk7WUFDOUMsT0FBT0osS0FBS0ksT0FBTyxDQUFDSDtlQUNkO1lBQ04sT0FBTzs7O0lBSVRJLFdBQWtCQyxhQUE4QixFQUFFQyxNQUFrQixFQUFFO1FBQ3JFLE1BQU1QLE9BQU8sSUFBSSxDQUFDQSxJQUFJO1FBQ3RCLE1BQU1DLFVBQVUsSUFBSSxDQUFDQSxPQUFPO1FBQzVCLE1BQU0sRUFBRUksVUFBVSxFQUFFLEdBQUdMO1FBQ3ZCLE9BQU9LLGFBQ0pBLFdBQVdKLFdBQ1hNLFdBQVdELGNBQWNFLFdBQVc7O0lBR3hDQyxVQUFpQjtRQUNoQixNQUFNVCxPQUFPLElBQUksQ0FBQ0EsSUFBSTtRQUN0QixNQUFNQyxVQUFVLElBQUksQ0FBQ0EsT0FBTztRQUM1QixNQUFNUyxZQUFZLElBQUksQ0FBQ0EsU0FBUztRQUNoQyxNQUFNLEVBQUVDLEdBQUcsRUFBRSxHQUFHWDtRQUNoQixJQUFJVyxLQUFLO1lBQ1JBLElBQUlWLFFBQVFXLE9BQU8sSUFBSVg7O1FBRXhCUyxVQUFVRyxTQUFTOztJQWxEcEJDLFlBQ1FkLElBQWlDLEVBQ2hDQyxPQUFnQyxFQUNoQ1MsU0FBb0IsQ0FDM0I7YUFITVYsSUFBaUMsR0FBakNBO2FBQ0NDLE9BQWdDLEdBQWhDQTthQUNBUyxTQUFvQixHQUFwQkEifQ==