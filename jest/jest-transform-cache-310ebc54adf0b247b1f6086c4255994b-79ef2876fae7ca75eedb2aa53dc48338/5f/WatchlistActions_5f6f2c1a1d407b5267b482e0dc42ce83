976c6e0020165fb6de16b70397b7e896
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "WatchlistActions", {
    enumerable: true,
    get: function() {
        return WatchlistActions;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _reacti18next = require("react-i18next");
const _reactrouterdom = require("react-router-dom");
const _settings = require("@rp/common/settings");
const _hooks = require("@rp/react/common/hooks");
const _providers = require("@rp/react/common/providers");
const _basecomponents = require("@rp/react/web/common/base-components");
const _utils = require("@rp/react/web/common/utils");
const _core = require("@rp/react/web/mui/core");
const _icons = require("@rp/react/web/mui/icons");
const _router = require("@rp/react/web/router");
const _WatchlistShareButton = require("../WatchlistShareButton");
const _useWatchlistsActions = require("../hooks/useWatchlistsActions");
const _WatchlistBriefButtons = require("./WatchlistBriefButtons");
const getActions = (editable, canSearch, acts, hasReachedLimit, uploadLabel, openUploadModal)=>{
    const actions = [];
    if (editable) {
        actions.push({
            id: "csv-upload",
            label: uploadLabel,
            icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.UploadFile, {}),
            disabledAction: ()=>hasReachedLimit,
            onClick: ()=>{
                openUploadModal === null || openUploadModal === void 0 ? void 0 : openUploadModal();
            }
        });
    }
    actions.push(acts.copy);
    if (editable) {
        actions.push(acts.builder);
        actions.push(acts.rename);
        actions.push(acts.remove);
    }
    if (canSearch) {
        actions.push(acts.search);
    }
    return actions;
};
const WatchlistActions = ({ watchlist, editable, openUploadModal, enableBrief })=>{
    var _actions_favorite_disabledAction, _actions_favorite, _actions_favorite_disabledAction1, _actions_favorite1, _actions_favorite_icon, _actions_favorite2;
    const { t } = (0, _reacti18next.useTranslation)();
    const { hasEntitlement, quota } = (0, _providers.useAccount)();
    const navigate = (0, _reactrouterdom.useNavigate)();
    const [open, setOpen] = (0, _react.useState)(false);
    const canSearch = hasEntitlement("search");
    const actions = (0, _useWatchlistsActions.useWatchlistsActions)({
        removeParams: {
            onSuccess: ()=>navigate(_router.WATCHLISTS_ROUTE)
        }
    });
    const hasReachedLimit = watchlist.items.length >= _settings.WATCHLIST_ITEMS_MAXIMUM_COUNT;
    const isFreemium = (0, _hooks.useIsFreemium)(quota);
    const uploadLabel = hasReachedLimit ? t("watchlistPage.maximumWatchlistSize", {
        size: _settings.WATCHLIST_ITEMS_MAXIMUM_COUNT
    }) : "Upload List";
    const enableBriefs = (0, _utils.getLocalStorageFlag)("brief");
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
        sx: {
            display: "flex",
            gap: 1,
            my: 1
        },
        role: "toolbar",
        children: [
            enableBriefs && /*#__PURE__*/ (0, _jsxruntime.jsx)(_WatchlistBriefButtons.WatchlistBriefButtons, {
                watchlist: watchlist,
                enableBrief: enableBrief
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.RPTooltip, {
                disabledContent: (_actions_favorite_disabledAction = (_actions_favorite = actions.favorite).disabledAction) === null || _actions_favorite_disabledAction === void 0 ? void 0 : _actions_favorite_disabledAction.call(_actions_favorite, watchlist),
                title: watchlist.isFavorite ? "Remove from Favorites" : "Add to Favorites",
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.IconButton, {
                    onClick: (e)=>{
                        var _actions_favorite_onClick, _actions_favorite;
                        e.stopPropagation();
                        (_actions_favorite_onClick = (_actions_favorite = actions.favorite).onClick) === null || _actions_favorite_onClick === void 0 ? void 0 : _actions_favorite_onClick.call(_actions_favorite, watchlist);
                    },
                    disabled: (_actions_favorite_disabledAction1 = (_actions_favorite1 = actions.favorite).disabledAction) === null || _actions_favorite_disabledAction1 === void 0 ? void 0 : _actions_favorite_disabledAction1.call(_actions_favorite1, watchlist),
                    children: (_actions_favorite_icon = (_actions_favorite2 = actions.favorite).icon) === null || _actions_favorite_icon === void 0 ? void 0 : _actions_favorite_icon.call(_actions_favorite2, watchlist)
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_WatchlistShareButton.WatchlistShareButton, {
                watchlist: watchlist
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.ActionsMenu, {
                open: open,
                setOpen: setOpen,
                actions: getActions(editable, canSearch, actions, hasReachedLimit || isFreemium, uploadLabel, openUploadModal),
                item: watchlist,
                openColor: "primary.main",
                anchorOrigin: {
                    vertical: "bottom",
                    horizontal: "right"
                },
                transformOrigin: {
                    vertical: "top",
                    horizontal: "right"
                }
            })
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL3dhdGNobGlzdHMvc3JjL2xpYi9XYXRjaGxpc3RQb3J0Zm9saW9IZWFkZXIvV2F0Y2hsaXN0QWN0aW9ucy50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IHsgdXNlVHJhbnNsYXRpb24gfSBmcm9tIFwicmVhY3QtaTE4bmV4dFwiXG5pbXBvcnQgeyB1c2VOYXZpZ2F0ZSB9IGZyb20gXCJyZWFjdC1yb3V0ZXItZG9tXCJcbmltcG9ydCB7IFdhdGNobGlzdCB9IGZyb20gXCJAcnAvY29tbW9uL2FwaS10eXBlc1wiXG5pbXBvcnQgeyBXQVRDSExJU1RfSVRFTVNfTUFYSU1VTV9DT1VOVCB9IGZyb20gXCJAcnAvY29tbW9uL3NldHRpbmdzXCJcbmltcG9ydCB7IHVzZUlzRnJlZW1pdW0gfSBmcm9tIFwiQHJwL3JlYWN0L2NvbW1vbi9ob29rc1wiXG5pbXBvcnQgeyB1c2VBY2NvdW50IH0gZnJvbSBcIkBycC9yZWFjdC9jb21tb24vcHJvdmlkZXJzXCJcbmltcG9ydCB7IEFjdGlvbnNNZW51LCBSUFRvb2x0aXAgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9jb21tb24vYmFzZS1jb21wb25lbnRzXCJcbmltcG9ydCB7IGdldExvY2FsU3RvcmFnZUZsYWcgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9jb21tb24vdXRpbHNcIlxuaW1wb3J0IHsgQm94LCBJY29uQnV0dG9uIH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvbXVpL2NvcmVcIlxuaW1wb3J0IHsgVXBsb2FkRmlsZSB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL211aS9pY29uc1wiXG5pbXBvcnQgeyBXQVRDSExJU1RTX1JPVVRFIH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvcm91dGVyXCJcbmltcG9ydCB7IFdhdGNobGlzdFNoYXJlQnV0dG9uIH0gZnJvbSBcIi4uL1dhdGNobGlzdFNoYXJlQnV0dG9uXCJcbmltcG9ydCB7IHVzZVdhdGNobGlzdHNBY3Rpb25zIH0gZnJvbSBcIi4uL2hvb2tzL3VzZVdhdGNobGlzdHNBY3Rpb25zXCJcbmltcG9ydCB7IFdhdGNobGlzdEJyaWVmQnV0dG9ucyB9IGZyb20gXCIuL1dhdGNobGlzdEJyaWVmQnV0dG9uc1wiXG5cbnR5cGUgUHJvcHMgPSB7XG4gIHdhdGNobGlzdDogV2F0Y2hsaXN0XG4gIGVkaXRhYmxlOiBib29sZWFuXG4gIG9wZW5VcGxvYWRNb2RhbD86ICgpID0+IHZvaWRcbiAgZW5hYmxlQnJpZWY6IGJvb2xlYW5cbn1cblxudHlwZSBXYXRjaGxpc3RBY3Rpb25zID0gUmV0dXJuVHlwZTx0eXBlb2YgdXNlV2F0Y2hsaXN0c0FjdGlvbnM+XG5cbmNvbnN0IGdldEFjdGlvbnMgPSAoXG4gIGVkaXRhYmxlOiBib29sZWFuLFxuICBjYW5TZWFyY2g6IGJvb2xlYW4sXG4gIGFjdHM6IFdhdGNobGlzdEFjdGlvbnMsXG4gIGhhc1JlYWNoZWRMaW1pdDogYm9vbGVhbixcbiAgdXBsb2FkTGFiZWw6IHN0cmluZyxcbiAgb3BlblVwbG9hZE1vZGFsPzogKCkgPT4gdm9pZCxcbikgPT4ge1xuICBjb25zdCBhY3Rpb25zID0gW11cbiAgaWYgKGVkaXRhYmxlKSB7XG4gICAgYWN0aW9ucy5wdXNoKHtcbiAgICAgIGlkOiBcImNzdi11cGxvYWRcIixcbiAgICAgIGxhYmVsOiB1cGxvYWRMYWJlbCxcbiAgICAgIGljb246IDxVcGxvYWRGaWxlIC8+LFxuICAgICAgZGlzYWJsZWRBY3Rpb246ICgpID0+IGhhc1JlYWNoZWRMaW1pdCxcbiAgICAgIG9uQ2xpY2s6ICgpID0+IHtcbiAgICAgICAgb3BlblVwbG9hZE1vZGFsPy4oKVxuICAgICAgfSxcbiAgICB9KVxuICB9XG4gIGFjdGlvbnMucHVzaChhY3RzLmNvcHkpXG4gIGlmIChlZGl0YWJsZSkge1xuICAgIGFjdGlvbnMucHVzaChhY3RzLmJ1aWxkZXIpXG4gICAgYWN0aW9ucy5wdXNoKGFjdHMucmVuYW1lKVxuICAgIGFjdGlvbnMucHVzaChhY3RzLnJlbW92ZSlcbiAgfVxuXG4gIGlmIChjYW5TZWFyY2gpIHtcbiAgICBhY3Rpb25zLnB1c2goYWN0cy5zZWFyY2gpXG4gIH1cbiAgcmV0dXJuIGFjdGlvbnNcbn1cblxuZXhwb3J0IGNvbnN0IFdhdGNobGlzdEFjdGlvbnMgPSAoeyB3YXRjaGxpc3QsIGVkaXRhYmxlLCBvcGVuVXBsb2FkTW9kYWwsIGVuYWJsZUJyaWVmIH06IFByb3BzKSA9PiB7XG4gIGNvbnN0IHsgdCB9ID0gdXNlVHJhbnNsYXRpb24oKVxuICBjb25zdCB7IGhhc0VudGl0bGVtZW50LCBxdW90YSB9ID0gdXNlQWNjb3VudCgpXG4gIGNvbnN0IG5hdmlnYXRlID0gdXNlTmF2aWdhdGUoKVxuICBjb25zdCBbb3Blbiwgc2V0T3Blbl0gPSB1c2VTdGF0ZShmYWxzZSlcbiAgY29uc3QgY2FuU2VhcmNoID0gaGFzRW50aXRsZW1lbnQoXCJzZWFyY2hcIilcbiAgY29uc3QgYWN0aW9ucyA9IHVzZVdhdGNobGlzdHNBY3Rpb25zKHtcbiAgICByZW1vdmVQYXJhbXM6IHsgb25TdWNjZXNzOiAoKSA9PiBuYXZpZ2F0ZShXQVRDSExJU1RTX1JPVVRFKSB9LFxuICB9KVxuICBjb25zdCBoYXNSZWFjaGVkTGltaXQgPSB3YXRjaGxpc3QuaXRlbXMubGVuZ3RoID49IFdBVENITElTVF9JVEVNU19NQVhJTVVNX0NPVU5UXG5cbiAgY29uc3QgaXNGcmVlbWl1bSA9IHVzZUlzRnJlZW1pdW0ocXVvdGEpXG4gIGNvbnN0IHVwbG9hZExhYmVsID0gaGFzUmVhY2hlZExpbWl0XG4gICAgPyB0KFwid2F0Y2hsaXN0UGFnZS5tYXhpbXVtV2F0Y2hsaXN0U2l6ZVwiLCB7IHNpemU6IFdBVENITElTVF9JVEVNU19NQVhJTVVNX0NPVU5UIH0pXG4gICAgOiBcIlVwbG9hZCBMaXN0XCJcbiAgY29uc3QgZW5hYmxlQnJpZWZzID0gZ2V0TG9jYWxTdG9yYWdlRmxhZyhcImJyaWVmXCIpXG5cbiAgcmV0dXJuIChcbiAgICA8Qm94IHN4PXt7IGRpc3BsYXk6IFwiZmxleFwiLCBnYXA6IDEsIG15OiAxIH19IHJvbGU9XCJ0b29sYmFyXCI+XG4gICAgICB7ZW5hYmxlQnJpZWZzICYmIDxXYXRjaGxpc3RCcmllZkJ1dHRvbnMgd2F0Y2hsaXN0PXt3YXRjaGxpc3R9IGVuYWJsZUJyaWVmPXtlbmFibGVCcmllZn0gLz59XG4gICAgICA8UlBUb29sdGlwXG4gICAgICAgIGRpc2FibGVkQ29udGVudD17YWN0aW9ucy5mYXZvcml0ZS5kaXNhYmxlZEFjdGlvbj8uKHdhdGNobGlzdCl9XG4gICAgICAgIHRpdGxlPXt3YXRjaGxpc3QuaXNGYXZvcml0ZSA/IFwiUmVtb3ZlIGZyb20gRmF2b3JpdGVzXCIgOiBcIkFkZCB0byBGYXZvcml0ZXNcIn1cbiAgICAgID5cbiAgICAgICAgPEljb25CdXR0b25cbiAgICAgICAgICBvbkNsaWNrPXtlID0+IHtcbiAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKClcbiAgICAgICAgICAgIGFjdGlvbnMuZmF2b3JpdGUub25DbGljaz8uKHdhdGNobGlzdClcbiAgICAgICAgICB9fVxuICAgICAgICAgIGRpc2FibGVkPXthY3Rpb25zLmZhdm9yaXRlLmRpc2FibGVkQWN0aW9uPy4od2F0Y2hsaXN0KX1cbiAgICAgICAgPlxuICAgICAgICAgIHthY3Rpb25zLmZhdm9yaXRlLmljb24/Lih3YXRjaGxpc3QpfVxuICAgICAgICA8L0ljb25CdXR0b24+XG4gICAgICA8L1JQVG9vbHRpcD5cbiAgICAgIDxXYXRjaGxpc3RTaGFyZUJ1dHRvbiB3YXRjaGxpc3Q9e3dhdGNobGlzdH0gLz5cbiAgICAgIDxBY3Rpb25zTWVudVxuICAgICAgICBvcGVuPXtvcGVufVxuICAgICAgICBzZXRPcGVuPXtzZXRPcGVufVxuICAgICAgICBhY3Rpb25zPXtnZXRBY3Rpb25zKFxuICAgICAgICAgIGVkaXRhYmxlLFxuICAgICAgICAgIGNhblNlYXJjaCxcbiAgICAgICAgICBhY3Rpb25zLFxuICAgICAgICAgIGhhc1JlYWNoZWRMaW1pdCB8fCBpc0ZyZWVtaXVtLFxuICAgICAgICAgIHVwbG9hZExhYmVsLFxuICAgICAgICAgIG9wZW5VcGxvYWRNb2RhbCxcbiAgICAgICAgKX1cbiAgICAgICAgaXRlbT17d2F0Y2hsaXN0fVxuICAgICAgICBvcGVuQ29sb3I9XCJwcmltYXJ5Lm1haW5cIlxuICAgICAgICBhbmNob3JPcmlnaW49e3sgdmVydGljYWw6IFwiYm90dG9tXCIsIGhvcml6b250YWw6IFwicmlnaHRcIiB9fVxuICAgICAgICB0cmFuc2Zvcm1PcmlnaW49e3sgdmVydGljYWw6IFwidG9wXCIsIGhvcml6b250YWw6IFwicmlnaHRcIiB9fVxuICAgICAgLz5cbiAgICA8L0JveD5cbiAgKVxufVxuIl0sIm5hbWVzIjpbIldhdGNobGlzdEFjdGlvbnMiLCJnZXRBY3Rpb25zIiwiZWRpdGFibGUiLCJjYW5TZWFyY2giLCJhY3RzIiwiaGFzUmVhY2hlZExpbWl0IiwidXBsb2FkTGFiZWwiLCJvcGVuVXBsb2FkTW9kYWwiLCJhY3Rpb25zIiwicHVzaCIsImlkIiwibGFiZWwiLCJpY29uIiwiVXBsb2FkRmlsZSIsImRpc2FibGVkQWN0aW9uIiwib25DbGljayIsImNvcHkiLCJidWlsZGVyIiwicmVuYW1lIiwicmVtb3ZlIiwic2VhcmNoIiwid2F0Y2hsaXN0IiwiZW5hYmxlQnJpZWYiLCJ0IiwidXNlVHJhbnNsYXRpb24iLCJoYXNFbnRpdGxlbWVudCIsInF1b3RhIiwidXNlQWNjb3VudCIsIm5hdmlnYXRlIiwidXNlTmF2aWdhdGUiLCJvcGVuIiwic2V0T3BlbiIsInVzZVN0YXRlIiwidXNlV2F0Y2hsaXN0c0FjdGlvbnMiLCJyZW1vdmVQYXJhbXMiLCJvblN1Y2Nlc3MiLCJXQVRDSExJU1RTX1JPVVRFIiwiaXRlbXMiLCJsZW5ndGgiLCJXQVRDSExJU1RfSVRFTVNfTUFYSU1VTV9DT1VOVCIsImlzRnJlZW1pdW0iLCJ1c2VJc0ZyZWVtaXVtIiwic2l6ZSIsImVuYWJsZUJyaWVmcyIsImdldExvY2FsU3RvcmFnZUZsYWciLCJCb3giLCJzeCIsImRpc3BsYXkiLCJnYXAiLCJteSIsInJvbGUiLCJXYXRjaGxpc3RCcmllZkJ1dHRvbnMiLCJSUFRvb2x0aXAiLCJkaXNhYmxlZENvbnRlbnQiLCJmYXZvcml0ZSIsInRpdGxlIiwiaXNGYXZvcml0ZSIsIkljb25CdXR0b24iLCJlIiwic3RvcFByb3BhZ2F0aW9uIiwiZGlzYWJsZWQiLCJXYXRjaGxpc3RTaGFyZUJ1dHRvbiIsIkFjdGlvbnNNZW51IiwiaXRlbSIsIm9wZW5Db2xvciIsImFuY2hvck9yaWdpbiIsInZlcnRpY2FsIiwiaG9yaXpvbnRhbCIsInRyYW5zZm9ybU9yaWdpbiJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQTBEYUE7OztlQUFBQTs7Ozt1QkExRFk7OEJBQ007Z0NBQ0g7MEJBRWtCO3VCQUNoQjsyQkFDSDtnQ0FDWTt1QkFDSDtzQkFDSjt1QkFDTDt3QkFDTTtzQ0FDSTtzQ0FDQTt1Q0FDQztBQVd0QyxNQUFNQyxhQUFhLENBQ2pCQyxVQUNBQyxXQUNBQyxNQUNBQyxpQkFDQUMsYUFDQUM7SUFFQSxNQUFNQyxVQUFVLEVBQUU7SUFDbEIsSUFBSU4sVUFBVTtRQUNaTSxRQUFRQyxJQUFJLENBQUM7WUFDWEMsSUFBSTtZQUNKQyxPQUFPTDtZQUNQTSxvQkFBTSxxQkFBQ0MsaUJBQVU7WUFDakJDLGdCQUFnQixJQUFNVDtZQUN0QlUsU0FBUztnQkFDUFIsNEJBQUFBLHNDQUFBQTtZQUNGO1FBQ0Y7SUFDRjtJQUNBQyxRQUFRQyxJQUFJLENBQUNMLEtBQUtZLElBQUk7SUFDdEIsSUFBSWQsVUFBVTtRQUNaTSxRQUFRQyxJQUFJLENBQUNMLEtBQUthLE9BQU87UUFDekJULFFBQVFDLElBQUksQ0FBQ0wsS0FBS2Ms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