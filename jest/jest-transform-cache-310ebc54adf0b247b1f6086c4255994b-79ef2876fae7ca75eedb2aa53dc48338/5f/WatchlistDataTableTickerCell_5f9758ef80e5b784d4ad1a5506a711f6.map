{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/watchlists/src/lib/WatchlistDataTabs/WatchlistDataTableCells/WatchlistDataTableTickerCell.tsx"],"sourcesContent":["import { RPTooltip } from \"@rp/react/web/common/base-components\"\nimport { CategoryIcon, EllipsisTooltip } from \"@rp/react/web/common/composite-components\"\nimport { Box, Skeleton, Typography } from \"@rp/react/web/mui/core\"\nimport { WatchlistDataTabsTableEntity } from \"../WatchlistDataTabsTable.types\"\n\nfunction WatchlistDataTableTickerCell({ row }: { row: WatchlistDataTabsTableEntity }) {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        alignItems: \"center\",\n        pl: 1.2,\n        height: \"100%\",\n        width: \"100%\",\n        \"& svg\": { width: 20, height: 20 },\n      }}\n    >\n      {row.isLoadingEntities ? (\n        <>\n          <Skeleton width={20} />\n          <Skeleton width={60} sx={{ ml: 2 }} />\n        </>\n      ) : (\n        <>\n          <CategoryIcon cqsItem={row.entityInfo} />\n          {row.entityInfo.metadata1 && (\n            <RPTooltip\n              title={\n                row.financialData?.companyQuote?.data?.price === undefined ? null : (\n                  <Typography>\n                    Exchange:{\" \"}\n                    <strong>{row.financialData?.companyQuote?.data?.exchange ?? \"Unknown\"}</strong>\n                  </Typography>\n                )\n              }\n              placement=\"top\"\n            >\n              <span>\n                <EllipsisTooltip\n                  tooltipText={row.entityInfo.metadata1}\n                  typographyProps={{\n                    sx: { ml: 1, color: \"text.secondary\", fontSize: 14, maxWidth: 60 },\n                  }}\n                >\n                  {row.entityInfo.metadata1}\n                </EllipsisTooltip>\n              </span>\n            </RPTooltip>\n          )}\n        </>\n      )}\n    </Box>\n  )\n}\n\nexport { WatchlistDataTableTickerCell }\n"],"names":["WatchlistDataTableTickerCell","row","Box","sx","display","alignItems","pl","height","width","isLoadingEntities","Skeleton","ml","CategoryIcon","cqsItem","entityInfo","metadata1","RPTooltip","title","financialData","companyQuote","data","price","undefined","Typography","strong","exchange","placement","span","EllipsisTooltip","tooltipText","typographyProps","color","fontSize","maxWidth"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAuDSA;;;eAAAA;;;;gCAvDiB;qCACoB;sBACJ;AAG1C,SAASA,6BAA6B,EAAEC,GAAG,EAAyC;QAuBpEA,sCAAAA,iCAAAA,oBAGaA,uCAAAA,kCAAAA;QAAAA;IAzB3B,qBACE,qBAACC,SAAG;QACFC,IAAI;YACFC,SAAS;YACTC,YAAY;YACZC,IAAI;YACJC,QAAQ;YACRC,OAAO;YACP,SAAS;gBAAEA,OAAO;gBAAID,QAAQ;YAAG;QACnC;kBAECN,IAAIQ,iBAAiB,iBACpB;;8BACE,qBAACC,cAAQ;oBAACF,OAAO;;8BACjB,qBAACE,cAAQ;oBAACF,OAAO;oBAAIL,IAAI;wBAAEQ,IAAI;oBAAE;;;2BAGnC;;8BACE,qBAACC,iCAAY;oBAACC,SAASZ,IAAIa,UAAU;;gBACpCb,IAAIa,UAAU,CAACC,SAAS,kBACvB,qBAACC,yBAAS;oBACRC,OACEhB,EAAAA,qBAAAA,IAAIiB,aAAa,cAAjBjB,0CAAAA,kCAAAA,mBAAmBkB,YAAY,cAA/BlB,uDAAAA,uCAAAA,gCAAiCmB,IAAI,cAArCnB,2DAAAA,qCAAuCoB,KAAK,MAAKC,YAAY,qBAC3D,sBAACC,gBAAU;;4BAAC;4BACA;0CACV,qBAACC;0CAAQvB,CAAAA,iDAAAA,sBAAAA,IAAIiB,aAAa,cAAjBjB,2CAAAA,mCAAAA,oBAAmBkB,YAAY,cAA/BlB,wDAAAA,wCAAAA,iCAAiCmB,IAAI,cAArCnB,4DAAAA,sCAAuCwB,QAAQ,cAA/CxB,2DAAAA,gDAAmD;;;;oBAIlEyB,WAAU;8BAEV,cAAA,qBAACC;kCACC,cAAA,qBAACC,oCAAe;4BACdC,aAAa5B,IAAIa,UAAU,CAACC,SAAS;4BACrCe,iBAAiB;gCACf3B,IAAI;oCAAEQ,IAAI;oCAAGoB,OAAO;oCAAkBC,UAAU;oCAAIC,UAAU;gCAAG;4BACnE;sCAEChC,IAAIa,UAAU,CAACC,SAAS;;;;;;;AAS3C"}