{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/watchlists/src/lib/WatchlistPortfolioHeader/WatchlistActions.tsx"],"sourcesContent":["import { useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { useNavigate } from \"react-router-dom\"\nimport { Watchlist } from \"@rp/common/api-types\"\nimport { WATCHLIST_ITEMS_MAXIMUM_COUNT } from \"@rp/common/settings\"\nimport { useIsFreemium } from \"@rp/react/common/hooks\"\nimport { useAccount } from \"@rp/react/common/providers\"\nimport { ActionsMenu, RPTooltip } from \"@rp/react/web/common/base-components\"\nimport { getLocalStorageFlag } from \"@rp/react/web/common/utils\"\nimport { Box, IconButton } from \"@rp/react/web/mui/core\"\nimport { UploadFile } from \"@rp/react/web/mui/icons\"\nimport { WATCHLISTS_ROUTE } from \"@rp/react/web/router\"\nimport { WatchlistShareButton } from \"../WatchlistShareButton\"\nimport { useWatchlistsActions } from \"../hooks/useWatchlistsActions\"\nimport { WatchlistBriefButtons } from \"./WatchlistBriefButtons\"\n\ntype Props = {\n  watchlist: Watchlist\n  editable: boolean\n  openUploadModal?: () => void\n  enableBrief: boolean\n}\n\ntype WatchlistActions = ReturnType<typeof useWatchlistsActions>\n\nconst getActions = (\n  editable: boolean,\n  canSearch: boolean,\n  acts: WatchlistActions,\n  hasReachedLimit: boolean,\n  uploadLabel: string,\n  openUploadModal?: () => void,\n) => {\n  const actions = []\n  if (editable) {\n    actions.push({\n      id: \"csv-upload\",\n      label: uploadLabel,\n      icon: <UploadFile />,\n      disabledAction: () => hasReachedLimit,\n      onClick: () => {\n        openUploadModal?.()\n      },\n    })\n  }\n  actions.push(acts.copy)\n  if (editable) {\n    actions.push(acts.builder)\n    actions.push(acts.rename)\n    actions.push(acts.remove)\n  }\n\n  if (canSearch) {\n    actions.push(acts.search)\n  }\n  return actions\n}\n\nexport const WatchlistActions = ({ watchlist, editable, openUploadModal, enableBrief }: Props) => {\n  const { t } = useTranslation()\n  const { hasEntitlement, quota } = useAccount()\n  const navigate = useNavigate()\n  const [open, setOpen] = useState(false)\n  const canSearch = hasEntitlement(\"search\")\n  const actions = useWatchlistsActions({\n    removeParams: { onSuccess: () => navigate(WATCHLISTS_ROUTE) },\n  })\n  const hasReachedLimit = watchlist.items.length >= WATCHLIST_ITEMS_MAXIMUM_COUNT\n\n  const isFreemium = useIsFreemium(quota)\n  const uploadLabel = hasReachedLimit\n    ? t(\"watchlistPage.maximumWatchlistSize\", { size: WATCHLIST_ITEMS_MAXIMUM_COUNT })\n    : \"Upload List\"\n  const enableBriefs = getLocalStorageFlag(\"brief\")\n\n  return (\n    <Box sx={{ display: \"flex\", gap: 1, my: 1 }} role=\"toolbar\">\n      {enableBriefs && <WatchlistBriefButtons watchlist={watchlist} enableBrief={enableBrief} />}\n      <RPTooltip\n        disabledContent={actions.favorite.disabledAction?.(watchlist)}\n        title={watchlist.isFavorite ? \"Remove from Favorites\" : \"Add to Favorites\"}\n      >\n        <IconButton\n          onClick={e => {\n            e.stopPropagation()\n            actions.favorite.onClick?.(watchlist)\n          }}\n          disabled={actions.favorite.disabledAction?.(watchlist)}\n        >\n          {actions.favorite.icon?.(watchlist)}\n        </IconButton>\n      </RPTooltip>\n      <WatchlistShareButton watchlist={watchlist} />\n      <ActionsMenu\n        open={open}\n        setOpen={setOpen}\n        actions={getActions(\n          editable,\n          canSearch,\n          actions,\n          hasReachedLimit || isFreemium,\n          uploadLabel,\n          openUploadModal,\n        )}\n        item={watchlist}\n        openColor=\"primary.main\"\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\n        transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      />\n    </Box>\n  )\n}\n"],"names":["WatchlistActions","getActions","editable","canSearch","acts","hasReachedLimit","uploadLabel","openUploadModal","actions","push","id","label","icon","UploadFile","disabledAction","onClick","copy","builder","rename","remove","search","watchlist","enableBrief","t","useTranslation","hasEntitlement","quota","useAccount","navigate","useNavigate","open","setOpen","useState","useWatchlistsActions","removeParams","onSuccess","WATCHLISTS_ROUTE","items","length","WATCHLIST_ITEMS_MAXIMUM_COUNT","isFreemium","useIsFreemium","size","enableBriefs","getLocalStorageFlag","Box","sx","display","gap","my","role","WatchlistBriefButtons","RPTooltip","disabledContent","favorite","title","isFavorite","IconButton","e","stopPropagation","disabled","WatchlistShareButton","ActionsMenu","item","openColor","anchorOrigin","vertical","horizontal","transformOrigin"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}