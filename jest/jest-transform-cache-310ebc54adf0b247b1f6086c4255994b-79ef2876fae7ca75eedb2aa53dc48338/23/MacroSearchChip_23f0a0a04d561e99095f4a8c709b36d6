dd64f0ba30b96033aeff2f2d861b7ba3
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "MacroSearchChip", {
    enumerable: true,
    get: function() {
        return MacroSearchChip;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _hooks = require("@rp/react/web/common/hooks");
const _utils = require("@rp/react/web/common/vendors/utils");
const _icons = require("@rp/react/web/icons");
const _NameDisplay = require("../NameDisplay");
const _MacroSearchesDropdown = require("../dropdowns/MacroSearchesDropdown");
const _BaseChip = require("./BaseChip");
const _Chipstyles = require("./Chip.styles");
const _macroSearchChipUtils = require("./macroSearchChipUtils");
const MacroSearchChip = /*#__PURE__*/ (0, _react.forwardRef)(({ filter, onRemove, query, flatFilters }, ref)=>{
    const [anchorEl, setAnchorEl] = (0, _react.useState)(null);
    const filters = flatFilters !== null && flatFilters !== void 0 ? flatFilters : filter.value.map((id)=>{
        var _query_actions_expression_getFilter;
        return (_query_actions_expression_getFilter = query === null || query === void 0 ? void 0 : query.actions.expression.getFilter(id)) !== null && _query_actions_expression_getFilter !== void 0 ? _query_actions_expression_getFilter : null;
    });
    const open = Boolean(anchorEl);
    (0, _hooks.useDisableIOSTouch)(open);
    const { value: macroSearchFilter, isLoading } = (0, _macroSearchChipUtils.useMacroSearchFilter)(filters, filter.type);
    const total = macroSearchFilter.length;
    const handleClick = (event)=>{
        setAnchorEl(event.currentTarget);
    };
    const onDropDownRemove = (id, group)=>{
        setAnchorEl(null);
        const child = query === null || query === void 0 ? void 0 : query.actions.expression.getFilter(id);
        const isParentSingle = Array.isArray(filter === null || filter === void 0 ? void 0 : filter.value) && (filter === null || filter === void 0 ? void 0 : filter.value.length) === 1;
        const isChildSingle = Array.isArray(child === null || child === void 0 ? void 0 : child.value) && (child === null || child === void 0 ? void 0 : child.value.length) === group.value.length;
        if (!child) return;
        var _query_id, _query_saveStatus;
        _utils.tagManagerEvents.queryRefinement({
            action: "remove",
            component: "queryBar",
            queryId: (_query_id = query === null || query === void 0 ? void 0 : query.id) !== null && _query_id !== void 0 ? _query_id : "",
            queryType: child.type,
            savedStatus: (_query_saveStatus = query === null || query === void 0 ? void 0 : query.saveStatus) !== null && _query_saveStatus !== void 0 ? _query_saveStatus : "unsaved"
        });
        if (isParentSingle && isChildSingle) {
            query === null || query === void 0 ? void 0 : query.actions.expression.removeFilters([
                filter.id
            ]);
        } else {
            query === null || query === void 0 ? void 0 : query.actions.expression.removeMacroSearchContent(filter.id, group);
        }
    };
    if (!macroSearchFilter.length) return null;
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_BaseChip.BaseChip, {
                clickable: true,
                icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.QueryIcon, {
                    icon: filter.type
                }),
                onClick: handleClick,
                onRemove: onRemove,
                selected: query && open,
                ref: ref,
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_Chipstyles.ChipLabel, {
                        children: macroSearchFilter.map((item, subIndex)=>{
                            return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_react.Fragment, {
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_NameDisplay.NameDisplay, {
                                        data: {
                                            data: {
                                                name: (0, _macroSearchChipUtils.getMacroChipLabel)(item)
                                            },
                                            isLoading
                                        }
                                    }),
                                    subIndex < total - 1 ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_Chipstyles.Separator, {}) : null
                                ]
                            }, `fragment-${item.value}`);
                        })
                    }),
                    total > 1 ? /*#__PURE__*/ (0, _jsxruntime.jsxs)(_Chipstyles.TotalDisplay, {
                        children: [
                            "(",
                            total,
                            ")"
                        ]
                    }) : null
                ]
            }),
            query ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_Chipstyles.PopoverStyled, {
                open: open,
                anchorEl: anchorEl,
                onClose: ()=>setAnchorEl(null),
                anchorOrigin: {
                    vertical: "bottom",
                    horizontal: "left"
                },
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_MacroSearchesDropdown.MacroSearchesDropdown, {
                    filter: macroSearchFilter,
                    onRemove: onDropDownRemove
                })
            }) : null
        ]
    });
});

//# sourceMappingURL=data:application/json;base64,