{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/node_modules/swiper/modules/controller/controller.js"],"sourcesContent":["/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\nimport { elementTransitionEnd, nextTick } from '../../shared/utils.js';\nexport default function Controller({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide' // or 'container'\n    }\n  });\n\n  swiper.controller = {\n    control: undefined\n  };\n  function LinearSpline(x, y) {\n    const binarySearch = function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }();\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];\n    };\n    return this;\n  }\n  function getInterpolateFunction(c) {\n    swiper.controller.spline = swiper.params.loop ? new LinearSpline(swiper.slidesGrid, c.slidesGrid) : new LinearSpline(swiper.snapGrid, c.snapGrid);\n  }\n  function setTranslate(_t, byController) {\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    const Swiper = swiper.constructor;\n    function setControlledTranslate(c) {\n      if (c.destroyed) return;\n\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        if (Number.isNaN(multiplier) || !Number.isFinite(multiplier)) {\n          multiplier = 1;\n        }\n        controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();\n      }\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  }\n  function setTransition(duration, byController) {\n    const Swiper = swiper.constructor;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      if (c.destroyed) return;\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        elementTransitionEnd(c.wrapperEl, () => {\n          if (!controlled) return;\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  }\n  function removeSpline() {\n    if (!swiper.controller.control) return;\n    if (swiper.controller.spline) {\n      swiper.controller.spline = undefined;\n      delete swiper.controller.spline;\n    }\n  }\n  on('beforeInit', () => {\n    if (typeof window !== 'undefined' && (\n    // eslint-disable-line\n    typeof swiper.params.controller.control === 'string' || swiper.params.controller.control instanceof HTMLElement)) {\n      const controlElement = document.querySelector(swiper.params.controller.control);\n      if (controlElement && controlElement.swiper) {\n        swiper.controller.control = controlElement.swiper;\n      } else if (controlElement) {\n        const onControllerSwiper = e => {\n          swiper.controller.control = e.detail[0];\n          swiper.update();\n          controlElement.removeEventListener('init', onControllerSwiper);\n        };\n        controlElement.addEventListener('init', onControllerSwiper);\n      }\n      return;\n    }\n    swiper.controller.control = swiper.params.controller.control;\n  });\n  on('update', () => {\n    removeSpline();\n  });\n  on('resize', () => {\n    removeSpline();\n  });\n  on('observerUpdate', () => {\n    removeSpline();\n  });\n  on('setTranslate', (_s, translate, byController) => {\n    if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n    swiper.controller.setTranslate(translate, byController);\n  });\n  on('setTransition', (_s, duration, byController) => {\n    if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n    swiper.controller.setTransition(duration, byController);\n  });\n  Object.assign(swiper.controller, {\n    setTranslate,\n    setTransition\n  });\n}"],"names":["Controller","swiper","extendParams","on","controller","control","undefined","inverse","by","LinearSpline","x","y","binarySearch","search","maxIndex","minIndex","guess","array","val","length","lastIndex","i1","i3","interpolate","x2","getInterpolateFunction","c","spline","params","loop","slidesGrid","snapGrid","setTranslate","_t","byController","controlled","multiplier","controlledTranslate","Swiper","constructor","setControlledTranslate","destroyed","translate","rtlTranslate","maxTranslate","minTranslate","Number","isNaN","isFinite","updateProgress","updateActiveIndex","updateSlidesClasses","Array","isArray","i","setTransition","duration","setControlledTransition","transitionStart","autoHeight","nextTick","updateAutoHeight","elementTransitionEnd","wrapperEl","transitionEnd","removeSpline","window","HTMLElement","controlElement","document","querySelector","onControllerSwiper","e","detail","update","removeEventListener","addEventListener","_s","Object","assign"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA,qDAAqD;;;;+BAErD;;;eAAwBA;;;uBADuB;AAChC,SAASA,WAAW,EACjCC,MAAM,EACNC,YAAY,EACZC,EAAE,EACH;IACCD,aAAa;QACXE,YAAY;YACVC,SAASC;YACTC,SAAS;YACTC,IAAI,QAAQ,iBAAiB;QAC/B;IACF;IAEAP,OAAOG,UAAU,GAAG;QAClBC,SAASC;IACX;IACA,SAASG,aAAaC,CAAC,EAAEC,CAAC;QACxB,MAAMC,eAAe,SAASC;YAC5B,IAAIC;YACJ,IAAIC;YACJ,IAAIC;YACJ,OAAO,CAACC,OAAOC;gBACbH,WAAW,CAAC;gBACZD,WAAWG,MAAME,MAAM;gBACvB,MAAOL,WAAWC,WAAW,EAAG;oBAC9BC,QAAQF,WAAWC,YAAY;oBAC/B,IAAIE,KAAK,CAACD,MAAM,IAAIE,KAAK;wBACvBH,WAAWC;oBACb,OAAO;wBACLF,WAAWE;oBACb;gBACF;gBACA,OAAOF;YACT;QACF;QACA,IAAI,CAACJ,CAAC,GAAGA;QACT,IAAI,CAACC,CAAC,GAAGA;QACT,IAAI,CAACS,SAAS,GAAGV,EAAES,MAAM,GAAG;QAC5B,uDAAuD;QACvD,iDAAiD;QACjD,gDAAgD;QAChD,IAAIE;QACJ,IAAIC;QACJ,IAAI,CAACC,WAAW,GAAG,SAASA,YAAYC,EAAE;YACxC,IAAI,CAACA,IAAI,OAAO;YAEhB,8EAA8E;YAC9EF,KAAKV,aAAa,IAAI,CAACF,CAAC,EAAEc;YAC1BH,KAAKC,KAAK;YAEV,4DAA4D;YAC5D,2CAA2C;YAC3C,OAAO,AAACE,CAAAA,KAAK,IAAI,CAACd,CAAC,CAACW,GAAG,AAAD,IAAM,CAAA,IAAI,CAACV,CAAC,CAACW,GAAG,GAAG,IAAI,CAACX,CAAC,CAACU,GAAG,AAAD,IAAM,CAAA,IAAI,CAACX,CAAC,CAACY,GAAG,GAAG,IAAI,CAACZ,CAAC,CAACW,GAAG,AAAD,IAAK,IAAI,CAACV,CAAC,CAACU,GAAG;QAC/F;QACA,OAAO,IAAI;IACb;IACA,SAASI,uBAAuBC,CAAC;QAC/BzB,OAAOG,UAAU,CAACuB,MAAM,GAAG1B,OAAO2B,MAAM,CAACC,IAAI,GAAG,IAAIpB,aAAaR,OAAO6B,UAAU,EAAEJ,EAAEI,UAAU,IAAI,IAAIrB,aAAaR,OAAO8B,QAAQ,EAAEL,EAAEK,QAAQ;IAClJ;IACA,SAASC,aAAaC,EAAE,EAAEC,YAAY;QACpC,MAAMC,aAAalC,OAAOG,UAAU,CAACC,OAAO;QAC5C,IAAI+B;QACJ,IAAIC;QACJ,MAAMC,SAASrC,OAAOsC,WAAW;QACjC,SAASC,uBAAuBd,CAAC;YAC/B,IAAIA,EAAEe,SAAS,EAAE;YAEjB,kEAAkE;YAClE,+EAA+E;YAC/E,8EAA8E;YAC9E,2DAA2D;YAC3D,MAAMC,YAAYzC,OAAO0C,YAAY,GAAG,CAAC1C,OAAOyC,SAAS,GAAGzC,OAAOyC,SAAS;YAC5E,IAAIzC,OAAO2B,MAAM,CAACxB,UAAU,CAACI,EAAE,KAAK,SAAS;gBAC3CiB,uBAAuBC;gBACvB,+FAA+F;gBAC/F,0BAA0B;gBAC1BW,sBAAsB,CAACpC,OAAOG,UAAU,CAACuB,MAAM,CAACJ,WAAW,CAAC,CAACmB;YAC/D;YACA,IAAI,CAACL,uBAAuBpC,OAAO2B,MAAM,CAACxB,UAAU,CAACI,EAAE,KAAK,aAAa;gBACvE4B,aAAa,AAACV,CAAAA,EAAEkB,YAAY,KAAKlB,EAAEmB,YAAY,EAAC,IAAM5C,CAAAA,OAAO2C,YAAY,KAAK3C,OAAO4C,YAAY,EAAC;gBAClG,IAAIC,OAAOC,KAAK,CAACX,eAAe,CAACU,OAAOE,QAAQ,CAACZ,aAAa;oBAC5DA,aAAa;gBACf;gBACAC,sBAAsB,AAACK,CAAAA,YAAYzC,OAAO4C,YAAY,EAAC,IAAKT,aAAaV,EAAEmB,YAAY;YACzF;YACA,IAAI5C,OAAO2B,MAAM,CAACxB,UAAU,CAACG,OAAO,EAAE;gBACpC8B,sBAAsBX,EAAEkB,YAAY,KAAKP;YAC3C;YACAX,EAAEuB,cAAc,CAACZ;YACjBX,EAAEM,YAAY,CAACK,qBAAqBpC;YACpCyB,EAAEwB,iBAAiB;YACnBxB,EAAEyB,mBAAmB;QACvB;QACA,IAAIC,MAAMC,OAAO,CAAClB,aAAa;YAC7B,IAAK,IAAImB,IAAI,GAAGA,IAAInB,WAAWhB,MAAM,EAAEmC,KAAK,EAAG;gBAC7C,IAAInB,UAAU,CAACmB,EAAE,KAAKpB,gBAAgBC,UAAU,CAACmB,EAAE,YAAYhB,QAAQ;oBACrEE,uBAAuBL,UAAU,CAACmB,EAAE;gBACtC;YACF;QACF,OAAO,IAAInB,sBAAsBG,UAAUJ,iBAAiBC,YAAY;YACtEK,uBAAuBL;QACzB;IACF;IACA,SAASoB,cAAcC,QAAQ,EAAEtB,YAAY;QAC3C,MAAMI,SAASrC,OAAOsC,WAAW;QACjC,MAAMJ,aAAalC,OAAOG,UAAU,CAACC,OAAO;QAC5C,IAAIiD;QACJ,SAASG,wBAAwB/B,CAAC;YAChC,IAAIA,EAAEe,SAAS,EAAE;YACjBf,EAAE6B,aAAa,CAACC,UAAUvD;YAC1B,IAAIuD,aAAa,GAAG;gBAClB9B,EAAEgC,eAAe;gBACjB,IAAIhC,EAAEE,MAAM,CAAC+B,UAAU,EAAE;oBACvBC,IAAAA,eAAQ,EAAC;wBACPlC,EAAEmC,gBAAgB;oBACpB;gBACF;gBACAC,IAAAA,2BAAoB,EAACpC,EAAEqC,SAAS,EAAE;oBAChC,IAAI,CAAC5B,YAAY;oBACjBT,EAAEsC,aAAa;gBACjB;YACF;QACF;QACA,IAAIZ,MAAMC,OAAO,CAAClB,aAAa;YAC7B,IAAKmB,IAAI,GAAGA,IAAInB,WAAWhB,MAAM,EAAEmC,KAAK,EAAG;gBACzC,IAAInB,UAAU,CAACmB,EAAE,KAAKpB,gBAAgBC,UAAU,CAACmB,EAAE,YAAYhB,QAAQ;oBACrEmB,wBAAwBtB,UAAU,CAACmB,EAAE;gBACvC;YACF;QACF,OAAO,IAAInB,sBAAsBG,UAAUJ,iBAAiBC,YAAY;YACtEsB,wBAAwBtB;QAC1B;IACF;IACA,SAAS8B;QACP,IAAI,CAAChE,OAAOG,UAAU,CAACC,OAAO,EAAE;QAChC,IAAIJ,OAAOG,UAAU,CAACuB,MAAM,EAAE;YAC5B1B,OAAOG,UAAU,CAACuB,MAAM,GAAGrB;YAC3B,OAAOL,OAAOG,UAAU,CAACuB,MAAM;QACjC;IACF;IACAxB,GAAG,cAAc;QACf,IAAI,OAAO+D,WAAW,eACtB,sBAAsB;QACtB,CAAA,OAAOjE,OAAO2B,MAAM,CAACxB,UAAU,CAACC,OAAO,KAAK,YAAYJ,OAAO2B,MAAM,CAACxB,UAAU,CAACC,OAAO,YAAY8D,WAAU,GAAI;YAChH,MAAMC,iBAAiBC,SAASC,aAAa,CAACrE,OAAO2B,MAAM,CAACxB,UAAU,CAACC,OAAO;YAC9E,IAAI+D,kBAAkBA,eAAenE,MAAM,EAAE;gBAC3CA,OAAOG,UAAU,CAACC,OAAO,GAAG+D,eAAenE,MAAM;YACnD,OAAO,IAAImE,gBAAgB;gBACzB,MAAMG,qBAAqBC,CAAAA;oBACzBvE,OAAOG,UAAU,CAACC,OAAO,GAAGmE,EAAEC,MAAM,CAAC,EAAE;oBACvCxE,OAAOyE,MAAM;oBACbN,eAAeO,mBAAmB,CAAC,QAAQJ;gBAC7C;gBACAH,eAAeQ,gBAAgB,CAAC,QAAQL;YAC1C;YACA;QACF;QACAtE,OAAOG,UAAU,CAACC,OAAO,GAAGJ,OAAO2B,MAAM,CAACxB,UAAU,CAACC,OAAO;IAC9D;IACAF,GAAG,UAAU;QACX8D;IACF;IACA9D,GAAG,UAAU;QACX8D;IACF;IACA9D,GAAG,kBAAkB;QACnB8D;IACF;IACA9D,GAAG,gBAAgB,CAAC0E,IAAInC,WAAWR;QACjC,IAAI,CAACjC,OAAOG,UAAU,CAACC,OAAO,IAAIJ,OAAOG,UAAU,CAACC,OAAO,CAACoC,SAAS,EAAE;QACvExC,OAAOG,UAAU,CAAC4B,YAAY,CAACU,WAAWR;IAC5C;IACA/B,GAAG,iBAAiB,CAAC0E,IAAIrB,UAAUtB;QACjC,IAAI,CAACjC,OAAOG,UAAU,CAACC,OAAO,IAAIJ,OAAOG,UAAU,CAACC,OAAO,CAACoC,SAAS,EAAE;QACvExC,OAAOG,UAAU,CAACmD,aAAa,CAACC,UAAUtB;IAC5C;IACA4C,OAAOC,MAAM,CAAC9E,OAAOG,UAAU,EAAE;QAC/B4B;QACAuB;IACF;AACF"}