{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/cqs-query-context/src/lib/convert-item-to-filter/convertItemToFilter.ts"],"sourcesContent":["import { RpqlArrayOperations, RpqlFilter } from \"@rp/common/api-types\"\nimport { FilterItem } from \"@rp/react/tanstack-api/cqs-query-context\"\nimport { isEntityItem, isMacroSearchItem } from \"../type-guards\"\n\n// I've added this local storage check to be able to switch between the default operation without\n// needing to redeploy the application as I feel this will need testing.\nconst getDefaultOperation = () => {\n  const value = localStorage.getItem(\"__explore_default_operation__\")\n  return value === \"in\" || value === \"all\" ? value : \"in\"\n}\nconst DEFAULT_OPERATION: RpqlArrayOperations = getDefaultOperation()\n\ntype ExtendedArrayOperations = RpqlArrayOperations | \"not-in\"\n\nconst convertItemToFilter = (\n  item: FilterItem,\n  operation: ExtendedArrayOperations = DEFAULT_OPERATION,\n): RpqlFilter => {\n  if (operation === \"not-in\") {\n    return {\n      type: \"not\",\n      value: convertItemToFilter(item, \"in\"),\n    }\n  }\n\n  if (isEntityItem(item)) {\n    return {\n      type: \"entity\",\n      operation: operation,\n      metadata: { subType: item.entityType },\n      value: [item.value],\n    }\n  }\n\n  if (isMacroSearchItem(item)) {\n    return {\n      type: item.type,\n      operation: \"all\" as const,\n      value: item.value.map(filter => ({ ...filter, operation: \"in\" as const })),\n      metadata: { labels: item.labels },\n    }\n  }\n\n  if (item.type === \"watchlist\") {\n    return {\n      type: \"watchlist\",\n      operation: operation,\n      value: item.value,\n    }\n  }\n\n  if (item.type === \"keyword\") {\n    return {\n      type: \"keyword\",\n      operation: operation,\n      value: [item.value],\n    }\n  }\n\n  return {\n    type: item.type,\n    operation: operation,\n    value: [item.value],\n  }\n}\n\nexport { convertItemToFilter, DEFAULT_OPERATION }\nexport type { ExtendedArrayOperations }\n"],"names":["DEFAULT_OPERATION","convertItemToFilter","getDefaultOperation","value","localStorage","getItem","item","operation","type","isEntityItem","metadata","subType","entityType","isMacroSearchItem","map","filter","labels"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;;;;;;;;IAkE8BA,iBAAiB;eAAjBA;;IAArBC,mBAAmB;eAAnBA;;;4BAhEuC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEhD,iGAAiG;AACjG,wEAAwE;AACxE,MAAMC,sBAAsB;IAC1B,MAAMC,QAAQC,aAAaC,OAAO,CAAC;IACnC,OAAOF,UAAU,QAAQA,UAAU,QAAQA,QAAQ;AACrD;AACA,MAAMH,oBAAyCE;AAI/C,MAAMD,sBAAsB,CAC1BK,MACAC,YAAqCP,iBAAiB;IAEtD,IAAIO,cAAc,UAAU;QAC1B,OAAO;YACLC,MAAM;YACNL,OAAOF,oBAAoBK,MAAM;QACnC;IACF;IAEA,IAAIG,IAAAA,wBAAY,EAACH,OAAO;QACtB,OAAO;YACLE,MAAM;YACND,WAAWA;YACXG,UAAU;gBAAEC,SAASL,KAAKM,UAAU;YAAC;YACrCT,OAAO;gBAACG,KAAKH,KAAK;aAAC;QACrB;IACF;IAEA,IAAIU,IAAAA,6BAAiB,EAACP,OAAO;QAC3B,OAAO;YACLE,MAAMF,KAAKE,IAAI;YACfD,WAAW;YACXJ,OAAOG,KAAKH,KAAK,CAACW,GAAG,CAACC,CAAAA,SAAW,wCAAKA;oBAAQR,WAAW;;YACzDG,UAAU;gBAAEM,QAAQV,KAAKU,MAAM;YAAC;QAClC;IACF;IAEA,IAAIV,KAAKE,IAAI,KAAK,aAAa;QAC7B,OAAO;YACLA,MAAM;YACND,WAAWA;YACXJ,OAAOG,KAAKH,KAAK;QACnB;IACF;IAEA,IAAIG,KAAKE,IAAI,KAAK,WAAW;QAC3B,OAAO;YACLA,MAAM;YACND,WAAWA;YACXJ,OAAO;gBAACG,KAAKH,KAAK;aAAC;QACrB;IACF;IAEA,OAAO;QACLK,MAAMF,KAAKE,IAAI;QACfD,WAAWA;QACXJ,OAAO;YAACG,KAAKH,KAAK;SAAC;IACrB;AACF"}