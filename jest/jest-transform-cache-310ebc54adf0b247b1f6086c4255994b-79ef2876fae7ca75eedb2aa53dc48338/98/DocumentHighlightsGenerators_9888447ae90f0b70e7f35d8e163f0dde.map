{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/document-viewer/src/DocumentHighlightsGenerators.ts"],"sourcesContent":["import { CSSProperties } from \"react\"\nimport { CqsChunk } from \"@rp/common/api-types\"\nimport { splitKeywords } from \"@rp/common/utils\"\nimport { RpJsonDocument } from \"@rp/react/rpjson/types\"\nimport { RPThemeProps } from \"@rp/react/theme\"\nimport { useDeviceInfo } from \"@rp/react/web/common/hooks\"\nimport { useTheme } from \"@rp/react/web/mui/core\"\nimport {\n  highlightAllEntities,\n  highlightEntity,\n  highlightFinds,\n  highlightSentence,\n} from \"@rp/react/web/rpjson\"\n\nconst getBoldHighlightStyle = (theme: RPThemeProps) => {\n  return { color: theme.palette.text.primary, fontWeight: 700 }\n}\n\nconst useChunkStyles = (chunks: Array<CqsChunk>, selectedSentence: number, highlight: boolean) => {\n  const { isMobile } = useDeviceInfo()\n\n  if (!chunks.length) return []\n\n  return chunks\n    .map((chunk, index) =>\n      chunk.sentences.map(sentence => {\n        const defaultBackground = !highlight || sentence.pnum === 0 ? \"transparent\" : \"#2F2F2F\"\n\n        return highlightSentence(\n          {\n            backgroundColor: selectedSentence === index ? \"#0E3141\" : defaultBackground,\n\n            paddingBlock: isMobile ? 2 : 3,\n          },\n          { sentenceNumber: sentence.snum, paragraphNumber: sentence.pnum },\n        )\n      }),\n    )\n    .flat()\n}\n// We are going to assume that keywords are going to\n// be the first on the finds array\nconst useKeywordStyles = (\n  keywords: Array<string>,\n  find: string,\n  getHighlightStyle: (theme: RPThemeProps) => CSSProperties = getBoldHighlightStyle,\n) => {\n  const theme = useTheme()\n\n  return splitKeywords(keywords).map(\n    (_, index) =>\n      highlightFinds(getHighlightStyle(theme), { findIndex: index + (find ? 1 : 0) })[0],\n  )\n}\n\nconst useRpJsonAnalyticsStyles = (rpjson: RpJsonDocument, showHighlight: boolean) => {\n  const theme = useTheme()\n  if (!showHighlight) return []\n  return [highlightAllEntities(getBoldHighlightStyle(theme))]\n}\n\nconst useEntitiesStyles = (\n  entities: Array<string>,\n  showHighlight: boolean,\n  getHighlightStyle: (theme: RPThemeProps) => CSSProperties = getBoldHighlightStyle,\n) => {\n  const theme = useTheme()\n  const queryEntities = showHighlight\n    ? entities.map((id: string) => highlightEntity(getHighlightStyle(theme), { id }))\n    : []\n\n  return queryEntities\n}\n\nconst useFindStyles = (find: string, selectedIndex: number) => {\n  const theme = useTheme()\n  if (!find) return []\n  return highlightFinds(\n    {\n      backgroundColor: theme.palette.primary.light,\n      color: theme.palette.surface.main,\n      \"& span\": { color: `${theme.palette.surface.main} !important` },\n    },\n    {\n      selectedIndex: selectedIndex - 1,\n      selectedStyle: { backgroundColor: \"#FFB26B\", color: theme.palette.surface.main },\n    },\n  )\n}\n\nconst useDetectionStyles = (pnum?: number, snum?: number) => {\n  if (pnum === undefined || snum === undefined) {\n    return []\n  }\n\n  return [\n    highlightSentence(\n      {\n        backgroundColor: \"#0E3141\",\n        paddingBlock: 3,\n      },\n      { sentenceNumber: snum, paragraphNumber: pnum },\n    ),\n  ]\n}\n\nconst useLimitedChunksStyles = (chunk: CqsChunk | undefined) => {\n  if (!chunk) return []\n  return chunk.sentences\n    .map(({ pnum, snum }) => {\n      return [\n        highlightSentence(\n          {\n            // display: \"none\",\n            backgroundColor: pnum === 0 ? \"#0E3141\" : undefined,\n            paddingBlock: 2,\n            lineHeight: \"33px\",\n          },\n          { sentenceNumber: snum, paragraphNumber: pnum },\n        ),\n      ]\n    })\n    .flat()\n}\n\nexport {\n  useFindStyles,\n  useKeywordStyles,\n  useEntitiesStyles,\n  useRpJsonAnalyticsStyles,\n  useDetectionStyles,\n  useChunkStyles,\n  useLimitedChunksStyles,\n}\n"],"names":["useChunkStyles","useDetectionStyles","useEntitiesStyles","useFindStyles","useKeywordStyles","useLimitedChunksStyles","useRpJsonAnalyticsStyles","getBoldHighlightStyle","theme","color","palette","text","primary","fontWeight","chunks","selectedSentence","highlight","isMobile","useDeviceInfo","length","map","chunk","index","sentences","sentence","defaultBackground","pnum","highlightSentence","backgroundColor","paddingBlock","sentenceNumber","snum","paragraphNumber","flat","keywords","find","getHighlightStyle","useTheme","splitKeywords","_","highlightFinds","findIndex","rpjson","showHighlight","highlightAllEntities","entities","queryEntities","id","highlightEntity","selectedIndex","light","surface","main","selectedStyle","undefined","lineHeight"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}