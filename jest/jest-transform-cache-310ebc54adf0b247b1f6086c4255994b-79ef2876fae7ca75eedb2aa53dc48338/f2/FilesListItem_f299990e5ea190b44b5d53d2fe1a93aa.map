{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/apps/client-web/src/app/components/Hub/Files/FilesList/FilesListItem.tsx"],"sourcesContent":["import { Dispatch, SetStateAction, useState } from \"react\"\nimport Highlighter from \"react-highlight-words\"\nimport { isFileStatusCompleted } from \"@rp/common/utils\"\nimport { FileRowType, formatTime } from \"@rp/common/utils\"\nimport { useClerkOrganizationMember } from \"@rp/react/common/hooks\"\nimport { useAccount } from \"@rp/react/common/providers\"\nimport { ShareIcon } from \"@rp/react/web/common/base-components\"\nimport { UserAvatar } from \"@rp/react/web/common/base-components\"\nimport { HubTableRow } from \"@rp/react/web/common/composite-components\"\nimport { EllipsisTooltip } from \"@rp/react/web/common/composite-components\"\nimport { getSizeAndUnit, useFileActions } from \"@rp/react/web/common/files\"\nimport { useDeviceInfo, useHashParams } from \"@rp/react/web/common/hooks\"\nimport { Actions } from \"@rp/react/web/common/types\"\nimport { FileIcon } from \"@rp/react/web/icons\"\nimport { Box, Checkbox, Skeleton, useTheme } from \"@rp/react/web/mui/core\"\nimport { FileStatusCell } from \"../FileStatusCell/FileStatusCell\"\nimport { SelectedFile } from \"../Files\"\nimport { FilesListItemMobile } from \"./FilesListItemMobile\"\nimport { FilesListMobilesActions } from \"./FilesListMobilesActions\"\n\ntype Props = {\n  item: FileRowType\n  columnsWidth: Array<string>\n  actions: ReturnType<typeof useFileActions>[\"actions\"]\n  selected: Array<SelectedFile>\n  setSelected: Dispatch<SetStateAction<Array<SelectedFile>>>\n  filterTerm: string\n  isPlaceholderData?: boolean\n  shared?: boolean\n}\n\nconst FilesListItem = ({\n  item,\n  columnsWidth,\n  actions,\n  selected,\n  setSelected,\n  filterTerm,\n  isPlaceholderData,\n  shared,\n}: Props) => {\n  const [{ document }] = useHashParams()\n  const { isMobile } = useDeviceInfo()\n  const [isHover, setIsHover] = useState<Record<string, boolean>>({})\n  const [openMenu, setOpenMenu] = useState(false)\n  const theme = useTheme()\n  const { data: orgUser, isLoading } = useClerkOrganizationMember(item.owner)\n\n  const { canShare } = useAccount()\n\n  // This checks that the item has finished uploading before trying to fetch it's metadata\n  const missingMetaData =\n    [\"analyzing\", \"progress\", \"processing\", \"pending\"].includes(item.status) &&\n    (item.progress === 100 || item.progress === undefined)\n  const showCompanyIcon = !!(item.sharedWith && item?.sharedWith?.length > 0)\n\n  const ownerName = orgUser\n    ? `${orgUser.publicUserData.firstName} ${orgUser.publicUserData.lastName}`\n    : undefined\n\n  const removeAction = {\n    ...actions.remove,\n    onClick: (file: FileRowType) => {\n      return actions.remove.onClick(file).then(() => {\n        setSelected(prev => prev.filter(item => item.id !== file.id))\n      })\n    },\n  }\n\n  const mobileActions = [\n    actions.open,\n    actions.chat,\n    canShare ? actions.share : undefined,\n    shared ? undefined : removeAction,\n    actions.download,\n  ].filter(Boolean) as Actions<FileRowType>\n\n  const desktopActions = [\n    actions.open,\n    shared ? actions.chat : undefined,\n    canShare ? actions.share : undefined,\n    shared ? undefined : removeAction,\n    actions.download,\n  ].filter(Boolean) as Actions<FileRowType>\n\n  const onRemove = (item: FileRowType) => {\n    actions.remove.onClick(item)\n  }\n\n  return (\n    <HubTableRow\n      isPlaceholderData={isPlaceholderData}\n      onMouseEnter={() => setIsHover({ [item.id]: true })}\n      onMouseLeave={() => setIsHover({})}\n      selected={openMenu}\n      onRowClick={isFileStatusCompleted(item.status) ? () => actions.view.onClick(item) : undefined}\n      mobileActions={\n        <FilesListMobilesActions actions={mobileActions} item={item} onRemove={onRemove} />\n      }\n      columnsWidth={columnsWidth}\n      sx={\n        isMobile\n          ? {\n              \"& > div:first-of-type\": {\n                display: \"flex\",\n                flexDirection: \"column\",\n                flexGrow: 1,\n                width: \"calc(100% - 50px)\",\n              },\n            }\n          : {\n              gap: 0,\n            }\n      }\n      columns={[\n        {\n          node: isMobile ? (\n            <FilesListItemMobile\n              ownerName={ownerName}\n              shared={shared}\n              filterTerm={filterTerm}\n              missingMetaData={missingMetaData}\n              item={item}\n              selected={selected}\n              setSelected={setSelected}\n              showCompanyIcon={showCompanyIcon}\n            />\n          ) : (\n            <Checkbox\n              disabled={!isFileStatusCompleted(item.status)}\n              checked={!!selected.find(i => i.id === item.id)}\n              onClick={ev => ev.stopPropagation()}\n              onChange={(ev, checked) => {\n                setSelected(prev =>\n                  checked\n                    ? [...prev, { id: item.id, shared: shared ?? false }]\n                    : prev.filter(i => i.id !== item.id),\n                )\n              }}\n            />\n          ),\n        },\n        { node: <FileIcon extension={item.type} /> },\n        {\n          node: (\n            <Box\n              sx={{ width: \"100%\", display: \"flex\", height: \"100%\", alignItems: \"center\", pr: 4 }}\n            >\n              <EllipsisTooltip\n                disabled={!!document}\n                tooltipText={item.name}\n                typographyProps={{\n                  fontSize: 14,\n                  fontWeight: isMobile ? 700 : 400,\n                }}\n              >\n                <Highlighter\n                  autoEscape\n                  highlightStyle={{ color: theme.palette.primary.light }}\n                  highlightTag=\"span\"\n                  searchWords={[filterTerm]}\n                  textToHighlight={item.name}\n                />\n              </EllipsisTooltip>\n              {showCompanyIcon && !shared ? <ShareIcon shared sx={{ mx: 1 }} /> : null}\n            </Box>\n          ),\n        },\n        {\n          node: shared ? (\n            <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 1, pr: 2 }}>\n              <UserAvatar\n                isLoading={isLoading}\n                ownerName={ownerName}\n                imgUrl={orgUser?.publicUserData.imageUrl}\n                hasImage={orgUser?.publicUserData.hasImage}\n              />\n              {isLoading ? (\n                <Skeleton width={columnsWidth[3]} />\n              ) : (\n                <EllipsisTooltip tooltipText={ownerName ?? \"\"} typographyProps={{ fontSize: 14 }}>\n                  {ownerName}\n                </EllipsisTooltip>\n              )}\n            </Box>\n          ) : (\n            <>&nbsp;</>\n          ),\n        },\n        { text: getSizeAndUnit(item.size, item.status === \"error\") },\n        { text: formatTime(item.date) },\n        {\n          node: (\n            <FileStatusCell\n              onActionClick={action => {\n                if (action.id === \"download\") {\n                  setIsHover({})\n                }\n              }}\n              item={item}\n              rowIsHovered={isHover[item.id]}\n              actions={[...desktopActions]}\n              isOpenMenu={openMenu}\n              setIsOpenMenu={setOpenMenu}\n              onDelete={() => actions.remove.onClick(item)}\n            />\n          ),\n        },\n      ]}\n    />\n  )\n}\nexport { FilesListItem }\n"],"names":["FilesListItem","item","columnsWidth","actions","selected","setSelected","filterTerm","isPlaceholderData","shared","document","useHashParams","isMobile","useDeviceInfo","isHover","setIsHover","useState","openMenu","setOpenMenu","theme","useTheme","data","orgUser","isLoading","useClerkOrganizationMember","owner","canShare","useAccount","missingMetaData","includes","status","progress","undefined","showCompanyIcon","sharedWith","length","ownerName","publicUserData","firstName","lastName","removeAction","remove","onClick","file","then","prev","filter","id","mobileActions","open","chat","share","download","Boolean","desktopActions","onRemove","HubTableRow","onMouseEnter","onMouseLeave","onRowClick","isFileStatusCompleted","view","FilesListMobilesActions","sx","display","flexDirection","flexGrow","width","gap","columns","node","FilesListItemMobile","Checkbox","disabled","checked","find","i","ev","stopPropagation","onChange","FileIcon","extension","type","Box","height","alignItems","pr","EllipsisTooltip","tooltipText","name","typographyProps","fontSize","fontWeight","Highlighter","autoEscape","highlightStyle","color","palette","primary","light","highlightTag","searchWords","textToHighlight","ShareIcon","mx","UserAvatar","imgUrl","imageUrl","hasImage","Skeleton","text","getSizeAndUnit","size","formatTime","date","FileStatusCell","onActionClick","action","rowIsHovered","isOpenMenu","setIsOpenMenu","onDelete"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}