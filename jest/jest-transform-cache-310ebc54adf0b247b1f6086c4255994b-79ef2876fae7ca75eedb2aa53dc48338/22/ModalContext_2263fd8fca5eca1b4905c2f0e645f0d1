0c29827986a9fe5d5e51ae38fd5f9d7a
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    ModalProvider: function() {
        return ModalProvider;
    },
    useModal: function() {
        return useModal;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const ModalContext = /*#__PURE__*/ (0, _react.createContext)(null);
const ModalProvider = ({ children })=>{
    const [editFileNameData, setEditFileNameData] = (0, _react.useState)(undefined);
    const [editChatNameData, setEditChatNameData] = (0, _react.useState)(undefined);
    const [saveSearchData, setSaveSearchData] = (0, _react.useState)(undefined);
    const [deleteSearchData, setDeleteSearchData] = (0, _react.useState)(undefined);
    const [deleteChatData, setDeleteChatData] = (0, _react.useState)(undefined);
    const [watchlistData, setWatchlistData] = (0, _react.useState)(undefined);
    const [watchlistEditAutoFocus, setWatchlistEditAutoFocus] = (0, _react.useState)("name");
    const [deleteWatchlistData, setDeleteWatchlistData] = (0, _react.useState)(undefined);
    // Share flow
    const [shareNameSearchData, setShareNameSearchData] = (0, _react.useState)(undefined);
    const [shareInfoData, setShareInfoData] = (0, _react.useState)(undefined);
    const [shareChatData, setShareChatData] = (0, _react.useState)(undefined);
    const [followSearchData, setFollowSearchData] = (0, _react.useState)(undefined);
    const [unfollowSearchData, setUnfollowSearchData] = (0, _react.useState)(undefined);
    const [orderSearchesData, setOrderSearchesData] = (0, _react.useState)(false);
    const [briefData, setBriefData] = (0, _react.useState)(undefined);
    const [deleteFilesData, setDeleteFilesData] = (0, _react.useState)(undefined);
    const [selectFilesData, setSelectFilesData] = (0, _react.useState)(undefined);
    const [selectWatchlistData, setSelectWatchlistData] = (0, _react.useState)(undefined);
    const [chatFeedbackData, setChatFeedbackData] = (0, _react.useState)(undefined);
    const [unsubscribeBriefConfigData, setUnsubscribeBriefConfigData] = (0, _react.useState)(undefined);
    const [selectSourceData, setSelectSourceData] = (0, _react.useState)(undefined);
    const [showCustomColumns, setShowCustomColumns] = (0, _react.useState)(undefined);
    const [showOnboarding, setShowOnboarding] = (0, _react.useState)(undefined);
    const [showPlanComparison, setShowPlanComparison] = (0, _react.useState)(undefined);
    const [showLegal, setShowLegal] = (0, _react.useState)(undefined);
    const [planComparisonFeatureName, setPlanComparisonFeatureName] = (0, _react.useState)("");
    const [marketingAccepted, setMarketingAccepted] = (0, _react.useState)(undefined);
    const [termsAccepted, setTermsAccepted] = (0, _react.useState)(undefined);
    const [selectSource, setSelectSource] = (0, _react.useState)(undefined);
    const modals = {
        editFileNameModal: {
            isOpen: Boolean(editFileNameData),
            handleClose: ()=>setEditFileNameData(undefined),
            handleOpen: (data)=>setEditFileNameData(data),
            editFileNameData
        },
        editChatNameModal: {
            isOpen: Boolean(editChatNameData),
            handleClose: ()=>setEditChatNameData(undefined),
            handleOpen: (data)=>setEditChatNameData(data),
            editChatNameData
        },
        saveSearchModal: {
            isOpen: Boolean(saveSearchData),
            handleClose: ()=>setSaveSearchData(undefined),
            handleOpen: (search, onSuccess)=>setSaveSearchData({
                    search,
                    onSuccess
                }),
            saveSearchData
        },
        deleteSearchModal: {
            isOpen: Boolean(deleteSearchData),
            handleClose: ()=>setDeleteSearchData(undefined),
            handleOpen: (search)=>setDeleteSearchData(search),
            deleteSearchData
        },
        deleteChatModal: {
            isOpen: Boolean(deleteChatData),
            handleClose: ()=>setDeleteChatData(undefined),
            handleOpen: (chat)=>setDeleteChatData(chat),
            deleteChatData
        },
        watchlistModal: {
            isOpen: Boolean(watchlistData),
            handleClose: ()=>setWatchlistData(undefined),
            handleOpen: (watchlist, onSuccess, onError)=>setWatchlistData({
                    watchlist,
                    onSuccess,
                    onError
                }),
            watchlistData,
            watchlistEditAutoFocus: watchlistEditAutoFocus,
            setWatchlistEditAutoFocus
        },
        deleteWatchlistModal: {
            isOpen: Boolean(deleteWatchlistData),
            handleClose: ()=>setDeleteWatchlistData(undefined),
            handleOpen: (watchlist)=>setDeleteWatchlistData(watchlist),
            deleteWatchlistData: deleteWatchlistData
        },
        shareNameSearchModal: {
            isOpen: Boolean(shareNameSearchData),
            handleClose: ()=>setShareNameSearchData(undefined),
            handleOpen: (data, onSuccess)=>setShareNameSearchData({
                    data,
                    onSuccess
                }),
            shareNameSearchData
        },
        shareInfoModal: {
            isOpen: Boolean(shareInfoData),
            handleClose: ()=>setShareInfoData(undefined),
            handleOpen: (data)=>setShareInfoData({
                    data
                }),
            shareInfoData
        },
        shareModal: {
            isOpen: Boolean(shareChatData),
            handleClose: ()=>setShareChatData(undefined),
            handleOpen: (data)=>setShareChatData(data),
            shareChatData
        },
        followSearchModal: {
            isOpen: Boolean(followSearchData),
            handleClose: ()=>setFollowSearchData(undefined),
            handleOpen: (data)=>setFollowSearchData({
                    data
                }),
            followSearchData
        },
        unfollowSearchModal: {
            isOpen: Boolean(unfollowSearchData),
            handleClose: ()=>setUnfollowSearchData(undefined),
            handleOpen: (data)=>setUnfollowSearchData({
                    data
                }),
            unfollowSearchData
        },
        orderSearchesModal: {
            isOpen: Boolean(orderSearchesData),
            handleClose: ()=>setOrderSearchesData(false),
            handleOpen: ()=>setOrderSearchesData(true),
            orderSearchesData
        },
        createNewBriefModal: {
            isOpen: Boolean(briefData),
            handleClose: ()=>setBriefData(undefined),
            handleOpen: (props)=>setBriefData(props),
            briefData
        },
        deleteFilesModal: {
            isOpen: Boolean(deleteFilesData),
            handleClose: ()=>setDeleteFilesData(undefined),
            handleOpen: (props)=>setDeleteFilesData(props),
            deleteFilesData
        },
        chatFeedbackModal: {
            isOpen: Boolean(chatFeedbackData),
            handleClose: ()=>setChatFeedbackData(undefined),
            handleOpen: (props)=>setChatFeedbackData(props),
            chatFeedbackData
        },
        selectWatchlistModal: {
            isOpen: Boolean(selectWatchlistData),
            handleClose: ()=>setSelectWatchlistData(undefined),
            handleOpen: (props)=>setSelectWatchlistData(props),
            selectWatchlistModalData: selectWatchlistData
        },
        selectFilesModal: {
            isOpen: Boolean(selectFilesData),
            handleClose: ()=>setSelectFilesData(undefined),
            handleOpen: (props)=>setSelectFilesData(props),
            selectFilesData,
            setSelected: (prev)=>{
                if (typeof prev === "function") {
                    setSelectFilesData((prevSelectFilesData)=>{
                        if (!prevSelectFilesData) {
                            return prevSelectFilesData;
                        }
                        return _object_spread_props(_object_spread({}, prevSelectFilesData), {
                            selected: prev(prevSelectFilesData.selected)
                        });
                    });
                } else {
                    setSelectFilesData((prevSelectFilesData)=>{
                        if (!prevSelectFilesData) {
                            return prevSelectFilesData;
                        }
                        return _object_spread_props(_object_spread({}, prevSelectFilesData), {
                            selected: prev
                        });
                    });
                }
            }
        },
        unsubscribeBriefConfigModal: {
            isOpen: Boolean(unsubscribeBriefConfigData),
            handleClose: ()=>setUnsubscribeBriefConfigData(undefined),
            handleOpen: (briefConfig)=>setUnsubscribeBriefConfigData(briefConfig),
            unsubscribeBriefConfigData
        },
        onboardingModal: {
            isOpen: Boolean(showOnboarding),
            handleClose: ()=>{
                setShowOnboarding(false);
            },
            handleOpen: ()=>setShowOnboarding(true)
        },
        planComparisonModal: {
            isOpen: Boolean(showPlanComparison),
            handleClose: ()=>{
                setShowPlanComparison(false);
            },
            handleOpen: (featureName)=>{
                setPlanComparisonFeatureName(featureName ? featureName : "");
                setShowPlanComparison(true);
            },
            planComparisonFeatureName: planComparisonFeatureName
        },
        legalModal: {
            isOpen: Boolean(showLegal),
            handleClose: ()=>{
                setShowLegal(false);
            },
            handleOpen: (marketingAccepted, termsAccepted)=>{
                setMarketingAccepted(marketingAccepted);
                setTermsAccepted(termsAccepted);
                setShowLegal(true);
            },
            marketingAccepted,
            termsAccepted
        },
        selectSourceModal: {
            isOpen: Boolean(selectSource),
            handleClose: ()=>setSelectSource(false),
            handleOpen: (data)=>{
                setSelectSourceData(data);
                setSelectSource(true);
            },
            selectSourceData
        },
        customColumnsModal: {
            isOpen: Boolean(showCustomColumns),
            handleClose: ()=>setShowCustomColumns(false),
            handleOpen: ()=>setShowCustomColumns(true)
        }
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(ModalContext.Provider, {
        value: modals,
        children: children
    });
};
const useModal = ()=>{
    const context = (0, _react.useContext)(ModalContext);
    if (!context) {
        throw new Error("useModal must be used within a ModalProvider");
    }
    return context;
};

//# sourceMappingURL=data:application/json;base64,