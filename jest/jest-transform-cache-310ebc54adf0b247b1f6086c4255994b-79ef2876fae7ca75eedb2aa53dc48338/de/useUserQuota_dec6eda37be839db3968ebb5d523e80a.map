{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/common/hooks/src/lib/useUserQuota.ts"],"sourcesContent":["import axios from \"axios\"\nimport { UserDataQuota, UserDataQuotaSchema } from \"@rp/common/api-types\"\nimport { axiosClient } from \"@rp/react/axios-client\"\nimport { useQuery } from \"@tanstack/react-query\"\n\nconst getUserQuotas = async () => {\n  try {\n    const { data } = await axiosClient.get<unknown>(\"/profiles/me\")\n    const result = UserDataQuotaSchema.safeParse(data)\n\n    if (result.success) {\n      return result.data\n    }\n\n    // This can cause errors later in the application\n    // as we're assuming the data is correct when it's not\n    // This is just to prevent the application from\n    // crashing on loading bad data\n    return data as UserDataQuota\n  } catch (error) {\n    if (!axios.isAxiosError(error)) {\n      throw error\n    }\n\n    if (error.response) {\n      if (error.response.status === 401) {\n        return null\n      }\n    }\n    throw error\n  }\n}\n\nfunction useUserQuotas(userId: string | undefined, orgId?: string) {\n  return useQuery({\n    queryKey: [\"userdata-quota\", userId, orgId] as const,\n    queryFn: getUserQuotas,\n    refetchOnReconnect: true,\n    refetchOnWindowFocus: true,\n    refetchInterval: 60 * 1_000,\n    retry: 2,\n  })\n}\n\ntype UseUserQuotas = typeof useUserQuotas\n\nexport { useUserQuotas }\nexport type { UserDataQuota, UseUserQuotas }\n"],"names":["useUserQuotas","getUserQuotas","data","axiosClient","get","result","UserDataQuotaSchema","safeParse","success","error","axios","isAxiosError","response","status","userId","orgId","useQuery","queryKey","queryFn","refetchOnReconnect","refetchOnWindowFocus","refetchInterval","retry"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BA8CSA;;;eAAAA;;;8DA9CS;0BACiC;6BACvB;4BACH;;;;;;AAEzB,MAAMC,gBAAgB;IACpB,IAAI;QACF,MAAM,EAAEC,IAAI,EAAE,GAAG,MAAMC,wBAAW,CAACC,GAAG,CAAU;QAChD,MAAMC,SAASC,6BAAmB,CAACC,SAAS,CAACL;QAE7C,IAAIG,OAAOG,OAAO,EAAE;YAClB,OAAOH,OAAOH,IAAI;QACpB;QAEA,iDAAiD;QACjD,sDAAsD;QACtD,+CAA+C;QAC/C,+BAA+B;QAC/B,OAAOA;IACT,EAAE,OAAOO,OAAO;QACd,IAAI,CAACC,cAAK,CAACC,YAAY,CAACF,QAAQ;YAC9B,MAAMA;QACR;QAEA,IAAIA,MAAMG,QAAQ,EAAE;YAClB,IAAIH,MAAMG,QAAQ,CAACC,MAAM,KAAK,KAAK;gBACjC,OAAO;YACT;QACF;QACA,MAAMJ;IACR;AACF;AAEA,SAAST,cAAcc,MAA0B,EAAEC,KAAc;IAC/D,OAAOC,IAAAA,oBAAQ,EAAC;QACdC,UAAU;YAAC;YAAkBH;YAAQC;SAAM;QAC3CG,SAASjB;QACTkB,oBAAoB;QACpBC,sBAAsB;QACtBC,iBAAiB,KAAK;QACtBC,OAAO;IACT;AACF"}