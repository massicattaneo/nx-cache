914598d4e7ee0411cfc35be02eff8e36
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    FileStatusCell: function() {
        return FileStatusCell;
    },
    ProgressContent: function() {
        return ProgressContent;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _providers = require("@rp/react/common/providers");
const _basecomponents = require("@rp/react/web/common/base-components");
const _files = require("@rp/react/web/common/files");
const _providers1 = require("@rp/react/web/common/providers");
const _core = require("@rp/react/web/mui/core");
const _icons = require("@rp/react/web/mui/icons");
const _FileRowComponentsstyles = require("./FileRowComponents.styles");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function CompleteContent() {
    return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {});
}
function PendingContent() {
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_FileRowComponentsstyles.HintedTypography, {
        children: "Pending"
    });
}
function ProgressContent({ progress }) {
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
        sx: {
            display: "flex",
            alignItems: "center",
            height: 24
        },
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                sx: {
                    width: "100%",
                    mr: 1
                },
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.LinearProgress, {
                    variant: "determinate",
                    value: progress,
                    color: "success"
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                sx: {
                    minWidth: 35
                },
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                    variant: "body2",
                    children: `${Math.round(progress)}%`
                })
            })
        ]
    });
}
function AnalyzingContent() {
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_FileRowComponentsstyles.HintedTypography, {
        children: "Analyzing"
    });
}
function DoneContent() {
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_FileRowComponentsstyles.SuccessTypography, {
        children: "Done"
    });
}
function ErrorContent({ onDelete }) {
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
        sx: {
            justifyContent: "center",
            display: "flex",
            alignItems: "center",
            gap: "4px",
            height: 24
        },
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.RPTooltip, {
                disableInteractive: false,
                title: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                            children: "Something went wrong."
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                            children: "Try to upload the file again or"
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_providers1.ContactSupport, {})
                    ]
                }),
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.ReportProblem, {
                    color: "error"
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Button, {
                onClick: onDelete,
                children: "DELETE"
            })
        ]
    });
}
function ActionCell(props) {
    const { actions } = (0, _files.useFileActions)();
    const { hasEntitlement } = (0, _providers.useAccount)();
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
        children: [
            hasEntitlement("chat:file") && !props.shouldHideChatIcon ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.RPTooltip, {
                title: "Chat",
                placement: "top",
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.IconButton, {
                    sx: {
                        mr: 1
                    },
                    onClick: (ev)=>{
                        ev.stopPropagation();
                        actions.chat.onClick(props.item);
                    },
                    children: actions.chat.icon
                })
            }) : null,
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.ActionsMenu, {
                onActionClick: props.onActionClick,
                actions: props.actions,
                open: props.isOpenMenu,
                setOpen: props.setIsOpenMenu,
                item: props.item
            })
        ]
    });
}
function FileStatusCell(props) {
    var _item_status;
    let cellContent;
    const { item, rowIsHovered, onDelete, isMiniRow = false } = props;
    if (isMiniRow) {
        if (![
            "done",
            "completed"
        ].includes(item.status)) {
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.CircularProgress, {
                size: 18,
                sx: {
                    ml: 0.75
                }
            });
        }
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(ActionCell, _object_spread({}, props));
    }
    const shouldDisplayControls = rowIsHovered && item.status === "done" || item.status === "completed";
    switch((_item_status = item.status) === null || _item_status === void 0 ? void 0 : _item_status.toLowerCase()){
        case "completed":
            cellContent = shouldDisplayControls ? /*#__PURE__*/ (0, _jsxruntime.jsx)(ActionCell, _object_spread({}, props)) : /*#__PURE__*/ (0, _jsxruntime.jsx)(CompleteContent, {});
            break;
        case "pending":
            cellContent = /*#__PURE__*/ (0, _jsxruntime.jsx)(PendingContent, {});
            break;
        case "progress":
            cellContent = /*#__PURE__*/ (0, _jsxruntime.jsx)(ProgressContent, {
                progress: item.progress || 0
            });
            break;
        case "analyzing":
        case "processing":
            cellContent = /*#__PURE__*/ (0, _jsxruntime.jsx)(AnalyzingContent, {});
            break;
        case "done":
            cellContent = shouldDisplayControls ? /*#__PURE__*/ (0, _jsxruntime.jsx)(ActionCell, _object_spread({}, props)) : /*#__PURE__*/ (0, _jsxruntime.jsx)(DoneContent, {});
            break;
        default:
            cellContent = /*#__PURE__*/ (0, _jsxruntime.jsx)(ErrorContent, {
                onDelete: onDelete
            });
            break;
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
        textAlign: shouldDisplayControls ? "right" : "center",
        children: cellContent
    });
}

//# sourceMappingURL=data:application/json;base64,