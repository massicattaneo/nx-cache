c92d3d2a1dca8d4ba6163c84665ac8d4
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "WatchlistShareButton", {
    enumerable: true,
    get: function() {
        return WatchlistShareButton;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _hooks = require("@rp/react/common/hooks");
const _basecomponents = require("@rp/react/web/common/base-components");
const _core = require("@rp/react/web/mui/core");
const _useWatchlistsActions = require("../hooks/useWatchlistsActions");
const WatchlistShareButton = ({ watchlist })=>{
    var _actions_share_allowedAction, _actions_share, _actions_share_disabledAction, _actions_share1, _actions_share_disabledAction1, _actions_share2;
    const { data: orgUser } = (0, _hooks.useClerkOrganizationMember)(watchlist.ownerUserId);
    const actions = (0, _useWatchlistsActions.useWatchlistsActions)({
        organizationResource: orgUser
    });
    return !((_actions_share_allowedAction = (_actions_share = actions.share).allowedAction) === null || _actions_share_allowedAction === void 0 ? void 0 : _actions_share_allowedAction.call(_actions_share, watchlist)) && /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.RPTooltip, {
        disabledContent: (_actions_share_disabledAction = (_actions_share1 = actions.share).disabledAction) === null || _actions_share_disabledAction === void 0 ? void 0 : _actions_share_disabledAction.call(_actions_share1, watchlist),
        title: actions.share.label,
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.IconButton, {
            disabled: (_actions_share_disabledAction1 = (_actions_share2 = actions.share).disabledAction) === null || _actions_share_disabledAction1 === void 0 ? void 0 : _actions_share_disabledAction1.call(_actions_share2, watchlist),
            onClick: ()=>actions.share.onClick(watchlist),
            children: typeof actions.share.icon === "function" ? actions.share.icon(watchlist) : actions.share.icon
        })
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL3dhdGNobGlzdHMvc3JjL2xpYi9XYXRjaGxpc3RTaGFyZUJ1dHRvbi9XYXRjaGxpc3RTaGFyZUJ1dHRvbi50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgV2F0Y2hsaXN0IH0gZnJvbSBcIkBycC9jb21tb24vYXBpLXR5cGVzXCJcbmltcG9ydCB7IHVzZUNsZXJrT3JnYW5pemF0aW9uTWVtYmVyIH0gZnJvbSBcIkBycC9yZWFjdC9jb21tb24vaG9va3NcIlxuaW1wb3J0IHsgUlBUb29sdGlwIH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvY29tbW9uL2Jhc2UtY29tcG9uZW50c1wiXG5pbXBvcnQgeyBJY29uQnV0dG9uIH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvbXVpL2NvcmVcIlxuaW1wb3J0IHsgdXNlV2F0Y2hsaXN0c0FjdGlvbnMgfSBmcm9tIFwiLi4vaG9va3MvdXNlV2F0Y2hsaXN0c0FjdGlvbnNcIlxuXG50eXBlIFByb3BzID0ge1xuICB3YXRjaGxpc3Q6IFdhdGNobGlzdFxufVxuXG5leHBvcnQgY29uc3QgV2F0Y2hsaXN0U2hhcmVCdXR0b24gPSAoeyB3YXRjaGxpc3QgfTogUHJvcHMpID0+IHtcbiAgY29uc3QgeyBkYXRhOiBvcmdVc2VyIH0gPSB1c2VDbGVya09yZ2FuaXphdGlvbk1lbWJlcih3YXRjaGxpc3Qub3duZXJVc2VySWQpXG4gIGNvbnN0IGFjdGlvbnMgPSB1c2VXYXRjaGxpc3RzQWN0aW9ucyh7XG4gICAgb3JnYW5pemF0aW9uUmVzb3VyY2U6IG9yZ1VzZXIsXG4gIH0pXG4gIHJldHVybiAoXG4gICAgIWFjdGlvbnMuc2hhcmUuYWxsb3dlZEFjdGlvbj8uKHdhdGNobGlzdCkgJiYgKFxuICAgICAgPFJQVG9vbHRpcFxuICAgICAgICBkaXNhYmxlZENvbnRlbnQ9e2FjdGlvbnMuc2hhcmUuZGlzYWJsZWRBY3Rpb24/Lih3YXRjaGxpc3QpfVxuICAgICAgICB0aXRsZT17YWN0aW9ucy5zaGFyZS5sYWJlbH1cbiAgICAgID5cbiAgICAgICAgPEljb25CdXR0b25cbiAgICAgICAgICBkaXNhYmxlZD17YWN0aW9ucy5zaGFyZS5kaXNhYmxlZEFjdGlvbj8uKHdhdGNobGlzdCl9XG4gICAgICAgICAgb25DbGljaz17KCkgPT4gYWN0aW9ucy5zaGFyZS5vbkNsaWNrKHdhdGNobGlzdCl9XG4gICAgICAgID5cbiAgICAgICAgICB7dHlwZW9mIGFjdGlvbnMuc2hhcmUuaWNvbiA9PT0gXCJmdW5jdGlvblwiXG4gICAgICAgICAgICA/IGFjdGlvbnMuc2hhcmUuaWNvbih3YXRjaGxpc3QpXG4gICAgICAgICAgICA6IGFjdGlvbnMuc2hhcmUuaWNvbn1cbiAgICAgICAgPC9JY29uQnV0dG9uPlxuICAgICAgPC9SUFRvb2x0aXA+XG4gICAgKVxuICApXG59XG4iXSwibmFtZXMiOlsiV2F0Y2hsaXN0U2hhcmVCdXR0b24iLCJ3YXRjaGxpc3QiLCJhY3Rpb25zIiwiZGF0YSIsIm9yZ1VzZXIiLCJ1c2VDbGVya09yZ2FuaXphdGlvbk1lbWJlciIsIm93bmVyVXNlcklkIiwidXNlV2F0Y2hsaXN0c0FjdGlvbnMiLCJvcmdhbml6YXRpb25SZXNvdXJjZSIsInNoYXJlIiwiYWxsb3dlZEFjdGlvbiIsIlJQVG9vbHRpcCIsImRpc2FibGVkQ29udGVudCIsImRpc2FibGVkQWN0aW9uIiwidGl0bGUiLCJsYWJlbCIsIkljb25CdXR0b24iLCJkaXNhYmxlZCIsIm9uQ2xpY2siLCJpY29uIl0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkFVYUE7OztlQUFBQTs7Ozt1QkFUOEI7Z0NBQ2pCO3NCQUNDO3NDQUNVO0FBTTlCLE1BQU1BLHVCQUF1QixDQUFDLEVBQUVDLFNBQVMsRUFBUztRQU1wREMsOEJBQUFBLGdCQUVvQkEsK0JBQUFBLGlCQUlMQSxnQ0FBQUE7SUFYbEIsTUFBTSxFQUFFQyxNQUFNQyxPQUFPLEVBQUUsR0FBR0MsSUFBQUEsaUNBQTBCLEVBQUNKLFVBQVVLLFdBQVc7SUFDMUUsTUFBTUosVUFBVUssSUFBQUEsMENBQW9CLEVBQUM7UUFDbkNDLHNCQUFzQko7SUFDeEI7SUFDQSxPQUNFLEdBQUNGLCtCQUFBQSxDQUFBQSxpQkFBQUEsUUFBUU8sS0FBSyxFQUFDQyxhQUFhLGNBQTNCUixtREFBQUEsa0NBQUFBLGdCQUE4QkQsNkJBQzdCLHFCQUFDVSx5QkFBUztRQUNSQyxlQUFlLEdBQUVWLGdDQUFBQSxDQUFBQSxrQkFBQUEsUUFBUU8sS0FBSyxFQUFDSSxjQUFjLGNBQTVCWCxvREFBQUEsbUNBQUFBLGlCQUErQkQ7UUFDaERhLE9BQU9aLFFBQVFPLEtBQUssQ0FBQ00sS0FBSztrQkFFMUIsY0FBQSxxQkFBQ0MsZ0JBQVU7WUFDVEMsUUFBUSxHQUFFZixpQ0FBQUEsQ0FBQUEsa0JBQUFBLFFBQVFPLEtBQUssRUFBQ0ksY0FBYyxjQUE1QlgscURBQUFBLG9DQUFBQSxpQkFBK0JEO1lBQ3pDaUIsU0FBUyxJQUFNaEIsUUFBUU8sS0FBSyxDQUFDUyxPQUFPLENBQUNqQjtzQkFFcEMsT0FBT0MsUUFBUU8sS0FBSyxDQUFDVSxJQUFJLEtBQUssYUFDM0JqQixRQUFRTyxLQUFLLENBQUNVLElBQUksQ0FBQ2xCLGFBQ25CQyxRQUFRTyxLQUFLLENBQUNVLElBQUk7OztBQUtoQyJ9