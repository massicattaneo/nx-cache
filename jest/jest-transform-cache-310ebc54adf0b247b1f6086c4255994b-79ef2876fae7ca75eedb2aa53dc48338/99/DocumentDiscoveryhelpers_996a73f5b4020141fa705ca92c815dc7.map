{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/discovery-sidebar/src/hooks/DocumentDiscovery.helpers.tsx"],"sourcesContent":["import { useEffect, useMemo, useState } from \"react\"\nimport { CqsCategories, CqsItem } from \"@rp/common/api-types\"\nimport { RpqlFilter } from \"@rp/common/api-types\"\nimport { useEnhancedDocument } from \"@rp/react/common/rpjson\"\nimport { Appearance, RpJsonDocument } from \"@rp/react/rpjson/types\"\nimport { useCqsByIdsContext } from \"@rp/react/tanstack-api/cqs-by-ids\"\nimport { getExpressionIds } from \"@rp/react/tanstack-api/user-data-queries\"\nimport { useEntitiesFromWatchlists } from \"@rp/react/tanstack-api/watchlist\"\nimport { modifyDiscoveryPanelData } from \"./useDiscoveryPanelPreview.helpers\"\n\ntype Relationship = \"result\" | \"direct\" | \"indirect\"\n\nconst getDocumentIds = (rpjsonDocument: RpJsonDocument | undefined) => {\n  const {\n    analytics: { entities = [], events = [] },\n  } = rpjsonDocument || { analytics: {} }\n\n  const documentIds: Record<string, { queryType: string; key: string }> = {}\n\n  for (const event of events) {\n    const key = `${event.topic ?? \"\"},${event.group ?? \"\"},${event.type ?? \"\"},${\n      event.sub_type ?? \"\"\n    },`\n    if (!documentIds[key]) documentIds[key] = { queryType: \"rp_topic\", key }\n  }\n\n  for (const entity of entities) {\n    if (entity.entity_detection_type !== \"direct\") continue\n    const key = entity.rp_entity_id\n    if (!documentIds[key]) documentIds[key] = { queryType: \"entity\", key }\n  }\n  return Object.values(documentIds)\n}\n\nconst getRelationship = (\n  id: string,\n  expression?: RpqlFilter,\n  entitiesInWatchlists?: Array<string>,\n): Relationship => {\n  if (!expression || entitiesInWatchlists === undefined) {\n    return \"result\"\n  }\n\n  if (getExpressionIds(expression).some(entity => entity === id)) {\n    return \"direct\"\n  }\n\n  if (entitiesInWatchlists?.some(entity => entity === id)) {\n    return \"indirect\"\n  }\n\n  return \"result\"\n}\n\nconst reduceAppearances = (appearances: Array<Appearance>) => {\n  // Several entities could be in the same sentence and paragraph coordinates\n  // For this purpose we would only need one copy of each\n\n  const uniqueAppearances: Record<string, Appearance> = {}\n\n  for (const appearance of appearances) {\n    if (uniqueAppearances[`${appearance.pnum}-${appearance.snum}`] === undefined) {\n      uniqueAppearances[`${appearance.pnum}-${appearance.snum}`] = appearance\n    }\n  }\n\n  return Object.values(uniqueAppearances)\n}\n\nconst useAppereances = (filter: CqsItem, rpjsonDocument?: RpJsonDocument) => {\n  const { stats } = useEnhancedDocument(rpjsonDocument)\n  return reduceAppearances(stats.entities[filter.key].appearances)\n}\n\nconst useDocumentAnalytics = (rpjsonDocument?: RpJsonDocument, expression?: RpqlFilter) => {\n  const docIds = useMemo(() => getDocumentIds(rpjsonDocument), [rpjsonDocument])\n  const [isLoading, setIsLoading] = useState(true)\n  const [analytics, setAnalytics] = useState<CqsCategories>({})\n  const { ids, addByIds } = useCqsByIdsContext()\n  const { stats } = useEnhancedDocument(rpjsonDocument)\n  const entitiesInWatchlists = useEntitiesFromWatchlists(expression)\n\n  useEffect(() => {\n    addByIds(docIds)\n  }, [addByIds, docIds])\n\n  useEffect(() => {\n    if (rpjsonDocument && docIds.filter(item => ids[item.key]?.isLoading ?? true).length === 0) {\n      setIsLoading(false)\n    }\n  }, [ids, docIds, rpjsonDocument])\n\n  useEffect(() => {\n    const mapped = docIds.map(item => {\n      if (item.queryType === \"entity\") {\n        return {\n          ...ids[item.key]?.data,\n          queryRelationship: getRelationship(item.key, expression, entitiesInWatchlists),\n          volume: stats.entities[item.key]\n            ? reduceAppearances(stats.entities[item.key].appearances).length\n            : 0,\n        }\n      }\n      return {\n        ...ids[item.key]?.data,\n        category: \"Topics\",\n        queryRelationship: getRelationship(item.key, expression, entitiesInWatchlists),\n        volume: stats.entities[item.key]\n          ? reduceAppearances(stats.entities[item.key].appearances).length\n          : 0,\n      }\n    })\n\n    const ordered = mapped.sort((a, b) => b.volume - a.volume)\n\n    const grouped = ordered\n      .filter(item => item.key)\n      .reduce((acc: CqsCategories, item): CqsCategories => {\n        if (!item.category) return acc\n        const id = item.category.toLowerCase()\n        return { ...acc, [id]: [...(acc[id] || []), item] }\n      }, {})\n\n    const modifiedGroups = modifyDiscoveryPanelData(grouped)\n\n    setAnalytics(modifiedGroups)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [docIds, ids, expression, stats])\n\n  return { analytics, isLoading }\n}\n\nconst findEntityInAnalytics = (analytics: CqsCategories, entityId: string) => {\n  return Object.values(analytics)\n    .flat()\n    .find(entity => entityId === entity.key)\n}\n\nexport { getRelationship, useDocumentAnalytics, findEntityInAnalytics, useAppereances }\n"],"names":["findEntityInAnalytics","getRelationship","useAppereances","useDocumentAnalytics","getDocumentIds","rpjsonDocument","analytics","entities","events","documentIds","event","key","topic","group","type","sub_type","queryType","entity","entity_detection_type","rp_entity_id","Object","values","id","expression","entitiesInWatchlists","undefined","getExpressionIds","some","reduceAppearances","appearances","uniqueAppearances","appearance","pnum","snum","filter","stats","useEnhancedDocument","docIds","useMemo","isLoading","setIsLoading","useState","setAnalytics","ids","addByIds","useCqsByIdsContext","useEntitiesFromWatchlists","useEffect","item","length","mapped","map","data","queryRelationship","volume","category","ordered","sort","a","b","grouped","reduce","acc","toLowerCase","modifiedGroups","modifyDiscoveryPanelData","entityId","flat","find"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;;;;;;;;IA0IgDA,qBAAqB;eAArBA;;IAAvCC,eAAe;eAAfA;;IAA8DC,cAAc;eAAdA;;IAA7CC,oBAAoB;eAApBA;;;uBA1ImB;wBAGT;0BAED;iCACF;2BACS;iDACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIzC,MAAMC,iBAAiB,CAACC;IACtB,MAAM,EACJC,WAAW,EAAEC,WAAW,EAAE,EAAEC,SAAS,EAAE,EAAE,EAC1C,GAAGH,kBAAkB;QAAEC,WAAW,CAAC;IAAE;IAEtC,MAAMG,cAAkE,CAAC;IAEzE,KAAK,MAAMC,SAASF,OAAQ;YACXE,cAAqBA,cAAqBA,aACvDA;QADF,MAAMC,MAAM,CAAC,EAAED,CAAAA,eAAAA,MAAME,KAAK,cAAXF,0BAAAA,eAAe,GAAG,CAAC,EAAEA,CAAAA,eAAAA,MAAMG,KAAK,cAAXH,0BAAAA,eAAe,GAAG,CAAC,EAAEA,CAAAA,cAAAA,MAAMI,IAAI,cAAVJ,yBAAAA,cAAc,GAAG,CAAC,EACzEA,CAAAA,kBAAAA,MAAMK,QAAQ,cAAdL,6BAAAA,kBAAkB,GACnB,CAAC,CAAC;QACH,IAAI,CAACD,WAAW,CAACE,IAAI,EAAEF,WAAW,CAACE,IAAI,GAAG;YAAEK,WAAW;YAAYL;QAAI;IACzE;IAEA,KAAK,MAAMM,UAAUV,SAAU;QAC7B,IAAIU,OAAOC,qBAAqB,KAAK,UAAU;QAC/C,MAAMP,MAAMM,OAAOE,YAAY;QAC/B,IAAI,CAACV,WAAW,CAACE,IAAI,EAAEF,WAAW,CAACE,IAAI,GAAG;YAAEK,WAAW;YAAUL;QAAI;IACvE;IACA,OAAOS,OAAOC,MAAM,CAACZ;AACvB;AAEA,MAAMR,kBAAkB,CACtBqB,IACAC,YACAC;IAEA,IAAI,CAACD,cAAcC,yBAAyBC,WAAW;QACrD,OAAO;IACT;IAEA,IAAIC,IAAAA,iCAAgB,EAACH,YAAYI,IAAI,CAACV,CAAAA,SAAUA,WAAWK,KAAK;QAC9D,OAAO;IACT;IAEA,IAAIE,iCAAAA,2CAAAA,qBAAsBG,IAAI,CAACV,CAAAA,SAAUA,WAAWK,KAAK;QACvD,OAAO;IACT;IAEA,OAAO;AACT;AAEA,MAAMM,oBAAoB,CAACC;IACzB,2EAA2E;IAC3E,uDAAuD;IAEvD,MAAMC,oBAAgD,CAAC;IAEvD,KAAK,MAAMC,cAAcF,YAAa;QACpC,IAAIC,iBAAiB,CAAC,CAAC,EAAEC,WAAWC,IAAI,CAAC,CAAC,EAAED,WAAWE,IAAI,CAAC,CAAC,CAAC,KAAKR,WAAW;YAC5EK,iBAAiB,CAAC,CAAC,EAAEC,WAAWC,IAAI,CAAC,CAAC,EAAED,WAAWE,IAAI,CAAC,CAAC,CAAC,GAAGF;QAC/D;IACF;IAEA,OAAOX,OAAOC,MAAM,CAACS;AACvB;AAEA,MAAM5B,iBAAiB,CAACgC,QAAiB7B;IACvC,MAAM,EAAE8B,KAAK,EAAE,GAAGC,IAAAA,2BAAmB,EAAC/B;IACtC,OAAOuB,kBAAkBO,MAAM5B,QAAQ,CAAC2B,OAAOvB,GAAG,CAAC,CAACkB,WAAW;AACjE;AAEA,MAAM1B,uBAAuB,CAACE,gBAAiCkB;IAC7D,MAAMc,SAASC,IAAAA,cAAO,EAAC,IAAMlC,eAAeC,iBAAiB;QAACA;KAAe;IAC7E,MAAM,CAACkC,WAAWC,aAAa,GAAGC,IAAAA,eAAQ,EAAC;IAC3C,MAAM,CAACnC,WAAWoC,aAAa,GAAGD,IAAAA,eAAQ,EAAgB,CAAC;IAC3D,MAAM,EAAEE,GAAG,EAAEC,QAAQ,EAAE,GAAGC,IAAAA,4BAAkB;IAC5C,MAAM,EAAEV,KAAK,EAAE,GAAGC,IAAAA,2BAAmB,EAAC/B;IACtC,MAAMmB,uBAAuBsB,IAAAA,oCAAyB,EAACvB;IAEvDwB,IAAAA,gBAAS,EAAC;QACRH,SAASP;IACX,GAAG;QAACO;QAAUP;KAAO;IAErBU,IAAAA,gBAAS,EAAC;QACR,IAAI1C,kBAAkBgC,OAAOH,MAAM,CAACc,CAAAA;gBAAQL;gBAAAA;mBAAAA,CAAAA,2BAAAA,gBAAAA,GAAG,CAACK,KAAKrC,GAAG,CAAC,cAAbgC,oCAAAA,cAAeJ,SAAS,cAAxBI,qCAAAA,0BAA4B;QAAG,GAAGM,MAAM,KAAK,GAAG;YAC1FT,aAAa;QACf;IACF,GAAG;QAACG;QAAKN;QAAQhC;KAAe;IAEhC0C,IAAAA,gBAAS,EAAC;QACR,MAAMG,SAASb,OAAOc,GAAG,CAACH,CAAAA;gBAWnBL;YAVL,IAAIK,KAAKhC,SAAS,KAAK,UAAU;oBAE1B2B;gBADL,OAAO,yCACFA,iBAAAA,GAAG,CAACK,KAAKrC,GAAG,CAAC,cAAbgC,qCAAAA,eAAeS,IAAI;oBACtBC,mBAAmBpD,gBAAgB+C,KAAKrC,GAAG,EAAEY,YAAYC;oBACzD8B,QAAQnB,MAAM5B,QAAQ,CAACyC,KAAKrC,GAAG,CAAC,GAC5BiB,kBAAkBO,MAAM5B,QAAQ,CAACyC,KAAKrC,GAAG,CAAC,CAACkB,WAAW,EAAEoB,MAAM,GAC9D;;YAER;YACA,OAAO,yCACFN,gBAAAA,GAAG,CAACK,KAAKrC,GAAG,CAAC,cAAbgC,oCAAAA,cAAeS,IAAI;gBACtBG,UAAU;gBACVF,mBAAmBpD,gBAAgB+C,KAAKrC,GAAG,EAAEY,YAAYC;gBACzD8B,QAAQnB,MAAM5B,QAAQ,CAACyC,KAAKrC,GAAG,CAAC,GAC5BiB,kBAAkBO,MAAM5B,QAAQ,CAACyC,KAAKrC,GAAG,CAAC,CAACkB,WAAW,EAAEoB,MAAM,GAC9D;;QAER;QAEA,MAAMO,UAAUN,OAAOO,IAAI,CAAC,CAACC,GAAGC,IAAMA,EAAEL,MAAM,GAAGI,EAAEJ,MAAM;QAEzD,MAAMM,UAAUJ,QACbtB,MAAM,CAACc,CAAAA,OAAQA,KAAKrC,GAAG,EACvBkD,MAAM,CAAC,CAACC,KAAoBd;YAC3B,IAAI,CAACA,KAAKO,QAAQ,EAAE,OAAOO;YAC3B,MAAMxC,KAAK0B,KAAKO,QAAQ,CAACQ,WAAW;YACpC,OAAO,wCAAKD;gBAAK,CAACxC,GAAG,EAAE;uBAAKwC,GAAG,CAACxC,GAAG,IAAI,EAAE;oBAAG0B;iBAAK;;QACnD,GAAG,CAAC;QAEN,MAAMgB,iBAAiBC,IAAAA,yDAAwB,EAACL;QAEhDlB,aAAasB;IACb,uDAAuD;IACzD,GAAG;QAAC3B;QAAQM;QAAKpB;QAAYY;KAAM;IAEnC,OAAO;QAAE7B;QAAWiC;IAAU;AAChC;AAEA,MAAMvC,wBAAwB,CAACM,WAA0B4D;IACvD,OAAO9C,OAAOC,MAAM,CAACf,WAClB6D,IAAI,GACJC,IAAI,CAACnD,CAAAA,SAAUiD,aAAajD,OAAON,GAAG;AAC3C"}