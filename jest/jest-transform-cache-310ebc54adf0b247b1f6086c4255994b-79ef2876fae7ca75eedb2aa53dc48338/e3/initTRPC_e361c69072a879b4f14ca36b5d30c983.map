{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/node_modules/@trpc/server/dist/unstable-core-do-not-import/initTRPC.js"],"sourcesContent":["'use strict';\n\nvar createProxy = require('./createProxy.js');\nvar formatter = require('./error/formatter.js');\nvar middleware = require('./middleware.js');\nvar procedureBuilder = require('./procedureBuilder.js');\nvar rootConfig = require('./rootConfig.js');\nvar router = require('./router.js');\nvar transformer = require('./transformer.js');\n\nclass TRPCBuilder {\n    /**\n   * Add a context shape as a generic to the root object\n   * @link https://trpc.io/docs/v11/server/context\n   */ context() {\n        return new TRPCBuilder();\n    }\n    /**\n   * Add a meta shape as a generic to the root object\n   * @link https://trpc.io/docs/v11/quickstart\n   */ meta() {\n        return new TRPCBuilder();\n    }\n    /**\n   * Create the root object\n   * @link https://trpc.io/docs/v11/server/routers#initialize-trpc\n   */ create(opts) {\n        const config = {\n            transformer: transformer.getDataTransformer(opts?.transformer ?? transformer.defaultTransformer),\n            isDev: opts?.isDev ?? // eslint-disable-next-line @typescript-eslint/dot-notation\n            globalThis.process?.env['NODE_ENV'] !== 'production',\n            allowOutsideOfServer: opts?.allowOutsideOfServer ?? false,\n            errorFormatter: opts?.errorFormatter ?? formatter.defaultFormatter,\n            isServer: opts?.isServer ?? rootConfig.isServerDefault,\n            /**\n       * These are just types, they can't be used at runtime\n       * @internal\n       */ $types: createProxy.createFlatProxy((key)=>{\n                throw new Error(`Tried to access \"$types.${key}\" which is not available at runtime`);\n            })\n        };\n        {\n            // Server check\n            const isServer = opts?.isServer ?? rootConfig.isServerDefault;\n            if (!isServer && opts?.allowOutsideOfServer !== true) {\n                throw new Error(`You're trying to use @trpc/server in a non-server environment. This is not supported by default.`);\n            }\n        }\n        return {\n            /**\n       * Your router config\n       * @internal\n       */ _config: config,\n            /**\n       * Builder object for creating procedures\n       * @link https://trpc.io/docs/v11/server/procedures\n       */ procedure: procedureBuilder.createBuilder({\n                meta: opts?.defaultMeta\n            }),\n            /**\n       * Create reusable middlewares\n       * @link https://trpc.io/docs/v11/server/middlewares\n       */ middleware: middleware.createMiddlewareFactory(),\n            /**\n       * Create a router\n       * @link https://trpc.io/docs/v11/server/routers\n       */ router: router.createRouterFactory(config),\n            /**\n       * Merge Routers\n       * @link https://trpc.io/docs/v11/server/merging-routers\n       */ mergeRouters: router.mergeRouters,\n            /**\n       * Create a server-side caller for a router\n       * @link https://trpc.io/docs/v11/server/server-side-calls\n       */ createCallerFactory: router.createCallerFactory()\n        };\n    }\n}\n/**\n * Builder to initialize the tRPC root object - use this exactly once per backend\n * @link https://trpc.io/docs/v11/quickstart\n */ const initTRPC = new TRPCBuilder();\n\nexports.initTRPC = initTRPC;\n"],"names":["createProxy","require","formatter","middleware","procedureBuilder","rootConfig","router","transformer","TRPCBuilder","context","meta","create","opts","globalThis","config","getDataTransformer","defaultTransformer","isDev","process","env","allowOutsideOfServer","errorFormatter","defaultFormatter","isServer","isServerDefault","$types","createFlatProxy","key","Error","_config","procedure","createBuilder","defaultMeta","createMiddlewareFactory","createRouterFactory","mergeRouters","createCallerFactory","initTRPC","exports"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA;AAEA,IAAIA,cAAcC,QAAQ;AAC1B,IAAIC,YAAYD,QAAQ;AACxB,IAAIE,aAAaF,QAAQ;AACzB,IAAIG,mBAAmBH,QAAQ;AAC/B,IAAII,aAAaJ,QAAQ;AACzB,IAAIK,SAASL,QAAQ;AACrB,IAAIM,cAAcN,QAAQ;AAE1B,MAAMO;IACF;;;GAGD,GAAGC,UAAU;QACR,OAAO,IAAID;IACf;IACA;;;GAGD,GAAGE,OAAO;QACL,OAAO,IAAIF;IACf;IACA;;;GAGD,GAAGG,OAAOC,IAAI,EAAE;YAGe,2DAA2D;QACjFC;YAF4CD,mBACrCA,aAEeA,4BACNA,sBACNA;QANd,MAAME,SAAS;YACXP,aAAaA,YAAYQ,kBAAkB,CAACH,CAAAA,oBAAAA,iBAAAA,2BAAAA,KAAML,WAAW,cAAjBK,+BAAAA,oBAAqBL,YAAYS,kBAAkB;YAC/FC,OAAOL,CAAAA,cAAAA,iBAAAA,2BAAAA,KAAMK,KAAK,cAAXL,yBAAAA,cACPC,EAAAA,sBAAAA,WAAWK,OAAO,cAAlBL,0CAAAA,oBAAoBM,GAAG,CAAC,WAAW,MAAK;YACxCC,sBAAsBR,CAAAA,6BAAAA,iBAAAA,2BAAAA,KAAMQ,oBAAoB,cAA1BR,wCAAAA,6BAA8B;YACpDS,gBAAgBT,CAAAA,uBAAAA,iBAAAA,2BAAAA,KAAMS,cAAc,cAApBT,kCAAAA,uBAAwBV,UAAUoB,gBAAgB;YAClEC,UAAUX,CAAAA,iBAAAA,iBAAAA,2BAAAA,KAAMW,QAAQ,cAAdX,4BAAAA,iBAAkBP,WAAWmB,eAAe;YACtD;;;OAGL,GAAGC,QAAQzB,YAAY0B,eAAe,CAAC,CAACC;gBAC/B,MAAM,IAAIC,MAAM,CAAC,wBAAwB,EAAED,IAAI,mCAAmC,CAAC;YACvF;QACJ;QACA;gBAEqBf;YADjB,eAAe;YACf,MAAMW,WAAWX,CAAAA,kBAAAA,iBAAAA,2BAAAA,KAAMW,QAAQ,cAAdX,6BAAAA,kBAAkBP,WAAWmB,eAAe;YAC7D,IAAI,CAACD,YAAYX,CAAAA,iBAAAA,2BAAAA,KAAMQ,oBAAoB,MAAK,MAAM;gBAClD,MAAM,IAAIQ,MAAM,CAAC,gGAAgG,CAAC;YACtH;QACJ;QACA,OAAO;YACH;;;OAGL,GAAGC,SAASf;YACP;;;OAGL,GAAGgB,WAAW1B,iBAAiB2B,aAAa,CAAC;gBACpCrB,IAAI,EAAEE,iBAAAA,2BAAAA,KAAMoB,WAAW;YAC3B;YACA;;;OAGL,GAAG7B,YAAYA,WAAW8B,uBAAuB;YAC5C;;;OAGL,GAAG3B,QAAQA,OAAO4B,mBAAmB,CAACpB;YACjC;;;OAGL,GAAGqB,cAAc7B,OAAO6B,YAAY;YAC/B;;;OAGL,GAAGC,qBAAqB9B,OAAO8B,mBAAmB;QACjD;IACJ;AACJ;AACA;;;CAGC,GAAG,MAAMC,WAAW,IAAI7B;AAEzB8B,QAAQD,QAAQ,GAAGA"}