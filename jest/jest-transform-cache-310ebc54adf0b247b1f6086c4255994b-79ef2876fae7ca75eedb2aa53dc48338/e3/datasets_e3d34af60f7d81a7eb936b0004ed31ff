12e4d0bf5c65103187134baf43610bb4
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    canDownloadCSV: function() {
        return canDownloadCSV;
    },
    chatDatasets: function() {
        return chatDatasets;
    },
    isDatasetScope: function() {
        return isDatasetScope;
    },
    promptFilterChatDatasets: function() {
        return promptFilterChatDatasets;
    },
    scopesOrderedByLabel: function() {
        return scopesOrderedByLabel;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _i18next = require("i18next");
const _assets = require("@rp/react/common/assets");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const datasets = {
    earnings_calls: {
        label: (0, _i18next.t)("chatPage.datasets.earnings"),
        description: (0, _i18next.t)("chatPage.datasets.earningsDescription"),
        handle: "earningscalls",
        icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_assets.Earnings, {}),
        id: "earnings_calls",
        entitlements: [
            "content:quartr_transcripts"
        ],
        betaLabel: false,
        isPromptFilter: true,
        featureFlag: "enableSourceEarningsCalls",
        isFollowUpCompatible: true
    },
    news: {
        label: (0, _i18next.t)("chatPage.datasets.news"),
        icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_assets.News, {}),
        description: (0, _i18next.t)("chatPage.datasets.newsDescription"),
        handle: "news",
        id: "news",
        betaLabel: false,
        isPromptFilter: true,
        isFollowUpCompatible: true,
        entitlements: [
            "chat"
        ]
    },
    filings: {
        label: (0, _i18next.t)("chatPage.datasets.filings"),
        icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_assets.RegulatoryFillings, {}),
        description: (0, _i18next.t)("chatPage.datasets.filingsDescription"),
        handle: "filings",
        id: "filings",
        entitlements: [
            "content:sec_filings"
        ],
        betaLabel: true,
        isPromptFilter: true,
        featureFlag: "enableSourceRegulatoryFilings",
        isFollowUpCompatible: true
    },
    files: {
        label: (0, _i18next.t)("chatPage.datasets.files"),
        icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_assets.Files, {}),
        description: (0, _i18next.t)("chatPage.datasets.filesDescription"),
        handle: "files",
        id: "files",
        entitlements: [
            "chat:file"
        ],
        betaLabel: false,
        isPromptFilter: false,
        featureFlag: "enableSourceFiles",
        isFollowUpCompatible: true
    },
    "job-analytics": {
        label: (0, _i18next.t)("chatPage.datasets.jobAnalytics"),
        icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_assets.JobAnalytics, {}),
        description: (0, _i18next.t)("chatPage.datasets.jobsAnalyticsDescription"),
        handle: "jobs",
        id: "job-analytics",
        entitlements: [
            "chat:jobs"
        ],
        betaLabel: true,
        isPromptFilter: true,
        featureFlag: "enableSourceJobAnalytics",
        isFollowUpCompatible: false,
        toRemove: true
    },
    price: {
        label: (0, _i18next.t)("chatPage.datasets.pricing"),
        icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_assets.Pricing, {}),
        description: (0, _i18next.t)("chatPage.datasets.pricingDescription"),
        handle: "pricing",
        id: "price",
        entitlements: [
            "chat:pricing"
        ],
        betaLabel: true,
        isPromptFilter: true,
        featureFlag: "enableSourcePricingData",
        isFollowUpCompatible: false,
        toRemove: true
    },
    "sentiment-attention": {
        label: (0, _i18next.t)("chatPage.datasets.sentiment"),
        icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_assets.Sentiment, {}),
        description: (0, _i18next.t)("chatPage.datasets.sentimentDescription"),
        handle: "sentiment",
        id: "sentiment-attention",
        entitlements: [
            "chat:sentiment"
        ],
        betaLabel: true,
        isPromptFilter: true,
        featureFlag: "enableSourceSentiment",
        isFollowUpCompatible: false,
        toRemove: true
    },
    estimates: {
        label: (0, _i18next.t)("chatPage.datasets.estimates"),
        icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_assets.Estimates, {}),
        description: (0, _i18next.t)("chatPage.datasets.estimatesDescription"),
        handle: "estimates",
        id: "estimates",
        entitlements: [
            "chat:estimates"
        ],
        betaLabel: true,
        isPromptFilter: true,
        featureFlag: "enableSourceEstimates",
        isFollowUpCompatible: false,
        toRemove: true
    },
    crunchbase: {
        label: (0, _i18next.t)("chatPage.datasets.crunchbase"),
        icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_assets.Crunchbase, {}),
        description: (0, _i18next.t)("chatPage.datasets.crunchbaseDescription"),
        handle: "venturehub",
        id: "crunchbase",
        entitlements: [
            "chat:crunchbase"
        ],
        betaLabel: true,
        isPromptFilter: true,
        featureFlag: "enableSourceCrunchbase",
        isFollowUpCompatible: false,
        toRemove: true
    },
    "knowledge-graph": {
        label: (0, _i18next.t)("chatPage.datasets.knowledgeGraph"),
        icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_assets.KnowledgeGraph, {}),
        description: (0, _i18next.t)("chatPage.datasets.knowledgeGraphDescription"),
        handle: "entitygraph",
        id: "knowledge-graph",
        entitlements: [
            "chat:knowledge_graph"
        ],
        betaLabel: true,
        isPromptFilter: true,
        featureFlag: "enableSourceKnowledgeGraph",
        isFollowUpCompatible: false,
        toRemove: true
    },
    transcripts: {
        label: (0, _i18next.t)("chatPage.datasets.factsetTranscripts"),
        description: (0, _i18next.t)("chatPage.datasets.factsetTranscriptsDescription"),
        handle: "facsettranscripts",
        icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_assets.Earnings, {}),
        id: "transcripts",
        entitlements: [
            "content:fs_transcripts",
            "content:asia_transcripts"
        ],
        betaLabel: false,
        isPromptFilter: true,
        featureFlag: "enableSourceFactsetTranscripts",
        isFollowUpCompatible: true
    },
    "etf-holdings": {
        label: (0, _i18next.t)("chatPage.datasets.etfHoldings"),
        icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_assets.Etf, {}),
        description: (0, _i18next.t)("chatPage.datasets.etfHoldingsDescription"),
        handle: "etf",
        id: "etf-holdings",
        entitlements: [
            "chat:etf_holdings"
        ],
        betaLabel: true,
        isPromptFilter: true,
        featureFlag: "enableSourceEtfHoldings",
        isFollowUpCompatible: false,
        toRemove: true
    },
    market_intelligence: {
        label: (0, _i18next.t)("chatPage.datasets.marketIntelligence"),
        icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_assets.MarketIntelligence, {}),
        description: (0, _i18next.t)("chatPage.datasets.marketIntelligenceDescription"),
        handle: "capitalmarkets",
        id: "market_intelligence",
        entitlements: [
            "content:capital_markets"
        ],
        betaLabel: false,
        isPromptFilter: true,
        featureFlag: "enableSourceMarketIntelligence",
        isFollowUpCompatible: true
    },
    quartr_pro: {
        label: (0, _i18next.t)("chatPage.datasets.quartrPro"),
        icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_assets.QuartrPro, {}),
        description: (0, _i18next.t)("chatPage.datasets.quartrProDescription"),
        handle: "quartrpro",
        id: "quartr_pro",
        entitlements: [
            "content:quartr_audios",
            "content:quartr_presentation_materials",
            "content:quartr_reports",
            "content:quartr_transcripts"
        ],
        betaLabel: false,
        isPromptFilter: false,
        featureFlag: "enableSourceQuartrPro",
        isFollowUpCompatible: true
    },
    market_narratives: {
        label: (0, _i18next.t)("chatPage.datasets.marketNarratives"),
        icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_assets.MarketNarratives, {}),
        description: (0, _i18next.t)("chatPage.datasets.marketNarrativesDescription"),
        handle: "marketnarratives",
        id: "market_narratives",
        entitlements: [
            "content:pricing_culture"
        ],
        betaLabel: false,
        isPromptFilter: false,
        featureFlag: "enableSourcePricingCulture",
        isFollowUpCompatible: true
    },
    crypto_markets: {
        label: (0, _i18next.t)("chatPage.datasets.cryptoMarkets"),
        icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_assets.CryptoMarkets, {}),
        description: (0, _i18next.t)("chatPage.datasets.cryptoMarketsDescription"),
        handle: "cryptomarkets",
        id: "crypto_markets",
        entitlements: [
            "content:crypto_markets"
        ],
        betaLabel: false,
        isPromptFilter: false,
        featureFlag: "enableSourceCryptoMarkets",
        isFollowUpCompatible: true
    },
    middle_eastern_markets: {
        label: (0, _i18next.t)("chatPage.datasets.middleEastMarkets"),
        icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_assets.MiddleEastMarkets, {}),
        description: (0, _i18next.t)("chatPage.datasets.middleEastMarketsDescription"),
        handle: "middleeastmarkets",
        id: "middle_eastern_markets",
        entitlements: [
            "content:middle_eastern_markets"
        ],
        betaLabel: false,
        isPromptFilter: false,
        featureFlag: "enableSourceMiddleEastMarkets",
        isFollowUpCompatible: true
    },
    financial_times: {
        label: (0, _i18next.t)("chatPage.datasets.financialTimes"),
        icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_assets.FinancialTimes, {}),
        description: (0, _i18next.t)("chatPage.datasets.financialTimesDescription"),
        handle: "financialtimes",
        id: "financial_times",
        entitlements: [
            "content:financial_times"
        ],
        betaLabel: false,
        isPromptFilter: false,
        featureFlag: "enableSourceFinancialTimes",
        isFollowUpCompatible: true
    },
    expert_networks: {
        label: (0, _i18next.t)("chatPage.datasets.expertNetworks"),
        icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_assets.ExpertNetworks, {}),
        description: (0, _i18next.t)("chatPage.datasets.expertNetworksDescription"),
        handle: "expertnetworks",
        id: "expert_networks",
        entitlements: [
            "content:expert_networks"
        ],
        betaLabel: false,
        isPromptFilter: false,
        featureFlag: "enableSourceExpertNetworks",
        isFollowUpCompatible: true
    }
};
const scopesOrderedByLabel = Object.values(datasets).sort((a, b)=>a.label.localeCompare(b.label)).map(({ id })=>id);
const chatDatasets = scopesOrderedByLabel.reduce((acc, scope)=>{
    return _object_spread_props(_object_spread({}, acc), {
        [scope]: _object_spread({}, datasets[scope])
    });
}, {});
const promptFilterChatDatasets = Object.fromEntries(Object.entries(chatDatasets).filter(([_, dataset])=>dataset.isPromptFilter));
const isDatasetScope = (value)=>{
    return value !== undefined && datasets[value] !== undefined;
};
const canDownloadCSV = (scope)=>{
    const allowedScopes = [
        "job-analytics",
        "sentiment-attention"
    ];
    if (scope && allowedScopes.includes(scope)) {
        return true;
    }
    return false;
};

//# sourceMappingURL=data:application/json;base64,