2cdf0bf9718aeb9b255f05673aa3b729
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "operatingExpenses", {
    enumerable: true,
    get: function() {
        return operatingExpenses;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _WatchlistDataTablePriceCell = require("../../WatchlistDataTableCells/WatchlistDataTablePriceCell");
const _genericColumn = require("../../genericColumn");
const _fiscalPeriodUtils = require("../../utils/fiscalPeriodUtils");
function operatingExpenses(tableName) {
    const title = "Operating Expenses (FQ)";
    return (0, _genericColumn.genericColumn)({
        endpoint: "companyIncomeStatement",
        columnKeys: [
            "operatingExpenses"
        ],
        size: 130,
        title,
        enableSorting: true,
        enableHiding: true,
        tooltip: "Total running costs.",
        cell: (info)=>{
            var _info_row_original_financialData_companyIncomeStatement_data, _info_row_original_financialData_companyIncomeStatement, _info_row_original_financialData_companyIncomeStatement_data1, _info_row_original_financialData_companyIncomeStatement1;
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_WatchlistDataTablePriceCell.WatchlistDataTablePriceCell, {
                tooltip: `Explain the ${title}`,
                queryResult: info.row.original.financialData.companyIncomeStatement,
                currency: (_info_row_original_financialData_companyIncomeStatement = info.row.original.financialData.companyIncomeStatement) === null || _info_row_original_financialData_companyIncomeStatement === void 0 ? void 0 : (_info_row_original_financialData_companyIncomeStatement_data = _info_row_original_financialData_companyIncomeStatement.data) === null || _info_row_original_financialData_companyIncomeStatement_data === void 0 ? void 0 : _info_row_original_financialData_companyIncomeStatement_data.reportedCurrency,
                onClick: ()=>{
                    var _info_row_original_financialData_companyIncomeStatement_data, _info_row_original_financialData_companyIncomeStatement, _info_row_original_onChatWithCell, _info_row_original;
                    const fiscalPeriod = (0, _fiscalPeriodUtils.getIncomeStatementFiscalPeriod)(info.row.original);
                    (_info_row_original_onChatWithCell = (_info_row_original = info.row.original).onChatWithCell) === null || _info_row_original_onChatWithCell === void 0 ? void 0 : _info_row_original_onChatWithCell.call(_info_row_original, {
                        prompt: `What has ${info.row.original.entityInfo.name} reported in ${fiscalPeriod} about Operating Expenses?`,
                        value: (_info_row_original_financialData_companyIncomeStatement = info.row.original.financialData.companyIncomeStatement) === null || _info_row_original_financialData_companyIncomeStatement === void 0 ? void 0 : (_info_row_original_financialData_companyIncomeStatement_data = _info_row_original_financialData_companyIncomeStatement.data) === null || _info_row_original_financialData_companyIncomeStatement_data === void 0 ? void 0 : _info_row_original_financialData_companyIncomeStatement_data.operatingExpenses,
                        entityInfo: info.row.original.entityInfo,
                        columnName: `${tableName}: ${title}`
                    });
                },
                value: (_info_row_original_financialData_companyIncomeStatement1 = info.row.original.financialData.companyIncomeStatement) === null || _info_row_original_financialData_companyIncomeStatement1 === void 0 ? void 0 : (_info_row_original_financialData_companyIncomeStatement_data1 = _info_row_original_financialData_companyIncomeStatement1.data) === null || _info_row_original_financialData_companyIncomeStatement_data1 === void 0 ? void 0 : _info_row_original_financialData_companyIncomeStatement_data1.operatingExpenses
            });
        }
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL3dhdGNobGlzdHMvc3JjL2xpYi9XYXRjaGxpc3REYXRhVGFicy9lbmRwb2ludHMvY29tcGFueUluY29tZVN0YXRlbWVudC9vcGVyYXRpbmdFeHBlbnNlcy50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgV2F0Y2hsaXN0RGF0YVRhYmxlUHJpY2VDZWxsIH0gZnJvbSBcIi4uLy4uL1dhdGNobGlzdERhdGFUYWJsZUNlbGxzL1dhdGNobGlzdERhdGFUYWJsZVByaWNlQ2VsbFwiXG5pbXBvcnQgeyBnZW5lcmljQ29sdW1uIH0gZnJvbSBcIi4uLy4uL2dlbmVyaWNDb2x1bW5cIlxuaW1wb3J0IHsgZ2V0SW5jb21lU3RhdGVtZW50RmlzY2FsUGVyaW9kIH0gZnJvbSBcIi4uLy4uL3V0aWxzL2Zpc2NhbFBlcmlvZFV0aWxzXCJcblxuZnVuY3Rpb24gb3BlcmF0aW5nRXhwZW5zZXModGFibGVOYW1lOiBzdHJpbmcpIHtcbiAgY29uc3QgdGl0bGUgPSBcIk9wZXJhdGluZyBFeHBlbnNlcyAoRlEpXCJcbiAgcmV0dXJuIGdlbmVyaWNDb2x1bW4oe1xuICAgIGVuZHBvaW50OiBcImNvbXBhbnlJbmNvbWVTdGF0ZW1lbnRcIixcbiAgICBjb2x1bW5LZXlzOiBbXCJvcGVyYXRpbmdFeHBlbnNlc1wiXSxcbiAgICBzaXplOiAxMzAsXG4gICAgdGl0bGUsXG4gICAgZW5hYmxlU29ydGluZzogdHJ1ZSxcbiAgICBlbmFibGVIaWRpbmc6IHRydWUsXG4gICAgdG9vbHRpcDogXCJUb3RhbCBydW5uaW5nIGNvc3RzLlwiLFxuICAgIGNlbGw6IGluZm8gPT4ge1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgPFdhdGNobGlzdERhdGFUYWJsZVByaWNlQ2VsbFxuICAgICAgICAgIHRvb2x0aXA9e2BFeHBsYWluIHRoZSAke3RpdGxlfWB9XG4gICAgICAgICAgcXVlcnlSZXN1bHQ9e2luZm8ucm93Lm9yaWdpbmFsLmZpbmFuY2lhbERhdGEuY29tcGFueUluY29tZVN0YXRlbWVudH1cbiAgICAgICAgICBjdXJyZW5jeT17aW5mby5yb3cub3JpZ2luYWwuZmluYW5jaWFsRGF0YS5jb21wYW55SW5jb21lU3RhdGVtZW50Py5kYXRhPy5yZXBvcnRlZEN1cnJlbmN5fVxuICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGZpc2NhbFBlcmlvZCA9IGdldEluY29tZVN0YXRlbWVudEZpc2NhbFBlcmlvZChpbmZvLnJvdy5vcmlnaW5hbClcbiAgICAgICAgICAgIGluZm8ucm93Lm9yaWdpbmFsLm9uQ2hhdFdpdGhDZWxsPy4oe1xuICAgICAgICAgICAgICBwcm9tcHQ6IGBXaGF0IGhhcyAke2luZm8ucm93Lm9yaWdpbmFsLmVudGl0eUluZm8ubmFtZX0gcmVwb3J0ZWQgaW4gJHtmaXNjYWxQZXJpb2R9IGFib3V0IE9wZXJhdGluZyBFeHBlbnNlcz9gLFxuICAgICAgICAgICAgICB2YWx1ZTpcbiAgICAgICAgICAgICAgICBpbmZvLnJvdy5vcmlnaW5hbC5maW5hbmNpYWxEYXRhLmNvbXBhbnlJbmNvbWVTdGF0ZW1lbnQ/LmRhdGE/Lm9wZXJhdGluZ0V4cGVuc2VzLFxuICAgICAgICAgICAgICBlbnRpdHlJbmZvOiBpbmZvLnJvdy5vcmlnaW5hbC5lbnRpdHlJbmZvLFxuICAgICAgICAgICAgICBjb2x1bW5OYW1lOiBgJHt0YWJsZU5hbWV9OiAke3RpdGxlfWAsXG4gICAgICAgICAgICB9KVxuICAgICAgICAgIH19XG4gICAgICAgICAgdmFsdWU9e2luZm8ucm93Lm9yaWdpbmFsLmZpbmFuY2lhbERhdGEuY29tcGFueUluY29tZVN0YXRlbWVudD8uZGF0YT8ub3BlcmF0aW5nRXhwZW5zZXN9XG4gICAgICAgIC8+XG4gICAgICApXG4gICAgfSxcbiAgfSlcbn1cblxuZXhwb3J0IHsgb3BlcmF0aW5nRXhwZW5zZXMgfVxuIl0sIm5hbWVzIjpbIm9wZXJhdGluZ0V4cGVuc2VzIiwidGFibGVOYW1lIiwidGl0bGUiLCJnZW5lcmljQ29sdW1uIiwiZW5kcG9pbnQiLCJjb2x1bW5LZXlzIiwic2l6ZSIsImVuYWJsZVNvcnRpbmciLCJlbmFibGVIaWRpbmciLCJ0b29sdGlwIiwiY2VsbCIsImluZm8iLCJXYXRjaGxpc3REYXRhVGFibGVQcmljZUNlbGwiLCJxdWVyeVJlc3VsdCIsInJvdyIsIm9yaWdpbmFsIiwiZmluYW5jaWFsRGF0YSIsImNvbXBhbnlJbmNvbWVTdGF0ZW1lbnQiLCJjdXJyZW5jeSIsImRhdGEiLCJyZXBvcnRlZEN1cnJlbmN5Iiwib25DbGljayIsImZpc2NhbFBlcmlvZCIsImdldEluY29tZVN0YXRlbWVudEZpc2NhbFBlcmlvZCIsIm9uQ2hhdFdpdGhDZWxsIiwicHJvbXB0IiwiZW50aXR5SW5mbyIsIm5hbWUiLCJ2YWx1ZSIsImNvbHVtbk5hbWUiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkFxQ1NBOzs7ZUFBQUE7Ozs7NkNBckNtQzsrQkFDZDttQ0FDaUI7QUFFL0MsU0FBU0Esa0JBQWtCQyxTQUFpQjtJQUMxQyxNQUFNQyxRQUFRO0lBQ2QsT0FBT0MsSUFBQUEsNEJBQWEsRUFBQztRQUNuQkMsVUFBVTtRQUNWQyxZQUFZO1lBQUM7U0FBb0I7UUFDakNDLE1BQU07UUFDTko7UUFDQUssZUFBZTtRQUNmQyxjQUFjO1FBQ2RDLFNBQVM7UUFDVEMsTUFBTUMsQ0FBQUE7Z0JBS1VBLDhEQUFBQSx5REFXSEEsK0RBQUFBO1lBZlgscUJBQ0UscUJBQUNDLHdEQUEyQjtnQkFDMUJILFNBQVMsQ0FBQyxZQUFZLEVBQUVQLE1BQU0sQ0FBQztnQkFDL0JXLGFBQWFGLEtBQUtHLEdBQUcsQ0FBQ0MsUUFBUSxDQUFDQyxhQUFhLENBQUNDLHNCQUFzQjtnQkFDbkVDLFFBQVEsR0FBRVAsMERBQUFBLEtBQUtHLEdBQUcsQ0FBQ0MsUUFBUSxDQUFDQyxhQUFhLENBQUNDLHNCQUFzQixjQUF0RE4sK0VBQUFBLCtEQUFBQSx3REFBd0RRLElBQUksY0FBNURSLG1GQUFBQSw2REFBOERTLGdCQUFnQjtnQkFDeEZDLFNBQVM7d0JBS0hWLDhEQUFBQSx5REFISkEsbUNBQUFBO29CQURBLE1BQU1XLGVBQWVDLElBQUFBLGlEQUE4QixFQUFDWixLQUFLRyxHQUFHLENBQUNDLFFBQVE7cUJBQ3JFSixvQ0FBQUEsQ0FBQUEscUJBQUFBLEtBQUtHLEdBQUcsQ0FBQ0MsUUFBUSxFQUFDUyxjQUFjLGNBQWhDYix3REFBQUEsdUNBQUFBLG9CQUFtQzt3QkFDakNjLFFBQVEsQ0FBQyxTQUFTLEVBQUVkLEtBQUtHLEdBQUcsQ0FBQ0MsUUFBUSxDQUFDVyxVQUFVLENBQUNDLElBQUksQ0FBQyxhQUFhLEVBQUVMLGFBQWEsMEJBQTBCLENBQUM7d0JBQzdHTSxLQUFLLEdBQ0hqQiwwREFBQUEsS0FBS0csR0FBRyxDQUFDQyxRQUFRLENBQUNDLGFBQWEsQ0FBQ0Msc0JBQXNCLGNBQXRETiwrRUFBQUEsK0RBQUFBLHdEQUF3RFEsSUFBSSxjQUE1RFIsbUZBQUFBLDZEQUE4RFgsaUJBQWlCO3dCQUNqRjBCLFlBQVlmLEtBQUtHLEdBQUcsQ0FBQ0MsUUFBUSxDQUFDVyxVQUFVO3dCQUN4Q0csWUFBWSxDQUFDLEVBQUU1QixVQUFVLEVBQUUsRUFBRUMsTUFBTSxDQUFDO29CQUN0QztnQkFDRjtnQkFDQTBCLEtBQUssR0FBRWpCLDJEQUFBQSxLQUFLRyxHQUFHLENBQUNDLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDQyxzQkFBc0IsY0FBdEROLGdGQUFBQSxnRUFBQUEseURBQXdEUSxJQUFJLGNBQTVEUixvRkFBQUEsOERBQThEWCxpQkFBaUI7O1FBRzVGO0lBQ0Y7QUFDRiJ9