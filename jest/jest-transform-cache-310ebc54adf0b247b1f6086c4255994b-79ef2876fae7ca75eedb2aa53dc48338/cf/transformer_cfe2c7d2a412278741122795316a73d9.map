{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/node_modules/@trpc/server/dist/unstable-core-do-not-import/transformer.js"],"sourcesContent":["'use strict';\n\nvar utils = require('./utils.js');\n\n/**\n * @internal\n */ function getDataTransformer(transformer) {\n    if ('input' in transformer) {\n        return transformer;\n    }\n    return {\n        input: transformer,\n        output: transformer\n    };\n}\n/**\n * @internal\n */ const defaultTransformer = {\n    input: {\n        serialize: (obj)=>obj,\n        deserialize: (obj)=>obj\n    },\n    output: {\n        serialize: (obj)=>obj,\n        deserialize: (obj)=>obj\n    }\n};\nfunction transformTRPCResponseItem(config, item) {\n    if ('error' in item) {\n        return {\n            ...item,\n            error: config.transformer.output.serialize(item.error)\n        };\n    }\n    if ('data' in item.result) {\n        return {\n            ...item,\n            result: {\n                ...item.result,\n                data: config.transformer.output.serialize(item.result.data)\n            }\n        };\n    }\n    return item;\n}\n/**\n * Takes a unserialized `TRPCResponse` and serializes it with the router's transformers\n **/ function transformTRPCResponse(config, itemOrItems) {\n    return Array.isArray(itemOrItems) ? itemOrItems.map((item)=>transformTRPCResponseItem(config, item)) : transformTRPCResponseItem(config, itemOrItems);\n}\n// FIXME:\n// - the generics here are probably unnecessary\n// - the RPC-spec could probably be simplified to combine HTTP + WS\n/** @internal */ function transformResultInner(response, transformer) {\n    if ('error' in response) {\n        const error = transformer.deserialize(response.error);\n        return {\n            ok: false,\n            error: {\n                ...response,\n                error\n            }\n        };\n    }\n    const result = {\n        ...response.result,\n        ...(!response.result.type || response.result.type === 'data') && {\n            type: 'data',\n            data: transformer.deserialize(response.result.data)\n        }\n    };\n    return {\n        ok: true,\n        result\n    };\n}\nclass TransformResultError extends Error {\n    constructor(){\n        super('Unable to transform response from server');\n    }\n}\n/**\n * Transforms and validates that the result is a valid TRPCResponse\n * @internal\n */ function transformResult(response, transformer) {\n    let result;\n    try {\n        // Use the data transformers on the JSON-response\n        result = transformResultInner(response, transformer);\n    } catch (err) {\n        throw new TransformResultError();\n    }\n    // check that output of the transformers is a valid TRPCResponse\n    if (!result.ok && (!utils.isObject(result.error.error) || typeof result.error.error['code'] !== 'number')) {\n        throw new TransformResultError();\n    }\n    if (result.ok && !utils.isObject(result.result)) {\n        throw new TransformResultError();\n    }\n    return result;\n}\n\nexports.defaultTransformer = defaultTransformer;\nexports.getDataTransformer = getDataTransformer;\nexports.transformResult = transformResult;\nexports.transformTRPCResponse = transformTRPCResponse;\n"],"names":["utils","require","getDataTransformer","transformer","input","output","defaultTransformer","serialize","obj","deserialize","transformTRPCResponseItem","config","item","error","result","data","transformTRPCResponse","itemOrItems","Array","isArray","map","transformResultInner","response","ok","type","TransformResultError","Error","constructor","transformResult","err","isObject","exports"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAIA,QAAQC,QAAQ;AAEpB;;CAEC,GAAG,SAASC,mBAAmBC,WAAW;IACvC,IAAI,WAAWA,aAAa;QACxB,OAAOA;IACX;IACA,OAAO;QACHC,OAAOD;QACPE,QAAQF;IACZ;AACJ;AACA;;CAEC,GAAG,MAAMG,qBAAqB;IAC3BF,OAAO;QACHG,WAAW,CAACC,MAAMA;QAClBC,aAAa,CAACD,MAAMA;IACxB;IACAH,QAAQ;QACJE,WAAW,CAACC,MAAMA;QAClBC,aAAa,CAACD,MAAMA;IACxB;AACJ;AACA,SAASE,0BAA0BC,MAAM,EAAEC,IAAI;IAC3C,IAAI,WAAWA,MAAM;QACjB,OAAO,wCACAA;YACHC,OAAOF,OAAOR,WAAW,CAACE,MAAM,CAACE,SAAS,CAACK,KAAKC,KAAK;;IAE7D;IACA,IAAI,UAAUD,KAAKE,MAAM,EAAE;QACvB,OAAO,wCACAF;YACHE,QAAQ,wCACDF,KAAKE,MAAM;gBACdC,MAAMJ,OAAOR,WAAW,CAACE,MAAM,CAACE,SAAS,CAACK,KAAKE,MAAM,CAACC,IAAI;;;IAGtE;IACA,OAAOH;AACX;AACA;;EAEE,GAAG,SAASI,sBAAsBL,MAAM,EAAEM,WAAW;IACnD,OAAOC,MAAMC,OAAO,CAACF,eAAeA,YAAYG,GAAG,CAAC,CAACR,OAAOF,0BAA0BC,QAAQC,SAASF,0BAA0BC,QAAQM;AAC7I;AACA,SAAS;AACT,+CAA+C;AAC/C,mEAAmE;AACnE,cAAc,GAAG,SAASI,qBAAqBC,QAAQ,EAAEnB,WAAW;IAChE,IAAI,WAAWmB,UAAU;QACrB,MAAMT,QAAQV,YAAYM,WAAW,CAACa,SAAST,KAAK;QACpD,OAAO;YACHU,IAAI;YACJV,OAAO,wCACAS;gBACHT;;QAER;IACJ;IACA,MAAMC,SAAS,mBACRQ,SAASR,MAAM,EACf,AAAC,CAAA,CAACQ,SAASR,MAAM,CAACU,IAAI,IAAIF,SAASR,MAAM,CAACU,IAAI,KAAK,MAAK,KAAM;QAC7DA,MAAM;QACNT,MAAMZ,YAAYM,WAAW,CAACa,SAASR,MAAM,CAACC,IAAI;IACtD;IAEJ,OAAO;QACHQ,IAAI;QACJT;IACJ;AACJ;AACA,MAAMW,6BAA6BC;IAC/BC,aAAa;QACT,KAAK,CAAC;IACV;AACJ;AACA;;;CAGC,GAAG,SAASC,gBAAgBN,QAAQ,EAAEnB,WAAW;IAC9C,IAAIW;IACJ,IAAI;QACA,iDAAiD;QACjDA,SAASO,qBAAqBC,UAAUnB;IAC5C,EAAE,OAAO0B,KAAK;QACV,MAAM,IAAIJ;IACd;IACA,gEAAgE;IAChE,IAAI,CAACX,OAAOS,EAAE,IAAK,CAAA,CAACvB,MAAM8B,QAAQ,CAAChB,OAAOD,KAAK,CAACA,KAAK,KAAK,OAAOC,OAAOD,KAAK,CAACA,KAAK,CAAC,OAAO,KAAK,QAAO,GAAI;QACvG,MAAM,IAAIY;IACd;IACA,IAAIX,OAAOS,EAAE,IAAI,CAACvB,MAAM8B,QAAQ,CAAChB,OAAOA,MAAM,GAAG;QAC7C,MAAM,IAAIW;IACd;IACA,OAAOX;AACX;AAEAiB,QAAQzB,kBAAkB,GAAGA;AAC7ByB,QAAQ7B,kBAAkB,GAAGA;AAC7B6B,QAAQH,eAAe,GAAGA;AAC1BG,QAAQf,qBAAqB,GAAGA"}