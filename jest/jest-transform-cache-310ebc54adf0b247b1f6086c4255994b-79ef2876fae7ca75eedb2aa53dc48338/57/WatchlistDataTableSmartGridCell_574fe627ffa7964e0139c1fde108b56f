279f9ca2ac3d897453298842d94aaf4e
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "WatchlistDataTableSmartGridCell", {
    enumerable: true,
    get: function() {
        return WatchlistDataTableSmartGridCell;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _reactmarkdown = /*#__PURE__*/ _interop_require_default(require("react-markdown"));
const _chat = require("@rp/react/web/chat");
const _core = require("@rp/react/web/mui/core");
const _utils = require("@rp/web/utils");
const _WatchlistDataTableClickableCell = require("./WatchlistDataTableClickableCell");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function WatchlistDataTableSmartGridCell({ isLoading, isError, value, chunkMap, externalMap, onClick }) {
    if (isLoading) {
        return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
            sx: {
                display: "flex",
                alignItems: "center",
                gap: 1,
                py: "10px"
            },
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.CircularProgress, {
                    size: 16
                }),
                "Thinking"
            ]
        });
    }
    if (isError) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
            sx: {
                color: "error.main",
                fontSize: 12
            },
            children: "Error generating summary"
        });
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
        sx: {
            "& ul": {
                listStyleType: "none",
                p: 1,
                m: 0
            },
            "& li": {
                p: 0
            },
            "& p": {
                p: 0,
                m: 0
            }
        },
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_WatchlistDataTableClickableCell.WatchlistDataTableClickableCell, {
            onClick: value ? (ev)=>{
                if (ev.target instanceof HTMLElement) {
                    let el = ev.target;
                    while(el && !(el instanceof HTMLTableCellElement)){
                        el = el.parentElement;
                    }
                    onClick === null || onClick === void 0 ? void 0 : onClick();
                }
            } : undefined,
            hoverBackgroundColor: (theme)=>value ? theme.palette.action.hover : undefined,
            children: value ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactmarkdown.default, {
                remarkPlugins: [
                    _utils.remarkGfmNoAutoLink
                ],
                components: {
                    code: (0, _chat.inlineAttributionRenderer)({
                        chunkMap,
                        externalMap,
                        disabled: false,
                        onUserInteraction: ()=>{}
                    })
                },
                children: value
            }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                color: "text.secondary",
                sx: {
                    fontStyle: "italic",
                    fontSize: 13
                },
                children: "N/A"
            })
        })
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL3dhdGNobGlzdHMvc3JjL2xpYi9XYXRjaGxpc3REYXRhVGFicy9XYXRjaGxpc3REYXRhVGFibGVDZWxscy9XYXRjaGxpc3REYXRhVGFibGVTbWFydEdyaWRDZWxsLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3RNYXJrZG93biBmcm9tIFwicmVhY3QtbWFya2Rvd25cIlxuaW1wb3J0IHsgY3JlYXRlQ2h1bmtNYXAgfSBmcm9tIFwiQHJwL3JlYWN0L2NvbW1vbi9ob29rc1wiXG5pbXBvcnQgeyBpbmxpbmVBdHRyaWJ1dGlvblJlbmRlcmVyIH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvY2hhdFwiXG5pbXBvcnQgeyBCb3gsIENpcmN1bGFyUHJvZ3Jlc3MsIFR5cG9ncmFwaHkgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9tdWkvY29yZVwiXG5pbXBvcnQgeyByZW1hcmtHZm1Ob0F1dG9MaW5rIH0gZnJvbSBcIkBycC93ZWIvdXRpbHNcIlxuaW1wb3J0IHsgV2F0Y2hsaXN0RGF0YVRhYmxlQ2xpY2thYmxlQ2VsbCB9IGZyb20gXCIuL1dhdGNobGlzdERhdGFUYWJsZUNsaWNrYWJsZUNlbGxcIlxuXG50eXBlIENodW5rTWFwID0gUmV0dXJuVHlwZTx0eXBlb2YgY3JlYXRlQ2h1bmtNYXA+W1wiY2h1bmtNYXBcIl1cbnR5cGUgRXh0ZXJuYWxNYXAgPSBSZXR1cm5UeXBlPHR5cGVvZiBjcmVhdGVDaHVua01hcD5bXCJleHRlcm5hbE1hcFwiXVxuXG50eXBlIFByb3BzID0ge1xuICBpc0xvYWRpbmc6IGJvb2xlYW5cbiAgaXNFcnJvcjogYm9vbGVhblxuICB2YWx1ZTogc3RyaW5nIHwgdW5kZWZpbmVkXG4gIGNodW5rTWFwOiBDaHVua01hcFxuICBleHRlcm5hbE1hcDogRXh0ZXJuYWxNYXBcbiAgZW50aXR5TmFtZTogc3RyaW5nXG4gIG9uQ2xpY2s/OiAoKSA9PiB2b2lkXG59XG5cbmZ1bmN0aW9uIFdhdGNobGlzdERhdGFUYWJsZVNtYXJ0R3JpZENlbGwoe1xuICBpc0xvYWRpbmcsXG4gIGlzRXJyb3IsXG4gIHZhbHVlLFxuICBjaHVua01hcCxcbiAgZXh0ZXJuYWxNYXAsXG4gIG9uQ2xpY2ssXG59OiBQcm9wcykge1xuICBpZiAoaXNMb2FkaW5nKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxCb3ggc3g9e3sgZGlzcGxheTogXCJmbGV4XCIsIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsIGdhcDogMSwgcHk6IFwiMTBweFwiIH19PlxuICAgICAgICA8Q2lyY3VsYXJQcm9ncmVzcyBzaXplPXsxNn0gLz5cbiAgICAgICAgVGhpbmtpbmdcbiAgICAgIDwvQm94PlxuICAgIClcbiAgfVxuICBpZiAoaXNFcnJvcikge1xuICAgIHJldHVybiA8Qm94IHN4PXt7IGNvbG9yOiBcImVycm9yLm1haW5cIiwgZm9udFNpemU6IDEyIH19PkVycm9yIGdlbmVyYXRpbmcgc3VtbWFyeTwvQm94PlxuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8Qm94XG4gICAgICBzeD17e1xuICAgICAgICBcIiYgdWxcIjogeyBsaXN0U3R5bGVUeXBlOiBcIm5vbmVcIiwgcDogMSwgbTogMCB9LFxuICAgICAgICBcIiYgbGlcIjogeyBwOiAwIH0sXG4gICAgICAgIFwiJiBwXCI6IHsgcDogMCwgbTogMCB9LFxuICAgICAgfX1cbiAgICA+XG4gICAgICA8V2F0Y2hsaXN0RGF0YVRhYmxlQ2xpY2thYmxlQ2VsbFxuICAgICAgICBvbkNsaWNrPXtcbiAgICAgICAgICB2YWx1ZVxuICAgICAgICAgICAgPyBldiA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKGV2LnRhcmdldCBpbnN0YW5jZW9mIEhUTUxFbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgICBsZXQgZWw6IEhUTUxFbGVtZW50IHwgbnVsbCA9IGV2LnRhcmdldFxuICAgICAgICAgICAgICAgICAgd2hpbGUgKGVsICYmICEoZWwgaW5zdGFuY2VvZiBIVE1MVGFibGVDZWxsRWxlbWVudCkpIHtcbiAgICAgICAgICAgICAgICAgICAgZWwgPSBlbC5wYXJlbnRFbGVtZW50XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICBvbkNsaWNrPy4oKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgOiB1bmRlZmluZWRcbiAgICAgICAgfVxuICAgICAgICBob3ZlckJhY2tncm91bmRDb2xvcj17dGhlbWUgPT4gKHZhbHVlID8gdGhlbWUucGFsZXR0ZS5hY3Rpb24uaG92ZXIgOiB1bmRlZmluZWQpfVxuICAgICAgPlxuICAgICAgICB7dmFsdWUgPyAoXG4gICAgICAgICAgPFJlYWN0TWFya2Rvd25cbiAgICAgICAgICAgIHJlbWFya1BsdWdpbnM9e1tyZW1hcmtHZm1Ob0F1dG9MaW5rXX1cbiAgICAgICAgICAgIGNvbXBvbmVudHM9e3tcbiAgICAgICAgICAgICAgY29kZTogaW5saW5lQXR0cmlidXRpb25SZW5kZXJlcih7XG4gICAgICAgICAgICAgICAgY2h1bmtNYXAsXG4gICAgICAgICAgICAgICAgZXh0ZXJuYWxNYXAsXG4gICAgICAgICAgICAgICAgZGlzYWJsZWQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgIG9uVXNlckludGVyYWN0aW9uOiAoKSA9PiB7fSxcbiAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICB9fVxuICAgICAgICAgID5cbiAgICAgICAgICAgIHt2YWx1ZX1cbiAgICAgICAgICA8L1JlYWN0TWFya2Rvd24+XG4gICAgICAgICkgOiAoXG4gICAgICAgICAgPFR5cG9ncmFwaHkgY29sb3I9e1widGV4dC5zZWNvbmRhcnlcIn0gc3g9e3sgZm9udFN0eWxlOiBcIml0YWxpY1wiLCBmb250U2l6ZTogMTMgfX0+XG4gICAgICAgICAgICBOL0FcbiAgICAgICAgICA8L1R5cG9ncmFwaHk+XG4gICAgICAgICl9XG4gICAgICA8L1dhdGNobGlzdERhdGFUYWJsZUNsaWNrYWJsZUNlbGw+XG4gICAgPC9Cb3g+XG4gIClcbn1cblxuZXhwb3J0IHsgV2F0Y2hsaXN0RGF0YVRhYmxlU21hcnRHcmlkQ2VsbCB9XG4iXSwibmFtZXMiOlsiV2F0Y2hsaXN0RGF0YVRhYmxlU21hcnRHcmlkQ2VsbCIsImlzTG9hZGluZyIsImlzRXJyb3IiLCJ2YWx1ZSIsImNodW5rTWFwIiwiZXh0ZXJuYWxNYXAiLCJvbkNsaWNrIiwiQm94Iiwic3giLCJkaXNwbGF5IiwiYWxpZ25JdGVtcyIsImdhcCIsInB5IiwiQ2lyY3VsYXJQcm9ncmVzcyIsInNpemUiLCJjb2xvciIsImZvbnRTaXplIiwibGlzdFN0eWxlVHlwZSIsInAiLCJtIiwiV2F0Y2hsaXN0RGF0YVRhYmxlQ2xpY2thYmxlQ2VsbCIsImV2IiwidGFyZ2V0IiwiSFRNTEVsZW1lbnQiLCJlbCIsIkhUTUxUYWJsZUNlbGxFbGVtZW50IiwicGFyZW50RWxlbWVudCIsInVuZGVmaW5lZCIsImhvdmVyQmFja2dyb3VuZENvbG9yIiwidGhlbWUiLCJwYWxldHRlIiwiYWN0aW9uIiwiaG92ZXIiLCJSZWFjdE1hcmtkb3duIiwicmVtYXJrUGx1Z2lucyIsInJlbWFya0dmbU5vQXV0b0xpbmsiLCJjb21wb25lbnRzIiwiY29kZSIsImlubGluZUF0dHJpYnV0aW9uUmVuZGVyZXIiLCJkaXNhYmxlZCIsIm9uVXNlckludGVyYWN0aW9uIiwiVHlwb2dyYXBoeSIsImZvbnRTdHlsZSJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBd0ZTQTs7O2VBQUFBOzs7O3NFQXhGaUI7c0JBRWdCO3NCQUNRO3VCQUNkO2lEQUNZOzs7Ozs7QUFlaEQsU0FBU0EsZ0NBQWdDLEVBQ3ZDQyxTQUFTLEVBQ1RDLE9BQU8sRUFDUEMsS0FBSyxFQUNMQyxRQUFRLEVBQ1JDLFdBQVcsRUFDWEMsT0FBTyxFQUNEO0lBQ04sSUFBSUwsV0FBVztRQUNiLHFCQUNFLHNCQUFDTSxTQUFHO1lBQUNDLElBQUk7Z0JBQUVDLFNBQVM7Z0JBQVFDLFlBQVk7Z0JBQVVDLEtBQUs7Z0JBQUdDLElBQUk7WUFBTzs7OEJBQ25FLHFCQUFDQyxzQkFBZ0I7b0JBQUNDLE1BQU07O2dCQUFNOzs7SUFJcEM7SUFDQSxJQUFJWixTQUFTO1FBQ1gscUJBQU8scUJBQUNLLFNBQUc7WUFBQ0MsSUFBSTtnQkFBRU8sT0FBTztnQkFBY0MsVUFBVTtZQUFHO3NCQUFHOztJQUN6RDtJQUVBLHFCQUNFLHFCQUFDVCxTQUFHO1FBQ0ZDLElBQUk7WUFDRixRQUFRO2dCQUFFUyxlQUFlO2dCQUFRQyxHQUFHO2dCQUFHQyxHQUFHO1lBQUU7WUFDNUMsUUFBUTtnQkFBRUQsR0FBRztZQUFFO1lBQ2YsT0FBTztnQkFBRUEsR0FBRztnQkFBR0MsR0FBRztZQUFFO1FBQ3RCO2tCQUVBLGNBQUEscUJBQUNDLGdFQUErQjtZQUM5QmQsU0FDRUgsUUFDSWtCLENBQUFBO2dCQUNFLElBQUlBLEdBQUdDLE1BQU0sWUFBWUMsYUFBYTtvQkFDcEMsSUFBSUMsS0FBeUJILEdBQUdDLE1BQU07b0JBQ3RDLE1BQU9FLE1BQU0sQ0FBRUEsQ0FBQUEsY0FBY0Msb0JBQW1CLEVBQUk7d0JBQ2xERCxLQUFLQSxHQUFHRSxhQUFhO29CQUN2QjtvQkFDQXBCLG9CQUFBQSw4QkFBQUE7Z0JBQ0Y7WUFDRixJQUNBcUI7WUFFTkMsc0JBQXNCQyxDQUFBQSxRQUFVMUIsUUFBUTBCLE1BQU1DLE9BQU8sQ0FBQ0MsTUFBTSxDQUFDQyxLQUFLLEdBQUdMO3NCQUVwRXhCLHNCQUNDLHFCQUFDOEIsc0JBQWE7Z0JBQ1pDLGVBQWU7b0JBQUNDLDBCQUFtQjtpQkFBQztnQkFDcENDLFlBQVk7b0JBQ1ZDLE1BQU1DLElBQUFBLCtCQUF5QixFQUFDO3dCQUM5QmxDO3dCQUNBQzt3QkFDQWtDLFVBQVU7d0JBQ1ZDLG1CQUFtQixLQUFPO29CQUM1QjtnQkFDRjswQkFFQ3JDOytCQUdILHFCQUFDc0MsZ0JBQVU7Z0JBQUMxQixPQUFPO2dCQUFrQlAsSUFBSTtvQkFBRWtDLFdBQVc7b0JBQVUxQixVQUFVO2dCQUFHOzBCQUFHOzs7O0FBTzFGIn0=