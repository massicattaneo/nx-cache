5d336252e30848ab5f5046369139f666
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "WatchlistChatHeader", {
    enumerable: true,
    get: function() {
        return WatchlistChatHeader;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _reactrouterdom = require("react-router-dom");
const _clerkreact = require("@clerk/clerk-react");
const _utils = require("@rp/common/utils");
const _chat = require("@rp/react/tanstack-api/chat");
const _watchlist = require("@rp/react/tanstack-api/watchlist");
const _chat1 = require("@rp/react/web/chat");
const _compositecomponents = require("@rp/react/web/common/composite-components");
const _providers = require("@rp/react/web/common/providers");
const _core = require("@rp/react/web/mui/core");
const _icons = require("@rp/react/web/mui/icons");
const _router = require("@rp/react/web/router");
const _WatchlistChat = require("../WatchlistChat");
function WatchlistChatHeader({ selectedEntity, chat, watchlistName, hasInteractions, onRestart, hasSelectedEntity, setIsChatCollapsed, watchlist }) {
    var _watchlist_global;
    const { user: publicUserData } = (0, _clerkreact.useUser)();
    const { ui: { isEditable } } = (0, _chat1.useChatDataContext)();
    const { shareModal: { handleOpen } } = (0, _providers.useModal)();
    const { mutateAsync } = (0, _chat.useShareChat)();
    const { enqueueError } = (0, _providers.useSnackbar)();
    const { mutateAsync: shareWatchlist } = (0, _watchlist.useShareWatchlist)({
        enqueueError
    });
    const { name } = selectedEntity || {};
    const tooltipText = name !== null && name !== void 0 ? name : watchlistName;
    const title = `Chat with ${tooltipText}`;
    const showRestart = hasInteractions || hasSelectedEntity;
    const isOwner = watchlist.ownerUserId === (publicUserData === null || publicUserData === void 0 ? void 0 : publicUserData.id);
    const onShareClick = async ()=>{
        if (!chat || !watchlist.id) return;
        const isOwner = watchlist.ownerUserId === (publicUserData === null || publicUserData === void 0 ? void 0 : publicUserData.id);
        const isShared = watchlist.shared.isPublic || watchlist.shared.company.permission !== "undefined";
        const isSharedWithOrg = watchlist.shared.company.permission !== "undefined" && !watchlist.shared.isPublic;
        const sharingLevelText = watchlist.shared.isPublic ? "publicly" : watchlist.shared.company.permission !== "undefined" ? "within organization" : "private";
        handleOpen({
            data: {
                isEditable,
                shareObject: (0, _utils.getShareObject)({
                    shareObjectId: chat.id,
                    shareObjectType: "chat",
                    path: (0, _reactrouterdom.generatePath)(_router.CHAT_ID_ROUTE, {
                        id: chat.id
                    }),
                    name: chat.name,
                    infoMessage: isOwner ? isShared ? `Your ${watchlist.name} Watchlist is already shared ${sharingLevelText}` : `This will also make your ${watchlist.name} Watchlist publicly accessible` : `You don't own ${watchlist.name} Watchlist - current access: ${sharingLevelText}`
                }),
                mutate: async ({ sharedStatus })=>{
                    await mutateAsync({
                        id: chat.id,
                        isPublic: sharedStatus === "Public"
                    });
                    if (isOwner) {
                        if (!isShared || isSharedWithOrg) {
                            await shareWatchlist({
                                id: watchlist.id,
                                sharedBody: {
                                    isPublic: true
                                }
                            });
                        }
                    }
                },
                sharedStatus: chat.isPublic ? "Public" : "Private",
                title: "Share Chat",
                ownerUserId: chat.userId,
                enabledOptions: [
                    "Private",
                    "Public"
                ]
            }
        });
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
        sx: {
            height: _WatchlistChat.WATCHLIST_HEADER_HEIGHT - 1,
            alignItems: "center",
            display: "flex",
            gap: 1,
            px: 2,
            borderBottom: `1px solid rgba(255, 255, 255, 0.16)`,
            "& svg": {
                width: 20,
                height: 20
            }
        },
        children: [
            selectedEntity && /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.CategoryIcon, {
                cqsItem: selectedEntity
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.EllipsisTooltip, {
                typographyProps: {
                    sx: {
                        fontSize: "20px",
                        fontWeight: 700,
                        color: "text.primary",
                        flexGrow: 1
                    }
                },
                tooltipText: tooltipText,
                children: title
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                sx: {
                    display: "flex",
                    gap: 1,
                    alignItems: "center",
                    flexShrink: 0
                },
                children: [
                    showRestart && /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Button, {
                        variant: "text-outlined-mono",
                        startIcon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.RestartAlt, {
                            sx: {
                                width: 24,
                                height: 24
                            }
                        }),
                        "aria-label": "Restart",
                        onClick: onRestart,
                        size: "small",
                        sx: (theme)=>({
                                height: 32,
                                backgroundColor: theme.palette.elevation.dp01,
                                borderRadius: "8px",
                                border: `1px solid ${theme.palette.outline.border}`,
                                "& svg": {
                                    width: 20,
                                    height: 20
                                },
                                "&:hover": {
                                    backgroundColor: (0, _core.lighten)(theme.palette.elevation.dp01, 0.1)
                                }
                            }),
                        children: "New Chat"
                    }),
                    (isOwner || ((_watchlist_global = watchlist.global) === null || _watchlist_global === void 0 ? void 0 : _watchlist_global.status) === "published") && chat && /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.IconButton, {
                        size: "small",
                        "aria-label": "Share chat",
                        onClick: ()=>onShareClick(),
                        sx: (theme)=>{
                            return {
                                width: 30,
                                height: 30,
                                backgroundColor: theme.palette.elevation.dp01,
                                borderRadius: "8px",
                                border: `1px solid ${theme.palette.outline.border}`,
                                "& svg": {
                                    width: 20,
                                    height: 20
                                },
                                "&:hover": {
                                    backgroundColor: (0, _core.lighten)(theme.palette.elevation.dp01, 0.1),
                                    color: theme.palette.text.primary
                                },
                                color: theme.palette.text.secondary
                            };
                        },
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.Share, {
                            sx: {
                                width: 24,
                                height: 24
                            }
                        })
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.IconButton, {
                        size: "small",
                        "aria-label": "Collapse chat",
                        onClick: ()=>setIsChatCollapsed((prev)=>!prev),
                        sx: (theme)=>{
                            return {
                                width: 30,
                                height: 30,
                                backgroundColor: theme.palette.elevation.dp01,
                                borderRadius: "8px",
                                border: `1px solid ${theme.palette.outline.border}`,
                                "& svg": {
                                    width: 20,
                                    height: 20
                                },
                                "&:hover": {
                                    backgroundColor: (0, _core.lighten)(theme.palette.elevation.dp01, 0.1),
                                    color: theme.palette.text.primary
                                },
                                color: theme.palette.text.secondary
                            };
                        },
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.Close, {
                            sx: {
                                width: 24,
                                height: 24
                            }
                        })
                    })
                ]
            })
        ]
    });
}

//# sourceMappingURL=data:application/json;base64,