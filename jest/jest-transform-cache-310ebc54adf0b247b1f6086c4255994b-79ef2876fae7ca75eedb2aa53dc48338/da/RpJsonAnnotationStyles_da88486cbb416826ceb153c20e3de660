1cfb95a531b02f9113a9b4d4cf20cc0f
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "RpJsonAnnotationStyles", {
    enumerable: true,
    get: function() {
        return RpJsonAnnotationStyles;
    }
});
const _material = require("@mui/material");
const _constants = require("../../constants");
const _generaterpjsonstylesheet = require("../../styles/generate-rpjson-stylesheet");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
const RpJsonAnnotationStyles = (0, _material.styled)("div", {
    name: "RpJsonAnnotationStyles",
    shouldForwardProp: (prop)=>prop !== "highlights" && prop !== "showParagraphsNumbers" && prop !== "showSentencesNumbers" && prop !== "originalBreaklines"
})(({ highlights, showParagraphsNumbers = false, showSentencesNumbers = false, originalBreakLines = false })=>{
    const formattedHighlights = (0, _generaterpjsonstylesheet.generateRpJsonStylesheet)(highlights);
    return _object_spread({
        "&": {
            wordWrap: "break-word"
        },
        // Options Styles
        [`& .${_constants.CLASS_NAMES.PARAGRAPH_NUMBER}`]: {
            display: showParagraphsNumbers ? "initial" : "none"
        },
        [`& .${_constants.CLASS_NAMES.SENTENCE_NUMBER}`]: {
            display: showSentencesNumbers ? "initial" : "none"
        },
        [`& br`]: {
            display: originalBreakLines ? "initial" : "none"
        }
    }, formattedHighlights);
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL3JwanNvbi9zcmMvbGliL2NvbXBvbmVudHMvUnBKc29uQW5ub3RhdGlvblN0eWxlcy9ScEpzb25Bbm5vdGF0aW9uU3R5bGVzLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzdHlsZWQgfSBmcm9tIFwiQG11aS9tYXRlcmlhbFwiXG5pbXBvcnQgeyBDTEFTU19OQU1FUyB9IGZyb20gXCIuLi8uLi9jb25zdGFudHNcIlxuaW1wb3J0IHsgSGlnaGxpZ2h0SXRlbSwgZ2VuZXJhdGVScEpzb25TdHlsZXNoZWV0IH0gZnJvbSBcIi4uLy4uL3N0eWxlcy9nZW5lcmF0ZS1ycGpzb24tc3R5bGVzaGVldFwiXG5cbnR5cGUgUHJvcHMgPSB7XG4gIGhpZ2hsaWdodHM6IEFycmF5PEhpZ2hsaWdodEl0ZW0+XG4gIHNob3dQYXJhZ3JhcGhzTnVtYmVycz86IGJvb2xlYW5cbiAgc2hvd1NlbnRlbmNlc051bWJlcnM/OiBib29sZWFuXG4gIG9yaWdpbmFsQnJlYWtMaW5lcz86IGJvb2xlYW5cbn1cblxuY29uc3QgUnBKc29uQW5ub3RhdGlvblN0eWxlcyA9IHN0eWxlZChcImRpdlwiLCB7XG4gIG5hbWU6IFwiUnBKc29uQW5ub3RhdGlvblN0eWxlc1wiLFxuICBzaG91bGRGb3J3YXJkUHJvcDogcHJvcCA9PlxuICAgIHByb3AgIT09IFwiaGlnaGxpZ2h0c1wiICYmXG4gICAgcHJvcCAhPT0gXCJzaG93UGFyYWdyYXBoc051bWJlcnNcIiAmJlxuICAgIHByb3AgIT09IFwic2hvd1NlbnRlbmNlc051bWJlcnNcIiAmJlxuICAgIHByb3AgIT09IFwib3JpZ2luYWxCcmVha2xpbmVzXCIsXG59KTxQcm9wcz4oXG4gICh7XG4gICAgaGlnaGxpZ2h0cyxcbiAgICBzaG93UGFyYWdyYXBoc051bWJlcnMgPSBmYWxzZSxcbiAgICBzaG93U2VudGVuY2VzTnVtYmVycyA9IGZhbHNlLFxuICAgIG9yaWdpbmFsQnJlYWtMaW5lcyA9IGZhbHNlLFxuICB9KSA9PiB7XG4gICAgY29uc3QgZm9ybWF0dGVkSGlnaGxpZ2h0cyA9IGdlbmVyYXRlUnBKc29uU3R5bGVzaGVldChoaWdobGlnaHRzKVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIFwiJlwiOiB7XG4gICAgICAgIHdvcmRXcmFwOiBcImJyZWFrLXdvcmRcIixcbiAgICAgIH0sXG4gICAgICAvLyBPcHRpb25zIFN0eWxlc1xuICAgICAgW2AmIC4ke0NMQVNTX05BTUVTLlBBUkFHUkFQSF9OVU1CRVJ9YF06IHtcbiAgICAgICAgZGlzcGxheTogc2hvd1BhcmFncmFwaHNOdW1iZXJzID8gXCJpbml0aWFsXCIgOiBcIm5vbmVcIixcbiAgICAgIH0sXG4gICAgICBbYCYgLiR7Q0xBU1NfTkFNRVMuU0VOVEVOQ0VfTlVNQkVSfWBdOiB7XG4gICAgICAgIGRpc3BsYXk6IHNob3dTZW50ZW5jZXNOdW1iZXJzID8gXCJpbml0aWFsXCIgOiBcIm5vbmVcIixcbiAgICAgIH0sXG4gICAgICBbYCYgYnJgXToge1xuICAgICAgICBkaXNwbGF5OiBvcmlnaW5hbEJyZWFrTGluZXMgPyBcImluaXRpYWxcIiA6IFwibm9uZVwiLFxuICAgICAgfSxcblxuICAgICAgLy8gSGlnaGxpZ2h0IHN0eWxlc1xuICAgICAgLi4uZm9ybWF0dGVkSGlnaGxpZ2h0cyxcbiAgICB9XG4gIH0sXG4pXG5cbmV4cG9ydCB7IFJwSnNvbkFubm90YXRpb25TdHlsZXMgfVxuIl0sIm5hbWVzIjpbIlJwSnNvbkFubm90YXRpb25TdHlsZXMiLCJzdHlsZWQiLCJuYW1lIiwic2hvdWxkRm9yd2FyZFByb3AiLCJwcm9wIiwiaGlnaGxpZ2h0cyIsInNob3dQYXJhZ3JhcGhzTnVtYmVycyIsInNob3dTZW50ZW5jZXNOdW1iZXJzIiwib3JpZ2luYWxCcmVha0xpbmVzIiwiZm9ybWF0dGVkSGlnaGxpZ2h0cyIsImdlbmVyYXRlUnBKc29uU3R5bGVzaGVldCIsIndvcmRXcmFwIiwiQ0xBU1NfTkFNRVMiLCJQQVJBR1JBUEhfTlVNQkVSIiwiZGlzcGxheSIsIlNFTlRFTkNFX05VTUJFUiJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQWdEU0E7OztlQUFBQTs7OzBCQWhEYzsyQkFDSzswQ0FDNEI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBU3hELE1BQU1BLHlCQUF5QkMsSUFBQUEsZ0JBQU0sRUFBQyxPQUFPO0lBQzNDQyxNQUFNO0lBQ05DLG1CQUFtQkMsQ0FBQUEsT0FDakJBLFNBQVMsZ0JBQ1RBLFNBQVMsMkJBQ1RBLFNBQVMsMEJBQ1RBLFNBQVM7QUFDYixHQUNFLENBQUMsRUFDQ0MsVUFBVSxFQUNWQyx3QkFBd0IsS0FBSyxFQUM3QkMsdUJBQXVCLEtBQUssRUFDNUJDLHFCQUFxQixLQUFLLEVBQzNCO0lBQ0MsTUFBTUMsc0JBQXNCQyxJQUFBQSxrREFBd0IsRUFBQ0w7SUFFckQsT0FBTztRQUNMLEtBQUs7WUFDSE0sVUFBVTtRQUNaO1FBQ0EsaUJBQWlCO1FBQ2pCLENBQUMsQ0FBQyxHQUFHLEVBQUVDLHNCQUFXLENBQUNDLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxFQUFFO1lBQ3RDQyxTQUFTUix3QkFBd0IsWUFBWTtRQUMvQztRQUNBLENBQUMsQ0FBQyxHQUFHLEVBQUVNLHNCQUFXLENBQUNHLGVBQWUsQ0FBQyxDQUFDLENBQUMsRUFBRTtZQUNyQ0QsU0FBU1AsdUJBQXVCLFlBQVk7UUFDOUM7UUFDQSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsRUFBRTtZQUNSTyxTQUFTTixxQkFBcUIsWUFBWTtRQUM1QztPQUdHQztBQUVQIn0=