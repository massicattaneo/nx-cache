99d528b9f00042516e1473108d882859
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "EmptyWatchlistTable", {
    enumerable: true,
    get: function() {
        return EmptyWatchlistTable;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _assets = require("@rp/react/common/assets");
const _basecomponents = require("@rp/react/web/common/base-components");
const _core = require("@rp/react/web/mui/core");
const EmptyWatchlistTable = ({ onBrowse, canEdit })=>{
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
        sx: {
            display: "flex",
            alignItems: "center",
            height: "calc(100vh - 350px)"
        },
        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
            sx: {
                width: "100%",
                textAlign: "center"
            },
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_assets.EmptyStateWatchlists, {}),
                /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                    sx: {
                        mt: 4
                    },
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                            sx: {
                                fontSize: 20,
                                fontWeight: 600,
                                textAlign: "center"
                            },
                            children: canEdit ? "Your Watchlist is empty" : "This Watchlist is empty"
                        }),
                        canEdit && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Typography, {
                            sx: {
                                fontSize: 16,
                                color: "grey.300"
                            },
                            children: [
                                "Start adding entities to your watchlist by typing in the search ",
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("br", {}),
                                "bar or",
                                " ",
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.LinkStyled, {
                                    to: "/",
                                    onClick: (ev)=>{
                                        ev.preventDefault();
                                        onBrowse();
                                    },
                                    children: "upload a list"
                                }),
                                " ",
                                "from your device"
                            ]
                        })
                    ]
                })
            ]
        })
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL3dhdGNobGlzdHMvc3JjL2xpYi9FbXB0eVdhdGNobGlzdFRhYmxlL0VtcHR5V2F0Y2hsaXN0VGFibGUudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVtcHR5U3RhdGVXYXRjaGxpc3RzIH0gZnJvbSBcIkBycC9yZWFjdC9jb21tb24vYXNzZXRzXCJcbmltcG9ydCB7IExpbmtTdHlsZWQgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9jb21tb24vYmFzZS1jb21wb25lbnRzXCJcbmltcG9ydCB7IEJveCwgVHlwb2dyYXBoeSB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL211aS9jb3JlXCJcblxudHlwZSBQcm9wcyA9IHtcbiAgb25Ccm93c2U6ICgpID0+IHZvaWRcbiAgY2FuRWRpdDogYm9vbGVhblxufVxuXG5leHBvcnQgY29uc3QgRW1wdHlXYXRjaGxpc3RUYWJsZSA9ICh7IG9uQnJvd3NlLCBjYW5FZGl0IH06IFByb3BzKSA9PiB7XG4gIHJldHVybiAoXG4gICAgPEJveFxuICAgICAgc3g9e3tcbiAgICAgICAgZGlzcGxheTogXCJmbGV4XCIsXG4gICAgICAgIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gICAgICAgIGhlaWdodDogXCJjYWxjKDEwMHZoIC0gMzUwcHgpXCIsXG4gICAgICB9fVxuICAgID5cbiAgICAgIDxCb3ggc3g9e3sgd2lkdGg6IFwiMTAwJVwiLCB0ZXh0QWxpZ246IFwiY2VudGVyXCIgfX0+XG4gICAgICAgIDxFbXB0eVN0YXRlV2F0Y2hsaXN0cyAvPlxuICAgICAgICA8Qm94IHN4PXt7IG10OiA0IH19PlxuICAgICAgICAgIDxUeXBvZ3JhcGh5IHN4PXt7IGZvbnRTaXplOiAyMCwgZm9udFdlaWdodDogNjAwLCB0ZXh0QWxpZ246IFwiY2VudGVyXCIgfX0+XG4gICAgICAgICAgICB7Y2FuRWRpdCA/IFwiWW91ciBXYXRjaGxpc3QgaXMgZW1wdHlcIiA6IFwiVGhpcyBXYXRjaGxpc3QgaXMgZW1wdHlcIn1cbiAgICAgICAgICA8L1R5cG9ncmFwaHk+XG4gICAgICAgICAge2NhbkVkaXQgJiYgKFxuICAgICAgICAgICAgPFR5cG9ncmFwaHkgc3g9e3sgZm9udFNpemU6IDE2LCBjb2xvcjogXCJncmV5LjMwMFwiIH19PlxuICAgICAgICAgICAgICBTdGFydCBhZGRpbmcgZW50aXRpZXMgdG8geW91ciB3YXRjaGxpc3QgYnkgdHlwaW5nIGluIHRoZSBzZWFyY2ggPGJyIC8+XG4gICAgICAgICAgICAgIGJhciBvcntcIiBcIn1cbiAgICAgICAgICAgICAgPExpbmtTdHlsZWRcbiAgICAgICAgICAgICAgICB0bz1cIi9cIlxuICAgICAgICAgICAgICAgIG9uQ2xpY2s9e2V2ID0+IHtcbiAgICAgICAgICAgICAgICAgIGV2LnByZXZlbnREZWZhdWx0KClcbiAgICAgICAgICAgICAgICAgIG9uQnJvd3NlKClcbiAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgdXBsb2FkIGEgbGlzdFxuICAgICAgICAgICAgICA8L0xpbmtTdHlsZWQ+e1wiIFwifVxuICAgICAgICAgICAgICBmcm9tIHlvdXIgZGV2aWNlXG4gICAgICAgICAgICA8L1R5cG9ncmFwaHk+XG4gICAgICAgICAgKX1cbiAgICAgICAgPC9Cb3g+XG4gICAgICA8L0JveD5cbiAgICA8L0JveD5cbiAgKVxufVxuIl0sIm5hbWVzIjpbIkVtcHR5V2F0Y2hsaXN0VGFibGUiLCJvbkJyb3dzZSIsImNhbkVkaXQiLCJCb3giLCJzeCIsImRpc3BsYXkiLCJhbGlnbkl0ZW1zIiwiaGVpZ2h0Iiwid2lkdGgiLCJ0ZXh0QWxpZ24iLCJFbXB0eVN0YXRlV2F0Y2hsaXN0cyIsIm10IiwiVHlwb2dyYXBoeSIsImZvbnRTaXplIiwiZm9udFdlaWdodCIsImNvbG9yIiwiYnIiLCJMaW5rU3R5bGVkIiwidG8iLCJvbkNsaWNrIiwiZXYiLCJwcmV2ZW50RGVmYXVsdCJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkFTYUE7OztlQUFBQTs7Ozt3QkFUd0I7Z0NBQ1Y7c0JBQ0s7QUFPekIsTUFBTUEsc0JBQXNCLENBQUMsRUFBRUMsUUFBUSxFQUFFQyxPQUFPLEVBQVM7SUFDOUQscUJBQ0UscUJBQUNDLFNBQUc7UUFDRkMsSUFBSTtZQUNGQyxTQUFTO1lBQ1RDLFlBQVk7WUFDWkMsUUFBUTtRQUNWO2tCQUVBLGNBQUEsc0JBQUNKLFNBQUc7WUFBQ0MsSUFBSTtnQkFBRUksT0FBTztnQkFBUUMsV0FBVztZQUFTOzs4QkFDNUMscUJBQUNDLDRCQUFvQjs4QkFDckIsc0JBQUNQLFNBQUc7b0JBQUNDLElBQUk7d0JBQUVPLElBQUk7b0JBQUU7O3NDQUNmLHFCQUFDQyxnQkFBVTs0QkFBQ1IsSUFBSTtnQ0FBRVMsVUFBVTtnQ0FBSUMsWUFBWTtnQ0FBS0wsV0FBVzs0QkFBUztzQ0FDbEVQLFVBQVUsNEJBQTRCOzt3QkFFeENBLHlCQUNDLHNCQUFDVSxnQkFBVTs0QkFBQ1IsSUFBSTtnQ0FBRVMsVUFBVTtnQ0FBSUUsT0FBTzs0QkFBVzs7Z0NBQUc7OENBQ2EscUJBQUNDO2dDQUFLO2dDQUMvRDs4Q0FDUCxxQkFBQ0MsMEJBQVU7b0NBQ1RDLElBQUc7b0NBQ0hDLFNBQVNDLENBQUFBO3dDQUNQQSxHQUFHQyxjQUFjO3dDQUNqQnBCO29DQUNGOzhDQUNEOztnQ0FFYTtnQ0FBSTs7Ozs7Ozs7QUFRaEMifQ==