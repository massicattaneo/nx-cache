{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/node_modules/decode-named-character-reference/index.js"],"sourcesContent":["import {characterEntities} from 'character-entities'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Decode a single character reference (without the `&` or `;`).\n * You probably only need this when youâ€™re building parsers yourself that follow\n * different rules compared to HTML.\n * This is optimized to be tiny in browsers.\n *\n * @param {string} value\n *   `notin` (named), `#123` (deci), `#x123` (hexa).\n * @returns {string|false}\n *   Decoded reference.\n */\nexport function decodeNamedCharacterReference(value) {\n  return own.call(characterEntities, value) ? characterEntities[value] : false\n}\n"],"names":["decodeNamedCharacterReference","own","hasOwnProperty","value","call","characterEntities"],"rangeMappings":";;;;;;;;;;;;;;","mappings":";;;;+BAegBA;;;eAAAA;;;mCAfgB;AAEhC,MAAMC,MAAM,CAAC,EAAEC,cAAc;AAatB,SAASF,8BAA8BG,KAAK;IACjD,OAAOF,IAAIG,IAAI,CAACC,oCAAiB,EAAEF,SAASE,oCAAiB,CAACF,MAAM,GAAG;AACzE"}