7dd349a8947a2ec52651a0c7b556ee60
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "UserWatchlists", {
    enumerable: true,
    get: function() {
        return UserWatchlists;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _watchlist = require("@rp/react/tanstack-api/watchlist");
const _basecomponents = require("@rp/react/web/common/base-components");
const _compositecomponents = require("@rp/react/web/common/composite-components");
const _hooks = require("@rp/react/web/common/hooks");
const _core = require("@rp/react/web/mui/core");
const _EmptyWatchlists = require("../EmptyWatchlists");
const _NewWatchlistButtonContainer = require("../NewWatchlistButtonContainer");
const _UserWatchlistItem = require("./UserWatchlistItem");
const COLUMNS_WIDTH = [
    "calc(100% - 472px)",
    "150px",
    "250px"
];
const SORT_OPTIONS = [
    {
        label: "Name",
        value: "name"
    },
    {
        label: "Last Activity",
        value: "lastInteracted"
    }
];
const UserWatchlists = ()=>{
    const { isLoading: isLoadingWatchlists, data: results = [] } = (0, _watchlist.useAllWatchlists)("user");
    const { sorterFn, sortBy, direction, onChange } = (0, _hooks.usePageWithListSorter)("userWatchlists");
    const filteredResults = (0, _react.useMemo)(()=>results.sort(sorterFn), [
        results,
        sorterFn
    ]);
    if (isLoadingWatchlists) return /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.LoadingSpinner, {});
    if (!isLoadingWatchlists && filteredResults.length === 0) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_NewWatchlistButtonContainer.NewWatchlistButtonContainer, {
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_EmptyWatchlists.EmptyWatchlists, {})
        });
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_NewWatchlistButtonContainer.NewWatchlistButtonContainer, {
        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
            sx: {
                width: 1,
                mt: 1
            },
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.HubTableRow, {
                    sx: {
                        backgroundColor: "transparent",
                        height: 35
                    },
                    columnsWidth: COLUMNS_WIDTH,
                    columns: [
                        {
                            node: /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.HubSortableHeadCell, {
                                label: "NAME",
                                value: "name",
                                onChange: onChange,
                                sortBy: sortBy,
                                direction: direction,
                                sortOptions: SORT_OPTIONS
                            })
                        },
                        {
                            node: /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.HubSortableHeadCell, {
                                label: "LAST ACTIVITY",
                                value: "lastInteracted",
                                onChange: onChange,
                                sortBy: sortBy,
                                direction: direction,
                                sortOptions: SORT_OPTIONS,
                                defaultDirection: "desc"
                            })
                        },
                        {
                            node: /*#__PURE__*/ (0, _jsxruntime.jsx)(_jsxruntime.Fragment, {
                                children: "Â "
                            })
                        }
                    ]
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.InfiniteList, {
                    rootMargin: "0px 0px 300px 0px",
                    initialElements: 20,
                    items: filteredResults,
                    renderItem: (item)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_UserWatchlistItem.UserWatchlistItem, {
                            item: item,
                            columnsWidth: COLUMNS_WIDTH
                        })
                })
            ]
        })
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2FwcHMvY2xpZW50LXdlYi9zcmMvYXBwL2NvbXBvbmVudHMvSHViL1dhdGNobGlzdHMvVXNlcldhdGNobGlzdHMvVXNlcldhdGNobGlzdHMudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZU1lbW8gfSBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IHsgdXNlQWxsV2F0Y2hsaXN0cyB9IGZyb20gXCJAcnAvcmVhY3QvdGFuc3RhY2stYXBpL3dhdGNobGlzdFwiXG5pbXBvcnQgeyBMb2FkaW5nU3Bpbm5lciB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL2NvbW1vbi9iYXNlLWNvbXBvbmVudHNcIlxuaW1wb3J0IHsgSHViU29ydGFibGVIZWFkQ2VsbCwgSHViVGFibGVSb3cgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9jb21tb24vY29tcG9zaXRlLWNvbXBvbmVudHNcIlxuaW1wb3J0IHsgSW5maW5pdGVMaXN0IH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvY29tbW9uL2NvbXBvc2l0ZS1jb21wb25lbnRzXCJcbmltcG9ydCB7IHVzZVBhZ2VXaXRoTGlzdFNvcnRlciB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL2NvbW1vbi9ob29rc1wiXG5pbXBvcnQgeyBCb3ggfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9tdWkvY29yZVwiXG5pbXBvcnQgeyBFbXB0eVdhdGNobGlzdHMgfSBmcm9tIFwiLi4vRW1wdHlXYXRjaGxpc3RzXCJcbmltcG9ydCB7IE5ld1dhdGNobGlzdEJ1dHRvbkNvbnRhaW5lciB9IGZyb20gXCIuLi9OZXdXYXRjaGxpc3RCdXR0b25Db250YWluZXJcIlxuaW1wb3J0IHsgVXNlcldhdGNobGlzdEl0ZW0gfSBmcm9tIFwiLi9Vc2VyV2F0Y2hsaXN0SXRlbVwiXG5cbmNvbnN0IENPTFVNTlNfV0lEVEggPSBbXCJjYWxjKDEwMCUgLSA0NzJweClcIiwgXCIxNTBweFwiLCBcIjI1MHB4XCJdXG5jb25zdCBTT1JUX09QVElPTlMgPSBbXG4gIHsgbGFiZWw6IFwiTmFtZVwiLCB2YWx1ZTogXCJuYW1lXCIgfSxcbiAgeyBsYWJlbDogXCJMYXN0IEFjdGl2aXR5XCIsIHZhbHVlOiBcImxhc3RJbnRlcmFjdGVkXCIgfSxcbl1cblxuY29uc3QgVXNlcldhdGNobGlzdHMgPSAoKSA9PiB7XG4gIGNvbnN0IHsgaXNMb2FkaW5nOiBpc0xvYWRpbmdXYXRjaGxpc3RzLCBkYXRhOiByZXN1bHRzID0gW10gfSA9IHVzZUFsbFdhdGNobGlzdHMoXCJ1c2VyXCIpXG4gIGNvbnN0IHsgc29ydGVyRm4sIHNvcnRCeSwgZGlyZWN0aW9uLCBvbkNoYW5nZSB9ID0gdXNlUGFnZVdpdGhMaXN0U29ydGVyKFwidXNlcldhdGNobGlzdHNcIilcbiAgY29uc3QgZmlsdGVyZWRSZXN1bHRzID0gdXNlTWVtbygoKSA9PiByZXN1bHRzLnNvcnQoc29ydGVyRm4pLCBbcmVzdWx0cywgc29ydGVyRm5dKVxuXG4gIGlmIChpc0xvYWRpbmdXYXRjaGxpc3RzKSByZXR1cm4gPExvYWRpbmdTcGlubmVyIC8+XG4gIGlmICghaXNMb2FkaW5nV2F0Y2hsaXN0cyAmJiBmaWx0ZXJlZFJlc3VsdHMubGVuZ3RoID09PSAwKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxOZXdXYXRjaGxpc3RCdXR0b25Db250YWluZXI+XG4gICAgICAgIDxFbXB0eVdhdGNobGlzdHMgLz5cbiAgICAgIDwvTmV3V2F0Y2hsaXN0QnV0dG9uQ29udGFpbmVyPlxuICAgIClcbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPE5ld1dhdGNobGlzdEJ1dHRvbkNvbnRhaW5lcj5cbiAgICAgIDxCb3ggc3g9e3sgd2lkdGg6IDEsIG10OiAxIH19PlxuICAgICAgICA8SHViVGFibGVSb3dcbiAgICAgICAgICBzeD17eyBiYWNrZ3JvdW5kQ29sb3I6IFwidHJhbnNwYXJlbnRcIiwgaGVpZ2h0OiAzNSB9fVxuICAgICAgICAgIGNvbHVtbnNXaWR0aD17Q09MVU1OU19XSURUSH1cbiAgICAgICAgICBjb2x1bW5zPXtbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIG5vZGU6IChcbiAgICAgICAgICAgICAgICA8SHViU29ydGFibGVIZWFkQ2VsbFxuICAgICAgICAgICAgICAgICAgbGFiZWw9XCJOQU1FXCJcbiAgICAgICAgICAgICAgICAgIHZhbHVlPVwibmFtZVwiXG4gICAgICAgICAgICAgICAgICBvbkNoYW5nZT17b25DaGFuZ2V9XG4gICAgICAgICAgICAgICAgICBzb3J0Qnk9e3NvcnRCeX1cbiAgICAgICAgICAgICAgICAgIGRpcmVjdGlvbj17ZGlyZWN0aW9ufVxuICAgICAgICAgICAgICAgICAgc29ydE9wdGlvbnM9e1NPUlRfT1BUSU9OU31cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgbm9kZTogKFxuICAgICAgICAgICAgICAgIDxIdWJTb3J0YWJsZUhlYWRDZWxsXG4gICAgICAgICAgICAgICAgICBsYWJlbD1cIkxBU1QgQUNUSVZJVFlcIlxuICAgICAgICAgICAgICAgICAgdmFsdWU9XCJsYXN0SW50ZXJhY3RlZFwiXG4gICAgICAgICAgICAgICAgICBvbkNoYW5nZT17b25DaGFuZ2V9XG4gICAgICAgICAgICAgICAgICBzb3J0Qnk9e3NvcnRCeX1cbiAgICAgICAgICAgICAgICAgIGRpcmVjdGlvbj17ZGlyZWN0aW9ufVxuICAgICAgICAgICAgICAgICAgc29ydE9wdGlvbnM9e1NPUlRfT1BUSU9OU31cbiAgICAgICAgICAgICAgICAgIGRlZmF1bHREaXJlY3Rpb249XCJkZXNjXCJcbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHsgbm9kZTogPD4mbmJzcDs8Lz4gfSxcbiAgICAgICAgICBdfVxuICAgICAgICAvPlxuICAgICAgICA8SW5maW5pdGVMaXN0XG4gICAgICAgICAgcm9vdE1hcmdpbj17XCIwcHggMHB4IDMwMHB4IDBweFwifVxuICAgICAgICAgIGluaXRpYWxFbGVtZW50cz17MjB9XG4gICAgICAgICAgaXRlbXM9e2ZpbHRlcmVkUmVzdWx0c31cbiAgICAgICAgICByZW5kZXJJdGVtPXtpdGVtID0+IDxVc2VyV2F0Y2hsaXN0SXRlbSBpdGVtPXtpdGVtfSBjb2x1bW5zV2lkdGg9e0NPTFVNTlNfV0lEVEh9IC8+fVxuICAgICAgICAvPlxuICAgICAgPC9Cb3g+XG4gICAgPC9OZXdXYXRjaGxpc3RCdXR0b25Db250YWluZXI+XG4gIClcbn1cblxuZXhwb3J0IHsgVXNlcldhdGNobGlzdHMgfVxuIl0sIm5hbWVzIjpbIlVzZXJXYXRjaGxpc3RzIiwiQ09MVU1OU19XSURUSCIsIlNPUlRfT1BUSU9OUyIsImxhYmVsIiwidmFsdWUiLCJpc0xvYWRpbmciLCJpc0xvYWRpbmdXYXRjaGxpc3RzIiwiZGF0YSIsInJlc3VsdHMiLCJ1c2VBbGxXYXRjaGxpc3RzIiwic29ydGVyRm4iLCJzb3J0QnkiLCJkaXJlY3Rpb24iLCJvbkNoYW5nZSIsInVzZVBhZ2VXaXRoTGlzdFNvcnRlciIsImZpbHRlcmVkUmVzdWx0cyIsInVzZU1lbW8iLCJzb3J0IiwiTG9hZGluZ1NwaW5uZXIiLCJsZW5ndGgiLCJOZXdXYXRjaGxpc3RCdXR0b25Db250YWluZXIiLCJFbXB0eVdhdGNobGlzdHMiLCJCb3giLCJzeCIsIndpZHRoIiwibXQiLCJIdWJUYWJsZVJvdyIsImJhY2tncm91bmRDb2xvciIsImhlaWdodCIsImNvbHVtbnNXaWR0aCIsImNvbHVtbnMiLCJub2RlIiwiSHViU29ydGFibGVIZWFkQ2VsbCIsInNvcnRPcHRpb25zIiwiZGVmYXVsdERpcmVjdGlvbiIsIkluZmluaXRlTGlzdCIsInJvb3RNYXJnaW4iLCJpbml0aWFsRWxlbWVudHMiLCJpdGVtcyIsInJlbmRlckl0ZW0iLCJpdGVtIiwiVXNlcldhdGNobGlzdEl0ZW0iXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQTZFU0E7OztlQUFBQTs7Ozt1QkE3RWU7MkJBQ1M7Z0NBQ0Y7cUNBQ2tCO3VCQUVYO3NCQUNsQjtpQ0FDWTs2Q0FDWTttQ0FDVjtBQUVsQyxNQUFNQyxnQkFBZ0I7SUFBQztJQUFzQjtJQUFTO0NBQVE7QUFDOUQsTUFBTUMsZUFBZTtJQUNuQjtRQUFFQyxPQUFPO1FBQVFDLE9BQU87SUFBTztJQUMvQjtRQUFFRCxPQUFPO1FBQWlCQyxPQUFPO0lBQWlCO0NBQ25EO0FBRUQsTUFBTUosaUJBQWlCO0lBQ3JCLE1BQU0sRUFBRUssV0FBV0MsbUJBQW1CLEVBQUVDLE1BQU1DLFVBQVUsRUFBRSxFQUFFLEdBQUdDLElBQUFBLDJCQUFnQixFQUFDO0lBQ2hGLE1BQU0sRUFBRUMsUUFBUSxFQUFFQyxNQUFNLEVBQUVDLFNBQVMsRUFBRUMsUUFBUSxFQUFFLEdBQUdDLElBQUFBLDRCQUFxQixFQUFDO0lBQ3hFLE1BQU1DLGtCQUFrQkMsSUFBQUEsY0FBTyxFQUFDLElBQU1SLFFBQVFTLElBQUksQ0FBQ1AsV0FBVztRQUFDRjtRQUFTRTtLQUFTO0lBRWpGLElBQUlKLHFCQUFxQixxQkFBTyxxQkFBQ1ksOEJBQWM7SUFDL0MsSUFBSSxDQUFDWix1QkFBdUJTLGdCQUFnQkksTUFBTSxLQUFLLEdBQUc7UUFDeEQscUJBQ0UscUJBQUNDLHdEQUEyQjtzQkFDMUIsY0FBQSxxQkFBQ0MsZ0NBQWU7O0lBR3RCO0lBRUEscUJBQ0UscUJBQUNELHdEQUEyQjtrQkFDMUIsY0FBQSxzQkFBQ0UsU0FBRztZQUFDQyxJQUFJO2dCQUFFQyxPQUFPO2dCQUFHQyxJQUFJO1lBQUU7OzhCQUN6QixxQkFBQ0MsZ0NBQVc7b0JBQ1ZILElBQUk7d0JBQUVJLGlCQUFpQjt3QkFBZUMsUUFBUTtvQkFBRztvQkFDakRDLGNBQWM1QjtvQkFDZDZCLFNBQVM7d0JBQ1A7NEJBQ0VDLG9CQUNFLHFCQUFDQyx3Q0FBbUI7Z0NBQ2xCN0IsT0FBTTtnQ0FDTkMsT0FBTTtnQ0FDTlMsVUFBVUE7Z0NBQ1ZGLFFBQVFBO2dDQUNSQyxXQUFXQTtnQ0FDWHFCLGFBQWEvQjs7d0JBR25CO3dCQUNBOzRCQUNFNkIsb0JBQ0UscUJBQUNDLHdDQUFtQjtnQ0FDbEI3QixPQUFNO2dDQUNOQyxPQUFNO2dDQUNOUyxVQUFVQTtnQ0FDVkYsUUFBUUE7Z0NBQ1JDLFdBQVdBO2dDQUNYcUIsYUFBYS9CO2dDQUNiZ0Msa0JBQWlCOzt3QkFHdkI7d0JBQ0E7NEJBQUVILG9CQUFNOzBDQUFFOzt3QkFBVTtxQkFDckI7OzhCQUVILHFCQUFDSSxpQ0FBWTtvQkFDWEMsWUFBWTtvQkFDWkMsaUJBQWlCO29CQUNqQkMsT0FBT3ZCO29CQUNQd0IsWUFBWUMsQ0FBQUEscUJBQVEscUJBQUNDLG9DQUFpQjs0QkFBQ0QsTUFBTUE7NEJBQU1YLGNBQWM1Qjs7Ozs7O0FBSzNFIn0=