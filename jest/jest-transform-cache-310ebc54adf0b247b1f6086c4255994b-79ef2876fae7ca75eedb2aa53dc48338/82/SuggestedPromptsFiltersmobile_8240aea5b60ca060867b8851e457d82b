96d0793f9d6ab6e5fc6ea2f64d60f881
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "SuggestedPromptsFiltersMobile", {
    enumerable: true,
    get: function() {
        return SuggestedPromptsFiltersMobile;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _apitypes = require("@rp/common/api-types");
const _core = require("@rp/react/web/mui/core");
const _icons = require("@rp/react/web/mui/icons");
const _SuggestedPromptsFilters = require("./SuggestedPromptsFilters");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const SuggestedPromptsFiltersMobile = ({ selectedTasks, selectedTopics, selectedScopes, onTopicsChange, onTaskChange, onScopeChange, topics, enabledDatasets })=>{
    const [openMenu, setOpenMenu] = (0, _react.useState)();
    const [changes, setChanges] = (0, _react.useState)([]);
    const menu = {
        topic: {
            list: topics.map((topic)=>({
                    id: topic,
                    label: topic
                })),
            selected: selectedTopics,
            submit: onTopicsChange
        },
        task: {
            list: _apitypes.Task.map((task)=>({
                    id: task,
                    label: task
                })),
            selected: selectedTasks,
            submit: onTaskChange
        },
        source: {
            list: Object.values(enabledDatasets).map((dataset)=>({
                    id: dataset.id,
                    label: dataset.label
                })),
            selected: selectedScopes,
            submit: onScopeChange
        }
    };
    const lastValue = (0, _react.useRef)(undefined);
    const active = openMenu ? menu[openMenu] : undefined;
    const closeMenu = ()=>{
        setOpenMenu(undefined);
        setChanges([]);
    };
    const datasets = Object.values(enabledDatasets).reduce((acc, val)=>{
        var _selectedScopes_val_id;
        return _object_spread_props(_object_spread({}, acc), {
            [val.label]: (_selectedScopes_val_id = selectedScopes[val.id]) !== null && _selectedScopes_val_id !== void 0 ? _selectedScopes_val_id : false
        });
    }, {});
    const toggleItem = (newItem)=>{
        setChanges((prev)=>{
            if (prev.includes(newItem)) {
                return prev.filter((item)=>item !== newItem);
            }
            return [
                ...prev,
                newItem
            ];
        });
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
        sx: {
            display: "flex",
            gap: 1.5,
            py: 1.5,
            overflow: "auto",
            px: 2
        },
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.ButtonBase, {
                sx: {
                    flexShrink: 0,
                    bgcolor: "overlay.surface",
                    py: 0.5,
                    px: 1,
                    borderRadius: 1,
                    flexGrow: 1,
                    width: "60%",
                    maxWidth: "300px",
                    outline: "1px solid",
                    outlineColor: "outline.border",
                    display: "flex",
                    justifyContent: "space-between",
                    overflow: "hidden"
                },
                onClick: ()=>{
                    setOpenMenu("source");
                    lastValue.current = "source";
                },
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                        sx: {
                            display: "flex",
                            overflow: "hidden"
                        },
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                                component: "span",
                                sx: {
                                    minWidth: 0,
                                    textOverflow: "ellipsis",
                                    whiteSpace: "nowrap",
                                    overflow: "hidden"
                                },
                                children: (0, _SuggestedPromptsFilters.getButtonLabel)(datasets, "Select a source")[0]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                                sx: {
                                    flexShrink: 0,
                                    ml: 0.5
                                },
                                children: (0, _SuggestedPromptsFilters.getButtonLabel)(datasets, "Select a source")[1]
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.ArrowDropDown, {})
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.ButtonBase, {
                sx: {
                    flexShrink: 0,
                    bgcolor: "overlay.surface",
                    py: 0.5,
                    px: 1,
                    borderRadius: 1,
                    flexGrow: 1,
                    outline: "1px solid",
                    width: "60%",
                    maxWidth: "300px",
                    outlineColor: "outline.border",
                    display: "flex",
                    justifyContent: "space-between"
                },
                onClick: ()=>{
                    setOpenMenu("topic");
                    lastValue.current = "topic";
                },
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                        sx: {
                            display: "flex",
                            mr: 0.5,
                            overflow: "hidden"
                        },
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                                component: "span",
                                sx: {
                                    minWidth: 0,
                                    textOverflow: "ellipsis",
                                    whiteSpace: "nowrap",
                                    overflow: "hidden"
                                },
                                children: (0, _SuggestedPromptsFilters.getButtonLabel)(selectedTopics, "Select a topic")[0]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                                sx: {
                                    flexShrink: 0,
                                    ml: 0.5
                                },
                                children: (0, _SuggestedPromptsFilters.getButtonLabel)(selectedTopics, "Select a topic")[1]
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.ArrowDropDown, {})
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.ButtonBase, {
                sx: {
                    flexShrink: 0,
                    bgcolor: "overlay.surface",
                    py: 0.5,
                    px: 1,
                    borderRadius: 1,
                    flexGrow: 1,
                    width: "60%",
                    maxWidth: "300px",
                    outline: "1px solid",
                    outlineColor: "outline.border",
                    display: "flex",
                    justifyContent: "space-between",
                    overflow: "hidden"
                },
                onClick: ()=>{
                    setOpenMenu("task");
                    lastValue.current = "task";
                },
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                        sx: {
                            display: "flex",
                            mr: 0.5,
                            overflow: "hidden"
                        },
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                                children: (0, _SuggestedPromptsFilters.getButtonLabel)(selectedTasks, "Select a task")[0]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                                sx: {
                                    flexShrink: 0,
                                    ml: 0.5
                                },
                                children: (0, _SuggestedPromptsFilters.getButtonLabel)(selectedTasks, "Select a task")[1]
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.ArrowDropDown, {})
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Drawer, {
                anchor: "bottom",
                open: openMenu !== undefined,
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                        sx: {
                            // Trick to avoid scrolling on the chat page on iOS
                            minHeight: "100dvh",
                            width: "100dvw",
                            overflowX: "hidden",
                            overflowY: "auto",
                            overscrollBehavior: "contain",
                            "&::-webkit-scrollbar": {
                                width: 0
                            }
                        },
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                                sx: {
                                    position: "sticky",
                                    top: 0,
                                    borderBottom: "1px solid",
                                    borderColor: "outline.border",
                                    py: 2,
                                    bgcolor: "surface.main",
                                    zIndex: 10,
                                    display: "flex",
                                    justifyContent: "center",
                                    alignItems: "center"
                                },
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.IconButton, {
                                        onClick: ()=>closeMenu(),
                                        sx: {
                                            position: "absolute",
                                            left: 10
                                        },
                                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.Close, {})
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Typography, {
                                        sx: {
                                            fontSize: 16,
                                            fontWeight: 700
                                        },
                                        children: [
                                            "Select a ",
                                            lastValue.current
                                        ]
                                    })
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                                sx: {
                                    pt: 1,
                                    pb: 9
                                },
                                children: active === null || active === void 0 ? void 0 : active.list.map((item)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.MenuItem, {
                                        sx: {
                                            pl: 1
                                        },
                                        onClick: ()=>toggleItem(item.id),
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Checkbox, {
                                                checked: active.selected[item.id] ? !changes.includes(item.id) : changes.includes(item.id)
                                            }),
                                            item.label
                                        ]
                                    }, item.id))
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                        sx: {
                            position: "fixed",
                            width: "100%",
                            bottom: 0,
                            borderTop: "1px solid",
                            borderColor: "outline.border",
                            py: 2,
                            px: 2,
                            gap: 1,
                            bgcolor: "surface.main",
                            zIndex: 10,
                            display: "flex",
                            justifyContent: "right",
                            alignItems: "center"
                        },
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Button, {
                                variant: "text-outlined-mono",
                                onClick: ()=>closeMenu(),
                                children: "Cancel"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Button, {
                                variant: "contained",
                                disabled: changes.length === 0,
                                onClick: ()=>{
                                    var _active_submit;
                                    active === null || active === void 0 ? void 0 : (_active_submit = active.submit) === null || _active_submit === void 0 ? void 0 : _active_submit.call(active, changes);
                                    closeMenu();
                                },
                                children: "Apply changes"
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                        sx: {
                            height: "1px"
                        }
                    })
                ]
            })
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,