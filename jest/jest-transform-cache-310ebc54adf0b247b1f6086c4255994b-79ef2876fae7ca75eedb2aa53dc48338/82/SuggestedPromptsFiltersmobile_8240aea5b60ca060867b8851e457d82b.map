{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/composite-components/src/SuggestedPrompts/SuggestedPromptsFilters.mobile.tsx"],"sourcesContent":["import { useRef, useState } from \"react\"\nimport { Dataset, DatasetScope, Task } from \"@rp/common/api-types\"\nimport {\n  Box,\n  Button,\n  ButtonBase,\n  Checkbox,\n  Drawer,\n  IconButton,\n  MenuItem,\n  Typography,\n} from \"@rp/react/web/mui/core\"\nimport { ArrowDropDown, Close } from \"@rp/react/web/mui/icons\"\nimport { getButtonLabel } from \"./SuggestedPromptsFilters\"\n\ntype Props = {\n  selectedTopics: Record<string, boolean>\n  selectedTasks: Record<string, boolean>\n  selectedScopes: Record<string, boolean>\n  onTopicsChange: (topics: Array<string>) => void\n  onTaskChange: (tasks: Array<string>) => void\n  onScopeChange: (tasks: Array<string>) => void\n  topics: Array<string>\n  enabledDatasets: Array<Dataset<DatasetScope>>\n}\n\nconst SuggestedPromptsFiltersMobile = ({\n  selectedTasks,\n  selectedTopics,\n  selectedScopes,\n  onTopicsChange,\n  onTaskChange,\n  onScopeChange,\n  topics,\n  enabledDatasets,\n}: Props) => {\n  const [openMenu, setOpenMenu] = useState<\"topic\" | \"task\" | \"source\" | undefined>()\n  const [changes, setChanges] = useState<Array<string>>([])\n  const menu = {\n    topic: {\n      list: topics.map(topic => ({ id: topic, label: topic })),\n      selected: selectedTopics,\n      submit: onTopicsChange,\n    },\n    task: {\n      list: Task.map(task => ({ id: task, label: task })),\n      selected: selectedTasks,\n      submit: onTaskChange,\n    },\n    source: {\n      list: Object.values(enabledDatasets).map(dataset => ({\n        id: dataset.id,\n        label: dataset.label,\n      })),\n      selected: selectedScopes,\n      submit: onScopeChange,\n    },\n  }\n  const lastValue = useRef<\"topic\" | \"task\" | \"source\">(undefined)\n  const active = openMenu ? menu[openMenu] : undefined\n\n  const closeMenu = () => {\n    setOpenMenu(undefined)\n    setChanges([])\n  }\n\n  const datasets = Object.values(enabledDatasets).reduce((acc, val) => {\n    return { ...acc, [val.label]: selectedScopes[val.id] ?? false }\n  }, {})\n\n  const toggleItem = (newItem: string) => {\n    setChanges(prev => {\n      if (prev.includes(newItem)) {\n        return prev.filter(item => item !== newItem)\n      }\n\n      return [...prev, newItem]\n    })\n  }\n\n  return (\n    <Box sx={{ display: \"flex\", gap: 1.5, py: 1.5, overflow: \"auto\", px: 2 }}>\n      <ButtonBase\n        sx={{\n          flexShrink: 0,\n          bgcolor: \"overlay.surface\",\n          py: 0.5,\n          px: 1,\n          borderRadius: 1,\n          flexGrow: 1,\n          width: \"60%\",\n          maxWidth: \"300px\",\n          outline: \"1px solid\",\n          outlineColor: \"outline.border\",\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          overflow: \"hidden\",\n        }}\n        onClick={() => {\n          setOpenMenu(\"source\")\n          lastValue.current = \"source\"\n        }}\n      >\n        <Box\n          sx={{\n            display: \"flex\",\n            overflow: \"hidden\",\n          }}\n        >\n          <Typography\n            component=\"span\"\n            sx={{\n              minWidth: 0,\n              textOverflow: \"ellipsis\",\n              whiteSpace: \"nowrap\",\n              overflow: \"hidden\",\n            }}\n          >\n            {getButtonLabel(datasets, \"Select a source\")[0]}\n          </Typography>\n          <Typography sx={{ flexShrink: 0, ml: 0.5 }}>\n            {getButtonLabel(datasets, \"Select a source\")[1]}\n          </Typography>\n        </Box>\n        <ArrowDropDown />\n      </ButtonBase>\n      <ButtonBase\n        sx={{\n          flexShrink: 0,\n          bgcolor: \"overlay.surface\",\n          py: 0.5,\n          px: 1,\n          borderRadius: 1,\n          flexGrow: 1,\n          outline: \"1px solid\",\n          width: \"60%\",\n          maxWidth: \"300px\",\n          outlineColor: \"outline.border\",\n          display: \"flex\",\n          justifyContent: \"space-between\",\n        }}\n        onClick={() => {\n          setOpenMenu(\"topic\")\n          lastValue.current = \"topic\"\n        }}\n      >\n        <Box\n          sx={{\n            display: \"flex\",\n            mr: 0.5,\n            overflow: \"hidden\",\n          }}\n        >\n          <Typography\n            component=\"span\"\n            sx={{ minWidth: 0, textOverflow: \"ellipsis\", whiteSpace: \"nowrap\", overflow: \"hidden\" }}\n          >\n            {getButtonLabel(selectedTopics, \"Select a topic\")[0]}\n          </Typography>\n          <Typography sx={{ flexShrink: 0, ml: 0.5 }}>\n            {getButtonLabel(selectedTopics, \"Select a topic\")[1]}\n          </Typography>\n        </Box>\n        <ArrowDropDown />\n      </ButtonBase>\n      <ButtonBase\n        sx={{\n          flexShrink: 0,\n          bgcolor: \"overlay.surface\",\n          py: 0.5,\n          px: 1,\n          borderRadius: 1,\n          flexGrow: 1,\n          width: \"60%\",\n          maxWidth: \"300px\",\n          outline: \"1px solid\",\n          outlineColor: \"outline.border\",\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          overflow: \"hidden\",\n        }}\n        onClick={() => {\n          setOpenMenu(\"task\")\n          lastValue.current = \"task\"\n        }}\n      >\n        <Box\n          sx={{\n            display: \"flex\",\n            mr: 0.5,\n            overflow: \"hidden\",\n          }}\n        >\n          <Typography>{getButtonLabel(selectedTasks, \"Select a task\")[0]}</Typography>\n          <Typography sx={{ flexShrink: 0, ml: 0.5 }}>\n            {getButtonLabel(selectedTasks, \"Select a task\")[1]}\n          </Typography>\n        </Box>\n        <ArrowDropDown />\n      </ButtonBase>\n      <Drawer anchor=\"bottom\" open={openMenu !== undefined}>\n        <Box\n          sx={{\n            // Trick to avoid scrolling on the chat page on iOS\n            minHeight: \"100dvh\",\n            width: \"100dvw\",\n            overflowX: \"hidden\",\n            overflowY: \"auto\",\n            overscrollBehavior: \"contain\",\n            \"&::-webkit-scrollbar\": {\n              width: 0,\n            },\n          }}\n        >\n          <Box\n            sx={{\n              position: \"sticky\",\n              top: 0,\n              borderBottom: \"1px solid\",\n              borderColor: \"outline.border\",\n              py: 2,\n              bgcolor: \"surface.main\",\n              zIndex: 10,\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <IconButton\n              onClick={() => closeMenu()}\n              sx={{\n                position: \"absolute\",\n                left: 10,\n              }}\n            >\n              <Close />\n            </IconButton>\n            <Typography sx={{ fontSize: 16, fontWeight: 700 }}>\n              Select a {lastValue.current}\n            </Typography>\n          </Box>\n          <Box sx={{ pt: 1, pb: 9 }}>\n            {active?.list.map(item => (\n              <MenuItem\n                key={item.id}\n                sx={{\n                  pl: 1,\n                }}\n                onClick={() => toggleItem(item.id)}\n              >\n                <Checkbox\n                  checked={\n                    active.selected[item.id]\n                      ? !changes.includes(item.id)\n                      : changes.includes(item.id)\n                  }\n                />\n                {item.label}\n              </MenuItem>\n            ))}\n          </Box>\n        </Box>\n        <Box\n          sx={{\n            position: \"fixed\",\n            width: \"100%\",\n            bottom: 0,\n            borderTop: \"1px solid\",\n            borderColor: \"outline.border\",\n            py: 2,\n            px: 2,\n            gap: 1,\n            bgcolor: \"surface.main\",\n            zIndex: 10,\n            display: \"flex\",\n            justifyContent: \"right\",\n            alignItems: \"center\",\n          }}\n        >\n          <Button variant=\"text-outlined-mono\" onClick={() => closeMenu()}>\n            Cancel\n          </Button>\n          <Button\n            variant=\"contained\"\n            disabled={changes.length === 0}\n            onClick={() => {\n              active?.submit?.(changes)\n              closeMenu()\n            }}\n          >\n            Apply changes\n          </Button>\n        </Box>\n        <Box sx={{ height: \"1px\" }} />\n      </Drawer>\n    </Box>\n  )\n}\nexport { SuggestedPromptsFiltersMobile }\n"],"names":["SuggestedPromptsFiltersMobile","selectedTasks","selectedTopics","selectedScopes","onTopicsChange","onTaskChange","onScopeChange","topics","enabledDatasets","openMenu","setOpenMenu","useState","changes","setChanges","menu","topic","list","map","id","label","selected","submit","task","Task","source","Object","values","dataset","lastValue","useRef","undefined","active","closeMenu","datasets","reduce","acc","val","toggleItem","newItem","prev","includes","filter","item","Box","sx","display","gap","py","overflow","px","ButtonBase","flexShrink","bgcolor","borderRadius","flexGrow","width","maxWidth","outline","outlineColor","justifyContent","onClick","current","Typography","component","minWidth","textOverflow","whiteSpace","getButtonLabel","ml","ArrowDropDown","mr","Drawer","anchor","open","minHeight","overflowX","overflowY","overscrollBehavior","position","top","borderBottom","borderColor","zIndex","alignItems","IconButton","left","Close","fontSize","fontWeight","pt","pb","MenuItem","pl","Checkbox","checked","bottom","borderTop","Button","variant","disabled","length","height"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}