c039ccd989ce474a0d10b22c2ab8490d
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "BriefWatchlistsSubheader", {
    enumerable: true,
    get: function() {
        return BriefWatchlistsSubheader;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _clerkreact = require("@clerk/clerk-react");
const _layout = require("@rp/react/web/common/layout");
const _core = require("@rp/react/web/mui/core");
const _watchlists = require("@rp/react/web/watchlists");
const _constants = require("../constants");
function BriefWatchlistsSubheader({ shouldHideFilter, activeTab, onTabChange, canShare, filterTerm, setFilterTerm, filteredResultsCount, isSearching, hasNoResults }) {
    var _user_organizationMemberships__organization, _user_organizationMemberships_, _user_organizationMemberships;
    const { user } = (0, _clerkreact.useUser)();
    const organizationName = (user === null || user === void 0 ? void 0 : (_user_organizationMemberships = user.organizationMemberships) === null || _user_organizationMemberships === void 0 ? void 0 : (_user_organizationMemberships_ = _user_organizationMemberships[0]) === null || _user_organizationMemberships_ === void 0 ? void 0 : (_user_organizationMemberships__organization = _user_organizationMemberships_.organization) === null || _user_organizationMemberships__organization === void 0 ? void 0 : _user_organizationMemberships__organization.name) || _constants.DEFAULT_ORGANIZATION_NAME;
    const handleTabChange = (newValue)=>{
        if (newValue) {
            onTabChange(newValue);
        }
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
        "data-testid": "brief-watch-subheader",
        children: [
            !shouldHideFilter && /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                sx: {
                    mb: 2,
                    display: "flex",
                    width: "100%"
                },
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_layout.HeaderSearchBar, {
                    filterTerm: filterTerm,
                    onChange: setFilterTerm,
                    maxWidth: "100%",
                    placeholder: "Find in Watchlists"
                }, "brief-select-wl-header-search-bar")
            }),
            isSearching && !hasNoResults && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Typography, {
                variant: "body2",
                color: "text.secondary",
                sx: {
                    ml: 1,
                    mt: 3,
                    minHeight: 32
                },
                children: [
                    filteredResultsCount,
                    " watchlist",
                    filteredResultsCount !== 1 ? "s" : "",
                    " found:"
                ]
            }),
            !isSearching && /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                sx: {
                    mb: 2
                },
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_watchlists.WatchlistsCardViewTabs, {
                    canShare: canShare,
                    tabValue: activeTab,
                    handleChange: handleTabChange,
                    organizationName: organizationName
                })
            })
        ]
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2JyaWVmL3NyYy9jb21wb25lbnRzL2JyaWVmU3RlcHMvQnJpZWZXYXRjaGxpc3RTZWxlY3Rpb25TdGVwL0JyaWVmV2F0Y2hsaXN0c1N1YmhlYWRlci9CcmllZldhdGNobGlzdHNTdWJoZWFkZXIudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZVVzZXIgfSBmcm9tIFwiQGNsZXJrL2NsZXJrLXJlYWN0XCJcbmltcG9ydCB7IEhlYWRlclNlYXJjaEJhciB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL2NvbW1vbi9sYXlvdXRcIlxuaW1wb3J0IHsgQm94LCBUeXBvZ3JhcGh5IH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvbXVpL2NvcmVcIlxuaW1wb3J0IHsgV2F0Y2hsaXN0c0NhcmRWaWV3VGFicywgV2F0Y2hsaXN0c1RhYiB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL3dhdGNobGlzdHNcIlxuaW1wb3J0IHsgREVGQVVMVF9PUkdBTklaQVRJT05fTkFNRSB9IGZyb20gXCIuLi9jb25zdGFudHNcIlxuXG50eXBlIEJyaWVmV2F0Y2hsaXN0c1N1YmhlYWRlclByb3BzID0ge1xuICBzaG91bGRIaWRlRmlsdGVyOiBib29sZWFuXG4gIGFjdGl2ZVRhYjogV2F0Y2hsaXN0c1RhYlxuICBvblRhYkNoYW5nZTogKHRhYjogV2F0Y2hsaXN0c1RhYikgPT4gdm9pZFxuICBjYW5TaGFyZTogYm9vbGVhblxuICBmaWx0ZXJUZXJtOiBzdHJpbmdcbiAgc2V0RmlsdGVyVGVybTogKHRlcm06IHN0cmluZykgPT4gdm9pZFxuICBmaWx0ZXJlZFJlc3VsdHNDb3VudDogbnVtYmVyXG4gIGlzU2VhcmNoaW5nOiBib29sZWFuXG4gIGhhc05vUmVzdWx0czogYm9vbGVhblxufVxuXG5mdW5jdGlvbiBCcmllZldhdGNobGlzdHNTdWJoZWFkZXIoe1xuICBzaG91bGRIaWRlRmlsdGVyLFxuICBhY3RpdmVUYWIsXG4gIG9uVGFiQ2hhbmdlLFxuICBjYW5TaGFyZSxcbiAgZmlsdGVyVGVybSxcbiAgc2V0RmlsdGVyVGVybSxcbiAgZmlsdGVyZWRSZXN1bHRzQ291bnQsXG4gIGlzU2VhcmNoaW5nLFxuICBoYXNOb1Jlc3VsdHMsXG59OiBCcmllZldhdGNobGlzdHNTdWJoZWFkZXJQcm9wcykge1xuICBjb25zdCB7IHVzZXIgfSA9IHVzZVVzZXIoKVxuICBjb25zdCBvcmdhbml6YXRpb25OYW1lID1cbiAgICB1c2VyPy5vcmdhbml6YXRpb25NZW1iZXJzaGlwcz8uWzBdPy5vcmdhbml6YXRpb24/Lm5hbWUgfHwgREVGQVVMVF9PUkdBTklaQVRJT05fTkFNRVxuXG4gIGNvbnN0IGhhbmRsZVRhYkNoYW5nZSA9IChuZXdWYWx1ZTogV2F0Y2hsaXN0c1RhYikgPT4ge1xuICAgIGlmIChuZXdWYWx1ZSkge1xuICAgICAgb25UYWJDaGFuZ2UobmV3VmFsdWUpXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8Qm94IGRhdGEtdGVzdGlkPVwiYnJpZWYtd2F0Y2gtc3ViaGVhZGVyXCI+XG4gICAgICB7LyogU2VhcmNoIFNlY3Rpb24gKi99XG4gICAgICB7IXNob3VsZEhpZGVGaWx0ZXIgJiYgKFxuICAgICAgICA8Qm94IHN4PXt7IG1iOiAyLCBkaXNwbGF5OiBcImZsZXhcIiwgd2lkdGg6IFwiMTAwJVwiIH19PlxuICAgICAgICAgIDxIZWFkZXJTZWFyY2hCYXJcbiAgICAgICAgICAgIGZpbHRlclRlcm09e2ZpbHRlclRlcm19XG4gICAgICAgICAgICBvbkNoYW5nZT17c2V0RmlsdGVyVGVybX1cbiAgICAgICAgICAgIG1heFdpZHRoPVwiMTAwJVwiXG4gICAgICAgICAgICBrZXk9XCJicmllZi1zZWxlY3Qtd2wtaGVhZGVyLXNlYXJjaC1iYXJcIlxuICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJGaW5kIGluIFdhdGNobGlzdHNcIlxuICAgICAgICAgIC8+XG4gICAgICAgIDwvQm94PlxuICAgICAgKX1cblxuICAgICAgey8qIFNlYXJjaCBSZXN1bHRzIENvdW50IC0gU2hvdyB3aGVuIHNlYXJjaGluZyAqL31cbiAgICAgIHtpc1NlYXJjaGluZyAmJiAhaGFzTm9SZXN1bHRzICYmIChcbiAgICAgICAgPFR5cG9ncmFwaHkgdmFyaWFudD1cImJvZHkyXCIgY29sb3I9XCJ0ZXh0LnNlY29uZGFyeVwiIHN4PXt7IG1sOiAxLCBtdDogMywgbWluSGVpZ2h0OiAzMiB9fT5cbiAgICAgICAgICB7ZmlsdGVyZWRSZXN1bHRzQ291bnR9IHdhdGNobGlzdHtmaWx0ZXJlZFJlc3VsdHNDb3VudCAhPT0gMSA/IFwic1wiIDogXCJcIn0gZm91bmQ6XG4gICAgICAgIDwvVHlwb2dyYXBoeT5cbiAgICAgICl9XG5cbiAgICAgIHsvKiBUYWJzIFNlY3Rpb24gLSBIaWRlIHdoZW4gc2VhcmNoaW5nICovfVxuICAgICAgeyFpc1NlYXJjaGluZyAmJiAoXG4gICAgICAgIDxCb3ggc3g9e3sgbWI6IDIgfX0+XG4gICAgICAgICAgPFdhdGNobGlzdHNDYXJkVmlld1RhYnNcbiAgICAgICAgICAgIGNhblNoYXJlPXtjYW5TaGFyZX1cbiAgICAgICAgICAgIHRhYlZhbHVlPXthY3RpdmVUYWJ9XG4gICAgICAgICAgICBoYW5kbGVDaGFuZ2U9e2hhbmRsZVRhYkNoYW5nZX1cbiAgICAgICAgICAgIG9yZ2FuaXphdGlvbk5hbWU9e29yZ2FuaXphdGlvbk5hbWV9XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9Cb3g+XG4gICAgICApfVxuICAgIDwvQm94PlxuICApXG59XG5cbmV4cG9ydCB7IEJyaWVmV2F0Y2hsaXN0c1N1YmhlYWRlciB9XG4iXSwibmFtZXMiOlsiQnJpZWZXYXRjaGxpc3RzU3ViaGVhZGVyIiwic2hvdWxkSGlkZUZpbHRlciIsImFjdGl2ZVRhYiIsIm9uVGFiQ2hhbmdlIiwiY2FuU2hhcmUiLCJmaWx0ZXJUZXJtIiwic2V0RmlsdGVyVGVybSIsImZpbHRlcmVkUmVzdWx0c0NvdW50IiwiaXNTZWFyY2hpbmciLCJoYXNOb1Jlc3VsdHMiLCJ1c2VyIiwidXNlVXNlciIsIm9yZ2FuaXphdGlvbk5hbWUiLCJvcmdhbml6YXRpb25NZW1iZXJzaGlwcyIsIm9yZ2FuaXphdGlvbiIsIm5hbWUiLCJERUZBVUxUX09SR0FOSVpBVElPTl9OQU1FIiwiaGFuZGxlVGFiQ2hhbmdlIiwibmV3VmFsdWUiLCJCb3giLCJkYXRhLXRlc3RpZCIsInN4IiwibWIiLCJkaXNwbGF5Iiwid2lkdGgiLCJIZWFkZXJTZWFyY2hCYXIiLCJvbkNoYW5nZSIsIm1heFdpZHRoIiwicGxhY2Vob2xkZXIiLCJUeXBvZ3JhcGh5IiwidmFyaWFudCIsImNvbG9yIiwibWwiLCJtdCIsIm1pbkhlaWdodCIsIldhdGNobGlzdHNDYXJkVmlld1RhYnMiLCJ0YWJWYWx1ZSIsImhhbmRsZUNoYW5nZSJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBNEVTQTs7O2VBQUFBOzs7OzRCQTVFZTt3QkFDUTtzQkFDQTs0QkFDc0I7MkJBQ1o7QUFjMUMsU0FBU0EseUJBQXlCLEVBQ2hDQyxnQkFBZ0IsRUFDaEJDLFNBQVMsRUFDVEMsV0FBVyxFQUNYQyxRQUFRLEVBQ1JDLFVBQVUsRUFDVkMsYUFBYSxFQUNiQyxvQkFBb0IsRUFDcEJDLFdBQVcsRUFDWEMsWUFBWSxFQUNrQjtRQUc1QkMsNkNBQUFBLGdDQUFBQTtJQUZGLE1BQU0sRUFBRUEsSUFBSSxFQUFFLEdBQUdDLElBQUFBLG1CQUFPO0lBQ3hCLE1BQU1DLG1CQUNKRixDQUFBQSxpQkFBQUEsNEJBQUFBLGdDQUFBQSxLQUFNRyx1QkFBdUIsY0FBN0JILHFEQUFBQSxpQ0FBQUEsNkJBQStCLENBQUMsRUFBRSxjQUFsQ0Esc0RBQUFBLDhDQUFBQSwrQkFBb0NJLFlBQVksY0FBaERKLGtFQUFBQSw0Q0FBa0RLLElBQUksS0FBSUMsb0NBQXlCO0lBRXJGLE1BQU1DLGtCQUFrQixDQUFDQztRQUN2QixJQUFJQSxVQUFVO1lBQ1pmLFlBQVllO1FBQ2Q7SUFDRjtJQUVBLHFCQUNFLHNCQUFDQyxTQUFHO1FBQUNDLGVBQVk7O1lBRWQsQ0FBQ25CLGtDQUNBLHFCQUFDa0IsU0FBRztnQkFBQ0UsSUFBSTtvQkFBRUMsSUFBSTtvQkFBR0MsU0FBUztvQkFBUUMsT0FBTztnQkFBTzswQkFDL0MsY0FBQSxxQkFBQ0MsdUJBQWU7b0JBQ2RwQixZQUFZQTtvQkFDWnFCLFVBQVVwQjtvQkFDVnFCLFVBQVM7b0JBRVRDLGFBQVk7bUJBRFI7O1lBT1RwQixlQUFlLENBQUNDLDhCQUNmLHNCQUFDb0IsZ0JBQVU7Z0JBQUNDLFNBQVE7Z0JBQVFDLE9BQU07Z0JBQWlCVixJQUFJO29CQUFFVyxJQUFJO29CQUFHQyxJQUFJO29CQUFHQyxXQUFXO2dCQUFHOztvQkFDbEYzQjtvQkFBcUI7b0JBQVdBLHlCQUF5QixJQUFJLE1BQU07b0JBQUc7OztZQUsxRSxDQUFDQyw2QkFDQSxxQkFBQ1csU0FBRztnQkFBQ0UsSUFBSTtvQkFBRUMsSUFBSTtnQkFBRTswQkFDZixjQUFBLHFCQUFDYSxrQ0FBc0I7b0JBQ3JCL0IsVUFBVUE7b0JBQ1ZnQyxVQUFVbEM7b0JBQ1ZtQyxjQUFjcEI7b0JBQ2RMLGtCQUFrQkE7Ozs7O0FBTTlCIn0=