4e24337fdd27b8293696d818694f8b0b
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "SwiperWithFadingArrows", {
    enumerable: true,
    get: function() {
        return SwiperWithFadingArrows;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _swiper = require("swiper");
const _react1 = require("swiper/react");
const _hooks = require("@rp/react/web/common/hooks");
const _core = require("@rp/react/web/mui/core");
const _icons = require("@rp/react/web/mui/icons");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const ArrowWrapper = (0, _core.styled)(_core.Box, {
    name: "ArrowWrapper",
    shouldForwardProp: (prop)=>prop !== "direction" && prop !== "hideArrow" && prop !== "height" && prop !== "bgColor" && prop !== "top"
})(({ direction, height, bgColor = "#121212", top })=>{
    const isLeftArrow = direction === "left";
    return {
        display: "inline-flex",
        height,
        position: "absolute",
        left: isLeftArrow ? 0 : "initial",
        right: isLeftArrow ? "initial" : 0,
        zIndex: 2,
        top,
        [`&::${isLeftArrow ? "after" : "before"}`]: {
            content: "''",
            background: `linear-gradient(${direction === "left" ? "90deg" : "-90deg"}, ${bgColor} 0%, ${(0, _core.alpha)(bgColor, 0)} 100%)`,
            width: "30px",
            height,
            display: "inline-block",
            pointerEvents: "none"
        }
    };
});
const SwiperWithArrowsWrapper = (0, _core.styled)(_core.Box, {
    name: "SwiperWithArrowsWrapper"
})(({ theme })=>{
    const { isMobile } = (0, _hooks.useDeviceInfo)();
    return {
        display: "flex",
        alignItems: "center",
        "& .swiper": {
            marginLeft: "initial"
        },
        "& svg": {
            cursor: "pointer"
        },
        "& .swiper-slide": {
            width: "auto"
        },
        "& .swiper-slide:nth-of-type(1)": {
            marginLeft: isMobile ? theme.spacing(2) : undefined
        },
        "& .swiper-slide:last-of-type": {
            marginRight: isMobile ? theme.spacing(2) : undefined
        }
    };
});
const SwiperWithFadingArrows = /*#__PURE__*/ (0, _react.forwardRef)((_param, ref)=>{
    var { sx, height = 30, bgColor, children, top } = _param, rest = _object_without_properties(_param, [
        "sx",
        "height",
        "bgColor",
        "children",
        "top"
    ]);
    const [prevRef, setPrevRef] = (0, _react.useState)(null);
    const [nextRef, setNextRef] = (0, _react.useState)(null);
    const { isMobile } = (0, _hooks.useDeviceInfo)();
    const [status, setStatus] = (0, _react.useState)({
        isBeginning: true,
        isEnd: false
    });
    const hideNavigation = status.isBeginning && status.isEnd || !isMobile;
    const hideLeftArrow = !status.isBeginning;
    const hideRightArrow = status.isEnd;
    const theme = (0, _core.useTheme)();
    const backgroundColor = bgColor !== null && bgColor !== void 0 ? bgColor : theme.palette.surface.background;
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(SwiperWithArrowsWrapper, {
        sx: sx,
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Fade, {
                in: hideLeftArrow && hideNavigation,
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(ArrowWrapper, {
                    onClick: (ev)=>ev.stopPropagation(),
                    className: "swiper-arrow-wrapper",
                    bgColor: backgroundColor,
                    ref: setPrevRef,
                    direction: "left",
                    height: height,
                    hideArrow: hideLeftArrow,
                    top: top,
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.ChevronLeft, {
                        sx: {
                            backgroundColor: backgroundColor,
                            height
                        }
                    })
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_react1.Swiper, _object_spread_props(_object_spread({
                ref: ref,
                onAfterInit: (swiper)=>{
                    setTimeout(()=>{
                        setStatus({
                            isBeginning: swiper.isBeginning,
                            isEnd: swiper.isEnd
                        });
                    }, 100);
                },
                onResize: (swiper)=>{
                    setStatus({
                        isBeginning: swiper.isBeginning,
                        isEnd: swiper.isEnd
                    });
                },
                onUpdate: (swiper)=>{
                    setStatus({
                        isBeginning: swiper.isBeginning,
                        isEnd: swiper.isEnd
                    });
                },
                onSliderMove: (swiper)=>{
                    setStatus({
                        isBeginning: swiper.isBeginning,
                        isEnd: swiper.isEnd
                    });
                },
                onSlideNextTransitionEnd: (swiper)=>{
                    setStatus({
                        isBeginning: swiper.isBeginning,
                        isEnd: swiper.isEnd
                    });
                },
                onSlideResetTransitionEnd: (swiper)=>{
                    setStatus({
                        isBeginning: swiper.isBeginning,
                        isEnd: swiper.isEnd
                    });
                },
                onSlidePrevTransitionEnd: (swiper)=>setStatus({
                        isBeginning: swiper.isBeginning,
                        isEnd: swiper.isEnd
                    }),
                modules: [
                    _swiper.Navigation
                ],
                slidesPerView: "auto",
                navigation: {
                    enabled: hideNavigation,
                    prevEl: prevRef,
                    nextEl: nextRef
                }
            }, rest), {
                "data-testid": "SourceSlider",
                children: children
            })),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Fade, {
                in: !hideRightArrow && hideNavigation,
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(ArrowWrapper, {
                    onClick: (ev)=>ev.stopPropagation(),
                    className: "swiper-arrow-wrapper",
                    bgColor: backgroundColor,
                    ref: setNextRef,
                    height: height,
                    direction: "right",
                    hideArrow: hideRightArrow,
                    top: top,
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.ChevronRight, {
                        sx: {
                            backgroundColor,
                            height
                        }
                    })
                })
            })
        ]
    });
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9jb21wb3NpdGUtY29tcG9uZW50cy9zcmMvU3dpcGVyL1N3aXBlcldpdGhGYWRpbmdBcnJvd3MudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFByb3BzV2l0aENoaWxkcmVuLCBmb3J3YXJkUmVmLCB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgeyBOYXZpZ2F0aW9uIH0gZnJvbSBcInN3aXBlclwiXG5pbXBvcnQgeyBTd2lwZXIsIFN3aXBlclByb3BzLCBTd2lwZXJSZWYgfSBmcm9tIFwic3dpcGVyL3JlYWN0XCJcbmltcG9ydCB7IHVzZURldmljZUluZm8gfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9jb21tb24vaG9va3NcIlxuaW1wb3J0IHsgQm94LCBGYWRlLCBTeFByb3BzLCBhbHBoYSwgc3R5bGVkLCB1c2VUaGVtZSB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL211aS9jb3JlXCJcbmltcG9ydCB7IENoZXZyb25MZWZ0LCBDaGV2cm9uUmlnaHQgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9tdWkvaWNvbnNcIlxuXG5jb25zdCBBcnJvd1dyYXBwZXIgPSBzdHlsZWQoQm94LCB7XG4gIG5hbWU6IFwiQXJyb3dXcmFwcGVyXCIsXG4gIHNob3VsZEZvcndhcmRQcm9wOiBwcm9wID0+XG4gICAgcHJvcCAhPT0gXCJkaXJlY3Rpb25cIiAmJlxuICAgIHByb3AgIT09IFwiaGlkZUFycm93XCIgJiZcbiAgICBwcm9wICE9PSBcImhlaWdodFwiICYmXG4gICAgcHJvcCAhPT0gXCJiZ0NvbG9yXCIgJiZcbiAgICBwcm9wICE9PSBcInRvcFwiLFxufSk8e1xuICBkaXJlY3Rpb246IFwibGVmdFwiIHwgXCJyaWdodFwiXG4gIGhpZGVBcnJvdz86IGJvb2xlYW5cbiAgaGVpZ2h0OiBudW1iZXJcbiAgYmdDb2xvcj86IHN0cmluZ1xuICB0b3A/OiBudW1iZXJcbn0+KCh7IGRpcmVjdGlvbiwgaGVpZ2h0LCBiZ0NvbG9yID0gXCIjMTIxMjEyXCIsIHRvcCB9KSA9PiB7XG4gIGNvbnN0IGlzTGVmdEFycm93ID0gZGlyZWN0aW9uID09PSBcImxlZnRcIlxuICByZXR1cm4ge1xuICAgIGRpc3BsYXk6IFwiaW5saW5lLWZsZXhcIixcbiAgICBoZWlnaHQsXG4gICAgcG9zaXRpb246IFwiYWJzb2x1dGVcIixcbiAgICBsZWZ0OiBpc0xlZnRBcnJvdyA/IDAgOiBcImluaXRpYWxcIixcbiAgICByaWdodDogaXNMZWZ0QXJyb3cgPyBcImluaXRpYWxcIiA6IDAsXG4gICAgekluZGV4OiAyLFxuICAgIHRvcCxcbiAgICBbYCY6OiR7aXNMZWZ0QXJyb3cgPyBcImFmdGVyXCIgOiBcImJlZm9yZVwifWBdOiB7XG4gICAgICBjb250ZW50OiBcIicnXCIsXG4gICAgICBiYWNrZ3JvdW5kOiBgbGluZWFyLWdyYWRpZW50KCR7XG4gICAgICAgIGRpcmVjdGlvbiA9PT0gXCJsZWZ0XCIgPyBcIjkwZGVnXCIgOiBcIi05MGRlZ1wiXG4gICAgICB9LCAke2JnQ29sb3J9IDAlLCAke2FscGhhKGJnQ29sb3IsIDApfSAxMDAlKWAsXG4gICAgICB3aWR0aDogXCIzMHB4XCIsXG4gICAgICBoZWlnaHQsXG4gICAgICBkaXNwbGF5OiBcImlubGluZS1ibG9ja1wiLFxuICAgICAgcG9pbnRlckV2ZW50czogXCJub25lXCIsXG4gICAgfSxcbiAgfVxufSlcblxuY29uc3QgU3dpcGVyV2l0aEFycm93c1dyYXBwZXIgPSBzdHlsZWQoQm94LCB7XG4gIG5hbWU6IFwiU3dpcGVyV2l0aEFycm93c1dyYXBwZXJcIixcbn0pKCh7IHRoZW1lIH0pID0+IHtcbiAgY29uc3QgeyBpc01vYmlsZSB9ID0gdXNlRGV2aWNlSW5mbygpXG4gIHJldHVybiB7XG4gICAgZGlzcGxheTogXCJmbGV4XCIsXG4gICAgYWxpZ25JdGVtczogXCJjZW50ZXJcIixcbiAgICBcIiYgLnN3aXBlclwiOiB7IG1hcmdpbkxlZnQ6IFwiaW5pdGlhbFwiIH0sXG4gICAgXCImIHN2Z1wiOiB7IGN1cnNvcjogXCJwb2ludGVyXCIgfSxcbiAgICBcIiYgLnN3aXBlci1zbGlkZVwiOiB7IHdpZHRoOiBcImF1dG9cIiB9LFxuICAgIFwiJiAuc3dpcGVyLXNsaWRlOm50aC1vZi10eXBlKDEpXCI6IHsgbWFyZ2luTGVmdDogaXNNb2JpbGUgPyB0aGVtZS5zcGFjaW5nKDIpIDogdW5kZWZpbmVkIH0sXG4gICAgXCImIC5zd2lwZXItc2xpZGU6bGFzdC1vZi10eXBlXCI6IHsgbWFyZ2luUmlnaHQ6IGlzTW9iaWxlID8gdGhlbWUuc3BhY2luZygyKSA6IHVuZGVmaW5lZCB9LFxuICB9XG59KVxuXG50eXBlIFByb3BzID0gUHJvcHNXaXRoQ2hpbGRyZW4gJlxuICBTd2lwZXJQcm9wcyAmIHtcbiAgICBoZWlnaHQ/OiBudW1iZXJcbiAgICBiZ0NvbG9yPzogc3RyaW5nXG4gICAgc3g/OiBTeFByb3BzXG4gICAgdG9wPzogbnVtYmVyXG4gIH1cblxuY29uc3QgU3dpcGVyV2l0aEZhZGluZ0Fycm93cyA9IGZvcndhcmRSZWY8U3dpcGVyUmVmIHwgbnVsbCwgUHJvcHM+KFxuICAoeyBzeCwgaGVpZ2h0ID0gMzAsIGJnQ29sb3IsIGNoaWxkcmVuLCB0b3AsIC4uLnJlc3QgfSwgcmVmKSA9PiB7XG4gICAgY29uc3QgW3ByZXZSZWYsIHNldFByZXZSZWZdID0gdXNlU3RhdGU8SFRNTEJ1dHRvbkVsZW1lbnQgfCBudWxsPihudWxsKVxuICAgIGNvbnN0IFtuZXh0UmVmLCBzZXROZXh0UmVmXSA9IHVzZVN0YXRlPEhUTUxCdXR0b25FbGVtZW50IHwgbnVsbD4obnVsbClcbiAgICBjb25zdCB7IGlzTW9iaWxlIH0gPSB1c2VEZXZpY2VJbmZvKClcbiAgICBjb25zdCBbc3RhdHVzLCBzZXRTdGF0dXNdID0gdXNlU3RhdGUoeyBpc0JlZ2lubmluZzogdHJ1ZSwgaXNFbmQ6IGZhbHNlIH0pXG4gICAgY29uc3QgaGlkZU5hdmlnYXRpb24gPSAoc3RhdHVzLmlzQmVnaW5uaW5nICYmIHN0YXR1cy5pc0VuZCkgfHwgIWlzTW9iaWxlXG4gICAgY29uc3QgaGlkZUxlZnRBcnJvdyA9ICFzdGF0dXMuaXNCZWdpbm5pbmdcbiAgICBjb25zdCBoaWRlUmlnaHRBcnJvdyA9IHN0YXR1cy5pc0VuZFxuICAgIGNvbnN0IHRoZW1lID0gdXNlVGhlbWUoKVxuICAgIGNvbnN0IGJhY2tncm91bmRDb2xvciA9IGJnQ29sb3IgPz8gdGhlbWUucGFsZXR0ZS5zdXJmYWNlLmJhY2tncm91bmRcblxuICAgIHJldHVybiAoXG4gICAgICA8U3dpcGVyV2l0aEFycm93c1dyYXBwZXIgc3g9e3N4fT5cbiAgICAgICAgPEZhZGUgaW49e2hpZGVMZWZ0QXJyb3cgJiYgaGlkZU5hdmlnYXRpb259PlxuICAgICAgICAgIDxBcnJvd1dyYXBwZXJcbiAgICAgICAgICAgIG9uQ2xpY2s9e2V2ID0+IGV2LnN0b3BQcm9wYWdhdGlvbigpfVxuICAgICAgICAgICAgY2xhc3NOYW1lPVwic3dpcGVyLWFycm93LXdyYXBwZXJcIlxuICAgICAgICAgICAgYmdDb2xvcj17YmFja2dyb3VuZENvbG9yfVxuICAgICAgICAgICAgcmVmPXtzZXRQcmV2UmVmfVxuICAgICAgICAgICAgZGlyZWN0aW9uPVwibGVmdFwiXG4gICAgICAgICAgICBoZWlnaHQ9e2hlaWdodH1cbiAgICAgICAgICAgIGhpZGVBcnJvdz17aGlkZUxlZnRBcnJvd31cbiAgICAgICAgICAgIHRvcD17dG9wfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIDxDaGV2cm9uTGVmdFxuICAgICAgICAgICAgICBzeD17e1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogYmFja2dyb3VuZENvbG9yLFxuICAgICAgICAgICAgICAgIGhlaWdodCxcbiAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9BcnJvd1dyYXBwZXI+XG4gICAgICAgIDwvRmFkZT5cbiAgICAgICAgPFN3aXBlclxuICAgICAgICAgIHJlZj17cmVmfVxuICAgICAgICAgIG9uQWZ0ZXJJbml0PXtzd2lwZXIgPT4ge1xuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgIHNldFN0YXR1cyh7IGlzQmVnaW5uaW5nOiBzd2lwZXIuaXNCZWdpbm5pbmcsIGlzRW5kOiBzd2lwZXIuaXNFbmQgfSlcbiAgICAgICAgICAgIH0sIDEwMClcbiAgICAgICAgICB9fVxuICAgICAgICAgIG9uUmVzaXplPXtzd2lwZXIgPT4ge1xuICAgICAgICAgICAgc2V0U3RhdHVzKHsgaXNCZWdpbm5pbmc6IHN3aXBlci5pc0JlZ2lubmluZywgaXNFbmQ6IHN3aXBlci5pc0VuZCB9KVxuICAgICAgICAgIH19XG4gICAgICAgICAgb25VcGRhdGU9e3N3aXBlciA9PiB7XG4gICAgICAgICAgICBzZXRTdGF0dXMoeyBpc0JlZ2lubmluZzogc3dpcGVyLmlzQmVnaW5uaW5nLCBpc0VuZDogc3dpcGVyLmlzRW5kIH0pXG4gICAgICAgICAgfX1cbiAgICAgICAgICBvblNsaWRlck1vdmU9e3N3aXBlciA9PiB7XG4gICAgICAgICAgICBzZXRTdGF0dXMoeyBpc0JlZ2lubmluZzogc3dpcGVyLmlzQmVnaW5uaW5nLCBpc0VuZDogc3dpcGVyLmlzRW5kIH0pXG4gICAgICAgICAgfX1cbiAgICAgICAgICBvblNsaWRlTmV4dFRyYW5zaXRpb25FbmQ9e3N3aXBlciA9PiB7XG4gICAgICAgICAgICBzZXRTdGF0dXMoeyBpc0JlZ2lubmluZzogc3dpcGVyLmlzQmVnaW5uaW5nLCBpc0VuZDogc3dpcGVyLmlzRW5kIH0pXG4gICAgICAgICAgfX1cbiAgICAgICAgICBvblNsaWRlUmVzZXRUcmFuc2l0aW9uRW5kPXtzd2lwZXIgPT4ge1xuICAgICAgICAgICAgc2V0U3RhdHVzKHsgaXNCZWdpbm5pbmc6IHN3aXBlci5pc0JlZ2lubmluZywgaXNFbmQ6IHN3aXBlci5pc0VuZCB9KVxuICAgICAgICAgIH19XG4gICAgICAgICAgb25TbGlkZVByZXZUcmFuc2l0aW9uRW5kPXtzd2lwZXIgPT5cbiAgICAgICAgICAgIHNldFN0YXR1cyh7IGlzQmVnaW5uaW5nOiBzd2lwZXIuaXNCZWdpbm5pbmcsIGlzRW5kOiBzd2lwZXIuaXNFbmQgfSlcbiAgICAgICAgICB9XG4gICAgICAgICAgbW9kdWxlcz17W05hdmlnYXRpb25dfVxuICAgICAgICAgIHNsaWRlc1BlclZpZXc9e1wiYXV0b1wifVxuICAgICAgICAgIG5hdmlnYXRpb249e3tcbiAgICAgICAgICAgIGVuYWJsZWQ6IGhpZGVOYXZpZ2F0aW9uLFxuICAgICAgICAgICAgcHJldkVsOiBwcmV2UmVmLFxuICAgICAgICAgICAgbmV4dEVsOiBuZXh0UmVmLFxuICAgICAgICAgIH19XG4gICAgICAgICAgey4uLnJlc3R9XG4gICAgICAgICAgZGF0YS10ZXN0aWQ9e1wiU291cmNlU2xpZGVyXCJ9XG4gICAgICAgID5cbiAgICAgICAgICB7Y2hpbGRyZW59XG4gICAgICAgIDwvU3dpcGVyPlxuICAgICAgICA8RmFkZSBpbj17IWhpZGVSaWdodEFycm93ICYmIGhpZGVOYXZpZ2F0aW9ufT5cbiAgICAgICAgICA8QXJyb3dXcmFwcGVyXG4gICAgICAgICAgICBvbkNsaWNrPXtldiA9PiBldi5zdG9wUHJvcGFnYXRpb24oKX1cbiAgICAgICAgICAgIGNsYXNzTmFtZT1cInN3aXBlci1hcnJvdy13cmFwcGVyXCJcbiAgICAgICAgICAgIGJnQ29sb3I9e2JhY2tncm91bmRDb2xvcn1cbiAgICAgICAgICAgIHJlZj17c2V0TmV4dFJlZn1cbiAgICAgICAgICAgIGhlaWdodD17aGVpZ2h0fVxuICAgICAgICAgICAgZGlyZWN0aW9uPVwicmlnaHRcIlxuICAgICAgICAgICAgaGlkZUFycm93PXtoaWRlUmlnaHRBcnJvd31cbiAgICAgICAgICAgIHRvcD17dG9wfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIDxDaGV2cm9uUmlnaHRcbiAgICAgICAgICAgICAgc3g9e3tcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3IsXG4gICAgICAgICAgICAgICAgaGVpZ2h0LFxuICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L0Fycm93V3JhcHBlcj5cbiAgICAgICAgPC9GYWRlPlxuICAgICAgPC9Td2lwZXJXaXRoQXJyb3dzV3JhcHBlcj5cbiAgICApXG4gIH0sXG4pXG5cbmV4cG9ydCB7IFN3aXBlcldpdGhGYWRpbmdBcnJvd3MgfVxuIl0sIm5hbWVzIjpbIlN3aXBlcldpdGhGYWRpbmdBcnJvd3MiLCJBcnJvd1dyYXBwZXIiLCJzdHlsZWQiLCJCb3giLCJuYW1lIiwic2hvdWxkRm9yd2FyZFByb3AiLCJwcm9wIiwiZGlyZWN0aW9uIiwiaGVpZ2h0IiwiYmdDb2xvciIsInRvcCIsImlzTGVmdEFycm93IiwiZGlzcGxheSIsInBvc2l0aW9uIiwibGVmdCIsInJpZ2h0IiwiekluZGV4IiwiY29udGVudCIsImJhY2tncm91bmQiLCJhbHBoYSIsIndpZHRoIiwicG9pbnRlckV2ZW50cyIsIlN3aXBlcldpdGhBcnJvd3NXcmFwcGVyIiwidGhlbWUiLCJpc01vYmlsZSIsInVzZURldmljZUluZm8iLCJhbGlnbkl0ZW1zIiwibWFyZ2luTGVmdCIsImN1cnNvciIsInNwYWNpbmciLCJ1bmRlZmluZWQiLCJtYXJnaW5SaWdodCIsImZvcndhcmRSZWYiLCJyZWYiLCJzeCIsImNoaWxkcmVuIiwicmVzdCIsInByZXZSZWYiLCJzZXRQcmV2UmVmIiwidXNlU3RhdGUiLCJuZXh0UmVmIiwic2V0TmV4dFJlZiIsInN0YXR1cyIsInNldFN0YXR1cyIsImlzQmVnaW5uaW5nIiwiaXNFbmQiLCJoaWRlTmF2aWdhdGlvbiIsImhpZGVMZWZ0QXJyb3ciLCJoaWRlUmlnaHRBcnJvdyIsInVzZVRoZW1lIiwiYmFja2dyb3VuZENvbG9yIiwicGFsZXR0ZSIsInN1cmZhY2UiLCJGYWRlIiwiaW4iLCJvbkNsaWNrIiwiZXYiLCJzdG9wUHJvcGFnYXRpb24iLCJjbGFzc05hbWUiLCJoaWRlQXJyb3ciLCJDaGV2cm9uTGVmdCIsIlN3aXBlciIsIm9uQWZ0ZXJJbml0Iiwic3dpcGVyIiwic2V0VGltZW91dCIsIm9uUmVzaXplIiwib25VcGRhdGUiLCJvblNsaWRlck1vdmUiLCJvblNsaWRlTmV4dFRyYW5zaXRpb25FbmQiLCJvblNsaWRlUmVzZXRUcmFuc2l0aW9uRW5kIiwib25TbGlkZVByZXZUcmFuc2l0aW9uRW5kIiwibW9kdWxlcyIsIk5hdmlnYXRpb24iLCJzbGlkZXNQZXJWaWV3IiwibmF2aWdhdGlvbiIsImVuYWJsZWQiLCJwcmV2RWwiLCJuZXh0RWwiLCJkYXRhLXRlc3RpZCIsIkNoZXZyb25SaWdodCJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkFpS1NBOzs7ZUFBQUE7Ozs7dUJBaksrQzt3QkFDN0I7d0JBQ29CO3VCQUNqQjtzQkFDOEI7dUJBQ2xCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUUxQyxNQUFNQyxlQUFlQyxJQUFBQSxZQUFNLEVBQUNDLFNBQUcsRUFBRTtJQUMvQkMsTUFBTTtJQUNOQyxtQkFBbUJDLENBQUFBLE9BQ2pCQSxTQUFTLGVBQ1RBLFNBQVMsZUFDVEEsU0FBUyxZQUNUQSxTQUFTLGFBQ1RBLFNBQVM7QUFDYixHQU1HLENBQUMsRUFBRUMsU0FBUyxFQUFFQyxNQUFNLEVBQUVDLFVBQVUs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