b8a80917412eea95a9a96df156544ab2
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "NestedSuggestionIcon", {
    enumerable: true,
    get: function() {
        return NestedSuggestionIcon;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _theme = require("@rp/react/theme");
const _hooks = require("@rp/react/web/common/hooks");
const IconWrapper = (0, _theme.styled)("div", {
    shouldForwardProp: (prop)=>prop !== "isMobile"
})(({ theme, isMobile })=>({
        paddingInline: theme.spacing(1.25),
        "::after": {
            content: "''",
            position: "absolute",
            height: isMobile ? 25 : 10,
            top: isMobile ? -25 : -10,
            width: 1,
            backgroundColor: isMobile ? theme.palette.grey[500] : theme.palette.grey[300]
        }
    }));
const DefaultTreeIcon = (0, _theme.styled)("div", {
    shouldForwardProp: (prop)=>prop !== "isMobile"
})(({ theme, isMobile })=>({
        "::before": {
            content: "''",
            position: "absolute",
            height: 1,
            width: 10,
            backgroundColor: isMobile ? theme.palette.grey[500] : theme.palette.grey[300]
        },
        "::after": {
            content: "''",
            position: "absolute",
            height: "100%",
            width: 1,
            backgroundColor: isMobile ? theme.palette.grey[500] : theme.palette.grey[300]
        }
    }));
const LastTreeIcon = (0, _theme.styled)("div", {
    shouldForwardProp: (prop)=>prop !== "isMobile"
})(({ theme, isMobile })=>({
        "::before": {
            content: "''",
            position: "absolute",
            height: 1,
            width: 10,
            backgroundColor: isMobile ? theme.palette.grey[500] : theme.palette.grey[300]
        },
        "::after": {
            content: "''",
            position: "absolute",
            height: "50%",
            top: 0,
            width: 1,
            backgroundColor: isMobile ? theme.palette.grey[500] : theme.palette.grey[300]
        }
    }));
const NestedSuggestionIcon = ({ type })=>{
    const { isMobile } = (0, _hooks.useDeviceInfo)();
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(IconWrapper, {
        isMobile: isMobile,
        "data-testid": "nested-suggestion-icon",
        children: type === "default" ? /*#__PURE__*/ (0, _jsxruntime.jsx)(DefaultTreeIcon, {
            isMobile: isMobile
        }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(LastTreeIcon, {
            isMobile: isMobile
        })
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9zZWFyY2gtYXV0b3N1Z2dlc3QtaW5wdXQvc3JjL2xpYi9TdWdnZXN0aW9uSW5wdXQvTmVzdGVkU3VnZ2VzdGlvbkljb24udHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHN0eWxlZCB9IGZyb20gXCJAcnAvcmVhY3QvdGhlbWVcIlxuaW1wb3J0IHsgdXNlRGV2aWNlSW5mbyB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL2NvbW1vbi9ob29rc1wiXG5cbmNvbnN0IEljb25XcmFwcGVyID0gc3R5bGVkKFwiZGl2XCIsIHsgc2hvdWxkRm9yd2FyZFByb3A6IHByb3AgPT4gcHJvcCAhPT0gXCJpc01vYmlsZVwiIH0pPHtcbiAgaXNNb2JpbGU6IGJvb2xlYW5cbn0+KCh7IHRoZW1lLCBpc01vYmlsZSB9KSA9PiAoe1xuICBwYWRkaW5nSW5saW5lOiB0aGVtZS5zcGFjaW5nKDEuMjUpLFxuXG4gIFwiOjphZnRlclwiOiB7XG4gICAgY29udGVudDogXCInJ1wiLFxuICAgIHBvc2l0aW9uOiBcImFic29sdXRlXCIsXG4gICAgaGVpZ2h0OiBpc01vYmlsZSA/IDI1IDogMTAsXG4gICAgdG9wOiBpc01vYmlsZSA/IC0yNSA6IC0xMCxcbiAgICB3aWR0aDogMSxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IGlzTW9iaWxlID8gdGhlbWUucGFsZXR0ZS5ncmV5WzUwMF0gOiB0aGVtZS5wYWxldHRlLmdyZXlbMzAwXSxcbiAgfSxcbn0pKVxuXG5jb25zdCBEZWZhdWx0VHJlZUljb24gPSBzdHlsZWQoXCJkaXZcIiwgeyBzaG91bGRGb3J3YXJkUHJvcDogcHJvcCA9PiBwcm9wICE9PSBcImlzTW9iaWxlXCIgfSk8e1xuICBpc01vYmlsZTogYm9vbGVhblxufT4oKHsgdGhlbWUsIGlzTW9iaWxlIH0pID0+ICh7XG4gIFwiOjpiZWZvcmVcIjoge1xuICAgIGNvbnRlbnQ6IFwiJydcIixcbiAgICBwb3NpdGlvbjogXCJhYnNvbHV0ZVwiLFxuICAgIGhlaWdodDogMSxcbiAgICB3aWR0aDogMTAsXG4gICAgYmFja2dyb3VuZENvbG9yOiBpc01vYmlsZSA/IHRoZW1lLnBhbGV0dGUuZ3JleVs1MDBdIDogdGhlbWUucGFsZXR0ZS5ncmV5WzMwMF0sXG4gIH0sXG5cbiAgXCI6OmFmdGVyXCI6IHtcbiAgICBjb250ZW50OiBcIicnXCIsXG4gICAgcG9zaXRpb246IFwiYWJzb2x1dGVcIixcbiAgICBoZWlnaHQ6IFwiMTAwJVwiLFxuICAgIHdpZHRoOiAxLFxuICAgIGJhY2tncm91bmRDb2xvcjogaXNNb2JpbGUgPyB0aGVtZS5wYWxldHRlLmdyZXlbNTAwXSA6IHRoZW1lLnBhbGV0dGUuZ3JleVszMDBdLFxuICB9LFxufSkpXG5cbmNvbnN0IExhc3RUcmVlSWNvbiA9IHN0eWxlZChcImRpdlwiLCB7IHNob3VsZEZvcndhcmRQcm9wOiBwcm9wID0+IHByb3AgIT09IFwiaXNNb2JpbGVcIiB9KTx7XG4gIGlzTW9iaWxlOiBib29sZWFuXG59PigoeyB0aGVtZSwgaXNNb2JpbGUgfSkgPT4gKHtcbiAgXCI6OmJlZm9yZVwiOiB7XG4gICAgY29udGVudDogXCInJ1wiLFxuICAgIHBvc2l0aW9uOiBcImFic29sdXRlXCIsXG4gICAgaGVpZ2h0OiAxLFxuICAgIHdpZHRoOiAxMCxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IGlzTW9iaWxlID8gdGhlbWUucGFsZXR0ZS5ncmV5WzUwMF0gOiB0aGVtZS5wYWxldHRlLmdyZXlbMzAwXSxcbiAgfSxcblxuICBcIjo6YWZ0ZXJcIjoge1xuICAgIGNvbnRlbnQ6IFwiJydcIixcbiAgICBwb3NpdGlvbjogXCJhYnNvbHV0ZVwiLFxuICAgIGhlaWdodDogXCI1MCVcIixcbiAgICB0b3A6IDAsXG4gICAgd2lkdGg6IDEsXG4gICAgYmFja2dyb3VuZENvbG9yOiBpc01vYmlsZSA/IHRoZW1lLnBhbGV0dGUuZ3JleVs1MDBdIDogdGhlbWUucGFsZXR0ZS5ncmV5WzMwMF0sXG4gIH0sXG59KSlcblxudHlwZSBQcm9wcyA9IHtcbiAgdHlwZTogXCJkZWZhdWx0XCIgfCBcImxhc3RcIlxufVxuXG5jb25zdCBOZXN0ZWRTdWdnZXN0aW9uSWNvbiA9ICh7IHR5cGUgfTogUHJvcHMpID0+IHtcbiAgY29uc3QgeyBpc01vYmlsZSB9ID0gdXNlRGV2aWNlSW5mbygpXG4gIHJldHVybiAoXG4gICAgPEljb25XcmFwcGVyIGlzTW9iaWxlPXtpc01vYmlsZX0gZGF0YS10ZXN0aWQ9XCJuZXN0ZWQtc3VnZ2VzdGlvbi1pY29uXCI+XG4gICAgICB7dHlwZSA9PT0gXCJkZWZhdWx0XCIgPyAoXG4gICAgICAgIDxEZWZhdWx0VHJlZUljb24gaXNNb2JpbGU9e2lzTW9iaWxlfSAvPlxuICAgICAgKSA6IChcbiAgICAgICAgPExhc3RUcmVlSWNvbiBpc01vYmlsZT17aXNNb2JpbGV9IC8+XG4gICAgICApfVxuICAgIDwvSWNvbldyYXBwZXI+XG4gIClcbn1cblxuZXhwb3J0IHsgTmVzdGVkU3VnZ2VzdGlvbkljb24gfVxuIl0sIm5hbWVzIjpbIk5lc3RlZFN1Z2dlc3Rpb25JY29uIiwiSWNvbldyYXBwZXIiLCJzdHlsZWQiLCJzaG91bGRGb3J3YXJkUHJvcCIsInByb3AiLCJ0aGVtZSIsImlzTW9iaWxlIiwicGFkZGluZ0lubGluZSIsInNwYWNpbmciLCJjb250ZW50IiwicG9zaXRpb24iLCJoZWlnaHQiLCJ0b3AiLCJ3aWR0aCIsImJhY2tncm91bmRDb2xvciIsInBhbGV0dGUiLCJncmV5IiwiRGVmYXVsdFRyZWVJY29uIiwiTGFzdFRyZWVJY29uIiwidHlwZSIsInVzZURldmljZUluZm8iLCJkYXRhLXRlc3RpZCJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkE0RVNBOzs7ZUFBQUE7Ozs7dUJBNUVjO3VCQUNPO0FBRTlCLE1BQU1DLGNBQWNDLElBQUFBLGFBQU0sRUFBQyxPQUFPO0lBQUVDLG1CQUFtQkMsQ0FBQUEsT0FBUUEsU0FBUztBQUFXLEdBRWhGLENBQUMsRUFBRUMsS0FBSyxFQUFFQyxRQUFRLEVBQUUsR0FBTSxDQUFBO1FBQzNCQyxlQUFlRixNQUFNRyxPQUFPLENBQUM7UUFFN0IsV0FBVztZQUNUQyxTQUFTO1lBQ1RDLFVBQVU7WUFDVkMsUUFBUUwsV0FBVyxLQUFLO1lBQ3hCTSxLQUFLTixXQUFXLENBQUMsS0FBSyxDQUFDO1lBQ3ZCTyxPQUFPO1lBQ1BDLGlCQUFpQlIsV0FBV0QsTUFBTVUsT0FBTyxDQUFDQyxJQUFJLENBQUMsSUFBSSxHQUFHWCxNQUFNVSxPQUFPLENBQUNDLElBQUksQ0FBQyxJQUFJO1FBQy9FO0lBQ0YsQ0FBQTtBQUVBLE1BQU1DLGtCQUFrQmYsSUFBQUEsYUFBTSxFQUFDLE9BQU87SUFBRUMsbUJBQW1CQyxDQUFBQSxPQUFRQSxTQUFTO0FBQVcsR0FFcEYsQ0FBQyxFQUFFQyxLQUFLLEVBQUVDLFFBQVEsRUFBRSxHQUFNLENBQUE7UUFDM0IsWUFBWTtZQUNWRyxTQUFTO1lBQ1RDLFVBQVU7WUFDVkMsUUFBUTtZQUNSRSxPQUFPO1lBQ1BDLGlCQUFpQlIsV0FBV0QsTUFBTVUsT0FBTyxDQUFDQyxJQUFJLENBQUMsSUFBSSxHQUFHWCxNQUFNVSxPQUFPLENBQUNDLElBQUksQ0FBQyxJQUFJO1FBQy9FO1FBRUEsV0FBVztZQUNUUCxTQUFTO1lBQ1RDLFVBQVU7WUFDVkMsUUFBUTtZQUNSRSxPQUFPO1lBQ1BDLGlCQUFpQlIsV0FBV0QsTUFBTVUsT0FBTyxDQUFDQyxJQUFJLENBQUMsSUFBSSxHQUFHWCxNQUFNVSxPQUFPLENBQUNDLElBQUksQ0FBQyxJQUFJO1FBQy9FO0lBQ0YsQ0FBQTtBQUVBLE1BQU1FLGVBQWVoQixJQUFBQSxhQUFNLEVBQUMsT0FBTztJQUFFQyxtQkFBbUJDLENBQUFBLE9BQVFBLFNBQVM7QUFBVyxHQUVqRixDQUFDLEVBQUVDLEtBQUssRUFBRUMsUUFBUSxFQUFFLEdBQU0sQ0FBQTtRQUMzQixZQUFZO1lBQ1ZHLFNBQVM7WUFDVEMsVUFBVTtZQUNWQyxRQUFRO1lBQ1JFLE9BQU87WUFDUEMsaUJBQWlCUixXQUFXRCxNQUFNVSxPQUFPLENBQUNDLElBQUksQ0FBQyxJQUFJLEdBQUdYLE1BQU1VLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDLElBQUk7UUFDL0U7UUFFQSxXQUFXO1lBQ1RQLFNBQVM7WUFDVEMsVUFBVTtZQUNWQyxRQUFRO1lBQ1JDLEtBQUs7WUFDTEMsT0FBTztZQUNQQyxpQkFBaUJSLFdBQVdELE1BQU1VLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDLElBQUksR0FBR1gsTUFBTVUsT0FBTyxDQUFDQyxJQUFJLENBQUMsSUFBSTtRQUMvRTtJQUNGLENBQUE7QUFNQSxNQUFNaEIsdUJBQXVCLENBQUMsRUFBRW1CLElBQUksRUFBUztJQUMzQyxNQUFNLEVBQUViLFFBQVEsRUFBRSxHQUFHYyxJQUFBQSxvQkFBYTtJQUNsQyxxQkFDRSxxQkFBQ25CO1FBQVlLLFVBQVVBO1FBQVVlLGVBQVk7a0JBQzFDRixTQUFTLDBCQUNSLHFCQUFDRjtZQUFnQlgsVUFBVUE7MkJBRTNCLHFCQUFDWTtZQUFhWixVQUFVQTs7O0FBSWhDIn0=