{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/hooks/src/useResizeObserver.ts"],"sourcesContent":["import { useEffect } from \"react\"\n\n/**\n * Custom hook that uses the ResizeObserver API to track changes in the size of an element.\n *\n * @param element - The element to observe for size changes.\n * @param options - Optional ResizeObserver options.\n * @param observerCallback - The callback function to be called when a size change is detected.\n */\n\nconst useResizeObserver = (\n  element: Element | null,\n  options: ResizeObserverOptions | undefined,\n  observerCallback: ResizeObserverCallback,\n): void => {\n  useEffect(() => {\n    if (!element || !(\"ResizeObserver\" in window)) {\n      return undefined\n    }\n\n    const observer = new ResizeObserver(observerCallback)\n\n    observer.observe(element, options)\n\n    return () => {\n      observer.disconnect()\n    }\n  }, [element, options, observerCallback])\n}\n\nexport { useResizeObserver }\n"],"names":["useResizeObserver","element","options","observerCallback","useEffect","window","undefined","observer","ResizeObserver","observe","disconnect"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BA8BSA;;;eAAAA;;;uBA9BiB;AAE1B;;;;;;CAMC,GAED,MAAMA,oBAAoB,CACxBC,SACAC,SACAC;IAEAC,IAAAA,gBAAS,EAAC;QACR,IAAI,CAACH,WAAW,CAAE,CAAA,oBAAoBI,MAAK,GAAI;YAC7C,OAAOC;QACT;QAEA,MAAMC,WAAW,IAAIC,eAAeL;QAEpCI,SAASE,OAAO,CAACR,SAASC;QAE1B,OAAO;YACLK,SAASG,UAAU;QACrB;IACF,GAAG;QAACT;QAASC;QAASC;KAAiB;AACzC"}