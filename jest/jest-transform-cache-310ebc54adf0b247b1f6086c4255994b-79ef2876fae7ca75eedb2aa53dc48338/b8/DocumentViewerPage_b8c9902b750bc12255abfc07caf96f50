baaf7e56ea47444d210f352d58485bc3
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "DocumentViewerPage", {
    enumerable: true,
    get: function() {
        return DocumentViewerPage;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _reactrouterdom = require("react-router-dom");
const _providers = require("@rp/react/common/providers");
const _rpjson = require("@rp/react/common/rpjson");
const _hooks = require("@rp/react/web/common/hooks");
const _router = require("@rp/react/web/router");
const _DocumentsCollectionContainer = require("../DocumentsCollectionContainer");
const _DocumentViewerPageContainer = require("./DocumentViewerPageContainer");
const _DocumentViewerSelector = require("./DocumentViewerSelector");
const _useShouldUseCollectionViewer = require("./hooks/useShouldUseCollectionViewer");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function DocumentViewerPage({ children, backTitle, disableCheckbox = false, disableDocumentDiscovery = false, expression, onChange, onExclude, rpjsonHeaderOffset, pdfHeaderOffset, pdfBodyOffset, onAddToWatchlist, contentContainerProps, disableBackButton = false, isFromChat, customDocumentHeaderProps, customBackClick, documentId: documentIdFromProps, customBackgroundColor, shouldUseScrollTrigger }) {
    const { hasEntitlement } = (0, _providers.useAccount)();
    const [documentParams] = (0, _hooks.useHashParams)();
    const { document: documentIdFromParams = "", private: isPrivate } = documentParams;
    const documentId = documentIdFromProps || documentIdFromParams;
    const navigate = (0, _reactrouterdom.useNavigate)();
    const { data: rpjsonDocument, isLoading: isRpJsonLoading, error } = (0, _rpjson.useRpjson)(documentId, isPrivate ? "private" : "public");
    const { isLimited } = (0, _rpjson.checkDocument)(rpjsonDocument);
    const shouldNavigateToSales = !!documentId && !isLimited && !hasEntitlement("content:read");
    if (shouldNavigateToSales) {
        navigate(_router.CONTACT_SALES_ROUTE, {
            replace: true
        });
    }
    const { shouldUseQuartrViewer, collectionId } = (0, _useShouldUseCollectionViewer.useShouldUseCollectionViewer)({
        rpjsonDocument
    });
    if (shouldUseQuartrViewer) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_DocumentsCollectionContainer.DocumentsCollectionContainer, {
            documentId: documentId,
            collectionId: collectionId,
            isFromChat: isFromChat
        });
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_DocumentViewerPageContainer.DocumentViewerPageContainer, {
        documentId: documentId,
        contentContainerProps: contentContainerProps,
        documentViewer: ()=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_DocumentViewerSelector.DocumentViewerSelector, {
                pdfHeaderOffset: pdfHeaderOffset,
                pdfBodyOffset: pdfBodyOffset,
                isRpJsonLoading: isRpJsonLoading,
                rpjsonDocument: rpjsonDocument,
                rpjsonHeaderOffset: rpjsonHeaderOffset,
                isPrivate: !!isPrivate,
                documentId: documentId,
                backTitle: backTitle,
                disableBackButton: disableBackButton,
                disableCheckbox: disableCheckbox,
                disableDocumentDiscovery: disableDocumentDiscovery,
                expression: expression,
                onChange: onChange,
                onExclude: onExclude,
                onAddToWatchlist: onAddToWatchlist,
                error: error,
                customDocumentHeaderProps: customDocumentHeaderProps,
                customBackClick: customBackClick,
                customBackgroundColor: customBackgroundColor,
                shouldUseScrollTrigger: shouldUseScrollTrigger
            }),
        children: children
    });
}

//# sourceMappingURL=data:application/json;base64,