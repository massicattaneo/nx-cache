e790b84f3cdd1cd0bb9b648ea993b4e6
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "WatchlistsPanelGroup", {
    enumerable: true,
    get: function() {
        return WatchlistsPanelGroup;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _reacthighlightwords = /*#__PURE__*/ _interop_require_default(require("react-highlight-words"));
const _basecomponents = require("@rp/react/web/common/base-components");
const _compositecomponents = require("@rp/react/web/common/composite-components");
const _icons = require("@rp/react/web/icons");
const _core = require("@rp/react/web/mui/core");
const _icons1 = require("@rp/react/web/mui/icons");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const RowContainer = (0, _core.styled)("div", {
    name: "RowContainer"
})(({ theme })=>({
        display: "flex",
        alignItems: "center",
        justifyContent: "space-between",
        height: "26px",
        borderRadius: theme.spacing(0.5),
        paddingLeft: theme.spacing(0.5),
        "@media (hover : hover)": {
            button: {
                display: "none"
            },
            "&:hover": {
                backgroundColor: theme.palette.overlay.surface,
                "& button": {
                    display: "flex"
                }
            }
        }
    }));
const WatchlistsPanelGroup = ({ group, value, onDelete, filterTerm })=>{
    const [showMore, setShowMore] = (0, _react.useState)(false);
    const theme = (0, _core.useTheme)();
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_compositecomponents.GroupTitleStyled, {
                sx: {
                    justifyContent: "space-between"
                },
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.IconEntity, {
                        icon: value.icon
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                        variant: "subtitle1",
                        fontWeight: "bold",
                        sx: {
                            marginRight: "auto"
                        },
                        children: group
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                        variant: "h6",
                        fontSize: 12,
                        color: "text.secondary",
                        children: value.items.length
                    })
                ]
            }),
            value.items.slice(0, showMore ? value.items.length : 5).map(({ name, key, metadata1, category })=>/*#__PURE__*/ (0, _jsxruntime.jsxs)(RowContainer, {
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.EllipsisTooltip, {
                            tooltipText: name,
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_reacthighlightwords.default, {
                                autoEscape: true,
                                highlightStyle: {
                                    color: theme.palette.primary.light
                                },
                                highlightTag: "span",
                                searchWords: [
                                    filterTerm
                                ],
                                textToHighlight: name
                            })
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                            fontSize: 12,
                            sx: {
                                color: "#A4D9FF",
                                m: "4px auto 0 4px"
                            },
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_reacthighlightwords.default, {
                                autoEscape: true,
                                highlightStyle: {
                                    color: theme.palette.primary.light
                                },
                                highlightTag: "span",
                                searchWords: [
                                    filterTerm
                                ],
                                textToHighlight: (category === "Companies" || category === "ETFs") && metadata1 !== undefined ? metadata1 : ""
                            })
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.RPTooltip, {
                            title: "Remove from Watchlist",
                            placement: "bottom-start",
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.IconButton, {
                                    size: "small",
                                    onClick: ()=>onDelete(key),
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons1.Close, {
                                        sx: {
                                            fontSize: "16px",
                                            marginRight: "auto"
                                        }
                                    })
                                })
                            })
                        })
                    ]
                }, key)),
            value.items.length > 5 && /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.ShowMoreButton, {
                sx: {
                    margin: "0",
                    ml: 0.5
                },
                showMore: showMore,
                onClick: ()=>setShowMore(!showMore),
                qty: value.items.length - 5
            })
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,