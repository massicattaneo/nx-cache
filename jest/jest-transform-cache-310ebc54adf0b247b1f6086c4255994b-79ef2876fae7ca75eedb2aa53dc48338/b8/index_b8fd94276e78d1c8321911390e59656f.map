{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/node_modules/trim-lines/index.js"],"sourcesContent":["const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n"],"names":["trimLines","tab","space","value","source","String","search","match","exec","last","lines","push","trimLine","slice","index","length","join","start","end","startIndex","endIndex","code","codePointAt"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAYgBA;;;eAAAA;;;AAZhB,MAAMC,MAAM,EAAE,QAAQ;AACtB,MAAMC,QAAQ,GAAG,OAAO;AAWjB,SAASF,UAAUG,KAAK;IAC7B,MAAMC,SAASC,OAAOF;IACtB,MAAMG,SAAS;IACf,IAAIC,QAAQD,OAAOE,IAAI,CAACJ;IACxB,IAAIK,OAAO;IACX,0BAA0B,GAC1B,MAAMC,QAAQ,EAAE;IAEhB,MAAOH,MAAO;QACZG,MAAMC,IAAI,CACRC,SAASR,OAAOS,KAAK,CAACJ,MAAMF,MAAMO,KAAK,GAAGL,OAAO,GAAG,OACpDF,KAAK,CAAC,EAAE;QAGVE,OAAOF,MAAMO,KAAK,GAAGP,KAAK,CAAC,EAAE,CAACQ,MAAM;QACpCR,QAAQD,OAAOE,IAAI,CAACJ;IACtB;IAEAM,MAAMC,IAAI,CAACC,SAASR,OAAOS,KAAK,CAACJ,OAAOA,OAAO,GAAG;IAElD,OAAOC,MAAMM,IAAI,CAAC;AACpB;AAEA;;;;;;;;;CASC,GACD,SAASJ,SAAST,KAAK,EAAEc,KAAK,EAAEC,GAAG;IACjC,IAAIC,aAAa;IACjB,IAAIC,WAAWjB,MAAMY,MAAM;IAE3B,IAAIE,OAAO;QACT,IAAII,OAAOlB,MAAMmB,WAAW,CAACH;QAE7B,MAAOE,SAASpB,OAAOoB,SAASnB,MAAO;YACrCiB;YACAE,OAAOlB,MAAMmB,WAAW,CAACH;QAC3B;IACF;IAEA,IAAID,KAAK;QACP,IAAIG,OAAOlB,MAAMmB,WAAW,CAACF,WAAW;QAExC,MAAOC,SAASpB,OAAOoB,SAASnB,MAAO;YACrCkB;YACAC,OAAOlB,MAAMmB,WAAW,CAACF,WAAW;QACtC;IACF;IAEA,OAAOA,WAAWD,aAAahB,MAAMU,KAAK,CAACM,YAAYC,YAAY;AACrE"}