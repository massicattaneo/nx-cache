{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/apps/client-web/src/app/pages/Files/FilesV2/hooks/useFilesPagePaneInfo.test.ts"],"sourcesContent":["import { useParams } from \"react-router\"\nimport { RenderHookResult, act, renderHook, waitFor } from \"@testing-library/react\"\nimport { UseFilesPagePaneInfoState, useFilesPagePaneInfo } from \"./useFilesPagePaneInfo\"\n\nlet renderedHook: RenderHookResult<UseFilesPagePaneInfoState, undefined>\n\nconst expectedInitialState = {\n  chatPaneWidth: \"50%\",\n  documentPaneWidth: null,\n  filesPaneWidth: \"50%\",\n  closeChatPane: expect.any(Function),\n  closeDocumentPane: expect.any(Function),\n  expandDocumentPane: expect.any(Function),\n  openChatPane: expect.any(Function),\n  unexpandDocumentPane: expect.any(Function),\n}\n\nconst mockNavigate = jest.fn()\nconst mockUseParams = useParams as jest.Mock\n\njest.mock(\"react-router\", () => ({\n  ...jest.requireActual(\"react-router\"),\n  useNavigate: () => mockNavigate,\n  useParams: jest.fn(),\n}))\n\ndescribe(\"useFilesPagePaneInfo\", () => {\n  describe(\"initial state\", () => {\n    beforeEach(() => {\n      mockUseParams.mockReturnValue({})\n      renderedHook = renderHook(useFilesPagePaneInfo)\n    })\n\n    it(\"should return correct state\", () => {\n      expect(renderedHook.result.current).toStrictEqual(expectedInitialState)\n    })\n  })\n\n  describe(\"methods\", () => {\n    describe(\"close document pane\", () => {\n      beforeEach(() => {\n        mockUseParams.mockReturnValue({ id: \"some-doc-id\" })\n        renderedHook = renderHook(useFilesPagePaneInfo)\n\n        act(renderedHook.result.current.closeDocumentPane)\n        act(renderedHook.rerender)\n      })\n\n      it(\"should call navigate correctly\", () => {\n        expect(mockNavigate).toHaveBeenCalledTimes(1)\n        expect(mockNavigate).toHaveBeenCalledWith(\"/files\", { replace: true })\n      })\n    })\n\n    describe(\"expand document pane\", () => {\n      beforeEach(() => {\n        mockUseParams.mockReturnValue({ id: \"some-doc-id\" })\n        renderedHook = renderHook(useFilesPagePaneInfo)\n\n        act(renderedHook.result.current.expandDocumentPane)\n      })\n\n      it(\"should return correct state\", () => {\n        expect(renderedHook.result.current).toStrictEqual({\n          ...expectedInitialState,\n          chatPaneWidth: null,\n          documentPaneWidth: \"100%\",\n          filesPaneWidth: null,\n        })\n      })\n    })\n\n    describe(\"unexpand document pane\", () => {\n      beforeEach(() => {\n        mockUseParams.mockReturnValue({ id: \"some-doc-id\" })\n        renderedHook = renderHook(useFilesPagePaneInfo)\n        act(renderedHook.result.current.expandDocumentPane)\n        waitFor(() => renderedHook.result.current.documentPaneWidth === \"100%\")\n\n        act(renderedHook.result.current.unexpandDocumentPane)\n      })\n\n      it(\"should return correct state\", () => {\n        expect(renderedHook.result.current).toStrictEqual({\n          ...expectedInitialState,\n          chatPaneWidth: \"33%\",\n          documentPaneWidth: \"33%\",\n          filesPaneWidth: \"34%\",\n        })\n      })\n    })\n\n    describe(\"openChatPane\", () => {\n      beforeEach(() => {\n        mockUseParams.mockReturnValue({ id: \"some-doc-id\" })\n        renderedHook = renderHook(useFilesPagePaneInfo)\n\n        act(renderedHook.result.current.openChatPane)\n      })\n\n      it(\"should return correct state\", () => {\n        expect(renderedHook.result.current).toStrictEqual({\n          ...expectedInitialState,\n          chatPaneWidth: \"33%\",\n          documentPaneWidth: \"33%\",\n          filesPaneWidth: \"34%\",\n        })\n      })\n    })\n\n    describe(\"closeChatPane\", () => {\n      beforeEach(() => {\n        mockUseParams.mockReturnValue({ id: \"some-doc-id\" })\n        renderedHook = renderHook(useFilesPagePaneInfo)\n        act(renderedHook.result.current.openChatPane)\n        waitFor(() => !!renderedHook.result.current)\n\n        act(renderedHook.result.current.closeChatPane)\n      })\n\n      it(\"should return correct state\", () => {\n        expect(renderedHook.result.current).toStrictEqual({\n          ...expectedInitialState,\n          chatPaneWidth: null,\n          documentPaneWidth: \"50%\",\n          filesPaneWidth: \"50%\",\n        })\n      })\n    })\n  })\n})\n"],"names":["jest","mock","requireActual","useNavigate","mockNavigate","useParams","fn","renderedHook","expectedInitialState","chatPaneWidth","documentPaneWidth","filesPaneWidth","closeChatPane","expect","any","Function","closeDocumentPane","expandDocumentPane","openChatPane","unexpandDocumentPane","mockUseParams","describe","beforeEach","mockReturnValue","renderHook","useFilesPagePaneInfo","it","result","current","toStrictEqual","id","act","rerender","toHaveBeenCalledTimes","toHaveBeenCalledWith","replace","waitFor"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}