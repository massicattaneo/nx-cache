{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/apps/client-web/src/app/components/Hub/Files/FilesList/FilesListItemV2.tsx"],"sourcesContent":["import { ChangeEvent, Dispatch, SetStateAction, useCallback, useMemo, useState } from \"react\"\nimport compact from \"lodash/compact\"\nimport Highlighter from \"react-highlight-words\"\nimport { useUser } from \"@clerk/clerk-react\"\nimport { isFileStatusCompleted } from \"@rp/common/utils\"\nimport { FileRowType, formatTime } from \"@rp/common/utils\"\nimport { useClerkOrganizationMember } from \"@rp/react/common/hooks\"\nimport { useAccount } from \"@rp/react/common/providers\"\nimport { ShareIcon } from \"@rp/react/web/common/base-components\"\nimport { UserAvatar } from \"@rp/react/web/common/base-components\"\nimport { HubTableRow } from \"@rp/react/web/common/composite-components\"\nimport { EllipsisTooltip } from \"@rp/react/web/common/composite-components\"\nimport { getSizeAndUnit, useFileActions } from \"@rp/react/web/common/files\"\nimport { Actions } from \"@rp/react/web/common/types\"\nimport { FileIcon } from \"@rp/react/web/icons\"\nimport { Box, Checkbox, Skeleton, useTheme } from \"@rp/react/web/mui/core\"\nimport { FileStatusCell } from \"../FileStatusCell/FileStatusCell\"\nimport { SelectedFile } from \"../Files\"\nimport { FilesListMobilesActions } from \"./FilesListMobilesActions\"\nimport { getOwnerNameData } from \"./filesList.utils\"\nimport { handleFileRowCheckboxChangeFunc } from \"./utils/handleFileRowCheckboxChangeFunc\"\nimport { handleFileRowClickRowFunc } from \"./utils/handleFileRowClickRowFunc\"\n\ntype Props = {\n  item: FileRowType\n  columnsWidth: Array<string>\n  actions: ReturnType<typeof useFileActions>[\"actions\"]\n  selectedFiles: Array<SelectedFile>\n  setSelectedFiles: Dispatch<SetStateAction<Array<SelectedFile>>>\n  filterTerm: string\n  isPlaceholderData?: boolean\n  shared?: boolean\n  isThisFileOpen: boolean\n  shouldUseMinimalList: boolean\n  openChatPane: () => void\n}\n\nfunction FilesListItemV2({\n  item,\n  columnsWidth,\n  actions,\n  selectedFiles,\n  setSelectedFiles,\n  filterTerm,\n  isPlaceholderData,\n  shared,\n  isThisFileOpen,\n  shouldUseMinimalList,\n  openChatPane,\n}: Props) {\n  const [isHover, setIsHover] = useState<Record<string, boolean>>({})\n  const [openMenu, setOpenMenu] = useState(false)\n  const theme = useTheme()\n  const { data: orgUser, isLoading } = useClerkOrganizationMember(item.owner)\n  const { user } = useUser()\n  const { canShare } = useAccount()\n\n  const showCompanyIcon = !!(item.sharedWith && item?.sharedWith?.length > 0)\n\n  const isSelected = !!selectedFiles.find(i => i.id === item.id)\n\n  const { ownerName, ownerDisplayName } = getOwnerNameData(user, orgUser)\n\n  const removeAction = {\n    ...actions.remove,\n    onClick: (file: FileRowType) => {\n      return actions.remove.onClick(file).then(() => {\n        setSelectedFiles(prev => prev.filter(item => item.id !== file.id))\n      })\n    },\n  }\n\n  const mobileActions = [\n    actions.open,\n    actions.chat,\n    canShare ? actions.share : undefined,\n    shared ? undefined : removeAction,\n    actions.download,\n  ].filter(Boolean) as Actions<FileRowType>\n\n  const desktopActions = [\n    actions.open,\n    shared ? actions.chat : undefined,\n    canShare ? actions.share : undefined,\n    shared ? undefined : removeAction,\n    actions.download,\n  ].filter(Boolean) as Actions<FileRowType>\n\n  const onRemove = (item: FileRowType) => {\n    actions.remove.onClick(item)\n  }\n\n  const onRowClick = useCallback(\n    () =>\n      handleFileRowClickRowFunc({\n        actions,\n        item,\n        isSelected,\n        isThisFileOpen,\n        openChatPane,\n        setSelectedFiles,\n        shared: !!shared,\n      }),\n    [actions, isSelected, isThisFileOpen, item, openChatPane, setSelectedFiles, shared],\n  )\n\n  const handleCheckboxChange = useCallback(\n    (_ev: ChangeEvent<HTMLInputElement>, checked: boolean) =>\n      handleFileRowCheckboxChangeFunc({\n        actions,\n        checked,\n        isSelected,\n        isThisFileOpen,\n        item,\n        openChatPane,\n        setSelectedFiles,\n        shared: !!shared,\n      }),\n    [actions, isSelected, isThisFileOpen, item, openChatPane, setSelectedFiles, shared],\n  )\n\n  const columns = useMemo(\n    () =>\n      compact([\n        {\n          node: (\n            <Checkbox\n              disabled={!isFileStatusCompleted(item.status)}\n              checked={isSelected}\n              onClick={ev => ev.stopPropagation()}\n              onChange={handleCheckboxChange}\n            />\n          ),\n        },\n        { node: <FileIcon extension={item.type} /> },\n        {\n          node: (\n            <Box\n              sx={{\n                display: \"flex\",\n                alignItems: \"center\",\n                gap: 1,\n                pr: 2,\n              }}\n            >\n              <EllipsisTooltip tooltipText={item.name} typographyProps={{ fontSize: 14 }}>\n                <Highlighter\n                  autoEscape\n                  highlightStyle={{ color: theme.palette.primary.light }}\n                  highlightTag=\"span\"\n                  searchWords={[filterTerm]}\n                  textToHighlight={item.name}\n                />\n              </EllipsisTooltip>\n              {showCompanyIcon && !shared ? <ShareIcon shared sx={{ mx: 1 }} /> : null}\n            </Box>\n          ),\n        },\n        !shouldUseMinimalList && {\n          node: (\n            <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 1, pr: 2 }}>\n              <UserAvatar\n                isLoading={isLoading}\n                ownerName={ownerName}\n                imgUrl={orgUser?.publicUserData.imageUrl}\n                hasImage={orgUser?.publicUserData.hasImage}\n              />\n              {isLoading ? (\n                <Skeleton width={columnsWidth[3]} />\n              ) : (\n                <EllipsisTooltip tooltipText={ownerName ?? \"\"} typographyProps={{ fontSize: 14 }}>\n                  {ownerDisplayName}\n                </EllipsisTooltip>\n              )}\n            </Box>\n          ),\n        },\n        !shouldUseMinimalList && { text: formatTime(item.date) },\n        !shouldUseMinimalList && { text: getSizeAndUnit(item.size, item.status === \"error\") },\n        {\n          node: (\n            <FileStatusCell\n              onActionClick={action => {\n                if (action.id === \"download\") {\n                  setIsHover({})\n                }\n              }}\n              item={item}\n              rowIsHovered={isHover[item.id]}\n              actions={[...desktopActions]}\n              isOpenMenu={openMenu}\n              setIsOpenMenu={setOpenMenu}\n              onDelete={() => actions.remove.onClick(item)}\n              shouldHideChatIcon\n              isMiniRow={shouldUseMinimalList}\n            />\n          ),\n        },\n      ]),\n    [\n      actions.remove,\n      columnsWidth,\n      desktopActions,\n      filterTerm,\n      handleCheckboxChange,\n      isHover,\n      isLoading,\n      isSelected,\n      item,\n      openMenu,\n      orgUser?.publicUserData.hasImage,\n      orgUser?.publicUserData.imageUrl,\n      ownerDisplayName,\n      ownerName,\n      shared,\n      shouldUseMinimalList,\n      showCompanyIcon,\n      theme.palette.primary.light,\n    ],\n  )\n\n  return (\n    <HubTableRow\n      shouldPreventMobileFormat\n      isPlaceholderData={isPlaceholderData}\n      onMouseEnter={() => setIsHover({ [item.id]: true })}\n      onMouseLeave={() => setIsHover({})}\n      selected={openMenu}\n      onRowClick={isFileStatusCompleted(item.status) ? onRowClick : undefined}\n      mobileActions={\n        <FilesListMobilesActions actions={mobileActions} item={item} onRemove={onRemove} />\n      }\n      columnsWidth={columnsWidth}\n      sx={{\n        gap: 0,\n        backgroundColor: isThisFileOpen ? theme.palette.elevation.dp01 : undefined,\n        borderLeft: `3px solid ${isThisFileOpen ? theme.palette.primary.main : \"transparent\"}`,\n        \"&:hover\": {\n          backgroundColor: theme.palette.elevation.dp01,\n        },\n      }}\n      columns={columns}\n    />\n  )\n}\nexport { FilesListItemV2 }\n"],"names":["FilesListItemV2","item","columnsWidth","actions","selectedFiles","setSelectedFiles","filterTerm","isPlaceholderData","shared","isThisFileOpen","shouldUseMinimalList","openChatPane","isHover","setIsHover","useState","openMenu","setOpenMenu","theme","useTheme","data","orgUser","isLoading","useClerkOrganizationMember","owner","user","useUser","canShare","useAccount","showCompanyIcon","sharedWith","length","isSelected","find","i","id","ownerName","ownerDisplayName","getOwnerNameData","removeAction","remove","onClick","file","then","prev","filter","mobileActions","open","chat","share","undefined","download","Boolean","desktopActions","onRemove","onRowClick","useCallback","handleFileRowClickRowFunc","handleCheckboxChange","_ev","checked","handleFileRowCheckboxChangeFunc","columns","useMemo","compact","node","Checkbox","disabled","isFileStatusCompleted","status","ev","stopPropagation","onChange","FileIcon","extension","type","Box","sx","display","alignItems","gap","pr","EllipsisTooltip","tooltipText","name","typographyProps","fontSize","Highlighter","autoEscape","highlightStyle","color","palette","primary","light","highlightTag","searchWords","textToHighlight","ShareIcon","mx","UserAvatar","imgUrl","publicUserData","imageUrl","hasImage","Skeleton","width","text","formatTime","date","getSizeAndUnit","size","FileStatusCell","onActionClick","action","rowIsHovered","isOpenMenu","setIsOpenMenu","onDelete","shouldHideChatIcon","isMiniRow","HubTableRow","shouldPreventMobileFormat","onMouseEnter","onMouseLeave","selected","FilesListMobilesActions","backgroundColor","elevation","dp01","borderLeft","main"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}