c3fc2a8da177cda9da8baf5ec37d5fbe
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "BriefDashConfigsList", {
    enumerable: true,
    get: function() {
        return BriefDashConfigsList;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _brief = require("@rp/react/common/brief");
const _basecomponents = require("@rp/react/web/common/base-components");
const _core = require("@rp/react/web/mui/core");
const _BriefDashConfigsListHasCards = require("./BriefDashConfigsListHasCards");
const _BriefDashConfigsListNoneCreated = require("./BriefDashConfigsListNoneCreated");
const _BriefDashConfigsListNoneSieved = require("./BriefDashConfigsListNoneSieved");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const BriefDashConfigsList = ({ userBriefConfigs, filterTerm })=>{
    const { sievedUserBriefConfigs } = (0, _brief.useSievedUserBriefConfigs)({
        userBriefConfigs,
        filterTerm
    });
    const isLoading = !userBriefConfigs;
    const hasNoConfigsCreated = !isLoading && (userBriefConfigs === null || userBriefConfigs === void 0 ? void 0 : userBriefConfigs.length) === 0;
    const hasNoSievedConfigs = !hasNoConfigsCreated && sievedUserBriefConfigs.length === 0;
    const hasConfigsToShow = sievedUserBriefConfigs.length > 0;
    if (isLoading) return /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.LoadingSpinner, {});
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
        display: "flex",
        alignItems: "center",
        flexDirection: "column",
        role: "region",
        "aria-label": "briefs list container",
        children: [
            hasNoConfigsCreated && /*#__PURE__*/ (0, _jsxruntime.jsx)(_BriefDashConfigsListNoneCreated.BriefDashConfigsListNoneCreated, {}),
            hasNoSievedConfigs && /*#__PURE__*/ (0, _jsxruntime.jsx)(_BriefDashConfigsListNoneSieved.BriefDashConfigsListNoneSieved, {}),
            hasConfigsToShow && /*#__PURE__*/ (0, _jsxruntime.jsx)(_BriefDashConfigsListHasCards.BriefDashConfigsListHasCards, {
                sievedUserBriefConfigs: sievedUserBriefConfigs,
                isFiltering: !!filterTerm
            })
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2JyaWVmL3NyYy9jb21wb25lbnRzL0JyaWVmRGFzaENvbmZpZ3NMaXN0L0JyaWVmRGFzaENvbmZpZ3NMaXN0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCJcbmltcG9ydCB7IHVzZVNpZXZlZFVzZXJCcmllZkNvbmZpZ3MgfSBmcm9tIFwiQHJwL3JlYWN0L2NvbW1vbi9icmllZlwiXG5pbXBvcnQgeyBCcmllZkNvbmZpZyB9IGZyb20gXCJAcnAvcmVhY3QvdGFuc3RhY2stYXBpL2JyaWVmXCJcbmltcG9ydCB7IExvYWRpbmdTcGlubmVyIH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvY29tbW9uL2Jhc2UtY29tcG9uZW50c1wiXG5pbXBvcnQgeyBCb3ggfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9tdWkvY29yZVwiXG5pbXBvcnQgeyBCcmllZkRhc2hDb25maWdzTGlzdEhhc0NhcmRzIH0gZnJvbSBcIi4vQnJpZWZEYXNoQ29uZmlnc0xpc3RIYXNDYXJkc1wiXG5pbXBvcnQgeyBCcmllZkRhc2hDb25maWdzTGlzdE5vbmVDcmVhdGVkIH0gZnJvbSBcIi4vQnJpZWZEYXNoQ29uZmlnc0xpc3ROb25lQ3JlYXRlZFwiXG5pbXBvcnQgeyBCcmllZkRhc2hDb25maWdzTGlzdE5vbmVTaWV2ZWQgfSBmcm9tIFwiLi9CcmllZkRhc2hDb25maWdzTGlzdE5vbmVTaWV2ZWRcIlxuXG50eXBlIEJyaWVmRGFzaENvbmZpZ3NMaXN0UHJvcHMgPSB7XG4gIHVzZXJCcmllZkNvbmZpZ3M6IEFycmF5PEJyaWVmQ29uZmlnPiB8IHVuZGVmaW5lZFxuICBmaWx0ZXJUZXJtOiBzdHJpbmdcbn1cblxuY29uc3QgQnJpZWZEYXNoQ29uZmlnc0xpc3QgPSAoeyB1c2VyQnJpZWZDb25maWdzLCBmaWx0ZXJUZXJtIH06IEJyaWVmRGFzaENvbmZpZ3NMaXN0UHJvcHMpID0+IHtcbiAgY29uc3QgeyBzaWV2ZWRVc2VyQnJpZWZDb25maWdzIH0gPSB1c2VTaWV2ZWRVc2VyQnJpZWZDb25maWdzKHsgdXNlckJyaWVmQ29uZmlncywgZmlsdGVyVGVybSB9KVxuXG4gIGNvbnN0IGlzTG9hZGluZyA9ICF1c2VyQnJpZWZDb25maWdzXG4gIGNvbnN0IGhhc05vQ29uZmlnc0NyZWF0ZWQgPSAhaXNMb2FkaW5nICYmIHVzZXJCcmllZkNvbmZpZ3M/Lmxlbmd0aCA9PT0gMFxuICBjb25zdCBoYXNOb1NpZXZlZENvbmZpZ3MgPSAhaGFzTm9Db25maWdzQ3JlYXRlZCAmJiBzaWV2ZWRVc2VyQnJpZWZDb25maWdzLmxlbmd0aCA9PT0gMFxuICBjb25zdCBoYXNDb25maWdzVG9TaG93ID0gc2lldmVkVXNlckJyaWVmQ29uZmlncy5sZW5ndGggPiAwXG5cbiAgaWYgKGlzTG9hZGluZykgcmV0dXJuIDxMb2FkaW5nU3Bpbm5lciAvPlxuXG4gIHJldHVybiAoXG4gICAgPEJveFxuICAgICAgZGlzcGxheT1cImZsZXhcIlxuICAgICAgYWxpZ25JdGVtcz1cImNlbnRlclwiXG4gICAgICBmbGV4RGlyZWN0aW9uPVwiY29sdW1uXCJcbiAgICAgIHJvbGU9XCJyZWdpb25cIlxuICAgICAgYXJpYS1sYWJlbD1cImJyaWVmcyBsaXN0IGNvbnRhaW5lclwiXG4gICAgPlxuICAgICAge2hhc05vQ29uZmlnc0NyZWF0ZWQgJiYgPEJyaWVmRGFzaENvbmZpZ3NMaXN0Tm9uZUNyZWF0ZWQgLz59XG5cbiAgICAgIHtoYXNOb1NpZXZlZENvbmZpZ3MgJiYgPEJyaWVmRGFzaENvbmZpZ3NMaXN0Tm9uZVNpZXZlZCAvPn1cblxuICAgICAge2hhc0NvbmZpZ3NUb1Nob3cgJiYgKFxuICAgICAgICA8QnJpZWZEYXNoQ29uZmlnc0xpc3RIYXNDYXJkc1xuICAgICAgICAgIHNpZXZlZFVzZXJCcmllZkNvbmZpZ3M9e3NpZXZlZFVzZXJCcmllZkNvbmZpZ3N9XG4gICAgICAgICAgaXNGaWx0ZXJpbmc9eyEhZmlsdGVyVGVybX1cbiAgICAgICAgLz5cbiAgICAgICl9XG4gICAgPC9Cb3g+XG4gIClcbn1cblxuZXhwb3J0IHsgQnJpZWZEYXNoQ29uZmlnc0xpc3QgfVxuIl0sIm5hbWVzIjpbIkJyaWVmRGFzaENvbmZpZ3NMaXN0IiwidXNlckJyaWVmQ29uZmlncyIsImZpbHRlclRlcm0iLCJzaWV2ZWRVc2VyQnJpZWZDb25maWdzIiwidXNlU2lldmVkVXNlckJyaWVmQ29uZmlncyIsImlzTG9hZGluZyIsImhhc05vQ29uZmlnc0NyZWF0ZWQiLCJsZW5ndGgiLCJoYXNOb1NpZXZlZENvbmZpZ3MiLCJoYXNDb25maWdzVG9TaG93IiwiTG9hZGluZ1NwaW5uZXIiLCJCb3giLCJkaXNwbGF5IiwiYWxpZ25JdGVtcyIsImZsZXhEaXJlY3Rpb24iLCJyb2xlIiwiYXJpYS1sYWJlbCIsIkJyaWVmRGFzaENvbmZpZ3NMaXN0Tm9uZUNyZWF0ZWQiLCJCcmllZkRhc2hDb25maWdzTGlzdE5vbmVTaWV2ZWQiLCJCcmllZkRhc2hDb25maWdzTGlzdEhhc0NhcmRzIiwiaXNGaWx0ZXJpbmciXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQThDU0E7OztlQUFBQTs7Ozs4REE5Q1M7dUJBQ3dCO2dDQUVYO3NCQUNYOzhDQUN5QjtpREFDRztnREFDRDs7Ozs7O0FBTy9DLE1BQU1BLHVCQUF1QixDQUFDLEVBQUVDLGdCQUFnQixFQUFFQyxVQUFVLEVBQTZCO0lBQ3ZGLE1BQU0sRUFBRUMsc0JBQXNCLEVBQUUsR0FBR0MsSUFBQUEsZ0NBQXlCLEVBQUM7UUFBRUg7UUFBa0JDO0lBQVc7SUFFNUYsTUFBTUcsWUFBWSxDQUFDSjtJQUNuQixNQUFNSyxzQkFBc0IsQ0FBQ0QsYUFBYUosQ0FBQUEsNkJBQUFBLHVDQUFBQSxpQkFBa0JNLE1BQU0sTUFBSztJQUN2RSxNQUFNQyxxQkFBcUIsQ0FBQ0YsdUJBQXVCSCx1QkFBdUJJLE1BQU0sS0FBSztJQUNyRixNQUFNRSxtQkFBbUJOLHVCQUF1QkksTUFBTSxHQUFHO0lBRXpELElBQUlGLFdBQVcscUJBQU8scUJBQUNLLDhCQUFjO0lBRXJDLHFCQUNFLHNCQUFDQyxTQUFHO1FBQ0ZDLFNBQVE7UUFDUkMsWUFBVztRQUNYQyxlQUFjO1FBQ2RDLE1BQUs7UUFDTEMsY0FBVzs7WUFFVlYscUNBQXVCLHFCQUFDVyxnRUFBK0I7WUFFdkRULG9DQUFzQixxQkFBQ1UsOERBQThCO1lBRXJEVCxrQ0FDQyxxQkFBQ1UsMERBQTRCO2dCQUMzQmhCLHdCQUF3QkE7Z0JBQ3hCaUIsYUFBYSxDQUFDLENBQUNsQjs7OztBQUt6QiJ9