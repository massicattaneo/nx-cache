a3fff47e9d8e5d7e134f2d0b9517864c
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "WatchlistDataTableColoredCell", {
    enumerable: true,
    get: function() {
        return WatchlistDataTableColoredCell;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _core = require("@rp/react/web/mui/core");
const _WatchlistDataTableClickableCell = require("./WatchlistDataTableClickableCell");
const _WatchlistDataTableDataStatusCell = require("./WatchlistDataTableDataStatusCell");
function WatchlistDataTableColoredCell({ children, value, tooltip, queryResult, onClick }) {
    const rawPrice = value !== null && value !== void 0 ? value : 0;
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_WatchlistDataTableDataStatusCell.WatchlistDataTableDataStatusCell, {
        queryResult: queryResult,
        value: value,
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_WatchlistDataTableClickableCell.WatchlistDataTableClickableCell, {
            onClick: onClick,
            tooltip: tooltip,
            hoverBackgroundColor: (theme)=>{
                if (rawPrice > 0) return (0, _core.alpha)(theme.palette.success.main, 0.2);
                if (rawPrice < 0) return (0, _core.alpha)(theme.palette.error.main, 0.2);
                return (0, _core.alpha)(theme.palette.text.primary, 0.2);
            },
            color: (theme)=>{
                if (rawPrice > 0) return theme.palette.success.main;
                if (rawPrice < 0) return theme.palette.error.main;
                return theme.palette.text.primary;
            },
            children: children
        })
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL3dhdGNobGlzdHMvc3JjL2xpYi9XYXRjaGxpc3REYXRhVGFicy9XYXRjaGxpc3REYXRhVGFibGVDZWxscy9XYXRjaGxpc3REYXRhVGFibGVDb2xvcmVkQ2VsbC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJvcHNXaXRoQ2hpbGRyZW4gfSBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IHsgYWxwaGEgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9tdWkvY29yZVwiXG5pbXBvcnQgeyBVc2VRdWVyeVJlc3VsdCB9IGZyb20gXCJAdGFuc3RhY2svcmVhY3QtcXVlcnlcIlxuaW1wb3J0IHsgV2F0Y2hsaXN0RGF0YVRhYmxlQ2xpY2thYmxlQ2VsbCB9IGZyb20gXCIuL1dhdGNobGlzdERhdGFUYWJsZUNsaWNrYWJsZUNlbGxcIlxuaW1wb3J0IHsgV2F0Y2hsaXN0RGF0YVRhYmxlRGF0YVN0YXR1c0NlbGwgfSBmcm9tIFwiLi9XYXRjaGxpc3REYXRhVGFibGVEYXRhU3RhdHVzQ2VsbFwiXG5cbnR5cGUgUHJvcHMgPSBQcm9wc1dpdGhDaGlsZHJlbjx7XG4gIHZhbHVlPzogbnVtYmVyIHwgbnVsbFxuICB0b29sdGlwPzogc3RyaW5nIHwgUmVhY3QuUmVhY3ROb2RlXG4gIG9uQ2xpY2s/OiAoKSA9PiB2b2lkXG4gIHF1ZXJ5UmVzdWx0PzogVXNlUXVlcnlSZXN1bHQ8dW5rbm93biwgRXJyb3I+XG59PlxuXG5mdW5jdGlvbiBXYXRjaGxpc3REYXRhVGFibGVDb2xvcmVkQ2VsbCh7IGNoaWxkcmVuLCB2YWx1ZSwgdG9vbHRpcCwgcXVlcnlSZXN1bHQsIG9uQ2xpY2sgfTogUHJvcHMpIHtcbiAgY29uc3QgcmF3UHJpY2UgPSB2YWx1ZSA/PyAwXG4gIHJldHVybiAoXG4gICAgPFdhdGNobGlzdERhdGFUYWJsZURhdGFTdGF0dXNDZWxsIHF1ZXJ5UmVzdWx0PXtxdWVyeVJlc3VsdH0gdmFsdWU9e3ZhbHVlfT5cbiAgICAgIDxXYXRjaGxpc3REYXRhVGFibGVDbGlja2FibGVDZWxsXG4gICAgICAgIG9uQ2xpY2s9e29uQ2xpY2t9XG4gICAgICAgIHRvb2x0aXA9e3Rvb2x0aXB9XG4gICAgICAgIGhvdmVyQmFja2dyb3VuZENvbG9yPXt0aGVtZSA9PiB7XG4gICAgICAgICAgaWYgKHJhd1ByaWNlID4gMCkgcmV0dXJuIGFscGhhKHRoZW1lLnBhbGV0dGUuc3VjY2Vzcy5tYWluLCAwLjIpXG4gICAgICAgICAgaWYgKHJhd1ByaWNlIDwgMCkgcmV0dXJuIGFscGhhKHRoZW1lLnBhbGV0dGUuZXJyb3IubWFpbiwgMC4yKVxuICAgICAgICAgIHJldHVybiBhbHBoYSh0aGVtZS5wYWxldHRlLnRleHQucHJpbWFyeSwgMC4yKVxuICAgICAgICB9fVxuICAgICAgICBjb2xvcj17dGhlbWUgPT4ge1xuICAgICAgICAgIGlmIChyYXdQcmljZSA+IDApIHJldHVybiB0aGVtZS5wYWxldHRlLnN1Y2Nlc3MubWFpblxuICAgICAgICAgIGlmIChyYXdQcmljZSA8IDApIHJldHVybiB0aGVtZS5wYWxldHRlLmVycm9yLm1haW5cbiAgICAgICAgICByZXR1cm4gdGhlbWUucGFsZXR0ZS50ZXh0LnByaW1hcnlcbiAgICAgICAgfX1cbiAgICAgID5cbiAgICAgICAge2NoaWxkcmVufVxuICAgICAgPC9XYXRjaGxpc3REYXRhVGFibGVDbGlja2FibGVDZWxsPlxuICAgIDwvV2F0Y2hsaXN0RGF0YVRhYmxlRGF0YVN0YXR1c0NlbGw+XG4gIClcbn1cblxuZXhwb3J0IHsgV2F0Y2hsaXN0RGF0YVRhYmxlQ29sb3JlZENlbGwgfVxuIl0sIm5hbWVzIjpbIldhdGNobGlzdERhdGFUYWJsZUNvbG9yZWRDZWxsIiwiY2hpbGRyZW4iLCJ2YWx1ZSIsInRvb2x0aXAiLCJxdWVyeVJlc3VsdCIsIm9uQ2xpY2siLCJyYXdQcmljZSIsIldhdGNobGlzdERhdGFUYWJsZURhdGFTdGF0dXNDZWxsIiwiV2F0Y2hsaXN0RGF0YVRhYmxlQ2xpY2thYmxlQ2VsbCIsImhvdmVyQmFja2dyb3VuZENvbG9yIiwidGhlbWUiLCJhbHBoYSIsInBhbGV0dGUiLCJzdWNjZXNzIiwibWFpbiIsImVycm9yIiwidGV4dCIsInByaW1hcnkiLCJjb2xvciJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkFxQ1NBOzs7ZUFBQUE7Ozs7c0JBcENhO2lEQUUwQjtrREFDQztBQVNqRCxTQUFTQSw4QkFBOEIsRUFBRUMsUUFBUSxFQUFFQyxLQUFLLEVBQUVDLE9BQU8sRUFBRUMsV0FBVyxFQUFFQyxPQUFPLEVBQVM7SUFDOUYsTUFBTUMsV0FBV0osa0JBQUFBLG1CQUFBQSxRQUFTO0lBQzFCLHFCQUNFLHFCQUFDSyxrRUFBZ0M7UUFBQ0gsYUFBYUE7UUFBYUYsT0FBT0E7a0JBQ2pFLGNBQUEscUJBQUNNLGdFQUErQjtZQUM5QkgsU0FBU0E7WUFDVEYsU0FBU0E7WUFDVE0sc0JBQXNCQyxDQUFBQTtnQkFDcEIsSUFBSUosV0FBVyxHQUFHLE9BQU9LLElBQUFBLFdBQUssRUFBQ0QsTUFBTUUsT0FBTyxDQUFDQyxPQUFPLENBQUNDLElBQUksRUFBRTtnQkFDM0QsSUFBSVIsV0FBVyxHQUFHLE9BQU9LLElBQUFBLFdBQUssRUFBQ0QsTUFBTUUsT0FBTyxDQUFDRyxLQUFLLENBQUNELElBQUksRUFBRTtnQkFDekQsT0FBT0gsSUFBQUEsV0FBSyxFQUFDRCxNQUFNRSxPQUFPLENBQUNJLElBQUksQ0FBQ0MsT0FBTyxFQUFFO1lBQzNDO1lBQ0FDLE9BQU9SLENBQUFBO2dCQUNMLElBQUlKLFdBQVcsR0FBRyxPQUFPSSxNQUFNRSxPQUFPLENBQUNDLE9BQU8sQ0FBQ0MsSUFBSTtnQkFDbkQsSUFBSVIsV0FBVyxHQUFHLE9BQU9JLE1BQU1FLE9BQU8sQ0FBQ0csS0FBSyxDQUFDRCxJQUFJO2dCQUNqRCxPQUFPSixNQUFNRSxPQUFPLENBQUNJLElBQUksQ0FBQ0MsT0FBTztZQUNuQztzQkFFQ2hCOzs7QUFJVCJ9