79f25b665d5885ddc9028b07adc6e0b4
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "SuggestedPrompts", {
    enumerable: true,
    get: function() {
        return SuggestedPrompts;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("swiper/react");
const _hooks = require("@rp/react/web/common/hooks");
const _core = require("@rp/react/web/mui/core");
const _Swiper = require("../Swiper");
const _SuggestedPromptCard = require("./SuggestedPromptCard");
const SuggestedPrompts = ({ onPromptClick, prompts })=>{
    const { isMobile } = (0, _hooks.useDeviceInfo)();
    const slidesPerView = isMobile ? 1.5 : 4;
    const isLoading = !prompts;
    const visualized = prompts ? prompts : [
        ...Array(4).keys()
    ].map((_, index)=>{
        const prompt = {
            id: `loading-${index}`,
            label: index.toString(),
            icon: {
                id: null,
                label: "",
                color: ""
            },
            prompt: "",
            relatedTopics: [],
            blocked: false,
            entitlements: [],
            watchlist: false
        };
        return prompt;
    });
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
        sx: {
            position: "relative",
            width: "100%",
            maxWidth: "100%",
            height: isMobile ? "146px" : "200px",
            "& .swiper .swiper-wrapper": {
                height: isMobile ? "146px" : "200px"
            },
            "& .swiper": {
                width: "100%"
            },
            "& .swiper .swiper-slide": {
                minWidth: "0px",
                maxWidth: isMobile ? "calc(100% - 32px)" : undefined
            },
            "& .swiper .swiper-slide > div": {
                boxShadow: "0px 4px 14px 0px rgba(0, 0, 0, 0.35)",
                marginLeft: isMobile ? "16px" : 0,
                height: isMobile ? "120px" : undefined
            },
            "& .swiper .swiper-slide:last-of-type > div": {
                marginRight: isMobile ? "16px" : "0px"
            },
            "& .swiper-button-disabled": {
                display: "none"
            },
            "& .arrow-btn.next": {
                right: isMobile ? undefined : "-36px"
            },
            "& .arrow-btn.prev": {
                left: isMobile ? undefined : "-36px"
            }
        },
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_Swiper.SwiperWithAbsoluteArrows, {
            slidesPerView: slidesPerView,
            spaceBetween: isMobile ? 0 : 16,
            slidesPerGroup: isMobile ? 1 : slidesPerView,
            itemsCount: visualized.length,
            disablePrev: !!(prompts && (prompts === null || prompts === void 0 ? void 0 : prompts.length) < 5),
            disableNext: !!(prompts && (prompts === null || prompts === void 0 ? void 0 : prompts.length) < 5),
            children: visualized.map((item)=>{
                return /*#__PURE__*/ (0, _jsxruntime.jsx)(_react.SwiperSlide, {
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_SuggestedPromptCard.SuggestedPromptCard, {
                        onPromptClick: onPromptClick,
                        prompt: item,
                        isLoading: isLoading
                    })
                }, item.id);
            })
        })
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9jb21wb3NpdGUtY29tcG9uZW50cy9zcmMvU3VnZ2VzdGVkUHJvbXB0cy9TdWdnZXN0ZWRQcm9tcHRzLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTd2lwZXJTbGlkZSB9IGZyb20gXCJzd2lwZXIvcmVhY3RcIlxuaW1wb3J0IHsgQ3VyYXRlZFN1Z2dlc3RlZFByb21wdCB9IGZyb20gXCJAcnAvcmVhY3QvY29tbW9uL2hvb2tzXCJcbmltcG9ydCB7IHVzZURldmljZUluZm8gfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9jb21tb24vaG9va3NcIlxuaW1wb3J0IHsgQm94IH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvbXVpL2NvcmVcIlxuaW1wb3J0IHsgU3dpcGVyV2l0aEFic29sdXRlQXJyb3dzIH0gZnJvbSBcIi4uL1N3aXBlclwiXG5pbXBvcnQgeyBTdWdnZXN0ZWRQcm9tcHRDYXJkIH0gZnJvbSBcIi4vU3VnZ2VzdGVkUHJvbXB0Q2FyZFwiXG5cbnR5cGUgUHJvcHMgPSB7XG4gIG9uUHJvbXB0Q2xpY2s/OiAocHJvbXB0OiBDdXJhdGVkU3VnZ2VzdGVkUHJvbXB0KSA9PiB2b2lkXG4gIHByb21wdHM6IEFycmF5PEN1cmF0ZWRTdWdnZXN0ZWRQcm9tcHQ+IHwgdW5kZWZpbmVkXG59XG5cbmV4cG9ydCBjb25zdCBTdWdnZXN0ZWRQcm9tcHRzID0gKHsgb25Qcm9tcHRDbGljaywgcHJvbXB0cyB9OiBQcm9wcykgPT4ge1xuICBjb25zdCB7IGlzTW9iaWxlIH0gPSB1c2VEZXZpY2VJbmZvKClcbiAgY29uc3Qgc2xpZGVzUGVyVmlldyA9IGlzTW9iaWxlID8gMS41IDogNFxuICBjb25zdCBpc0xvYWRpbmcgPSAhcHJvbXB0c1xuICBjb25zdCB2aXN1YWxpemVkID0gcHJvbXB0c1xuICAgID8gcHJvbXB0c1xuICAgIDogWy4uLkFycmF5KDQpLmtleXMoKV0ubWFwKChfLCBpbmRleCkgPT4ge1xuICAgICAgICBjb25zdCBwcm9tcHQ6IEN1cmF0ZWRTdWdnZXN0ZWRQcm9tcHQgPSB7XG4gICAgICAgICAgaWQ6IGBsb2FkaW5nLSR7aW5kZXh9YCxcbiAgICAgICAgICBsYWJlbDogaW5kZXgudG9TdHJpbmcoKSxcbiAgICAgICAgICBpY29uOiB7XG4gICAgICAgICAgICBpZDogbnVsbCxcbiAgICAgICAgICAgIGxhYmVsOiBcIlwiLFxuICAgICAgICAgICAgY29sb3I6IFwiXCIsXG4gICAgICAgICAgfSxcbiAgICAgICAgICBwcm9tcHQ6IFwiXCIsXG4gICAgICAgICAgcmVsYXRlZFRvcGljczogW10sXG4gICAgICAgICAgYmxvY2tlZDogZmFsc2UsXG4gICAgICAgICAgZW50aXRsZW1lbnRzOiBbXSxcbiAgICAgICAgICB3YXRjaGxpc3Q6IGZhbHNlLFxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBwcm9tcHRcbiAgICAgIH0pXG5cbiAgcmV0dXJuIChcbiAgICA8Qm94XG4gICAgICBzeD17e1xuICAgICAgICBwb3NpdGlvbjogXCJyZWxhdGl2ZVwiLFxuICAgICAgICB3aWR0aDogXCIxMDAlXCIsXG4gICAgICAgIG1heFdpZHRoOiBcIjEwMCVcIixcbiAgICAgICAgaGVpZ2h0OiBpc01vYmlsZSA/IFwiMTQ2cHhcIiA6IFwiMjAwcHhcIixcbiAgICAgICAgXCImIC5zd2lwZXIgLnN3aXBlci13cmFwcGVyXCI6IHtcbiAgICAgICAgICBoZWlnaHQ6IGlzTW9iaWxlID8gXCIxNDZweFwiIDogXCIyMDBweFwiLFxuICAgICAgICB9LFxuICAgICAgICBcIiYgLnN3aXBlclwiOiB7XG4gICAgICAgICAgd2lkdGg6IFwiMTAwJVwiLFxuICAgICAgICB9LFxuICAgICAgICBcIiYgLnN3aXBlciAuc3dpcGVyLXNsaWRlXCI6IHtcbiAgICAgICAgICBtaW5XaWR0aDogXCIwcHhcIixcbiAgICAgICAgICBtYXhXaWR0aDogaXNNb2JpbGUgPyBcImNhbGMoMTAwJSAtIDMycHgpXCIgOiB1bmRlZmluZWQsXG4gICAgICAgIH0sXG4gICAgICAgIFwiJiAuc3dpcGVyIC5zd2lwZXItc2xpZGUgPiBkaXZcIjoge1xuICAgICAgICAgIGJveFNoYWRvdzogXCIwcHggNHB4IDE0cHggMHB4IHJnYmEoMCwgMCwgMCwgMC4zNSlcIixcbiAgICAgICAgICBtYXJnaW5MZWZ0OiBpc01vYmlsZSA/IFwiMTZweFwiIDogMCxcbiAgICAgICAgICBoZWlnaHQ6IGlzTW9iaWxlID8gXCIxMjBweFwiIDogdW5kZWZpbmVkLFxuICAgICAgICB9LFxuXG4gICAgICAgIFwiJiAuc3dpcGVyIC5zd2lwZXItc2xpZGU6bGFzdC1vZi10eXBlID4gZGl2XCI6IHtcbiAgICAgICAgICBtYXJnaW5SaWdodDogaXNNb2JpbGUgPyBcIjE2cHhcIiA6IFwiMHB4XCIsXG4gICAgICAgIH0sXG4gICAgICAgIFwiJiAuc3dpcGVyLWJ1dHRvbi1kaXNhYmxlZFwiOiB7XG4gICAgICAgICAgZGlzcGxheTogXCJub25lXCIsXG4gICAgICAgIH0sXG4gICAgICAgIFwiJiAuYXJyb3ctYnRuLm5leHRcIjoge1xuICAgICAgICAgIHJpZ2h0OiBpc01vYmlsZSA/IHVuZGVmaW5lZCA6IFwiLTM2cHhcIixcbiAgICAgICAgfSxcbiAgICAgICAgXCImIC5hcnJvdy1idG4ucHJldlwiOiB7XG4gICAgICAgICAgbGVmdDogaXNNb2JpbGUgPyB1bmRlZmluZWQgOiBcIi0zNnB4XCIsXG4gICAgICAgIH0sXG4gICAgICB9fVxuICAgID5cbiAgICAgIDxTd2lwZXJXaXRoQWJzb2x1dGVBcnJvd3NcbiAgICAgICAgc2xpZGVzUGVyVmlldz17c2xpZGVzUGVyVmlld31cbiAgICAgICAgc3BhY2VCZXR3ZWVuPXtpc01vYmlsZSA/IDAgOiAxNn1cbiAgICAgICAgc2xpZGVzUGVyR3JvdXA9e2lzTW9iaWxlID8gMSA6IHNsaWRlc1BlclZpZXd9XG4gICAgICAgIGl0ZW1zQ291bnQ9e3Zpc3VhbGl6ZWQubGVuZ3RofVxuICAgICAgICBkaXNhYmxlUHJldj17ISEocHJvbXB0cyAmJiBwcm9tcHRzPy5sZW5ndGggPCA1KX1cbiAgICAgICAgZGlzYWJsZU5leHQ9eyEhKHByb21wdHMgJiYgcHJvbXB0cz8ubGVuZ3RoIDwgNSl9XG4gICAgICA+XG4gICAgICAgIHt2aXN1YWxpemVkLm1hcChpdGVtID0+IHtcbiAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPFN3aXBlclNsaWRlIGtleT17aXRlbS5pZH0+XG4gICAgICAgICAgICAgIDxTdWdnZXN0ZWRQcm9tcHRDYXJkXG4gICAgICAgICAgICAgICAgb25Qcm9tcHRDbGljaz17b25Qcm9tcHRDbGlja31cbiAgICAgICAgICAgICAgICBwcm9tcHQ9e2l0ZW19XG4gICAgICAgICAgICAgICAgaXNMb2FkaW5nPXtpc0xvYWRpbmd9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L1N3aXBlclNsaWRlPlxuICAgICAgICAgIClcbiAgICAgICAgfSl9XG4gICAgICA8L1N3aXBlcldpdGhBYnNvbHV0ZUFycm93cz5cbiAgICA8L0JveD5cbiAgKVxufVxuIl0sIm5hbWVzIjpbIlN1Z2dlc3RlZFByb21wdHMiLCJvblByb21wdENsaWNrIiwicHJvbXB0cyIsImlzTW9iaWxlIiwidXNlRGV2aWNlSW5mbyIsInNsaWRlc1BlclZpZXciLCJpc0xvYWRpbmciLCJ2aXN1YWxpemVkIiwiQXJyYXkiLCJrZXlzIiwibWFwIiwiXyIsImluZGV4IiwicHJvbXB0IiwiaWQiLCJsYWJlbCIsInRvU3RyaW5nIiwiaWNvbiIsImNvbG9yIiwicmVsYXRlZFRvcGljcyIsImJsb2NrZWQiLCJlbnRpdGxlbWVudHMiLCJ3YXRjaGxpc3QiLCJCb3giLCJzeCIsInBvc2l0aW9uIiwid2lkdGgiLCJtYXhXaWR0aCIsImhlaWdodCIsIm1pbldpZHRoIiwidW5kZWZpbmVkIiwiYm94U2hhZG93IiwibWFyZ2luTGVmdCIsIm1hcmdpblJpZ2h0IiwiZGlzcGxheSIsInJpZ2h0IiwibGVmdCIsIlN3aXBlcldpdGhBYnNvbHV0ZUFycm93cyIsInNwYWNlQmV0d2VlbiIsInNsaWRlc1Blckdyb3VwIiwiaXRlbXNDb3VudCIsImxlbmd0aCIsImRpc2FibGVQcmV2IiwiZGlzYWJsZU5leHQiLCJpdGVtIiwiU3dpcGVyU2xpZGUiLCJTdWdnZXN0ZWRQcm9tcHRDYXJkIl0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBWWFBOzs7ZUFBQUE7Ozs7dUJBWmU7dUJBRUU7c0JBQ1Y7d0JBQ3FCO3FDQUNMO0FBTzdCLE1BQU1BLG1CQUFtQixDQUFDLEVBQUVDLGFBQWEsRUFBRUMsT0FBTyxFQUFTO0lBQ2hFLE1BQU0sRUFBRUMsUUFBUSxFQUFFLEdBQUdDLElBQUFBLG9CQUFhO0lBQ2xDLE1BQU1DLGdCQUFnQkYsV0FBVyxNQUFNO0lBQ3ZDLE1BQU1HLFlBQVksQ0FBQ0o7SUFDbkIsTUFBTUssYUFBYUwsVUFDZkEsVUFDQTtXQUFJTSxNQUFNLEdBQUdDLElBQUk7S0FBRyxDQUFDQyxHQUFHLENBQUMsQ0FBQ0MsR0FBR0M7UUFDM0IsTUFBTUMsU0FBaUM7WUFDckNDLElBQUksQ0FBQyxRQUFRLEVBQUVGLE1BQU0sQ0FBQztZQUN0QkcsT0FBT0gsTUFBTUksUUFBUTtZQUNyQkMsTUFBTTtnQkFDSkgsSUFBSTtnQkFDSkMsT0FBTztnQkFDUEcsT0FBTztZQUNUO1lBQ0FMLFFBQVE7WUFDUk0sZUFBZSxFQUFFO1lBQ2pCQyxTQUFTO1lBQ1RDLGNBQWMsRUFBRTtZQUNoQkMsV0FBVztRQUNiO1FBQ0EsT0FBT1Q7SUFDVDtJQUVKLHFCQUNFLHFCQUFDVSxTQUFHO1FBQ0ZDLElBQUk7WUFDRkMsVUFBVTtZQUNWQyxPQUFPO1lBQ1BDLFVBQVU7WUFDVkMsUUFBUXpCLFdBQVcsVUFBVTtZQUM3Qiw2QkFBNkI7Z0JBQzNCeUIsUUFBUXpCLFdBQVcsVUFBVTtZQUMvQjtZQUNBLGFBQWE7Z0JBQ1h1QixPQUFPO1lBQ1Q7WUFDQSwyQkFBMkI7Z0JBQ3pCRyxVQUFVO2dCQUNWRixVQUFVeEIsV0FBVyxzQkFBc0IyQjtZQUM3QztZQUNBLGlDQUFpQztnQkFDL0JDLFdBQVc7Z0JBQ1hDLFlBQVk3QixXQUFXLFNBQVM7Z0JBQ2hDeUIsUUFBUXpCLFdBQVcsVUFBVTJCO1lBQy9CO1lBRUEsOENBQThDO2dCQUM1Q0csYUFBYTlCLFdBQVcsU0FBUztZQUNuQztZQUNBLDZCQUE2QjtnQkFDM0IrQixTQUFTO1lBQ1g7WUFDQSxxQkFBcUI7Z0JBQ25CQyxPQUFPaEMsV0FBVzJCLFlBQVk7WUFDaEM7WUFDQSxxQkFBcUI7Z0JBQ25CTSxNQUFNakMsV0FBVzJCLFlBQVk7WUFDL0I7UUFDRjtrQkFFQSxjQUFBLHFCQUFDTyxnQ0FBd0I7WUFDdkJoQyxlQUFlQTtZQUNmaUMsY0FBY25DLFdBQVcsSUFBSTtZQUM3Qm9DLGdCQUFnQnBDLFdBQVcsSUFBSUU7WUFDL0JtQyxZQUFZakMsV0FBV2tDLE1BQU07WUFDN0JDLGFBQWEsQ0FBQyxDQUFFeEMsQ0FBQUEsV0FBV0EsQ0FBQUEsb0JBQUFBLDhCQUFBQSxRQUFTdUMsTUFBTSxJQUFHLENBQUE7WUFDN0NFLGFBQWEsQ0FBQyxDQUFFekMsQ0FBQUEsV0FBV0EsQ0FBQUEsb0JBQUFBLDhCQUFBQSxRQUFTdUMsTUFBTSxJQUFHLENBQUE7c0JBRTVDbEMsV0FBV0csR0FBRyxDQUFDa0MsQ0FBQUE7Z0JBQ2QscUJBQ0UscUJBQUNDLGtCQUFXOzhCQUNWLGNBQUEscUJBQUNDLHdDQUFtQjt3QkFDbEI3QyxlQUFlQTt3QkFDZlksUUFBUStCO3dCQUNSdEMsV0FBV0E7O21CQUpHc0MsS0FBSzlCLEVBQUU7WUFRN0I7OztBQUlSIn0=