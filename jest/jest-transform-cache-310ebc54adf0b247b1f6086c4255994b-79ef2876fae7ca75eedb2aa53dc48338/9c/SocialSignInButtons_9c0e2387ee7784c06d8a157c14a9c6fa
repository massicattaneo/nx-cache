cbeb1643792372b944da40f975dd8fcc
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    AppleSignInButton: function() {
        return AppleSignInButton;
    },
    GoogleSignInButton: function() {
        return GoogleSignInButton;
    },
    MicrosoftSignInButton: function() {
        return MicrosoftSignInButton;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _i18next = require("i18next");
const _clerkreact = require("@clerk/clerk-react");
const _material = require("@mui/material");
const _assets = require("@rp/react/common/assets");
const _hooks = require("@rp/react/web/common/hooks");
function useSignInWith(strategy) {
    const { signUp } = (0, _clerkreact.useSignUp)();
    const unsafeMetadata = (0, _hooks.useClerkSignUpUnsafeMetadata)();
    async function handleSignUp() {
        await (signUp === null || signUp === void 0 ? void 0 : signUp.authenticateWithRedirect({
            redirectUrl: "/sso-callback",
            redirectUrlComplete: "/",
            unsafeMetadata,
            strategy
        }));
    }
    return handleSignUp;
}
function SocialSignUpButton({ strategy, Icon, label }) {
    const handleSignIn = useSignInWith(strategy);
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Button, {
        onClick: handleSignIn,
        variant: "contained-light",
        fullWidth: true,
        sx: (theme)=>({
                display: "flex",
                gap: 1,
                background: theme.palette.grey[800],
                transition: "background 0.3s",
                ":hover": {
                    background: theme.palette.grey[700]
                }
            }),
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(Icon, {}),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Typography, {
                variant: "body1",
                color: "text.primary",
                textTransform: "none",
                children: label
            })
        ]
    });
}
const GoogleSignInButton = ()=>/*#__PURE__*/ (0, _jsxruntime.jsx)(SocialSignUpButton, {
        strategy: "oauth_google",
        Icon: _assets.GoogleLogo,
        label: (0, _i18next.t)("loginPage.socialLoginButton", {
            media: "Google"
        })
    });
const MicrosoftSignInButton = ()=>/*#__PURE__*/ (0, _jsxruntime.jsx)(SocialSignUpButton, {
        strategy: "oauth_microsoft",
        Icon: _assets.MicrosoftLogo,
        label: (0, _i18next.t)("loginPage.socialLoginButton", {
            media: "Microsoft"
        })
    });
const AppleSignInButton = ()=>/*#__PURE__*/ (0, _jsxruntime.jsx)(SocialSignUpButton, {
        strategy: "oauth_apple",
        Icon: ()=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_assets.AppleLogo, {
                color: "white"
            }),
        label: (0, _i18next.t)("loginPage.socialLoginButton", {
            media: "Apple"
        })
    });

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9jb21wb3NpdGUtY29tcG9uZW50cy9zcmMvTG9naW4vU29jaWFsU2lnbkluQnV0dG9ucy50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdCB9IGZyb20gXCJpMThuZXh0XCJcbmltcG9ydCB7IHVzZVNpZ25VcCB9IGZyb20gXCJAY2xlcmsvY2xlcmstcmVhY3RcIlxuaW1wb3J0IHsgT0F1dGhTdHJhdGVneSB9IGZyb20gXCJAY2xlcmsvdHlwZXNcIlxuaW1wb3J0IHsgQnV0dG9uLCBUeXBvZ3JhcGh5IH0gZnJvbSBcIkBtdWkvbWF0ZXJpYWxcIlxuaW1wb3J0IHsgQXBwbGVMb2dvLCBHb29nbGVMb2dvLCBNaWNyb3NvZnRMb2dvIH0gZnJvbSBcIkBycC9yZWFjdC9jb21tb24vYXNzZXRzXCJcbmltcG9ydCB7IHVzZUNsZXJrU2lnblVwVW5zYWZlTWV0YWRhdGEgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9jb21tb24vaG9va3NcIlxuXG5mdW5jdGlvbiB1c2VTaWduSW5XaXRoKHN0cmF0ZWd5OiBPQXV0aFN0cmF0ZWd5KSB7XG4gIGNvbnN0IHsgc2lnblVwIH0gPSB1c2VTaWduVXAoKVxuICBjb25zdCB1bnNhZmVNZXRhZGF0YSA9IHVzZUNsZXJrU2lnblVwVW5zYWZlTWV0YWRhdGEoKVxuXG4gIGFzeW5jIGZ1bmN0aW9uIGhhbmRsZVNpZ25VcCgpIHtcbiAgICBhd2FpdCBzaWduVXA/LmF1dGhlbnRpY2F0ZVdpdGhSZWRpcmVjdCh7XG4gICAgICByZWRpcmVjdFVybDogXCIvc3NvLWNhbGxiYWNrXCIsXG4gICAgICByZWRpcmVjdFVybENvbXBsZXRlOiBcIi9cIixcbiAgICAgIHVuc2FmZU1ldGFkYXRhLFxuICAgICAgc3RyYXRlZ3ksXG4gICAgfSlcbiAgfVxuXG4gIHJldHVybiBoYW5kbGVTaWduVXBcbn1cblxuZnVuY3Rpb24gU29jaWFsU2lnblVwQnV0dG9uKHtcbiAgc3RyYXRlZ3ksXG4gIEljb24sXG4gIGxhYmVsLFxufToge1xuICBzdHJhdGVneTogT0F1dGhTdHJhdGVneVxuICBJY29uOiBSZWFjdC5GQ1xuICBsYWJlbDogc3RyaW5nXG59KSB7XG4gIGNvbnN0IGhhbmRsZVNpZ25JbiA9IHVzZVNpZ25JbldpdGgoc3RyYXRlZ3kpXG5cbiAgcmV0dXJuIChcbiAgICA8QnV0dG9uXG4gICAgICBvbkNsaWNrPXtoYW5kbGVTaWduSW59XG4gICAgICB2YXJpYW50PVwiY29udGFpbmVkLWxpZ2h0XCJcbiAgICAgIGZ1bGxXaWR0aFxuICAgICAgc3g9e3RoZW1lID0+ICh7XG4gICAgICAgIGRpc3BsYXk6IFwiZmxleFwiLFxuICAgICAgICBnYXA6IDEsXG4gICAgICAgIGJhY2tncm91bmQ6IHRoZW1lLnBhbGV0dGUuZ3JleVs4MDBdLFxuICAgICAgICB0cmFuc2l0aW9uOiBcImJhY2tncm91bmQgMC4zc1wiLFxuICAgICAgICBcIjpob3ZlclwiOiB7IGJhY2tncm91bmQ6IHRoZW1lLnBhbGV0dGUuZ3JleVs3MDBdIH0sXG4gICAgICB9KX1cbiAgICA+XG4gICAgICA8SWNvbiAvPlxuICAgICAgPFR5cG9ncmFwaHkgdmFyaWFudD1cImJvZHkxXCIgY29sb3I9XCJ0ZXh0LnByaW1hcnlcIiB0ZXh0VHJhbnNmb3JtPVwibm9uZVwiPlxuICAgICAgICB7bGFiZWx9XG4gICAgICA8L1R5cG9ncmFwaHk+XG4gICAgPC9CdXR0b24+XG4gIClcbn1cblxuZXhwb3J0IGNvbnN0IEdvb2dsZVNpZ25JbkJ1dHRvbiA9ICgpID0+IChcbiAgPFNvY2lhbFNpZ25VcEJ1dHRvblxuICAgIHN0cmF0ZWd5PVwib2F1dGhfZ29vZ2xlXCJcbiAgICBJY29uPXtHb29nbGVMb2dvfVxuICAgIGxhYmVsPXt0KFwibG9naW5QYWdlLnNvY2lhbExvZ2luQnV0dG9uXCIsIHsgbWVkaWE6IFwiR29vZ2xlXCIgfSl9XG4gIC8+XG4pXG5cbmV4cG9ydCBjb25zdCBNaWNyb3NvZnRTaWduSW5CdXR0b24gPSAoKSA9PiAoXG4gIDxTb2NpYWxTaWduVXBCdXR0b25cbiAgICBzdHJhdGVneT1cIm9hdXRoX21pY3Jvc29mdFwiXG4gICAgSWNvbj17TWljcm9zb2Z0TG9nb31cbiAgICBsYWJlbD17dChcImxvZ2luUGFnZS5zb2NpYWxMb2dpbkJ1dHRvblwiLCB7IG1lZGlhOiBcIk1pY3Jvc29mdFwiIH0pfVxuICAvPlxuKVxuXG5leHBvcnQgY29uc3QgQXBwbGVTaWduSW5CdXR0b24gPSAoKSA9PiAoXG4gIDxTb2NpYWxTaWduVXBCdXR0b25cbiAgICBzdHJhdGVneT1cIm9hdXRoX2FwcGxlXCJcbiAgICBJY29uPXsoKSA9PiA8QXBwbGVMb2dvIGNvbG9yPVwid2hpdGVcIiAvPn1cbiAgICBsYWJlbD17dChcImxvZ2luUGFnZS5zb2NpYWxMb2dpbkJ1dHRvblwiLCB7IG1lZGlhOiBcIkFwcGxlXCIgfSl9XG4gIC8+XG4pXG4iXSwibmFtZXMiOlsiQXBwbGVTaWduSW5CdXR0b24iLCJHb29nbGVTaWduSW5CdXR0b24iLCJNaWNyb3NvZnRTaWduSW5CdXR0b24iLCJ1c2VTaWduSW5XaXRoIiwic3RyYXRlZ3kiLCJzaWduVXAiLCJ1c2VTaWduVXAiLCJ1bnNhZmVNZXRhZGF0YSIsInVzZUNsZXJrU2lnblVwVW5zYWZlTWV0YWRhdGEiLCJoYW5kbGVTaWduVXAiLCJhdXRoZW50aWNhdGVXaXRoUmVkaXJlY3QiLCJyZWRpcmVjdFVybCIsInJlZGlyZWN0VXJsQ29tcGxldGUiLCJTb2NpYWxTaWduVXBCdXR0b24iLCJJY29uIiwibGFiZWwiLCJoYW5kbGVTaWduSW4iLCJCdXR0b24iLCJvbkNsaWNrIiwidmFyaWFudCIsImZ1bGxXaWR0aCIsInN4IiwidGhlbWUiLCJkaXNwbGF5IiwiZ2FwIiwiYmFja2dyb3VuZCIsInBhbGV0dGUiLCJncmV5IiwidHJhbnNpdGlvbiIsIlR5cG9ncmFwaHkiLCJjb2xvciIsInRleHRUcmFuc2Zvcm0iLCJHb29nbGVMb2dvIiwidCIsIm1lZGlhIiwiTWljcm9zb2Z0TG9nbyIsIkFwcGxlTG9nbyJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0lBdUVhQSxpQkFBaUI7ZUFBakJBOztJQWhCQUMsa0JBQWtCO2VBQWxCQTs7SUFRQUMscUJBQXFCO2VBQXJCQTs7Ozt5QkEvREs7NEJBQ1E7MEJBRVM7d0JBQ2tCO3VCQUNSO0FBRTdDLFNBQVNDLGNBQWNDLFFBQXVCO0lBQzVDLE1BQU0sRUFBRUMsTUFBTSxFQUFFLEdBQUdDLElBQUFBLHFCQUFTO0lBQzVCLE1BQU1DLGlCQUFpQkMsSUFBQUEsbUNBQTRCO0lBRW5ELGVBQWVDO1FBQ2IsT0FBTUosbUJBQUFBLDZCQUFBQSxPQUFRSyx3QkFBd0IsQ0FBQztZQUNyQ0MsYUFBYTtZQUNiQyxxQkFBcUI7WUFDckJMO1lBQ0FIO1FBQ0Y7SUFDRjtJQUVBLE9BQU9LO0FBQ1Q7QUFFQSxTQUFTSSxtQkFBbUIsRUFDMUJULFFBQVEsRUFDUlUsSUFBSSxFQUNKQyxLQUFLLEVBS047SUFDQyxNQUFNQyxlQUFlYixjQUFjQztJQUVuQyxxQkFDRSxzQkFBQ2EsZ0JBQU07UUFDTEMsU0FBU0Y7UUFDVEcsU0FBUTtRQUNSQyxTQUFTO1FBQ1RDLElBQUlDLENBQUFBLFFBQVUsQ0FBQTtnQkFDWkMsU0FBUztnQkFDVEMsS0FBSztnQkFDTEMsWUFBWUgsTUFBTUksT0FBTyxDQUFDQyxJQUFJLENBQUMsSUFBSTtnQkFDbkNDLFlBQVk7Z0JBQ1osVUFBVTtvQkFBRUgsWUFBWUgsTUFBTUksT0FBTyxDQUFDQyxJQUFJLENBQUMsSUFBSTtnQkFBQztZQUNsRCxDQUFBOzswQkFFQSxxQkFBQ2I7MEJBQ0QscUJBQUNlLG9CQUFVO2dCQUFDVixTQUFRO2dCQUFRVyxPQUFNO2dCQUFlQyxlQUFjOzBCQUM1RGhCOzs7O0FBSVQ7QUFFTyxNQUFNZCxxQkFBcUIsa0JBQ2hDLHFCQUFDWTtRQUNDVCxVQUFTO1FBQ1RVLE1BQU1rQixrQkFBVTtRQUNoQmpCLE9BQU9rQixJQUFBQSxVQUFDLEVBQUMsK0JBQStCO1lBQUVDLE9BQU87UUFBUzs7QUFJdkQsTUFBTWhDLHdCQUF3QixrQkFDbkMscUJBQUNXO1FBQ0NULFVBQVM7UUFDVFUsTUFBTXFCLHFCQUFhO1FBQ25CcEIsT0FBT2tCLElBQUFBLFVBQUMsRUFBQywrQkFBK0I7WUFBRUMsT0FBTztRQUFZOztBQUkxRCxNQUFNbEMsb0JBQW9CLGtCQUMvQixxQkFBQ2E7UUFDQ1QsVUFBUztRQUNUVSxNQUFNLGtCQUFNLHFCQUFDc0IsaUJBQVM7Z0JBQUNOLE9BQU07O1FBQzdCZixPQUFPa0IsSUFBQUEsVUFBQyxFQUFDLCtCQUErQjtZQUFFQyxPQUFPO1FBQVEifQ==