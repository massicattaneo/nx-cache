67049ed22ddc26f80d7da1a4cb626126
/**
 * @typedef {import('mdast').Heading} Heading
 * @typedef {import('../types.js').State} State
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "formatHeadingAsSetext", {
    enumerable: true,
    get: function() {
        return formatHeadingAsSetext;
    }
});
const _unistutilvisit = require("unist-util-visit");
const _mdastutiltostring = require("mdast-util-to-string");
function formatHeadingAsSetext(node, state) {
    let literalWithBreak = false;
    // Look for literals with a line break.
    // Note that this also
    (0, _unistutilvisit.visit)(node, function(node) {
        if ('value' in node && /\r?\n|\r/.test(node.value) || node.type === 'break') {
            literalWithBreak = true;
            return _unistutilvisit.EXIT;
        }
    });
    return Boolean((!node.depth || node.depth < 3) && (0, _mdastutiltostring.toString)(node) && (state.options.setext || literalWithBreak));
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9tZGFzdC11dGlsLXRvLW1hcmtkb3duL2xpYi91dGlsL2Zvcm1hdC1oZWFkaW5nLWFzLXNldGV4dC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0JykuSGVhZGluZ30gSGVhZGluZ1xuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vdHlwZXMuanMnKS5TdGF0ZX0gU3RhdGVcbiAqL1xuXG5pbXBvcnQge0VYSVQsIHZpc2l0fSBmcm9tICd1bmlzdC11dGlsLXZpc2l0J1xuaW1wb3J0IHt0b1N0cmluZ30gZnJvbSAnbWRhc3QtdXRpbC10by1zdHJpbmcnXG5cbi8qKlxuICogQHBhcmFtIHtIZWFkaW5nfSBub2RlXG4gKiBAcGFyYW0ge1N0YXRlfSBzdGF0ZVxuICogQHJldHVybnMge2Jvb2xlYW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXRIZWFkaW5nQXNTZXRleHQobm9kZSwgc3RhdGUpIHtcbiAgbGV0IGxpdGVyYWxXaXRoQnJlYWsgPSBmYWxzZVxuXG4gIC8vIExvb2sgZm9yIGxpdGVyYWxzIHdpdGggYSBsaW5lIGJyZWFrLlxuICAvLyBOb3RlIHRoYXQgdGhpcyBhbHNvXG4gIHZpc2l0KG5vZGUsIGZ1bmN0aW9uIChub2RlKSB7XG4gICAgaWYgKFxuICAgICAgKCd2YWx1ZScgaW4gbm9kZSAmJiAvXFxyP1xcbnxcXHIvLnRlc3Qobm9kZS52YWx1ZSkpIHx8XG4gICAgICBub2RlLnR5cGUgPT09ICdicmVhaydcbiAgICApIHtcbiAgICAgIGxpdGVyYWxXaXRoQnJlYWsgPSB0cnVlXG4gICAgICByZXR1cm4gRVhJVFxuICAgIH1cbiAgfSlcblxuICByZXR1cm4gQm9vbGVhbihcbiAgICAoIW5vZGUuZGVwdGggfHwgbm9kZS5kZXB0aCA8IDMpICYmXG4gICAgICB0b1N0cmluZyhub2RlKSAmJlxuICAgICAgKHN0YXRlLm9wdGlvbnMuc2V0ZXh0IHx8IGxpdGVyYWxXaXRoQnJlYWspXG4gIClcbn1cbiJdLCJuYW1lcyI6WyJmb3JtYXRIZWFkaW5nQXNTZXRleHQiLCJub2RlIiwic3RhdGUiLCJsaXRlcmFsV2l0aEJyZWFrIiwidmlzaXQiLCJ0ZXN0IiwidmFsdWUiLCJ0eXBlIiwiRVhJVCIsIkJvb2xlYW4iLCJkZXB0aCIsInRvU3RyaW5nIiwib3B0aW9ucyIsInNldGV4dCJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6IkFBQUE7OztDQUdDOzs7OytCQVVlQTs7O2VBQUFBOzs7Z0NBUlU7bUNBQ0g7QUFPaEIsU0FBU0Esc0JBQXNCQyxJQUFJLEVBQUVDLEtBQUs7SUFDL0MsSUFBSUMsbUJBQW1CO0lBRXZCLHVDQUF1QztJQUN2QyxzQkFBc0I7SUFDdEJDLElBQUFBLHFCQUFLLEVBQUNILE1BQU0sU0FBVUEsSUFBSTtRQUN4QixJQUNFLEFBQUMsV0FBV0EsUUFBUSxXQUFXSSxJQUFJLENBQUNKLEtBQUtLLEtBQUssS0FDOUNMLEtBQUtNLElBQUksS0FBSyxTQUNkO1lBQ0FKLG1CQUFtQjtZQUNuQixPQUFPSyxvQkFBSTtRQUNiO0lBQ0Y7SUFFQSxPQUFPQyxRQUNMLEFBQUMsQ0FBQSxDQUFDUixLQUFLUyxLQUFLLElBQUlULEtBQUtTLEtBQUssR0FBRyxDQUFBLEtBQzNCQyxJQUFBQSwyQkFBUSxFQUFDVixTQUNSQyxDQUFBQSxNQUFNVSxPQUFPLENBQUNDLE1BQU0sSUFBSVYsZ0JBQWU7QUFFOUMifQ==