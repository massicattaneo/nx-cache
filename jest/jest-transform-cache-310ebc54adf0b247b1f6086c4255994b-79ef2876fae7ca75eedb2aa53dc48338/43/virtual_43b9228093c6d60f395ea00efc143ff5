5aae2a7b75ebde7103c1f4e00d0ba4f2
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "renderVirtual", {
    enumerable: true,
    get: function() {
        return renderVirtual;
    }
});
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function renderVirtual(swiper, slides, virtualData) {
    if (!virtualData) return null;
    const getSlideIndex = (index)=>{
        let slideIndex = index;
        if (index < 0) {
            slideIndex = slides.length + index;
        } else if (slideIndex >= slides.length) {
            // eslint-disable-next-line
            slideIndex = slideIndex - slides.length;
        }
        return slideIndex;
    };
    const style = swiper.isHorizontal() ? {
        [swiper.rtlTranslate ? 'right' : 'left']: `${virtualData.offset}px`
    } : {
        top: `${virtualData.offset}px`
    };
    const { from, to } = virtualData;
    const loopFrom = swiper.params.loop ? -slides.length : 0;
    const loopTo = swiper.params.loop ? slides.length * 2 : slides.length;
    const slidesToRender = [];
    for(let i = loopFrom; i < loopTo; i += 1){
        if (i >= from && i <= to) {
            slidesToRender.push(slides[getSlideIndex(i)]);
        }
    }
    return slidesToRender.map((child, index)=>{
        return /*#__PURE__*/ _react.default.cloneElement(child, {
            swiper,
            style,
            key: `slide-${index}`
        });
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9zd2lwZXIvcmVhY3QvdmlydHVhbC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuZnVuY3Rpb24gcmVuZGVyVmlydHVhbChzd2lwZXIsIHNsaWRlcywgdmlydHVhbERhdGEpIHtcbiAgaWYgKCF2aXJ0dWFsRGF0YSkgcmV0dXJuIG51bGw7XG4gIGNvbnN0IGdldFNsaWRlSW5kZXggPSBpbmRleCA9PiB7XG4gICAgbGV0IHNsaWRlSW5kZXggPSBpbmRleDtcbiAgICBpZiAoaW5kZXggPCAwKSB7XG4gICAgICBzbGlkZUluZGV4ID0gc2xpZGVzLmxlbmd0aCArIGluZGV4O1xuICAgIH0gZWxzZSBpZiAoc2xpZGVJbmRleCA+PSBzbGlkZXMubGVuZ3RoKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmVcbiAgICAgIHNsaWRlSW5kZXggPSBzbGlkZUluZGV4IC0gc2xpZGVzLmxlbmd0aDtcbiAgICB9XG4gICAgcmV0dXJuIHNsaWRlSW5kZXg7XG4gIH07XG4gIGNvbnN0IHN0eWxlID0gc3dpcGVyLmlzSG9yaXpvbnRhbCgpID8ge1xuICAgIFtzd2lwZXIucnRsVHJhbnNsYXRlID8gJ3JpZ2h0JyA6ICdsZWZ0J106IGAke3ZpcnR1YWxEYXRhLm9mZnNldH1weGBcbiAgfSA6IHtcbiAgICB0b3A6IGAke3ZpcnR1YWxEYXRhLm9mZnNldH1weGBcbiAgfTtcbiAgY29uc3Qge1xuICAgIGZyb20sXG4gICAgdG9cbiAgfSA9IHZpcnR1YWxEYXRhO1xuICBjb25zdCBsb29wRnJvbSA9IHN3aXBlci5wYXJhbXMubG9vcCA/IC1zbGlkZXMubGVuZ3RoIDogMDtcbiAgY29uc3QgbG9vcFRvID0gc3dpcGVyLnBhcmFtcy5sb29wID8gc2xpZGVzLmxlbmd0aCAqIDIgOiBzbGlkZXMubGVuZ3RoO1xuICBjb25zdCBzbGlkZXNUb1JlbmRlciA9IFtdO1xuICBmb3IgKGxldCBpID0gbG9vcEZyb207IGkgPCBsb29wVG87IGkgKz0gMSkge1xuICAgIGlmIChpID49IGZyb20gJiYgaSA8PSB0bykge1xuICAgICAgc2xpZGVzVG9SZW5kZXIucHVzaChzbGlkZXNbZ2V0U2xpZGVJbmRleChpKV0pO1xuICAgIH1cbiAgfVxuICByZXR1cm4gc2xpZGVzVG9SZW5kZXIubWFwKChjaGlsZCwgaW5kZXgpID0+IHtcbiAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNsb25lRWxlbWVudChjaGlsZCwge1xuICAgICAgc3dpcGVyLFxuICAgICAgc3R5bGUsXG4gICAgICBrZXk6IGBzbGlkZS0ke2luZGV4fWBcbiAgICB9KTtcbiAgfSk7XG59XG5leHBvcnQgeyByZW5kZXJWaXJ0dWFsIH07Il0sIm5hbWVzIjpbInJlbmRlclZpcnR1YWwiLCJzd2lwZXIiLCJzbGlkZXMiLCJ2aXJ0dWFsRGF0YSIsImdldFNsaWRlSW5kZXgiLCJpbmRleCIsInNsaWRlSW5kZXgiLCJsZW5ndGgiLCJzdHlsZSIsImlzSG9yaXpvbnRhbCIsInJ0bFRyYW5zbGF0ZSIsIm9mZnNldCIsInRvcCIsImZyb20iLCJ0byIsImxvb3BGcm9tIiwicGFyYW1zIiwibG9vcCIsImxvb3BUbyIsInNsaWRlc1RvUmVuZGVyIiwiaSIsInB1c2giLCJtYXAiLCJjaGlsZCIsIlJlYWN0IiwiY2xvbmVFbGVtZW50Iiwia2V5Il0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBc0NTQTs7O2VBQUFBOzs7OERBdENTOzs7Ozs7QUFDbEIsU0FBU0EsY0FBY0MsTUFBTSxFQUFFQyxNQUFNLEVBQUVDLFdBQVc7SUFDaEQsSUFBSSxDQUFDQSxhQUFhLE9BQU87SUFDekIsTUFBTUMsZ0JBQWdCQyxDQUFBQTtRQUNwQixJQUFJQyxhQUFhRDtRQUNqQixJQUFJQSxRQUFRLEdBQUc7WUFDYkMsYUFBYUosT0FBT0ssTUFBTSxHQUFHRjtRQUMvQixPQUFPLElBQUlDLGNBQWNKLE9BQU9LLE1BQU0sRUFBRTtZQUN0QywyQkFBMkI7WUFDM0JELGFBQWFBLGFBQWFKLE9BQU9LLE1BQU07UUFDekM7UUFDQSxPQUFPRDtJQUNUO0lBQ0EsTUFBTUUsUUFBUVAsT0FBT1EsWUFBWSxLQUFLO1FBQ3BDLENBQUNSLE9BQU9TLFlBQVksR0FBRyxVQUFVLE9BQU8sRUFBRSxDQUFDLEVBQUVQLFlBQVlRLE1BQU0sQ0FBQyxFQUFFLENBQUM7SUFDckUsSUFBSTtRQUNGQyxLQUFLLENBQUMsRUFBRVQsWUFBWVEsTUFBTSxDQUFDLEVBQUUsQ0FBQztJQUNoQztJQUNBLE1BQU0sRUFDSkUsSUFBSSxFQUNKQyxFQUFFLEVBQ0gsR0FBR1g7SUFDSixNQUFNWSxXQUFXZCxPQUFPZSxNQUFNLENBQUNDLElBQUksR0FBRyxDQUFDZixPQUFPSyxNQUFNLEdBQUc7SUFDdkQsTUFBTVcsU0FBU2pCLE9BQU9lLE1BQU0sQ0FBQ0MsSUFBSSxHQUFHZixPQUFPSyxNQUFNLEdBQUcsSUFBSUwsT0FBT0ssTUFBTTtJQUNyRSxNQUFNWSxpQkFBaUIsRUFBRTtJQUN6QixJQUFLLElBQUlDLElBQUlMLFVBQVVLLElBQUlGLFFBQVFFLEtBQUssRUFBRztRQUN6QyxJQUFJQSxLQUFLUCxRQUFRTyxLQUFLTixJQUFJO1lBQ3hCSyxlQUFlRSxJQUFJLENBQUNuQixNQUFNLENBQUNFLGNBQWNnQixHQUFHO1FBQzlDO0lBQ0Y7SUFDQSxPQUFPRCxlQUFlRyxHQUFHLENBQUMsQ0FBQ0MsT0FBT2xCO1FBQ2hDLE9BQU8sV0FBVyxHQUFFbUIsY0FBSyxDQUFDQyxZQUFZLENBQUNGLE9BQU87WUFDNUN0QjtZQUNBTztZQUNBa0IsS0FBSyxDQUFDLE1BQU0sRUFBRXJCLE1BQU0sQ0FBQztRQUN2QjtJQUNGO0FBQ0YifQ==