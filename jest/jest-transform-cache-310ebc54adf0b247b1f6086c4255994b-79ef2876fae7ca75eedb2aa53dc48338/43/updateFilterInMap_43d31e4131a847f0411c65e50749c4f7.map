{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/rpql/src/lib/rpql-utils/updateFilterInMap.ts"],"sourcesContent":["import { RpqlFilterMap, RpqlFlatFilter } from \"@rp/common/api-types\"\n\ntype Update<TFilter> = Omit<TFilter, \"id\">\nexport type UpdateSignature<TFilter> = Update<TFilter> | ((a: Update<TFilter>) => Update<TFilter>)\n\nexport const getUpdateFilter = <TFilter extends RpqlFlatFilter>(\n  filter: TFilter,\n): Update<TFilter> => {\n  const { id: _id, ...rest } = filter\n  return rest\n}\n\nexport function updateFilterInMap<TFilter extends RpqlFlatFilter = RpqlFlatFilter>(\n  filterMap: RpqlFilterMap,\n  filter: TFilter | null,\n  update: UpdateSignature<TFilter>,\n) {\n  if (filter === null) return { error: \"Attempting to update non-existant filter\", map: filterMap }\n\n  const updateFilter = getUpdateFilter(filter)\n\n  const newFilterContent = typeof update === \"function\" ? update(updateFilter) : update\n  const newFilter = {\n    id: filter.id,\n    ...newFilterContent,\n  } as RpqlFlatFilter // TODO: enforce specific flat filter type\n\n  const map = {\n    ...filterMap,\n    [filter.id]: newFilter,\n  }\n  return { map }\n}\n"],"names":["getUpdateFilter","updateFilterInMap","filter","id","_id","rest","filterMap","update","error","map","updateFilter","newFilterContent","newFilter"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;;;;;;;;IAKaA,eAAe;eAAfA;;IAOGC,iBAAiB;eAAjBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAPT,MAAMD,kBAAkB,CAC7BE;IAEA,MAAM,EAAEC,IAAIC,GAAG,EAAW,GAAGF,QAATG,kCAASH;QAArBC;;IACR,OAAOE;AACT;AAEO,SAASJ,kBACdK,SAAwB,EACxBJ,MAAsB,EACtBK,MAAgC;IAEhC,IAAIL,WAAW,MAAM,OAAO;QAAEM,OAAO;QAA4CC,KAAKH;IAAU;IAEhG,MAAMI,eAAeV,gBAAgBE;IAErC,MAAMS,mBAAmB,OAAOJ,WAAW,aAAaA,OAAOG,gBAAgBH;IAC/E,MAAMK,YAAY;QAChBT,IAAID,OAAOC,EAAE;OACVQ,iBACe,0CAA0C;;IAE9D,MAAMF,MAAM,wCACPH;QACH,CAACJ,OAAOC,EAAE,CAAC,EAAES;;IAEf,OAAO;QAAEH;IAAI;AACf"}