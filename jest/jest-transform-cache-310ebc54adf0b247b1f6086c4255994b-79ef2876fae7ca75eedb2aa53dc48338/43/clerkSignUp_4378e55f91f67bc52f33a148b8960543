69201ec8e6669e9b290d04ca877e88f3
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "clerkSignUp", {
    enumerable: true,
    get: function() {
        return clerkSignUp;
    }
});
const clerkSignUp = ({ id, email = "email@test.com", timestamp = Date.now() })=>{
    const unsafe_metadata = id ? {
        self_registered: true,
        requireOnboarding: true,
        source: "web-client",
        initialLogin: true,
        utm: {},
        initialLoginId: "a5537882-3d0c-4bb9-8f73-30dc69ecce65"
    } : {};
    return {
        response: {
            object: "sign_up_attempt",
            id: "sua_2wisdrvOCHhkWRnfzOL49qqx8VW",
            status: "missing_requirements",
            required_fields: [
                "email_address",
                "password",
                "first_name",
                "last_name"
            ],
            optional_fields: [
                "oauth_apple",
                "oauth_google",
                "oauth_microsoft"
            ],
            missing_fields: id ? [] : [
                "first_name",
                "last_name",
                "password"
            ],
            unverified_fields: [
                "email_address"
            ],
            verifications: {
                email_address: null,
                phone_number: null,
                web3_wallet: null,
                external_account: null
            },
            username: null,
            email_address: email,
            phone_number: null,
            web3_wallet: null,
            password_enabled: false,
            first_name: null,
            last_name: null,
            unsafe_metadata,
            public_metadata: {},
            custom_action: false,
            external_id: null,
            created_session_id: null,
            created_user_id: null,
            abandon_at: timestamp + 15 * 60 * 1000,
            legal_accepted_at: null
        },
        client: {
            object: "client",
            id: "client_2wisdqU5pXaEoc42pMP2CIQvLEI",
            sessions: [],
            sign_in: null,
            sign_up: {
                object: "sign_up_attempt",
                id: "sua_2wisdrvOCHhkWRnfzOL49qqx8VW",
                status: "missing_requirements",
                required_fields: [
                    "password",
                    "first_name",
                    "last_name",
                    "email_address"
                ],
                optional_fields: [
                    "oauth_apple",
                    "oauth_google",
                    "oauth_microsoft"
                ],
                missing_fields: [
                    "password",
                    "first_name",
                    "last_name"
                ],
                unverified_fields: [
                    "email_address"
                ],
                verifications: {
                    email_address: null,
                    phone_number: null,
                    web3_wallet: null,
                    external_account: null
                },
                username: null,
                email_address: email,
                phone_number: null,
                web3_wallet: null,
                password_enabled: false,
                first_name: null,
                last_name: null,
                unsafe_metadata,
                public_metadata: {},
                custom_action: false,
                external_id: null,
                created_session_id: null,
                created_user_id: null,
                abandon_at: timestamp,
                legal_accepted_at: null
            },
            last_active_session_id: null,
            cookie_expires_at: null,
            captcha_bypass: false,
            created_at: timestamp,
            updated_at: timestamp
        }
    };
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvZGV2ZWxvcG1lbnQvc3JjL2xpYi9tc3cvbW9ja3MvY2xlcmsvY2xlcmtTaWduVXAudHMiXSwic291cmNlc0NvbnRlbnQiOlsidHlwZSBQcm9wcyA9IHtcbiAgaWQ/OiBzdHJpbmdcbiAgZW1haWw/OiBzdHJpbmdcbiAgdGltZXN0YW1wPzogbnVtYmVyXG59XG5leHBvcnQgY29uc3QgY2xlcmtTaWduVXAgPSAoeyBpZCwgZW1haWwgPSBcImVtYWlsQHRlc3QuY29tXCIsIHRpbWVzdGFtcCA9IERhdGUubm93KCkgfTogUHJvcHMpID0+IHtcbiAgY29uc3QgdW5zYWZlX21ldGFkYXRhID0gaWRcbiAgICA/IHtcbiAgICAgICAgc2VsZl9yZWdpc3RlcmVkOiB0cnVlLFxuICAgICAgICByZXF1aXJlT25ib2FyZGluZzogdHJ1ZSxcbiAgICAgICAgc291cmNlOiBcIndlYi1jbGllbnRcIixcbiAgICAgICAgaW5pdGlhbExvZ2luOiB0cnVlLFxuICAgICAgICB1dG06IHt9LFxuICAgICAgICBpbml0aWFsTG9naW5JZDogXCJhNTUzNzg4Mi0zZDBjLTRiYjktOGY3My0zMGRjNjllY2NlNjVcIixcbiAgICAgIH1cbiAgICA6IHt9XG4gIHJldHVybiB7XG4gICAgcmVzcG9uc2U6IHtcbiAgICAgIG9iamVjdDogXCJzaWduX3VwX2F0dGVtcHRcIixcbiAgICAgIGlkOiBcInN1YV8yd2lzZHJ2T0NIaGtXUm5mek9MNDlxcXg4VldcIixcbiAgICAgIHN0YXR1czogXCJtaXNzaW5nX3JlcXVpcmVtZW50c1wiLFxuICAgICAgcmVxdWlyZWRfZmllbGRzOiBbXCJlbWFpbF9hZGRyZXNzXCIsIFwicGFzc3dvcmRcIiwgXCJmaXJzdF9uYW1lXCIsIFwibGFzdF9uYW1lXCJdLFxuICAgICAgb3B0aW9uYWxfZmllbGRzOiBbXCJvYXV0aF9hcHBsZVwiLCBcIm9hdXRoX2dvb2dsZVwiLCBcIm9hdXRoX21pY3Jvc29mdFwiXSxcbiAgICAgIG1pc3NpbmdfZmllbGRzOiBpZCA/IFtdIDogW1wiZmlyc3RfbmFtZVwiLCBcImxhc3RfbmFtZVwiLCBcInBhc3N3b3JkXCJdLFxuICAgICAgdW52ZXJpZmllZF9maWVsZHM6IFtcImVtYWlsX2FkZHJlc3NcIl0sXG4gICAgICB2ZXJpZmljYXRpb25zOiB7XG4gICAgICAgIGVtYWlsX2FkZHJlc3M6IG51bGwsXG4gICAgICAgIHBob25lX251bWJlcjogbnVsbCxcbiAgICAgICAgd2ViM193YWxsZXQ6IG51bGwsXG4gICAgICAgIGV4dGVybmFsX2FjY291bnQ6IG51bGwsXG4gICAgICB9LFxuICAgICAgdXNlcm5hbWU6IG51bGwsXG4gICAgICBlbWFpbF9hZGRyZXNzOiBlbWFpbCxcbiAgICAgIHBob25lX251bWJlcjogbnVsbCxcbiAgICAgIHdlYjNfd2FsbGV0OiBudWxsLFxuICAgICAgcGFzc3dvcmRfZW5hYmxlZDogZmFsc2UsXG4gICAgICBmaXJzdF9uYW1lOiBudWxsLFxuICAgICAgbGFzdF9uYW1lOiBudWxsLFxuICAgICAgdW5zYWZlX21ldGFkYXRhLFxuICAgICAgcHVibGljX21ldGFkYXRhOiB7fSxcbiAgICAgIGN1c3RvbV9hY3Rpb246IGZhbHNlLFxuICAgICAgZXh0ZXJuYWxfaWQ6IG51bGwsXG4gICAgICBjcmVhdGVkX3Nlc3Npb25faWQ6IG51bGwsXG4gICAgICBjcmVhdGVkX3VzZXJfaWQ6IG51bGwsXG4gICAgICBhYmFuZG9uX2F0OiB0aW1lc3RhbXAgKyAxNSAqIDYwICogMTAwMCxcbiAgICAgIGxlZ2FsX2FjY2VwdGVkX2F0OiBudWxsLFxuICAgIH0sXG4gICAgY2xpZW50OiB7XG4gICAgICBvYmplY3Q6IFwiY2xpZW50XCIsXG4gICAgICBpZDogXCJjbGllbnRfMndpc2RxVTVwWGFFb2M0MnBNUDJDSVF2TEVJXCIsXG4gICAgICBzZXNzaW9uczogW10sXG4gICAgICBzaWduX2luOiBudWxsLFxuICAgICAgc2lnbl91cDoge1xuICAgICAgICBvYmplY3Q6IFwic2lnbl91cF9hdHRlbXB0XCIsXG4gICAgICAgIGlkOiBcInN1YV8yd2lzZHJ2T0NIaGtXUm5mek9MNDlxcXg4VldcIixcbiAgICAgICAgc3RhdHVzOiBcIm1pc3NpbmdfcmVxdWlyZW1lbnRzXCIsXG4gICAgICAgIHJlcXVpcmVkX2ZpZWxkczogW1wicGFzc3dvcmRcIiwgXCJmaXJzdF9uYW1lXCIsIFwibGFzdF9uYW1lXCIsIFwiZW1haWxfYWRkcmVzc1wiXSxcbiAgICAgICAgb3B0aW9uYWxfZmllbGRzOiBbXCJvYXV0aF9hcHBsZVwiLCBcIm9hdXRoX2dvb2dsZVwiLCBcIm9hdXRoX21pY3Jvc29mdFwiXSxcbiAgICAgICAgbWlzc2luZ19maWVsZHM6IFtcInBhc3N3b3JkXCIsIFwiZmlyc3RfbmFtZVwiLCBcImxhc3RfbmFtZVwiXSxcbiAgICAgICAgdW52ZXJpZmllZF9maWVsZHM6IFtcImVtYWlsX2FkZHJlc3NcIl0sXG4gICAgICAgIHZlcmlmaWNhdGlvbnM6IHtcbiAgICAgICAgICBlbWFpbF9hZGRyZXNzOiBudWxsLFxuICAgICAgICAgIHBob25lX251bWJlcjogbnVsbCxcbiAgICAgICAgICB3ZWIzX3dhbGxldDogbnVsbCxcbiAgICAgICAgICBleHRlcm5hbF9hY2NvdW50OiBudWxsLFxuICAgICAgICB9LFxuICAgICAgICB1c2VybmFtZTogbnVsbCxcbiAgICAgICAgZW1haWxfYWRkcmVzczogZW1haWwsXG4gICAgICAgIHBob25lX251bWJlcjogbnVsbCxcbiAgICAgICAgd2ViM193YWxsZXQ6IG51bGwsXG4gICAgICAgIHBhc3N3b3JkX2VuYWJsZWQ6IGZhbHNlLFxuICAgICAgICBmaXJzdF9uYW1lOiBudWxsLFxuICAgICAgICBsYXN0X25hbWU6IG51bGwsXG4gICAgICAgIHVuc2FmZV9tZXRhZGF0YSxcbiAgICAgICAgcHVibGljX21ldGFkYXRhOiB7fSxcbiAgICAgICAgY3VzdG9tX2FjdGlvbjogZmFsc2UsXG4gICAgICAgIGV4dGVybmFsX2lkOiBudWxsLFxuICAgICAgICBjcmVhdGVkX3Nlc3Npb25faWQ6IG51bGwsXG4gICAgICAgIGNyZWF0ZWRfdXNlcl9pZDogbnVsbCxcbiAgICAgICAgYWJhbmRvbl9hdDogdGltZXN0YW1wLFxuICAgICAgICBsZWdhbF9hY2NlcHRlZF9hdDogbnVsbCxcbiAgICAgIH0sXG4gICAgICBsYXN0X2FjdGl2ZV9zZXNzaW9uX2lkOiBudWxsLFxuICAgICAgY29va2llX2V4cGlyZXNfYXQ6IG51bGwsXG4gICAgICBjYXB0Y2hhX2J5cGFzczogZmFsc2UsXG4gICAgICBjcmVhdGVkX2F0OiB0aW1lc3RhbXAsXG4gICAgICB1cGRhdGVkX2F0OiB0aW1lc3RhbXAsXG4gICAgfSxcbiAgfVxufVxuIl0sIm5hbWVzIjpbImNsZXJrU2lnblVwIiwiaWQiLCJlbWFpbCIsInRpbWVzdGFtcCIsIkRhdGUiLCJub3ciLCJ1bnNhZmVfbWV0YWRhdGEiLCJzZWxmX3JlZ2lzdGVyZWQiLCJyZXF1aXJlT25ib2FyZGluZyIsInNvdXJjZSIsImluaXRpYWxMb2dpbiIsInV0bSIsImluaXRpYWxMb2dpbklkIiwicmVzcG9uc2UiLCJvYmplY3QiLCJzdGF0dXMiLCJyZXF1aXJlZF9maWVsZHMiLCJvcHRpb25hbF9maWVsZHMiLCJtaXNzaW5nX2ZpZWxkcyIsInVudmVyaWZpZWRfZmllbGRzIiwidmVyaWZpY2F0aW9ucyIsImVtYWlsX2FkZHJlc3MiLCJwaG9uZV9udW1iZXIiLCJ3ZWIzX3dhbGxldCIsImV4dGVybmFsX2FjY291bnQiLCJ1c2VybmFtZSIsInBhc3N3b3JkX2VuYWJsZWQiLCJmaXJzdF9uYW1lIiwibGFzdF9uYW1lIiwicHVibGljX21ldGFkYXRhIiwiY3VzdG9tX2FjdGlvbiIsImV4dGVybmFsX2lkIiwiY3JlYXRlZF9zZXNzaW9uX2lkIiwiY3JlYXRlZF91c2VyX2lkIiwiYWJhbmRvbl9hdCIsImxlZ2FsX2FjY2VwdGVkX2F0IiwiY2xpZW50Iiwic2Vzc2lvbnMiLCJzaWduX2luIiwic2lnbl91cCIsImxhc3RfYWN0aXZlX3Nlc3Npb25faWQiLCJjb29raWVfZXhwaXJlc19hdCIsImNhcHRjaGFfYnlwYXNzIiwiY3JlYXRlZF9hdCIsInVwZGF0ZWRfYXQiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBS2FBOzs7ZUFBQUE7OztBQUFOLE1BQU1BLGNBQWMsQ0FBQyxFQUFFQyxFQUFFLEVBQUVDLFFBQVEsZ0JBQWdCLEVBQUVDLFlBQVlDLEtBQUtDLEdBQUcsRUFBRSxFQUFTO0lBQ3pGLE1BQU1DLGtCQUFrQkwsS0FDcEI7UUFDRU0saUJBQWlCO1FBQ2pCQyxtQkFBbUI7UUFDbkJDLFFBQVE7UUFDUkMsY0FBYztRQUNkQyxLQUFLLENBQUM7UUFDTkMsZ0JBQWdCO0lBQ2xCLElBQ0EsQ0FBQztJQUNMLE9BQU87UUFDTEMsVUFBVTtZQUNSQyxRQUFRO1lBQ1JiLElBQUk7WUFDSmMsUUFBUTtZQUNSQyxpQkFBaUI7Z0JBQUM7Z0JBQWlCO2dCQUFZO2dCQUFjO2FBQVk7WUFDekVDLGlCQUFpQjtnQkFBQztnQkFBZTtnQkFBZ0I7YUFBa0I7WUFDbkVDLGdCQUFnQmpCLEtBQUssRUFBRSxHQUFHO2dCQUFDO2dCQUFjO2dCQUFhO2FBQVc7WUFDakVrQixtQkFBbUI7Z0JBQUM7YUFBZ0I7WUFDcENDLGVBQWU7Z0JBQ2JDLGVBQWU7Z0JBQ2ZDLGNBQWM7Z0JBQ2RDLGFBQWE7Z0JBQ2JDLGtCQUFrQjtZQUNwQjtZQUNBQyxVQUFVO1lBQ1ZKLGVBQWVuQjtZQUNmb0IsY0FBYztZQUNkQyxhQUFhO1lBQ2JHLGtCQUFrQjtZQUNsQkMsWUFBWTtZQUNaQyxXQUFXO1lBQ1h0QjtZQUNBdUIsaUJBQWlCLENBQUM7WUFDbEJDLGVBQWU7WUFDZkMsYUFBYTtZQUNiQyxvQkFBb0I7WUFDcEJDLGlCQUFpQjtZQUNqQkMsWUFBWS9CLFlBQVksS0FBSyxLQUFLO1lBQ2xDZ0MsbUJBQW1CO1FBQ3JCO1FBQ0FDLFFBQVE7WUFDTnRCLFFBQVE7WUFDUmIsSUFBSTtZQUNKb0MsVUFBVSxFQUFFO1lBQ1pDLFNBQVM7WUFDVEMsU0FBUztnQkFDUHpCLFFBQVE7Z0JBQ1JiLElBQUk7Z0JBQ0pjLFFBQVE7Z0JBQ1JDLGlCQUFpQjtvQkFBQztvQkFBWTtvQkFBYztvQkFBYTtpQkFBZ0I7Z0JBQ3pFQyxpQkFBaUI7b0JBQUM7b0JBQWU7b0JBQWdCO2lCQUFrQjtnQkFDbkVDLGdCQUFnQjtvQkFBQztvQkFBWTtvQkFBYztpQkFBWTtnQkFDdkRDLG1CQUFtQjtvQkFBQztpQkFBZ0I7Z0JBQ3BDQyxlQUFlO29CQUNiQyxlQUFlO29CQUNmQyxjQUFjO29CQUNkQyxhQUFhO29CQUNiQyxrQkFBa0I7Z0JBQ3BCO2dCQUNBQyxVQUFVO2dCQUNWSixlQUFlbkI7Z0JBQ2ZvQixjQUFjO2dCQUNkQyxhQUFhO2dCQUNiRyxrQkFBa0I7Z0JBQ2xCQyxZQUFZO2dCQUNaQyxXQUFXO2dCQUNYdEI7Z0JBQ0F1QixpQkFBaUIsQ0FBQztnQkFDbEJDLGVBQWU7Z0JBQ2ZDLGFBQWE7Z0JBQ2JDLG9CQUFvQjtnQkFDcEJDLGlCQUFpQjtnQkFDakJDLFlBQVkvQjtnQkFDWmdDLG1CQUFtQjtZQUNyQjtZQUNBSyx3QkFBd0I7WUFDeEJDLG1CQUFtQjtZQUNuQkMsZ0JBQWdCO1lBQ2hCQyxZQUFZeEM7WUFDWnlDLFlBQVl6QztRQUNkO0lBQ0Y7QUFDRiJ9