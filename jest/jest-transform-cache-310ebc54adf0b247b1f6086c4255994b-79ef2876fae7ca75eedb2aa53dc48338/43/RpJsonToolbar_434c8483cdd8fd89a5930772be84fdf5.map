{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/rpjson/src/lib/components/RpJsonToolbar/RpJsonToolbar.tsx"],"sourcesContent":["import { useEffect, useMemo, useRef, useState } from \"react\"\nimport { useDebounce } from \"react-use\"\nimport { Grid, Skeleton } from \"@rp/react/web/mui/core\"\nimport { MarkSentencesButton } from \"./MarkSentencesButton\"\nimport { MatchesSelector } from \"./MatchesSelector\"\nimport { GrowingSearch, SearchIcon } from \"./RpJsonToolbar.styles\"\nimport { RpJsonToolBarAdornment } from \"./RpJsonToolbarAdornment\"\nimport { SearchRpJsonButton } from \"./SearchRpJsonButton\"\nimport { getPixelSize, numberLoop } from \"./rpJsonToolbarUtils\"\n\ntype RpJsonToolbarProps = {\n  value: string\n  onChange?: (value: string) => void\n  actions: {\n    toggleRpJson?: (event: boolean) => void\n    toggleSentences?: (event: boolean) => void\n  }\n  onArrowsClick: (index: number) => void\n  matchesCount: number\n  currentMatch: number\n  areMatchesLoading: boolean\n  onMatchesChange?: (index: number) => void\n  enableMatches?: boolean\n  foundCount: number\n  markSentences: boolean\n  size?: \"small\" | \"medium\" | undefined\n  className?: string\n}\n\n/**\n * The RpJsonToolbar that contains the form for searching, matching, viewing and navigating:\n * 1. Search strings\n * 2. Matches\n * 3. Sentences\n * 4. Entities and Events\n */\nconst RpJsonToolbar = ({\n  onChange,\n  onArrowsClick,\n  actions,\n  matchesCount,\n  currentMatch,\n  areMatchesLoading,\n  onMatchesChange,\n  enableMatches = false,\n  markSentences,\n  foundCount,\n  value,\n  className = \"\",\n  size = \"small\",\n  ...args\n}: RpJsonToolbarProps) => {\n  const [textValue, setTextValue] = useState(value)\n  const [arrowIndex, setArrowIndex] = useState<number>(1)\n  const [isExpanded, setIsExpanded] = useState<boolean>(false)\n  const [animation, setAnimation] = useState<boolean>(false)\n  const ref = useRef(null)\n  const textRef = useRef<HTMLInputElement>(null)\n  const pixelSize = getPixelSize(size)\n\n  useEffect(() => {\n    if (arrowIndex > foundCount) setArrowIndex(1)\n  }, [arrowIndex, foundCount, textValue])\n\n  useDebounce(\n    () => {\n      if (!onChange) {\n        return\n      }\n\n      if (!animation) {\n        return onChange(\"\")\n      }\n      return onChange(textValue)\n    },\n    100,\n    [textValue, animation],\n  )\n\n  const handleExpand = () => {\n    setAnimation(true)\n    setIsExpanded(true)\n  }\n\n  const handleCollapse = () => {\n    setAnimation(false)\n    setTimeout(() => {\n      setIsExpanded(false)\n    }, 200)\n  }\n\n  const displayMatches = useMemo(\n    () =>\n      areMatchesLoading ? (\n        <Skeleton variant=\"rectangular\" width={150} height=\"100%\" />\n      ) : (\n        <MatchesSelector\n          matchesCount={matchesCount}\n          onSelectionChange={onMatchesChange}\n          currentMatch={currentMatch}\n        />\n      ),\n    [areMatchesLoading, matchesCount, onMatchesChange, currentMatch],\n  )\n\n  const findBar = isExpanded ? (\n    <Grid item xs>\n      <GrowingSearch\n        autoComplete=\"off\"\n        ref={ref}\n        autoFocus\n        visible={animation}\n        data-testid=\"RpJsonToolbarTextField\"\n        inputRef={textRef}\n        onKeyPress={event => {\n          if (event.key === \"Enter\") {\n            const index = numberLoop(foundCount, arrowIndex, 1)\n            setArrowIndex(index)\n            onArrowsClick(index)\n          }\n        }}\n        onChange={event => {\n          setTextValue(event.target.value)\n        }}\n        onBlur={textValue === \"\" ? handleCollapse : undefined}\n        fullWidth\n        size={size}\n        value={textValue}\n        InputProps={{\n          style: { height: pixelSize },\n          startAdornment: <SearchIcon />,\n          endAdornment: (\n            <RpJsonToolBarAdornment\n              hasText={textValue.length > 0}\n              foundCount={foundCount}\n              onArrowsClick={direction => {\n                const index = numberLoop(foundCount, arrowIndex, direction)\n                setArrowIndex(index)\n                onArrowsClick(index)\n              }}\n              arrowIndex={arrowIndex}\n              onClose={handleCollapse}\n              textRef={textRef}\n            />\n          ),\n        }}\n        placeholder={\"Find in document\"}\n        {...args}\n      />\n    </Grid>\n  ) : (\n    <SearchRpJsonButton size={size} onChange={handleExpand} />\n  )\n\n  return (\n    <div className={className}>\n      <Grid container columnSpacing={1} justifyContent=\"flex-end\">\n        {enableMatches && !(!areMatchesLoading && matchesCount === 0) ? (\n          <Grid item xs>\n            {displayMatches}\n          </Grid>\n        ) : null}\n        {onChange ? findBar : null}\n\n        {matchesCount && actions.toggleSentences ? (\n          <Grid item xs=\"auto\">\n            <MarkSentencesButton\n              markSentences={markSentences}\n              size={size}\n              onChange={actions.toggleSentences}\n            />\n          </Grid>\n        ) : null}\n      </Grid>\n    </div>\n  )\n}\n\nexport { RpJsonToolbar }\nexport type { RpJsonToolbarProps }\n"],"names":["RpJsonToolbar","onChange","onArrowsClick","actions","matchesCount","currentMatch","areMatchesLoading","onMatchesChange","enableMatches","markSentences","foundCount","value","className","size","args","textValue","setTextValue","useState","arrowIndex","setArrowIndex","isExpanded","setIsExpanded","animation","setAnimation","ref","useRef","textRef","pixelSize","getPixelSize","useEffect","useDebounce","handleExpand","handleCollapse","setTimeout","displayMatches","useMemo","Skeleton","variant","width","height","MatchesSelector","onSelectionChange","findBar","Grid","item","xs","GrowingSearch","autoComplete","autoFocus","visible","data-testid","inputRef","onKeyPress","event","key","index","numberLoop","target","onBlur","undefined","fullWidth","InputProps","style","startAdornment","SearchIcon","endAdornment","RpJsonToolBarAdornment","hasText","length","direction","onClose","placeholder","SearchRpJsonButton","div","container","columnSpacing","justifyContent","toggleSentences","MarkSentencesButton"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}