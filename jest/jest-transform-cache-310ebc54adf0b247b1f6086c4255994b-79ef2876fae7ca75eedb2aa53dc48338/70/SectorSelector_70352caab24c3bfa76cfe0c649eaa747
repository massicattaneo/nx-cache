3f40be28546635af3d92161b5ce25332
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "SectorSelector", {
    enumerable: true,
    get: function() {
        return SectorSelector;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _compositecomponents = require("@rp/react/web/common/composite-components");
const _hooks = require("@rp/react/web/common/hooks");
const _core = require("@rp/react/web/mui/core");
const _icons = require("@rp/react/web/mui/icons");
const renderSelectOptions = (sectors)=>{
    return sectors && sectors.map((sector, index)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_core.MenuItem, {
            value: sector,
            role: "menuitem",
            children: sector
        }, `${sector}-${index}`));
};
const SectorSelector = ({ sector, sectorsOptions, handleSectorSelection })=>{
    const { isMobile } = (0, _hooks.useDeviceInfo)();
    const handleChange = (event)=>{
        handleSectorSelection(event.target.value);
    };
    const currentValue = sector || "";
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.BriefStepsLegend, {
                sx: {
                    alignItems: "center",
                    mb: 2
                },
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                    children: "Select a sector for your analysis:"
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                bgcolor: "elevation.dp01",
                p: 2,
                borderRadius: 1,
                mt: 1.5,
                ml: !isMobile ? 7 : undefined,
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                        bgcolor: "elevation.dp08",
                        borderRadius: 0.5,
                        display: "flex",
                        alignItems: "center",
                        mb: 1.5,
                        width: "fit-content",
                        py: 0.25,
                        px: 0.5,
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.TrendingUp, {
                                sx: {
                                    mr: 1,
                                    height: "20px",
                                    width: "20px"
                                }
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                                fontSize: "14px",
                                fontWeight: "bold",
                                children: "Sector"
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                        mt: 1,
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Select, {
                            value: currentValue,
                            label: "Select a Sector",
                            onChange: handleChange,
                            inputProps: {
                                "data-testid": "sector-options-id"
                            },
                            sx: {
                                width: "100%"
                            },
                            displayEmpty: true,
                            input: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.OutlinedInput, {}),
                            renderValue: (selected)=>{
                                if (selected.length === 0) {
                                    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                                        children: "Select a Sector"
                                    });
                                }
                                return selected;
                            },
                            children: renderSelectOptions(sectorsOptions)
                        })
                    })
                ]
            })
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL3dvcmtmbG93L3NyYy9saWIvU2VjdG9yU2VsZWN0b3IvU2VjdG9yU2VsZWN0b3IudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNlY3RvciB9IGZyb20gXCJAcnAvcmVhY3QvdGFuc3RhY2stYXBpL3dvcmtmbG93XCJcbmltcG9ydCB7IEJyaWVmU3RlcHNMZWdlbmQgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9jb21tb24vY29tcG9zaXRlLWNvbXBvbmVudHNcIlxuaW1wb3J0IHsgdXNlRGV2aWNlSW5mbyB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL2NvbW1vbi9ob29rc1wiXG5pbXBvcnQge1xuICBCb3gsXG4gIE1lbnVJdGVtLFxuICBPdXRsaW5lZElucHV0LFxuICBTZWxlY3QsXG4gIFNlbGVjdENoYW5nZUV2ZW50LFxuICBUeXBvZ3JhcGh5LFxufSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9tdWkvY29yZVwiXG5pbXBvcnQgeyBUcmVuZGluZ1VwIH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvbXVpL2ljb25zXCJcblxuY29uc3QgcmVuZGVyU2VsZWN0T3B0aW9ucyA9IChzZWN0b3JzOiBBcnJheTxTZWN0b3I+KSA9PiB7XG4gIHJldHVybiAoXG4gICAgc2VjdG9ycyAmJlxuICAgIHNlY3RvcnMubWFwKChzZWN0b3IsIGluZGV4KSA9PiAoXG4gICAgICA8TWVudUl0ZW0ga2V5PXtgJHtzZWN0b3J9LSR7aW5kZXh9YH0gdmFsdWU9e3NlY3Rvcn0gcm9sZT1cIm1lbnVpdGVtXCI+XG4gICAgICAgIHtzZWN0b3J9XG4gICAgICA8L01lbnVJdGVtPlxuICAgICkpXG4gIClcbn1cblxuY29uc3QgU2VjdG9yU2VsZWN0b3IgPSAoe1xuICBzZWN0b3IsXG4gIHNlY3RvcnNPcHRpb25zLFxuICBoYW5kbGVTZWN0b3JTZWxlY3Rpb24sXG59OiB7XG4gIHNlY3Rvcj86IFNlY3RvclxuICBzZWN0b3JzT3B0aW9uczogQXJyYXk8U2VjdG9yPlxuICBoYW5kbGVTZWN0b3JTZWxlY3Rpb246IChzZWN0b3I6IFNlY3RvcikgPT4gdm9pZFxufSkgPT4ge1xuICBjb25zdCB7IGlzTW9iaWxlIH0gPSB1c2VEZXZpY2VJbmZvKClcbiAgY29uc3QgaGFuZGxlQ2hhbmdlID0gKGV2ZW50OiBTZWxlY3RDaGFuZ2VFdmVudCkgPT4ge1xuICAgIGhhbmRsZVNlY3RvclNlbGVjdGlvbihldmVudC50YXJnZXQudmFsdWUgYXMgU2VjdG9yKVxuICB9XG5cbiAgY29uc3QgY3VycmVudFZhbHVlID0gc2VjdG9yIHx8IFwiXCJcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8QnJpZWZTdGVwc0xlZ2VuZCBzeD17eyBhbGlnbkl0ZW1zOiBcImNlbnRlclwiLCBtYjogMiB9fT5cbiAgICAgICAgPFR5cG9ncmFwaHk+e1wiU2VsZWN0IGEgc2VjdG9yIGZvciB5b3VyIGFuYWx5c2lzOlwifTwvVHlwb2dyYXBoeT5cbiAgICAgIDwvQnJpZWZTdGVwc0xlZ2VuZD5cbiAgICAgIDxCb3hcbiAgICAgICAgYmdjb2xvcj17XCJlbGV2YXRpb24uZHAwMVwifVxuICAgICAgICBwPXsyfVxuICAgICAgICBib3JkZXJSYWRpdXM9ezF9XG4gICAgICAgIG10PXsxLjV9XG4gICAgICAgIG1sPXshaXNNb2JpbGUgPyA3IDogdW5kZWZpbmVkfVxuICAgICAgPlxuICAgICAgICA8Qm94XG4gICAgICAgICAgYmdjb2xvcj17XCJlbGV2YXRpb24uZHAwOFwifVxuICAgICAgICAgIGJvcmRlclJhZGl1cz17MC41fVxuICAgICAgICAgIGRpc3BsYXk9e1wiZmxleFwifVxuICAgICAgICAgIGFsaWduSXRlbXM9e1wiY2VudGVyXCJ9XG4gICAgICAgICAgbWI9ezEuNX1cbiAgICAgICAgICB3aWR0aD17XCJmaXQtY29udGVudFwifVxuICAgICAgICAgIHB5PXswLjI1fVxuICAgICAgICAgIHB4PXswLjV9XG4gICAgICAgID5cbiAgICAgICAgICA8VHJlbmRpbmdVcCBzeD17eyBtcjogMSwgaGVpZ2h0OiBcIjIwcHhcIiwgd2lkdGg6IFwiMjBweFwiIH19IC8+XG4gICAgICAgICAgPFR5cG9ncmFwaHkgZm9udFNpemU9e1wiMTRweFwifSBmb250V2VpZ2h0PXtcImJvbGRcIn0+XG4gICAgICAgICAgICBTZWN0b3JcbiAgICAgICAgICA8L1R5cG9ncmFwaHk+XG4gICAgICAgIDwvQm94PlxuICAgICAgICA8Qm94IG10PXsxfT5cbiAgICAgICAgICA8U2VsZWN0XG4gICAgICAgICAgICB2YWx1ZT17Y3VycmVudFZhbHVlfVxuICAgICAgICAgICAgbGFiZWw9XCJTZWxlY3QgYSBTZWN0b3JcIlxuICAgICAgICAgICAgb25DaGFuZ2U9e2hhbmRsZUNoYW5nZX1cbiAgICAgICAgICAgIGlucHV0UHJvcHM9e3tcbiAgICAgICAgICAgICAgXCJkYXRhLXRlc3RpZFwiOiBcInNlY3Rvci1vcHRpb25zLWlkXCIsXG4gICAgICAgICAgICB9fVxuICAgICAgICAgICAgc3g9e3sgd2lkdGg6IFwiMTAwJVwiIH19XG4gICAgICAgICAgICBkaXNwbGF5RW1wdHlcbiAgICAgICAgICAgIGlucHV0PXs8T3V0bGluZWRJbnB1dCAvPn1cbiAgICAgICAgICAgIHJlbmRlclZhbHVlPXtzZWxlY3RlZCA9PiB7XG4gICAgICAgICAgICAgIGlmIChzZWxlY3RlZC5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gPFR5cG9ncmFwaHk+U2VsZWN0IGEgU2VjdG9yPC9UeXBvZ3JhcGh5PlxuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgcmV0dXJuIHNlbGVjdGVkXG4gICAgICAgICAgICB9fVxuICAgICAgICAgID5cbiAgICAgICAgICAgIHtyZW5kZXJTZWxlY3RPcHRpb25zKHNlY3RvcnNPcHRpb25zKX1cbiAgICAgICAgICA8L1NlbGVjdD5cbiAgICAgICAgPC9Cb3g+XG4gICAgICA8L0JveD5cbiAgICA8Lz5cbiAgKVxufVxuXG5leHBvcnQgeyBTZWN0b3JTZWxlY3RvciB9XG4iXSwibmFtZXMiOlsiU2VjdG9yU2VsZWN0b3IiLCJyZW5kZXJTZWxlY3RPcHRpb25zIiwic2VjdG9ycyIsIm1hcCIsInNlY3RvciIsImluZGV4IiwiTWVudUl0ZW0iLCJ2YWx1ZSIsInJvbGUiLCJzZWN0b3JzT3B0aW9ucyIsImhhbmRsZVNlY3RvclNlbGVjdGlvbiIsImlzTW9iaWxlIiwidXNlRGV2aWNlSW5mbyIsImhhbmRsZUNoYW5nZSIsImV2ZW50IiwidGFyZ2V0IiwiY3VycmVudFZhbHVlIiwiQnJpZWZTdGVwc0xlZ2VuZCIsInN4IiwiYWxpZ25JdGVtcyIsIm1iIiwiVHlwb2dyYXBoeSIsIkJveCIsImJnY29sb3IiLCJwIiwiYm9yZGVyUmFkaXVzIiwibXQiLCJtbCIsInVuZGVmaW5lZCIsImRpc3BsYXkiLCJ3aWR0aCIsInB5IiwicHgiLCJUcmVuZGluZ1VwIiwibXIiLCJoZWlnaHQiLCJmb250U2l6ZSIsImZvbnRXZWlnaHQiLCJTZWxlY3QiLCJsYWJlbCIsIm9uQ2hhbmdlIiwiaW5wdXRQcm9wcyIsImRpc3BsYXlFbXB0eSIsImlucHV0IiwiT3V0bGluZWRJbnB1dCIsInJlbmRlclZhbHVlIiwic2VsZWN0ZWQiLCJsZW5ndGgiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQThGU0E7OztlQUFBQTs7OztxQ0E3RndCO3VCQUNIO3NCQVF2Qjt1QkFDb0I7QUFFM0IsTUFBTUMsc0JBQXNCLENBQUNDO0lBQzNCLE9BQ0VBLFdBQ0FBLFFBQVFDLEdBQUcsQ0FBQyxDQUFDQyxRQUFRQyxzQkFDbkIscUJBQUNDLGNBQVE7WUFBNEJDLE9BQU9IO1lBQVFJLE1BQUs7c0JBQ3RESjtXQURZLENBQUMsRUFBRUEsT0FBTyxDQUFDLEVBQUVDLE1BQU0sQ0FBQztBQUt6QztBQUVBLE1BQU1MLGlCQUFpQixDQUFDLEVBQ3RCSSxNQUFNLEVBQ05LLGNBQWMsRUFDZEMscUJBQXFCLEVBS3RCO0lBQ0MsTUFBTSxFQUFFQyxRQUFRLEVBQUUsR0FBR0MsSUFBQUEsb0JBQWE7SUFDbEMsTUFBTUMsZUFBZSxDQUFDQztRQUNwQkosc0JBQXNCSSxNQUFNQyxNQUFNLENBQUNSLEtBQUs7SUFDMUM7SUFFQSxNQUFNUyxlQUFlWixVQUFVO0lBRS9CLHFCQUNFOzswQkFDRSxxQkFBQ2EscUNBQWdCO2dCQUFDQyxJQUFJO29CQUFFQyxZQUFZO29CQUFVQyxJQUFJO2dCQUFFOzBCQUNsRCxjQUFBLHFCQUFDQyxnQkFBVTs4QkFBRTs7OzBCQUVmLHNCQUFDQyxTQUFHO2dCQUNGQyxTQUFTO2dCQUNUQyxHQUFHO2dCQUNIQyxjQUFjO2dCQUNkQyxJQUFJO2dCQUNKQyxJQUFJLENBQUNoQixXQUFXLElBQUlpQjs7a0NBRXBCLHNCQUFDTixTQUFHO3dCQUNGQyxTQUFTO3dCQUNURSxjQUFjO3dCQUNkSSxTQUFTO3dCQUNUVixZQUFZO3dCQUNaQyxJQUFJO3dCQUNKVSxPQUFPO3dCQUNQQyxJQUFJO3dCQUNKQyxJQUFJOzswQ0FFSixxQkFBQ0MsaUJBQVU7Z0NBQUNmLElBQUk7b0NBQUVnQixJQUFJO29DQUFHQyxRQUFRO29DQUFRTCxPQUFPO2dDQUFPOzswQ0FDdkQscUJBQUNULGdCQUFVO2dDQUFDZSxVQUFVO2dDQUFRQyxZQUFZOzBDQUFROzs7O2tDQUlwRCxxQkFBQ2YsU0FBRzt3QkFBQ0ksSUFBSTtrQ0FDUCxjQUFBLHFCQUFDWSxZQUFNOzRCQUNML0IsT0FBT1M7NEJBQ1B1QixPQUFNOzRCQUNOQyxVQUFVM0I7NEJBQ1Y0QixZQUFZO2dDQUNWLGVBQWU7NEJBQ2pCOzRCQUNBdkIsSUFBSTtnQ0FBRVksT0FBTzs0QkFBTzs0QkFDcEJZLFlBQVk7NEJBQ1pDLHFCQUFPLHFCQUFDQyxtQkFBYTs0QkFDckJDLGFBQWFDLENBQUFBO2dDQUNYLElBQUlBLFNBQVNDLE1BQU0sS0FBSyxHQUFHO29DQUN6QixxQkFBTyxxQkFBQzFCLGdCQUFVO2tEQUFDOztnQ0FDckI7Z0NBRUEsT0FBT3lCOzRCQUNUO3NDQUVDN0Msb0JBQW9CUTs7Ozs7OztBQU1qQyJ9