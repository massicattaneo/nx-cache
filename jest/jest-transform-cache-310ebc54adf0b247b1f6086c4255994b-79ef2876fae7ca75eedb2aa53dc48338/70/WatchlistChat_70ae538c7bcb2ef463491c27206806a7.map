{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/watchlists/src/lib/WatchlistChat/WatchlistChat.tsx"],"sourcesContent":["import { Dispatch, SetStateAction, useCallback, useEffect, useMemo, useRef } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport { useUser } from \"@clerk/clerk-react\"\nimport { CqsItem, Watchlist } from \"@rp/common/api-types\"\nimport { HEADER_HEIGHT, SUMMARY_ERROR_MESSAGES } from \"@rp/common/settings\"\nimport { getUserInitials, randomIntFromInterval } from \"@rp/common/utils\"\nimport { chatCustomerIo } from \"@rp/react/common/customer-io\"\nimport { WatchlistSuggestion } from \"@rp/react/common/watchlists\"\nimport { generatePromptFromWorkflow, getWorkflowDefaultDateFilter } from \"@rp/react/common/workflow\"\nimport { useWorkflowList } from \"@rp/react/tanstack-api/workflow\"\nimport {\n  Chat,\n  INTERACTION_CLASS_NAME,\n  MOBILE_USER_YOU_CONTAINER_CLASS_NAME,\n  useChatDataContext,\n} from \"@rp/react/web/chat\"\nimport { useSnackbar } from \"@rp/react/web/common/providers\"\nimport { ChunkStoryCard } from \"@rp/react/web/common/results-story-card\"\nimport { getWatchlistCustomTitle } from \"@rp/react/web/common/watchlists\"\nimport { Box } from \"@rp/react/web/mui/core\"\nimport { WATCHLIST_ID_ROUTE } from \"@rp/react/web/router\"\nimport { DelayedFade } from \"./DelayedFade\"\nimport { WatchlistChatBot } from \"./WatchlistChatBot\"\nimport { WatchlistChatContainer } from \"./WatchlistChatContainer\"\nimport { WatchlistChatHeader } from \"./WatchlistChatHeader\"\nimport { WatchlistChatInput } from \"./WatchlistChatInput\"\nimport { PARALLEL_ENTITIES_AMOUNT, WatchlistChatMoreActions } from \"./WatchlistChatMoreActions\"\nimport { WatchlistChatScrollable } from \"./WatchlistChatScrollable\"\nimport { scrollToInteraction } from \"./scrollToInteraction\"\n\ntype Feedback = Record<string, Record<number, number>>\n\ntype Props = {\n  watchlist: Watchlist\n  enableUseMasterRouter: boolean\n  feedback: Feedback\n  setFeedback: Dispatch<SetStateAction<Feedback>>\n  enableChatMetrics: boolean\n  webSocketUrl: string | undefined\n  selectedEntity: CqsItem | null\n  resetChat: Dispatch<SetStateAction<CqsItem | null>>\n  setIsChatCollapsed: Dispatch<SetStateAction<boolean>>\n  offsetY?: number\n  entities: Array<CqsItem>\n  chatWidth: number\n  sourceFilters: Partial<Record<string, boolean>>\n  showAllPrompts?: boolean\n  setShowAllPrompts?: Dispatch<SetStateAction<boolean>>\n  entityOffset: number\n  setEntityOffset: Dispatch<SetStateAction<number>>\n  currentDataView?: string\n}\n\nconst sliceAndMapEntities = (entities: Array<CqsItem>, entityOffset: number) => {\n  return entities.slice(entityOffset, entityOffset + PARALLEL_ENTITIES_AMOUNT).map(entity => ({\n    key: entity.key,\n    name: entity.name,\n    type: entity.entityType ?? \"\",\n  }))\n}\n\nconst getPlaceholder = (variant: \"new\" | \"add\", selectedEntity: CqsItem | null) => {\n  if (!selectedEntity) {\n    return variant === \"new\"\n      ? `Ask a question about your Watchlist`\n      : `Ask a follow up about your Watchlist`\n  }\n  return variant === \"new\"\n    ? `Ask a question about ${selectedEntity.name}`\n    : `Ask a follow up about ${selectedEntity.name}`\n}\n\nconst PANEL_PADDING = 32\nexport const WATCHLIST_HEADER_HEIGHT = 64\n\nexport function WatchlistChat({\n  watchlist,\n  enableUseMasterRouter,\n  feedback,\n  setFeedback,\n  enableChatMetrics,\n  webSocketUrl,\n  selectedEntity,\n  resetChat,\n  offsetY = HEADER_HEIGHT + PANEL_PADDING,\n  entities,\n  chatWidth,\n  sourceFilters,\n  setIsChatCollapsed,\n  showAllPrompts,\n  setShowAllPrompts,\n  entityOffset,\n  setEntityOffset,\n  currentDataView,\n}: Props) {\n  const {\n    chat: { id, savedChat, isError, isLoading },\n    scope: { scope, setScope },\n    files: { fileIds, setFileIds },\n    watchlist: { watchlistId, setWatchlistId },\n    ui: { isAuditMode, currentInteraction, setCurrentInteraction, timingsMap },\n    mutations: { addPrompt, addResponse, editLastQuestion, regenerateLastResponse },\n    helpers: { resetChatState },\n  } = useChatDataContext()\n  const { data: workflows = [] } = useWorkflowList(selectedEntity ?? {})\n  const scrollRef = useRef<HTMLDivElement>(null)\n  const navigate = useNavigate()\n  const { enqueueInfo, enqueueError } = useSnackbar()\n  const { user } = useUser()\n  const userInitials = getUserInitials(user?.fullName) ?? \"\"\n  const hasInteractions = !!(\n    ((savedChat?.interactions.length ?? 0) > 0 && !currentInteraction) ||\n    currentInteraction?.error ||\n    currentInteraction?.stopped\n  )\n  const shouldCreateWatchlistInteraction = !hasInteractions && !selectedEntity\n\n  const chatEntities = useMemo(() => {\n    if (selectedEntity) {\n      const { key, name, entityType } = selectedEntity\n      return [{ key, name, type: entityType ?? \"\" }]\n    }\n    if (shouldCreateWatchlistInteraction) {\n      return sliceAndMapEntities(entities, entityOffset)\n    }\n    return undefined\n  }, [entities, entityOffset, selectedEntity, shouldCreateWatchlistInteraction])\n\n  const variant = id || currentInteraction ? \"add\" : \"new\"\n  const placeholder = getPlaceholder(variant, selectedEntity)\n\n  const onAuditTrailScroll = useCallback((_: number, interactionTimestamp: string) => {\n    if (!scrollRef.current) return\n    scrollToInteraction(scrollRef.current, interactionTimestamp)\n  }, [])\n  const isValidPrompt = !(watchlist.isClientWatchlist === true) && watchlist.items.length > 0\n\n  const getCustomTitle = useCallback(\n    (prompt: string) => getWatchlistCustomTitle(prompt, watchlist.name, selectedEntity?.name),\n    [selectedEntity, watchlist.name],\n  )\n\n  const onSuggestionClick = useCallback(\n    (suggestion: WatchlistSuggestion) => {\n      const originWorkflow = workflows.find(item => item.id === suggestion.workflow?.id)\n      if (suggestion.workflow && originWorkflow) {\n        const selectedTimeframe = getWorkflowDefaultDateFilter(originWorkflow)\n        const selectedData = { selectedCompanies: chatEntities, selectedTimeframe }\n        const workflow = { originWorkflow, selectedData }\n        const params = generatePromptFromWorkflow({ originWorkflow, selectedData })\n        addPrompt({\n          ...params,\n          customTitle: getCustomTitle(params.customTitle),\n          workflow,\n          watchlistInfo: {\n            clickedSuggestedPromptText: suggestion.label,\n            suggestedPromptClassification: \"workflow\",\n            promptContextLevel: selectedEntity ? \"entity\" : \"watchlist\",\n            promptCategory: selectedEntity?.category ?? null,\n            promptCompanyType:\n              selectedEntity?.category === \"Companies\" ? selectedEntity?.group1 ?? null : null,\n            dataViewAtClick: currentDataView ?? null,\n          },\n        })\n      } else {\n        const prompt = suggestion.prompt(selectedEntity)\n        addPrompt({\n          displayedMessage: suggestion.displayPrompt?.(selectedEntity) ?? prompt,\n          prompt,\n          customTitle: getCustomTitle(prompt),\n          entities: chatEntities,\n          interactionType: shouldCreateWatchlistInteraction ? \"watchlist\" : undefined,\n          watchlistId: watchlist.id,\n          watchlistInfo: {\n            clickedSuggestedPromptText: suggestion.label,\n            suggestedPromptClassification: \"standard\",\n            promptContextLevel: selectedEntity ? \"entity\" : \"watchlist\",\n            promptCategory: selectedEntity?.category ?? null,\n            promptCompanyType:\n              selectedEntity?.category === \"Companies\" ? selectedEntity.group1 ?? null : null,\n            dataViewAtClick: currentDataView ?? null,\n          },\n        })\n      }\n    },\n    [\n      chatEntities,\n      getCustomTitle,\n      addPrompt,\n      selectedEntity,\n      shouldCreateWatchlistInteraction,\n      watchlist.id,\n      workflows,\n      currentDataView,\n    ],\n  )\n\n  useEffect(() => {\n    setWatchlistId(watchlist.id)\n  }, [setWatchlistId, watchlist.id])\n\n  useEffect(() => {\n    if (isError && currentInteraction) {\n      chatCustomerIo.abandoned()\n    }\n  }, [currentInteraction, id, isError])\n  useEffect(() => {\n    if (isError && id && watchlist.id) {\n      navigate(WATCHLIST_ID_ROUTE.replace(\":id\", watchlist.id), { replace: true })\n      enqueueError(\"Chat does not exist\")\n      setCurrentInteraction(undefined)\n    }\n  }, [isError, navigate, enqueueError, id, watchlist.id, setCurrentInteraction])\n\n  useEffect(() => {\n    if (isLoading) return\n    scrollToInteraction(scrollRef.current)\n  }, [isLoading, id])\n\n  useEffect(() => {\n    return () => {\n      if (!id) return\n      chatCustomerIo.abandoned()\n      resetChatState({ withNavigation: false, resetWatchlistId: false })\n    }\n  }, [resetChatState, id])\n\n  const showSuggestions = !id\n  const remainingEntities = entities.length - entityOffset - PARALLEL_ENTITIES_AMOUNT\n  const shouldShowAskForMore =\n    savedChat &&\n    hasInteractions &&\n    savedChat.interactions[savedChat.interactions.length - 1]?.origin.type === \"watchlist\" &&\n    remainingEntities > 0\n\n  const onAskForMore = useCallback(\n    (offset: number) => {\n      setEntityOffset(offset)\n      addPrompt({\n        prompt: savedChat?.interactions[savedChat.interactions.length - 1].inputMessage ?? \"Error\",\n        displayedMessage: `Extend analysis to the next ${Math.min(\n          PARALLEL_ENTITIES_AMOUNT,\n          remainingEntities,\n        )} constituents`,\n        entities: sliceAndMapEntities(entities, offset),\n        interactionType: \"watchlist\",\n        watchlistId,\n        watchlistInfo: {\n          promptContextLevel: \"watchlist\",\n          dataViewAtClick: currentDataView ?? null,\n          clickedSuggestedPromptText: null,\n          promptCategory: null,\n          promptCompanyType: null,\n          suggestedPromptClassification: null,\n        },\n      })\n    },\n    [\n      addPrompt,\n      entities,\n      remainingEntities,\n      savedChat,\n      setEntityOffset,\n      watchlistId,\n      currentDataView,\n    ],\n  )\n  const offsetWithoutHeader = offsetY + WATCHLIST_HEADER_HEIGHT\n\n  return (\n    <Box\n      sx={theme => ({\n        position: \"fixed\",\n        zIndex: 10,\n        width: \"100%\",\n        borderRadius: 4,\n        height: `calc(100vh - ${offsetY - 4}px)`,\n        backgroundColor: theme.palette.elevation.dp01,\n        overscrollBehavior: \"contain\",\n        boxShadow: theme.shadows[24],\n        border: `1px solid rgba(255, 255, 255, 0.16)`,\n        maxWidth: chatWidth,\n        overflow: \"hidden\",\n      })}\n    >\n      <WatchlistChatHeader\n        selectedEntity={selectedEntity}\n        watchlistName={watchlist.name}\n        setIsChatCollapsed={setIsChatCollapsed}\n        hasInteractions={hasInteractions}\n        onRestart={() => resetChat(null)}\n        hasSelectedEntity={selectedEntity !== null}\n        chat={savedChat}\n        watchlist={watchlist}\n      />\n      <WatchlistChatScrollable\n        ref={scrollRef}\n        height={`calc(100vh - ${offsetWithoutHeader + 95}px)`}\n        maxWidth={chatWidth}\n      >\n        <WatchlistChatContainer minHeight={`calc(100vh - ${160 + offsetWithoutHeader}px)`}>\n          {showSuggestions ? (\n            <DelayedFade>\n              <WatchlistChatBot\n                workflows={workflows}\n                setShowAllPrompts={setShowAllPrompts}\n                showAllPrompts={showAllPrompts}\n                offsetY={offsetWithoutHeader}\n                selectedEntity={selectedEntity}\n                watchlist={watchlist}\n                userInitials={userInitials}\n                currentInteraction={currentInteraction}\n                onSuggestionClick={onSuggestionClick}\n              />\n            </DelayedFade>\n          ) : (\n            <Box\n              sx={{\n                overflowX: \"auto\",\n                mb: 4,\n                [`& .${MOBILE_USER_YOU_CONTAINER_CLASS_NAME}`]: { flexGrow: 0, gap: 1 },\n                [`& .${INTERACTION_CLASS_NAME}`]: { mt: 2 },\n              }}\n            >\n              <Chat\n                parentScrollContainer={scrollRef.current}\n                scrollContainer={scrollRef.current}\n                onAuditTrailScroll={onAuditTrailScroll}\n                variant=\"mobile\"\n                useMasterRouter={enableUseMasterRouter}\n                chat={savedChat}\n                filesIds={fileIds}\n                auditMode={isAuditMode}\n                onResponseComplete={addResponse}\n                userInitials={userInitials}\n                moreActions={\n                  shouldShowAskForMore ? (\n                    <WatchlistChatMoreActions\n                      remainingEntities={remainingEntities}\n                      onAskForMore={onAskForMore}\n                      entityOffset={entityOffset}\n                    />\n                  ) : null\n                }\n                onRegenerateResponse={regenerateLastResponse}\n                onEdit={editLastQuestion}\n                watchlistId={watchlistId}\n                onChatFeedbackSuccess={({ feedbackSentiment, interactionTimestamp }) => {\n                  setFeedback(prev => ({\n                    ...prev,\n                    [id]: {\n                      ...prev[id],\n                      [interactionTimestamp]: feedbackSentiment,\n                    },\n                  }))\n                }}\n                renderCard={({ story, interactionTimestamp, chatId }, index) => {\n                  return (\n                    <ChunkStoryCard\n                      onCardClick={() => {\n                        chatCustomerIo.chunkStoryCardClick({\n                          chatId,\n                          documentId: story.id,\n                          interactionTimestamp,\n                        })\n                      }}\n                      story={story}\n                      index={index}\n                      key={story.id}\n                    />\n                  )\n                }}\n                getTimings={id => timingsMap[id]}\n                scope={scope}\n                areMetricsEnabled={enableChatMetrics}\n                currentInteraction={currentInteraction}\n                onError={(_, error) => {\n                  if (error.type === \"ERROR\") {\n                    setCurrentInteraction(prev => {\n                      return prev !== undefined ? { ...prev, error: true } : undefined\n                    })\n                    reportError(new Error(error?.message))\n                    enqueueInfo(SUMMARY_ERROR_MESSAGES[randomIntFromInterval(0, 4)])\n                  }\n                }}\n                chatFeedback={feedback[id] ?? {}}\n                addPrompt={prompt => {\n                  addPrompt({\n                    prompt,\n                    entities: chatEntities,\n                    interactionType: shouldCreateWatchlistInteraction ? \"watchlist\" : undefined,\n                    watchlistId: watchlist.id,\n                    watchlistInfo: {\n                      clickedSuggestedPromptText: null,\n                      suggestedPromptClassification: null,\n                      dataViewAtClick: currentDataView ?? null,\n                      promptContextLevel: selectedEntity ? \"entity\" : \"watchlist\",\n                      promptCategory: selectedEntity?.category ?? null,\n                      promptCompanyType:\n                        selectedEntity?.category === \"Companies\"\n                          ? selectedEntity.group1 ?? null\n                          : null,\n                    },\n                  })\n                }}\n                webSocketUrl={webSocketUrl}\n              />\n            </Box>\n          )}\n        </WatchlistChatContainer>\n      </WatchlistChatScrollable>\n      {(savedChat?.userId === user?.id || !savedChat) && (\n        <WatchlistChatInput\n          hideOpacity={showSuggestions}\n          setScope={setScope}\n          scope={scope}\n          variant={variant}\n          addPrompt={({ prompt }) => {\n            return addPrompt({\n              prompt,\n              customTitle: getCustomTitle(prompt),\n              entities: chatEntities,\n              interactionType: shouldCreateWatchlistInteraction ? \"watchlist\" : undefined,\n              watchlistId: watchlist.id,\n              watchlistInfo: {\n                clickedSuggestedPromptText: null,\n                suggestedPromptClassification: null,\n                dataViewAtClick: currentDataView ?? null,\n                promptContextLevel: selectedEntity ? \"entity\" : \"watchlist\",\n                promptCategory: selectedEntity?.category ?? null,\n                promptCompanyType:\n                  selectedEntity?.category === \"Companies\" ? selectedEntity.group1 ?? null : null,\n              },\n            })\n          }}\n          placeholder={placeholder}\n          isValidPrompt={isValidPrompt}\n          sourceFilters={sourceFilters}\n          filesIds={fileIds}\n          setFilesIds={setFileIds}\n          currentInteraction={currentInteraction}\n          setCurrentInteraction={setCurrentInteraction}\n        />\n      )}\n    </Box>\n  )\n}\n"],"names":["WATCHLIST_HEADER_HEIGHT","WatchlistChat","sliceAndMapEntities","entities","entityOffset","slice","PARALLEL_ENTITIES_AMOUNT","map","entity","key","name","type","entityType","getPlaceholder","variant","selectedEntity","PANEL_PADDING","watchlist","enableUseMasterRouter","feedback","setFeedback","enableChatMetrics","webSocketUrl","resetChat","offsetY","HEADER_HEIGHT","chatWidth","sourceFilters","setIsChatCollapsed","showAllPrompts","setShowAllPrompts","setEntityOffset","currentDataView","savedChat","chat","id","isError","isLoading","scope","setScope","files","fileIds","setFileIds","watchlistId","setWatchlistId","ui","isAuditMode","currentInteraction","setCurrentInteraction","timingsMap","mutations","addPrompt","addResponse","editLastQuestion","regenerateLastResponse","helpers","resetChatState","useChatDataContext","data","workflows","useWorkflowList","scrollRef","useRef","navigate","useNavigate","enqueueInfo","enqueueError","useSnackbar","user","useUser","getUserInitials","userInitials","fullName","hasInteractions","interactions","length","error","stopped","shouldCreateWatchlistInteraction","chatEntities","useMemo","undefined","placeholder","onAuditTrailScroll","useCallback","_","interactionTimestamp","current","scrollToInteraction","isValidPrompt","isClientWatchlist","items","getCustomTitle","prompt","getWatchlistCustomTitle","onSuggestionClick","suggestion","originWorkflow","find","item","workflow","selectedTimeframe","getWorkflowDefaultDateFilter","selectedData","selectedCompanies","params","generatePromptFromWorkflow","customTitle","watchlistInfo","clickedSuggestedPromptText","label","suggestedPromptClassification","promptContextLevel","promptCategory","category","promptCompanyType","group1","dataViewAtClick","displayedMessage","displayPrompt","interactionType","useEffect","chatCustomerIo","abandoned","WATCHLIST_ID_ROUTE","replace","withNavigation","resetWatchlistId","showSuggestions","remainingEntities","shouldShowAskForMore","origin","onAskForMore","offset","inputMessage","Math","min","offsetWithoutHeader","Box","sx","theme","position","zIndex","width","borderRadius","height","backgroundColor","palette","elevation","dp01","overscrollBehavior","boxShadow","shadows","border","maxWidth","overflow","WatchlistChatHeader","watchlistName","onRestart","hasSelectedEntity","WatchlistChatScrollable","ref","WatchlistChatContainer","minHeight","DelayedFade","WatchlistChatBot","overflowX","mb","MOBILE_USER_YOU_CONTAINER_CLASS_NAME","flexGrow","gap","INTERACTION_CLASS_NAME","mt","Chat","parentScrollContainer","scrollContainer","useMasterRouter","filesIds","auditMode","onResponseComplete","moreActions","WatchlistChatMoreActions","onRegenerateResponse","onEdit","onChatFeedbackSuccess","feedbackSentiment","prev","renderCard","story","chatId","index","ChunkStoryCard","onCardClick","chunkStoryCardClick","documentId","getTimings","areMetricsEnabled","onError","reportError","Error","message","SUMMARY_ERROR_MESSAGES","randomIntFromInterval","chatFeedback","userId","WatchlistChatInput","hideOpacity","setFilesIds"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}