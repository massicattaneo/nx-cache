44b741a66679fb50a956e72fba8da9f6
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "WatchlistUploadModalContainer", {
    enumerable: true,
    get: function() {
        return WatchlistUploadModalContainer;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _compositecomponents = require("@rp/react/web/common/composite-components");
const _core = require("@rp/react/web/mui/core");
const _WatchlistsUploadDropZone = require("../WatchlistsUploadDropZone");
const _WatchlistUploadData = require("./WatchlistUploadData");
const _WatchlistUploadError = require("./WatchlistUploadError");
const _WatchlistUploadInstructions = require("./WatchlistUploadInstructions");
const CenteredContainer = ({ children })=>{
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
        sx: {
            display: "flex",
            justifyContent: "center",
            alignItems: "center",
            flexDirection: "column",
            height: "100%"
        },
        children: children
    });
};
const WatchlistUploadModalContainer = ({ open, onClose, isUploading, onBrowse, error, onDropFiles, onFilesRejected, data, watchlist, onSubmit })=>{
    if (!open) return null;
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.GenericModalWrapper, {
        isOpen: open,
        handleClose: onClose,
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
            sx: {
                position: "relative"
            },
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_WatchlistsUploadDropZone.WatchlistsUploadDropZone, {
                centerContent: true,
                onDropFiles: onDropFiles,
                onFilesRejected: onFilesRejected,
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_compositecomponents.ModalStyled, {
                    sx: {
                        width: 960
                    },
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.GenericModalHeader, {
                            title: data ? "Upload List" : "",
                            handleClose: onClose
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                            sx: {
                                height: 555
                            },
                            children: [
                                error && /*#__PURE__*/ (0, _jsxruntime.jsx)(CenteredContainer, {
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_WatchlistUploadError.WatchlistUploadError, {
                                        error: error
                                    })
                                }),
                                isUploading && !error && !data && /*#__PURE__*/ (0, _jsxruntime.jsxs)(CenteredContainer, {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.CircularProgress, {
                                            size: "24px",
                                            color: "primary"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                                            sx: {
                                                mt: 2
                                            },
                                            children: "Analyzing your file"
                                        })
                                    ]
                                }),
                                !isUploading && !error && !data && /*#__PURE__*/ (0, _jsxruntime.jsx)(_WatchlistUploadInstructions.WatchlistUploadInstructions, {
                                    onBrowse: onBrowse
                                }),
                                data && /*#__PURE__*/ (0, _jsxruntime.jsx)(_WatchlistUploadData.WatchlistUploadData, {
                                    onSubmit: onSubmit,
                                    onClose: onClose,
                                    data: data,
                                    watchlist: watchlist
                                })
                            ]
                        })
                    ]
                })
            })
        })
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL3dhdGNobGlzdHMvc3JjL2xpYi9XYXRjaGxpc3RVcGxvYWRNb2RhbC9XYXRjaGxpc3RVcGxvYWRNb2RhbENvbnRhaW5lci50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJvcHNXaXRoQ2hpbGRyZW4gfSBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IHsgV2F0Y2hsaXN0IH0gZnJvbSBcIkBycC9jb21tb24vYXBpLXR5cGVzXCJcbmltcG9ydCB7XG4gIEJhdGNoRW50aXR5U3VnZ2VzdGlvbixcbiAgV2F0Y2hsaXN0QmF0Y2hTdWdnZXN0aW9uUG9zdFJlc3BvbnNlRXh0ZW5kZWQsXG59IGZyb20gXCJAcnAvcmVhY3QvdGFuc3RhY2stYXBpL3N1Z2dlc3Rpb25cIlxuaW1wb3J0IHtcbiAgR2VuZXJpY01vZGFsSGVhZGVyLFxuICBHZW5lcmljTW9kYWxXcmFwcGVyLFxuICBNb2RhbFN0eWxlZCxcbn0gZnJvbSBcIkBycC9yZWFjdC93ZWIvY29tbW9uL2NvbXBvc2l0ZS1jb21wb25lbnRzXCJcbmltcG9ydCB7IEJveCwgQ2lyY3VsYXJQcm9ncmVzcywgVHlwb2dyYXBoeSB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL211aS9jb3JlXCJcbmltcG9ydCB7IFdhdGNobGlzdHNVcGxvYWREcm9wWm9uZSB9IGZyb20gXCIuLi9XYXRjaGxpc3RzVXBsb2FkRHJvcFpvbmVcIlxuaW1wb3J0IHsgV2F0Y2hsaXN0VXBsb2FkRGF0YSB9IGZyb20gXCIuL1dhdGNobGlzdFVwbG9hZERhdGFcIlxuaW1wb3J0IHsgV2F0Y2hsaXN0VXBsb2FkRXJyb3IgfSBmcm9tIFwiLi9XYXRjaGxpc3RVcGxvYWRFcnJvclwiXG5pbXBvcnQgeyBXYXRjaGxpc3RVcGxvYWRJbnN0cnVjdGlvbnMgfSBmcm9tIFwiLi9XYXRjaGxpc3RVcGxvYWRJbnN0cnVjdGlvbnNcIlxuXG5jb25zdCBDZW50ZXJlZENvbnRhaW5lciA9ICh7IGNoaWxkcmVuIH06IFByb3BzV2l0aENoaWxkcmVuKSA9PiB7XG4gIHJldHVybiAoXG4gICAgPEJveFxuICAgICAgc3g9e3tcbiAgICAgICAgZGlzcGxheTogXCJmbGV4XCIsXG4gICAgICAgIGp1c3RpZnlDb250ZW50OiBcImNlbnRlclwiLFxuICAgICAgICBhbGlnbkl0ZW1zOiBcImNlbnRlclwiLFxuICAgICAgICBmbGV4RGlyZWN0aW9uOiBcImNvbHVtblwiLFxuICAgICAgICBoZWlnaHQ6IFwiMTAwJVwiLFxuICAgICAgfX1cbiAgICA+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9Cb3g+XG4gIClcbn1cblxudHlwZSBPblN1Ym1pdFN0YXRzID0ge1xuICBjb25mbGljdHM6IHtcbiAgICBkZWxldGVkOiBudW1iZXJcbiAgICByZXNvbHZlZDogbnVtYmVyXG4gICAgdW5yZXNvbHZlZDogbnVtYmVyXG4gIH1cbiAgbWF0Y2hlZDoge1xuICAgIGRlbGV0ZWQ6IG51bWJlclxuICAgIG1vZGlmaWVkOiBudW1iZXJcbiAgICB1bm1vZGlmaWVkOiBudW1iZXJcbiAgfVxufVxuZXhwb3J0IHR5cGUgT25TdWJtaXQgPSAoaWRzOiBBcnJheTxCYXRjaEVudGl0eVN1Z2dlc3Rpb24+LCBzdGF0czogT25TdWJtaXRTdGF0cykgPT4gdm9pZFxuXG50eXBlIFByb3BzID0ge1xuICBvcGVuOiBib29sZWFuXG4gIG9uQ2xvc2U6ICgpID0+IHZvaWRcbiAgaXNVcGxvYWRpbmc6IGJvb2xlYW5cbiAgZXJyb3I/OiBFcnJvciB8IG51bGxcbiAgb25Ccm93c2U6ICgpID0+IHZvaWRcbiAgb25Ecm9wRmlsZXM6IChmaWxlczogQXJyYXk8RmlsZT4pID0+IHZvaWRcbiAgb25GaWxlc1JlamVjdGVkPzogKHByb3BzOiB7IGVycm9yOiBFcnJvciB9KSA9PiB2b2lkXG4gIGRhdGE6IFdhdGNobGlzdEJhdGNoU3VnZ2VzdGlvblBvc3RSZXNwb25zZUV4dGVuZGVkIHwgbnVsbFxuICB3YXRjaGxpc3Q6IFdhdGNobGlzdFxuICBvblN1Ym1pdDogT25TdWJtaXRcbn1cbmV4cG9ydCBjb25zdCBXYXRjaGxpc3RVcGxvYWRNb2RhbENvbnRhaW5lciA9ICh7XG4gIG9wZW4sXG4gIG9uQ2xvc2UsXG4gIGlzVXBsb2FkaW5nLFxuICBvbkJyb3dzZSxcbiAgZXJyb3IsXG4gIG9uRHJvcEZpbGVzLFxuICBvbkZpbGVzUmVqZWN0ZWQsXG4gIGRhdGEsXG4gIHdhdGNobGlzdCxcbiAgb25TdWJtaXQsXG59OiBQcm9wcykgPT4ge1xuICBpZiAoIW9wZW4pIHJldHVybiBudWxsXG4gIHJldHVybiAoXG4gICAgPEdlbmVyaWNNb2RhbFdyYXBwZXIgaXNPcGVuPXtvcGVufSBoYW5kbGVDbG9zZT17b25DbG9zZX0+XG4gICAgICA8Qm94IHN4PXt7IHBvc2l0aW9uOiBcInJlbGF0aXZlXCIgfX0+XG4gICAgICAgIDxXYXRjaGxpc3RzVXBsb2FkRHJvcFpvbmVcbiAgICAgICAgICBjZW50ZXJDb250ZW50XG4gICAgICAgICAgb25Ecm9wRmlsZXM9e29uRHJvcEZpbGVzfVxuICAgICAgICAgIG9uRmlsZXNSZWplY3RlZD17b25GaWxlc1JlamVjdGVkfVxuICAgICAgICA+XG4gICAgICAgICAgPE1vZGFsU3R5bGVkIHN4PXt7IHdpZHRoOiA5NjAgfX0+XG4gICAgICAgICAgICA8R2VuZXJpY01vZGFsSGVhZGVyIHRpdGxlPXtkYXRhID8gXCJVcGxvYWQgTGlzdFwiIDogXCJcIn0gaGFuZGxlQ2xvc2U9e29uQ2xvc2V9IC8+XG4gICAgICAgICAgICA8Qm94IHN4PXt7IGhlaWdodDogNTU1IH19PlxuICAgICAgICAgICAgICB7ZXJyb3IgJiYgKFxuICAgICAgICAgICAgICAgIDxDZW50ZXJlZENvbnRhaW5lcj5cbiAgICAgICAgICAgICAgICAgIDxXYXRjaGxpc3RVcGxvYWRFcnJvciBlcnJvcj17ZXJyb3J9IC8+XG4gICAgICAgICAgICAgICAgPC9DZW50ZXJlZENvbnRhaW5lcj5cbiAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAge2lzVXBsb2FkaW5nICYmICFlcnJvciAmJiAhZGF0YSAmJiAoXG4gICAgICAgICAgICAgICAgPENlbnRlcmVkQ29udGFpbmVyPlxuICAgICAgICAgICAgICAgICAgPENpcmN1bGFyUHJvZ3Jlc3Mgc2l6ZT1cIjI0cHhcIiBjb2xvcj1cInByaW1hcnlcIiAvPlxuICAgICAgICAgICAgICAgICAgPFR5cG9ncmFwaHkgc3g9e3sgbXQ6IDIgfX0+QW5hbHl6aW5nIHlvdXIgZmlsZTwvVHlwb2dyYXBoeT5cbiAgICAgICAgICAgICAgICA8L0NlbnRlcmVkQ29udGFpbmVyPlxuICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICB7IWlzVXBsb2FkaW5nICYmICFlcnJvciAmJiAhZGF0YSAmJiAoXG4gICAgICAgICAgICAgICAgPFdhdGNobGlzdFVwbG9hZEluc3RydWN0aW9ucyBvbkJyb3dzZT17b25Ccm93c2V9IC8+XG4gICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgIHtkYXRhICYmIChcbiAgICAgICAgICAgICAgICA8V2F0Y2hsaXN0VXBsb2FkRGF0YVxuICAgICAgICAgICAgICAgICAgb25TdWJtaXQ9e29uU3VibWl0fVxuICAgICAgICAgICAgICAgICAgb25DbG9zZT17b25DbG9zZX1cbiAgICAgICAgICAgICAgICAgIGRhdGE9e2RhdGF9XG4gICAgICAgICAgICAgICAgICB3YXRjaGxpc3Q9e3dhdGNobGlzdH1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAgPC9Nb2RhbFN0eWxlZD5cbiAgICAgICAgPC9XYXRjaGxpc3RzVXBsb2FkRHJvcFpvbmU+XG4gICAgICA8L0JveD5cbiAgICA8L0dlbmVyaWNNb2RhbFdyYXBwZXI+XG4gIClcbn1cbiJdLCJuYW1lcyI6WyJXYXRjaGxpc3RVcGxvYWRNb2RhbENvbnRhaW5lciIsIkNlbnRlcmVkQ29udGFpbmVyIiwiY2hpbGRyZW4iLCJCb3giLCJzeCIsImRpc3BsYXkiLCJqdXN0aWZ5Q29udGVudCIsImFsaWduSXRlbXMiLCJmbGV4RGlyZWN0aW9uIiwiaGVpZ2h0Iiwib3BlbiIsIm9uQ2xvc2UiLCJpc1VwbG9hZGluZyIsIm9uQnJvd3NlIiwiZXJyb3IiLCJvbkRyb3BGaWxlcyIsIm9uRmlsZXNSZWplY3RlZCIsImRhdGEiLCJ3YXRjaGxpc3QiLCJvblN1Ym1pdCIsIkdlbmVyaWNNb2RhbFdyYXBwZXIiLCJpc09wZW4iLCJoYW5kbGVDbG9zZSIsInBvc2l0aW9uIiwiV2F0Y2hsaXN0c1VwbG9hZERyb3Bab25lIiwiY2VudGVyQ29udGVudCIsIk1vZGFsU3R5bGVkIiwid2lkdGgiLCJHZW5lcmljTW9kYWxIZWFkZXIiLCJ0aXRsZSIsIldhdGNobGlzdFVwbG9hZEVycm9yIiwiQ2lyY3VsYXJQcm9ncmVzcyIsInNpemUiLCJjb2xvciIsIlR5cG9ncmFwaHkiLCJtdCIsIldhdGNobGlzdFVwbG9hZEluc3RydWN0aW9ucyIsIldhdGNobGlzdFVwbG9hZERhdGEiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkEyRGFBOzs7ZUFBQUE7Ozs7cUNBakROO3NCQUMyQzswQ0FDVDtxQ0FDTDtzQ0FDQzs2Q0FDTztBQUU1QyxNQUFNQyxvQkFBb0IsQ0FBQyxFQUFFQyxRQUFRLEVBQXFCO0lBQ3hELHFCQUNFLHFCQUFDQyxTQUFHO1FBQ0ZDLElBQUk7WUFDRkMsU0FBUztZQUNUQyxnQkFBZ0I7WUFDaEJDLFlBQVk7WUFDWkMsZUFBZTtZQUNmQyxRQUFRO1FBQ1Y7a0JBRUNQOztBQUdQO0FBNEJPLE1BQU1GLGdDQUFnQyxDQUFDLEVBQzVDVSxJQUFJLEVBQ0pDLE9BQU8sRUFDUEMsV0FBVyxFQUNYQyxRQUFRLEVBQ1JDLEtBQUssRUFDTEMsV0FBVyxFQUNYQyxlQUFlLEVBQ2ZDLElBQUksRUFDSkMsU0FBUyxFQUNUQyxRQUFRLEVBQ0Y7SUFDTixJQUFJLENBQUNULE1BQU0sT0FBTztJQUNsQixxQkFDRSxxQkFBQ1Usd0NBQW1CO1FBQUNDLFFBQVFYO1FBQU1ZLGFBQWFYO2tCQUM5QyxjQUFBLHFCQUFDUixTQUFHO1lBQUNDLElBQUk7Z0JBQUVtQixVQUFVO1lBQVc7c0JBQzlCLGNBQUEscUJBQUNDLGtEQUF3QjtnQkFDdkJDLGFBQWE7Z0JBQ2JWLGFBQWFBO2dCQUNiQyxpQkFBaUJBOzBCQUVqQixjQUFBLHNCQUFDVSxnQ0FBVztvQkFBQ3RCLElBQUk7d0JBQUV1QixPQUFPO29CQUFJOztzQ0FDNUIscUJBQUNDLHVDQUFrQjs0QkFBQ0MsT0FBT1osT0FBTyxnQkFBZ0I7NEJBQUlLLGFBQWFYOztzQ0FDbkUsc0JBQUNSLFNBQUc7NEJBQUNDLElBQUk7Z0NBQUVLLFFBQVE7NEJBQUk7O2dDQUNwQkssdUJBQ0MscUJBQUNiOzhDQUNDLGNBQUEscUJBQUM2QiwwQ0FBb0I7d0NBQUNoQixPQUFPQTs7O2dDQUdoQ0YsZUFBZSxDQUFDRSxTQUFTLENBQUNHLHNCQUN6QixzQkFBQ2hCOztzREFDQyxxQkFBQzhCLHNCQUFnQjs0Q0FBQ0MsTUFBSzs0Q0FBT0MsT0FBTTs7c0RBQ3BDLHFCQUFDQyxnQkFBVTs0Q0FBQzlCLElBQUk7Z0RBQUUrQixJQUFJOzRDQUFFO3NEQUFHOzs7O2dDQUc5QixDQUFDdkIsZUFBZSxDQUFDRSxTQUFTLENBQUNHLHNCQUMxQixxQkFBQ21CLHdEQUEyQjtvQ0FBQ3ZCLFVBQVVBOztnQ0FFeENJLHNCQUNDLHFCQUFDb0Isd0NBQW1CO29DQUNsQmxCLFVBQVVBO29DQUNWUixTQUFTQTtvQ0FDVE0sTUFBTUE7b0NBQ05DLFdBQVdBOzs7Ozs7Ozs7QUFTN0IifQ==