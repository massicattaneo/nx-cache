{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/discovery-sidebar/src/hooks/useDiscoveryPanelPreview.helpers.ts"],"sourcesContent":["import { capitalize } from \"@mui/material\"\nimport { CqsCategories, CqsItem } from \"@rp/common/api-types\"\n\n// This replaces dashes with spaces and capitalizes the first letter of each word\nexport const formatString = (str: string) => str.trim().split(\"-\").map(capitalize).join(\" \")\n\n// This function formats the display names for the topics\nconst formatDisplayNames = (topics: Array<CqsItem>) =>\n  topics.map(({ group1, group2, group3, group4, group5, name, ...rest }) => {\n    return {\n      name: name.trim(),\n      ...(group1 && { group1: formatString(group1) }),\n      ...(group2 && { group2: formatString(group2) }),\n      ...(group3 && { group3: formatString(group3) }),\n      ...(group4 && { group4: formatString(group4) }),\n      ...(group5 && { group5: formatString(group5) }),\n      ...rest,\n    }\n  })\n\n// This function groups topics that have the same name\nconst groupDuplicateTopics = (topics: Array<CqsItem>) =>\n  topics.reduce((acc: Array<CqsItem>, topic) => {\n    const existingTopicIndex = acc.findIndex(t => t.name === topic.name)\n\n    if (existingTopicIndex > -1) {\n      const newAcc = acc // thanks eslint for making me do this\n      newAcc[existingTopicIndex].volume += topic.volume\n      return newAcc\n    }\n\n    acc.push(topic)\n    return acc\n  }, [])\n\nconst modifyTopics = (topics: Array<CqsItem>) => {\n  // Format the group names\n  const formattedGroupNames = formatDisplayNames(topics)\n  // Group topics that have matching name\n  const groupedTopics = groupDuplicateTopics(formattedGroupNames)\n  // Put them back in order\n  const sortedTopics = groupedTopics.sort((a, b) => b.volume - a.volume)\n\n  return sortedTopics\n}\n\nexport const modifyDiscoveryPanelData = (data: CqsCategories): CqsCategories => {\n  const { topics = [], ...rest } = data\n  return {\n    ...rest,\n    ...(topics.length > 0 ? { topics: modifyTopics(topics) } : {}),\n  }\n}\n"],"names":["formatString","modifyDiscoveryPanelData","str","trim","split","map","capitalize","join","formatDisplayNames","topics","group1","group2","group3","group4","group5","name","rest","groupDuplicateTopics","reduce","acc","topic","existingTopicIndex","findIndex","t","newAcc","volume","push","modifyTopics","formattedGroupNames","groupedTopics","sortedTopics","sort","a","b","data","length"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;;;;;;;;IAIaA,YAAY;eAAZA;;IA0CAC,wBAAwB;eAAxBA;;;0BA9Cc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIpB,MAAMD,eAAe,CAACE,MAAgBA,IAAIC,IAAI,GAAGC,KAAK,CAAC,KAAKC,GAAG,CAACC,oBAAU,EAAEC,IAAI,CAAC;AAExF,yDAAyD;AACzD,MAAMC,qBAAqB,CAACC,SAC1BA,OAAOJ,GAAG,CAAC;YAAC,EAAEK,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,IAAI,EAAW,WAANC;YAAjDN;YAAQC;YAAQC;YAAQC;YAAQC;YAAQC;;QACpD,OAAO;YACLA,MAAMA,KAAKZ,IAAI;WACXO,UAAU;YAAEA,QAAQV,aAAaU;QAAQ,GACzCC,UAAU;YAAEA,QAAQX,aAAaW;QAAQ,GACzCC,UAAU;YAAEA,QAAQZ,aAAaY;QAAQ,GACzCC,UAAU;YAAEA,QAAQb,aAAaa;QAAQ,GACzCC,UAAU;YAAEA,QAAQd,aAAac;QAAQ,GAC1CE;IAEP;AAEF,sDAAsD;AACtD,MAAMC,uBAAuB,CAACR,SAC5BA,OAAOS,MAAM,CAAC,CAACC,KAAqBC;QAClC,MAAMC,qBAAqBF,IAAIG,SAAS,CAACC,CAAAA,IAAKA,EAAER,IAAI,KAAKK,MAAML,IAAI;QAEnE,IAAIM,qBAAqB,CAAC,GAAG;YAC3B,MAAMG,SAASL,IAAI,sCAAsC;;YACzDK,MAAM,CAACH,mBAAmB,CAACI,MAAM,IAAIL,MAAMK,MAAM;YACjD,OAAOD;QACT;QAEAL,IAAIO,IAAI,CAACN;QACT,OAAOD;IACT,GAAG,EAAE;AAEP,MAAMQ,eAAe,CAAClB;IACpB,yBAAyB;IACzB,MAAMmB,sBAAsBpB,mBAAmBC;IAC/C,uCAAuC;IACvC,MAAMoB,gBAAgBZ,qBAAqBW;IAC3C,yBAAyB;IACzB,MAAME,eAAeD,cAAcE,IAAI,CAAC,CAACC,GAAGC,IAAMA,EAAER,MAAM,GAAGO,EAAEP,MAAM;IAErE,OAAOK;AACT;AAEO,MAAM7B,2BAA2B,CAACiC;IACvC,MAAM,EAAEzB,SAAS,EAAE,EAAW,GAAGyB,MAATlB,kCAASkB;QAAzBzB;;IACR,OAAO,mBACFO,MACCP,OAAO0B,MAAM,GAAG,IAAI;QAAE1B,QAAQkB,aAAalB;IAAQ,IAAI,CAAC;AAEhE"}