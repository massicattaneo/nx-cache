{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/watchlists/src/lib/WatchlistDataTabs/CustomDataView/hooks/useColumnSelection.ts"],"sourcesContent":["import { Dispatch, SetStateAction, useCallback, useMemo } from \"react\"\nimport { SelectedColumnWithId, UICustomColumn } from \"../types\"\n\ntype UseColumnSelectionProps = {\n  selectedColumns: Array<SelectedColumnWithId>\n  setSelectedColumns: Dispatch<SetStateAction<Array<SelectedColumnWithId>>>\n  filteredColumns: Array<UICustomColumn>\n}\n\nexport function useColumnSelection({\n  selectedColumns,\n  setSelectedColumns,\n  filteredColumns,\n}: UseColumnSelectionProps) {\n  const handleColumnToggle = useCallback(\n    (column: UICustomColumn, checked: boolean) => {\n      setSelectedColumns(prev => {\n        if (checked) {\n          // Add column if not already present\n          const exists = prev.some(\n            col =>\n              col.sourceTab === column.sourceTab &&\n              col.endpoint === column.endpoint &&\n              col.columnKey === column.columnKey,\n          )\n          if (!exists) {\n            const columnWithId: SelectedColumnWithId = {\n              ...column,\n              id: `${column.endpoint}-${column.columnKey}-${Date.now()}`,\n            }\n            return [...prev, columnWithId]\n          }\n          return prev\n        } else {\n          // Remove column\n          return prev.filter(\n            col =>\n              !(\n                col.sourceTab === column.sourceTab &&\n                col.endpoint === column.endpoint &&\n                col.columnKey === column.columnKey\n              ),\n          )\n        }\n      })\n    },\n    [setSelectedColumns],\n  )\n\n  const handleSelectAll = useCallback(\n    (checked: boolean) => {\n      if (checked) {\n        // Add all filtered columns that aren't already selected\n        setSelectedColumns(prev => {\n          const newColumns = [...prev]\n          filteredColumns.forEach(column => {\n            const exists = newColumns.some(\n              col =>\n                col.sourceTab === column.sourceTab &&\n                col.endpoint === column.endpoint &&\n                col.columnKey === column.columnKey,\n            )\n            if (!exists) {\n              const columnWithId: SelectedColumnWithId = {\n                ...column,\n                id: `${column.endpoint}-${column.columnKey}-${Date.now()}-${Math.random()}`,\n              }\n              newColumns.push(columnWithId)\n            }\n          })\n          return newColumns\n        })\n      } else {\n        // Remove all filtered columns\n        setSelectedColumns(prev =>\n          prev.filter(\n            col =>\n              !filteredColumns.some(\n                filtered =>\n                  col.sourceTab === filtered.sourceTab &&\n                  col.endpoint === filtered.endpoint &&\n                  col.columnKey === filtered.columnKey,\n              ),\n          ),\n        )\n      }\n    },\n    [filteredColumns, setSelectedColumns],\n  )\n\n  const isColumnSelected = useCallback(\n    (column: UICustomColumn) => {\n      return selectedColumns.some(\n        col =>\n          col.sourceTab === column.sourceTab &&\n          col.endpoint === column.endpoint &&\n          col.columnKey === column.columnKey,\n      )\n    },\n    [selectedColumns],\n  )\n\n  const handleDeleteColumn = useCallback(\n    (columnToDelete: SelectedColumnWithId) => {\n      setSelectedColumns(prev => prev.filter(col => col.id !== columnToDelete.id))\n    },\n    [setSelectedColumns],\n  )\n\n  const allFilteredSelected = useMemo(() => {\n    return filteredColumns.length > 0 && filteredColumns.every(isColumnSelected)\n  }, [filteredColumns, isColumnSelected])\n\n  const someFilteredSelected = useMemo(() => {\n    return filteredColumns.some(isColumnSelected) && !allFilteredSelected\n  }, [filteredColumns, isColumnSelected, allFilteredSelected])\n\n  return {\n    handleColumnToggle,\n    handleSelectAll,\n    isColumnSelected,\n    handleDeleteColumn,\n    allFilteredSelected,\n    someFilteredSelected,\n  }\n}\n"],"names":["useColumnSelection","selectedColumns","setSelectedColumns","filteredColumns","handleColumnToggle","useCallback","column","checked","prev","exists","some","col","sourceTab","endpoint","columnKey","columnWithId","id","Date","now","filter","handleSelectAll","newColumns","forEach","Math","random","push","filtered","isColumnSelected","handleDeleteColumn","columnToDelete","allFilteredSelected","useMemo","length","every","someFilteredSelected"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}