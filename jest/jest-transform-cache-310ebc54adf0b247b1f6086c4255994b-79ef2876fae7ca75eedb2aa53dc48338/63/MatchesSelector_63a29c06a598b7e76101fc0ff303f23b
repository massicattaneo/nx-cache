df79d08e126649f67d073abc1e3123b3
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "MatchesSelector", {
    enumerable: true,
    get: function() {
        return MatchesSelector;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _basecomponents = require("@rp/react/web/common/base-components");
const _core = require("@rp/react/web/mui/core");
const _icons = require("@rp/react/web/mui/icons");
const _MatchesSelectorstyles = require("./MatchesSelector.styles");
const MatchesSelector = ({ matchesCount, onSelectionChange, currentMatch })=>{
    const selectNextIndex = (0, _react.useCallback)(()=>{
        const index = currentMatch + 1 === matchesCount ? 0 : currentMatch + 1;
        onSelectionChange === null || onSelectionChange === void 0 ? void 0 : onSelectionChange(index);
    }, [
        currentMatch,
        matchesCount,
        onSelectionChange
    ]);
    const selectPreviousIndex = (0, _react.useCallback)(()=>{
        const index = currentMatch - 1 === -1 ? matchesCount - 1 : currentMatch - 1;
        onSelectionChange === null || onSelectionChange === void 0 ? void 0 : onSelectionChange(index);
    }, [
        currentMatch,
        matchesCount,
        onSelectionChange
    ]);
    const handleKeydown = (0, _react.useCallback)((e)=>{
        if (e.key === "ArrowLeft") {
            e.preventDefault();
            selectPreviousIndex();
        }
        if (e.key === "ArrowRight") {
            e.preventDefault();
            selectNextIndex();
        }
    }, [
        selectNextIndex,
        selectPreviousIndex
    ]);
    // On mount
    (0, _react.useEffect)(()=>{
        window.addEventListener("keydown", handleKeydown);
        return ()=>window.removeEventListener("keydown", handleKeydown);
    }, [
        handleKeydown
    ]);
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_MatchesSelectorstyles.MatchesSelectorContainer, {
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Typography, {
                variant: "body2",
                fontWeight: 700,
                children: [
                    matchesCount,
                    " ",
                    matchesCount === 1 ? "MATCH" : "MATCHES"
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.RPTooltip, {
                title: "Previous",
                placement: "top",
                enterDelay: 300,
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.IconButton, {
                    onClick: selectPreviousIndex,
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.KeyboardArrowLeft, {})
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Typography, {
                variant: "body2",
                children: [
                    currentMatch + 1,
                    "/",
                    matchesCount
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.RPTooltip, {
                title: "Next",
                placement: "top",
                enterDelay: 300,
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.IconButton, {
                    onClick: selectNextIndex,
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.KeyboardArrowRight, {})
                })
            })
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL3JwanNvbi9zcmMvbGliL2NvbXBvbmVudHMvUnBKc29uVG9vbGJhci9NYXRjaGVzU2VsZWN0b3IvTWF0Y2hlc1NlbGVjdG9yLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VDYWxsYmFjaywgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCJcbmltcG9ydCB7IFJQVG9vbHRpcCB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL2NvbW1vbi9iYXNlLWNvbXBvbmVudHNcIlxuLy8gQ29tcG9uZW50c1xuaW1wb3J0IHsgSWNvbkJ1dHRvbiwgVHlwb2dyYXBoeSB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL211aS9jb3JlXCJcbmltcG9ydCB7IEtleWJvYXJkQXJyb3dMZWZ0LCBLZXlib2FyZEFycm93UmlnaHQgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9tdWkvaWNvbnNcIlxuLy8gU3R5bGVzXG5pbXBvcnQgeyBNYXRjaGVzU2VsZWN0b3JDb250YWluZXIgfSBmcm9tIFwiLi9NYXRjaGVzU2VsZWN0b3Iuc3R5bGVzXCJcblxudHlwZSBQcm9wcyA9IHtcbiAgbWF0Y2hlc0NvdW50OiBudW1iZXJcbiAgY3VycmVudE1hdGNoOiBudW1iZXJcbiAgb25TZWxlY3Rpb25DaGFuZ2U/OiAoaW5kZXg6IG51bWJlcikgPT4gdm9pZFxufVxuXG5jb25zdCBNYXRjaGVzU2VsZWN0b3IgPSAoeyBtYXRjaGVzQ291bnQsIG9uU2VsZWN0aW9uQ2hhbmdlLCBjdXJyZW50TWF0Y2ggfTogUHJvcHMpID0+IHtcbiAgY29uc3Qgc2VsZWN0TmV4dEluZGV4ID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIGNvbnN0IGluZGV4ID0gY3VycmVudE1hdGNoICsgMSA9PT0gbWF0Y2hlc0NvdW50ID8gMCA6IGN1cnJlbnRNYXRjaCArIDFcblxuICAgIG9uU2VsZWN0aW9uQ2hhbmdlPy4oaW5kZXgpXG4gIH0sIFtjdXJyZW50TWF0Y2gsIG1hdGNoZXNDb3VudCwgb25TZWxlY3Rpb25DaGFuZ2VdKVxuXG4gIGNvbnN0IHNlbGVjdFByZXZpb3VzSW5kZXggPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgY29uc3QgaW5kZXggPSBjdXJyZW50TWF0Y2ggLSAxID09PSAtMSA/IG1hdGNoZXNDb3VudCAtIDEgOiBjdXJyZW50TWF0Y2ggLSAxXG5cbiAgICBvblNlbGVjdGlvbkNoYW5nZT8uKGluZGV4KVxuICB9LCBbY3VycmVudE1hdGNoLCBtYXRjaGVzQ291bnQsIG9uU2VsZWN0aW9uQ2hhbmdlXSlcblxuICBjb25zdCBoYW5kbGVLZXlkb3duID0gdXNlQ2FsbGJhY2soXG4gICAgKGU6IEtleWJvYXJkRXZlbnQpID0+IHtcbiAgICAgIGlmIChlLmtleSA9PT0gXCJBcnJvd0xlZnRcIikge1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KClcbiAgICAgICAgc2VsZWN0UHJldmlvdXNJbmRleCgpXG4gICAgICB9XG5cbiAgICAgIGlmIChlLmtleSA9PT0gXCJBcnJvd1JpZ2h0XCIpIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpXG4gICAgICAgIHNlbGVjdE5leHRJbmRleCgpXG4gICAgICB9XG4gICAgfSxcbiAgICBbc2VsZWN0TmV4dEluZGV4LCBzZWxlY3RQcmV2aW91c0luZGV4XSxcbiAgKVxuXG4gIC8vIE9uIG1vdW50XG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIGhhbmRsZUtleWRvd24pXG5cbiAgICByZXR1cm4gKCkgPT4gd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIGhhbmRsZUtleWRvd24pXG4gIH0sIFtoYW5kbGVLZXlkb3duXSlcblxuICByZXR1cm4gKFxuICAgIDxNYXRjaGVzU2VsZWN0b3JDb250YWluZXI+XG4gICAgICA8VHlwb2dyYXBoeSB2YXJpYW50PVwiYm9keTJcIiBmb250V2VpZ2h0PXs3MDB9PlxuICAgICAgICB7bWF0Y2hlc0NvdW50fSB7bWF0Y2hlc0NvdW50ID09PSAxID8gXCJNQVRDSFwiIDogXCJNQVRDSEVTXCJ9XG4gICAgICA8L1R5cG9ncmFwaHk+XG4gICAgICA8UlBUb29sdGlwIHRpdGxlPVwiUHJldmlvdXNcIiBwbGFjZW1lbnQ9XCJ0b3BcIiBlbnRlckRlbGF5PXszMDB9PlxuICAgICAgICA8SWNvbkJ1dHRvbiBvbkNsaWNrPXtzZWxlY3RQcmV2aW91c0luZGV4fT5cbiAgICAgICAgICA8S2V5Ym9hcmRBcnJvd0xlZnQgLz5cbiAgICAgICAgPC9JY29uQnV0dG9uPlxuICAgICAgPC9SUFRvb2x0aXA+XG4gICAgICA8VHlwb2dyYXBoeSB2YXJpYW50PVwiYm9keTJcIj5cbiAgICAgICAge2N1cnJlbnRNYXRjaCArIDF9L3ttYXRjaGVzQ291bnR9XG4gICAgICA8L1R5cG9ncmFwaHk+XG4gICAgICA8UlBUb29sdGlwIHRpdGxlPVwiTmV4dFwiIHBsYWNlbWVudD1cInRvcFwiIGVudGVyRGVsYXk9ezMwMH0+XG4gICAgICAgIDxJY29uQnV0dG9uIG9uQ2xpY2s9e3NlbGVjdE5leHRJbmRleH0+XG4gICAgICAgICAgPEtleWJvYXJkQXJyb3dSaWdodCAvPlxuICAgICAgICA8L0ljb25CdXR0b24+XG4gICAgICA8L1JQVG9vbHRpcD5cbiAgICA8L01hdGNoZXNTZWxlY3RvckNvbnRhaW5lcj5cbiAgKVxufVxuXG5leHBvcnQgeyBNYXRjaGVzU2VsZWN0b3IgfVxuIl0sIm5hbWVzIjpbIk1hdGNoZXNTZWxlY3RvciIsIm1hdGNoZXNDb3VudCIsIm9uU2VsZWN0aW9uQ2hhbmdlIiwiY3VycmVudE1hdGNoIiwic2VsZWN0TmV4dEluZGV4IiwidXNlQ2FsbGJhY2siLCJpbmRleCIsInNlbGVjdFByZXZpb3VzSW5kZXgiLCJoYW5kbGVLZXlkb3duIiwiZSIsImtleSIsInByZXZlbnREZWZhdWx0IiwidXNlRWZmZWN0Iiwid2luZG93IiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJNYXRjaGVzU2VsZWN0b3JDb250YWluZXIiLCJUeXBvZ3JhcGh5IiwidmFyaWFudCIsImZvbnRXZWlnaHQiLCJSUFRvb2x0aXAiLCJ0aXRsZSIsInBsYWNlbWVudCIsImVudGVyRGVsYXkiLCJJY29uQnV0dG9uIiwib25DbGljayIsIktleWJvYXJkQXJyb3dMZWZ0IiwiS2V5Ym9hcmRBcnJvd1JpZ2h0Il0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQXVFU0E7OztlQUFBQTs7Ozt1QkF2RThCO2dDQUNiO3NCQUVhO3VCQUNlO3VDQUViO0FBUXpDLE1BQU1BLGtCQUFrQixDQUFDLEVBQUVDLFlBQVksRUFBRUMsaUJBQWlCLEVBQUVDLFlBQVksRUFBUztJQUMvRSxNQUFNQyxrQkFBa0JDLElBQUFBLGtCQUFXLEVBQUM7UUFDbEMsTUFBTUMsUUFBUUgsZUFBZSxNQUFNRixlQUFlLElBQUlFLGVBQWU7UUFFckVELDhCQUFBQSx3Q0FBQUEsa0JBQW9CSTtJQUN0QixHQUFHO1FBQUNIO1FBQWNGO1FBQWNDO0tBQWtCO0lBRWxELE1BQU1LLHNCQUFzQkYsSUFBQUEsa0JBQVcsRUFBQztRQUN0QyxNQUFNQyxRQUFRSCxlQUFlLE1BQU0sQ0FBQyxJQUFJRixlQUFlLElBQUlFLGVBQWU7UUFFMUVELDhCQUFBQSx3Q0FBQUEsa0JBQW9CSTtJQUN0QixHQUFHO1FBQUNIO1FBQWNGO1FBQWNDO0tBQWtCO0lBRWxELE1BQU1NLGdCQUFnQkgsSUFBQUEsa0JBQVcsRUFDL0IsQ0FBQ0k7UUFDQyxJQUFJQSxFQUFFQyxHQUFHLEtBQUssYUFBYTtZQUN6QkQsRUFBRUUsY0FBYztZQUNoQko7UUFDRjtRQUVBLElBQUlFLEVBQUVDLEdBQUcsS0FBSyxjQUFjO1lBQzFCRCxFQUFFRSxjQUFjO1lBQ2hCUDtRQUNGO0lBQ0YsR0FDQTtRQUFDQTtRQUFpQkc7S0FBb0I7SUFHeEMsV0FBVztJQUNYSyxJQUFBQSxnQkFBUyxFQUFDO1FBQ1JDLE9BQU9DLGdCQUFnQixDQUFDLFdBQVdOO1FBRW5DLE9BQU8sSUFBTUssT0FBT0UsbUJBQW1CLENBQUMsV0FBV1A7SUFDckQsR0FBRztRQUFDQTtLQUFjO0lBRWxCLHFCQUNFLHNCQUFDUSwrQ0FBd0I7OzBCQUN2QixzQkFBQ0MsZ0JBQVU7Z0JBQUNDLFNBQVE7Z0JBQVFDLFlBQVk7O29CQUNyQ2xCO29CQUFhO29CQUFFQSxpQkFBaUIsSUFBSSxVQUFVOzs7MEJBRWpELHFCQUFDbUIseUJBQVM7Z0JBQUNDLE9BQU07Z0JBQVdDLFdBQVU7Z0JBQU1DLFlBQVk7MEJBQ3RELGNBQUEscUJBQUNDLGdCQUFVO29CQUFDQyxTQUFTbEI7OEJBQ25CLGNBQUEscUJBQUNtQix3QkFBaUI7OzswQkFHdEIsc0JBQUNULGdCQUFVO2dCQUFDQyxTQUFROztvQkFDakJmLGVBQWU7b0JBQUU7b0JBQUVGOzs7MEJBRXRCLHFCQUFDbUIseUJBQVM7Z0JBQUNDLE9BQU07Z0JBQU9DLFdBQVU7Z0JBQU1DLFlBQVk7MEJBQ2xELGNBQUEscUJBQUNDLGdCQUFVO29CQUFDQyxTQUFTckI7OEJBQ25CLGNBQUEscUJBQUN1Qix5QkFBa0I7Ozs7O0FBSzdCIn0=