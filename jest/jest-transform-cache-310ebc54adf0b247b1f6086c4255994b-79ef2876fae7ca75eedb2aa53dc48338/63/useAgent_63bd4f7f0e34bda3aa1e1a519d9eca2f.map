{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/common/hooks/src/lib/useAgent/useAgent.tsx"],"sourcesContent":["import { useCallback, useEffect, useRef, useState } from \"react\"\nimport { adapters } from \"@rp/adapters\"\nimport { getApiEnvironmentConfig } from \"@rp/common/utils\"\nimport { chatCustomerIo } from \"@rp/react/common/customer-io\"\nimport { LlmSummaryError, SummaryState, SummaryStatus } from \"../useChat/useChat.types\"\nimport {\n  handleActionMessage,\n  handleAnswerMessage,\n  handleAuditMessage,\n  handleCompleteMessage,\n  handleGroundingMessage,\n  handleThinkingMessage,\n} from \"./handlers\"\nimport {\n  AgentMessage,\n  AgentMessageState,\n  ChatInteractionContext,\n  ErrorMessage,\n} from \"./useAgent.types\"\nimport { getPromptWithContext } from \"./utils/getPromptWithContext\"\n\nconst AGENT_EXECUTE_REQUEST = \"AgentExecuteRequest\"\nconst WEB_SOCKET_URL = getApiEnvironmentConfig(\"web-socket\").url ?? \"\"\n\ntype Props = {\n  chatId: string\n  agentEnabled?: boolean\n  executionMode?: \"chat\" | \"research\"\n  inputMessage: string\n  onComplete: (messages: AgentMessageState) => void\n  onError?: (data: SummaryState, error: LlmSummaryError) => void\n  webSocketUrl?: string\n  refreshAgentData?: boolean\n  context?: Array<ChatInteractionContext>\n  enableAgentGrounding?: boolean\n  enableCompanyTearsheet?: boolean\n}\n\ntype UseAgentReturn = {\n  agentData: AgentMessageState\n}\n\nconst defaultAgentData: AgentMessageState = {\n  frames: [],\n  answerStream: [],\n  closed: false,\n  isLoading: true,\n  error: undefined,\n  requestId: \"\",\n  references: {},\n}\n\nfunction useAgent(props: Props): UseAgentReturn {\n  const websocket = useRef<WebSocket>(null)\n  const onCompleteCallbackExecuted = useRef<boolean>(false)\n  const [isFrameCompleted, setFrameCompleted] = useState<boolean>(false)\n\n  const [agentData, setAgentData] = useState<AgentMessageState>({\n    ...defaultAgentData,\n  })\n\n  const disposeWebsocket = useCallback(function disposeWebsocket(): void {\n    if (websocket.current) {\n      websocket.current.close()\n      websocket.current = null\n    }\n  }, [])\n\n  const { agentEnabled, onComplete, chatId, inputMessage } = props\n\n  useEffect(() => {\n    if (isFrameCompleted && agentEnabled && !onCompleteCallbackExecuted.current) {\n      onComplete(agentData)\n      onCompleteCallbackExecuted.current = true\n    }\n  }, [agentEnabled, onComplete, isFrameCompleted, agentData])\n\n  useEffect(() => {\n    if (agentEnabled) {\n      // Set up the message transaction when starting\n      chatCustomerIo.inputAgentPromptSubmit({\n        chatId,\n        executionMode: props.executionMode ?? \"research\",\n        requestId: agentData.requestId,\n      })\n      setupSocket()\n    }\n    return () => {\n      disposeWebsocket()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [agentEnabled, chatId, inputMessage, disposeWebsocket])\n\n  function handleErrorMessage(data: ErrorMessage): void {\n    setAgentData(prevState => ({\n      ...prevState,\n      error: data.error,\n      requestId: data.requestId ?? prevState.requestId,\n    }))\n    props.onError?.(\n      {\n        response: \"\",\n        responseBlocks: [],\n        timings: { start: Date.now() },\n        auditTraces: [],\n        originSources: [],\n        interactionType: \"user_message\",\n        statusData: { step: \"completed\", queries: [] },\n        auditBlocks: [],\n      },\n      { message: data.error, type: \"ERROR\" },\n    )\n    disposeWebsocket()\n  }\n\n  function handleWebSocketMessage(event: MessageEvent): void {\n    const data: AgentMessage = JSON.parse(event.data)\n\n    switch (data.type) {\n      case \"THINKING\":\n        setAgentData(prev => handleThinkingMessage(prev, data))\n        break\n      case \"ACTION\":\n        setAgentData(prev => handleActionMessage(prev, data))\n        break\n      case \"AUDIT\":\n        setAgentData(prev => handleAuditMessage(prev, data))\n        break\n      case \"ANSWER\":\n        setAgentData(prev => handleAnswerMessage(prev, data))\n        break\n      case \"GROUNDING\":\n        if (!props.enableAgentGrounding) {\n          break\n        }\n        setAgentData(prev => handleGroundingMessage(prev, data))\n        break\n      case \"COMPLETE\":\n        setFrameCompleted(true)\n        setAgentData(prev =>\n          handleCompleteMessage(prev, { executionMode: props.executionMode, chatId }),\n        )\n        break\n      case \"ERROR\":\n        handleErrorMessage(data)\n        break\n      default:\n        break\n    }\n  }\n\n  function handleWebSocketError(_error: Event): void {\n    if (websocket.current) {\n      websocket.current.close()\n      websocket.current = null\n    }\n    props.onError?.(\n      {\n        response: \"\",\n        responseBlocks: [],\n        timings: { start: Date.now() },\n        auditTraces: [],\n        originSources: [],\n        interactionType: \"user_message\",\n        statusData: { step: \"completed\", queries: [] },\n        auditBlocks: [],\n      },\n      { message: \"WebSocket connection error\", type: \"ERROR\" },\n    )\n  }\n\n  async function setupSocket(): Promise<void> {\n    if (!props.agentEnabled || websocket.current) {\n      return disposeWebsocket()\n    }\n\n    const requestId = `${Date.now()}`\n    setAgentData({\n      ...defaultAgentData,\n      requestId,\n    })\n\n    const token = await adapters.api.getClerkToken()\n\n    if (token) {\n      const newWebsocket = new WebSocket(\n        `${props.webSocketUrl ?? WEB_SOCKET_URL}?jwt_token=${token}`,\n      )\n      websocket.current = newWebsocket\n\n      newWebsocket.onopen = () => {\n        if (newWebsocket !== websocket.current) {\n          newWebsocket.close()\n          return\n        }\n\n        newWebsocket.send(\n          JSON.stringify({\n            requestId,\n            action: AGENT_EXECUTE_REQUEST,\n            chatId: props.chatId,\n            inputMessage: getPromptWithContext(props.inputMessage, props.context),\n            requestType: props.executionMode,\n            onlySearchAudit: !props.enableCompanyTearsheet,\n          }),\n        )\n        onCompleteCallbackExecuted.current = false\n        setFrameCompleted(false)\n      }\n\n      newWebsocket.onmessage = event => {\n        if (newWebsocket !== websocket.current) {\n          newWebsocket.close()\n          return\n        }\n        handleWebSocketMessage(event)\n      }\n\n      newWebsocket.onerror = handleWebSocketError\n    }\n  }\n\n  return {\n    agentData,\n  }\n}\n\nexport { useAgent }\nexport type { SummaryStatus, SummaryState }\n"],"names":["useAgent","AGENT_EXECUTE_REQUEST","getApiEnvironmentConfig","WEB_SOCKET_URL","url","defaultAgentData","frames","answerStream","closed","isLoading","error","undefined","requestId","references","props","websocket","useRef","onCompleteCallbackExecuted","isFrameCompleted","setFrameCompleted","useState","agentData","setAgentData","disposeWebsocket","useCallback","current","close","agentEnabled","onComplete","chatId","inputMessage","useEffect","chatCustomerIo","inputAgentPromptSubmit","executionMode","setupSocket","handleErrorMessage","data","prevState","onError","response","responseBlocks","timings","start","Date","now","auditTraces","originSources","interactionType","statusData","step","queries","auditBlocks","message","type","handleWebSocketMessage","event","JSON","parse","prev","handleThinkingMessage","handleActionMessage","handleAuditMessage","handleAnswerMessage","enableAgentGrounding","handleGroundingMessage","handleCompleteMessage","handleWebSocketError","_error","token","adapters","api","getClerkToken","newWebsocket","WebSocket","webSocketUrl","onopen","send","stringify","action","getPromptWithContext","context","requestType","onlySearchAudit","enableCompanyTearsheet","onmessage","onerror"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}