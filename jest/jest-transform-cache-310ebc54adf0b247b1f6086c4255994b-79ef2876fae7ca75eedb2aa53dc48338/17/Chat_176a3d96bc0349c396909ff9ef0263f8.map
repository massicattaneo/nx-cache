{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/chat/src/lib/Chat/PersistedChat/Chat.tsx"],"sourcesContent":["import { ReactNode, useCallback, useState } from \"react\"\nimport { ChatWatchlistEntity, DatasetScope } from \"@rp/common/api-types\"\nimport { chatCustomerIo } from \"@rp/react/common/customer-io\"\nimport { ChatFileContext, LlmSummaryError, LlmTimings, SummaryState } from \"@rp/react/common/hooks\"\nimport { ChatInteractionType, ChatObject, isUserInteraction } from \"@rp/react/tanstack-api/chat\"\nimport { isLlmStandardSource } from \"@rp/react/tanstack-api/llm-summary\"\nimport { useDeviceInfo } from \"@rp/react/web/common/hooks\"\nimport { useModal } from \"@rp/react/web/common/providers\"\nimport { useSnackbar } from \"@rp/react/web/common/providers\"\nimport { Box, CircularProgress } from \"@rp/react/web/mui/core\"\nimport { ChatContextDisplay } from \"../Chat/ChatContext/ChatContextDisplay\"\nimport { ChatFileContextDisplay } from \"../Chat/ChatContext/ChatFileContextDisplay\"\nimport {\n  ChatResponse,\n  FeedbackChatHandler,\n  RenderAuditTrailCardHandler,\n} from \"../Chat/ChatResponse/ChatResponse\"\nimport { UserInput } from \"../Chat/UserInput/UserInput\"\nimport { useChatDataContext } from \"../ChatDataProvider/ChatDataProvider\"\nimport { CHAT_SCROLL_TOP_OFFSET } from \"../scrollToLastInteraction\"\nimport { ChatCopyNotice } from \"./ChatCopyNotice\"\n\ntype RegenerateHandler = (props: { isCurrentInteraction?: boolean; summary: SummaryState }) => void\n\ntype Props = {\n  variant: \"desktop\" | \"mobile\"\n  chat?: ChatObject\n  userInitials: string\n  fileContext?: ChatFileContext\n  auditMode: boolean\n  getTimings: (interactionId: string) => LlmTimings | undefined\n  onResponseComplete: (\n    interactionId: string,\n    data: SummaryState,\n    status?: { error?: boolean; stopped?: boolean },\n  ) => void\n  onRegenerateResponse: RegenerateHandler\n  addPrompt: (prompt: string) => void\n  onEdit: (prompt: string) => void\n  renderCard: RenderAuditTrailCardHandler\n  scope?: Array<string> | DatasetScope\n  areMetricsEnabled?: boolean\n  useMasterRouter?: boolean\n  filesIds: Array<string>\n  watchlistId?: string\n  moreActions?: ReactNode\n  currentInteraction?: {\n    userInput: string\n    error: boolean\n    stopped: boolean\n    edit: boolean\n    iteration: number\n    index: number\n    interactionType: ChatInteractionType\n    entities?: Array<ChatWatchlistEntity>\n    displayedMessage?: string\n  }\n  onError: (data: SummaryState, error: LlmSummaryError, wsError?: Event) => void\n  chatFeedback: Record<string, number>\n  onChatFeedbackSuccess: (props: {\n    feedbackSentiment: number\n    interactionTimestamp: string\n  }) => void\n  webSocketUrl?: string\n  onAuditTrailScroll: (containerY: number, interactionTimestamp: string) => void\n  scrollContainer?: Window | HTMLElement | null\n  parentScrollContainer?: HTMLDivElement | null\n}\n\nconst getInteractionId = (id: string) => {\n  return `interaction-${id}`\n}\n\nconst INTERACTION_CLASS_NAME = \"interaction-list-element\"\n\nconst Chat = ({\n  chat,\n  userInitials,\n  onResponseComplete,\n  onRegenerateResponse,\n  onEdit,\n  renderCard,\n  auditMode,\n  fileContext,\n  scope,\n  areMetricsEnabled,\n  filesIds,\n  currentInteraction,\n  onError,\n  getTimings,\n  onChatFeedbackSuccess,\n  chatFeedback,\n  watchlistId,\n  addPrompt,\n  useMasterRouter,\n  webSocketUrl,\n  variant,\n  onAuditTrailScroll,\n  scrollContainer,\n  moreActions,\n  parentScrollContainer,\n}: Props) => {\n  const {\n    ui: { isEditable },\n  } = useChatDataContext()\n  const { isMobile } = useDeviceInfo()\n\n  const { id, interactions } = chat ?? { id: undefined, interactions: [] }\n  const [openTraces, setOpenTraces] = useState<Record<number, boolean>>({})\n  const paddingBottom = isMobile ? 24 : 16\n  const scopedPaddingBottom =\n    scope || filesIds.length > 0 || watchlistId !== undefined ? paddingBottom + 9 : paddingBottom\n  const { chatFeedbackModal } = useModal()\n  const { enqueueSuccess } = useSnackbar()\n  const onChatFeedback: FeedbackChatHandler = ({ feedbackSentiment, interactionTimestamp }) => {\n    const interaction = interactions.find(\n      interaction => interaction.interactionTimestamp === interactionTimestamp,\n    )\n    if (!chat || !interaction) return\n\n    chatFeedbackModal.handleOpen({\n      feedbackSentiment,\n      interaction,\n      onSubmit: ({ feedbackComment, feedbackTags }) => {\n        onChatFeedbackSuccess({ feedbackSentiment, interactionTimestamp })\n        enqueueSuccess(\"Thanks for your feedback\")\n        chatCustomerIo.userFeedback({\n          feedbackSentiment,\n          chatId: chat.id,\n          interactionTimestamp,\n          feedbackComment,\n          feedbackTags,\n        })\n      },\n    })\n  }\n\n  const toggleTraces = useCallback((interactionIndex: number) => {\n    setOpenTraces(prev => {\n      const currentValue = prev[interactionIndex]\n      return { ...prev, [interactionIndex]: currentValue ? !currentValue : true }\n    })\n  }, [])\n\n  if (!chat && !currentInteraction) {\n    return (\n      <Box sx={{ display: \"flex\", justifyContent: \"center\", mt: 10 }}>\n        <CircularProgress />\n      </Box>\n    )\n  }\n\n  return (\n    <Box>\n      {isEditable ? null : <ChatCopyNotice />}\n      {fileContext ? (\n        <ChatFileContextDisplay filesIds={fileContext.filesIds} isChatEmpty={false} />\n      ) : null}\n      {interactions\n        .filter((_, index) => currentInteraction?.index !== index)\n        .map((interaction, index) => {\n          const isLastInteraction = index === interactions.length - 1 && !currentInteraction\n          const isWorkflowInteraction = interaction.origin.type === \"flow\"\n\n          if (!isUserInteraction(interaction)) {\n            return (\n              <ChatContextDisplay\n                key={interaction.interactionTimestamp}\n                context={{\n                  title: interaction.inputMessage,\n                  summary: interaction.responseMessage,\n                  originSources: interaction.originSources.filter(isLlmStandardSource),\n                }}\n                isChatEmpty={\n                  interactions.find(interaction => interaction.origin.type === \"user_message\") ===\n                  undefined\n                }\n              />\n            )\n          }\n          return (\n            <Box\n              className={`${INTERACTION_CLASS_NAME} ${getInteractionId(\n                interaction.interactionTimestamp,\n              )}`}\n              key={interaction.interactionTimestamp}\n              sx={{\n                minHeight: isLastInteraction ? `calc(100dvh - 80px)` : 0,\n                pb: isLastInteraction ? scopedPaddingBottom : 0,\n                maxWidth: 700,\n                mx: \"auto\",\n              }}\n            >\n              <UserInput\n                variant={variant}\n                userInitials={userInitials}\n                onEdit={\n                  isLastInteraction && isEditable && !isWorkflowInteraction ? onEdit : undefined\n                }\n                disableScroll\n              >\n                {interaction.inputMessage}\n              </UserInput>\n              <ChatResponse\n                onAuditTrailScroll={onAuditTrailScroll}\n                variant={variant}\n                useMasterRouter={useMasterRouter}\n                areTracesOpen={openTraces[index]}\n                setTraceOpen={() => toggleTraces(index)}\n                chatFeedback={chatFeedback}\n                type=\"history\"\n                chatId={id ?? \"\"}\n                interactionId={interaction.interactionTimestamp}\n                onRegenerateResponse={\n                  isLastInteraction && !isWorkflowInteraction\n                    ? summary =>\n                        onRegenerateResponse({\n                          summary,\n                          isCurrentInteraction: false,\n                        })\n                    : undefined\n                }\n                renderCard={renderCard}\n                auditMode={auditMode}\n                areMetricsEnabled={areMetricsEnabled}\n                responseBlock={interaction.responseBlock ?? interaction.responseBlocks?.[0]}\n                auditTraces={interaction.auditTraces ? interaction.auditTraces : []}\n                sources={interaction.originSources}\n                onChatFeedback={onChatFeedback}\n                timings={getTimings(interaction.interactionTimestamp)}\n                metadata={interaction.originSourcesMetadata}\n                scope={interaction.scope}\n                responseBlocks={interaction.responseBlocks ?? [interaction.responseBlock]}\n                auditBlocks={interaction.auditBlocks ?? []}\n                moreActions={index === interactions.length - 1 ? moreActions : undefined}\n                watchlistId={chat?.scopeWatchlistId}\n                showBriefBanner={\n                  chat?.interactions.length === 1 &&\n                  chat.interactions[0].originSources.length > 0 &&\n                  chat.interactions[0].origin.type === \"watchlist\"\n                }\n                parentScrollContainer={parentScrollContainer}\n              />\n            </Box>\n          )\n        })}\n      {currentInteraction && id ? (\n        <Box\n          key={`${currentInteraction.index}-${currentInteraction.iteration}`}\n          className={INTERACTION_CLASS_NAME}\n          sx={{\n            minHeight: `calc(100dvh - ${CHAT_SCROLL_TOP_OFFSET}px)`,\n            pb: scopedPaddingBottom,\n            maxWidth: 700,\n            mx: \"auto\",\n            opacity: interactions.length === currentInteraction.index + 1 ? 0 : 1,\n          }}\n        >\n          <UserInput\n            variant={variant}\n            userInitials={userInitials}\n            disableScroll={currentInteraction.index === 0}\n            onEdit={currentInteraction.stopped ? addPrompt : undefined}\n            scrollContainer={scrollContainer}\n          >\n            {currentInteraction.displayedMessage ?? currentInteraction.userInput}\n          </UserInput>\n          <ChatResponse\n            onAuditTrailScroll={onAuditTrailScroll}\n            variant={variant}\n            useMasterRouter={useMasterRouter}\n            type=\"current\"\n            chatId={id}\n            chatFeedback={chatFeedback}\n            onStreamingComplete={(id, response) => onResponseComplete(id, response)}\n            onError={onError}\n            renderCard={renderCard}\n            auditMode={auditMode}\n            stopped={currentInteraction.stopped}\n            scope={typeof scope === \"string\" ? scope : undefined}\n            areMetricsEnabled={areMetricsEnabled}\n            filesIds={filesIds}\n            liveInteraction={currentInteraction}\n            stopGenerating={() => {}}\n            watchlistId={watchlistId}\n            webSocketUrl={webSocketUrl}\n            onRegenerateResponse={summary =>\n              onRegenerateResponse({\n                summary,\n                isCurrentInteraction: true,\n              })\n            }\n            areTracesOpen={openTraces[currentInteraction.index]}\n            setTraceOpen={() => toggleTraces(currentInteraction.index)}\n          />\n        </Box>\n      ) : null}\n    </Box>\n  )\n}\n\nexport { Chat, getInteractionId, INTERACTION_CLASS_NAME }\nexport type { RegenerateHandler }\n"],"names":["Chat","INTERACTION_CLASS_NAME","getInteractionId","id","chat","userInitials","onResponseComplete","onRegenerateResponse","onEdit","renderCard","auditMode","fileContext","scope","areMetricsEnabled","filesIds","currentInteraction","onError","getTimings","onChatFeedbackSuccess","chatFeedback","watchlistId","addPrompt","useMasterRouter","webSocketUrl","variant","onAuditTrailScroll","scrollContainer","moreActions","parentScrollContainer","ui","isEditable","useChatDataContext","isMobile","useDeviceInfo","interactions","undefined","openTraces","setOpenTraces","useState","paddingBottom","scopedPaddingBottom","length","chatFeedbackModal","useModal","enqueueSuccess","useSnackbar","onChatFeedback","feedbackSentiment","interactionTimestamp","interaction","find","handleOpen","onSubmit","feedbackComment","feedbackTags","chatCustomerIo","userFeedback","chatId","toggleTraces","useCallback","interactionIndex","prev","currentValue","Box","sx","display","justifyContent","mt","CircularProgress","ChatCopyNotice","ChatFileContextDisplay","isChatEmpty","filter","_","index","map","isLastInteraction","isWorkflowInteraction","origin","type","isUserInteraction","ChatContextDisplay","context","title","inputMessage","summary","responseMessage","originSources","isLlmStandardSource","className","minHeight","pb","maxWidth","mx","UserInput","disableScroll","ChatResponse","areTracesOpen","setTraceOpen","interactionId","isCurrentInteraction","responseBlock","responseBlocks","auditTraces","sources","timings","metadata","originSourcesMetadata","auditBlocks","scopeWatchlistId","showBriefBanner","CHAT_SCROLL_TOP_OFFSET","opacity","stopped","displayedMessage","userInput","onStreamingComplete","response","liveInteraction","stopGenerating","iteration"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}