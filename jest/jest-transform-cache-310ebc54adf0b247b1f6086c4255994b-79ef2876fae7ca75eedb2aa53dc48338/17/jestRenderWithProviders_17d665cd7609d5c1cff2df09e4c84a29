bd7ccd0c19b503fce6833ff997f9153e
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    renderWithProviders: function() {
        return renderWithProviders;
    },
    useUserQuotasMock: function() {
        return useUserQuotasMock;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _reactrouterdom = require("react-router-dom");
const _clerkreact = require("@clerk/clerk-react");
const _globals = require("@jest/globals");
const _providers = require("@rp/react/common/providers");
const _providers1 = require("@rp/react/web/common/providers");
const _react = require("@testing-library/react");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const useUserQuotasMock = _globals.jest.fn();
useUserQuotasMock.mockReturnValue({
    data: {
        userQuota: {
            searchMaxSaved: 0,
            searchMaxShared: 0,
            searchMaxFollowed: 0,
            searchMaxScheduled: 0,
            watchlistMaxShared: 0,
            watchlistMaxCreated: 0
        },
        userConsumed: {
            searchSaved: 0,
            searchShared: 0,
            searchFollowed: 0,
            watchlistsShared: 0,
            watchlistsCreated: 0
        },
        organizationQuota: {},
        organizationConsumed: {
            searchExecuted: 0,
            contextualUnitsIndexed: 0
        },
        subscriptionRenewalDate: new Date(),
        featureAccessPolicies: [],
        contentAccessPolicies: [],
        subscriptionStatus: "TRIAL",
        entitlements: {}
    },
    isLoading: false
});
const ContextWrapper = ({ children })=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_providers1.ProviderComposer, {
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactrouterdom.MemoryRouter, {
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_providers.AccountProvider, {
                useUser: _clerkreact.useUser,
                useUserQuotas: useUserQuotasMock,
                LoadingComponent: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                    children: "Loading..."
                }),
                flagsStatus: {},
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_providers1.ApplicationProviders, {
                    children: children
                })
            })
        })
    });
const ContextWithoutRouterWrapper = ({ children })=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_providers1.ProviderComposer, {
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_providers.AccountProvider, {
            useUser: _clerkreact.useUser,
            useUserQuotas: useUserQuotasMock,
            LoadingComponent: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                children: "Loading..."
            }),
            flagsStatus: {},
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_providers1.ApplicationProviders, {
                children: children
            })
        })
    });
const renderWithProviders = (ui, options, includeRouter = true)=>(0, _react.render)(ui, _object_spread_props(_object_spread({}, options), {
        wrapper: includeRouter ? ContextWrapper : ContextWithoutRouterWrapper
    }));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi90b29scy9zcmMvamVzdFJlbmRlcldpdGhQcm92aWRlcnMudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJlYWN0RWxlbWVudCwgUmVhY3ROb2RlIH0gZnJvbSBcInJlYWN0XCJcbmltcG9ydCB7IE1lbW9yeVJvdXRlciB9IGZyb20gXCJyZWFjdC1yb3V0ZXItZG9tXCJcbmltcG9ydCB7IHVzZVVzZXIgfSBmcm9tIFwiQGNsZXJrL2NsZXJrLXJlYWN0XCJcbmltcG9ydCB7IGplc3QgfSBmcm9tIFwiQGplc3QvZ2xvYmFsc1wiXG5pbXBvcnQgeyBVc2VVc2VyUXVvdGFzIH0gZnJvbSBcIkBycC9yZWFjdC9jb21tb24vaG9va3NcIlxuaW1wb3J0IHsgQWNjb3VudFByb3ZpZGVyIH0gZnJvbSBcIkBycC9yZWFjdC9jb21tb24vcHJvdmlkZXJzXCJcbmltcG9ydCB7IEFwcGxpY2F0aW9uUHJvdmlkZXJzLCBQcm92aWRlckNvbXBvc2VyIH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvY29tbW9uL3Byb3ZpZGVyc1wiXG5pbXBvcnQgeyBSZW5kZXJPcHRpb25zLCByZW5kZXIgfSBmcm9tIFwiQHRlc3RpbmctbGlicmFyeS9yZWFjdFwiXG5cbmV4cG9ydCBjb25zdCB1c2VVc2VyUXVvdGFzTW9jayA9IGplc3QuZm48VXNlVXNlclF1b3Rhcz4oKVxuXG51c2VVc2VyUXVvdGFzTW9jay5tb2NrUmV0dXJuVmFsdWUoe1xuICBkYXRhOiB7XG4gICAgdXNlclF1b3RhOiB7XG4gICAgICBzZWFyY2hNYXhTYXZlZDogMCxcbiAgICAgIHNlYXJjaE1heFNoYXJlZDogMCxcbiAgICAgIHNlYXJjaE1heEZvbGxvd2VkOiAwLFxuICAgICAgc2VhcmNoTWF4U2NoZWR1bGVkOiAwLFxuICAgICAgd2F0Y2hsaXN0TWF4U2hhcmVkOiAwLFxuICAgICAgd2F0Y2hsaXN0TWF4Q3JlYXRlZDogMCxcbiAgICB9LFxuICAgIHVzZXJDb25zdW1lZDoge1xuICAgICAgc2VhcmNoU2F2ZWQ6IDAsXG4gICAgICBzZWFyY2hTaGFyZWQ6IDAsXG4gICAgICBzZWFyY2hGb2xsb3dlZDogMCxcbiAgICAgIHdhdGNobGlzdHNTaGFyZWQ6IDAsXG4gICAgICB3YXRjaGxpc3RzQ3JlYXRlZDogMCxcbiAgICB9LFxuICAgIG9yZ2FuaXphdGlvblF1b3RhOiB7fSxcbiAgICBvcmdhbml6YXRpb25Db25zdW1lZDoge1xuICAgICAgc2VhcmNoRXhlY3V0ZWQ6IDAsXG4gICAgICBjb250ZXh0dWFsVW5pdHNJbmRleGVkOiAwLFxuICAgIH0sXG4gICAgc3Vic2NyaXB0aW9uUmVuZXdhbERhdGU6IG5ldyBEYXRlKCksXG4gICAgZmVhdHVyZUFjY2Vzc1BvbGljaWVzOiBbXSxcbiAgICBjb250ZW50QWNjZXNzUG9saWNpZXM6IFtdLFxuICAgIHN1YnNjcmlwdGlvblN0YXR1czogXCJUUklBTFwiLFxuICAgIGVudGl0bGVtZW50czoge30sXG4gIH0sXG4gIGlzTG9hZGluZzogZmFsc2UsXG59IGFzIHVua25vd24gYXMgUmV0dXJuVHlwZTxVc2VVc2VyUXVvdGFzPilcblxuY29uc3QgQ29udGV4dFdyYXBwZXIgPSAoeyBjaGlsZHJlbiB9OiB7IGNoaWxkcmVuOiBSZWFjdE5vZGUgfSkgPT4gKFxuICA8UHJvdmlkZXJDb21wb3Nlcj5cbiAgICA8TWVtb3J5Um91dGVyPlxuICAgICAgPEFjY291bnRQcm92aWRlclxuICAgICAgICB1c2VVc2VyPXt1c2VVc2VyfVxuICAgICAgICB1c2VVc2VyUXVvdGFzPXt1c2VVc2VyUXVvdGFzTW9ja31cbiAgICAgICAgTG9hZGluZ0NvbXBvbmVudD17PGRpdj5Mb2FkaW5nLi4uPC9kaXY+fVxuICAgICAgICBmbGFnc1N0YXR1cz17e319XG4gICAgICA+XG4gICAgICAgIDxBcHBsaWNhdGlvblByb3ZpZGVycz57Y2hpbGRyZW59PC9BcHBsaWNhdGlvblByb3ZpZGVycz5cbiAgICAgIDwvQWNjb3VudFByb3ZpZGVyPlxuICAgIDwvTWVtb3J5Um91dGVyPlxuICA8L1Byb3ZpZGVyQ29tcG9zZXI+XG4pXG5cbmNvbnN0IENvbnRleHRXaXRob3V0Um91dGVyV3JhcHBlciA9ICh7IGNoaWxkcmVuIH06IHsgY2hpbGRyZW46IFJlYWN0Tm9kZSB9KSA9PiAoXG4gIDxQcm92aWRlckNvbXBvc2VyPlxuICAgIDxBY2NvdW50UHJvdmlkZXJcbiAgICAgIHVzZVVzZXI9e3VzZVVzZXJ9XG4gICAgICB1c2VVc2VyUXVvdGFzPXt1c2VVc2VyUXVvdGFzTW9ja31cbiAgICAgIExvYWRpbmdDb21wb25lbnQ9ezxkaXY+TG9hZGluZy4uLjwvZGl2Pn1cbiAgICAgIGZsYWdzU3RhdHVzPXt7fX1cbiAgICA+XG4gICAgICA8QXBwbGljYXRpb25Qcm92aWRlcnM+e2NoaWxkcmVufTwvQXBwbGljYXRpb25Qcm92aWRlcnM+XG4gICAgPC9BY2NvdW50UHJvdmlkZXI+XG4gIDwvUHJvdmlkZXJDb21wb3Nlcj5cbilcblxuY29uc3QgcmVuZGVyV2l0aFByb3ZpZGVycyA9ICh1aTogUmVhY3RFbGVtZW50LCBvcHRpb25zPzogUmVuZGVyT3B0aW9ucywgaW5jbHVkZVJvdXRlciA9IHRydWUpID0+XG4gIHJlbmRlcih1aSwge1xuICAgIC4uLm9wdGlvbnMsXG4gICAgd3JhcHBlcjogaW5jbHVkZVJvdXRlciA/IENvbnRleHRXcmFwcGVyIDogQ29udGV4dFdpdGhvdXRSb3V0ZXJXcmFwcGVyLFxuICB9KVxuXG5leHBvcnQgeyByZW5kZXJXaXRoUHJvdmlkZXJzIH1cbiJdLCJuYW1lcyI6WyJyZW5kZXJXaXRoUHJvdmlkZXJzIiwidXNlVXNlclF1b3Rhc01vY2siLCJqZXN0IiwiZm4iLCJtb2NrUmV0dXJuVmFsdWUiLCJkYXRhIiwidXNlclF1b3RhIiwic2VhcmNoTWF4U2F2ZWQiLCJzZWFyY2hNYXhTaGFyZWQiLCJzZWFyY2hNYXhGb2xsb3dlZCIsInNlYXJjaE1heFNjaGVkdWxlZCIsIndhdGNobGlzdE1heFNoYXJlZCIsIndhdGNobGlzdE1heENyZWF0ZWQiLCJ1c2VyQ29uc3VtZWQiLCJzZWFyY2hTYXZlZCIsInNlYXJjaFNoYXJlZCIsInNlYXJjaEZvbGxvd2VkIiwid2F0Y2hsaXN0c1NoYXJlZCIsIndhdGNobGlzdHNDcmVhdGVkIiwib3JnYW5pemF0aW9uUXVvdGEiLCJvcmdhbml6YXRpb25Db25zdW1lZCIsInNlYXJjaEV4ZWN1dGVkIiwiY29udGV4dHVhbFVuaXRzSW5kZXhlZCIsInN1YnNjcmlwdGlvblJlbmV3YWxEYXRlIiwiRGF0ZSIsImZlYXR1cmVBY2Nlc3NQb2xpY2llcyIsImNvbnRlbnRBY2Nlc3NQb2xpY2llcyIsInN1YnNjcmlwdGlvblN0YXR1cyIsImVudGl0bGVtZW50cyIsImlzTG9hZGluZyIsIkNvbnRleHRXcmFwcGVyIiwiY2hpbGRyZW4iLCJQcm92aWRlckNvbXBvc2VyIiwiTWVtb3J5Um91dGVyIiwiQWNjb3VudFByb3ZpZGVyIiwidXNlVXNlciIsInVzZVVzZXJRdW90YXMiLCJMb2FkaW5nQ29tcG9uZW50IiwiZGl2IiwiZmxhZ3NTdGF0dXMiLCJBcHBsaWNhdGlvblByb3ZpZGVycyIsIkNvbnRleHRXaXRob3V0Um91dGVyV3JhcHBlciIsInVpIiwib3B0aW9ucyIsImluY2x1ZGVSb3V0ZXIiLCJyZW5kZXIiLCJ3cmFwcGVyIl0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztJQTRFU0EsbUJBQW1CO2VBQW5CQTs7SUFuRUlDLGlCQUFpQjtlQUFqQkE7Ozs7Z0NBUmdCOzRCQUNMO3lCQUNIOzJCQUVXOzRCQUN1Qjt1QkFDakI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRS9CLE1BQU1BLG9CQUFvQkMsYUFBSSxDQUFDQyxFQUFFO0FBRXhDRixrQkFBa0JHLGVBQWUsQ0FBQztJQUNoQ0MsTUFBTTtRQUNKQyxXQUFXO1lBQ1RDLGdCQUFnQjtZQUNoQkMsaUJBQWlCO1lBQ2pCQyxtQkFBbUI7WUFDbkJDLG9CQUFvQjtZQUNwQkMsb0JBQW9CO1lBQ3BCQyxxQkFBcUI7UUFDdkI7UUFDQUMsY0FBYztZQUNaQyxhQUFhO1lBQ2JDLGNBQWM7WUFDZEMsZ0JBQWdCO1lBQ2hCQyxrQkFBa0I7WUFDbEJDLG1CQUFtQjtRQUNyQjtRQUNBQyxtQkFBbUIsQ0FBQztRQUNwQkMsc0JBQXNCO1lBQ3BCQyxnQkFBZ0I7WUFDaEJDLHdCQUF3QjtRQUMxQjtRQUNBQyx5QkFBeUIsSUFBSUM7UUFDN0JDLHVCQUF1QixFQUFFO1FBQ3pCQyx1QkFBdUIsRUFBRTtRQUN6QkMsb0JBQW9CO1FBQ3BCQyxjQUFjLENBQUM7SUFDakI7SUFDQUMsV0FBVztBQUNiO0FBRUEsTUFBTUMsaUJBQWlCLENBQUMsRUFBRUMsUUFBUSxFQUEyQixpQkFDM0QscUJBQUNDLDRCQUFnQjtrQkFDZixjQUFBLHFCQUFDQyw0QkFBWTtzQkFDWCxjQUFBLHFCQUFDQywwQkFBZTtnQkFDZEMsU0FBU0EsbUJBQU87Z0JBQ2hCQyxlQUFlbkM7Z0JBQ2ZvQyxnQ0FBa0IscUJBQUNDOzhCQUFJOztnQkFDdkJDLGFBQWEsQ0FBQzswQkFFZCxjQUFBLHFCQUFDQyxnQ0FBb0I7OEJBQUVUOzs7OztBQU0vQixNQUFNVSw4QkFBOEIsQ0FBQyxFQUFFVixRQUFRLEVBQTJCLGlCQUN4RSxxQkFBQ0MsNEJBQWdCO2tCQUNmLGNBQUEscUJBQUNFLDBCQUFlO1lBQ2RDLFNBQVNBLG1CQUFPO1lBQ2hCQyxlQUFlbkM7WUFDZm9DLGdDQUFrQixxQkFBQ0M7MEJBQUk7O1lBQ3ZCQyxhQUFhLENBQUM7c0JBRWQsY0FBQSxxQkFBQ0MsZ0NBQW9COzBCQUFFVDs7OztBQUs3QixNQUFNL0Isc0JBQXNCLENBQUMwQyxJQUFrQkMsU0FBeUJDLGdCQUFnQixJQUFJLEdBQzFGQyxJQUFBQSxhQUFNLEVBQUNILElBQUksd0NBQ05DO1FBQ0hHLFNBQVNGLGdCQUFnQmQsaUJBQWlCVyJ9