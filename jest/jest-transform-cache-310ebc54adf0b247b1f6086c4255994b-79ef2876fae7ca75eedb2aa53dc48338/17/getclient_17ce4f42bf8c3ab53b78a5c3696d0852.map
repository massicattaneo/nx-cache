{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/axios-api/src/lib/get-client.ts"],"sourcesContent":["import axios, { AxiosError, AxiosRequestConfig } from \"axios\"\nimport { getUuid } from \"@rp/common/utils\"\nimport {\n  ErrorInterceptor,\n  Interceptors,\n  RequestInterceptor,\n  ResponseInterceptor,\n} from \"./api.types\"\n\nconst getClient = (\n  baseURL: string,\n  axiosOptions?: AxiosRequestConfig,\n  interceptors?: Interceptors,\n) => {\n  const options: AxiosRequestConfig = {\n    withCredentials: true,\n    baseURL,\n    ...axiosOptions,\n  }\n\n  const requestInterceptor: RequestInterceptor = async initialConfig => {\n    const headers: Record<string, string> = {\n      ...initialConfig.headers,\n      \"X-Request-ID\": getUuid(),\n    }\n\n    const config = {\n      ...initialConfig,\n      headers,\n    }\n\n    const interceptor = interceptors?.request?.success\n    return interceptor ? interceptor(config) : config\n  }\n\n  const requestErrorInterceptor: ErrorInterceptor = async err => {\n    const interceptor = interceptors?.request?.error\n    return interceptor !== undefined ? interceptor(err) : Promise.reject(err)\n  }\n\n  const responseInterceptor: ResponseInterceptor = res => {\n    const interceptor = interceptors?.response?.success\n    return interceptor !== undefined ? interceptor(res) : res\n  }\n\n  const responseErrorInterceptor: ErrorInterceptor = async err => {\n    const interceptor = interceptors?.request?.error\n    const handleAxiosError = (error: AxiosError) =>\n      interceptor !== undefined ? interceptor(error) : Promise.reject(error)\n\n    return handleAxiosError(err)\n  }\n\n  const client = axios.create(options)\n\n  client.interceptors.request.use(requestInterceptor, requestErrorInterceptor)\n  client.interceptors.response.use(responseInterceptor, responseErrorInterceptor)\n\n  return client\n}\n\nexport { getClient }\n"],"names":["getClient","baseURL","axiosOptions","interceptors","options","withCredentials","requestInterceptor","initialConfig","headers","getUuid","config","interceptor","request","success","requestErrorInterceptor","err","error","undefined","Promise","reject","responseInterceptor","res","response","responseErrorInterceptor","handleAxiosError","client","axios","create","use"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BA6DSA;;;eAAAA;;;8DA7D6C;uBAC9B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQxB,MAAMA,YAAY,CAChBC,SACAC,cACAC;IAEA,MAAMC,UAA8B;QAClCC,iBAAiB;QACjBJ;OACGC;IAGL,MAAMI,qBAAyC,OAAMC;YAW/BJ;QAVpB,MAAMK,UAAkC,wCACnCD,cAAcC,OAAO;YACxB,gBAAgBC,IAAAA,cAAO;;QAGzB,MAAMC,SAAS,wCACVH;YACHC;;QAGF,MAAMG,cAAcR,yBAAAA,oCAAAA,wBAAAA,aAAcS,OAAO,cAArBT,4CAAAA,sBAAuBU,OAAO;QAClD,OAAOF,cAAcA,YAAYD,UAAUA;IAC7C;IAEA,MAAMI,0BAA4C,OAAMC;YAClCZ;QAApB,MAAMQ,cAAcR,yBAAAA,oCAAAA,wBAAAA,aAAcS,OAAO,cAArBT,4CAAAA,sBAAuBa,KAAK;QAChD,OAAOL,gBAAgBM,YAAYN,YAAYI,OAAOG,QAAQC,MAAM,CAACJ;IACvE;IAEA,MAAMK,sBAA2CC,CAAAA;YAC3BlB;QAApB,MAAMQ,cAAcR,yBAAAA,oCAAAA,yBAAAA,aAAcmB,QAAQ,cAAtBnB,6CAAAA,uBAAwBU,OAAO;QACnD,OAAOF,gBAAgBM,YAAYN,YAAYU,OAAOA;IACxD;IAEA,MAAME,2BAA6C,OAAMR;YACnCZ;QAApB,MAAMQ,cAAcR,yBAAAA,oCAAAA,wBAAAA,aAAcS,OAAO,cAArBT,4CAAAA,sBAAuBa,KAAK;QAChD,MAAMQ,mBAAmB,CAACR,QACxBL,gBAAgBM,YAAYN,YAAYK,SAASE,QAAQC,MAAM,CAACH;QAElE,OAAOQ,iBAAiBT;IAC1B;IAEA,MAAMU,SAASC,cAAK,CAACC,MAAM,CAACvB;IAE5BqB,OAAOtB,YAAY,CAACS,OAAO,CAACgB,GAAG,CAACtB,oBAAoBQ;IACpDW,OAAOtB,YAAY,CAACmB,QAAQ,CAACM,GAAG,CAACR,qBAAqBG;IAEtD,OAAOE;AACT"}