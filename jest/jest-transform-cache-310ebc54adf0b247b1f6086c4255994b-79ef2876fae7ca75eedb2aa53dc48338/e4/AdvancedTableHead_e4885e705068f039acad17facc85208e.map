{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/composite-components/src/AdvancedTable/AdvancedTableHead.tsx"],"sourcesContent":["import React, { Fragment } from \"react\"\nimport { AdvancedTableColumn } from \"@rp/react/web/common/types\"\nimport { TableHead, TableRow, TableSortLabel, styled } from \"@rp/react/web/mui/core\"\nimport { AdvancedTableHeadCell } from \"./AdvancedTable.styles\"\n\ntype Props = {\n  order: \"asc\" | \"desc\"\n  orderBy: string\n  columns: Array<AdvancedTableColumn>\n  onRequestSort?: (event: React.MouseEvent, id: string) => void\n  style?: React.CSSProperties\n}\n\nconst HubTableHeadStyled = styled(\"div\")(() => ({\n  [`& > span > span`]: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n}))\n\nconst AdvancedTableHead = React.forwardRef<HTMLTableSectionElement, Props>(\n  ({ order, orderBy, onRequestSort, columns, style }, ref) => {\n    const createSortHandler = (cellId: string) => (event: React.MouseEvent) => {\n      if (onRequestSort) {\n        onRequestSort(event, cellId)\n      }\n    }\n\n    return (\n      <TableHead ref={ref} style={style}>\n        <TableRow>\n          {columns.map(headCell => {\n            if (headCell.renderCell) {\n              return <Fragment key={headCell.id}>{headCell.renderCell()}</Fragment>\n            }\n            return (\n              <AdvancedTableHeadCell\n                key={headCell.id}\n                sortDirection={orderBy === headCell.id ? order : false}\n                size=\"small\"\n              >\n                <HubTableHeadStyled>\n                  <TableSortLabel\n                    active={orderBy === headCell.id}\n                    direction={orderBy === headCell.id ? order : \"asc\"}\n                    onClick={createSortHandler(headCell.id)}\n                  >\n                    {headCell.label}\n                    {orderBy === headCell.id ? (\n                      <span>{order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}</span>\n                    ) : null}\n                  </TableSortLabel>\n                </HubTableHeadStyled>\n              </AdvancedTableHeadCell>\n            )\n          })}\n        </TableRow>\n      </TableHead>\n    )\n  },\n)\n\nexport { AdvancedTableHead }\n"],"names":["AdvancedTableHead","HubTableHeadStyled","styled","border","clip","height","margin","overflow","padding","position","top","width","React","forwardRef","order","orderBy","onRequestSort","columns","style","ref","createSortHandler","cellId","event","TableHead","TableRow","map","headCell","renderCell","Fragment","id","AdvancedTableHeadCell","sortDirection","size","TableSortLabel","active","direction","onClick","label","span"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAqESA;;;eAAAA;;;;+DArEuB;sBAE4B;qCACtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUtC,MAAMC,qBAAqBC,IAAAA,YAAM,EAAC,OAAO,IAAO,CAAA;QAC9C,CAAC,CAAC,eAAe,CAAC,CAAC,EAAE;YACnBC,QAAQ;YACRC,MAAM;YACNC,QAAQ;YACRC,QAAQ,CAAC;YACTC,UAAU;YACVC,SAAS;YACTC,UAAU;YACVC,KAAK;YACLC,OAAO;QACT;IACF,CAAA;AAEA,MAAMX,kCAAoBY,cAAK,CAACC,UAAU,CACxC,CAAC,EAAEC,KAAK,EAAEC,OAAO,EAAEC,aAAa,EAAEC,OAAO,EAAEC,KAAK,EAAE,EAAEC;IAClD,MAAMC,oBAAoB,CAACC,SAAmB,CAACC;YAC7C,IAAIN,eAAe;gBACjBA,cAAcM,OAAOD;YACvB;QACF;IAEA,qBACE,qBAACE,eAAS;QAACJ,KAAKA;QAAKD,OAAOA;kBAC1B,cAAA,qBAACM,cAAQ;sBACNP,QAAQQ,GAAG,CAACC,CAAAA;gBACX,IAAIA,SAASC,UAAU,EAAE;oBACvB,qBAAO,qBAACC,eAAQ;kCAAoBF,SAASC,UAAU;uBAAjCD,SAASG,EAAE;gBACnC;gBACA,qBACE,qBAACC,0CAAqB;oBAEpBC,eAAehB,YAAYW,SAASG,EAAE,GAAGf,QAAQ;oBACjDkB,MAAK;8BAEL,cAAA,qBAAC/B;kCACC,cAAA,sBAACgC,oBAAc;4BACbC,QAAQnB,YAAYW,SAASG,EAAE;4BAC/BM,WAAWpB,YAAYW,SAASG,EAAE,GAAGf,QAAQ;4BAC7CsB,SAAShB,kBAAkBM,SAASG,EAAE;;gCAErCH,SAASW,KAAK;gCACdtB,YAAYW,SAASG,EAAE,iBACtB,qBAACS;8CAAMxB,UAAU,SAAS,sBAAsB;qCAC9C;;;;mBAbHY,SAASG,EAAE;YAkBtB;;;AAIR"}