{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/chat/src/lib/Chat/Chat/ChatResponse/FollowUpQuestions/FollowUpQuestionButton.tsx"],"sourcesContent":["import { useEffect, useRef } from \"react\"\nimport { PromptSuggestionIcon } from \"@rp/react/common/assets\"\nimport { ButtonBase } from \"@rp/react/web/mui/core\"\n\ntype Props = {\n  label: string\n  onClick: () => void\n}\n\nconst getShrinkWidth = (element: HTMLElement) => {\n  const { firstChild, lastChild } = element\n  if (!element || !firstChild || !lastChild) {\n    return\n  }\n\n  const range = document.createRange()\n  range.setStartBefore(firstChild)\n  range.setEndAfter(lastChild)\n  const { width } = range.getBoundingClientRect()\n  return width\n}\n\nconst FollowUpQuestionButton = ({ label, onClick }: Props) => {\n  const ref = useRef<HTMLButtonElement>(null)\n\n  useEffect(() => {\n    if (ref.current) {\n      ref.current.style.width = `${getShrinkWidth(ref.current)}px`\n    }\n  }, [])\n\n  return (\n    <ButtonBase\n      ref={ref}\n      sx={{\n        bgcolor: \"elevation.dp02\",\n        display: \"flex\",\n        p: 1.25,\n        mb: 1.25,\n        borderRadius: 1,\n        fontFamily: \"body1.fontFamily\",\n        fontSize: \"body1.fontSize\",\n        textAlign: \"start\",\n        alignItems: \"center\",\n        gap: 1,\n        justifyContent: \"start\",\n        outline: \"1px solid\",\n        outlineColor: \"transparent\",\n        boxSizing: \"content-box\",\n        whiteSpace: \"balance\",\n\n        \"&:hover\": { outlineColor: \"grey.A100\", bgcolor: \"elevation.dp06\" },\n\n        \"& svg\": {\n          flexShrink: 0,\n          height: 16,\n          width: 16,\n        },\n      }}\n      onClick={onClick}\n    >\n      <PromptSuggestionIcon />\n      {label}\n    </ButtonBase>\n  )\n}\n\nexport { FollowUpQuestionButton }\n"],"names":["FollowUpQuestionButton","getShrinkWidth","element","firstChild","lastChild","range","document","createRange","setStartBefore","setEndAfter","width","getBoundingClientRect","label","onClick","ref","useRef","useEffect","current","style","ButtonBase","sx","bgcolor","display","p","mb","borderRadius","fontFamily","fontSize","textAlign","alignItems","gap","justifyContent","outline","outlineColor","boxSizing","whiteSpace","flexShrink","height","PromptSuggestionIcon"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAmESA;;;eAAAA;;;;uBAnEyB;wBACG;sBACV;AAO3B,MAAMC,iBAAiB,CAACC;IACtB,MAAM,EAAEC,UAAU,EAAEC,SAAS,EAAE,GAAGF;IAClC,IAAI,CAACA,WAAW,CAACC,cAAc,CAACC,WAAW;QACzC;IACF;IAEA,MAAMC,QAAQC,SAASC,WAAW;IAClCF,MAAMG,cAAc,CAACL;IACrBE,MAAMI,WAAW,CAACL;IAClB,MAAM,EAAEM,KAAK,EAAE,GAAGL,MAAMM,qBAAqB;IAC7C,OAAOD;AACT;AAEA,MAAMV,yBAAyB,CAAC,EAAEY,KAAK,EAAEC,OAAO,EAAS;IACvD,MAAMC,MAAMC,IAAAA,aAAM,EAAoB;IAEtCC,IAAAA,gBAAS,EAAC;QACR,IAAIF,IAAIG,OAAO,EAAE;YACfH,IAAIG,OAAO,CAACC,KAAK,CAACR,KAAK,GAAG,CAAC,EAAET,eAAea,IAAIG,OAAO,EAAE,EAAE,CAAC;QAC9D;IACF,GAAG,EAAE;IAEL,qBACE,sBAACE,gBAAU;QACTL,KAAKA;QACLM,IAAI;YACFC,SAAS;YACTC,SAAS;YACTC,GAAG;YACHC,IAAI;YACJC,cAAc;YACdC,YAAY;YACZC,UAAU;YACVC,WAAW;YACXC,YAAY;YACZC,KAAK;YACLC,gBAAgB;YAChBC,SAAS;YACTC,cAAc;YACdC,WAAW;YACXC,YAAY;YAEZ,WAAW;gBAAEF,cAAc;gBAAaZ,SAAS;YAAiB;YAElE,SAAS;gBACPe,YAAY;gBACZC,QAAQ;gBACR3B,OAAO;YACT;QACF;QACAG,SAASA;;0BAET,qBAACyB,4BAAoB;YACpB1B;;;AAGP"}