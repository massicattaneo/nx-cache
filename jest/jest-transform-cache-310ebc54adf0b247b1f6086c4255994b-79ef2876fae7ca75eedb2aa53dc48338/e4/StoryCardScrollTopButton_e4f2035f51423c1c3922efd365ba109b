27d904af4485986b5c40ec441258c35e
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "StoryCardScrollTopButton", {
    enumerable: true,
    get: function() {
        return StoryCardScrollTopButton;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _theme = require("@rp/react/theme");
const _basecomponents = require("@rp/react/web/common/base-components");
const _hooks = require("@rp/react/web/common/hooks");
const _core = require("@rp/react/web/mui/core");
const _icons = require("@rp/react/web/mui/icons");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const PREFIX = "StoryCardScroll";
const classes = {
    storyCardScrollTopButtonRoot: `${PREFIX}-storyCardScrollTopButtonRoot`,
    scrollButtonOnBody: `${PREFIX}-scrollButtonOnBody`,
    scrollTopFab: `${PREFIX}-scrollTopFab`
};
const StoryCardScrollStyled = (0, _theme.styled)("div")(({ theme })=>({
        [`&.${classes.storyCardScrollTopButtonRoot}`]: {
            position: "absolute",
            bottom: 6,
            right: 10
        },
        [`&.${classes.scrollButtonOnBody}`]: {
            position: "fixed",
            bottom: theme.spacing(1),
            left: "50%"
        },
        [`& .${classes.scrollTopFab}`]: {
            color: theme.palette.common.white,
            backgroundColor: theme.palette.grey[500],
            "&:hover": {
                backgroundColor: theme.palette.grey[600]
            }
        }
    }));
const StoryCardScrollTopButton = ({ infiniteScrollContainerRef, scrollBody = false })=>{
    const [show, handleShow] = (0, _react.useState)(false);
    const { isMobile } = (0, _hooks.useDeviceInfo)();
    (0, _react.useEffect)(()=>{
        const scrollListener = ()=>{
            let scrollY = 0;
            if (scrollBody) {
                scrollY = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;
            } else {
                var _infiniteScrollContainerRef_current;
                var _infiniteScrollContainerRef_current_scrollTop;
                scrollY = (_infiniteScrollContainerRef_current_scrollTop = (_infiniteScrollContainerRef_current = infiniteScrollContainerRef.current) === null || _infiniteScrollContainerRef_current === void 0 ? void 0 : _infiniteScrollContainerRef_current.scrollTop) !== null && _infiniteScrollContainerRef_current_scrollTop !== void 0 ? _infiniteScrollContainerRef_current_scrollTop : 0;
            }
            if (scrollY > 0) {
                handleShow(true);
            } else handleShow(false);
        };
        window.addEventListener("scroll", scrollListener, true);
        return ()=>{
            window.removeEventListener("scroll", scrollListener, true);
        };
    });
    const handleScrollToTop = ()=>{
        var _infiniteScrollContainerRef_current;
        scrollBody ? window.scrollTo({
            top: 0,
            behavior: "smooth"
        }) : infiniteScrollContainerRef === null || infiniteScrollContainerRef === void 0 ? void 0 : (_infiniteScrollContainerRef_current = infiniteScrollContainerRef.current) === null || _infiniteScrollContainerRef_current === void 0 ? void 0 : _infiniteScrollContainerRef_current.scroll({
            top: 0,
            behavior: "smooth"
        });
    };
    if (isMobile) return null;
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(StoryCardScrollStyled, {
        className: scrollBody ? classes.scrollButtonOnBody : classes.storyCardScrollTopButtonRoot,
        children: show && /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.RPTooltip, {
            title: "Go to top",
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Fab, {
                size: "small",
                variant: "circular",
                color: "inherit",
                "aria-label": "scroll-to-top",
                role: "scroll-to-top-button",
                className: classes.scrollTopFab,
                onClick: handleScrollToTop,
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.ArrowUpward, {})
            })
        })
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9jb21wb3NpdGUtY29tcG9uZW50cy9zcmMvU3RvcnlDYXJkU2Nyb2xsVG9wQnV0dG9uL1N0b3J5Q2FyZFNjcm9sbFRvcEJ1dHRvbi50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IHsgc3R5bGVkIH0gZnJvbSBcIkBycC9yZWFjdC90aGVtZVwiXG5pbXBvcnQgeyBSUFRvb2x0aXAgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9jb21tb24vYmFzZS1jb21wb25lbnRzXCJcbmltcG9ydCB7IHVzZURldmljZUluZm8gfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9jb21tb24vaG9va3NcIlxuaW1wb3J0IHsgRmFiIH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvbXVpL2NvcmVcIlxuaW1wb3J0IHsgQXJyb3dVcHdhcmQgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9tdWkvaWNvbnNcIlxuXG5jb25zdCBQUkVGSVggPSBcIlN0b3J5Q2FyZFNjcm9sbFwiXG5cbmNvbnN0IGNsYXNzZXMgPSB7XG4gIHN0b3J5Q2FyZFNjcm9sbFRvcEJ1dHRvblJvb3Q6IGAke1BSRUZJWH0tc3RvcnlDYXJkU2Nyb2xsVG9wQnV0dG9uUm9vdGAsXG4gIHNjcm9sbEJ1dHRvbk9uQm9keTogYCR7UFJFRklYfS1zY3JvbGxCdXR0b25PbkJvZHlgLFxuICBzY3JvbGxUb3BGYWI6IGAke1BSRUZJWH0tc2Nyb2xsVG9wRmFiYCxcbn1cblxuY29uc3QgU3RvcnlDYXJkU2Nyb2xsU3R5bGVkID0gc3R5bGVkKFwiZGl2XCIpKCh7IHRoZW1lIH0pID0+ICh7XG4gIFtgJi4ke2NsYXNzZXMuc3RvcnlDYXJkU2Nyb2xsVG9wQnV0dG9uUm9vdH1gXToge1xuICAgIHBvc2l0aW9uOiBcImFic29sdXRlXCIsXG4gICAgYm90dG9tOiA2LFxuICAgIHJpZ2h0OiAxMCxcbiAgfSxcbiAgW2AmLiR7Y2xhc3Nlcy5zY3JvbGxCdXR0b25PbkJvZHl9YF06IHtcbiAgICBwb3NpdGlvbjogXCJmaXhlZFwiLFxuICAgIGJvdHRvbTogdGhlbWUuc3BhY2luZygxKSxcbiAgICBsZWZ0OiBcIjUwJVwiLFxuICB9LFxuICBbYCYgLiR7Y2xhc3Nlcy5zY3JvbGxUb3BGYWJ9YF06IHtcbiAgICBjb2xvcjogdGhlbWUucGFsZXR0ZS5jb21tb24ud2hpdGUsXG4gICAgYmFja2dyb3VuZENvbG9yOiB0aGVtZS5wYWxldHRlLmdyZXlbNTAwXSxcbiAgICBcIiY6aG92ZXJcIjoge1xuICAgICAgYmFja2dyb3VuZENvbG9yOiB0aGVtZS5wYWxldHRlLmdyZXlbNjAwXSxcbiAgICB9LFxuICB9LFxufSkpXG5cbnR5cGUgU3RvcnlDYXJkU2Nyb2xsVG9wQnV0dG9uUHJvcHMgPSB7XG4gIGluZmluaXRlU2Nyb2xsQ29udGFpbmVyUmVmOiBSZWFjdC5SZWZPYmplY3Q8SFRNTEVsZW1lbnQgfCBudWxsPlxuICBzY3JvbGxCb2R5PzogYm9vbGVhblxufVxuY29uc3QgU3RvcnlDYXJkU2Nyb2xsVG9wQnV0dG9uID0gKHtcbiAgaW5maW5pdGVTY3JvbGxDb250YWluZXJSZWYsXG4gIHNjcm9sbEJvZHkgPSBmYWxzZSxcbn06IFN0b3J5Q2FyZFNjcm9sbFRvcEJ1dHRvblByb3BzKSA9PiB7XG4gIGNvbnN0IFtzaG93LCBoYW5kbGVTaG93XSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCB7IGlzTW9iaWxlIH0gPSB1c2VEZXZpY2VJbmZvKClcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBzY3JvbGxMaXN0ZW5lciA9ICgpID0+IHtcbiAgICAgIGxldCBzY3JvbGxZID0gMFxuXG4gICAgICBpZiAoc2Nyb2xsQm9keSkge1xuICAgICAgICBzY3JvbGxZID1cbiAgICAgICAgICB3aW5kb3cucGFnZVlPZmZzZXQgfHwgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcCB8fCBkb2N1bWVudC5ib2R5LnNjcm9sbFRvcCB8fCAwXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzY3JvbGxZID0gaW5maW5pdGVTY3JvbGxDb250YWluZXJSZWYuY3VycmVudD8uc2Nyb2xsVG9wID8/IDBcbiAgICAgIH1cblxuICAgICAgaWYgKHNjcm9sbFkgPiAwKSB7XG4gICAgICAgIGhhbmRsZVNob3codHJ1ZSlcbiAgICAgIH0gZWxzZSBoYW5kbGVTaG93KGZhbHNlKVxuICAgIH1cbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInNjcm9sbFwiLCBzY3JvbGxMaXN0ZW5lciwgdHJ1ZSlcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJzY3JvbGxcIiwgc2Nyb2xsTGlzdGVuZXIsIHRydWUpXG4gICAgfVxuICB9KVxuXG4gIGNvbnN0IGhhbmRsZVNjcm9sbFRvVG9wID0gKCkgPT4ge1xuICAgIHNjcm9sbEJvZHlcbiAgICAgID8gd2luZG93LnNjcm9sbFRvKHsgdG9wOiAwLCBiZWhhdmlvcjogXCJzbW9vdGhcIiB9KVxuICAgICAgOiBpbmZpbml0ZVNjcm9sbENvbnRhaW5lclJlZj8uY3VycmVudD8uc2Nyb2xsKHsgdG9wOiAwLCBiZWhhdmlvcjogXCJzbW9vdGhcIiB9KVxuICB9XG5cbiAgaWYgKGlzTW9iaWxlKSByZXR1cm4gbnVsbFxuXG4gIHJldHVybiAoXG4gICAgPFN0b3J5Q2FyZFNjcm9sbFN0eWxlZFxuICAgICAgY2xhc3NOYW1lPXtzY3JvbGxCb2R5ID8gY2xhc3Nlcy5zY3JvbGxCdXR0b25PbkJvZHkgOiBjbGFzc2VzLnN0b3J5Q2FyZFNjcm9sbFRvcEJ1dHRvblJvb3R9XG4gICAgPlxuICAgICAge3Nob3cgJiYgKFxuICAgICAgICA8UlBUb29sdGlwIHRpdGxlPVwiR28gdG8gdG9wXCI+XG4gICAgICAgICAgPEZhYlxuICAgICAgICAgICAgc2l6ZT1cInNtYWxsXCJcbiAgICAgICAgICAgIHZhcmlhbnQ9XCJjaXJjdWxhclwiXG4gICAgICAgICAgICBjb2xvcj1cImluaGVyaXRcIlxuICAgICAgICAgICAgYXJpYS1sYWJlbD1cInNjcm9sbC10by10b3BcIlxuICAgICAgICAgICAgcm9sZT1cInNjcm9sbC10by10b3AtYnV0dG9uXCJcbiAgICAgICAgICAgIGNsYXNzTmFtZT17Y2xhc3Nlcy5zY3JvbGxUb3BGYWJ9XG4gICAgICAgICAgICBvbkNsaWNrPXtoYW5kbGVTY3JvbGxUb1RvcH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICA8QXJyb3dVcHdhcmQgLz5cbiAgICAgICAgICA8L0ZhYj5cbiAgICAgICAgPC9SUFRvb2x0aXA+XG4gICAgICApfVxuICAgIDwvU3RvcnlDYXJkU2Nyb2xsU3R5bGVkPlxuICApXG59XG5cbmV4cG9ydCB7IFN0b3J5Q2FyZFNjcm9sbFRvcEJ1dHRvbiB9XG4iXSwibmFtZXMiOlsiU3RvcnlDYXJkU2Nyb2xsVG9wQnV0dG9uIiwiUFJFRklYIiwiY2xhc3NlcyIsInN0b3J5Q2FyZFNjcm9sbFRvcEJ1dHRvblJvb3QiLCJzY3JvbGxCdXR0b25PbkJvZHkiLCJzY3JvbGxUb3BGYWIiLCJTdG9yeUNhcmRTY3JvbGxTdHlsZWQiLCJzdHlsZWQiLCJ0aGVtZSIsInBvc2l0aW9uIiwiYm90dG9tIiwicmlnaHQiLCJzcGFjaW5nIiwibGVmdCIsImNvbG9yIiwicGFsZXR0ZSIsImNvbW1vbiIsIndoaXRlIiwiYmFja2dyb3VuZENvbG9yIiwiZ3JleSIsImluZmluaXRlU2Nyb2xsQ29udGFpbmVyUmVmIiwic2Nyb2xsQm9keSIsInNob3ciLCJoYW5kbGVTaG93IiwidXNlU3RhdGUiLCJpc01vYmlsZSIsInVzZURldmljZUluZm8iLCJ1c2VFZmZlY3QiLCJzY3JvbGxMaXN0ZW5lciIsInNjcm9sbFkiLCJ3aW5kb3ciLCJwYWdlWU9mZnNldCIsImRvY3VtZW50IiwiZG9jdW1lbnRFbGVtZW50Iiwic2Nyb2xsVG9wIiwiYm9keSIsImN1cnJlbnQiLCJhZGRFdmVudExpc3RlbmVyIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImhhbmRsZVNjcm9sbFRvVG9wIiwic2Nyb2xsVG8iLCJ0b3AiLCJiZWhhdmlvciIsInNjcm9sbCIsImNsYXNzTmFtZSIsIlJQVG9vbHRpcCIsInRpdGxlIiwiRmFiIiwic2l6ZSIsInZhcmlhbnQiLCJhcmlhLWxhYmVsIiwicm9sZSIsIm9uQ2xpY2siLCJBcnJvd1Vwd2FyZCJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBaUdTQTs7O2VBQUFBOzs7OytEQWpHa0M7dUJBQ3BCO2dDQUNHO3VCQUNJO3NCQUNWO3VCQUNROzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFNUIsTUFBTUMsU0FBUztBQUVmLE1BQU1DLFVBQVU7SUFDZEMsOEJBQThCLENBQUMsRUFBRUYsT0FBTyw2QkFBNkIsQ0FBQztJQUN0RUcsb0JBQW9CLENBQUMsRUFBRUgsT0FBTyxtQkFBbUIsQ0FBQztJQUNsREksY0FBYyxDQUFDLEVBQUVKLE9BQU8sYUFBYSxDQUFDO0FBQ3hDO0FBRUEsTUFBTUssd0JBQXdCQyxJQUFBQSxhQUFNLEVBQUMsT0FBTyxDQUFDLEVBQUVDLEtBQUssRUFBRSxHQUFNLENBQUE7UUFDMUQsQ0FBQyxDQUFDLEVBQUUsRUFBRU4sUUFBUUMsNEJBQTRCLENBQUMsQ0FBQyxDQUFDLEVBQUU7WUFDN0NNLFVBQVU7WUFDVkMsUUFBUTtZQUNSQyxPQUFPO1FBQ1Q7UUFDQSxDQUFDLENBQUMsRUFBRSxFQUFFVCxRQUFRRSxrQkFBa0IsQ0FBQyxDQUFDLENBQUMsRUFBRTtZQUNuQ0ssVUFBVTtZQUNWQyxRQUFRRixNQUFNSSxPQUFPLENBQUM7WUFDdEJDLE1BQU07UUFDUjtRQUNBLENBQUMsQ0FBQyxHQUFHLEVBQUVYLFFBQVFHLFlBQVksQ0FBQyxDQUFDLENBQUMsRUFBRTtZQUM5QlMsT0FBT04sTUFBTU8sT0FBTyxDQUFDQyxNQUFNLENBQUNDLEtBQUs7WUFDakNDLGlCQUFpQlYsTUFBTU8sT0FBTyxDQUFDSSxJQUFJLENBQUMsSUFBSTtZQUN4QyxXQUFXO2dCQUNURCxpQkFBaUJWLE1BQU1PLE9BQU8sQ0FBQ0ksSUFBSSxDQUFDLElBQUk7WUFDMUM7UUFDRjtJQUNGLENBQUE7QUFNQSxNQUFNbkIsMkJBQTJCLENBQUMsRUFDaENvQiwwQkFBMEIsRUFDMUJDLGFBQWEsS0FBSyxFQUNZO0lBQzlCLE1BQU0sQ0FBQ0MsTUFBTUMsV0FBVyxHQUFHQyxJQUFBQSxlQUFRLEVBQUM7SUFDcEMsTUFBTSxFQUFFQyxRQUFRLEVBQUUsR0FBR0MsSUFBQUEsb0JBQWE7SUFDbENDLElBQUFBLGdCQUFTLEVBQUM7UUFDUixNQUFNQyxpQkFBaUI7WUFDckIsSUFBSUMsVUFBVTtZQUVkLElBQUlSLFlBQVk7Z0JBQ2RRLFVBQ0VDLE9BQU9DLFdBQVcsSUFBSUMsU0FBU0MsZUFBZSxDQUFDQyxTQUFTLElBQUlGLFNBQVNHLElBQUksQ0FBQ0QsU0FBUyxJQUFJO1lBQzNGLE9BQU87b0JBQ0tkO29CQUFBQTtnQkFBVlMsVUFBVVQsQ0FBQUEsaURBQUFBLHNDQUFBQSwyQkFBMkJnQixPQUFPLGNBQWxDaEIsMERBQUFBLG9DQUFvQ2MsU0FBUyxjQUE3Q2QsMkRBQUFBLGdEQUFpRDtZQUM3RDtZQUVBLElBQUlTLFVBQVUsR0FBRztnQkFDZk4sV0FBVztZQUNiLE9BQU9BLFdBQVc7UUFDcEI7UUFDQU8sT0FBT08sZ0JBQWdCLENBQUMsVUFBVVQsZ0JBQWdCO1FBQ2xELE9BQU87WUFDTEUsT0FBT1EsbUJBQW1CLENBQUMsVUFBVVYsZ0JBQWdCO1FBQ3ZEO0lBQ0Y7SUFFQSxNQUFNVyxvQkFBb0I7WUFHcEJuQjtRQUZKQyxhQUNJUyxPQUFPVSxRQUFRLENBQUM7WUFBRUMsS0FBSztZQUFHQyxVQUFVO1FBQVMsS0FDN0N0Qix1Q0FBQUEsa0RBQUFBLHNDQUFBQSwyQkFBNEJnQixPQUFPLGNBQW5DaEIsMERBQUFBLG9DQUFxQ3VCLE1BQU0sQ0FBQztZQUFFRixLQUFLO1lBQUdDLFVBQVU7UUFBUztJQUMvRTtJQUVBLElBQUlqQixVQUFVLE9BQU87SUFFckIscUJBQ0UscUJBQUNuQjtRQUNDc0MsV0FBV3ZCLGFBQWFuQixRQUFRRSxrQkFBa0IsR0FBR0YsUUFBUUMsNEJBQTRCO2tCQUV4Rm1CLHNCQUNDLHFCQUFDdUIseUJBQVM7WUFBQ0MsT0FBTTtzQkFDZixjQUFBLHFCQUFDQyxTQUFHO2dCQUNGQyxNQUFLO2dCQUNMQyxTQUFRO2dCQUNSbkMsT0FBTTtnQkFDTm9DLGNBQVc7Z0JBQ1hDLE1BQUs7Z0JBQ0xQLFdBQVcxQyxRQUFRRyxZQUFZO2dCQUMvQitDLFNBQVNiOzBCQUVULGNBQUEscUJBQUNjLGtCQUFXOzs7O0FBTXhCIn0=