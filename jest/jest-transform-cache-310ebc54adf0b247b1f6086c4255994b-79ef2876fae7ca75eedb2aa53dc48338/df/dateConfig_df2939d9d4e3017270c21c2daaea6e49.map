{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/common/utils/src/lib/dateConfig.ts"],"sourcesContent":["import addDays from \"date-fns/addDays\"\nimport addHours from \"date-fns/addHours\"\n\nexport enum DateInterval {\n  \"today\" = \"today\",\n  \"lastEightHours\" = \"last_8_hours\",\n  \"lastTwelveHours\" = \"last_12_hours\",\n  \"lastTwentyFourHours\" = \"last_24_hours\",\n  \"yesterday\" = \"yesterday\",\n  \"lastSevenDays\" = \"last_seven_days\",\n  \"lastThirtyDays\" = \"last_thirty_days\",\n  \"lastNinetyDays\" = \"last_ninety_days\",\n  \"yearToDate\" = \"year_to_date\",\n  // TODO will be good if Be change it to \"last_year\"\n  \"lastYear\" = \"last_twelve_months\",\n  \"anyTime\" = \"any_time\",\n}\n\ntype DatePickerOptionValue = {\n  label: string\n  start: () => Date\n  end: () => Date\n}\n\ntype DatePickerOptions<T extends string = string> = Record<T, DatePickerOptionValue>\n\nconst getNow = () => new Date()\n\nexport const DATE_OPTIONS: DatePickerOptions = {\n  [DateInterval.anyTime]: {\n    label: \"Anytime\",\n    start: () => new Date(2000, 0, 1),\n    end: getNow,\n  },\n  [DateInterval.today]: {\n    label: \"Today\",\n    start: () => {\n      const now = getNow()\n      now.setHours(0, 0, 0, 0)\n      return now\n    },\n    end: getNow,\n  },\n  [DateInterval.yesterday]: {\n    label: \"Yesterday\",\n    start: () => addDays(getNow(), -1),\n    end: getNow,\n  },\n  [DateInterval.lastEightHours]: {\n    label: \"Last 8 hours\",\n    start: () => addHours(getNow(), -8),\n    end: getNow,\n  },\n  [DateInterval.lastTwelveHours]: {\n    label: \"Last 12 hours\",\n    start: () => addHours(getNow(), -12),\n    end: getNow,\n  },\n  [DateInterval.lastTwentyFourHours]: {\n    label: \"Last 24 hours\",\n    start: () => addDays(getNow(), -1),\n    end: getNow,\n  },\n  [DateInterval.lastSevenDays]: {\n    label: \"Last 7 days\",\n    start: () => addDays(getNow(), -7),\n    end: getNow,\n  },\n  [DateInterval.lastThirtyDays]: {\n    label: \"Last 30 days\",\n    start: () => addDays(getNow(), -30),\n    end: getNow,\n  },\n  [DateInterval.lastNinetyDays]: {\n    label: \"Last 90 days\",\n    start: () => addDays(getNow(), -90),\n    end: getNow,\n  },\n  [DateInterval.lastYear]: {\n    label: \"Last 365 days\",\n    start: () => addDays(getNow(), -365),\n    end: getNow,\n  },\n}\n"],"names":["DATE_OPTIONS","DateInterval","getNow","Date","label","start","end","now","setHours","addDays","addHours"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;;;;;;;;IA4BaA,YAAY;eAAZA;;;;;;gEA5BO;iEACC;;;;;;;UAETC;;;;;;;;;;IAUV,mDAAmD;;;GAVzCA,iBAAAA;AAuBZ,MAAMC,SAAS,IAAM,IAAIC;AAElB,MAAMH,eAAkC;IAC7C,YAAsB,EAAE;QACtBI,OAAO;QACPC,OAAO,IAAM,IAAIF,KAAK,MAAM,GAAG;QAC/BG,KAAKJ;IACP;IACA,SAAoB,EAAE;QACpBE,OAAO;QACPC,OAAO;YACL,MAAME,MAAML;YACZK,IAAIC,QAAQ,CAAC,GAAG,GAAG,GAAG;YACtB,OAAOD;QACT;QACAD,KAAKJ;IACP;IACA,aAAwB,EAAE;QACxBE,OAAO;QACPC,OAAO,IAAMI,IAAAA,gBAAO,EAACP,UAAU,CAAC;QAChCI,KAAKJ;IACP;IACA,gBAA6B,EAAE;QAC7BE,OAAO;QACPC,OAAO,IAAMK,IAAAA,iBAAQ,EAACR,UAAU,CAAC;QACjCI,KAAKJ;IACP;IACA,iBAA8B,EAAE;QAC9BE,OAAO;QACPC,OAAO,IAAMK,IAAAA,iBAAQ,EAACR,UAAU,CAAC;QACjCI,KAAKJ;IACP;IACA,iBAAkC,EAAE;QAClCE,OAAO;QACPC,OAAO,IAAMI,IAAAA,gBAAO,EAACP,UAAU,CAAC;QAChCI,KAAKJ;IACP;IACA,mBAA4B,EAAE;QAC5BE,OAAO;QACPC,OAAO,IAAMI,IAAAA,gBAAO,EAACP,UAAU,CAAC;QAChCI,KAAKJ;IACP;IACA,oBAA6B,EAAE;QAC7BE,OAAO;QACPC,OAAO,IAAMI,IAAAA,gBAAO,EAACP,UAAU,CAAC;QAChCI,KAAKJ;IACP;IACA,oBAA6B,EAAE;QAC7BE,OAAO;QACPC,OAAO,IAAMI,IAAAA,gBAAO,EAACP,UAAU,CAAC;QAChCI,KAAKJ;IACP;IACA,sBAAuB,EAAE;QACvBE,OAAO;QACPC,OAAO,IAAMI,IAAAA,gBAAO,EAACP,UAAU,CAAC;QAChCI,KAAKJ;IACP;AACF"}