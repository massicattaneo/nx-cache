2483b700df20379bc84e11ea04ec1d0e
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    DATE_OPTIONS: function() {
        return DATE_OPTIONS;
    },
    DateInterval: function() {
        return DateInterval;
    }
});
const _addDays = /*#__PURE__*/ _interop_require_default(require("date-fns/addDays"));
const _addHours = /*#__PURE__*/ _interop_require_default(require("date-fns/addHours"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var DateInterval;
(function(DateInterval) {
    DateInterval["today"] = "today";
    DateInterval["lastEightHours"] = "last_8_hours";
    DateInterval["lastTwelveHours"] = "last_12_hours";
    DateInterval["lastTwentyFourHours"] = "last_24_hours";
    DateInterval["yesterday"] = "yesterday";
    DateInterval["lastSevenDays"] = "last_seven_days";
    DateInterval["lastThirtyDays"] = "last_thirty_days";
    DateInterval["lastNinetyDays"] = "last_ninety_days";
    DateInterval["yearToDate"] = "year_to_date";
    // TODO will be good if Be change it to "last_year"
    DateInterval["lastYear"] = "last_twelve_months";
    DateInterval["anyTime"] = "any_time";
})(DateInterval || (DateInterval = {}));
const getNow = ()=>new Date();
const DATE_OPTIONS = {
    ["any_time"]: {
        label: "Anytime",
        start: ()=>new Date(2000, 0, 1),
        end: getNow
    },
    ["today"]: {
        label: "Today",
        start: ()=>{
            const now = getNow();
            now.setHours(0, 0, 0, 0);
            return now;
        },
        end: getNow
    },
    ["yesterday"]: {
        label: "Yesterday",
        start: ()=>(0, _addDays.default)(getNow(), -1),
        end: getNow
    },
    ["last_8_hours"]: {
        label: "Last 8 hours",
        start: ()=>(0, _addHours.default)(getNow(), -8),
        end: getNow
    },
    ["last_12_hours"]: {
        label: "Last 12 hours",
        start: ()=>(0, _addHours.default)(getNow(), -12),
        end: getNow
    },
    ["last_24_hours"]: {
        label: "Last 24 hours",
        start: ()=>(0, _addDays.default)(getNow(), -1),
        end: getNow
    },
    ["last_seven_days"]: {
        label: "Last 7 days",
        start: ()=>(0, _addDays.default)(getNow(), -7),
        end: getNow
    },
    ["last_thirty_days"]: {
        label: "Last 30 days",
        start: ()=>(0, _addDays.default)(getNow(), -30),
        end: getNow
    },
    ["last_ninety_days"]: {
        label: "Last 90 days",
        start: ()=>(0, _addDays.default)(getNow(), -90),
        end: getNow
    },
    ["last_twelve_months"]: {
        label: "Last 365 days",
        start: ()=>(0, _addDays.default)(getNow(), -365),
        end: getNow
    }
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvY29tbW9uL3V0aWxzL3NyYy9saWIvZGF0ZUNvbmZpZy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYWRkRGF5cyBmcm9tIFwiZGF0ZS1mbnMvYWRkRGF5c1wiXG5pbXBvcnQgYWRkSG91cnMgZnJvbSBcImRhdGUtZm5zL2FkZEhvdXJzXCJcblxuZXhwb3J0IGVudW0gRGF0ZUludGVydmFsIHtcbiAgXCJ0b2RheVwiID0gXCJ0b2RheVwiLFxuICBcImxhc3RFaWdodEhvdXJzXCIgPSBcImxhc3RfOF9ob3Vyc1wiLFxuICBcImxhc3RUd2VsdmVIb3Vyc1wiID0gXCJsYXN0XzEyX2hvdXJzXCIsXG4gIFwibGFzdFR3ZW50eUZvdXJIb3Vyc1wiID0gXCJsYXN0XzI0X2hvdXJzXCIsXG4gIFwieWVzdGVyZGF5XCIgPSBcInllc3RlcmRheVwiLFxuICBcImxhc3RTZXZlbkRheXNcIiA9IFwibGFzdF9zZXZlbl9kYXlzXCIsXG4gIFwibGFzdFRoaXJ0eURheXNcIiA9IFwibGFzdF90aGlydHlfZGF5c1wiLFxuICBcImxhc3ROaW5ldHlEYXlzXCIgPSBcImxhc3RfbmluZXR5X2RheXNcIixcbiAgXCJ5ZWFyVG9EYXRlXCIgPSBcInllYXJfdG9fZGF0ZVwiLFxuICAvLyBUT0RPIHdpbGwgYmUgZ29vZCBpZiBCZSBjaGFuZ2UgaXQgdG8gXCJsYXN0X3llYXJcIlxuICBcImxhc3RZZWFyXCIgPSBcImxhc3RfdHdlbHZlX21vbnRoc1wiLFxuICBcImFueVRpbWVcIiA9IFwiYW55X3RpbWVcIixcbn1cblxudHlwZSBEYXRlUGlja2VyT3B0aW9uVmFsdWUgPSB7XG4gIGxhYmVsOiBzdHJpbmdcbiAgc3RhcnQ6ICgpID0+IERhdGVcbiAgZW5kOiAoKSA9PiBEYXRlXG59XG5cbnR5cGUgRGF0ZVBpY2tlck9wdGlvbnM8VCBleHRlbmRzIHN0cmluZyA9IHN0cmluZz4gPSBSZWNvcmQ8VCwgRGF0ZVBpY2tlck9wdGlvblZhbHVlPlxuXG5jb25zdCBnZXROb3cgPSAoKSA9PiBuZXcgRGF0ZSgpXG5cbmV4cG9ydCBjb25zdCBEQVRFX09QVElPTlM6IERhdGVQaWNrZXJPcHRpb25zID0ge1xuICBbRGF0ZUludGVydmFsLmFueVRpbWVdOiB7XG4gICAgbGFiZWw6IFwiQW55dGltZVwiLFxuICAgIHN0YXJ0OiAoKSA9PiBuZXcgRGF0ZSgyMDAwLCAwLCAxKSxcbiAgICBlbmQ6IGdldE5vdyxcbiAgfSxcbiAgW0RhdGVJbnRlcnZhbC50b2RheV06IHtcbiAgICBsYWJlbDogXCJUb2RheVwiLFxuICAgIHN0YXJ0OiAoKSA9PiB7XG4gICAgICBjb25zdCBub3cgPSBnZXROb3coKVxuICAgICAgbm93LnNldEhvdXJzKDAsIDAsIDAsIDApXG4gICAgICByZXR1cm4gbm93XG4gICAgfSxcbiAgICBlbmQ6IGdldE5vdyxcbiAgfSxcbiAgW0RhdGVJbnRlcnZhbC55ZXN0ZXJkYXldOiB7XG4gICAgbGFiZWw6IFwiWWVzdGVyZGF5XCIsXG4gICAgc3RhcnQ6ICgpID0+IGFkZERheXMoZ2V0Tm93KCksIC0xKSxcbiAgICBlbmQ6IGdldE5vdyxcbiAgfSxcbiAgW0RhdGVJbnRlcnZhbC5sYXN0RWlnaHRIb3Vyc106IHtcbiAgICBsYWJlbDogXCJMYXN0IDggaG91cnNcIixcbiAgICBzdGFydDogKCkgPT4gYWRkSG91cnMoZ2V0Tm93KCksIC04KSxcbiAgICBlbmQ6IGdldE5vdyxcbiAgfSxcbiAgW0RhdGVJbnRlcnZhbC5sYXN0VHdlbHZlSG91cnNdOiB7XG4gICAgbGFiZWw6IFwiTGFzdCAxMiBob3Vyc1wiLFxuICAgIHN0YXJ0OiAoKSA9PiBhZGRIb3VycyhnZXROb3coKSwgLTEyKSxcbiAgICBlbmQ6IGdldE5vdyxcbiAgfSxcbiAgW0RhdGVJbnRlcnZhbC5sYXN0VHdlbnR5Rm91ckhvdXJzXToge1xuICAgIGxhYmVsOiBcIkxhc3QgMjQgaG91cnNcIixcbiAgICBzdGFydDogKCkgPT4gYWRkRGF5cyhnZXROb3coKSwgLTEpLFxuICAgIGVuZDogZ2V0Tm93LFxuICB9LFxuICBbRGF0ZUludGVydmFsLmxhc3RTZXZlbkRheXNdOiB7XG4gICAgbGFiZWw6IFwiTGFzdCA3IGRheXNcIixcbiAgICBzdGFydDogKCkgPT4gYWRkRGF5cyhnZXROb3coKSwgLTcpLFxuICAgIGVuZDogZ2V0Tm93LFxuICB9LFxuICBbRGF0ZUludGVydmFsLmxhc3RUaGlydHlEYXlzXToge1xuICAgIGxhYmVsOiBcIkxhc3QgMzAgZGF5c1wiLFxuICAgIHN0YXJ0OiAoKSA9PiBhZGREYXlzKGdldE5vdygpLCAtMzApLFxuICAgIGVuZDogZ2V0Tm93LFxuICB9LFxuICBbRGF0ZUludGVydmFsLmxhc3ROaW5ldHlEYXlzXToge1xuICAgIGxhYmVsOiBcIkxhc3QgOTAgZGF5c1wiLFxuICAgIHN0YXJ0OiAoKSA9PiBhZGREYXlzKGdldE5vdygpLCAtOTApLFxuICAgIGVuZDogZ2V0Tm93LFxuICB9LFxuICBbRGF0ZUludGVydmFsLmxhc3RZZWFyXToge1xuICAgIGxhYmVsOiBcIkxhc3QgMzY1IGRheXNcIixcbiAgICBzdGFydDogKCkgPT4gYWRkRGF5cyhnZXROb3coKSwgLTM2NSksXG4gICAgZW5kOiBnZXROb3csXG4gIH0sXG59XG4iXSwibmFtZXMiOlsiREFURV9PUFRJT05TIiwiRGF0ZUludGVydmFsIiwiZ2V0Tm93IiwiRGF0ZSIsImxhYmVsIiwic3RhcnQiLCJlbmQiLCJub3ciLCJzZXRIb3VycyIsImFkZERheXMiLCJhZGRIb3VycyJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0lBNEJhQSxZQUFZO2VBQVpBOzs7Ozs7Z0VBNUJPO2lFQUNDOzs7Ozs7O1VBRVRDOzs7Ozs7Ozs7O0lBVVYsbURBQW1EOzs7R0FWekNBLGlCQUFBQTtBQXVCWixNQUFNQyxTQUFTLElBQU0sSUFBSUM7QUFFbEIsTUFBTUgsZUFBa0M7SUFDN0MsWUFBc0IsRUFBRTtRQUN0QkksT0FBTztRQUNQQyxPQUFPLElBQU0sSUFBSUYsS0FBSyxNQUFNLEdBQUc7UUFDL0JHLEtBQUtKO0lBQ1A7SUFDQSxTQUFvQixFQUFFO1FBQ3BCRSxPQUFPO1FBQ1BDLE9BQU87WUFDTCxNQUFNRSxNQUFNTDtZQUNaSyxJQUFJQyxRQUFRLENBQUMsR0FBRyxHQUFHLEdBQUc7WUFDdEIsT0FBT0Q7UUFDVDtRQUNBRCxLQUFLSjtJQUNQO0lBQ0EsYUFBd0IsRUFBRTtRQUN4QkUsT0FBTztRQUNQQyxPQUFPLElBQU1JLElBQUFBLGdCQUFPLEVBQUNQLFVBQVUsQ0FBQztRQUNoQ0ksS0FBS0o7SUFDUDtJQUNBLGdCQUE2QixFQUFFO1FBQzdCRSxPQUFPO1FBQ1BDLE9BQU8sSUFBTUssSUFBQUEsaUJBQVEsRUFBQ1IsVUFBVSxDQUFDO1FBQ2pDSSxLQUFLSjtJQUNQO0lBQ0EsaUJBQThCLEVBQUU7UUFDOUJFLE9BQU87UUFDUEMsT0FBTyxJQUFNSyxJQUFBQSxpQkFBUSxFQUFDUixVQUFVLENBQUM7UUFDakNJLEtBQUtKO0lBQ1A7SUFDQSxpQkFBa0MsRUFBRTtRQUNsQ0UsT0FBTztRQUNQQyxPQUFPLElBQU1JLElBQUFBLGdCQUFPLEVBQUNQLFVBQVUsQ0FBQztRQUNoQ0ksS0FBS0o7SUFDUDtJQUNBLG1CQUE0QixFQUFFO1FBQzVCRSxPQUFPO1FBQ1BDLE9BQU8sSUFBTUksSUFBQUEsZ0JBQU8sRUFBQ1AsVUFBVSxDQUFDO1FBQ2hDSSxLQUFLSjtJQUNQO0lBQ0Esb0JBQTZCLEVBQUU7UUFDN0JFLE9BQU87UUFDUEMsT0FBTyxJQUFNSSxJQUFBQSxnQkFBTyxFQUFDUCxVQUFVLENBQUM7UUFDaENJLEtBQUtKO0lBQ1A7SUFDQSxvQkFBNkIsRUFBRTtRQUM3QkUsT0FBTztRQUNQQyxPQUFPLElBQU1JLElBQUFBLGdCQUFPLEVBQUNQLFVBQVUsQ0FBQztRQUNoQ0ksS0FBS0o7SUFDUDtJQUNBLHNCQUF1QixFQUFFO1FBQ3ZCRSxPQUFPO1FBQ1BDLE9BQU8sSUFBTUksSUFBQUEsZ0JBQU8sRUFBQ1AsVUFBVSxDQUFDO1FBQ2hDSSxLQUFLSjtJQUNQO0FBQ0YifQ==