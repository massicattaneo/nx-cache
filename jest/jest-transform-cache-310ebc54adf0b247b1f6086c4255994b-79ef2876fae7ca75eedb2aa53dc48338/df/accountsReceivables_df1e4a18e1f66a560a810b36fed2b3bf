ef8679a101f0568f8fe9f32f2a71dc31
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "accountsReceivables", {
    enumerable: true,
    get: function() {
        return accountsReceivables;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _WatchlistDataTablePriceCell = require("../../WatchlistDataTableCells/WatchlistDataTablePriceCell");
const _genericColumn = require("../../genericColumn");
const _fiscalPeriodUtils = require("../../utils/fiscalPeriodUtils");
function accountsReceivables(tableName) {
    const title = "Accounts Receivables (FQ)";
    return (0, _genericColumn.genericColumn)({
        endpoint: "companyBalanceStatement",
        columnKeys: [
            "accountsReceivables"
        ],
        size: 130,
        title,
        enableSorting: true,
        enableHiding: true,
        tooltip: "Money owed by customers.",
        cell: (info)=>{
            var _info_row_original_financialData_companyBalanceStatement_data, _info_row_original_financialData_companyBalanceStatement, _info_row_original_financialData_companyBalanceStatement_data1, _info_row_original_financialData_companyBalanceStatement1;
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_WatchlistDataTablePriceCell.WatchlistDataTablePriceCell, {
                tooltip: `Explain the ${title}`,
                queryResult: info.row.original.financialData.companyBalanceStatement,
                currency: (_info_row_original_financialData_companyBalanceStatement = info.row.original.financialData.companyBalanceStatement) === null || _info_row_original_financialData_companyBalanceStatement === void 0 ? void 0 : (_info_row_original_financialData_companyBalanceStatement_data = _info_row_original_financialData_companyBalanceStatement.data) === null || _info_row_original_financialData_companyBalanceStatement_data === void 0 ? void 0 : _info_row_original_financialData_companyBalanceStatement_data.reportedCurrency,
                onClick: ()=>{
                    var _info_row_original_financialData_companyBalanceStatement_data, _info_row_original_financialData_companyBalanceStatement, _info_row_original_onChatWithCell, _info_row_original;
                    const fiscalPeriod = (0, _fiscalPeriodUtils.getBalanceSheetFiscalPeriod)(info.row.original);
                    (_info_row_original_onChatWithCell = (_info_row_original = info.row.original).onChatWithCell) === null || _info_row_original_onChatWithCell === void 0 ? void 0 : _info_row_original_onChatWithCell.call(_info_row_original, {
                        prompt: `What has ${info.row.original.entityInfo.name} reported in ${fiscalPeriod} about accounts receivables?`,
                        value: (_info_row_original_financialData_companyBalanceStatement = info.row.original.financialData.companyBalanceStatement) === null || _info_row_original_financialData_companyBalanceStatement === void 0 ? void 0 : (_info_row_original_financialData_companyBalanceStatement_data = _info_row_original_financialData_companyBalanceStatement.data) === null || _info_row_original_financialData_companyBalanceStatement_data === void 0 ? void 0 : _info_row_original_financialData_companyBalanceStatement_data.accountsReceivables,
                        entityInfo: info.row.original.entityInfo,
                        columnName: `${tableName}: ${title}`
                    });
                },
                value: (_info_row_original_financialData_companyBalanceStatement1 = info.row.original.financialData.companyBalanceStatement) === null || _info_row_original_financialData_companyBalanceStatement1 === void 0 ? void 0 : (_info_row_original_financialData_companyBalanceStatement_data1 = _info_row_original_financialData_companyBalanceStatement1.data) === null || _info_row_original_financialData_companyBalanceStatement_data1 === void 0 ? void 0 : _info_row_original_financialData_companyBalanceStatement_data1.accountsReceivables
            });
        }
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL3dhdGNobGlzdHMvc3JjL2xpYi9XYXRjaGxpc3REYXRhVGFicy9lbmRwb2ludHMvY29tcGFueUJhbGFuY2VTdGF0ZW1lbnQvYWNjb3VudHNSZWNlaXZhYmxlcy50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgV2F0Y2hsaXN0RGF0YVRhYmxlUHJpY2VDZWxsIH0gZnJvbSBcIi4uLy4uL1dhdGNobGlzdERhdGFUYWJsZUNlbGxzL1dhdGNobGlzdERhdGFUYWJsZVByaWNlQ2VsbFwiXG5pbXBvcnQgeyBnZW5lcmljQ29sdW1uIH0gZnJvbSBcIi4uLy4uL2dlbmVyaWNDb2x1bW5cIlxuaW1wb3J0IHsgZ2V0QmFsYW5jZVNoZWV0RmlzY2FsUGVyaW9kIH0gZnJvbSBcIi4uLy4uL3V0aWxzL2Zpc2NhbFBlcmlvZFV0aWxzXCJcblxuZnVuY3Rpb24gYWNjb3VudHNSZWNlaXZhYmxlcyh0YWJsZU5hbWU6IHN0cmluZykge1xuICBjb25zdCB0aXRsZSA9IFwiQWNjb3VudHMgUmVjZWl2YWJsZXMgKEZRKVwiXG4gIHJldHVybiBnZW5lcmljQ29sdW1uKHtcbiAgICBlbmRwb2ludDogXCJjb21wYW55QmFsYW5jZVN0YXRlbWVudFwiLFxuICAgIGNvbHVtbktleXM6IFtcImFjY291bnRzUmVjZWl2YWJsZXNcIl0sXG4gICAgc2l6ZTogMTMwLFxuICAgIHRpdGxlLFxuICAgIGVuYWJsZVNvcnRpbmc6IHRydWUsXG4gICAgZW5hYmxlSGlkaW5nOiB0cnVlLFxuICAgIHRvb2x0aXA6IFwiTW9uZXkgb3dlZCBieSBjdXN0b21lcnMuXCIsXG4gICAgY2VsbDogaW5mbyA9PiB7XG4gICAgICByZXR1cm4gKFxuICAgICAgICA8V2F0Y2hsaXN0RGF0YVRhYmxlUHJpY2VDZWxsXG4gICAgICAgICAgdG9vbHRpcD17YEV4cGxhaW4gdGhlICR7dGl0bGV9YH1cbiAgICAgICAgICBxdWVyeVJlc3VsdD17aW5mby5yb3cub3JpZ2luYWwuZmluYW5jaWFsRGF0YS5jb21wYW55QmFsYW5jZVN0YXRlbWVudH1cbiAgICAgICAgICBjdXJyZW5jeT17aW5mby5yb3cub3JpZ2luYWwuZmluYW5jaWFsRGF0YS5jb21wYW55QmFsYW5jZVN0YXRlbWVudD8uZGF0YT8ucmVwb3J0ZWRDdXJyZW5jeX1cbiAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBmaXNjYWxQZXJpb2QgPSBnZXRCYWxhbmNlU2hlZXRGaXNjYWxQZXJpb2QoaW5mby5yb3cub3JpZ2luYWwpXG4gICAgICAgICAgICBpbmZvLnJvdy5vcmlnaW5hbC5vbkNoYXRXaXRoQ2VsbD8uKHtcbiAgICAgICAgICAgICAgcHJvbXB0OiBgV2hhdCBoYXMgJHtpbmZvLnJvdy5vcmlnaW5hbC5lbnRpdHlJbmZvLm5hbWV9IHJlcG9ydGVkIGluICR7ZmlzY2FsUGVyaW9kfSBhYm91dCBhY2NvdW50cyByZWNlaXZhYmxlcz9gLFxuICAgICAgICAgICAgICB2YWx1ZTpcbiAgICAgICAgICAgICAgICBpbmZvLnJvdy5vcmlnaW5hbC5maW5hbmNpYWxEYXRhLmNvbXBhbnlCYWxhbmNlU3RhdGVtZW50Py5kYXRhPy5hY2NvdW50c1JlY2VpdmFibGVzLFxuICAgICAgICAgICAgICBlbnRpdHlJbmZvOiBpbmZvLnJvdy5vcmlnaW5hbC5lbnRpdHlJbmZvLFxuICAgICAgICAgICAgICBjb2x1bW5OYW1lOiBgJHt0YWJsZU5hbWV9OiAke3RpdGxlfWAsXG4gICAgICAgICAgICB9KVxuICAgICAgICAgIH19XG4gICAgICAgICAgdmFsdWU9e2luZm8ucm93Lm9yaWdpbmFsLmZpbmFuY2lhbERhdGEuY29tcGFueUJhbGFuY2VTdGF0ZW1lbnQ/LmRhdGE/LmFjY291bnRzUmVjZWl2YWJsZXN9XG4gICAgICAgIC8+XG4gICAgICApXG4gICAgfSxcbiAgfSlcbn1cblxuZXhwb3J0IHsgYWNjb3VudHNSZWNlaXZhYmxlcyB9XG4iXSwibmFtZXMiOlsiYWNjb3VudHNSZWNlaXZhYmxlcyIsInRhYmxlTmFtZSIsInRpdGxlIiwiZ2VuZXJpY0NvbHVtbiIsImVuZHBvaW50IiwiY29sdW1uS2V5cyIsInNpemUiLCJlbmFibGVTb3J0aW5nIiwiZW5hYmxlSGlkaW5nIiwidG9vbHRpcCIsImNlbGwiLCJpbmZvIiwiV2F0Y2hsaXN0RGF0YVRhYmxlUHJpY2VDZWxsIiwicXVlcnlSZXN1bHQiLCJyb3ciLCJvcmlnaW5hbCIsImZpbmFuY2lhbERhdGEiLCJjb21wYW55QmFsYW5jZVN0YXRlbWVudCIsImN1cnJlbmN5IiwiZGF0YSIsInJlcG9ydGVkQ3VycmVuY3kiLCJvbkNsaWNrIiwiZmlzY2FsUGVyaW9kIiwiZ2V0QmFsYW5jZVNoZWV0RmlzY2FsUGVyaW9kIiwib25DaGF0V2l0aENlbGwiLCJwcm9tcHQiLCJlbnRpdHlJbmZvIiwibmFtZSIsInZhbHVlIiwiY29sdW1uTmFtZSJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQXFDU0E7OztlQUFBQTs7Ozs2Q0FyQ21DOytCQUNkO21DQUNjO0FBRTVDLFNBQVNBLG9CQUFvQkMsU0FBaUI7SUFDNUMsTUFBTUMsUUFBUTtJQUNkLE9BQU9DLElBQUFBLDRCQUFhLEVBQUM7UUFDbkJDLFVBQVU7UUFDVkMsWUFBWTtZQUFDO1NBQXNCO1FBQ25DQyxNQUFNO1FBQ05KO1FBQ0FLLGVBQWU7UUFDZkMsY0FBYztRQUNkQyxTQUFTO1FBQ1RDLE1BQU1DLENBQUFBO2dCQUtVQSwrREFBQUEsMERBV0hBLGdFQUFBQTtZQWZYLHFCQUNFLHFCQUFDQyx3REFBMkI7Z0JBQzFCSCxTQUFTLENBQUMsWUFBWSxFQUFFUCxNQUFNLENBQUM7Z0JBQy9CVyxhQUFhRixLQUFLRyxHQUFHLENBQUNDLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDQyx1QkFBdUI7Z0JBQ3BFQyxRQUFRLEdBQUVQLDJEQUFBQSxLQUFLRyxHQUFHLENBQUNDLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDQyx1QkFBdUIsY0FBdkROLGdGQUFBQSxnRUFBQUEseURBQXlEUSxJQUFJLGNBQTdEUixvRkFBQUEsOERBQStEUyxnQkFBZ0I7Z0JBQ3pGQyxTQUFTO3dCQUtIViwrREFBQUEsMERBSEpBLG1DQUFBQTtvQkFEQSxNQUFNVyxlQUFlQyxJQUFBQSw4Q0FBMkIsRUFBQ1osS0FBS0csR0FBRyxDQUFDQyxRQUFRO3FCQUNsRUosb0NBQUFBLENBQUFBLHFCQUFBQSxLQUFLRyxHQUFHLENBQUNDLFFBQVEsRUFBQ1MsY0FBYyxjQUFoQ2Isd0RBQUFBLHVDQUFBQSxvQkFBbUM7d0JBQ2pDYyxRQUFRLENBQUMsU0FBUyxFQUFFZCxLQUFLRyxHQUFHLENBQUNDLFFBQVEsQ0FBQ1csVUFBVSxDQUFDQyxJQUFJLENBQUMsYUFBYSxFQUFFTCxhQUFhLDRCQUE0QixDQUFDO3dCQUMvR00sS0FBSyxHQUNIakIsMkRBQUFBLEtBQUtHLEdBQUcsQ0FBQ0MsUUFBUSxDQUFDQyxhQUFhLENBQUNDLHVCQUF1QixjQUF2RE4sZ0ZBQUFBLGdFQUFBQSx5REFBeURRLElBQUksY0FBN0RSLG9GQUFBQSw4REFBK0RYLG1CQUFtQjt3QkFDcEYwQixZQUFZZixLQUFLRyxHQUFHLENBQUNDLFFBQVEsQ0FBQ1csVUFBVTt3QkFDeENHLFlBQVksQ0FBQyxFQUFFNUIsVUFBVSxFQUFFLEVBQUVDLE1BQU0sQ0FBQztvQkFDdEM7Z0JBQ0Y7Z0JBQ0EwQixLQUFLLEdBQUVqQiw0REFBQUEsS0FBS0csR0FBRyxDQUFDQyxRQUFRLENBQUNDLGFBQWEsQ0FBQ0MsdUJBQXVCLGNBQXZETixpRkFBQUEsaUVBQUFBLDBEQUF5RFEsSUFBSSxjQUE3RFIscUZBQUFBLCtEQUErRFgsbUJBQW1COztRQUcvRjtJQUNGO0FBQ0YifQ==