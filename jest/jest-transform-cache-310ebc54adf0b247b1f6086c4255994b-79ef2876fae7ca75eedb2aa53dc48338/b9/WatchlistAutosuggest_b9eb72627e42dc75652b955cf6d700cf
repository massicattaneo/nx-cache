b50c2b63ac4e57dc05d4c003d06c1cc3
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "WatchlistAutosuggest", {
    enumerable: true,
    get: function() {
        return WatchlistAutosuggest;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _hooks = require("@rp/react/common/hooks");
const _suggestion = require("@rp/react/tanstack-api/suggestion");
const _searchautosuggestinput = require("@rp/react/web/common/search-autosuggest-input");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
const WatchlistAutosuggest = /*#__PURE__*/ (0, _react.forwardRef)(({ onChange, selectedItems, perPage = 20, displayItems = 5, placeholder = "Search for Companies & ETFs", disabled, customFilter, onHorizontalSelect, children }, ref)=>{
    const [popperOpen, setPopperOpen] = (0, _react.useState)(false);
    const [query, setQuery, queryValue] = (0, _hooks.useDebouncedState)("", 140);
    const { data, fetchNextPage, hasNextPage, isLoading } = (0, _suggestion.useWatchlistSuggestions)(_object_spread({
        query,
        perPage
    }, (0, _searchautosuggestinput.getWatchlistAutosuggestFilters)(customFilter)));
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_searchautosuggestinput.WatchlistAutosuggestInput, {
        ref: ref,
        data: data,
        isLoading: isLoading,
        fetchNextPage: fetchNextPage,
        hasNextPage: hasNextPage,
        setQuery: setQuery,
        rawQuery: queryValue,
        onChange: onChange,
        placeholder: placeholder,
        open: popperOpen,
        setOpen: setPopperOpen,
        selectedItems: selectedItems,
        displayItems: displayItems,
        clearOnEnter: true,
        inputProps: {
            sx: {
                input: {
                    padding: 1
                }
            }
        },
        disabled: disabled,
        showTicker: customFilter === "all" || customFilter === "stocks" || customFilter === "etfs",
        onHorizontalSelect: onHorizontalSelect,
        children: children
    });
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL3dhdGNobGlzdHMvc3JjL2xpYi9XYXRjaGxpc3RBdXRvc3VnZ2VzdC9XYXRjaGxpc3RBdXRvc3VnZ2VzdC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJvcHNXaXRoQ2hpbGRyZW4sIGZvcndhcmRSZWYsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCJcbmltcG9ydCB7IHVzZURlYm91bmNlZFN0YXRlIH0gZnJvbSBcIkBycC9yZWFjdC9jb21tb24vaG9va3NcIlxuaW1wb3J0IHsgRW5oYW5jZWRTdWdnZXN0aW9uLCB1c2VXYXRjaGxpc3RTdWdnZXN0aW9ucyB9IGZyb20gXCJAcnAvcmVhY3QvdGFuc3RhY2stYXBpL3N1Z2dlc3Rpb25cIlxuaW1wb3J0IHtcbiAgU3VnZ2VzdGlvbkN1c3RvbUZpbHRlcixcbiAgV2F0Y2hsaXN0QXV0b3N1Z2dlc3RJbnB1dCxcbiAgV2F0Y2hsaXN0QXV0b3N1Z2dlc3RJbnB1dFJlZixcbiAgZ2V0V2F0Y2hsaXN0QXV0b3N1Z2dlc3RGaWx0ZXJzLFxufSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9jb21tb24vc2VhcmNoLWF1dG9zdWdnZXN0LWlucHV0XCJcblxudHlwZSBQcm9wcyA9IFByb3BzV2l0aENoaWxkcmVuPHtcbiAgb25DaGFuZ2U6ICh2YWx1ZTogRW5oYW5jZWRTdWdnZXN0aW9uKSA9PiB2b2lkXG4gIGN1c3RvbUZpbHRlcj86IFN1Z2dlc3Rpb25DdXN0b21GaWx0ZXJcbiAgc2VsZWN0ZWRJdGVtczogQXJyYXk8c3RyaW5nPlxuICBwZXJQYWdlPzogbnVtYmVyXG4gIGRpc3BsYXlJdGVtcz86IG51bWJlclxuICBwbGFjZWhvbGRlcj86IHN0cmluZ1xuICBkaXNhYmxlZD86IGJvb2xlYW5cbiAgb25Ib3Jpem9udGFsU2VsZWN0PzogKGluZGV4OiAxIHwgLTEpID0+IHZvaWRcbn0+XG5cbmNvbnN0IFdhdGNobGlzdEF1dG9zdWdnZXN0ID0gZm9yd2FyZFJlZjxXYXRjaGxpc3RBdXRvc3VnZ2VzdElucHV0UmVmLCBQcm9wcz4oXG4gIChcbiAgICB7XG4gICAgICBvbkNoYW5nZSxcbiAgICAgIHNlbGVjdGVkSXRlbXMsXG4gICAgICBwZXJQYWdlID0gMjAsXG4gICAgICBkaXNwbGF5SXRlbXMgPSA1LFxuICAgICAgcGxhY2Vob2xkZXIgPSBcIlNlYXJjaCBmb3IgQ29tcGFuaWVzICYgRVRGc1wiLFxuICAgICAgZGlzYWJsZWQsXG4gICAgICBjdXN0b21GaWx0ZXIsXG4gICAgICBvbkhvcml6b250YWxTZWxlY3QsXG4gICAgICBjaGlsZHJlbixcbiAgICB9LFxuICAgIHJlZixcbiAgKSA9PiB7XG4gICAgY29uc3QgW3BvcHBlck9wZW4sIHNldFBvcHBlck9wZW5dID0gdXNlU3RhdGUoZmFsc2UpXG4gICAgY29uc3QgW3F1ZXJ5LCBzZXRRdWVyeSwgcXVlcnlWYWx1ZV0gPSB1c2VEZWJvdW5jZWRTdGF0ZShcIlwiLCAxNDApXG5cbiAgICBjb25zdCB7IGRhdGEsIGZldGNoTmV4dFBhZ2UsIGhhc05leHRQYWdlLCBpc0xvYWRpbmcgfSA9IHVzZVdhdGNobGlzdFN1Z2dlc3Rpb25zKHtcbiAgICAgIHF1ZXJ5LFxuICAgICAgcGVyUGFnZSxcbiAgICAgIC4uLmdldFdhdGNobGlzdEF1dG9zdWdnZXN0RmlsdGVycyhjdXN0b21GaWx0ZXIpLFxuICAgIH0pXG4gICAgcmV0dXJuIChcbiAgICAgIDxXYXRjaGxpc3RBdXRvc3VnZ2VzdElucHV0XG4gICAgICAgIHJlZj17cmVmfVxuICAgICAgICBkYXRhPXtkYXRhfVxuICAgICAgICBpc0xvYWRpbmc9e2lzTG9hZGluZ31cbiAgICAgICAgZmV0Y2hOZXh0UGFnZT17ZmV0Y2hOZXh0UGFnZX1cbiAgICAgICAgaGFzTmV4dFBhZ2U9e2hhc05leHRQYWdlfVxuICAgICAgICBzZXRRdWVyeT17c2V0UXVlcnl9XG4gICAgICAgIHJhd1F1ZXJ5PXtxdWVyeVZhbHVlfVxuICAgICAgICBvbkNoYW5nZT17b25DaGFuZ2V9XG4gICAgICAgIHBsYWNlaG9sZGVyPXtwbGFjZWhvbGRlcn1cbiAgICAgICAgb3Blbj17cG9wcGVyT3Blbn1cbiAgICAgICAgc2V0T3Blbj17c2V0UG9wcGVyT3Blbn1cbiAgICAgICAgc2VsZWN0ZWRJdGVtcz17c2VsZWN0ZWRJdGVtc31cbiAgICAgICAgZGlzcGxheUl0ZW1zPXtkaXNwbGF5SXRlbXN9XG4gICAgICAgIGNsZWFyT25FbnRlclxuICAgICAgICBpbnB1dFByb3BzPXt7IHN4OiB7IGlucHV0OiB7IHBhZGRpbmc6IDEgfSB9IH19XG4gICAgICAgIGRpc2FibGVkPXtkaXNhYmxlZH1cbiAgICAgICAgc2hvd1RpY2tlcj17Y3VzdG9tRmlsdGVyID09PSBcImFsbFwiIHx8IGN1c3RvbUZpbHRlciA9PT0gXCJzdG9ja3NcIiB8fCBjdXN0b21GaWx0ZXIgPT09IFwiZXRmc1wifVxuICAgICAgICBvbkhvcml6b250YWxTZWxlY3Q9e29uSG9yaXpvbnRhbFNlbGVjdH1cbiAgICAgID5cbiAgICAgICAge2NoaWxkcmVufVxuICAgICAgPC9XYXRjaGxpc3RBdXRvc3VnZ2VzdElucHV0PlxuICAgIClcbiAgfSxcbilcblxuZXhwb3J0IHsgV2F0Y2hsaXN0QXV0b3N1Z2dlc3QgfVxuIl0sIm5hbWVzIjpbIldhdGNobGlzdEF1dG9zdWdnZXN0IiwiZm9yd2FyZFJlZiIsIm9uQ2hhbmdlIiwic2VsZWN0ZWRJdGVtcyIsInBlclBhZ2UiLCJkaXNwbGF5SXRlbXMiLCJwbGFjZWhvbGRlciIsImRpc2FibGVkIiwiY3VzdG9tRmlsdGVyIiwib25Ib3Jpem9udGFsU2VsZWN0IiwiY2hpbGRyZW4iLCJyZWYiLCJwb3BwZXJPcGVuIiwic2V0UG9wcGVyT3BlbiIsInVzZVN0YXRlIiwicXVlcnkiLCJzZXRRdWVyeSIsInF1ZXJ5VmFsdWUiLCJ1c2VEZWJvdW5jZWRTdGF0ZSIsImRhdGEiLCJmZXRjaE5leHRQYWdlIiwiaGFzTmV4dFBhZ2UiLCJpc0xvYWRpbmciLCJ1c2VXYXRjaGxpc3RTdWdnZXN0aW9ucyIsImdldFdhdGNobGlzdEF1dG9zdWdnZXN0RmlsdGVycyIsIldhdGNobGlzdEF1dG9zdWdnZXN0SW5wdXQiLCJyYXdRdWVyeSIsIm9wZW4iLCJzZXRPcGVuIiwiY2xlYXJPbkVudGVyIiwiaW5wdXRQcm9wcyIsInN4IiwiaW5wdXQiLCJwYWRkaW5nIiwic2hvd1RpY2tlciJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkF1RVNBOzs7ZUFBQUE7Ozs7dUJBdkUrQzt1QkFDdEI7NEJBQzBCO3dDQU1yRDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFhUCxNQUFNQSxxQ0FBdUJDLElBQUFBLGlCQUFVLEVBQ3JDLENBQ0UsRUFDRUMsUUFBUSxFQUNSQyxhQUFhLEVBQ2JDLFVBQVUsRUFBRSxFQUNaQyxlQUFlLENBQUMsRUFDaEJDLGNBQWMsNkJBQTZCLEVBQzNDQyxRQUFRLEVBQ1JDLFlBQVksRUFDWkMsa0JBQWtCLEVBQ2xCQyxRQUFRLEVBQ1QsRUFDREM7SUFFQSxNQUFNLENBQUNDLFlBQVlDLGNBQWMsR0FBR0MsSUFBQUEsZUFBUSxFQUFDO0lBQzdDLE1BQU0sQ0FBQ0MsT0FBT0MsVUFBVUMsV0FBVyxHQUFHQyxJQUFBQSx3QkFBaUIsRUFBQyxJQUFJO0lBRTVELE1BQU0sRUFBRUMsSUFBSSxFQUFFQyxhQUFhLEVBQUVDLFdBQVcsRUFBRUMsU0FBUyxFQUFFLEdBQUdDLElBQUFBLG1DQUF1QixFQUFDO1FBQzlFUjtRQUNBWDtPQUNHb0IsSUFBQUEsc0RBQThCLEVBQUNoQjtJQUVwQyxxQkFDRSxxQkFBQ2lCLGlEQUF5QjtRQUN4QmQsS0FBS0E7UUFDTFEsTUFBTUE7UUFDTkcsV0FBV0E7UUFDWEYsZUFBZUE7UUFDZkMsYUFBYUE7UUFDYkwsVUFBVUE7UUFDVlUsVUFBVVQ7UUFDVmYsVUFBVUE7UUFDVkksYUFBYUE7UUFDYnFCLE1BQU1mO1FBQ05nQixTQUFTZjtRQUNUVixlQUFlQTtRQUNmRSxjQUFjQTtRQUNkd0IsWUFBWTtRQUNaQyxZQUFZO1lBQUVDLElBQUk7Z0JBQUVDLE9BQU87b0JBQUVDLFNBQVM7Z0JBQUU7WUFBRTtRQUFFO1FBQzVDMUIsVUFBVUE7UUFDVjJCLFlBQVkxQixpQkFBaUIsU0FBU0EsaUJBQWlCLFlBQVlBLGlCQUFpQjtRQUNwRkMsb0JBQW9CQTtrQkFFbkJDOztBQUdQIn0=