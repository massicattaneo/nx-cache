{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/tools/jestPreviewPlugin/server.js"],"sourcesContent":["const http = require(\"http\")\nconst path = require(\"path\")\nconst fs = require(\"fs\")\nconst connect = require(\"connect\")\nconst chokidar = require(\"chokidar\")\nconst { WebSocketServer } = require(\"ws\")\n\nconst CACHE_DIRECTORY = path.join(__dirname, \"../../node_modules/.cache/jest-preview\")\nconst INDEX_BASENAME = \"index.html\"\nconst INDEX_PATH = path.join(CACHE_DIRECTORY, INDEX_BASENAME)\n\nconst FAVICON = path.join(__dirname, \"favicon.ico\")\n\nconst previewServer = ({ injectCss = [], port, renderHtml } = {}) => {\n  const app = connect()\n\n  if (!fs.existsSync(INDEX_PATH)) {\n    fs.mkdirSync(CACHE_DIRECTORY, {\n      recursive: true,\n    })\n  }\n\n  // DEFAULT\n  fs.writeFileSync(\n    INDEX_PATH,\n    `<html><head></head><body>\n    <h3>JEST PREVIEW</h3>\n    <h5>Usage:</h5>\n    <code style=\"white-space: pre-wrap; display: block;background: bisque;padding-left: 12px;\">\ndescribe(\"test\", () => {\n  it(\"test\", () => {\n    ...\n    global.preview()\n  })\n})\n    </code>\n    </body></html>`,\n  )\n\n  const server = http.createServer(app)\n  const wss = new WebSocketServer({ server })\n\n  wss.on(\"connection\", function connection(ws) {\n    ws.on(\"message\", function message(data) {\n      //\n    })\n  })\n\n  const watcher = chokidar.watch([INDEX_PATH], {\n    // ignored: ['**/node_modules/**', '**/.git/**'],\n    ignoreInitial: true,\n    ignorePermissionErrors: true,\n    disableGlobbing: true,\n  })\n\n  function handleFileChange(filePath) {\n    const basename = path.basename(filePath)\n    if (basename === INDEX_BASENAME) {\n      wss.clients.forEach(client => {\n        if (client.readyState === 1) {\n          client.send(JSON.stringify({ type: \"reload\" }))\n        }\n      })\n    }\n  }\n\n  watcher.on(\"change\", handleFileChange).on(\"add\", handleFileChange).on(\"unlink\", handleFileChange)\n\n  function injectToString(string, word, injectWord) {\n    const breakPosition = string.indexOf(word) + word.length\n    return string.slice(0, breakPosition) + injectWord + string.slice(breakPosition)\n  }\n\n  function injectToHead(html, content) {\n    return injectToString(html, \"<head>\", content)\n  }\n\n  app.use((req, res, next) => {\n    if (req.url === \"/\") {\n      return next()\n    }\n\n    const fromCwd = path.join(__dirname, \"../../\", req.url)\n    if (fs.existsSync(fromCwd)) {\n      res.setHeader(\"Content-Type\", \"text/css\")\n      res.writeHead(200)\n      res.end(fs.readFileSync(fromCwd, \"utf-8\"))\n    } else if (req.url === \"/favicon.ico\") {\n      res.setHeader(\"Content-Type\", \"image/x-icon\")\n      fs.createReadStream(FAVICON).pipe(res)\n    } else {\n      // nothing\n    }\n  })\n\n  app.use(\"/\", (_req, res) => {\n    const reloadScriptContent = fs\n      .readFileSync(path.join(__dirname, \"./ws-client.js\"), \"utf-8\")\n      .replace(/\\$port/g, `${port}`)\n    let indexHtml = fs.readFileSync(INDEX_PATH, \"utf-8\")\n    indexHtml = injectToHead(\n      indexHtml,\n      `<title>Jest Preview</title>\n      <meta charset=\"UTF-8\">\n      <script>${reloadScriptContent}</script>\n    ${injectCss.map(css => `<link rel=\"stylesheet\" type=\"text/css\" href=\"${css}\"/>`).join(\"\\n\")}\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no, viewport-fit=cover\">`,\n    )\n    res.end(renderHtml(indexHtml))\n  })\n\n  server.listen(port, () => {})\n}\n\nmodule.exports = { previewServer, CACHE_DIRECTORY, INDEX_PATH }\n"],"names":["http","require","path","fs","connect","chokidar","WebSocketServer","CACHE_DIRECTORY","join","__dirname","INDEX_BASENAME","INDEX_PATH","FAVICON","previewServer","injectCss","port","renderHtml","app","existsSync","mkdirSync","recursive","writeFileSync","server","createServer","wss","on","connection","ws","message","data","watcher","watch","ignoreInitial","ignorePermissionErrors","disableGlobbing","handleFileChange","filePath","basename","clients","forEach","client","readyState","send","JSON","stringify","type","injectToString","string","word","injectWord","breakPosition","indexOf","length","slice","injectToHead","html","content","use","req","res","next","url","fromCwd","setHeader","writeHead","end","readFileSync","createReadStream","pipe","_req","reloadScriptContent","replace","indexHtml","map","css","listen","module","exports"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}