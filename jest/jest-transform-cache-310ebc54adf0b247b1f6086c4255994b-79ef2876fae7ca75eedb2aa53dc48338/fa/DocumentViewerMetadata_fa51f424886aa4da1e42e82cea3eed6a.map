{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/document-viewer/src/lib/DocumentViewerMetadata.tsx"],"sourcesContent":["import { CqsScope } from \"@rp/common/api-types\"\nimport { RpJsonDocument } from \"@rp/react/rpjson/types\"\nimport { useCqsByIdsContext } from \"@rp/react/tanstack-api/cqs-by-ids\"\nimport { DocumentIcon } from \"@rp/react/web/common/composite-components\"\nimport { DateAndTranslatedInfo } from \"@rp/react/web/common/document-viewer\"\nimport { FileIcon } from \"@rp/react/web/icons\"\nimport { Typography } from \"@rp/react/web/mui/core\"\nimport { DocumentMetadataContainer } from \"./DocumentViewerPage.styles\"\n\ntype DocumentViewerMetadataProps = {\n  namespace: \"public\" | \"private\"\n  language: string\n  documentScope?: CqsScope\n  fileExtension?: string\n  rpjson: RpJsonDocument\n}\n\nconst DocumentViewerMetadata = (props: DocumentViewerMetadataProps) => {\n  const { namespace, language, fileExtension, documentScope = \"news\", rpjson } = props\n  const sourceName = rpjson.document?.source?.name\n  const timestamp = rpjson.document?.timestamps_utc.analytics\n  const srcKey = rpjson.document?.source.rp_source_id\n\n  const { ids: cqsDict } = useCqsByIdsContext()\n  const cqsName =\n    rpjson.document?.source.rp_source_id && cqsDict[rpjson.document.source.rp_source_id].data.name\n\n  return (\n    <DocumentMetadataContainer\n      data-testid={`document-headerInfo-${rpjson.document.rp_document_id}`}\n    >\n      {namespace === \"public\" ? (\n        <DocumentIcon\n          documentScope={documentScope}\n          text={cqsName || sourceName || \"Unknown Source\"}\n          srcKey={srcKey}\n        />\n      ) : (\n        <>\n          <FileIcon extension={fileExtension} />\n          <Typography fontSize={11} ml=\"4px\" component=\"span\">\n            My Files\n          </Typography>\n        </>\n      )}\n      <DateAndTranslatedInfo language={language} timestamp={timestamp} />\n    </DocumentMetadataContainer>\n  )\n}\n\nexport { DocumentViewerMetadata }\nexport type { DocumentViewerMetadataProps }\n"],"names":["DocumentViewerMetadata","props","rpjson","namespace","language","fileExtension","documentScope","sourceName","document","source","name","timestamp","timestamps_utc","analytics","srcKey","rp_source_id","ids","cqsDict","useCqsByIdsContext","cqsName","data","DocumentMetadataContainer","data-testid","rp_document_id","DocumentIcon","text","FileIcon","extension","Typography","fontSize","ml","component","DateAndTranslatedInfo"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAkDSA;;;eAAAA;;;;0BAhD0B;qCACN;gCACS;uBACb;sBACE;0CACe;AAU1C,MAAMA,yBAAyB,CAACC;QAEXC,yBAAAA,kBACDA,mBACHA,mBAIbA;IAPF,MAAM,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,aAAa,EAAEC,gBAAgB,MAAM,EAAEJ,MAAM,EAAE,GAAGD;IAC/E,MAAMM,cAAaL,mBAAAA,OAAOM,QAAQ,cAAfN,wCAAAA,0BAAAA,iBAAiBO,MAAM,cAAvBP,8CAAAA,wBAAyBQ,IAAI;IAChD,MAAMC,aAAYT,oBAAAA,OAAOM,QAAQ,cAAfN,wCAAAA,kBAAiBU,cAAc,CAACC,SAAS;IAC3D,MAAMC,UAASZ,oBAAAA,OAAOM,QAAQ,cAAfN,wCAAAA,kBAAiBO,MAAM,CAACM,YAAY;IAEnD,MAAM,EAAEC,KAAKC,OAAO,EAAE,GAAGC,IAAAA,4BAAkB;IAC3C,MAAMC,UACJjB,EAAAA,oBAAAA,OAAOM,QAAQ,cAAfN,wCAAAA,kBAAiBO,MAAM,CAACM,YAAY,KAAIE,OAAO,CAACf,OAAOM,QAAQ,CAACC,MAAM,CAACM,YAAY,CAAC,CAACK,IAAI,CAACV,IAAI;IAEhG,qBACE,sBAACW,mDAAyB;QACxBC,eAAa,CAAC,oBAAoB,EAAEpB,OAAOM,QAAQ,CAACe,cAAc,CAAC,CAAC;;YAEnEpB,cAAc,yBACb,qBAACqB,iCAAY;gBACXlB,eAAeA;gBACfmB,MAAMN,WAAWZ,cAAc;gBAC/BO,QAAQA;+BAGV;;kCACE,qBAACY,eAAQ;wBAACC,WAAWtB;;kCACrB,qBAACuB,gBAAU;wBAACC,UAAU;wBAAIC,IAAG;wBAAMC,WAAU;kCAAO;;;;0BAKxD,qBAACC,qCAAqB;gBAAC5B,UAAUA;gBAAUO,WAAWA;;;;AAG5D"}