af265463bc5271856b47efdc472da656
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "DocumentViewerMetadata", {
    enumerable: true,
    get: function() {
        return DocumentViewerMetadata;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _cqsbyids = require("@rp/react/tanstack-api/cqs-by-ids");
const _compositecomponents = require("@rp/react/web/common/composite-components");
const _documentviewer = require("@rp/react/web/common/document-viewer");
const _icons = require("@rp/react/web/icons");
const _core = require("@rp/react/web/mui/core");
const _DocumentViewerPagestyles = require("./DocumentViewerPage.styles");
const DocumentViewerMetadata = (props)=>{
    var _rpjson_document_source, _rpjson_document, _rpjson_document1, _rpjson_document2, _rpjson_document3;
    const { namespace, language, fileExtension, documentScope = "news", rpjson } = props;
    const sourceName = (_rpjson_document = rpjson.document) === null || _rpjson_document === void 0 ? void 0 : (_rpjson_document_source = _rpjson_document.source) === null || _rpjson_document_source === void 0 ? void 0 : _rpjson_document_source.name;
    const timestamp = (_rpjson_document1 = rpjson.document) === null || _rpjson_document1 === void 0 ? void 0 : _rpjson_document1.timestamps_utc.analytics;
    const srcKey = (_rpjson_document2 = rpjson.document) === null || _rpjson_document2 === void 0 ? void 0 : _rpjson_document2.source.rp_source_id;
    const { ids: cqsDict } = (0, _cqsbyids.useCqsByIdsContext)();
    const cqsName = ((_rpjson_document3 = rpjson.document) === null || _rpjson_document3 === void 0 ? void 0 : _rpjson_document3.source.rp_source_id) && cqsDict[rpjson.document.source.rp_source_id].data.name;
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_DocumentViewerPagestyles.DocumentMetadataContainer, {
        "data-testid": `document-headerInfo-${rpjson.document.rp_document_id}`,
        children: [
            namespace === "public" ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.DocumentIcon, {
                documentScope: documentScope,
                text: cqsName || sourceName || "Unknown Source",
                srcKey: srcKey
            }) : /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.FileIcon, {
                        extension: fileExtension
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                        fontSize: 11,
                        ml: "4px",
                        component: "span",
                        children: "My Files"
                    })
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_documentviewer.DateAndTranslatedInfo, {
                language: language,
                timestamp: timestamp
            })
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2RvY3VtZW50LXZpZXdlci9zcmMvbGliL0RvY3VtZW50Vmlld2VyTWV0YWRhdGEudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENxc1Njb3BlIH0gZnJvbSBcIkBycC9jb21tb24vYXBpLXR5cGVzXCJcbmltcG9ydCB7IFJwSnNvbkRvY3VtZW50IH0gZnJvbSBcIkBycC9yZWFjdC9ycGpzb24vdHlwZXNcIlxuaW1wb3J0IHsgdXNlQ3FzQnlJZHNDb250ZXh0IH0gZnJvbSBcIkBycC9yZWFjdC90YW5zdGFjay1hcGkvY3FzLWJ5LWlkc1wiXG5pbXBvcnQgeyBEb2N1bWVudEljb24gfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9jb21tb24vY29tcG9zaXRlLWNvbXBvbmVudHNcIlxuaW1wb3J0IHsgRGF0ZUFuZFRyYW5zbGF0ZWRJbmZvIH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvY29tbW9uL2RvY3VtZW50LXZpZXdlclwiXG5pbXBvcnQgeyBGaWxlSWNvbiB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL2ljb25zXCJcbmltcG9ydCB7IFR5cG9ncmFwaHkgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9tdWkvY29yZVwiXG5pbXBvcnQgeyBEb2N1bWVudE1ldGFkYXRhQ29udGFpbmVyIH0gZnJvbSBcIi4vRG9jdW1lbnRWaWV3ZXJQYWdlLnN0eWxlc1wiXG5cbnR5cGUgRG9jdW1lbnRWaWV3ZXJNZXRhZGF0YVByb3BzID0ge1xuICBuYW1lc3BhY2U6IFwicHVibGljXCIgfCBcInByaXZhdGVcIlxuICBsYW5ndWFnZTogc3RyaW5nXG4gIGRvY3VtZW50U2NvcGU/OiBDcXNTY29wZVxuICBmaWxlRXh0ZW5zaW9uPzogc3RyaW5nXG4gIHJwanNvbjogUnBKc29uRG9jdW1lbnRcbn1cblxuY29uc3QgRG9jdW1lbnRWaWV3ZXJNZXRhZGF0YSA9IChwcm9wczogRG9jdW1lbnRWaWV3ZXJNZXRhZGF0YVByb3BzKSA9PiB7XG4gIGNvbnN0IHsgbmFtZXNwYWNlLCBsYW5ndWFnZSwgZmlsZUV4dGVuc2lvbiwgZG9jdW1lbnRTY29wZSA9IFwibmV3c1wiLCBycGpzb24gfSA9IHByb3BzXG4gIGNvbnN0IHNvdXJjZU5hbWUgPSBycGpzb24uZG9jdW1lbnQ/LnNvdXJjZT8ubmFtZVxuICBjb25zdCB0aW1lc3RhbXAgPSBycGpzb24uZG9jdW1lbnQ/LnRpbWVzdGFtcHNfdXRjLmFuYWx5dGljc1xuICBjb25zdCBzcmNLZXkgPSBycGpzb24uZG9jdW1lbnQ/LnNvdXJjZS5ycF9zb3VyY2VfaWRcblxuICBjb25zdCB7IGlkczogY3FzRGljdCB9ID0gdXNlQ3FzQnlJZHNDb250ZXh0KClcbiAgY29uc3QgY3FzTmFtZSA9XG4gICAgcnBqc29uLmRvY3VtZW50Py5zb3VyY2UucnBfc291cmNlX2lkICYmIGNxc0RpY3RbcnBqc29uLmRvY3VtZW50LnNvdXJjZS5ycF9zb3VyY2VfaWRdLmRhdGEubmFtZVxuXG4gIHJldHVybiAoXG4gICAgPERvY3VtZW50TWV0YWRhdGFDb250YWluZXJcbiAgICAgIGRhdGEtdGVzdGlkPXtgZG9jdW1lbnQtaGVhZGVySW5mby0ke3JwanNvbi5kb2N1bWVudC5ycF9kb2N1bWVudF9pZH1gfVxuICAgID5cbiAgICAgIHtuYW1lc3BhY2UgPT09IFwicHVibGljXCIgPyAoXG4gICAgICAgIDxEb2N1bWVudEljb25cbiAgICAgICAgICBkb2N1bWVudFNjb3BlPXtkb2N1bWVudFNjb3BlfVxuICAgICAgICAgIHRleHQ9e2Nxc05hbWUgfHwgc291cmNlTmFtZSB8fCBcIlVua25vd24gU291cmNlXCJ9XG4gICAgICAgICAgc3JjS2V5PXtzcmNLZXl9XG4gICAgICAgIC8+XG4gICAgICApIDogKFxuICAgICAgICA8PlxuICAgICAgICAgIDxGaWxlSWNvbiBleHRlbnNpb249e2ZpbGVFeHRlbnNpb259IC8+XG4gICAgICAgICAgPFR5cG9ncmFwaHkgZm9udFNpemU9ezExfSBtbD1cIjRweFwiIGNvbXBvbmVudD1cInNwYW5cIj5cbiAgICAgICAgICAgIE15IEZpbGVzXG4gICAgICAgICAgPC9UeXBvZ3JhcGh5PlxuICAgICAgICA8Lz5cbiAgICAgICl9XG4gICAgICA8RGF0ZUFuZFRyYW5zbGF0ZWRJbmZvIGxhbmd1YWdlPXtsYW5ndWFnZX0gdGltZXN0YW1wPXt0aW1lc3RhbXB9IC8+XG4gICAgPC9Eb2N1bWVudE1ldGFkYXRhQ29udGFpbmVyPlxuICApXG59XG5cbmV4cG9ydCB7IERvY3VtZW50Vmlld2VyTWV0YWRhdGEgfVxuZXhwb3J0IHR5cGUgeyBEb2N1bWVudFZpZXdlck1ldGFkYXRhUHJvcHMgfVxuIl0sIm5hbWVzIjpbIkRvY3VtZW50Vmlld2VyTWV0YWRhdGEiLCJwcm9wcyIsInJwanNvbiIsIm5hbWVzcGFjZSIsImxhbmd1YWdlIiwiZmlsZUV4dGVuc2lvbiIsImRvY3VtZW50U2NvcGUiLCJzb3VyY2VOYW1lIiwiZG9jdW1lbnQiLCJzb3VyY2UiLCJuYW1lIiwidGltZXN0YW1wIiwidGltZXN0YW1wc191dGMiLCJhbmFseXRpY3MiLCJzcmNLZXkiLCJycF9zb3VyY2VfaWQiLCJpZHMiLCJjcXNEaWN0IiwidXNlQ3FzQnlJZHNDb250ZXh0IiwiY3FzTmFtZSIsImRhdGEiLCJEb2N1bWVudE1ldGFkYXRhQ29udGFpbmVyIiwiZGF0YS10ZXN0aWQiLCJycF9kb2N1bWVudF9pZCIsIkRvY3VtZW50SWNvbiIsInRleHQiLCJGaWxlSWNvbiIsImV4dGVuc2lvbiIsIlR5cG9ncmFwaHkiLCJmb250U2l6ZSIsIm1sIiwiY29tcG9uZW50IiwiRGF0ZUFuZFRyYW5zbGF0ZWRJbmZvIl0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkFrRFNBOzs7ZUFBQUE7Ozs7MEJBaEQwQjtxQ0FDTjtnQ0FDUzt1QkFDYjtzQkFDRTswQ0FDZTtBQVUxQyxNQUFNQSx5QkFBeUIsQ0FBQ0M7UUFFWEMseUJBQUFBLGtCQUNEQSxtQkFDSEEsbUJBSWJBO0lBUEYsTUFBTSxFQUFFQyxTQUFTLEVBQUVDLFFBQVEsRUFBRUMsYUFBYSxFQUFFQyxnQkFBZ0IsTUFBTSxFQUFFSixNQUFNLEVBQUUsR0FBR0Q7SUFDL0UsTUFBTU0sY0FBYUwsbUJBQUFBLE9BQU9NLFFBQVEsY0FBZk4sd0NBQUFBLDBCQUFBQSxpQkFBaUJPLE1BQU0sY0FBdkJQLDhDQUFBQSx3QkFBeUJRLElBQUk7SUFDaEQsTUFBTUMsYUFBWVQsb0JBQUFBLE9BQU9NLFFBQVEsY0FBZk4sd0NBQUFBLGtCQUFpQlUsY0FBYyxDQUFDQyxTQUFTO0lBQzNELE1BQU1DLFVBQVNaLG9CQUFBQSxPQUFPTSxRQUFRLGNBQWZOLHdDQUFBQSxrQkFBaUJPLE1BQU0sQ0FBQ00sWUFBWTtJQUVuRCxNQUFNLEVBQUVDLEtBQUtDLE9BQU8sRUFBRSxHQUFHQyxJQUFBQSw0QkFBa0I7SUFDM0MsTUFBTUMsVUFDSmpCLEVBQUFBLG9CQUFBQSxPQUFPTSxRQUFRLGNBQWZOLHdDQUFBQSxrQkFBaUJPLE1BQU0sQ0FBQ00sWUFBWSxLQUFJRSxPQUFPLENBQUNmLE9BQU9NLFFBQVEsQ0FBQ0MsTUFBTSxDQUFDTSxZQUFZLENBQUMsQ0FBQ0ssSUFBSSxDQUFDVixJQUFJO0lBRWhHLHFCQUNFLHNCQUFDVyxtREFBeUI7UUFDeEJDLGVBQWEsQ0FBQyxvQkFBb0IsRUFBRXBCLE9BQU9NLFFBQVEsQ0FBQ2UsY0FBYyxDQUFDLENBQUM7O1lBRW5FcEIsY0FBYyx5QkFDYixxQkFBQ3FCLGlDQUFZO2dCQUNYbEIsZUFBZUE7Z0JBQ2ZtQixNQUFNTixXQUFXWixjQUFjO2dCQUMvQk8sUUFBUUE7K0JBR1Y7O2tDQUNFLHFCQUFDWSxlQUFRO3dCQUFDQyxXQUFXdEI7O2tDQUNyQixxQkFBQ3VCLGdCQUFVO3dCQUFDQyxVQUFVO3dCQUFJQyxJQUFHO3dCQUFNQyxXQUFVO2tDQUFPOzs7OzBCQUt4RCxxQkFBQ0MscUNBQXFCO2dCQUFDNUIsVUFBVUE7Z0JBQVVPLFdBQVdBOzs7O0FBRzVEIn0=