f46effc927efba15daaea44b6cbf4fe8
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "useChatActions", {
    enumerable: true,
    get: function() {
        return useChatActions;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _reactrouterdom = require("react-router-dom");
const _utils = require("@rp/common/utils");
const _hooks = require("@rp/react/common/hooks");
const _chat = require("@rp/react/tanstack-api/chat");
const _providers = require("@rp/react/web/common/providers");
const _icons = require("@rp/react/web/mui/icons");
const _router = require("@rp/react/web/router");
const getPath = (chat)=>chat.scopeWatchlistId !== undefined ? _router.WATCHLIST_ID_ROUTE.replace(":id", chat.scopeWatchlistId) + `?chatId=${chat.id}` : _router.CHAT_ID_ROUTE.replace(":id", chat.id);
const useChatActions = ()=>{
    const navigate = (0, _reactrouterdom.useNavigate)();
    const { copy } = (0, _hooks.useCopyShareLink)();
    const { editChatNameModal: { handleOpen: handleOpenEditText }, deleteChatModal: { handleOpen: handleOpenDeleteChat } } = (0, _providers.useModal)();
    const { enqueueSuccess } = (0, _providers.useSnackbar)();
    const onEdit = ({ name, id })=>{
        handleOpenEditText({
            value: name,
            description: "Choose a name for this chat",
            id: id,
            editHook: _chat.usePatchChat
        });
    };
    const actions = {
        remove: {
            id: "remove",
            label: "Delete",
            icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.Delete, {}),
            onClick: (chat)=>{
                return new Promise((resolve)=>{
                    handleOpenDeleteChat({
                        id: chat.id,
                        name: chat.name,
                        onSuccess: ()=>resolve()
                    });
                });
            }
        },
        rename: {
            id: "rename",
            label: "Rename",
            icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.Edit, {}),
            onClick: (chat)=>onEdit(chat)
        },
        open: {
            id: "open",
            label: "Open",
            icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.OpenInNew, {}),
            onClick: (chat)=>{
                navigate(getPath(chat));
            }
        },
        copy: {
            id: "copy",
            icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.Link, {}),
            label: "Copy Link",
            onClick: (chat)=>{
                const obj = (0, _utils.getShareObject)({
                    shareObjectId: chat.id,
                    shareObjectType: "chat",
                    path: (0, _reactrouterdom.generatePath)(_router.CHAT_ID_ROUTE, {
                        id: chat.id
                    }),
                    name: chat.name
                });
                copy(obj).then(()=>{
                    enqueueSuccess("Link copied successfully");
                });
            },
            allowedAction: (chat)=>chat.isPublic !== true
        }
    };
    return {
        actions
    };
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NoYXQvc3JjL2xpYi9DaGF0L3VzZUNoYXRBY3Rpb25zLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZW5lcmF0ZVBhdGgsIHVzZU5hdmlnYXRlIH0gZnJvbSBcInJlYWN0LXJvdXRlci1kb21cIlxuaW1wb3J0IHsgZ2V0U2hhcmVPYmplY3QgfSBmcm9tIFwiQHJwL2NvbW1vbi91dGlsc1wiXG5pbXBvcnQgeyB1c2VDb3B5U2hhcmVMaW5rIH0gZnJvbSBcIkBycC9yZWFjdC9jb21tb24vaG9va3NcIlxuaW1wb3J0IHsgQ2hhdExpc3RPYmplY3QsIHVzZVBhdGNoQ2hhdCB9IGZyb20gXCJAcnAvcmVhY3QvdGFuc3RhY2stYXBpL2NoYXRcIlxuaW1wb3J0IHsgdXNlTW9kYWwsIHVzZVNuYWNrYmFyIH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvY29tbW9uL3Byb3ZpZGVyc1wiXG5pbXBvcnQgeyBBY3Rpb25zIH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvY29tbW9uL3R5cGVzXCJcbmltcG9ydCB7IERlbGV0ZSwgRWRpdCwgTGluaywgT3BlbkluTmV3IH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvbXVpL2ljb25zXCJcbmltcG9ydCB7IENIQVRfSURfUk9VVEUsIFdBVENITElTVF9JRF9ST1VURSB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL3JvdXRlclwiXG5cbnR5cGUgQ2hhdExpc3RPYmplY3RXaXRoUHVibGljID0gQ2hhdExpc3RPYmplY3RcbnR5cGUgQ2hhdEFjdGlvbnMgPSBSZWNvcmQ8XG4gIFwicmVtb3ZlXCIgfCBcInJlbmFtZVwiIHwgXCJvcGVuXCIgfCBcImNvcHlcIixcbiAgQWN0aW9uczxDaGF0TGlzdE9iamVjdFdpdGhQdWJsaWM+W251bWJlcl1cbj5cblxuY29uc3QgZ2V0UGF0aCA9IChjaGF0OiBDaGF0TGlzdE9iamVjdCkgPT5cbiAgY2hhdC5zY29wZVdhdGNobGlzdElkICE9PSB1bmRlZmluZWRcbiAgICA/IFdBVENITElTVF9JRF9ST1VURS5yZXBsYWNlKFwiOmlkXCIsIGNoYXQuc2NvcGVXYXRjaGxpc3RJZCkgKyBgP2NoYXRJZD0ke2NoYXQuaWR9YFxuICAgIDogQ0hBVF9JRF9ST1VURS5yZXBsYWNlKFwiOmlkXCIsIGNoYXQuaWQpXG5cbmNvbnN0IHVzZUNoYXRBY3Rpb25zID0gKCkgPT4ge1xuICBjb25zdCBuYXZpZ2F0ZSA9IHVzZU5hdmlnYXRlKClcbiAgY29uc3QgeyBjb3B5IH0gPSB1c2VDb3B5U2hhcmVMaW5rKClcbiAgY29uc3Qge1xuICAgIGVkaXRDaGF0TmFtZU1vZGFsOiB7IGhhbmRsZU9wZW46IGhhbmRsZU9wZW5FZGl0VGV4dCB9LFxuICAgIGRlbGV0ZUNoYXRNb2RhbDogeyBoYW5kbGVPcGVuOiBoYW5kbGVPcGVuRGVsZXRlQ2hhdCB9LFxuICB9ID0gdXNlTW9kYWwoKVxuICBjb25zdCB7IGVucXVldWVTdWNjZXNzIH0gPSB1c2VTbmFja2JhcigpXG5cbiAgY29uc3Qgb25FZGl0ID0gKHsgbmFtZSwgaWQgfTogQ2hhdExpc3RPYmplY3QpID0+IHtcbiAgICBoYW5kbGVPcGVuRWRpdFRleHQoe1xuICAgICAgdmFsdWU6IG5hbWUsXG4gICAgICBkZXNjcmlwdGlvbjogXCJDaG9vc2UgYSBuYW1lIGZvciB0aGlzIGNoYXRcIixcbiAgICAgIGlkOiBpZCxcbiAgICAgIGVkaXRIb29rOiB1c2VQYXRjaENoYXQsXG4gICAgfSlcbiAgfVxuXG4gIGNvbnN0IGFjdGlvbnMgPSB7XG4gICAgcmVtb3ZlOiB7XG4gICAgICBpZDogXCJyZW1vdmVcIixcbiAgICAgIGxhYmVsOiBcIkRlbGV0ZVwiLFxuICAgICAgaWNvbjogPERlbGV0ZSAvPixcbiAgICAgIG9uQ2xpY2s6IGNoYXQgPT4ge1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2U8dm9pZD4ocmVzb2x2ZSA9PiB7XG4gICAgICAgICAgaGFuZGxlT3BlbkRlbGV0ZUNoYXQoe1xuICAgICAgICAgICAgaWQ6IGNoYXQuaWQsXG4gICAgICAgICAgICBuYW1lOiBjaGF0Lm5hbWUsXG4gICAgICAgICAgICBvblN1Y2Nlc3M6ICgpID0+IHJlc29sdmUoKSxcbiAgICAgICAgICB9KVxuICAgICAgICB9KVxuICAgICAgfSxcbiAgICB9LFxuICAgIHJlbmFtZToge1xuICAgICAgaWQ6IFwicmVuYW1lXCIsXG4gICAgICBsYWJlbDogXCJSZW5hbWVcIixcbiAgICAgIGljb246IDxFZGl0IC8+LFxuICAgICAgb25DbGljazogY2hhdCA9PiBvbkVkaXQoY2hhdCksXG4gICAgfSxcbiAgICBvcGVuOiB7XG4gICAgICBpZDogXCJvcGVuXCIsXG4gICAgICBsYWJlbDogXCJPcGVuXCIsXG4gICAgICBpY29uOiA8T3BlbkluTmV3IC8+LFxuICAgICAgb25DbGljazogY2hhdCA9PiB7XG4gICAgICAgIG5hdmlnYXRlKGdldFBhdGgoY2hhdCkpXG4gICAgICB9LFxuICAgIH0sXG4gICAgY29weToge1xuICAgICAgaWQ6IFwiY29weVwiLFxuICAgICAgaWNvbjogPExpbmsgLz4sXG4gICAgICBsYWJlbDogXCJDb3B5IExpbmtcIixcbiAgICAgIG9uQ2xpY2s6IGNoYXQgPT4ge1xuICAgICAgICBjb25zdCBvYmogPSBnZXRTaGFyZU9iamVjdCh7XG4gICAgICAgICAgc2hhcmVPYmplY3RJZDogY2hhdC5pZCxcbiAgICAgICAgICBzaGFyZU9iamVjdFR5cGU6IFwiY2hhdFwiLFxuICAgICAgICAgIHBhdGg6IGdlbmVyYXRlUGF0aChDSEFUX0lEX1JPVVRFLCB7IGlkOiBjaGF0LmlkIH0pLFxuICAgICAgICAgIG5hbWU6IGNoYXQubmFtZSxcbiAgICAgICAgfSlcbiAgICAgICAgY29weShvYmopLnRoZW4oKCkgPT4ge1xuICAgICAgICAgIGVucXVldWVTdWNjZXNzKFwiTGluayBjb3BpZWQgc3VjY2Vzc2Z1bGx5XCIpXG4gICAgICAgIH0pXG4gICAgICB9LFxuICAgICAgYWxsb3dlZEFjdGlvbjogY2hhdCA9PiBjaGF0LmlzUHVibGljICE9PSB0cnVlLCAvLyBUaGlzIGlzIHJldmVyc2VkIGZvciBzb21lIHJlYXNvblxuICAgIH0sXG4gIH0gc2F0aXNmaWVzIENoYXRBY3Rpb25zXG5cbiAgcmV0dXJuIHsgYWN0aW9ucyB9XG59XG5cbmV4cG9ydCB7IHVzZUNoYXRBY3Rpb25zIH1cbiJdLCJuYW1lcyI6WyJ1c2VDaGF0QWN0aW9ucyIsImdldFBhdGgiLCJjaGF0Iiwic2NvcGVXYXRjaGxpc3RJZCIsInVuZGVmaW5lZCIsIldBVENITElTVF9JRF9ST1VURSIsInJlcGxhY2UiLCJpZCIsIkNIQVRfSURfUk9VVEUiLCJuYXZpZ2F0ZSIsInVzZU5hdmlnYXRlIiwiY29weSIsInVzZUNvcHlTaGFyZUxpbmsiLCJlZGl0Q2hhdE5hbWVNb2RhbCIsImhhbmRsZU9wZW4iLCJoYW5kbGVPcGVuRWRpdFRleHQiLCJkZWxldGVDaGF0TW9kYWwiLCJoYW5kbGVPcGVuRGVsZXRlQ2hhdCIsInVzZU1vZGFsIiwiZW5xdWV1ZVN1Y2Nlc3MiLCJ1c2VTbmFja2JhciIsIm9uRWRpdCIsIm5hbWUiLCJ2YWx1ZSIsImRlc2NyaXB0aW9uIiwiZWRpdEhvb2siLCJ1c2VQYXRjaENoYXQiLCJhY3Rpb25zIiwicmVtb3ZlIiwibGFiZWwiLCJpY29uIiwiRGVsZXRlIiwib25DbGljayIsIlByb21pc2UiLCJyZXNvbHZlIiwib25TdWNjZXNzIiwicmVuYW1lIiwiRWRpdCIsIm9wZW4iLCJPcGVuSW5OZXciLCJMaW5rIiwib2JqIiwiZ2V0U2hhcmVPYmplY3QiLCJzaGFyZU9iamVjdElkIiwic2hhcmVPYmplY3RUeXBlIiwicGF0aCIsImdlbmVyYXRlUGF0aCIsInRoZW4iLCJhbGxvd2VkQWN0aW9uIiwiaXNQdWJsaWMiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQXlGU0E7OztlQUFBQTs7OztnQ0F6RmlDO3VCQUNYO3VCQUNFO3NCQUNZOzJCQUNQO3VCQUVRO3dCQUNJO0FBUWxELE1BQU1DLFVBQVUsQ0FBQ0MsT0FDZkEsS0FBS0MsZ0JBQWdCLEtBQUtDLFlBQ3RCQywwQkFBa0IsQ0FBQ0MsT0FBTyxDQUFDLE9BQU9KLEtBQUtDLGdCQUFnQixJQUFJLENBQUMsUUFBUSxFQUFFRCxLQUFLSyxFQUFFLENBQUMsQ0FBQyxHQUMvRUMscUJBQWEsQ0FBQ0YsT0FBTyxDQUFDLE9BQU9KLEtBQUtLLEVBQUU7QUFFMUMsTUFBTVAsaUJBQWlCO0lBQ3JCLE1BQU1TLFdBQVdDLElBQUFBLDJCQUFXO0lBQzVCLE1BQU0sRUFBRUMsSUFBSSxFQUFFLEdBQUdDLElBQUFBLHVCQUFnQjtJQUNqQyxNQUFNLEVBQ0pDLG1CQUFtQixFQUFFQyxZQUFZQyxrQkFBa0IsRUFBRSxFQUNyREMsaUJBQWlCLEVBQUVGLFlBQVlHLG9CQUFvQixFQUFFLEVBQ3RELEdBQUdDLElBQUFBLG1CQUFRO0lBQ1osTUFBTSxFQUFFQyxjQUFjLEVBQUUsR0FBR0MsSUFBQUEsc0JBQVc7SUFFdEMsTUFBTUMsU0FBUyxDQUFDLEVBQUVDLElBQUksRUFBRWYsRUFBRSxFQUFrQjtRQUMxQ1EsbUJBQW1CO1lBQ2pCUSxPQUFPRDtZQUNQRSxhQUFhO1lBQ2JqQixJQUFJQTtZQUNKa0IsVUFBVUMsa0JBQVk7UUFDeEI7SUFDRjtJQUVBLE1BQU1DLFVBQVU7UUFDZEMsUUFBUTtZQUNOckIsSUFBSTtZQUNKc0IsT0FBTztZQUNQQyxvQkFBTSxxQkFBQ0MsYUFBTTtZQUNiQyxTQUFTOUIsQ0FBQUE7Z0JBQ1AsT0FBTyxJQUFJK0IsUUFBY0MsQ0FBQUE7b0JBQ3ZCakIscUJBQXFCO3dCQUNuQlYsSUFBSUwsS0FBS0ssRUFBRTt3QkFDWGUsTUFBTXBCLEtBQUtvQixJQUFJO3dCQUNmYSxXQUFXLElBQU1EO29CQUNuQjtnQkFDRjtZQUNGO1FBQ0Y7UUFDQUUsUUFBUTtZQUNON0IsSUFBSTtZQUNKc0IsT0FBTztZQUNQQyxvQkFBTSxxQkFBQ08sV0FBSTtZQUNYTCxTQUFTOUIsQ0FBQUEsT0FBUW1CLE9BQU9uQjtRQUMxQjtRQUNBb0MsTUFBTTtZQUNKL0IsSUFBSTtZQUNKc0IsT0FBTztZQUNQQyxvQkFBTSxxQkFBQ1MsZ0JBQVM7WUFDaEJQLFNBQVM5QixDQUFBQTtnQkFDUE8sU0FBU1IsUUFBUUM7WUFDbkI7UUFDRjtRQUNBUyxNQUFNO1lBQ0pKLElBQUk7WUFDSnVCLG9CQUFNLHFCQUFDVSxXQUFJO1lBQ1hYLE9BQU87WUFDUEcsU0FBUzlCLENBQUFBO2dCQUNQLE1BQU11QyxNQUFNQyxJQUFBQSxxQkFBYyxFQUFDO29CQUN6QkMsZUFBZXpDLEtBQUtLLEVBQUU7b0JBQ3RCcUMsaUJBQWlCO29CQUNqQkMsTUFBTUMsSUFBQUEsNEJBQVksRUFBQ3RDLHFCQUFhLEVBQUU7d0JBQUVELElBQUlMLEtBQUtLLEVBQUU7b0JBQUM7b0JBQ2hEZSxNQUFNcEIsS0FBS29CLElBQUk7Z0JBQ2pCO2dCQUNBWCxLQUFLOEIsS0FBS00sSUFBSSxDQUFDO29CQUNiNUIsZUFBZTtnQkFDakI7WUFDRjtZQUNBNkIsZUFBZTlDLENBQUFBLE9BQVFBLEtBQUsrQyxRQUFRLEtBQUs7UUFDM0M7SUFDRjtJQUVBLE9BQU87UUFBRXRCO0lBQVE7QUFDbkIifQ==