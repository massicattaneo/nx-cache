{"version":3,"sources":["../src/TouchBackendImpl.ts"],"sourcesContent":["import { invariant } from '@react-dnd/invariant'\nimport type {\n\tBackend,\n\tDragDropActions,\n\tDragDropManager,\n\tDragDropMonitor,\n\tIdentifier,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport type {\n\tEventName,\n\tTouchBackendContext,\n\tTouchBackendOptions,\n} from './interfaces.js'\nimport { ListenerType } from './interfaces.js'\nimport { OptionsReader } from './OptionsReader.js'\nimport { distance, inAngleRanges } from './utils/math.js'\nimport { getEventClientOffset, getNodeClientOffset } from './utils/offsets.js'\nimport {\n\teventShouldEndDrag,\n\teventShouldStartDrag,\n\tisTouchEvent,\n} from './utils/predicates.js'\nimport { supportsPassive } from './utils/supportsPassive.js'\n\nconst eventNames: Record<ListenerType, EventName> = {\n\t[ListenerType.mouse]: {\n\t\tstart: 'mousedown',\n\t\tmove: 'mousemove',\n\t\tend: 'mouseup',\n\t\tcontextmenu: 'contextmenu',\n\t},\n\t[ListenerType.touch]: {\n\t\tstart: 'touchstart',\n\t\tmove: 'touchmove',\n\t\tend: 'touchend',\n\t},\n\t[ListenerType.keyboard]: {\n\t\tkeydown: 'keydown',\n\t},\n}\n\nexport class TouchBackendImpl implements Backend {\n\tprivate options: OptionsReader\n\n\t// React-DnD Dependencies\n\tprivate actions: DragDropActions\n\tprivate monitor: DragDropMonitor\n\n\t// Internal State\n\tprivate static isSetUp: boolean\n\tpublic sourceNodes: Map<Identifier, HTMLElement>\n\tpublic sourcePreviewNodes: Map<string, HTMLElement>\n\tpublic sourcePreviewNodeOptions: Map<string, any>\n\tpublic targetNodes: Map<string, HTMLElement>\n\tprivate _mouseClientOffset: Partial<XYCoord>\n\tprivate _isScrolling: boolean\n\tprivate listenerTypes: ListenerType[]\n\tprivate moveStartSourceIds: string[] | undefined\n\tprivate waitingForDelay: boolean | undefined\n\tprivate timeout: ReturnType<typeof setTimeout> | undefined\n\tprivate dragOverTargetIds: string[] | undefined\n\tprivate draggedSourceNode: HTMLElement | undefined\n\tprivate draggedSourceNodeRemovalObserver: MutationObserver | undefined\n\n\t// Patch for iOS 13, discussion over #1585\n\tprivate lastTargetTouchFallback: Touch | undefined\n\n\tpublic constructor(\n\t\tmanager: DragDropManager,\n\t\tcontext: TouchBackendContext,\n\t\toptions: Partial<TouchBackendOptions>,\n\t) {\n\t\tthis.options = new OptionsReader(options, context)\n\t\tthis.actions = manager.getActions()\n\t\tthis.monitor = manager.getMonitor()\n\n\t\tthis.sourceNodes = new Map()\n\t\tthis.sourcePreviewNodes = new Map()\n\t\tthis.sourcePreviewNodeOptions = new Map()\n\t\tthis.targetNodes = new Map()\n\t\tthis.listenerTypes = []\n\t\tthis._mouseClientOffset = {}\n\t\tthis._isScrolling = false\n\n\t\tif (this.options.enableMouseEvents) {\n\t\t\tthis.listenerTypes.push(ListenerType.mouse)\n\t\t}\n\n\t\tif (this.options.enableTouchEvents) {\n\t\t\tthis.listenerTypes.push(ListenerType.touch)\n\t\t}\n\n\t\tif (this.options.enableKeyboardEvents) {\n\t\t\tthis.listenerTypes.push(ListenerType.keyboard)\n\t\t}\n\t}\n\n\t/**\n\t * Generate profiling statistics for the HTML5Backend.\n\t */\n\tpublic profile(): Record<string, number> {\n\t\treturn {\n\t\t\tsourceNodes: this.sourceNodes.size,\n\t\t\tsourcePreviewNodes: this.sourcePreviewNodes.size,\n\t\t\tsourcePreviewNodeOptions: this.sourcePreviewNodeOptions.size,\n\t\t\ttargetNodes: this.targetNodes.size,\n\t\t\tdragOverTargetIds: this.dragOverTargetIds?.length || 0,\n\t\t}\n\t}\n\n\t// public for test\n\tpublic get document(): Document | undefined {\n\t\treturn this.options.document\n\t}\n\n\tpublic setup(): void {\n\t\tconst root = this.options.rootElement\n\t\tif (!root) {\n\t\t\treturn\n\t\t}\n\n\t\tinvariant(\n\t\t\t!TouchBackendImpl.isSetUp,\n\t\t\t'Cannot have two Touch backends at the same time.',\n\t\t)\n\t\tTouchBackendImpl.isSetUp = true\n\n\t\tthis.addEventListener(root, 'start', this.getTopMoveStartHandler() as any)\n\t\tthis.addEventListener(\n\t\t\troot,\n\t\t\t'start',\n\t\t\tthis.handleTopMoveStartCapture as any,\n\t\t\ttrue,\n\t\t)\n\t\tthis.addEventListener(root, 'move', this.handleTopMove as any)\n\t\tthis.addEventListener(root, 'move', this.handleTopMoveCapture, true)\n\t\tthis.addEventListener(\n\t\t\troot,\n\t\t\t'end',\n\t\t\tthis.handleTopMoveEndCapture as any,\n\t\t\ttrue,\n\t\t)\n\n\t\tif (this.options.enableMouseEvents && !this.options.ignoreContextMenu) {\n\t\t\tthis.addEventListener(\n\t\t\t\troot,\n\t\t\t\t'contextmenu',\n\t\t\t\tthis.handleTopMoveEndCapture as any,\n\t\t\t)\n\t\t}\n\n\t\tif (this.options.enableKeyboardEvents) {\n\t\t\tthis.addEventListener(\n\t\t\t\troot,\n\t\t\t\t'keydown',\n\t\t\t\tthis.handleCancelOnEscape as any,\n\t\t\t\ttrue,\n\t\t\t)\n\t\t}\n\t}\n\n\tpublic teardown(): void {\n\t\tconst root = this.options.rootElement\n\t\tif (!root) {\n\t\t\treturn\n\t\t}\n\n\t\tTouchBackendImpl.isSetUp = false\n\t\tthis._mouseClientOffset = {}\n\n\t\tthis.removeEventListener(\n\t\t\troot,\n\t\t\t'start',\n\t\t\tthis.handleTopMoveStartCapture as any,\n\t\t\ttrue,\n\t\t)\n\t\tthis.removeEventListener(root, 'start', this.handleTopMoveStart as any)\n\t\tthis.removeEventListener(root, 'move', this.handleTopMoveCapture, true)\n\t\tthis.removeEventListener(root, 'move', this.handleTopMove as any)\n\t\tthis.removeEventListener(\n\t\t\troot,\n\t\t\t'end',\n\t\t\tthis.handleTopMoveEndCapture as any,\n\t\t\ttrue,\n\t\t)\n\n\t\tif (this.options.enableMouseEvents && !this.options.ignoreContextMenu) {\n\t\t\tthis.removeEventListener(\n\t\t\t\troot,\n\t\t\t\t'contextmenu',\n\t\t\t\tthis.handleTopMoveEndCapture as any,\n\t\t\t)\n\t\t}\n\n\t\tif (this.options.enableKeyboardEvents) {\n\t\t\tthis.removeEventListener(\n\t\t\t\troot,\n\t\t\t\t'keydown',\n\t\t\t\tthis.handleCancelOnEscape as any,\n\t\t\t\ttrue,\n\t\t\t)\n\t\t}\n\n\t\tthis.uninstallSourceNodeRemovalObserver()\n\t}\n\n\tprivate addEventListener<K extends keyof EventName>(\n\t\tsubject: Node,\n\t\tevent: K,\n\t\thandler: (e: any) => void,\n\t\tcapture = false,\n\t) {\n\t\tconst options = supportsPassive ? { capture, passive: false } : capture\n\n\t\tthis.listenerTypes.forEach(function (listenerType) {\n\t\t\tconst evt = eventNames[listenerType][event]\n\n\t\t\tif (evt) {\n\t\t\t\tsubject.addEventListener(evt as any, handler as any, options)\n\t\t\t}\n\t\t})\n\t}\n\n\tprivate removeEventListener<K extends keyof EventName>(\n\t\tsubject: Node,\n\t\tevent: K,\n\t\thandler: (e: any) => void,\n\t\tcapture = false,\n\t) {\n\t\tconst options = supportsPassive ? { capture, passive: false } : capture\n\n\t\tthis.listenerTypes.forEach(function (listenerType) {\n\t\t\tconst evt = eventNames[listenerType][event]\n\n\t\t\tif (evt) {\n\t\t\t\tsubject.removeEventListener(evt as any, handler as any, options)\n\t\t\t}\n\t\t})\n\t}\n\n\tpublic connectDragSource(sourceId: string, node: HTMLElement): Unsubscribe {\n\t\tconst handleMoveStart = this.handleMoveStart.bind(this, sourceId)\n\t\tthis.sourceNodes.set(sourceId, node)\n\n\t\tthis.addEventListener(node, 'start', handleMoveStart)\n\n\t\treturn (): void => {\n\t\t\tthis.sourceNodes.delete(sourceId)\n\t\t\tthis.removeEventListener(node, 'start', handleMoveStart)\n\t\t}\n\t}\n\n\tpublic connectDragPreview(\n\t\tsourceId: string,\n\t\tnode: HTMLElement,\n\t\toptions: unknown,\n\t): Unsubscribe {\n\t\tthis.sourcePreviewNodeOptions.set(sourceId, options)\n\t\tthis.sourcePreviewNodes.set(sourceId, node)\n\n\t\treturn (): void => {\n\t\t\tthis.sourcePreviewNodes.delete(sourceId)\n\t\t\tthis.sourcePreviewNodeOptions.delete(sourceId)\n\t\t}\n\t}\n\n\tpublic connectDropTarget(targetId: string, node: HTMLElement): Unsubscribe {\n\t\tconst root = this.options.rootElement\n\t\tif (!this.document || !root) {\n\t\t\treturn (): void => {\n\t\t\t\t/* noop */\n\t\t\t}\n\t\t}\n\n\t\tconst handleMove = (e: MouseEvent | TouchEvent) => {\n\t\t\tif (!this.document || !root || !this.monitor.isDragging()) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tlet coords\n\n\t\t\t/**\n\t\t\t * Grab the coordinates for the current mouse/touch position\n\t\t\t */\n\t\t\tswitch (e.type) {\n\t\t\t\tcase eventNames.mouse.move:\n\t\t\t\t\tcoords = {\n\t\t\t\t\t\tx: (e as MouseEvent).clientX,\n\t\t\t\t\t\ty: (e as MouseEvent).clientY,\n\t\t\t\t\t}\n\t\t\t\t\tbreak\n\n\t\t\t\tcase eventNames.touch.move:\n\t\t\t\t\tcoords = {\n\t\t\t\t\t\tx: (e as TouchEvent).touches[0]?.clientX || 0,\n\t\t\t\t\t\ty: (e as TouchEvent).touches[0]?.clientY || 0,\n\t\t\t\t\t}\n\t\t\t\t\tbreak\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Use the coordinates to grab the element the drag ended on.\n\t\t\t * If the element is the same as the target node (or any of it's children) then we have hit a drop target and can handle the move.\n\t\t\t */\n\t\t\tconst droppedOn =\n\t\t\t\tcoords != null\n\t\t\t\t\t? this.document.elementFromPoint(coords.x, coords.y)\n\t\t\t\t\t: undefined\n\t\t\tconst childMatch = droppedOn && node.contains(droppedOn)\n\n\t\t\tif (droppedOn === node || childMatch) {\n\t\t\t\treturn this.handleMove(e, targetId)\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Attaching the event listener to the body so that touchmove will work while dragging over multiple target elements.\n\t\t */\n\t\tthis.addEventListener(this.document.body, 'move', handleMove as any)\n\t\tthis.targetNodes.set(targetId, node)\n\n\t\treturn (): void => {\n\t\t\tif (this.document) {\n\t\t\t\tthis.targetNodes.delete(targetId)\n\t\t\t\tthis.removeEventListener(this.document.body, 'move', handleMove as any)\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getSourceClientOffset = (sourceId: string): XYCoord | undefined => {\n\t\tconst element = this.sourceNodes.get(sourceId)\n\t\treturn element && getNodeClientOffset(element)\n\t}\n\n\tpublic handleTopMoveStartCapture = (e: Event): void => {\n\t\tif (!eventShouldStartDrag(e as MouseEvent)) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.moveStartSourceIds = []\n\t}\n\n\tpublic handleMoveStart = (sourceId: string): void => {\n\t\t// Just because we received an event doesn't necessarily mean we need to collect drag sources.\n\t\t// We only collect start collecting drag sources on touch and left mouse events.\n\t\tif (Array.isArray(this.moveStartSourceIds)) {\n\t\t\tthis.moveStartSourceIds.unshift(sourceId)\n\t\t}\n\t}\n\n\tprivate getTopMoveStartHandler() {\n\t\tif (!this.options.delayTouchStart && !this.options.delayMouseStart) {\n\t\t\treturn this.handleTopMoveStart\n\t\t}\n\n\t\treturn this.handleTopMoveStartDelay\n\t}\n\n\tpublic handleTopMoveStart = (e: MouseEvent | TouchEvent): void => {\n\t\tif (!eventShouldStartDrag(e as MouseEvent)) {\n\t\t\treturn\n\t\t}\n\n\t\t// Don't prematurely preventDefault() here since it might:\n\t\t// 1. Mess up scrolling\n\t\t// 2. Mess up long tap (which brings up context menu)\n\t\t// 3. If there's an anchor link as a child, tap won't be triggered on link\n\n\t\tconst clientOffset = getEventClientOffset(e)\n\t\tif (clientOffset) {\n\t\t\tif (isTouchEvent(e)) {\n\t\t\t\tthis.lastTargetTouchFallback = e.targetTouches[0]\n\t\t\t}\n\t\t\tthis._mouseClientOffset = clientOffset\n\t\t}\n\t\tthis.waitingForDelay = false\n\t}\n\n\tpublic handleTopMoveStartDelay = (e: Event): void => {\n\t\tif (!eventShouldStartDrag(e as MouseEvent)) {\n\t\t\treturn\n\t\t}\n\n\t\tconst delay =\n\t\t\te.type === eventNames.touch.start\n\t\t\t\t? this.options.delayTouchStart\n\t\t\t\t: this.options.delayMouseStart\n\t\tthis.timeout = setTimeout(\n\t\t\tthis.handleTopMoveStart.bind(this, e as any),\n\t\t\tdelay,\n\t\t) as any as ReturnType<typeof setTimeout>\n\t\tthis.waitingForDelay = true\n\t}\n\n\tpublic handleTopMoveCapture = (): void => {\n\t\tthis.dragOverTargetIds = []\n\t}\n\n\tpublic handleMove = (\n\t\t_evt: MouseEvent | TouchEvent,\n\t\ttargetId: string,\n\t): void => {\n\t\tif (this.dragOverTargetIds) {\n\t\t\tthis.dragOverTargetIds.unshift(targetId)\n\t\t}\n\t}\n\n\tpublic handleTopMove = (e: TouchEvent | MouseEvent): void => {\n\t\tif (this.timeout) {\n\t\t\tclearTimeout(this.timeout)\n\t\t}\n\t\tif (!this.document || this.waitingForDelay) {\n\t\t\treturn\n\t\t}\n\t\tconst { moveStartSourceIds, dragOverTargetIds } = this\n\t\tconst enableHoverOutsideTarget = this.options.enableHoverOutsideTarget\n\n\t\tconst clientOffset = getEventClientOffset(e, this.lastTargetTouchFallback)\n\n\t\tif (!clientOffset) {\n\t\t\treturn\n\t\t}\n\n\t\t// If the touch move started as a scroll, or is is between the scroll angles\n\t\tif (\n\t\t\tthis._isScrolling ||\n\t\t\t(!this.monitor.isDragging() &&\n\t\t\t\tinAngleRanges(\n\t\t\t\t\tthis._mouseClientOffset.x || 0,\n\t\t\t\t\tthis._mouseClientOffset.y || 0,\n\t\t\t\t\tclientOffset.x,\n\t\t\t\t\tclientOffset.y,\n\t\t\t\t\tthis.options.scrollAngleRanges,\n\t\t\t\t))\n\t\t) {\n\t\t\tthis._isScrolling = true\n\t\t\treturn\n\t\t}\n\n\t\t// If we're not dragging and we've moved a little, that counts as a drag start\n\t\tif (\n\t\t\t!this.monitor.isDragging() &&\n\t\t\t// eslint-disable-next-line no-prototype-builtins\n\t\t\tthis._mouseClientOffset.hasOwnProperty('x') &&\n\t\t\tmoveStartSourceIds &&\n\t\t\tdistance(\n\t\t\t\tthis._mouseClientOffset.x || 0,\n\t\t\t\tthis._mouseClientOffset.y || 0,\n\t\t\t\tclientOffset.x,\n\t\t\t\tclientOffset.y,\n\t\t\t) > (this.options.touchSlop ? this.options.touchSlop : 0)\n\t\t) {\n\t\t\tthis.moveStartSourceIds = undefined\n\n\t\t\tthis.actions.beginDrag(moveStartSourceIds, {\n\t\t\t\tclientOffset: this._mouseClientOffset,\n\t\t\t\tgetSourceClientOffset: this.getSourceClientOffset,\n\t\t\t\tpublishSource: false,\n\t\t\t})\n\t\t}\n\n\t\tif (!this.monitor.isDragging()) {\n\t\t\treturn\n\t\t}\n\n\t\tconst sourceNode = this.sourceNodes.get(\n\t\t\tthis.monitor.getSourceId() as string,\n\t\t)\n\t\tthis.installSourceNodeRemovalObserver(sourceNode)\n\t\tthis.actions.publishDragSource()\n\n\t\tif (e.cancelable) e.preventDefault()\n\n\t\t// Get the node elements of the hovered DropTargets\n\t\tconst dragOverTargetNodes: HTMLElement[] = (dragOverTargetIds || [])\n\t\t\t.map((key) => this.targetNodes.get(key))\n\t\t\t.filter((e) => !!e) as HTMLElement[]\n\n\t\t// Get the a ordered list of nodes that are touched by\n\t\tconst elementsAtPoint = this.options.getDropTargetElementsAtPoint\n\t\t\t? this.options.getDropTargetElementsAtPoint(\n\t\t\t\t\tclientOffset.x,\n\t\t\t\t\tclientOffset.y,\n\t\t\t\t\tdragOverTargetNodes,\n\t\t\t  )\n\t\t\t: this.document.elementsFromPoint(clientOffset.x, clientOffset.y)\n\t\t// Extend list with parents that are not receiving elementsFromPoint events (size 0 elements and svg groups)\n\t\tconst elementsAtPointExtended: Element[] = []\n\t\tfor (const nodeId in elementsAtPoint) {\n\t\t\t// eslint-disable-next-line no-prototype-builtins\n\t\t\tif (!elementsAtPoint.hasOwnProperty(nodeId)) {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tlet currentNode: Element | undefined | null = elementsAtPoint[nodeId]\n\t\t\tif (currentNode != null) {\n\t\t\t\telementsAtPointExtended.push(currentNode)\n\t\t\t}\n\t\t\twhile (currentNode) {\n\t\t\t\tcurrentNode = currentNode.parentElement\n\t\t\t\tif (\n\t\t\t\t\tcurrentNode &&\n\t\t\t\t\telementsAtPointExtended.indexOf(currentNode) === -1\n\t\t\t\t) {\n\t\t\t\t\telementsAtPointExtended.push(currentNode)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconst orderedDragOverTargetIds: string[] = elementsAtPointExtended\n\t\t\t// Filter off nodes that arent a hovered DropTargets nodes\n\t\t\t.filter((node) => dragOverTargetNodes.indexOf(node as HTMLElement) > -1)\n\t\t\t// Map back the nodes elements to targetIds\n\t\t\t.map((node) => this._getDropTargetId(node))\n\t\t\t// Filter off possible null rows\n\t\t\t.filter((node) => !!node)\n\t\t\t.filter((id, index, ids) => ids.indexOf(id) === index) as string[]\n\n\t\t// Invoke hover for drop targets when source node is still over and pointer is outside\n\t\tif (enableHoverOutsideTarget) {\n\t\t\tfor (const targetId in this.targetNodes) {\n\t\t\t\tconst targetNode = this.targetNodes.get(targetId)\n\t\t\t\tif (\n\t\t\t\t\tsourceNode &&\n\t\t\t\t\ttargetNode &&\n\t\t\t\t\ttargetNode.contains(sourceNode) &&\n\t\t\t\t\torderedDragOverTargetIds.indexOf(targetId) === -1\n\t\t\t\t) {\n\t\t\t\t\torderedDragOverTargetIds.unshift(targetId)\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Reverse order because dnd-core reverse it before calling the DropTarget drop methods\n\t\torderedDragOverTargetIds.reverse()\n\n\t\tthis.actions.hover(orderedDragOverTargetIds, {\n\t\t\tclientOffset: clientOffset,\n\t\t})\n\t}\n\n\t/**\n\t *\n\t * visible for testing\n\t */\n\tpublic _getDropTargetId = (node: Element): Identifier | undefined => {\n\t\tconst keys = this.targetNodes.keys()\n\t\tlet next = keys.next()\n\t\twhile (next.done === false) {\n\t\t\tconst targetId = next.value\n\t\t\tif (node === this.targetNodes.get(targetId)) {\n\t\t\t\treturn targetId\n\t\t\t} else {\n\t\t\t\tnext = keys.next()\n\t\t\t}\n\t\t}\n\t\treturn undefined\n\t}\n\n\tpublic handleTopMoveEndCapture = (e: Event): void => {\n\t\tthis._isScrolling = false\n\t\tthis.lastTargetTouchFallback = undefined\n\n\t\tif (!eventShouldEndDrag(e as MouseEvent)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (!this.monitor.isDragging() || this.monitor.didDrop()) {\n\t\t\tthis.moveStartSourceIds = undefined\n\t\t\treturn\n\t\t}\n\n\t\tif (e.cancelable) e.preventDefault()\n\n\t\tthis._mouseClientOffset = {}\n\n\t\tthis.uninstallSourceNodeRemovalObserver()\n\t\tthis.actions.drop()\n\t\tthis.actions.endDrag()\n\t}\n\n\tpublic handleCancelOnEscape = (e: KeyboardEvent): void => {\n\t\tif (e.key === 'Escape' && this.monitor.isDragging()) {\n\t\t\tthis._mouseClientOffset = {}\n\n\t\t\tthis.uninstallSourceNodeRemovalObserver()\n\t\t\tthis.actions.endDrag()\n\t\t}\n\t}\n\n\tprivate installSourceNodeRemovalObserver(node: HTMLElement | undefined) {\n\t\tthis.uninstallSourceNodeRemovalObserver()\n\n\t\tthis.draggedSourceNode = node\n\t\tthis.draggedSourceNodeRemovalObserver = new MutationObserver(() => {\n\t\t\tif (node && !node.parentElement) {\n\t\t\t\tthis.resurrectSourceNode()\n\t\t\t\tthis.uninstallSourceNodeRemovalObserver()\n\t\t\t}\n\t\t})\n\n\t\tif (!node || !node.parentElement) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.draggedSourceNodeRemovalObserver.observe(node.parentElement, {\n\t\t\tchildList: true,\n\t\t})\n\t}\n\n\tprivate resurrectSourceNode() {\n\t\tif (this.document && this.draggedSourceNode) {\n\t\t\tthis.draggedSourceNode.style.display = 'none'\n\t\t\tthis.draggedSourceNode.removeAttribute('data-reactid')\n\t\t\tthis.document.body.appendChild(this.draggedSourceNode)\n\t\t}\n\t}\n\n\tprivate uninstallSourceNodeRemovalObserver() {\n\t\tif (this.draggedSourceNodeRemovalObserver) {\n\t\t\tthis.draggedSourceNodeRemovalObserver.disconnect()\n\t\t}\n\n\t\tthis.draggedSourceNodeRemovalObserver = undefined\n\t\tthis.draggedSourceNode = undefined\n\t}\n}\n"],"names":["TouchBackendImpl","eventNames","ListenerType","mouse","start","move","end","contextmenu","touch","keyboard","keydown","profile","ref","sourceNodes","size","sourcePreviewNodes","sourcePreviewNodeOptions","targetNodes","dragOverTargetIds","length","document","options","setup","root","rootElement","invariant","isSetUp","addEventListener","getTopMoveStartHandler","handleTopMoveStartCapture","handleTopMove","handleTopMoveCapture","handleTopMoveEndCapture","enableMouseEvents","ignoreContextMenu","enableKeyboardEvents","handleCancelOnEscape","teardown","_mouseClientOffset","removeEventListener","handleTopMoveStart","uninstallSourceNodeRemovalObserver","subject","event","handler","capture","supportsPassive","passive","listenerTypes","forEach","listenerType","evt","connectDragSource","sourceId","node","handleMoveStart","bind","set","delete","connectDragPreview","connectDropTarget","targetId","handleMove","e","monitor","isDragging","coords","type","x","clientX","y","clientY","ref1","touches","droppedOn","elementFromPoint","undefined","childMatch","contains","body","delayTouchStart","delayMouseStart","handleTopMoveStartDelay","installSourceNodeRemovalObserver","draggedSourceNode","draggedSourceNodeRemovalObserver","MutationObserver","parentElement","resurrectSourceNode","observe","childList","style","display","removeAttribute","appendChild","disconnect","constructor","manager","context","getSourceClientOffset","element","get","getNodeClientOffset","eventShouldStartDrag","moveStartSourceIds","Array","isArray","unshift","clientOffset","getEventClientOffset","isTouchEvent","lastTargetTouchFallback","targetTouches","waitingForDelay","delay","timeout","setTimeout","_evt","clearTimeout","enableHoverOutsideTarget","_isScrolling","inAngleRanges","scrollAngleRanges","hasOwnProperty","distance","touchSlop","actions","beginDrag","publishSource","sourceNode","getSourceId","publishDragSource","cancelable","preventDefault","dragOverTargetNodes","map","key","filter","elementsAtPoint","getDropTargetElementsAtPoint","elementsFromPoint","elementsAtPointExtended","nodeId","currentNode","push","indexOf","orderedDragOverTargetIds","_getDropTargetId","id","index","ids","targetNode","reverse","hover","keys","next","done","value","eventShouldEndDrag","didDrop","drop","endDrag","OptionsReader","getActions","getMonitor","Map","enableTouchEvents"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BA4CaA;;;eAAAA;;;2BA5Ca;4BAgBG;+BACC;sBACU;yBACkB;4BAKnD;iCACyB;AAEhC,MAAMC,aAA8C;IACnD,CAACC,wBAAY,CAACC,KAAK,CAAC,EAAE;QACrBC,OAAO;QACPC,MAAM;QACNC,KAAK;QACLC,aAAa;;IAEd,CAACL,wBAAY,CAACM,KAAK,CAAC,EAAE;QACrBJ,OAAO;QACPC,MAAM;QACNC,KAAK;;IAEN,CAACJ,wBAAY,CAACO,QAAQ,CAAC,EAAE;QACxBC,SAAS;;;AAIJ,MAAMV;IAwDZ;;KAGAW,UAAyC;YAMpBC;QALpB,OAAO;YACNC,aAAa,IAAI,CAACA,WAAW,CAACC,IAAI;YAClCC,oBAAoB,IAAI,CAACA,kBAAkB,CAACD,IAAI;YAChDE,0BAA0B,IAAI,CAACA,wBAAwB,CAACF,IAAI;YAC5DG,aAAa,IAAI,CAACA,WAAW,CAACH,IAAI;YAClCI,mBAAmB,CAAA,AAAAN,CAAAA,MAAA,IAAI,CAACM,iBAAiB,AAAjBA,MAAiB,QAAtBN,QAAsB,KAAA,IAAtB,KAAA,IAAAA,IAAwBO,MAAM,AAANA,KAAU;;;IAIvD,kBAAkB;IAClB,IAAWC,WAAiC;QAC3C,OAAO,IAAI,CAACC,OAAO,CAACD,QAAQ;;IAG7BE,QAAqB;QACpB,MAAMC,OAAO,IAAI,CAACF,OAAO,CAACG,WAAW;QACrC,IAAI,CAACD,MAAM;YACV;;QAGDE,IAAAA,oBAAS,EACR,CAACzB,iBAAiB0B,OAAO,EACzB;QAED1B,iBAAiB0B,OAAO,GAAG;QAE3B,IAAI,CAACC,gBAAgB,CAACJ,MAAM,SAAS,IAAI,CAACK,sBAAsB;QAChE,IAAI,CAACD,gBAAgB,CACpBJ,MACA,SACA,IAAI,CAACM,yBAAyB,EAC9B;QAED,IAAI,CAACF,gBAAgB,CAACJ,MAAM,QAAQ,IAAI,CAACO,aAAa;QACtD,IAAI,CAACH,gBAAgB,CAACJ,MAAM,QAAQ,IAAI,CAACQ,oBAAoB,EAAE;QAC/D,IAAI,CAACJ,gBAAgB,CACpBJ,MACA,OACA,IAAI,CAACS,uBAAuB,EAC5B;QAGD,IAAI,IAAI,CAACX,OAAO,CAACY,iBAAiB,IAAI,CAAC,IAAI,CAACZ,OAAO,CAACa,iBAAiB,EAAE;YACtE,IAAI,CAACP,gBAAgB,CACpBJ,MACA,eACA,IAAI,CAACS,uBAAuB;;QAI9B,IAAI,IAAI,CAACX,OAAO,CAACc,oBAAoB,EAAE;YACtC,IAAI,CAACR,gBAAgB,CACpBJ,MACA,WACA,IAAI,CAACa,oBAAoB,EACzB;;;IAKHC,WAAwB;QACvB,MAAMd,OAAO,IAAI,CAACF,OAAO,CAACG,WAAW;QACrC,IAAI,CAACD,MAAM;YACV;;QAGDvB,iBAAiB0B,OAAO,GAAG;QAC3B,IAAI,CAACY,kBAAkB,GAAG,CAAA;QAE1B,IAAI,CAACC,mBAAmB,CACvBhB,MACA,SACA,IAAI,CAACM,yBAAyB,EAC9B;QAED,IAAI,CAACU,mBAAmB,CAAChB,MAAM,SAAS,IAAI,CAACiB,kBAAkB;QAC/D,IAAI,CAACD,mBAAmB,CAAChB,MAAM,QAAQ,IAAI,CAACQ,oBAAoB,EAAE;QAClE,IAAI,CAACQ,mBAAmB,CAAChB,MAAM,QAAQ,IAAI,CAACO,aAAa;QACzD,IAAI,CAACS,mBAAmB,CACvBhB,MACA,OACA,IAAI,CAACS,uBAAuB,EAC5B;QAGD,IAAI,IAAI,CAACX,OAAO,CAACY,iBAAiB,IAAI,CAAC,IAAI,CAACZ,OAAO,CAACa,iBAAiB,EAAE;YACtE,IAAI,CAACK,mBAAmB,CACvBhB,MACA,eACA,IAAI,CAACS,uBAAuB;;QAI9B,IAAI,IAAI,CAACX,OAAO,CAACc,oBAAoB,EAAE;YACtC,IAAI,CAACI,mBAAmB,CACvBhB,MACA,WACA,IAAI,CAACa,oBAAoB,EACzB;;QAIF,IAAI,CAACK,kCAAkC;;IAGxCd,iBACCe,OAAa,EACbC,KAAQ,EACRC,OAAyB,EACzBC,UAAU,KAAK,EACd;QACD,MAAMxB,UAAUyB,gCAAe,GAAG;YAAED;YAASE,SAAS;YAAUF;QAEhE,IAAI,CAACG,aAAa,CAACC,OAAO,CAAC,SAAUC,YAAY;YAChD,MAAMC,MAAMlD,UAAU,CAACiD,aAAa,CAACP,MAAM;YAE3C,IAAIQ,KAAK;gBACRT,QAAQf,gBAAgB,CAACwB,KAAYP,SAAgBvB;;;;IAKxDkB,oBACCG,OAAa,EACbC,KAAQ,EACRC,OAAyB,EACzBC,UAAU,KAAK,EACd;QACD,MAAMxB,UAAUyB,gCAAe,GAAG;YAAED;YAASE,SAAS;YAAUF;QAEhE,IAAI,CAACG,aAAa,CAACC,OAAO,CAAC,SAAUC,YAAY;YAChD,MAAMC,MAAMlD,UAAU,CAACiD,aAAa,CAACP,MAAM;YAE3C,IAAIQ,KAAK;gBACRT,QAAQH,mBAAmB,CAACY,KAAYP,SAAgBvB;;;;IAK3D+B,kBAAyBC,QAAgB,EAAEC,IAAiB,EAAe;QAC1E,MAAMC,kBAAkB,IAAI,CAACA,eAAe,CAACC,IAAI,CAAC,IAAI,EAAEH;QACxD,IAAI,CAACxC,WAAW,CAAC4C,GAAG,CAACJ,UAAUC;QAE/B,IAAI,CAAC3B,gBAAgB,CAAC2B,MAAM,SAASC;QAErC,OAAO;YACN,IAAI,CAAC1C,WAAW,CAAC6C,MAAM,CAACL;YACxB,IAAI,CAACd,mBAAmB,CAACe,MAAM,SAASC;;;IAI1CI,mBACCN,QAAgB,EAChBC,IAAiB,EACjBjC,OAAgB,EACF;QACd,IAAI,CAACL,wBAAwB,CAACyC,GAAG,CAACJ,UAAUhC;QAC5C,IAAI,CAACN,kBAAkB,CAAC0C,GAAG,CAACJ,UAAUC;QAEtC,OAAO;YACN,IAAI,CAACvC,kBAAkB,CAAC2C,MAAM,CAACL;YAC/B,IAAI,CAACrC,wBAAwB,CAAC0C,MAAM,CAACL;;;IAIvCO,kBAAyBC,QAAgB,EAAEP,IAAiB,EAAe;QAC1E,MAAM/B,OAAO,IAAI,CAACF,OAAO,CAACG,WAAW;QACrC,IAAI,CAAC,IAAI,CAACJ,QAAQ,IAAI,CAACG,MAAM;YAC5B,OAAO;YACN,QAAA,GAAU;;QAIZ,MAAMuC,aAAa,CAACC;YACnB,IAAI,CAAC,IAAI,CAAC3C,QAAQ,IAAI,CAACG,QAAQ,CAAC,IAAI,CAACyC,OAAO,CAACC,UAAU,IAAI;gBAC1D;;YAGD,IAAIC;YAEJ;;OAGA,OAAQH,EAAEI,IAAI;gBACb,KAAKlE,WAAWE,KAAK,CAACE,IAAI;oBACzB6D,SAAS;wBACRE,GAAGL,EAAkBM,OAAO;wBAC5BC,GAAGP,EAAkBQ,OAAO;;oBAE7B;gBAED,KAAKtE,WAAWO,KAAK,CAACH,IAAI;wBAErBO,KACA4D;oBAFJN,SAAS;wBACRE,GAAG,CAAA,AAAAxD,CAAAA,MAAAmD,EAAkBU,OAAO,CAAC,EAAE,AAAD,MAAC,QAA5B7D,QAA4B,KAAA,IAA5B,KAAA,IAAAA,IAA8ByD,OAAO,AAAPA,KAAW;wBAC5CC,GAAG,CAAA,AAAAE,CAAAA,OAAAT,EAAkBU,OAAO,CAAC,EAAE,AAAD,MAAC,QAA5BD,SAA4B,KAAA,IAA5B,KAAA,IAAAA,KAA8BD,OAAO,AAAPA,KAAW;;oBAE7C;;YAGF;;;OAIA,MAAMG,YACLR,UAAU,OACP,IAAI,CAAC9C,QAAQ,CAACuD,gBAAgB,CAACT,OAAOE,CAAC,EAAEF,OAAOI,CAAC,IACjDM;YACJ,MAAMC,aAAaH,aAAapB,KAAKwB,QAAQ,CAACJ;YAE9C,IAAIA,cAAcpB,QAAQuB,YAAY;gBACrC,OAAO,IAAI,CAACf,UAAU,CAACC,GAAGF;;;QAI5B;;MAGA,IAAI,CAAClC,gBAAgB,CAAC,IAAI,CAACP,QAAQ,CAAC2D,IAAI,EAAE,QAAQjB;QAClD,IAAI,CAAC7C,WAAW,CAACwC,GAAG,CAACI,UAAUP;QAE/B,OAAO;YACN,IAAI,IAAI,CAAClC,QAAQ,EAAE;gBAClB,IAAI,CAACH,WAAW,CAACyC,MAAM,CAACG;gBACxB,IAAI,CAACtB,mBAAmB,CAAC,IAAI,CAACnB,QAAQ,CAAC2D,IAAI,EAAE,QAAQjB;;;;IA0BxDlC,yBAAiC;QAChC,IAAI,CAAC,IAAI,CAACP,OAAO,CAAC2D,eAAe,IAAI,CAAC,IAAI,CAAC3D,OAAO,CAAC4D,eAAe,EAAE;YACnE,OAAO,IAAI,CAACzC,kBAAkB;;QAG/B,OAAO,IAAI,CAAC0C,uBAAuB;;IA0OpCC,iCAAyC7B,IAA6B,EAAE;QACvE,IAAI,CAACb,kCAAkC;QAEvC,IAAI,CAAC2C,iBAAiB,GAAG9B;QACzB,IAAI,CAAC+B,gCAAgC,GAAG,IAAIC,iBAAiB;YAC5D,IAAIhC,QAAQ,CAACA,KAAKiC,aAAa,EAAE;gBAChC,IAAI,CAACC,mBAAmB;gBACxB,IAAI,CAAC/C,kCAAkC;;;QAIzC,IAAI,CAACa,QAAQ,CAACA,KAAKiC,aAAa,EAAE;YACjC;;QAGD,IAAI,CAACF,gCAAgC,CAACI,OAAO,CAACnC,KAAKiC,aAAa,EAAE;YACjEG,WAAW;;;IAIbF,sBAA8B;QAC7B,IAAI,IAAI,CAACpE,QAAQ,IAAI,IAAI,CAACgE,iBAAiB,EAAE;YAC5C,IAAI,CAACA,iBAAiB,CAACO,KAAK,CAACC,OAAO,GAAG;YACvC,IAAI,CAACR,iBAAiB,CAACS,eAAe,CAAC;YACvC,IAAI,CAACzE,QAAQ,CAAC2D,IAAI,CAACe,WAAW,CAAC,IAAI,CAACV,iBAAiB;;;IAIvD3C,qCAA6C;QAC5C,IAAI,IAAI,CAAC4C,gCAAgC,EAAE;YAC1C,IAAI,CAACA,gCAAgC,CAACU,UAAU;;QAGjD,IAAI,CAACV,gCAAgC,GAAGT;QACxC,IAAI,CAACQ,iBAAiB,GAAGR;;IA5iB1BoB,YACCC,OAAwB,EACxBC,OAA4B,EAC5B7E,OAAqC,CACpC;QAkQF,IAAA,CAAQ8E,qBAAqB,GAAG,CAAC9C;YAChC,MAAM+C,UAAU,IAAI,CAACvF,WAAW,CAACwF,GAAG,CAAChD;YACrC,OAAO+C,WAAWE,IAAAA,4BAAmB,EAACF;;QAGvC,IAAA,CAAOvE,yBAAyB,GAAG,CAACkC;YACnC,IAAI,CAACwC,IAAAA,gCAAoB,EAACxC,IAAkB;gBAC3C;;YAGD,IAAI,CAACyC,kBAAkB,GAAG,EAAE;;QAG7B,IAAA,CAAOjD,eAAe,GAAG,CAACF;YACzB,8FAA8F;YAC9F,gFAAgF;YAChF,IAAIoD,MAAMC,OAAO,CAAC,IAAI,CAACF,kBAAkB,GAAG;gBAC3C,IAAI,CAACA,kBAAkB,CAACG,OAAO,CAACtD;;;QAYlC,IAAA,CAAOb,kBAAkB,GAAG,CAACuB;YAC5B,IAAI,CAACwC,IAAAA,gCAAoB,EAACxC,IAAkB;gBAC3C;;YAGD,0DAA0D;YAC1D,uBAAuB;YACvB,qDAAqD;YACrD,0EAA0E;YAE1E,MAAM6C,eAAeC,IAAAA,6BAAoB,EAAC9C;YAC1C,IAAI6C,cAAc;gBACjB,IAAIE,IAAAA,wBAAY,EAAC/C,IAAI;oBACpB,IAAI,CAACgD,uBAAuB,GAAGhD,EAAEiD,aAAa,CAAC,EAAE;;gBAElD,IAAI,CAAC1E,kBAAkB,GAAGsE;;YAE3B,IAAI,CAACK,eAAe,GAAG;;QAGxB,IAAA,CAAO/B,uBAAuB,GAAG,CAACnB;YACjC,IAAI,CAACwC,IAAAA,gCAAoB,EAACxC,IAAkB;gBAC3C;;YAGD,MAAMmD,QACLnD,EAAEI,IAAI,KAAKlE,WAAWO,KAAK,CAACJ,KAAK,GAC9B,IAAI,CAACiB,OAAO,CAAC2D,eAAe,GAC5B,IAAI,CAAC3D,OAAO,CAAC4D,eAAe;YAChC,IAAI,CAACkC,OAAO,GAAGC,WACd,IAAI,CAAC5E,kBAAkB,CAACgB,IAAI,CAAC,IAAI,EAAEO,IACnCmD;YAED,IAAI,CAACD,eAAe,GAAG;;QAGxB,IAAA,CAAOlF,oBAAoB,GAAG;YAC7B,IAAI,CAACb,iBAAiB,GAAG,EAAE;;QAG5B,IAAA,CAAO4C,UAAU,GAAG,CACnBuD,MACAxD;YAEA,IAAI,IAAI,CAAC3C,iBAAiB,EAAE;gBAC3B,IAAI,CAACA,iBAAiB,CAACyF,OAAO,CAAC9C;;;QAIjC,IAAA,CAAO/B,aAAa,GAAG,CAACiC;YACvB,IAAI,IAAI,CAACoD,OAAO,EAAE;gBACjBG,aAAa,IAAI,CAACH,OAAO;;YAE1B,IAAI,CAAC,IAAI,CAAC/F,QAAQ,IAAI,IAAI,CAAC6F,eAAe,EAAE;gBAC3C;;YAED,MAAM,EAAET,kBAAkB,EAAEtF,iBAAiB,EAAE,GAAG,IAAI;YACtD,MAAMqG,2BAA2B,IAAI,CAAClG,OAAO,CAACkG,wBAAwB;YAEtE,MAAMX,eAAeC,IAAAA,6BAAoB,EAAC9C,IAAG,IAAI,CAACgD,uBAAuB;YAEzE,IAAI,CAACH,cAAc;gBAClB;;YAGD,4EAA4E;YAC5E,IACC,IAAI,CAACY,YAAY,IAChB,CAAC,IAAI,CAACxD,OAAO,CAACC,UAAU,MACxBwD,IAAAA,mBAAa,EACZ,IAAI,CAACnF,kBAAkB,CAAC8B,CAAC,IAAI,GAC7B,IAAI,CAAC9B,kBAAkB,CAACgC,CAAC,IAAI,GAC7BsC,aAAaxC,CAAC,EACdwC,aAAatC,CAAC,EACd,IAAI,CAACjD,OAAO,CAACqG,iBAAiB,GAE/B;gBACD,IAAI,CAACF,YAAY,GAAG;gBACpB;;YAGD,8EAA8E;YAC9E,IACC,CAAC,IAAI,CAACxD,OAAO,CAACC,UAAU,MACxB,iDAAiD;YACjD,IAAI,CAAC3B,kBAAkB,CAACqF,cAAc,CAAC,QACvCnB,sBACAoB,IAAAA,cAAQ,EACP,IAAI,CAACtF,kBAAkB,CAAC8B,CAAC,IAAI,GAC7B,IAAI,CAAC9B,kBAAkB,CAACgC,CAAC,IAAI,GAC7BsC,aAAaxC,CAAC,EACdwC,aAAatC,CAAC,IACV,CAAA,IAAI,CAACjD,OAAO,CAACwG,SAAS,GAAG,IAAI,CAACxG,OAAO,CAACwG,SAAS,GAAG,CAAA,GACtD;gBACD,IAAI,CAACrB,kBAAkB,GAAG5B;gBAE1B,IAAI,CAACkD,OAAO,CAACC,SAAS,CAACvB,oBAAoB;oBAC1CI,cAAc,IAAI,CAACtE,kBAAkB;oBACrC6D,uBAAuB,IAAI,CAACA,qBAAqB;oBACjD6B,eAAe;;;YAIjB,IAAI,CAAC,IAAI,CAAChE,OAAO,CAACC,UAAU,IAAI;gBAC/B;;YAGD,MAAMgE,aAAa,IAAI,CAACpH,WAAW,CAACwF,GAAG,CACtC,IAAI,CAACrC,OAAO,CAACkE,WAAW;YAEzB,IAAI,CAAC/C,gCAAgC,CAAC8C;YACtC,IAAI,CAACH,OAAO,CAACK,iBAAiB;YAE9B,IAAIpE,GAAEqE,UAAU,EAAErE,GAAEsE,cAAc;YAElC,mDAAmD;YACnD,MAAMC,sBAAqC,AAACpH,CAAAA,qBAAqB,EAAE,AAAF,EAC/DqH,GAAG,CAAC,CAACC,MAAQ,IAAI,CAACvH,WAAW,CAACoF,GAAG,CAACmC,MAClCC,MAAM,CAAC,CAAC1E,IAAM,CAAC,CAACA;YAElB,sDAAsD;YACtD,MAAM2E,kBAAkB,IAAI,CAACrH,OAAO,CAACsH,4BAA4B,GAC9D,IAAI,CAACtH,OAAO,CAACsH,4BAA4B,CACzC/B,aAAaxC,CAAC,EACdwC,aAAatC,CAAC,EACdgE,uBAEA,IAAI,CAAClH,QAAQ,CAACwH,iBAAiB,CAAChC,aAAaxC,CAAC,EAAEwC,aAAatC,CAAC;YACjE,4GAA4G;YAC5G,MAAMuE,0BAAqC,EAAE;YAC7C,IAAK,MAAMC,UAAUJ,gBAAiB;gBACrC,iDAAiD;gBACjD,IAAI,CAACA,gBAAgBf,cAAc,CAACmB,SAAS;oBAC5C;;gBAED,IAAIC,cAA0CL,eAAe,CAACI,OAAO;gBACrE,IAAIC,eAAe,MAAM;oBACxBF,wBAAwBG,IAAI,CAACD;;gBAE9B,MAAOA,YAAa;oBACnBA,cAAcA,YAAYxD,aAAa;oBACvC,IACCwD,eACAF,wBAAwBI,OAAO,CAACF,iBAAiB,CAAC,GACjD;wBACDF,wBAAwBG,IAAI,CAACD;;;;YAIhC,MAAMG,2BAAqCL,wBAAuB,0DACP;aACzDJ,MAAM,CAAC,CAACnF,OAASgF,oBAAoBW,OAAO,CAAC3F,QAAuB,CAAC,GAAE,2CAC7B;aAC1CiF,GAAG,CAAC,CAACjF,OAAS,IAAI,CAAC6F,gBAAgB,CAAC7F,OAAM,gCACX;aAC/BmF,MAAM,CAAC,CAACnF,OAAS,CAAC,CAACA,MACnBmF,MAAM,CAAC,CAACW,IAAIC,OAAOC,MAAQA,IAAIL,OAAO,CAACG,QAAQC;YAEjD,sFAAsF;YACtF,IAAI9B,0BAA0B;gBAC7B,IAAK,MAAM1D,YAAY,IAAI,CAAC5C,WAAW,CAAE;oBACxC,MAAMsI,aAAa,IAAI,CAACtI,WAAW,CAACoF,GAAG,CAACxC;oBACxC,IACCoE,cACAsB,cACAA,WAAWzE,QAAQ,CAACmD,eACpBiB,yBAAyBD,OAAO,CAACpF,cAAc,CAAC,GAC/C;wBACDqF,yBAAyBvC,OAAO,CAAC9C;wBACjC;;;;YAKH,uFAAuF;YACvFqF,yBAAyBM,OAAO;YAEhC,IAAI,CAAC1B,OAAO,CAAC2B,KAAK,CAACP,0BAA0B;gBAC5CtC,cAAcA;;;QAIhB;;;KAIA,IAAA,CAAOuC,gBAAgB,GAAG,CAAC7F;YAC1B,MAAMoG,OAAO,IAAI,CAACzI,WAAW,CAACyI,IAAI;YAClC,IAAIC,OAAOD,KAAKC,IAAI;YACpB,MAAOA,KAAKC,IAAI,KAAK,MAAO;gBAC3B,MAAM/F,WAAW8F,KAAKE,KAAK;gBAC3B,IAAIvG,SAAS,IAAI,CAACrC,WAAW,CAACoF,GAAG,CAACxC,WAAW;oBAC5C,OAAOA;uBACD;oBACN8F,OAAOD,KAAKC,IAAI;;;YAGlB,OAAO/E;;QAGR,IAAA,CAAO5C,uBAAuB,GAAG,CAAC+B;YACjC,IAAI,CAACyD,YAAY,GAAG;YACpB,IAAI,CAACT,uBAAuB,GAAGnC;YAE/B,IAAI,CAACkF,IAAAA,8BAAkB,EAAC/F,IAAkB;gBACzC;;YAGD,IAAI,CAAC,IAAI,CAACC,OAAO,CAACC,UAAU,MAAM,IAAI,CAACD,OAAO,CAAC+F,OAAO,IAAI;gBACzD,IAAI,CAACvD,kBAAkB,GAAG5B;gBAC1B;;YAGD,IAAIb,EAAEqE,UAAU,EAAErE,EAAEsE,cAAc;YAElC,IAAI,CAAC/F,kBAAkB,GAAG,CAAA;YAE1B,IAAI,CAACG,kCAAkC;YACvC,IAAI,CAACqF,OAAO,CAACkC,IAAI;YACjB,IAAI,CAAClC,OAAO,CAACmC,OAAO;;QAGrB,IAAA,CAAO7H,oBAAoB,GAAG,CAAC2B;YAC9B,IAAIA,EAAEyE,GAAG,KAAK,YAAY,IAAI,CAACxE,OAAO,CAACC,UAAU,IAAI;gBACpD,IAAI,CAAC3B,kBAAkB,GAAG,CAAA;gBAE1B,IAAI,CAACG,kCAAkC;gBACvC,IAAI,CAACqF,OAAO,CAACmC,OAAO;;;QAjgBrB,IAAI,CAAC5I,OAAO,GAAG,IAAI6I,4BAAa,CAAC7I,SAAS6E;QAC1C,IAAI,CAAC4B,OAAO,GAAG7B,QAAQkE,UAAU;QACjC,IAAI,CAACnG,OAAO,GAAGiC,QAAQmE,UAAU;QAEjC,IAAI,CAACvJ,WAAW,GAAG,IAAIwJ;QACvB,IAAI,CAACtJ,kBAAkB,GAAG,IAAIsJ;QAC9B,IAAI,CAACrJ,wBAAwB,GAAG,IAAIqJ;QACpC,IAAI,CAACpJ,WAAW,GAAG,IAAIoJ;QACvB,IAAI,CAACrH,aAAa,GAAG,EAAE;QACvB,IAAI,CAACV,kBAAkB,GAAG,CAAA;QAC1B,IAAI,CAACkF,YAAY,GAAG;QAEpB,IAAI,IAAI,CAACnG,OAAO,CAACY,iBAAiB,EAAE;YACnC,IAAI,CAACe,aAAa,CAACgG,IAAI,CAAC9I,wBAAY,CAACC,KAAK;;QAG3C,IAAI,IAAI,CAACkB,OAAO,CAACiJ,iBAAiB,EAAE;YACnC,IAAI,CAACtH,aAAa,CAACgG,IAAI,CAAC9I,wBAAY,CAACM,KAAK;;QAG3C,IAAI,IAAI,CAACa,OAAO,CAACc,oBAAoB,EAAE;YACtC,IAAI,CAACa,aAAa,CAACgG,IAAI,CAAC9I,wBAAY,CAACO,QAAQ"}