{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/common/utils/src/lib/displayError.ts"],"sourcesContent":["import { AxiosError } from \"axios\"\nimport i18next from \"i18next\"\nimport { isClerkAPIResponseError } from \"@clerk/clerk-react/errors\"\n\nconst displayError = (error: unknown, backup?: string) => {\n  const DEFAULT_ERROR_MESSAGE = i18next.t(\"common.defaultError\")\n\n  if (error instanceof AxiosError) {\n    return (error.response?.data?.message as string) ?? DEFAULT_ERROR_MESSAGE\n  }\n  if (error instanceof Object && isClerkAPIResponseError(error)) {\n    if (error.errors[0].code === \"client_state_invalid\") {\n      return error.errors[0].message\n    }\n    return error.errors.map(e => e.longMessage ?? e.message).join(\". \")\n  }\n  if (error instanceof Error) {\n    return error.message\n  }\n  if (typeof error === \"string\" && error !== \"\") {\n    return error\n  }\n  return backup ?? DEFAULT_ERROR_MESSAGE\n}\n\nexport { displayError }\n"],"names":["displayError","error","backup","DEFAULT_ERROR_MESSAGE","i18next","t","AxiosError","response","data","message","Object","isClerkAPIResponseError","errors","code","map","e","longMessage","join","Error"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAyBSA;;;eAAAA;;;uBAzBkB;gEACP;wBACoB;;;;;;AAExC,MAAMA,eAAe,CAACC,OAAgBC;IACpC,MAAMC,wBAAwBC,gBAAO,CAACC,CAAC,CAAC;IAExC,IAAIJ,iBAAiBK,iBAAU,EAAE;YACvBL,sBAAAA;YAAAA;QAAR,OAAO,CAACA,gCAAAA,kBAAAA,MAAMM,QAAQ,cAAdN,uCAAAA,uBAAAA,gBAAgBO,IAAI,cAApBP,2CAAAA,qBAAsBQ,OAAO,cAA7BR,0CAAAA,+BAA4CE;IACtD;IACA,IAAIF,iBAAiBS,UAAUC,IAAAA,+BAAuB,EAACV,QAAQ;QAC7D,IAAIA,MAAMW,MAAM,CAAC,EAAE,CAACC,IAAI,KAAK,wBAAwB;YACnD,OAAOZ,MAAMW,MAAM,CAAC,EAAE,CAACH,OAAO;QAChC;QACA,OAAOR,MAAMW,MAAM,CAACE,GAAG,CAACC,CAAAA;gBAAKA;mBAAAA,CAAAA,iBAAAA,EAAEC,WAAW,cAAbD,4BAAAA,iBAAiBA,EAAEN,OAAO;QAAD,GAAGQ,IAAI,CAAC;IAChE;IACA,IAAIhB,iBAAiBiB,OAAO;QAC1B,OAAOjB,MAAMQ,OAAO;IACtB;IACA,IAAI,OAAOR,UAAU,YAAYA,UAAU,IAAI;QAC7C,OAAOA;IACT;IACA,OAAOC,mBAAAA,oBAAAA,SAAUC;AACnB"}