{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/providers/src/FeedbackContext/useFeedbackParamChecker.ts"],"sourcesContent":["import { Dispatch, SetStateAction, useEffect } from \"react\"\nimport { useSearchParams } from \"react-router-dom\"\n\ntype Props = {\n  isFeedbackMode: boolean\n  setIsFeedbackMode: Dispatch<SetStateAction<boolean>>\n}\n\nconst useFeedbackUrlParamChecker = ({ isFeedbackMode, setIsFeedbackMode }: Props) => {\n  const [searchParams, setSearchParams] = useSearchParams()\n\n  useEffect(() => {\n    const feedbackParam = searchParams.get(\"feedback\")\n\n    if (feedbackParam) {\n      // /?feedback=true\n      if (feedbackParam === \"true\" && !isFeedbackMode) {\n        setIsFeedbackMode(true)\n      }\n      // /?feedback=false\n      if (feedbackParam === \"false\" && isFeedbackMode) {\n        setIsFeedbackMode(false)\n      }\n      // Remove the param\n      setSearchParams()\n    }\n  }, [isFeedbackMode, searchParams, setIsFeedbackMode, setSearchParams])\n}\n\nexport { useFeedbackUrlParamChecker }\n"],"names":["useFeedbackUrlParamChecker","isFeedbackMode","setIsFeedbackMode","searchParams","setSearchParams","useSearchParams","useEffect","feedbackParam","get"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BA6BSA;;;eAAAA;;;uBA7B2C;gCACpB;AAOhC,MAAMA,6BAA6B,CAAC,EAAEC,cAAc,EAAEC,iBAAiB,EAAS;IAC9E,MAAM,CAACC,cAAcC,gBAAgB,GAAGC,IAAAA,+BAAe;IAEvDC,IAAAA,gBAAS,EAAC;QACR,MAAMC,gBAAgBJ,aAAaK,GAAG,CAAC;QAEvC,IAAID,eAAe;YACjB,kBAAkB;YAClB,IAAIA,kBAAkB,UAAU,CAACN,gBAAgB;gBAC/CC,kBAAkB;YACpB;YACA,mBAAmB;YACnB,IAAIK,kBAAkB,WAAWN,gBAAgB;gBAC/CC,kBAAkB;YACpB;YACA,mBAAmB;YACnBE;QACF;IACF,GAAG;QAACH;QAAgBE;QAAcD;QAAmBE;KAAgB;AACvE"}