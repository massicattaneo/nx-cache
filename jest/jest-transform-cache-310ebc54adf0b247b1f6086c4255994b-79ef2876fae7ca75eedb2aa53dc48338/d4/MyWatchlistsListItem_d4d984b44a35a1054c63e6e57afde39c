585a1bf9e9d8efd1374b73dfdb2e8ba9
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "MyWatchlistsListItem", {
    enumerable: true,
    get: function() {
        return MyWatchlistsListItem;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _reactrouterdom = require("react-router-dom");
const _utils = require("@rp/common/utils");
const _basecomponents = require("@rp/react/web/common/base-components");
const _compositecomponents = require("@rp/react/web/common/composite-components");
const _hooks = require("@rp/react/web/common/hooks");
const _core = require("@rp/react/web/mui/core");
const _router = require("@rp/react/web/router");
const _useWatchlistsActions = require("../hooks/useWatchlistsActions");
const MyWatchlistsListItem = ({ item, columnsWidth })=>{
    var _item_shared;
    const { share, copy, search, rename, remove, favorite } = (0, _useWatchlistsActions.useWatchlistsActions)();
    const actions = [
        share,
        favorite,
        copy,
        search,
        rename,
        remove
    ];
    const { isMobile } = (0, _hooks.useDeviceInfo)();
    const navigate = (0, _reactrouterdom.useNavigate)();
    const [openMenu, setOpenMenu] = (0, _react.useState)(false);
    var _item_lastInteracted;
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.HubTableRow, {
        "aria-label": item.name,
        sx: {
            "&:hover": {
                backgroundColor: "grey.800"
            },
            gap: 0,
            "& > div": {
                pr: 2
            },
            "& > div:last-of-type": {
                pr: 0
            }
        },
        selected: openMenu,
        onRowClick: ()=>{
            if (isMobile) {
                navigate(_router.WATCHLIST_EDIT.replace(":id", item.id));
            } else {
                navigate(_router.WATCHLIST_ID_ROUTE.replace(":id", item.id), {
                    state: {
                        comingFrom: "user"
                    }
                });
            }
        },
        showCompanyIcon: ((_item_shared = item.shared) === null || _item_shared === void 0 ? void 0 : _item_shared.company.permission) !== "undefined",
        columnsWidth: columnsWidth,
        columns: [
            {
                text: item.name
            },
            {
                text: (0, _utils.formatTime)((_item_lastInteracted = item.lastInteracted) !== null && _item_lastInteracted !== void 0 ? _item_lastInteracted : item.lastUpdated)
            },
            {
                node: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                    sx: {
                        display: "flex",
                        justifyContent: "right",
                        alignItems: "center"
                    },
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_basecomponents.ActionsMenu, {
                        open: openMenu,
                        setOpen: setOpenMenu,
                        actions: actions,
                        item: item
                    })
                })
            }
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL3dhdGNobGlzdHMvc3JjL2xpYi9XYXRjaGxpc3RzTGlzdFZpZXcvTXlXYXRjaGxpc3RzTGlzdEl0ZW0udHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCJcbmltcG9ydCB7IHVzZU5hdmlnYXRlIH0gZnJvbSBcInJlYWN0LXJvdXRlci1kb21cIlxuaW1wb3J0IHsgV2F0Y2hsaXN0IH0gZnJvbSBcIkBycC9jb21tb24vYXBpLXR5cGVzXCJcbmltcG9ydCB7IGZvcm1hdFRpbWUgfSBmcm9tIFwiQHJwL2NvbW1vbi91dGlsc1wiXG5pbXBvcnQgeyBBY3Rpb25zTWVudSB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL2NvbW1vbi9iYXNlLWNvbXBvbmVudHNcIlxuaW1wb3J0IHsgSHViVGFibGVSb3cgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9jb21tb24vY29tcG9zaXRlLWNvbXBvbmVudHNcIlxuaW1wb3J0IHsgdXNlRGV2aWNlSW5mbyB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL2NvbW1vbi9ob29rc1wiXG5pbXBvcnQgeyBCb3ggfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9tdWkvY29yZVwiXG5pbXBvcnQgeyBXQVRDSExJU1RfRURJVCwgV0FUQ0hMSVNUX0lEX1JPVVRFIH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvcm91dGVyXCJcbmltcG9ydCB7IHVzZVdhdGNobGlzdHNBY3Rpb25zIH0gZnJvbSBcIi4uL2hvb2tzL3VzZVdhdGNobGlzdHNBY3Rpb25zXCJcblxudHlwZSBQcm9wcyA9IHtcbiAgaXRlbTogV2F0Y2hsaXN0XG4gIGNvbHVtbnNXaWR0aDogQXJyYXk8c3RyaW5nPlxufVxuXG5leHBvcnQgY29uc3QgTXlXYXRjaGxpc3RzTGlzdEl0ZW0gPSAoeyBpdGVtLCBjb2x1bW5zV2lkdGggfTogUHJvcHMpID0+IHtcbiAgY29uc3QgeyBzaGFyZSwgY29weSwgc2VhcmNoLCByZW5hbWUsIHJlbW92ZSwgZmF2b3JpdGUgfSA9IHVzZVdhdGNobGlzdHNBY3Rpb25zKClcbiAgY29uc3QgYWN0aW9ucyA9IFtzaGFyZSwgZmF2b3JpdGUsIGNvcHksIHNlYXJjaCwgcmVuYW1lLCByZW1vdmVdXG4gIGNvbnN0IHsgaXNNb2JpbGUgfSA9IHVzZURldmljZUluZm8oKVxuICBjb25zdCBuYXZpZ2F0ZSA9IHVzZU5hdmlnYXRlKClcbiAgY29uc3QgW29wZW5NZW51LCBzZXRPcGVuTWVudV0gPSB1c2VTdGF0ZShmYWxzZSlcblxuICByZXR1cm4gKFxuICAgIDxIdWJUYWJsZVJvd1xuICAgICAgYXJpYS1sYWJlbD17aXRlbS5uYW1lfVxuICAgICAgc3g9e3tcbiAgICAgICAgXCImOmhvdmVyXCI6IHsgYmFja2dyb3VuZENvbG9yOiBcImdyZXkuODAwXCIgfSxcbiAgICAgICAgZ2FwOiAwLFxuICAgICAgICBcIiYgPiBkaXZcIjogeyBwcjogMiB9LFxuICAgICAgICBcIiYgPiBkaXY6bGFzdC1vZi10eXBlXCI6IHsgcHI6IDAgfSxcbiAgICAgIH19XG4gICAgICBzZWxlY3RlZD17b3Blbk1lbnV9XG4gICAgICBvblJvd0NsaWNrPXsoKSA9PiB7XG4gICAgICAgIGlmIChpc01vYmlsZSkge1xuICAgICAgICAgIG5hdmlnYXRlKFdBVENITElTVF9FRElULnJlcGxhY2UoXCI6aWRcIiwgaXRlbS5pZCkpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgbmF2aWdhdGUoV0FUQ0hMSVNUX0lEX1JPVVRFLnJlcGxhY2UoXCI6aWRcIiwgaXRlbS5pZCksIHsgc3RhdGU6IHsgY29taW5nRnJvbTogXCJ1c2VyXCIgfSB9KVxuICAgICAgICB9XG4gICAgICB9fVxuICAgICAgc2hvd0NvbXBhbnlJY29uPXtpdGVtLnNoYXJlZD8uY29tcGFueS5wZXJtaXNzaW9uICE9PSBcInVuZGVmaW5lZFwifVxuICAgICAgY29sdW1uc1dpZHRoPXtjb2x1bW5zV2lkdGh9XG4gICAgICBjb2x1bW5zPXtbXG4gICAgICAgIHsgdGV4dDogaXRlbS5uYW1lIH0sXG4gICAgICAgIHsgdGV4dDogZm9ybWF0VGltZShpdGVtLmxhc3RJbnRlcmFjdGVkID8/IGl0ZW0ubGFzdFVwZGF0ZWQpIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBub2RlOiAoXG4gICAgICAgICAgICA8Qm94IHN4PXt7IGRpc3BsYXk6IFwiZmxleFwiLCBqdXN0aWZ5Q29udGVudDogXCJyaWdodFwiLCBhbGlnbkl0ZW1zOiBcImNlbnRlclwiIH19PlxuICAgICAgICAgICAgICA8QWN0aW9uc01lbnUgb3Blbj17b3Blbk1lbnV9IHNldE9wZW49e3NldE9wZW5NZW51fSBhY3Rpb25zPXthY3Rpb25zfSBpdGVtPXtpdGVtfSAvPlxuICAgICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAgKSxcbiAgICAgICAgfSxcbiAgICAgIF19XG4gICAgLz5cbiAgKVxufVxuIl0sIm5hbWVzIjpbIk15V2F0Y2hsaXN0c0xpc3RJdGVtIiwiaXRlbSIsImNvbHVtbnNXaWR0aCIsInNoYXJlIiwiY29weSIsInNlYXJjaCIsInJlbmFtZSIsInJlbW92ZSIsImZhdm9yaXRlIiwidXNlV2F0Y2hsaXN0c0FjdGlvbnMiLCJhY3Rpb25zIiwiaXNNb2JpbGUiLCJ1c2VEZXZpY2VJbmZvIiwibmF2aWdhdGUiLCJ1c2VOYXZpZ2F0ZSIsIm9wZW5NZW51Iiwic2V0T3Blbk1lbnUiLCJ1c2VTdGF0ZSIsIkh1YlRhYmxlUm93IiwiYXJpYS1sYWJlbCIsIm5hbWUiLCJzeCIsImJhY2tncm91bmRDb2xvciIsImdhcCIsInByIiwic2VsZWN0ZWQiLCJvblJvd0NsaWNrIiwiV0FUQ0hMSVNUX0VESVQiLCJyZXBsYWNlIiwiaWQiLCJXQVRDSExJU1RfSURfUk9VVEUiLCJzdGF0ZSIsImNvbWluZ0Zyb20iLCJzaG93Q29tcGFueUljb24iLCJzaGFyZWQiLCJjb21wYW55IiwicGVybWlzc2lvbiIsImNvbHVtbnMiLCJ0ZXh0IiwiZm9ybWF0VGltZSIsImxhc3RJbnRlcmFjdGVkIiwibGFzdFVwZGF0ZWQiLCJub2RlIiwiQm94IiwiZGlzcGxheSIsImp1c3RpZnlDb250ZW50IiwiYWxpZ25JdGVtcyIsIkFjdGlvbnNNZW51Iiwib3BlbiIsInNldE9wZW4iXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQWdCYUE7OztlQUFBQTs7Ozt1QkFoQlk7Z0NBQ0c7dUJBRUQ7Z0NBQ0M7cUNBQ0E7dUJBQ0U7c0JBQ1Y7d0JBQytCO3NDQUNkO0FBTzlCLE1BQU1BLHVCQUF1QixDQUFDLEVBQUVDLElBQUksRUFBRUMsWUFBWSxFQUFTO1FBd0IzQ0Q7SUF2QnJCLE1BQU0sRUFBRUUsS0FBSyxFQUFFQyxJQUFJLEVBQUVDLE1BQU0sRUFBRUMsTUFBTSxFQUFFQyxNQUFNLEVBQUVDLFFBQVEsRUFBRSxHQUFHQyxJQUFBQSwwQ0FBb0I7SUFDOUUsTUFBTUMsVUFBVTtRQUFDUDtRQUFPSztRQUFVSjtRQUFNQztRQUFRQztRQUFRQztLQUFPO0lBQy9ELE1BQU0sRUFBRUksUUFBUSxFQUFFLEdBQUdDLElBQUFBLG9CQUFhO0lBQ2xDLE1BQU1DLFdBQVdDLElBQUFBLDJCQUFXO0lBQzVCLE1BQU0sQ0FBQ0MsVUFBVUMsWUFBWSxHQUFHQyxJQUFBQSxlQUFRLEVBQUM7UUF1QmhCaEI7SUFyQnpCLHFCQUNFLHFCQUFDaUIsZ0NBQVc7UUFDVkMsY0FBWWxCLEtBQUttQixJQUFJO1FBQ3JCQyxJQUFJO1lBQ0YsV0FBVztnQkFBRUMsaUJBQWlCO1lBQVc7WUFDekNDLEtBQUs7WUFDTCxXQUFXO2dCQUFFQyxJQUFJO1lBQUU7WUFDbkIsd0JBQXdCO2dCQUFFQSxJQUFJO1lBQUU7UUFDbEM7UUFDQUMsVUFBVVY7UUFDVlcsWUFBWTtZQUNWLElBQUlmLFVBQVU7Z0JBQ1pFLFNBQVNjLHNCQUFjLENBQUNDLE9BQU8sQ0FBQyxPQUFPM0IsS0FBSzRCLEVBQUU7WUFDaEQsT0FBTztnQkFDTGhCLFNBQVNpQiwwQkFBa0IsQ0FBQ0YsT0FBTyxDQUFDLE9BQU8zQixLQUFLNEIsRUFBRSxHQUFHO29CQUFFRSxPQUFPO3dCQUFFQyxZQUFZO29CQUFPO2dCQUFFO1lBQ3ZGO1FBQ0Y7UUFDQUMsaUJBQWlCaEMsRUFBQUEsZUFBQUEsS0FBS2lDLE1BQU0sY0FBWGpDLG1DQUFBQSxhQUFha0MsT0FBTyxDQUFDQyxVQUFVLE1BQUs7UUFDckRsQyxjQUFjQTtRQUNkbUMsU0FBUztZQUNQO2dCQUFFQyxNQUFNckMsS0FBS21CLElBQUk7WUFBQztZQUNsQjtnQkFBRWtCLE1BQU1DLElBQUFBLGlCQUFVLEVBQUN0QyxDQUFBQSx1QkFBQUEsS0FBS3VDLGNBQWMsY0FBbkJ2QyxrQ0FBQUEsdUJBQXVCQSxLQUFLd0MsV0FBVztZQUFFO1lBQzVEO2dCQUNFQyxvQkFDRSxxQkFBQ0MsU0FBRztvQkFBQ3RCLElBQUk7d0JBQUV1QixTQUFTO3dCQUFRQyxnQkFBZ0I7d0JBQVNDLFlBQVk7b0JBQVM7OEJBQ3hFLGNBQUEscUJBQUNDLDJCQUFXO3dCQUFDQyxNQUFNakM7d0JBQVVrQyxTQUFTakM7d0JBQWFOLFNBQVNBO3dCQUFTVCxNQUFNQTs7O1lBR2pGO1NBQ0Q7O0FBR1AifQ==