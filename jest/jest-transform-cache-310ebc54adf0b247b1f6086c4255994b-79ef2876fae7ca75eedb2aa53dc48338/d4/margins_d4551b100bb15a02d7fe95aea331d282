4e593e73557f65a8006ea22b314f088b
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "margins", {
    enumerable: true,
    get: function() {
        return margins;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _icons = require("@rp/react/web/mui/icons");
require("@tanstack/react-table");
const _companyRatios = require("../endpoints/companyRatios");
const _genericTable = require("../genericTable");
const _cacheTimeHelper = require("../utils/cacheTimeHelper");
const margins = (0, _genericTable.genericTable)({
    tableName: "margins",
    tableLabel: "Margins",
    tableIcon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.DonutSmallOutlined, {}),
    defaultVisible: [
        {
            endpoint: "companyRatios",
            columnKey: "grossProfitMarginTtm"
        },
        {
            endpoint: "companyRatios",
            columnKey: "operatingProfitMarginTtm"
        },
        {
            endpoint: "companyRatios",
            columnKey: "ebitdaMarginTtm"
        },
        {
            endpoint: "companyRatios",
            columnKey: "netProfitMarginTtm"
        }
    ],
    headerInfo: (0, _cacheTimeHelper.createCacheHeaderInfo)("Margins"),
    columns: [
        _companyRatios.companyRatios.grossProfitMarginTtm("margins"),
        _companyRatios.companyRatios.operatingProfitMarginTtm("margins"),
        _companyRatios.companyRatios.ebitdaMarginTtm("margins"),
        _companyRatios.companyRatios.netProfitMarginTtm("margins"),
        _companyRatios.companyRatios.pretaxProfitMarginTtm("margins"),
        _companyRatios.companyRatios.continuousOperationsProfitMarginTtm("margins"),
        _companyRatios.companyRatios.bottomLineProfitMarginTtm("margins"),
        _companyRatios.companyRatios.ebitMarginTtm("margins")
    ]
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL3dhdGNobGlzdHMvc3JjL2xpYi9XYXRjaGxpc3REYXRhVGFicy90YWJsZXMvbWFyZ2lucy50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRG9udXRTbWFsbE91dGxpbmVkIH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvbXVpL2ljb25zXCJcbmltcG9ydCBcIkB0YW5zdGFjay9yZWFjdC10YWJsZVwiXG5pbXBvcnQgeyBjb21wYW55UmF0aW9zIH0gZnJvbSBcIi4uL2VuZHBvaW50cy9jb21wYW55UmF0aW9zXCJcbmltcG9ydCB7IGdlbmVyaWNUYWJsZSB9IGZyb20gXCIuLi9nZW5lcmljVGFibGVcIlxuaW1wb3J0IHsgY3JlYXRlQ2FjaGVIZWFkZXJJbmZvIH0gZnJvbSBcIi4uL3V0aWxzL2NhY2hlVGltZUhlbHBlclwiXG5cbmNvbnN0IG1hcmdpbnMgPSBnZW5lcmljVGFibGUoe1xuICB0YWJsZU5hbWU6IFwibWFyZ2luc1wiLFxuICB0YWJsZUxhYmVsOiBcIk1hcmdpbnNcIixcbiAgdGFibGVJY29uOiA8RG9udXRTbWFsbE91dGxpbmVkIC8+LFxuICBkZWZhdWx0VmlzaWJsZTogW1xuICAgIHsgZW5kcG9pbnQ6IFwiY29tcGFueVJhdGlvc1wiLCBjb2x1bW5LZXk6IFwiZ3Jvc3NQcm9maXRNYXJnaW5UdG1cIiB9LFxuICAgIHsgZW5kcG9pbnQ6IFwiY29tcGFueVJhdGlvc1wiLCBjb2x1bW5LZXk6IFwib3BlcmF0aW5nUHJvZml0TWFyZ2luVHRtXCIgfSxcbiAgICB7IGVuZHBvaW50OiBcImNvbXBhbnlSYXRpb3NcIiwgY29sdW1uS2V5OiBcImViaXRkYU1hcmdpblR0bVwiIH0sXG4gICAgeyBlbmRwb2ludDogXCJjb21wYW55UmF0aW9zXCIsIGNvbHVtbktleTogXCJuZXRQcm9maXRNYXJnaW5UdG1cIiB9LFxuICBdLFxuICBoZWFkZXJJbmZvOiBjcmVhdGVDYWNoZUhlYWRlckluZm8oXCJNYXJnaW5zXCIpLFxuICBjb2x1bW5zOiBbXG4gICAgY29tcGFueVJhdGlvcy5ncm9zc1Byb2ZpdE1hcmdpblR0bShcIm1hcmdpbnNcIiksXG4gICAgY29tcGFueVJhdGlvcy5vcGVyYXRpbmdQcm9maXRNYXJnaW5UdG0oXCJtYXJnaW5zXCIpLFxuICAgIGNvbXBhbnlSYXRpb3MuZWJpdGRhTWFyZ2luVHRtKFwibWFyZ2luc1wiKSxcbiAgICBjb21wYW55UmF0aW9zLm5ldFByb2ZpdE1hcmdpblR0bShcIm1hcmdpbnNcIiksXG4gICAgY29tcGFueVJhdGlvcy5wcmV0YXhQcm9maXRNYXJnaW5UdG0oXCJtYXJnaW5zXCIpLFxuICAgIGNvbXBhbnlSYXRpb3MuY29udGludW91c09wZXJhdGlvbnNQcm9maXRNYXJnaW5UdG0oXCJtYXJnaW5zXCIpLFxuICAgIGNvbXBhbnlSYXRpb3MuYm90dG9tTGluZVByb2ZpdE1hcmdpblR0bShcIm1hcmdpbnNcIiksXG4gICAgY29tcGFueVJhdGlvcy5lYml0TWFyZ2luVHRtKFwibWFyZ2luc1wiKSxcbiAgXSxcbn0pXG5cbmV4cG9ydCB7IG1hcmdpbnMgfVxuIl0sIm5hbWVzIjpbIm1hcmdpbnMiLCJnZW5lcmljVGFibGUiLCJ0YWJsZU5hbWUiLCJ0YWJsZUxhYmVsIiwidGFibGVJY29uIiwiRG9udXRTbWFsbE91dGxpbmVkIiwiZGVmYXVsdFZpc2libGUiLCJlbmRwb2ludCIsImNvbHVtbktleSIsImhlYWRlckluZm8iLCJjcmVhdGVDYWNoZUhlYWRlckluZm8iLCJjb2x1bW5zIiwiY29tcGFueVJhdGlvcyIsImdyb3NzUHJvZml0TWFyZ2luVHRtIiwib3BlcmF0aW5nUHJvZml0TWFyZ2luVHRtIiwiZWJpdGRhTWFyZ2luVHRtIiwibmV0UHJvZml0TWFyZ2luVHRtIiwicHJldGF4UHJvZml0TWFyZ2luVHRtIiwiY29udGludW91c09wZXJhdGlvbnNQcm9maXRNYXJnaW5UdG0iLCJib3R0b21MaW5lUHJvZml0TWFyZ2luVHRtIiwiZWJpdE1hcmdpblR0bSJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQTZCU0E7OztlQUFBQTs7Ozt1QkE3QjBCO1FBQzVCOytCQUN1Qjs4QkFDRDtpQ0FDUztBQUV0QyxNQUFNQSxVQUFVQyxJQUFBQSwwQkFBWSxFQUFDO0lBQzNCQyxXQUFXO0lBQ1hDLFlBQVk7SUFDWkMseUJBQVcscUJBQUNDLHlCQUFrQjtJQUM5QkMsZ0JBQWdCO1FBQ2Q7WUFBRUMsVUFBVTtZQUFpQkMsV0FBVztRQUF1QjtRQUMvRDtZQUFFRCxVQUFVO1lBQWlCQyxXQUFXO1FBQTJCO1FBQ25FO1lBQUVELFVBQVU7WUFBaUJDLFdBQVc7UUFBa0I7UUFDMUQ7WUFBRUQsVUFBVTtZQUFpQkMsV0FBVztRQUFxQjtLQUM5RDtJQUNEQyxZQUFZQyxJQUFBQSxzQ0FBcUIsRUFBQztJQUNsQ0MsU0FBUztRQUNQQyw0QkFBYSxDQUFDQyxvQkFBb0IsQ0FBQztRQUNuQ0QsNEJBQWEsQ0FBQ0Usd0JBQXdCLENBQUM7UUFDdkNGLDRCQUFhLENBQUNHLGVBQWUsQ0FBQztRQUM5QkgsNEJBQWEsQ0FBQ0ksa0JBQWtCLENBQUM7UUFDakNKLDRCQUFhLENBQUNLLHFCQUFxQixDQUFDO1FBQ3BDTCw0QkFBYSxDQUFDTSxtQ0FBbUMsQ0FBQztRQUNsRE4sNEJBQWEsQ0FBQ08seUJBQXlCLENBQUM7UUFDeENQLDRCQUFhLENBQUNRLGFBQWEsQ0FBQztLQUM3QjtBQUNIIn0=