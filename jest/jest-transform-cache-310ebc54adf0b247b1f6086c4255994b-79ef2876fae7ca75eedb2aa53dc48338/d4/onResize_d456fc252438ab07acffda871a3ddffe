4f5fe4a7f2366be429833ad3afb329c8
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return onResize;
    }
});
function onResize() {
    const swiper = this;
    const { params, el } = swiper;
    if (el && el.offsetWidth === 0) return;
    // Breakpoints
    if (params.breakpoints) {
        swiper.setBreakpoint();
    }
    // Save locks
    const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;
    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;
    // Disable locks on resize
    swiper.allowSlideNext = true;
    swiper.allowSlidePrev = true;
    swiper.updateSize();
    swiper.updateSlides();
    swiper.updateSlidesClasses();
    const isVirtualLoop = isVirtual && params.loop;
    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides && !isVirtualLoop) {
        swiper.slideTo(swiper.slides.length - 1, 0, false, true);
    } else {
        if (swiper.params.loop && !isVirtual) {
            swiper.slideToLoop(swiper.realIndex, 0, false, true);
        } else {
            swiper.slideTo(swiper.activeIndex, 0, false, true);
        }
    }
    if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {
        clearTimeout(swiper.autoplay.resizeTimeout);
        swiper.autoplay.resizeTimeout = setTimeout(()=>{
            if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {
                swiper.autoplay.resume();
            }
        }, 500);
    }
    // Return locks after resize
    swiper.allowSlidePrev = allowSlidePrev;
    swiper.allowSlideNext = allowSlideNext;
    if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {
        swiper.checkOverflow();
    }
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9zd2lwZXIvY29yZS9ldmVudHMvb25SZXNpemUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gb25SZXNpemUoKSB7XG4gIGNvbnN0IHN3aXBlciA9IHRoaXM7XG4gIGNvbnN0IHtcbiAgICBwYXJhbXMsXG4gICAgZWxcbiAgfSA9IHN3aXBlcjtcbiAgaWYgKGVsICYmIGVsLm9mZnNldFdpZHRoID09PSAwKSByZXR1cm47XG5cbiAgLy8gQnJlYWtwb2ludHNcbiAgaWYgKHBhcmFtcy5icmVha3BvaW50cykge1xuICAgIHN3aXBlci5zZXRCcmVha3BvaW50KCk7XG4gIH1cblxuICAvLyBTYXZlIGxvY2tzXG4gIGNvbnN0IHtcbiAgICBhbGxvd1NsaWRlTmV4dCxcbiAgICBhbGxvd1NsaWRlUHJldixcbiAgICBzbmFwR3JpZFxuICB9ID0gc3dpcGVyO1xuICBjb25zdCBpc1ZpcnR1YWwgPSBzd2lwZXIudmlydHVhbCAmJiBzd2lwZXIucGFyYW1zLnZpcnR1YWwuZW5hYmxlZDtcblxuICAvLyBEaXNhYmxlIGxvY2tzIG9uIHJlc2l6ZVxuICBzd2lwZXIuYWxsb3dTbGlkZU5leHQgPSB0cnVlO1xuICBzd2lwZXIuYWxsb3dTbGlkZVByZXYgPSB0cnVlO1xuICBzd2lwZXIudXBkYXRlU2l6ZSgpO1xuICBzd2lwZXIudXBkYXRlU2xpZGVzKCk7XG4gIHN3aXBlci51cGRhdGVTbGlkZXNDbGFzc2VzKCk7XG4gIGNvbnN0IGlzVmlydHVhbExvb3AgPSBpc1ZpcnR1YWwgJiYgcGFyYW1zLmxvb3A7XG4gIGlmICgocGFyYW1zLnNsaWRlc1BlclZpZXcgPT09ICdhdXRvJyB8fCBwYXJhbXMuc2xpZGVzUGVyVmlldyA+IDEpICYmIHN3aXBlci5pc0VuZCAmJiAhc3dpcGVyLmlzQmVnaW5uaW5nICYmICFzd2lwZXIucGFyYW1zLmNlbnRlcmVkU2xpZGVzICYmICFpc1ZpcnR1YWxMb29wKSB7XG4gICAgc3dpcGVyLnNsaWRlVG8oc3dpcGVyLnNsaWRlcy5sZW5ndGggLSAxLCAwLCBmYWxzZSwgdHJ1ZSk7XG4gIH0gZWxzZSB7XG4gICAgaWYgKHN3aXBlci5wYXJhbXMubG9vcCAmJiAhaXNWaXJ0dWFsKSB7XG4gICAgICBzd2lwZXIuc2xpZGVUb0xvb3Aoc3dpcGVyLnJlYWxJbmRleCwgMCwgZmFsc2UsIHRydWUpO1xuICAgIH0gZWxzZSB7XG4gICAgICBzd2lwZXIuc2xpZGVUbyhzd2lwZXIuYWN0aXZlSW5kZXgsIDAsIGZhbHNlLCB0cnVlKTtcbiAgICB9XG4gIH1cbiAgaWYgKHN3aXBlci5hdXRvcGxheSAmJiBzd2lwZXIuYXV0b3BsYXkucnVubmluZyAmJiBzd2lwZXIuYXV0b3BsYXkucGF1c2VkKSB7XG4gICAgY2xlYXJUaW1lb3V0KHN3aXBlci5hdXRvcGxheS5yZXNpemVUaW1lb3V0KTtcbiAgICBzd2lwZXIuYXV0b3BsYXkucmVzaXplVGltZW91dCA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgaWYgKHN3aXBlci5hdXRvcGxheSAmJiBzd2lwZXIuYXV0b3BsYXkucnVubmluZyAmJiBzd2lwZXIuYXV0b3BsYXkucGF1c2VkKSB7XG4gICAgICAgIHN3aXBlci5hdXRvcGxheS5yZXN1bWUoKTtcbiAgICAgIH1cbiAgICB9LCA1MDApO1xuICB9XG4gIC8vIFJldHVybiBsb2NrcyBhZnRlciByZXNpemVcbiAgc3dpcGVyLmFsbG93U2xpZGVQcmV2ID0gYWxsb3dTbGlkZVByZXY7XG4gIHN3aXBlci5hbGxvd1NsaWRlTmV4dCA9IGFsbG93U2xpZGVOZXh0O1xuICBpZiAoc3dpcGVyLnBhcmFtcy53YXRjaE92ZXJmbG93ICYmIHNuYXBHcmlkICE9PSBzd2lwZXIuc25hcEdyaWQpIHtcbiAgICBzd2lwZXIuY2hlY2tPdmVyZmxvdygpO1xuICB9XG59Il0sIm5hbWVzIjpbIm9uUmVzaXplIiwic3dpcGVyIiwicGFyYW1zIiwiZWwiLCJvZmZzZXRXaWR0aCIsImJyZWFrcG9pbnRzIiwic2V0QnJlYWtwb2ludCIsImFsbG93U2xpZGVOZXh0IiwiYWxsb3dTbGlkZVByZXYiLCJzbmFwR3JpZCIsImlzVmlydHVhbCIsInZpcnR1YWwiLCJlbmFibGVkIiwidXBkYXRlU2l6ZSIsInVwZGF0ZVNsaWRlcyIsInVwZGF0ZVNsaWRlc0NsYXNzZXMiLCJpc1ZpcnR1YWxMb29wIiwibG9vcCIsInNsaWRlc1BlclZpZXciLCJpc0VuZCIsImlzQmVnaW5uaW5nIiwiY2VudGVyZWRTbGlkZXMiLCJzbGlkZVRvIiwic2xpZGVzIiwibGVuZ3RoIiwic2xpZGVUb0xvb3AiLCJyZWFsSW5kZXgiLCJhY3RpdmVJbmRleCIsImF1dG9wbGF5IiwicnVubmluZyIsInBhdXNlZCIsImNsZWFyVGltZW91dCIsInJlc2l6ZVRpbWVvdXQiLCJzZXRUaW1lb3V0IiwicmVzdW1lIiwid2F0Y2hPdmVyZmxvdyIsImNoZWNrT3ZlcmZsb3ciXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQUFBOzs7ZUFBd0JBOzs7QUFBVCxTQUFTQTtJQUN0QixNQUFNQyxTQUFTLElBQUk7SUFDbkIsTUFBTSxFQUNKQyxNQUFNLEVBQ05DLEVBQUUsRUFDSCxHQUFHRjtJQUNKLElBQUlFLE1BQU1BLEdBQUdDLFdBQVcsS0FBSyxHQUFHO0lBRWhDLGNBQWM7SUFDZCxJQUFJRixPQUFPRyxXQUFXLEVBQUU7UUFDdEJKLE9BQU9LLGFBQWE7SUFDdEI7SUFFQSxhQUFhO0lBQ2IsTUFBTSxFQUNKQyxjQUFjLEVBQ2RDLGNBQWMsRUFDZEMsUUFBUSxFQUNULEdBQUdSO0lBQ0osTUFBTVMsWUFBWVQsT0FBT1UsT0FBTyxJQUFJVixPQUFPQyxNQUFNLENBQUNTLE9BQU8sQ0FBQ0MsT0FBTztJQUVqRSwwQkFBMEI7SUFDMUJYLE9BQU9NLGNBQWMsR0FBRztJQUN4Qk4sT0FBT08sY0FBYyxHQUFHO0lBQ3hCUCxPQUFPWSxVQUFVO0lBQ2pCWixPQUFPYSxZQUFZO0lBQ25CYixPQUFPYyxtQkFBbUI7SUFDMUIsTUFBTUMsZ0JBQWdCTixhQUFhUixPQUFPZSxJQUFJO0lBQzlDLElBQUksQUFBQ2YsQ0FBQUEsT0FBT2dCLGFBQWEsS0FBSyxVQUFVaEIsT0FBT2dCLGFBQWEsR0FBRyxDQUFBLEtBQU1qQixPQUFPa0IsS0FBSyxJQUFJLENBQUNsQixPQUFPbUIsV0FBVyxJQUFJLENBQUNuQixPQUFPQyxNQUFNLENBQUNtQixjQUFjLElBQUksQ0FBQ0wsZUFBZTtRQUMzSmYsT0FBT3FCLE9BQU8sQ0FBQ3JCLE9BQU9zQixNQUFNLENBQUNDLE1BQU0sR0FBRyxHQUFHLEdBQUcsT0FBTztJQUNyRCxPQUFPO1FBQ0wsSUFBSXZCLE9BQU9DLE1BQU0sQ0FBQ2UsSUFBSSxJQUFJLENBQUNQLFdBQVc7WUFDcENULE9BQU93QixXQUFXLENBQUN4QixPQUFPeUIsU0FBUyxFQUFFLEdBQUcsT0FBTztRQUNqRCxPQUFPO1lBQ0x6QixPQUFPcUIsT0FBTyxDQUFDckIsT0FBTzBCLFdBQVcsRUFBRSxHQUFHLE9BQU87UUFDL0M7SUFDRjtJQUNBLElBQUkxQixPQUFPMkIsUUFBUSxJQUFJM0IsT0FBTzJCLFFBQVEsQ0FBQ0MsT0FBTyxJQUFJNUIsT0FBTzJCLFFBQVEsQ0FBQ0UsTUFBTSxFQUFFO1FBQ3hFQyxhQUFhOUIsT0FBTzJCLFFBQVEsQ0FBQ0ksYUFBYTtRQUMxQy9CLE9BQU8yQixRQUFRLENBQUNJLGFBQWEsR0FBR0MsV0FBVztZQUN6QyxJQUFJaEMsT0FBTzJCLFFBQVEsSUFBSTNCLE9BQU8yQixRQUFRLENBQUNDLE9BQU8sSUFBSTVCLE9BQU8yQixRQUFRLENBQUNFLE1BQU0sRUFBRTtnQkFDeEU3QixPQUFPMkIsUUFBUSxDQUFDTSxNQUFNO1lBQ3hCO1FBQ0YsR0FBRztJQUNMO0lBQ0EsNEJBQTRCO0lBQzVCakMsT0FBT08sY0FBYyxHQUFHQTtJQUN4QlAsT0FBT00sY0FBYyxHQUFHQTtJQUN4QixJQUFJTixPQUFPQyxNQUFNLENBQUNpQyxhQUFhLElBQUkxQixhQUFhUixPQUFPUSxRQUFRLEVBQUU7UUFDL0RSLE9BQU9tQyxhQUFhO0lBQ3RCO0FBQ0YifQ==