{"version":3,"sources":["../src/authorization.ts"],"sourcesContent":["import type {\n  CheckAuthorizationWithCustomPermissions,\n  OrganizationCustomPermissionKey,\n  OrganizationCustomRoleKey,\n  ReverificationConfig,\n  SessionVerificationLevel,\n  SessionVerificationTypes,\n} from '@clerk/types';\n\ntype TypesToConfig = Record<SessionVerificationTypes, Exclude<ReverificationConfig, SessionVerificationTypes>>;\ntype AuthorizationOptions = {\n  userId: string | null | undefined;\n  orgId: string | null | undefined;\n  orgRole: string | null | undefined;\n  orgPermissions: string[] | null | undefined;\n  factorVerificationAge: [number, number] | null;\n};\n\ntype CheckOrgAuthorization = (\n  params: { role?: OrganizationCustomRoleKey; permission?: OrganizationCustomPermissionKey },\n  { orgId, orgRole, orgPermissions }: AuthorizationOptions,\n) => boolean | null;\n\ntype CheckStepUpAuthorization = (\n  params: {\n    reverification?: ReverificationConfig;\n  },\n  { factorVerificationAge }: AuthorizationOptions,\n) => boolean | null;\n\nconst TYPES_TO_OBJECTS: TypesToConfig = {\n  strict_mfa: {\n    afterMinutes: 10,\n    level: 'multi_factor',\n  },\n  strict: {\n    afterMinutes: 10,\n    level: 'second_factor',\n  },\n  moderate: {\n    afterMinutes: 60,\n    level: 'second_factor',\n  },\n  lax: {\n    afterMinutes: 1_440,\n    level: 'second_factor',\n  },\n};\n\nconst ALLOWED_LEVELS = new Set<SessionVerificationLevel>(['first_factor', 'second_factor', 'multi_factor']);\n\nconst ALLOWED_TYPES = new Set<SessionVerificationTypes>(['strict_mfa', 'strict', 'moderate', 'lax']);\n\n// Helper functions\nconst isValidMaxAge = (maxAge: any) => typeof maxAge === 'number' && maxAge > 0;\nconst isValidLevel = (level: any) => ALLOWED_LEVELS.has(level);\nconst isValidVerificationType = (type: any) => ALLOWED_TYPES.has(type);\n\n/**\n * Checks if a user has the required organization-level authorization.\n * Verifies if the user has the specified role or permission within their organization.\n * @returns null, if unable to determine due to missing data or unspecified role/permission.\n */\nconst checkOrgAuthorization: CheckOrgAuthorization = (params, options) => {\n  const { orgId, orgRole, orgPermissions } = options;\n  if (!params.role && !params.permission) {\n    return null;\n  }\n  if (!orgId || !orgRole || !orgPermissions) {\n    return null;\n  }\n\n  if (params.permission) {\n    return orgPermissions.includes(params.permission);\n  }\n  if (params.role) {\n    return orgRole === params.role;\n  }\n  return null;\n};\n\nconst validateReverificationConfig = (config: ReverificationConfig | undefined | null) => {\n  if (!config) {\n    return false;\n  }\n\n  const convertConfigToObject = (config: ReverificationConfig) => {\n    if (typeof config === 'string') {\n      return TYPES_TO_OBJECTS[config];\n    }\n    return config;\n  };\n\n  const isValidStringValue = typeof config === 'string' && isValidVerificationType(config);\n  const isValidObjectValue =\n    typeof config === 'object' && isValidLevel(config.level) && isValidMaxAge(config.afterMinutes);\n\n  if (isValidStringValue || isValidObjectValue) {\n    return convertConfigToObject.bind(null, config);\n  }\n\n  return false;\n};\n\n/**\n * Evaluates if the user meets step-up authentication requirements.\n * Compares the user's factor verification ages against the specified maxAge.\n * Handles different verification levels (first factor, second factor, multi-factor).\n * @returns null, if requirements or verification data are missing.\n */\nconst checkStepUpAuthorization: CheckStepUpAuthorization = (params, { factorVerificationAge }) => {\n  if (!params.reverification || !factorVerificationAge) {\n    return null;\n  }\n\n  const isValidReverification = validateReverificationConfig(params.reverification);\n  if (!isValidReverification) {\n    return null;\n  }\n\n  const { level, afterMinutes } = isValidReverification();\n  const [factor1Age, factor2Age] = factorVerificationAge;\n\n  // -1 indicates the factor group (1fa,2fa) is not enabled\n  // -1 for 1fa is not a valid scenario, but we need to make sure we handle it properly\n  const isValidFactor1 = factor1Age !== -1 ? afterMinutes > factor1Age : null;\n  const isValidFactor2 = factor2Age !== -1 ? afterMinutes > factor2Age : null;\n\n  switch (level) {\n    case 'first_factor':\n      return isValidFactor1;\n    case 'second_factor':\n      return factor2Age !== -1 ? isValidFactor2 : isValidFactor1;\n    case 'multi_factor':\n      return factor2Age === -1 ? isValidFactor1 : isValidFactor1 && isValidFactor2;\n  }\n};\n\n/**\n * Creates a function for comprehensive user authorization checks.\n * Combines organization-level and step-up authentication checks.\n * The returned function authorizes if both checks pass, or if at least one passes\n * when the other is indeterminate. Fails if userId is missing.\n */\nconst createCheckAuthorization = (options: AuthorizationOptions): CheckAuthorizationWithCustomPermissions => {\n  return (params): boolean => {\n    if (!options.userId) {\n      return false;\n    }\n\n    const orgAuthorization = checkOrgAuthorization(params, options);\n    const stepUpAuthorization = checkStepUpAuthorization(params, options);\n\n    if ([orgAuthorization, stepUpAuthorization].some(a => a === null)) {\n      return [orgAuthorization, stepUpAuthorization].some(a => a === true);\n    }\n\n    return [orgAuthorization, stepUpAuthorization].every(a => a === true);\n  };\n};\n\nexport { createCheckAuthorization, validateReverificationConfig };\n"],"names":["authorization_exports","__export","createCheckAuthorization","validateReverificationConfig","module","exports","__toCommonJS","TYPES_TO_OBJECTS","strict_mfa","afterMinutes","level","strict","moderate","lax","ALLOWED_LEVELS","Set","ALLOWED_TYPES","isValidMaxAge","maxAge","isValidLevel","has","isValidVerificationType","type","checkOrgAuthorization","params","options","orgId","orgRole","orgPermissions","role","permission","includes","config","convertConfigToObject","isValidStringValue","isValidObjectValue","bind","checkStepUpAuthorization","factorVerificationAge","reverification","isValidReverification","factor1Age","factor2Age","isValidFactor1","isValidFactor2","userId","orgAuthorization","stepUpAuthorization","some","a","every"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}