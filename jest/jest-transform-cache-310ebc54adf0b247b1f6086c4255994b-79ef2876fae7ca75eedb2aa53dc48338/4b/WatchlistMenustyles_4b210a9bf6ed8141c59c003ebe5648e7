f7bbd84a037b8af4e55fa5fe254bbf9b
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    PopperStyled: function() {
        return PopperStyled;
    },
    WatchlistListContainer: function() {
        return WatchlistListContainer;
    },
    WatchlistMenuContainer: function() {
        return WatchlistMenuContainer;
    }
});
const _theme = require("@rp/react/theme");
const _core = require("@rp/react/web/mui/core");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
const WatchlistMenuContainer = (0, _theme.styled)(_core.Paper, {
    name: "WatchlistPopper"
})(({ theme })=>({
        backgroundColor: theme.palette.grey[700],
        width: 250,
        display: "flex",
        flexDirection: "column",
        "& > button": {
            textTransform: "none",
            color: "white",
            borderTop: `1px solid ${theme.palette.grey[600]}`,
            borderRadius: 0,
            fontSize: theme.typography.body1.fontSize,
            padding: theme.spacing(1.5)
        }
    }));
const PopperStyled = (0, _theme.styled)(_core.Popover, {
    name: "PopperWatchlistMenu",
    shouldForwardProp: (prop)=>prop !== "zIndex"
})(({ theme, zIndex = 10 })=>({
        zIndex,
        paddingRight: theme.spacing(4)
    }));
const WatchlistListContainer = (0, _theme.styled)("div", {
    name: "WatchlistListContainer"
})(({ theme })=>({
        display: "flex",
        flexDirection: "column",
        width: "100%",
        "& .MuiOutlinedInput-root": {
            backgroundColor: theme.palette.grey[500],
            paddingLeft: theme.spacing(1.25),
            margin: `${theme.spacing(2)} ${theme.spacing(1)} 0px`,
            "& svg": {
                color: theme.palette.grey[600],
                height: theme.spacing(2.5),
                width: theme.spacing(2.5)
            }
        },
        "& input": {
            height: theme.spacing(4),
            padding: `0px ${theme.spacing(1.5)} 1px ${theme.spacing(1)}`
        },
        "& li": {
            margin: `${theme.spacing(1)} ${theme.spacing(1.5)}`,
            fontSize: theme.typography.body1.fontSize,
            cursor: "pointer",
            overflowWrap: "break-word",
            display: "-webkit-box",
            overflowY: "hidden",
            WebkitBoxOrient: "vertical",
            WebkitLineClamp: 2,
            "&:hover": {
                backgroundColor: theme.palette.grey[500]
            }
        },
        "& ul": _object_spread({
            padding: 0,
            listStyle: "none",
            margin: 0,
            marginTop: theme.spacing(1),
            maxHeight: theme.spacing(3 * 8),
            overflowY: "auto"
        }, theme.scrollbarStyles)
    }));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9jb21wb3NpdGUtY29tcG9uZW50cy9zcmMvV2F0Y2hsaXN0TWVudS9XYXRjaGxpc3RNZW51LnN0eWxlcy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzdHlsZWQgfSBmcm9tIFwiQHJwL3JlYWN0L3RoZW1lXCJcbmltcG9ydCB7IFBhcGVyLCBQb3BvdmVyIH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvbXVpL2NvcmVcIlxuXG5leHBvcnQgY29uc3QgV2F0Y2hsaXN0TWVudUNvbnRhaW5lciA9IHN0eWxlZChQYXBlciwgeyBuYW1lOiBcIldhdGNobGlzdFBvcHBlclwiIH0pKCh7IHRoZW1lIH0pID0+ICh7XG4gIGJhY2tncm91bmRDb2xvcjogdGhlbWUucGFsZXR0ZS5ncmV5WzcwMF0sXG4gIHdpZHRoOiAyNTAsXG4gIGRpc3BsYXk6IFwiZmxleFwiLFxuICBmbGV4RGlyZWN0aW9uOiBcImNvbHVtblwiLFxuXG4gIFwiJiA+IGJ1dHRvblwiOiB7XG4gICAgdGV4dFRyYW5zZm9ybTogXCJub25lXCIsXG4gICAgY29sb3I6IFwid2hpdGVcIixcbiAgICBib3JkZXJUb3A6IGAxcHggc29saWQgJHt0aGVtZS5wYWxldHRlLmdyZXlbNjAwXX1gLFxuICAgIGJvcmRlclJhZGl1czogMCxcbiAgICBmb250U2l6ZTogdGhlbWUudHlwb2dyYXBoeS5ib2R5MS5mb250U2l6ZSxcbiAgICBwYWRkaW5nOiB0aGVtZS5zcGFjaW5nKDEuNSksXG4gIH0sXG59KSlcblxuZXhwb3J0IGNvbnN0IFBvcHBlclN0eWxlZCA9IHN0eWxlZChQb3BvdmVyLCB7XG4gIG5hbWU6IFwiUG9wcGVyV2F0Y2hsaXN0TWVudVwiLFxuICBzaG91bGRGb3J3YXJkUHJvcDogcHJvcCA9PiBwcm9wICE9PSBcInpJbmRleFwiLFxufSk8eyB6SW5kZXg/OiBudW1iZXIgfT4oKHsgdGhlbWUsIHpJbmRleCA9IDEwIH0pID0+ICh7XG4gIHpJbmRleCxcbiAgcGFkZGluZ1JpZ2h0OiB0aGVtZS5zcGFjaW5nKDQpLFxufSkpXG5cbmV4cG9ydCBjb25zdCBXYXRjaGxpc3RMaXN0Q29udGFpbmVyID0gc3R5bGVkKFwiZGl2XCIsIHsgbmFtZTogXCJXYXRjaGxpc3RMaXN0Q29udGFpbmVyXCIgfSkoXG4gICh7IHRoZW1lIH0pID0+ICh7XG4gICAgZGlzcGxheTogXCJmbGV4XCIsXG4gICAgZmxleERpcmVjdGlvbjogXCJjb2x1bW5cIixcbiAgICB3aWR0aDogXCIxMDAlXCIsXG5cbiAgICBcIiYgLk11aU91dGxpbmVkSW5wdXQtcm9vdFwiOiB7XG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLnBhbGV0dGUuZ3JleVs1MDBdLFxuICAgICAgcGFkZGluZ0xlZnQ6IHRoZW1lLnNwYWNpbmcoMS4yNSksXG4gICAgICBtYXJnaW46IGAke3RoZW1lLnNwYWNpbmcoMil9ICR7dGhlbWUuc3BhY2luZygxKX0gMHB4YCxcblxuICAgICAgXCImIHN2Z1wiOiB7XG4gICAgICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLmdyZXlbNjAwXSxcbiAgICAgICAgaGVpZ2h0OiB0aGVtZS5zcGFjaW5nKDIuNSksXG4gICAgICAgIHdpZHRoOiB0aGVtZS5zcGFjaW5nKDIuNSksXG4gICAgICB9LFxuICAgIH0sXG5cbiAgICBcIiYgaW5wdXRcIjoge1xuICAgICAgaGVpZ2h0OiB0aGVtZS5zcGFjaW5nKDQpLFxuICAgICAgcGFkZGluZzogYDBweCAke3RoZW1lLnNwYWNpbmcoMS41KX0gMXB4ICR7dGhlbWUuc3BhY2luZygxKX1gLFxuICAgIH0sXG5cbiAgICBcIiYgbGlcIjoge1xuICAgICAgbWFyZ2luOiBgJHt0aGVtZS5zcGFjaW5nKDEpfSAke3RoZW1lLnNwYWNpbmcoMS41KX1gLFxuICAgICAgZm9udFNpemU6IHRoZW1lLnR5cG9ncmFwaHkuYm9keTEuZm9udFNpemUsXG4gICAgICBjdXJzb3I6IFwicG9pbnRlclwiLFxuICAgICAgb3ZlcmZsb3dXcmFwOiBcImJyZWFrLXdvcmRcIixcbiAgICAgIGRpc3BsYXk6IFwiLXdlYmtpdC1ib3hcIixcbiAgICAgIG92ZXJmbG93WTogXCJoaWRkZW5cIixcbiAgICAgIFdlYmtpdEJveE9yaWVudDogXCJ2ZXJ0aWNhbFwiLFxuICAgICAgV2Via2l0TGluZUNsYW1wOiAyLFxuICAgICAgXCImOmhvdmVyXCI6IHtcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiB0aGVtZS5wYWxldHRlLmdyZXlbNTAwXSxcbiAgICAgIH0sXG4gICAgfSxcblxuICAgIFwiJiB1bFwiOiB7XG4gICAgICBwYWRkaW5nOiAwLFxuICAgICAgbGlzdFN0eWxlOiBcIm5vbmVcIixcbiAgICAgIG1hcmdpbjogMCxcbiAgICAgIG1hcmdpblRvcDogdGhlbWUuc3BhY2luZygxKSxcbiAgICAgIG1heEhlaWdodDogdGhlbWUuc3BhY2luZygzICogOCksXG4gICAgICBvdmVyZmxvd1k6IFwiYXV0b1wiLFxuICAgICAgLi4udGhlbWUuc2Nyb2xsYmFyU3R5bGVzLFxuICAgIH0sXG4gIH0pLFxuKVxuIl0sIm5hbWVzIjpbIlBvcHBlclN0eWxlZCIsIldhdGNobGlzdExpc3RDb250YWluZXIiLCJXYXRjaGxpc3RNZW51Q29udGFpbmVyIiwic3R5bGVkIiwiUGFwZXIiLCJuYW1lIiwidGhlbWUiLCJiYWNrZ3JvdW5kQ29sb3IiLCJwYWxldHRlIiwiZ3JleSIsIndpZHRoIiwiZGlzcGxheSIsImZsZXhEaXJlY3Rpb24iLCJ0ZXh0VHJhbnNmb3JtIiwiY29sb3IiLCJib3JkZXJUb3AiLCJib3JkZXJSYWRpdXMiLCJmb250U2l6ZSIsInR5cG9ncmFwaHkiLCJib2R5MSIsInBhZGRpbmciLCJzcGFjaW5nIiwiUG9wb3ZlciIsInNob3VsZEZvcndhcmRQcm9wIiwicHJvcCIsInpJbmRleCIsInBhZGRpbmdSaWdodCIsInBhZGRpbmdMZWZ0IiwibWFyZ2luIiwiaGVpZ2h0IiwiY3Vyc29yIiwib3ZlcmZsb3dXcmFwIiwib3ZlcmZsb3dZIiwiV2Via2l0Qm94T3JpZW50IiwiV2Via2l0TGluZUNsYW1wIiwibGlzdFN0eWxlIiwibWFyZ2luVG9wIiwibWF4SGVpZ2h0Iiwic2Nyb2xsYmFyU3R5bGVzIl0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0lBbUJhQSxZQUFZO2VBQVpBOztJQVFBQyxzQkFBc0I7ZUFBdEJBOztJQXhCQUMsc0JBQXNCO2VBQXRCQTs7O3VCQUhVO3NCQUNROzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUV4QixNQUFNQSx5QkFBeUJDLElBQUFBLGFBQU0sRUFBQ0MsV0FBSyxFQUFFO0lBQUVDLE1BQU07QUFBa0IsR0FBRyxDQUFDLEVBQUVDLEtBQUssRUFBRSxHQUFNLENBQUE7UUFDL0ZDLGlCQUFpQkQsTUFBTUUsT0FBTyxDQUFDQyxJQUFJLENBQUMsSUFBSTtRQUN4Q0MsT0FBTztRQUNQQyxTQUFTO1FBQ1RDLGVBQWU7UUFFZixjQUFjO1lBQ1pDLGVBQWU7WUFDZkMsT0FBTztZQUNQQyxXQUFXLENBQUMsVUFBVSxFQUFFVCxNQUFNRSxPQUFPLENBQUNDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUNqRE8sY0FBYztZQUNkQyxVQUFVWCxNQUFNWSxVQUFVLENBQUNDLEtBQUssQ0FBQ0YsUUFBUTtZQUN6Q0csU0FBU2QsTUFBTWUsT0FBTyxDQUFDO1FBQ3pCO0lBQ0YsQ0FBQTtBQUVPLE1BQU1yQixlQUFlRyxJQUFBQSxhQUFNLEVBQUNtQixhQUFPLEVBQUU7SUFDMUNqQixNQUFNO0lBQ05rQixtQkFBbUJDLENBQUFBLE9BQVFBLFNBQVM7QUFDdEMsR0FBd0IsQ0FBQyxFQUFFbEIsS0FBSyxFQUFFbUIsU0FBUyxFQUFFLEVBQUUsR0FBTSxDQUFBO1FBQ25EQTtRQUNBQyxjQUFjcEIsTUFBTWUsT0FBTyxDQUFDO0lBQzlCLENBQUE7QUFFTyxNQUFNcEIseUJBQXlCRSxJQUFBQSxhQUFNLEVBQUMsT0FBTztJQUFFRSxNQUFNO0FBQXlCLEdBQ25GLENBQUMsRUFBRUMsS0FBSyxFQUFFLEdBQU0sQ0FBQTtRQUNkSyxTQUFTO1FBQ1RDLGVBQWU7UUFDZkYsT0FBTztRQUVQLDRCQUE0QjtZQUMxQkgsaUJBQWlCRCxNQUFNRSxPQUFPLENBQUNDLElBQUksQ0FBQyxJQUFJO1lBQ3hDa0IsYUFBYXJCLE1BQU1lLE9BQU8sQ0FBQztZQUMzQk8sUUFBUSxDQUFDLEVBQUV0QixNQUFNZSxPQUFPLENBQUMsR0FBRyxDQUFDLEVBQUVmLE1BQU1lLE9BQU8sQ0FBQyxHQUFHLElBQUksQ0FBQztZQUVyRCxTQUFTO2dCQUNQUCxPQUFPUixNQUFNRSxPQUFPLENBQUNDLElBQUksQ0FBQyxJQUFJO2dCQUM5Qm9CLFFBQVF2QixNQUFNZSxPQUFPLENBQUM7Z0JBQ3RCWCxPQUFPSixNQUFNZSxPQUFPLENBQUM7WUFDdkI7UUFDRjtRQUVBLFdBQVc7WUFDVFEsUUFBUXZCLE1BQU1lLE9BQU8sQ0FBQztZQUN0QkQsU0FBUyxDQUFDLElBQUksRUFBRWQsTUFBTWUsT0FBTyxDQUFDLEtBQUssS0FBSyxFQUFFZixNQUFNZSxPQUFPLENBQUMsR0FBRyxDQUFDO1FBQzlEO1FBRUEsUUFBUTtZQUNOTyxRQUFRLENBQUMsRUFBRXRCLE1BQU1lLE9BQU8sQ0FBQyxHQUFHLENBQUMsRUFBRWYsTUFBTWUsT0FBTyxDQUFDLEtBQUssQ0FBQztZQUNuREosVUFBVVgsTUFBTVksVUFBVSxDQUFDQyxLQUFLLENBQUNGLFFBQVE7WUFDekNhLFFBQVE7WUFDUkMsY0FBYztZQUNkcEIsU0FBUztZQUNUcUIsV0FBVztZQUNYQyxpQkFBaUI7WUFDakJDLGlCQUFpQjtZQUNqQixXQUFXO2dCQUNUM0IsaUJBQWlCRCxNQUFNRSxPQUFPLENBQUNDLElBQUksQ0FBQyxJQUFJO1lBQzFDO1FBQ0Y7UUFFQSxRQUFRO1lBQ05XLFNBQVM7WUFDVGUsV0FBVztZQUNYUCxRQUFRO1lBQ1JRLFdBQVc5QixNQUFNZSxPQUFPLENBQUM7WUFDekJnQixXQUFXL0IsTUFBTWUsT0FBTyxDQUFDLElBQUk7WUFDN0JXLFdBQVc7V0FDUjFCLE1BQU1nQyxlQUFlO0lBRTVCLENBQUEifQ==