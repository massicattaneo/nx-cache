bf469aac235e094e63f0bc4d09e84e63
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "targetLow", {
    enumerable: true,
    get: function() {
        return targetLow;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _WatchlistDataTablePriceCell = require("../../WatchlistDataTableCells/WatchlistDataTablePriceCell");
const _genericColumn = require("../../genericColumn");
function targetLow(tableName) {
    const title = "Target Low";
    return (0, _genericColumn.genericColumn)({
        endpoint: "companyPriceTarget",
        columnKeys: [
            "targetLow"
        ],
        size: 110,
        title,
        enableSorting: true,
        enableHiding: true,
        tooltip: "Shows the downside risk or pessimistic broker/analysts expectations.",
        extraFinanceData: (entityIds)=>({
                companyCurrency: {
                    entityIds
                }
            }),
        cell: (info)=>{
            var _info_row_original_financialData_companyCurrency_data, _info_row_original_financialData_companyCurrency, _info_row_original_financialData_companyPriceTarget_data, _info_row_original_financialData_companyPriceTarget;
            const currency = (_info_row_original_financialData_companyCurrency = info.row.original.financialData.companyCurrency) === null || _info_row_original_financialData_companyCurrency === void 0 ? void 0 : (_info_row_original_financialData_companyCurrency_data = _info_row_original_financialData_companyCurrency.data) === null || _info_row_original_financialData_companyCurrency_data === void 0 ? void 0 : _info_row_original_financialData_companyCurrency_data.tradingCurrency;
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_WatchlistDataTablePriceCell.WatchlistDataTablePriceCell, {
                queryResult: info.row.original.financialData.companyPriceTarget,
                tooltip: "Explain the Target Low",
                currency: currency,
                onClick: ()=>{
                    var _info_row_original_financialData_companyPriceTarget_data, _info_row_original_financialData_companyPriceTarget, _info_row_original_onChatWithCell, _info_row_original;
                    (_info_row_original_onChatWithCell = (_info_row_original = info.row.original).onChatWithCell) === null || _info_row_original_onChatWithCell === void 0 ? void 0 : _info_row_original_onChatWithCell.call(_info_row_original, {
                        prompt: `Explain how recent market trends could contribute to ${info.row.original.entityInfo.name} bear-case scenario, potentially resulting in a target low.`,
                        value: (_info_row_original_financialData_companyPriceTarget = info.row.original.financialData.companyPriceTarget) === null || _info_row_original_financialData_companyPriceTarget === void 0 ? void 0 : (_info_row_original_financialData_companyPriceTarget_data = _info_row_original_financialData_companyPriceTarget.data) === null || _info_row_original_financialData_companyPriceTarget_data === void 0 ? void 0 : _info_row_original_financialData_companyPriceTarget_data.targetLow,
                        entityInfo: info.row.original.entityInfo,
                        columnName: `${tableName}: ${title}`
                    });
                },
                value: (_info_row_original_financialData_companyPriceTarget = info.row.original.financialData.companyPriceTarget) === null || _info_row_original_financialData_companyPriceTarget === void 0 ? void 0 : (_info_row_original_financialData_companyPriceTarget_data = _info_row_original_financialData_companyPriceTarget.data) === null || _info_row_original_financialData_companyPriceTarget_data === void 0 ? void 0 : _info_row_original_financialData_companyPriceTarget_data.targetLow
            });
        }
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL3dhdGNobGlzdHMvc3JjL2xpYi9XYXRjaGxpc3REYXRhVGFicy9lbmRwb2ludHMvY29tcGFueVByaWNlVGFyZ2V0L3RhcmdldExvdy50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgV2F0Y2hsaXN0RGF0YVRhYmxlUHJpY2VDZWxsIH0gZnJvbSBcIi4uLy4uL1dhdGNobGlzdERhdGFUYWJsZUNlbGxzL1dhdGNobGlzdERhdGFUYWJsZVByaWNlQ2VsbFwiXG5pbXBvcnQgeyBnZW5lcmljQ29sdW1uIH0gZnJvbSBcIi4uLy4uL2dlbmVyaWNDb2x1bW5cIlxuXG5mdW5jdGlvbiB0YXJnZXRMb3codGFibGVOYW1lOiBzdHJpbmcpIHtcbiAgY29uc3QgdGl0bGUgPSBcIlRhcmdldCBMb3dcIlxuICByZXR1cm4gZ2VuZXJpY0NvbHVtbih7XG4gICAgZW5kcG9pbnQ6IFwiY29tcGFueVByaWNlVGFyZ2V0XCIsXG4gICAgY29sdW1uS2V5czogW1widGFyZ2V0TG93XCJdLFxuICAgIHNpemU6IDExMCxcbiAgICB0aXRsZSxcbiAgICBlbmFibGVTb3J0aW5nOiB0cnVlLFxuICAgIGVuYWJsZUhpZGluZzogdHJ1ZSxcbiAgICB0b29sdGlwOiBcIlNob3dzIHRoZSBkb3duc2lkZSByaXNrIG9yIHBlc3NpbWlzdGljIGJyb2tlci9hbmFseXN0cyBleHBlY3RhdGlvbnMuXCIsXG4gICAgZXh0cmFGaW5hbmNlRGF0YTogZW50aXR5SWRzID0+ICh7IGNvbXBhbnlDdXJyZW5jeTogeyBlbnRpdHlJZHMgfSB9KSxcbiAgICBjZWxsOiBpbmZvID0+IHtcbiAgICAgIGNvbnN0IGN1cnJlbmN5ID0gaW5mby5yb3cub3JpZ2luYWwuZmluYW5jaWFsRGF0YS5jb21wYW55Q3VycmVuY3k/LmRhdGE/LnRyYWRpbmdDdXJyZW5jeVxuICAgICAgcmV0dXJuIChcbiAgICAgICAgPFdhdGNobGlzdERhdGFUYWJsZVByaWNlQ2VsbFxuICAgICAgICAgIHF1ZXJ5UmVzdWx0PXtpbmZvLnJvdy5vcmlnaW5hbC5maW5hbmNpYWxEYXRhLmNvbXBhbnlQcmljZVRhcmdldH1cbiAgICAgICAgICB0b29sdGlwPXtcIkV4cGxhaW4gdGhlIFRhcmdldCBMb3dcIn1cbiAgICAgICAgICBjdXJyZW5jeT17Y3VycmVuY3l9XG4gICAgICAgICAgb25DbGljaz17KCkgPT4ge1xuICAgICAgICAgICAgaW5mby5yb3cub3JpZ2luYWwub25DaGF0V2l0aENlbGw/Lih7XG4gICAgICAgICAgICAgIHByb21wdDogYEV4cGxhaW4gaG93IHJlY2VudCBtYXJrZXQgdHJlbmRzIGNvdWxkIGNvbnRyaWJ1dGUgdG8gJHtpbmZvLnJvdy5vcmlnaW5hbC5lbnRpdHlJbmZvLm5hbWV9IGJlYXItY2FzZSBzY2VuYXJpbywgcG90ZW50aWFsbHkgcmVzdWx0aW5nIGluIGEgdGFyZ2V0IGxvdy5gLFxuICAgICAgICAgICAgICB2YWx1ZTogaW5mby5yb3cub3JpZ2luYWwuZmluYW5jaWFsRGF0YS5jb21wYW55UHJpY2VUYXJnZXQ/LmRhdGE/LnRhcmdldExvdyxcbiAgICAgICAgICAgICAgZW50aXR5SW5mbzogaW5mby5yb3cub3JpZ2luYWwuZW50aXR5SW5mbyxcbiAgICAgICAgICAgICAgY29sdW1uTmFtZTogYCR7dGFibGVOYW1lfTogJHt0aXRsZX1gLFxuICAgICAgICAgICAgfSlcbiAgICAgICAgICB9fVxuICAgICAgICAgIHZhbHVlPXtpbmZvLnJvdy5vcmlnaW5hbC5maW5hbmNpYWxEYXRhLmNvbXBhbnlQcmljZVRhcmdldD8uZGF0YT8udGFyZ2V0TG93fVxuICAgICAgICAvPlxuICAgICAgKVxuICAgIH0sXG4gIH0pXG59XG5cbmV4cG9ydCB7IHRhcmdldExvdyB9XG4iXSwibmFtZXMiOlsidGFyZ2V0TG93IiwidGFibGVOYW1lIiwidGl0bGUiLCJnZW5lcmljQ29sdW1uIiwiZW5kcG9pbnQiLCJjb2x1bW5LZXlzIiwic2l6ZSIsImVuYWJsZVNvcnRpbmciLCJlbmFibGVIaWRpbmciLCJ0b29sdGlwIiwiZXh0cmFGaW5hbmNlRGF0YSIsImVudGl0eUlkcyIsImNvbXBhbnlDdXJyZW5jeSIsImNlbGwiLCJpbmZvIiwiY3VycmVuY3kiLCJyb3ciLCJvcmlnaW5hbCIsImZpbmFuY2lhbERhdGEiLCJkYXRhIiwidHJhZGluZ0N1cnJlbmN5IiwiV2F0Y2hsaXN0RGF0YVRhYmxlUHJpY2VDZWxsIiwicXVlcnlSZXN1bHQiLCJjb21wYW55UHJpY2VUYXJnZXQiLCJvbkNsaWNrIiwib25DaGF0V2l0aENlbGwiLCJwcm9tcHQiLCJlbnRpdHlJbmZvIiwibmFtZSIsInZhbHVlIiwiY29sdW1uTmFtZSJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkFvQ1NBOzs7ZUFBQUE7Ozs7NkNBcENtQzsrQkFDZDtBQUU5QixTQUFTQSxVQUFVQyxTQUFpQjtJQUNsQyxNQUFNQyxRQUFRO0lBQ2QsT0FBT0MsSUFBQUEsNEJBQWEsRUFBQztRQUNuQkMsVUFBVTtRQUNWQyxZQUFZO1lBQUM7U0FBWTtRQUN6QkMsTUFBTTtRQUNOSjtRQUNBSyxlQUFlO1FBQ2ZDLGNBQWM7UUFDZEMsU0FBUztRQUNUQyxrQkFBa0JDLENBQUFBLFlBQWMsQ0FBQTtnQkFBRUMsaUJBQWlCO29CQUFFRDtnQkFBVTtZQUFFLENBQUE7UUFDakVFLE1BQU1DLENBQUFBO2dCQUNhQSx1REFBQUEsa0RBY05BLDBEQUFBQTtZQWRYLE1BQU1DLFlBQVdELG1EQUFBQSxLQUFLRSxHQUFHLENBQUNDLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDTixlQUFlLGNBQS9DRSx3RUFBQUEsd0RBQUFBLGlEQUFpREssSUFBSSxjQUFyREwsNEVBQUFBLHNEQUF1RE0sZUFBZTtZQUN2RixxQkFDRSxxQkFBQ0Msd0RBQTJCO2dCQUMxQkMsYUFBYVIsS0FBS0UsR0FBRyxDQUFDQyxRQUFRLENBQUNDLGFBQWEsQ0FBQ0ssa0JBQWtCO2dCQUMvRGQsU0FBUztnQkFDVE0sVUFBVUE7Z0JBQ1ZTLFNBQVM7d0JBR0VWLDBEQUFBQSxxREFGVEEsbUNBQUFBO3FCQUFBQSxvQ0FBQUEsQ0FBQUEscUJBQUFBLEtBQUtFLEdBQUcsQ0FBQ0MsUUFBUSxFQUFDUSxjQUFjLGNBQWhDWCx3REFBQUEsdUNBQUFBLG9CQUFtQzt3QkFDakNZLFFBQVEsQ0FBQyxxREFBcUQsRUFBRVosS0FBS0UsR0FBRyxDQUFDQyxRQUFRLENBQUNVLFVBQVUsQ0FBQ0MsSUFBSSxDQUFDLDJEQUEyRCxDQUFDO3dCQUM5SkMsS0FBSyxHQUFFZixzREFBQUEsS0FBS0UsR0FBRyxDQUFDQyxRQUFRLENBQUNDLGFBQWEsQ0FBQ0ssa0JBQWtCLGNBQWxEVCwyRUFBQUEsMkRBQUFBLG9EQUFvREssSUFBSSxjQUF4REwsK0VBQUFBLHlEQUEwRGQsU0FBUzt3QkFDMUUyQixZQUFZYixLQUFLRSxHQUFHLENBQUNDLFFBQVEsQ0FBQ1UsVUFBVTt3QkFDeENHLFlBQVksQ0FBQyxFQUFFN0IsVUFBVSxFQUFFLEVBQUVDLE1BQU0sQ0FBQztvQkFDdEM7Z0JBQ0Y7Z0JBQ0EyQixLQUFLLEdBQUVmLHNEQUFBQSxLQUFLRSxHQUFHLENBQUNDLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDSyxrQkFBa0IsY0FBbERULDJFQUFBQSwyREFBQUEsb0RBQW9ESyxJQUFJLGNBQXhETCwrRUFBQUEseURBQTBEZCxTQUFTOztRQUdoRjtJQUNGO0FBQ0YifQ==