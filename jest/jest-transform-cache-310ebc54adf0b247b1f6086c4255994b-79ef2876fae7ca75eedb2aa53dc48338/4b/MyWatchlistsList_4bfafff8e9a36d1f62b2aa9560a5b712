00f8a962fe1a7864b28abe989daabe4c
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "MyWatchlistsList", {
    enumerable: true,
    get: function() {
        return MyWatchlistsList;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _compositecomponents = require("@rp/react/web/common/composite-components");
const _hooks = require("@rp/react/web/common/hooks");
const _core = require("@rp/react/web/mui/core");
const _MyWatchlistsListItem = require("./MyWatchlistsListItem");
const COLUMNS_WIDTH = [
    "calc(100% - 200px)",
    "150px",
    "50px"
];
const SORT_OPTIONS = [
    {
        label: "Name",
        value: "name"
    },
    {
        label: "Last Activity",
        value: "lastInteracted"
    }
];
const MyWatchlistsList = ({ data = [], isLoading })=>{
    const { sorterFn, sortBy, direction, onChange } = (0, _hooks.usePageWithListSorter)("userWatchlists");
    const filteredResults = (0, _react.useMemo)(()=>data.sort(sorterFn), [
        data,
        sorterFn
    ]);
    if (isLoading) return /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.CircularProgress, {
        sx: {
            mt: 20
        },
        color: "primary"
    });
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
        sx: {
            width: 1,
            mt: 1
        },
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.HubTableRow, {
                sx: {
                    backgroundColor: "transparent",
                    height: 35,
                    gap: 0,
                    "& > div": {
                        pr: 2
                    },
                    "& > div:last-of-type": {
                        pr: 0
                    }
                },
                columnsWidth: COLUMNS_WIDTH,
                columns: [
                    {
                        node: /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.HubSortableHeadCell, {
                            label: "NAME",
                            value: "name",
                            onChange: onChange,
                            sortBy: sortBy,
                            direction: direction,
                            sortOptions: SORT_OPTIONS
                        })
                    },
                    {
                        node: /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.HubSortableHeadCell, {
                            label: "LAST ACTIVITY",
                            value: "lastInteracted",
                            onChange: onChange,
                            sortBy: sortBy,
                            direction: direction,
                            sortOptions: SORT_OPTIONS,
                            defaultDirection: "desc"
                        })
                    },
                    {
                        node: /*#__PURE__*/ (0, _jsxruntime.jsx)(_jsxruntime.Fragment, {
                            children: "Â "
                        })
                    }
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.InfiniteList, {
                rootMargin: "0px 0px 300px 0px",
                initialElements: 20,
                items: filteredResults,
                renderItem: (item)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_MyWatchlistsListItem.MyWatchlistsListItem, {
                        item: item,
                        columnsWidth: COLUMNS_WIDTH
                    })
            })
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL3dhdGNobGlzdHMvc3JjL2xpYi9XYXRjaGxpc3RzTGlzdFZpZXcvTXlXYXRjaGxpc3RzTGlzdC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlTWVtbyB9IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgeyBPcmdhbml6YXRpb25NZW1iZXJzaGlwUmVzb3VyY2UgfSBmcm9tIFwiQGNsZXJrL3R5cGVzXCJcbmltcG9ydCB7IFdhdGNobGlzdCB9IGZyb20gXCJAcnAvY29tbW9uL2FwaS10eXBlc1wiXG5pbXBvcnQge1xuICBIdWJTb3J0YWJsZUhlYWRDZWxsLFxuICBIdWJUYWJsZVJvdyxcbiAgSW5maW5pdGVMaXN0LFxufSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9jb21tb24vY29tcG9zaXRlLWNvbXBvbmVudHNcIlxuaW1wb3J0IHsgdXNlUGFnZVdpdGhMaXN0U29ydGVyIH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvY29tbW9uL2hvb2tzXCJcbmltcG9ydCB7IEJveCwgQ2lyY3VsYXJQcm9ncmVzcyB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL211aS9jb3JlXCJcbmltcG9ydCB7IE15V2F0Y2hsaXN0c0xpc3RJdGVtIH0gZnJvbSBcIi4vTXlXYXRjaGxpc3RzTGlzdEl0ZW1cIlxuXG5jb25zdCBDT0xVTU5TX1dJRFRIID0gW1wiY2FsYygxMDAlIC0gMjAwcHgpXCIsIFwiMTUwcHhcIiwgXCI1MHB4XCJdXG5jb25zdCBTT1JUX09QVElPTlMgPSBbXG4gIHsgbGFiZWw6IFwiTmFtZVwiLCB2YWx1ZTogXCJuYW1lXCIgfSxcbiAgeyBsYWJlbDogXCJMYXN0IEFjdGl2aXR5XCIsIHZhbHVlOiBcImxhc3RJbnRlcmFjdGVkXCIgfSxcbl1cblxudHlwZSBQcm9wcyA9IHtcbiAgZGF0YT86IEFycmF5PFdhdGNobGlzdCAmIHsgb3duZXI/OiBPcmdhbml6YXRpb25NZW1iZXJzaGlwUmVzb3VyY2UgfCB1bmRlZmluZWQgfT5cbiAgaXNMb2FkaW5nPzogYm9vbGVhblxufVxuXG5leHBvcnQgY29uc3QgTXlXYXRjaGxpc3RzTGlzdCA9ICh7IGRhdGEgPSBbXSwgaXNMb2FkaW5nIH06IFByb3BzKSA9PiB7XG4gIGNvbnN0IHsgc29ydGVyRm4sIHNvcnRCeSwgZGlyZWN0aW9uLCBvbkNoYW5nZSB9ID0gdXNlUGFnZVdpdGhMaXN0U29ydGVyKFwidXNlcldhdGNobGlzdHNcIilcbiAgY29uc3QgZmlsdGVyZWRSZXN1bHRzID0gdXNlTWVtbygoKSA9PiBkYXRhLnNvcnQoc29ydGVyRm4pLCBbZGF0YSwgc29ydGVyRm5dKVxuXG4gIGlmIChpc0xvYWRpbmcpIHJldHVybiA8Q2lyY3VsYXJQcm9ncmVzcyBzeD17eyBtdDogMjAgfX0gY29sb3I9XCJwcmltYXJ5XCIgLz5cblxuICByZXR1cm4gKFxuICAgIDxCb3ggc3g9e3sgd2lkdGg6IDEsIG10OiAxIH19PlxuICAgICAgPEh1YlRhYmxlUm93XG4gICAgICAgIHN4PXt7XG4gICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBcInRyYW5zcGFyZW50XCIsXG4gICAgICAgICAgaGVpZ2h0OiAzNSxcbiAgICAgICAgICBnYXA6IDAsXG4gICAgICAgICAgXCImID4gZGl2XCI6IHsgcHI6IDIgfSxcbiAgICAgICAgICBcIiYgPiBkaXY6bGFzdC1vZi10eXBlXCI6IHsgcHI6IDAgfSxcbiAgICAgICAgfX1cbiAgICAgICAgY29sdW1uc1dpZHRoPXtDT0xVTU5TX1dJRFRIfVxuICAgICAgICBjb2x1bW5zPXtbXG4gICAgICAgICAge1xuICAgICAgICAgICAgbm9kZTogKFxuICAgICAgICAgICAgICA8SHViU29ydGFibGVIZWFkQ2VsbFxuICAgICAgICAgICAgICAgIGxhYmVsPVwiTkFNRVwiXG4gICAgICAgICAgICAgICAgdmFsdWU9XCJuYW1lXCJcbiAgICAgICAgICAgICAgICBvbkNoYW5nZT17b25DaGFuZ2V9XG4gICAgICAgICAgICAgICAgc29ydEJ5PXtzb3J0Qnl9XG4gICAgICAgICAgICAgICAgZGlyZWN0aW9uPXtkaXJlY3Rpb259XG4gICAgICAgICAgICAgICAgc29ydE9wdGlvbnM9e1NPUlRfT1BUSU9OU31cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICksXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBub2RlOiAoXG4gICAgICAgICAgICAgIDxIdWJTb3J0YWJsZUhlYWRDZWxsXG4gICAgICAgICAgICAgICAgbGFiZWw9XCJMQVNUIEFDVElWSVRZXCJcbiAgICAgICAgICAgICAgICB2YWx1ZT1cImxhc3RJbnRlcmFjdGVkXCJcbiAgICAgICAgICAgICAgICBvbkNoYW5nZT17b25DaGFuZ2V9XG4gICAgICAgICAgICAgICAgc29ydEJ5PXtzb3J0Qnl9XG4gICAgICAgICAgICAgICAgZGlyZWN0aW9uPXtkaXJlY3Rpb259XG4gICAgICAgICAgICAgICAgc29ydE9wdGlvbnM9e1NPUlRfT1BUSU9OU31cbiAgICAgICAgICAgICAgICBkZWZhdWx0RGlyZWN0aW9uPVwiZGVzY1wiXG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICApLFxuICAgICAgICAgIH0sXG4gICAgICAgICAgeyBub2RlOiA8PiZuYnNwOzwvPiB9LFxuICAgICAgICBdfVxuICAgICAgLz5cbiAgICAgIDxJbmZpbml0ZUxpc3RcbiAgICAgICAgcm9vdE1hcmdpbj17XCIwcHggMHB4IDMwMHB4IDBweFwifVxuICAgICAgICBpbml0aWFsRWxlbWVudHM9ezIwfVxuICAgICAgICBpdGVtcz17ZmlsdGVyZWRSZXN1bHRzfVxuICAgICAgICByZW5kZXJJdGVtPXtpdGVtID0+IDxNeVdhdGNobGlzdHNMaXN0SXRlbSBpdGVtPXtpdGVtfSBjb2x1bW5zV2lkdGg9e0NPTFVNTlNfV0lEVEh9IC8+fVxuICAgICAgLz5cbiAgICA8L0JveD5cbiAgKVxufVxuIl0sIm5hbWVzIjpbIk15V2F0Y2hsaXN0c0xpc3QiLCJDT0xVTU5TX1dJRFRIIiwiU09SVF9PUFRJT05TIiwibGFiZWwiLCJ2YWx1ZSIsImRhdGEiLCJpc0xvYWRpbmciLCJzb3J0ZXJGbiIsInNvcnRCeSIsImRpcmVjdGlvbiIsIm9uQ2hhbmdlIiwidXNlUGFnZVdpdGhMaXN0U29ydGVyIiwiZmlsdGVyZWRSZXN1bHRzIiwidXNlTWVtbyIsInNvcnQiLCJDaXJjdWxhclByb2dyZXNzIiwic3giLCJtdCIsImNvbG9yIiwiQm94Iiwid2lkdGgiLCJIdWJUYWJsZVJvdyIsImJhY2tncm91bmRDb2xvciIsImhlaWdodCIsImdhcCIsInByIiwiY29sdW1uc1dpZHRoIiwiY29sdW1ucyIsIm5vZGUiLCJIdWJTb3J0YWJsZUhlYWRDZWxsIiwic29ydE9wdGlvbnMiLCJkZWZhdWx0RGlyZWN0aW9uIiwiSW5maW5pdGVMaXN0Iiwicm9vdE1hcmdpbiIsImluaXRpYWxFbGVtZW50cyIsIml0ZW1zIiwicmVuZGVySXRlbSIsIml0ZW0iLCJNeVdhdGNobGlzdHNMaXN0SXRlbSJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBdUJhQTs7O2VBQUFBOzs7O3VCQXZCVztxQ0FPakI7dUJBQytCO3NCQUNBO3NDQUNEO0FBRXJDLE1BQU1DLGdCQUFnQjtJQUFDO0lBQXNCO0lBQVM7Q0FBTztBQUM3RCxNQUFNQyxlQUFlO0lBQ25CO1FBQUVDLE9BQU87UUFBUUMsT0FBTztJQUFPO0lBQy9CO1FBQUVELE9BQU87UUFBaUJDLE9BQU87SUFBaUI7Q0FDbkQ7QUFPTSxNQUFNSixtQkFBbUIsQ0FBQyxFQUFFSyxPQUFPLEVBQUUsRUFBRUMsU0FBUyxFQUFTO0lBQzlELE1BQU0sRUFBRUMsUUFBUSxFQUFFQyxNQUFNLEVBQUVDLFNBQVMsRUFBRUMsUUFBUSxFQUFFLEdBQUdDLElBQUFBLDRCQUFxQixFQUFDO0lBQ3hFLE1BQU1DLGtCQUFrQkMsSUFBQUEsY0FBTyxFQUFDLElBQU1SLEtBQUtTLElBQUksQ0FBQ1AsV0FBVztRQUFDRjtRQUFNRTtLQUFTO0lBRTNFLElBQUlELFdBQVcscUJBQU8scUJBQUNTLHNCQUFnQjtRQUFDQyxJQUFJO1lBQUVDLElBQUk7UUFBRztRQUFHQyxPQUFNOztJQUU5RCxxQkFDRSxzQkFBQ0MsU0FBRztRQUFDSCxJQUFJO1lBQUVJLE9BQU87WUFBR0gsSUFBSTtRQUFFOzswQkFDekIscUJBQUNJLGdDQUFXO2dCQUNWTCxJQUFJO29CQUNGTSxpQkFBaUI7b0JBQ2pCQyxRQUFRO29CQUNSQyxLQUFLO29CQUNMLFdBQVc7d0JBQUVDLElBQUk7b0JBQUU7b0JBQ25CLHdCQUF3Qjt3QkFBRUEsSUFBSTtvQkFBRTtnQkFDbEM7Z0JBQ0FDLGNBQWN6QjtnQkFDZDBCLFNBQVM7b0JBQ1A7d0JBQ0VDLG9CQUNFLHFCQUFDQyx3Q0FBbUI7NEJBQ2xCMUIsT0FBTTs0QkFDTkMsT0FBTTs0QkFDTk0sVUFBVUE7NEJBQ1ZGLFFBQVFBOzRCQUNSQyxXQUFXQTs0QkFDWHFCLGFBQWE1Qjs7b0JBR25CO29CQUNBO3dCQUNFMEIsb0JBQ0UscUJBQUNDLHdDQUFtQjs0QkFDbEIxQixPQUFNOzRCQUNOQyxPQUFNOzRCQUNOTSxVQUFVQTs0QkFDVkYsUUFBUUE7NEJBQ1JDLFdBQVdBOzRCQUNYcUIsYUFBYTVCOzRCQUNiNkIsa0JBQWlCOztvQkFHdkI7b0JBQ0E7d0JBQUVILG9CQUFNO3NDQUFFOztvQkFBVTtpQkFDckI7OzBCQUVILHFCQUFDSSxpQ0FBWTtnQkFDWEMsWUFBWTtnQkFDWkMsaUJBQWlCO2dCQUNqQkMsT0FBT3ZCO2dCQUNQd0IsWUFBWUMsQ0FBQUEscUJBQVEscUJBQUNDLDBDQUFvQjt3QkFBQ0QsTUFBTUE7d0JBQU1YLGNBQWN6Qjs7Ozs7QUFJNUUifQ==