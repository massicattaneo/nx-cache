{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/chat/src/lib/Chat/ChatDataProvider/ChatDataProvider.tsx"],"sourcesContent":["import { createContext, useCallback, useContext, useEffect, useMemo, useRef, useState } from \"react\"\nimport { useLocation, useNavigate } from \"react-router-dom\"\nimport { useSearchParams } from \"react-router-dom\"\nimport { useUser } from \"@clerk/clerk-react\"\nimport { DatasetScope } from \"@rp/common/api-types\"\nimport { chatDatasets, isDatasetScope } from \"@rp/react/common/chat\"\nimport { chatCustomerIo } from \"@rp/react/common/customer-io\"\nimport {\n  LlmTimings,\n  SummaryState,\n  isChatContext,\n  isChatFileContext,\n  isChatWatchlistContext,\n  isChatWorkflowContext,\n  isHomeChatContext,\n  isPromptLibraryContext,\n} from \"@rp/react/common/hooks\"\nimport { useAccount } from \"@rp/react/common/providers\"\nimport { generatePromptFromWorkflow } from \"@rp/react/common/workflow\"\nimport {\n  isUserInteraction,\n  useChat,\n  useCreateChat,\n  useOptimisticChat,\n} from \"@rp/react/tanstack-api/chat\"\nimport { useFilesToCustomerIO, useMultipleFiles } from \"@rp/react/tanstack-api/file\"\nimport {\n  EngineChartContent,\n  LLMFollowUpMessage,\n  LlmTextContent,\n} from \"@rp/react/tanstack-api/llm-summary\"\nimport { useWatchlist, useWatchlistsToCustomerIO } from \"@rp/react/tanstack-api/watchlist\"\nimport { CHAT_ROUTE } from \"@rp/react/web/router\"\nimport { RegenerateHandler } from \"../PersistedChat/Chat\"\nimport {\n  AddPromptParams,\n  ChatDataContextValue,\n  CurrentInteraction,\n  Props,\n} from \"./ChatDataProvider.types\"\nimport { getInteractionOrigin } from \"./getInteractionOrigin\"\n\nconst FILES_PARAM = \"files\"\nconst SOURCES_PARAM = \"source\"\nconst WATCHLIST_PARAM = \"watchlist\"\n\nconst ChatDataContext = createContext<ChatDataContextValue | null>(null)\n\nconst ChatDataProvider = ({ children, id, onChatCreated, origin, enabledSources }: Props) => {\n  // DATA\n  const navigate = useNavigate()\n  const { user } = useUser()\n  const { hasSomeEntitlement } = useAccount()\n  const [searchParams, setSearchParams] = useSearchParams()\n  const { state } = useLocation()\n\n  const context = useRef(state)\n  const hasContext = isChatContext(context.current)\n  const isComingFromPromptLib = useRef(false)\n  const isComingFromWorkflow = useRef(false)\n\n  const { data: chat, isError, isLoading, lastWatchlistId } = useChat(id)\n  const { mutateAsync } = useCreateChat()\n\n  // FILTERS: SCOPE\n  const scopeParam = Object.values(chatDatasets).find(\n    dataset => dataset.handle === searchParams.get(SOURCES_PARAM),\n  )?.id\n  const baseScopeWithoutEntitlements = isDatasetScope(scopeParam) ? scopeParam : undefined\n  const baseScope =\n    baseScopeWithoutEntitlements !== undefined &&\n    chatDatasets[baseScopeWithoutEntitlements].entitlements !== undefined &&\n    !hasSomeEntitlement(chatDatasets[baseScopeWithoutEntitlements].entitlements ?? [])\n      ? undefined\n      : baseScopeWithoutEntitlements\n  const [scope, setScope] = useState<DatasetScope | undefined>(baseScope)\n\n  // FILTERS: WATCHLISTs\n  const baseWatchlist = searchParams.get(WATCHLIST_PARAM) ?? undefined\n  const hasWatchlistContext = isChatWatchlistContext(context.current)\n  //WORKFLOWS CONTEXT STATE\n  const hasWorkflowContext = isChatWorkflowContext(context.current)\n\n  const [watchlistId, setWatchlistId] = useState<string | undefined>(\n    hasWatchlistContext ? context.current.watchlistIds[0] : baseWatchlist,\n  )\n  const { isError: isErrorWatchlist } = useWatchlist(watchlistId)\n  const { watchlists } = useWatchlistsToCustomerIO(watchlistId)\n\n  // FILTERS: FILES\n  const baseFiles = searchParams.get(FILES_PARAM)?.split(\",\") ?? []\n  const hasFileContext = isChatFileContext(context.current)\n  const [filesIds, setFilesIds] = useState<Array<string>>(\n    hasFileContext ? context.current.filesIds : baseFiles,\n  )\n  const allSelectedFiles = useMultipleFiles(filesIds)\n  const realFileIds = useMemo(() => {\n    return allSelectedFiles\n      .filter(obj => !obj.isError && !obj.isLoading)\n      .map(file => file.data?.id ?? \"\")\n  }, [allSelectedFiles])\n  const { files } = useFilesToCustomerIO(filesIds)\n  const cIoScope = realFileIds.length > 0 ? \"files\" : scope ?? null\n\n  // UI STATE\n  const hasRestoredChat = useRef(\"\")\n  const [timingsMap, setTimingsMap] = useState<Record<string, LlmTimings>>({})\n  const [isAuditMode, setIsAuditMode] = useState(true)\n  const [followUpMap, setFollowUpMap] = useState<\n    Record<string, LLMFollowUpMessage[\"followUp\"][\"queries\"] | undefined>\n  >({})\n\n  const { addInteraction, removeLastInteraction } = useOptimisticChat()\n  const [currentInteraction, setCurrentInteraction] = useState<undefined | CurrentInteraction>(\n    undefined,\n  )\n\n  const removeFollowUpFromInteraction = useCallback((interactionId: string) => {\n    setFollowUpMap(prev => ({ ...prev, [interactionId]: undefined }))\n  }, [])\n\n  // UTILS\n  const setUrlParams = (paramName: string, value: string | undefined) => {\n    if (id) {\n      return\n    }\n\n    setSearchParams(\n      prev => {\n        value === undefined ? prev.delete(paramName) : prev.set(paramName, value)\n\n        return prev\n      },\n      { replace: true },\n    )\n  }\n\n  const resetChatState = useCallback(\n    ({ withNavigation = true, resetWatchlistId = true } = {}) => {\n      setIsAuditMode(true)\n      setScope(undefined)\n      hasRestoredChat.current = \"\"\n      context.current = null\n      if (withNavigation) {\n        navigate(CHAT_ROUTE, { replace: true })\n      }\n      setCurrentInteraction(undefined)\n      setFilesIds([])\n      if (resetWatchlistId) {\n        setWatchlistId(undefined)\n      }\n      setTimingsMap({})\n      setFollowUpMap({})\n      isComingFromPromptLib.current = false\n      isComingFromWorkflow.current = false\n    },\n    [navigate],\n  )\n\n  const addPrompt = useCallback(\n    async ({\n      prompt,\n      customTitle,\n      replaceState = false,\n      clickedPrompt,\n      defaultMessage = false,\n      customerIoScope = cIoScope,\n      followUpSuggestionIndex,\n      entities,\n      interactionType,\n      displayedMessage,\n      watchlistId,\n      forceNewChatId,\n      workflow,\n      watchlistInfo,\n    }: AddPromptParams) => {\n      const index = chat?.interactions.length ?? 0\n\n      const iteration =\n        currentInteraction !== undefined &&\n        currentInteraction.stopped &&\n        currentInteraction.userInput === prompt\n          ? currentInteraction.iteration + 1\n          : 0\n\n      const userInteraction = \"user_message\"\n      const defaultInteractionType = defaultMessage ? \"empty_message\" : userInteraction\n\n      const finalOrigin =\n        origin !== \"chat\"\n          ? origin\n          : getInteractionOrigin(\n              context.current,\n              chat?.interactions?.[0]?.origin?.type ?? defaultInteractionType,\n            )\n\n      setCurrentInteraction({\n        userInput: prompt,\n        error: false,\n        stopped: false,\n        edit: false,\n        customTitle,\n        iteration,\n        index: chat ? chat.interactions.length : 0,\n        interactionType: interactionType ?? defaultInteractionType,\n        entities,\n        workflow: workflow ?? context.current?.workflow,\n        displayedMessage,\n      })\n\n      let chatId = forceNewChatId ? null : id\n      if (!chatId) {\n        const data = await mutateAsync({\n          name: customTitle ?? prompt,\n          scopeWatchlistId: watchlistId,\n        })\n        chatId = data.id\n        onChatCreated?.(data.id, replaceState || hasWatchlistContext || hasFileContext)\n      }\n      chatCustomerIo.inputPromptSubmit({\n        chatId,\n        origin: finalOrigin,\n        index,\n        scope: customerIoScope,\n        promptTopics: clickedPrompt?.relatedTopics ?? null,\n        promptTask: clickedPrompt?.icon.label ?? null,\n        files,\n        watchlists,\n        followUpSuggestionIndex: followUpSuggestionIndex ?? null,\n        watchlistPrompt: {\n          clickedSuggestedPromptText: watchlistInfo?.clickedSuggestedPromptText ?? null,\n          suggestedPromptClassification: watchlistInfo?.suggestedPromptClassification ?? null,\n          promptContextLevel: watchlistInfo?.promptContextLevel ?? null,\n          promptCategory: watchlistInfo?.promptCategory ?? null,\n          promptCompanyType: watchlistInfo?.promptCompanyType ?? null,\n          dataViewAtClick: watchlistInfo?.dataViewAtClick ?? null,\n        },\n      })\n    },\n\n    [\n      cIoScope,\n      chat,\n      currentInteraction,\n      origin,\n      id,\n      files,\n      watchlists,\n      mutateAsync,\n      onChatCreated,\n      hasWatchlistContext,\n      hasFileContext,\n    ],\n  )\n\n  const addResponse = useCallback(\n    (interactionId: string, data: SummaryState) => {\n      if (!id) {\n        return\n      }\n\n      setCurrentInteraction(undefined)\n\n      addInteraction(id, {\n        auditTraces: data.auditTraces,\n        inputMessage: currentInteraction?.displayedMessage ?? currentInteraction?.userInput ?? \"\",\n        interactionTimestamp: interactionId,\n        responseBlock: data.responseBlock ?? {\n          type: \"TEXT\",\n          value: data.response,\n        },\n        responseBlocks: data.responseBlocks.filter(\n          (block): block is LlmTextContent | EngineChartContent =>\n            block.type === \"TEXT\" || block.type === \"ENGINE\",\n        ),\n        origin: { type: data.interactionType },\n        scope: scope,\n        scopeDocuments: realFileIds.map(fileId => ({\n          id: fileId,\n          fileName: \"\",\n          uploadTs: \"\",\n          rawSize: 0,\n        })),\n        scopeWatchlistId: watchlistId,\n        dateCreated: \"\",\n        lastUpdated: \"\",\n        originSources: data.originSources,\n        originSourcesMetadata: data.metadata,\n        auditBlocks: data.auditBlocks,\n      })\n\n      setTimingsMap(prev => ({\n        ...prev,\n        [interactionId]: { ...data.timings, profiling: data.profiling },\n      }))\n\n      setFollowUpMap(prev => ({\n        ...prev,\n        [interactionId]: data.followUpQuestions,\n      }))\n    },\n    [\n      id,\n      addInteraction,\n      currentInteraction?.displayedMessage,\n      currentInteraction?.userInput,\n      scope,\n      realFileIds,\n      watchlistId,\n    ],\n  )\n\n  const regenerateLastResponse: RegenerateHandler = useCallback(\n    ({ isCurrentInteraction = false }) => {\n      if (!id) {\n        return\n      }\n\n      if (isCurrentInteraction) {\n        setCurrentInteraction(prev => {\n          chatCustomerIo.regenerateLastQuestionClick({\n            chatId: id,\n            index: currentInteraction?.index ?? 0,\n            scope: realFileIds.length > 0 ? \"files\" : scope ?? null,\n            files,\n            watchlists,\n          })\n          return prev === undefined\n            ? prev\n            : { ...prev, stopped: false, error: false, edit: false, iteration: prev.iteration + 1 }\n        })\n        return\n      }\n\n      const regeneratedInteraction = removeLastInteraction(id)\n      setCurrentInteraction({\n        userInput: regeneratedInteraction?.inputMessage ?? \"Error\",\n        stopped: false,\n        error: false,\n        edit: true,\n        iteration: 0,\n        index: chat ? chat.interactions.length - 1 : 0,\n        interactionType: regeneratedInteraction?.origin.type ?? \"user_message\",\n      })\n      chatCustomerIo.regenerateLastQuestionClick({\n        chatId: id,\n        index: currentInteraction?.index ?? 0,\n        scope: realFileIds.length > 0 ? \"files\" : scope ?? null,\n        files,\n        watchlists,\n      })\n    },\n    [\n      id,\n      chat,\n      removeLastInteraction,\n      currentInteraction?.index,\n      realFileIds.length,\n      scope,\n      files,\n      watchlists,\n    ],\n  )\n\n  const editLastQuestion = useCallback(\n    (prompt: string) => {\n      if (!id) {\n        return\n      }\n\n      chatCustomerIo.editLastQuestionClick({\n        chatId: id,\n        index: currentInteraction?.index ?? 0,\n        scope: realFileIds.length > 0 ? \"files\" : scope ?? null,\n        files,\n        watchlists,\n      })\n\n      removeLastInteraction(id)\n\n      setCurrentInteraction({\n        userInput: prompt,\n        stopped: false,\n        error: false,\n        edit: true,\n        iteration: 0,\n        index: chat ? chat.interactions.length - 1 : 0,\n        // If the user edits the prompt it can't be longer default message\n        interactionType: \"user_message\",\n      })\n    },\n    [\n      id,\n      currentInteraction?.index,\n      realFileIds.length,\n      scope,\n      files,\n      watchlists,\n      removeLastInteraction,\n      chat,\n    ],\n  )\n\n  // EFFECTS\n  useEffect(() => {\n    if (isErrorWatchlist) {\n      setWatchlistId(undefined)\n    }\n  }, [isErrorWatchlist])\n\n  useEffect(() => {\n    if (chat && chat.interactions.length > 0 && hasRestoredChat.current !== chat.id) {\n      hasRestoredChat.current = chat.id\n      const lastInteraction = chat.interactions[chat.interactions.length - 1]\n      if (isUserInteraction(lastInteraction)) {\n        const scope = lastInteraction.scope\n        const shouldIgnoreScope =\n          scope !== undefined &&\n          chatDatasets[scope].entitlements !== undefined &&\n          (!enabledSources[scope] || !hasSomeEntitlement(chatDatasets[scope].entitlements ?? []))\n        setScope(shouldIgnoreScope ? undefined : lastInteraction.scope)\n        setFilesIds(prev => lastInteraction.scopeDocuments?.map(file => file.id) ?? prev)\n        setWatchlistId(prev => lastInteraction.scopeWatchlistId ?? prev)\n      }\n    }\n  }, [chat, enabledSources, hasSomeEntitlement, searchParams])\n\n  useEffect(() => {\n    let clickedPrompt\n    let customerIoScope\n    if (context.current && isPromptLibraryContext(context.current)) {\n      clickedPrompt = context.current.value\n      if (context.current.value.prompt && !scope) {\n        setScope(context.current.value.scope)\n        customerIoScope = context.current.value.scope\n      }\n\n      addPrompt({\n        prompt: state.value.prompt,\n        customTitle: state.value.label,\n        replaceState: true,\n        clickedPrompt,\n        customerIoScope,\n      })\n      isComingFromPromptLib.current = true\n      context.current = null\n    }\n  }, [addPrompt, navigate, scope, state])\n\n  useEffect(() => {\n    let customerIoScope\n    if (context.current && isHomeChatContext(context.current)) {\n      setWatchlistId(context.current.value.watchlistId)\n      setFilesIds(context.current.value.fileIds)\n      setScope(context.current.value.scope)\n\n      // if (context.current.value.prompt && !scope) {\n      //   setScope(context.current.value.scope)\n      //   customerIoScope = context.current.value.scope\n      // }\n\n      addPrompt({\n        prompt: state.value.prompt,\n        customTitle: state.value.label,\n        replaceState: true,\n        customerIoScope,\n      })\n      isComingFromPromptLib.current = true\n      context.current = null\n    }\n  }, [addPrompt, navigate, scope, state])\n\n  useEffect(() => {\n    if (context.current && hasWorkflowContext && isChatWorkflowContext(context.current)) {\n      addPrompt(generatePromptFromWorkflow(context.current.workflow))\n      isComingFromWorkflow.current = true\n      context.current = null\n    }\n  }, [addPrompt, hasWorkflowContext])\n\n  return (\n    <ChatDataContext.Provider\n      value={{\n        chat: {\n          id,\n          savedChat: chat,\n          isLoading,\n          isError,\n        },\n        scope: {\n          scope,\n          setScope,\n        },\n        watchlist: {\n          watchlistId: watchlistId ?? lastWatchlistId,\n          setWatchlistId,\n        },\n        files: {\n          fileIds: realFileIds,\n          setFileIds: setFilesIds,\n        },\n        ui: {\n          context,\n          currentInteraction,\n          setCurrentInteraction,\n          isAuditMode,\n          setIsAuditMode,\n          followUpMap,\n          removeFollowUpFromInteraction,\n          timingsMap,\n          hasContext,\n          hasFilesContext: hasFileContext,\n          hasWatchlistsContext: hasWatchlistContext,\n          isComingFromPromptLibrary: isComingFromPromptLib.current,\n          isComingFromWorkflow: isComingFromWorkflow.current,\n          isEditable: user?.id === chat?.userId,\n        },\n        mutations: {\n          addPrompt,\n          addResponse,\n          editLastQuestion,\n          regenerateLastResponse,\n        },\n        helpers: {\n          resetChatState,\n          setUrlParams,\n        },\n      }}\n    >\n      {children}\n    </ChatDataContext.Provider>\n  )\n}\n\nconst useChatDataContext = () => {\n  const context = useContext(ChatDataContext)\n\n  if (!context) {\n    throw new Error(\"useChatDataContext should be used within a ChatDataProvider\")\n  }\n\n  return context\n}\n\nexport { ChatDataProvider, useChatDataContext }\n"],"names":["ChatDataProvider","useChatDataContext","FILES_PARAM","SOURCES_PARAM","WATCHLIST_PARAM","ChatDataContext","createContext","children","id","onChatCreated","origin","enabledSources","Object","searchParams","navigate","useNavigate","user","useUser","hasSomeEntitlement","useAccount","setSearchParams","useSearchParams","state","useLocation","context","useRef","hasContext","isChatContext","current","isComingFromPromptLib","isComingFromWorkflow","data","chat","isError","isLoading","lastWatchlistId","useChat","mutateAsync","useCreateChat","scopeParam","values","chatDatasets","find","dataset","handle","get","baseScopeWithoutEntitlements","isDatasetScope","undefined","baseScope","entitlements","scope","setScope","useState","baseWatchlist","hasWatchlistContext","isChatWatchlistContext","hasWorkflowContext","isChatWorkflowContext","watchlistId","setWatchlistId","watchlistIds","isErrorWatchlist","useWatchlist","watchlists","useWatchlistsToCustomerIO","baseFiles","split","hasFileContext","isChatFileContext","filesIds","setFilesIds","allSelectedFiles","useMultipleFiles","realFileIds","useMemo","filter","obj","map","file","files","useFilesToCustomerIO","cIoScope","length","hasRestoredChat","timingsMap","setTimingsMap","isAuditMode","setIsAuditMode","followUpMap","setFollowUpMap","addInteraction","removeLastInteraction","useOptimisticChat","currentInteraction","setCurrentInteraction","removeFollowUpFromInteraction","useCallback","interactionId","prev","setUrlParams","paramName","value","delete","set","replace","resetChatState","withNavigation","resetWatchlistId","CHAT_ROUTE","addPrompt","prompt","customTitle","replaceState","clickedPrompt","defaultMessage","customerIoScope","followUpSuggestionIndex","entities","interactionType","displayedMessage","forceNewChatId","workflow","watchlistInfo","index","interactions","iteration","stopped","userInput","userInteraction","defaultInteractionType","finalOrigin","getInteractionOrigin","type","error","edit","chatId","name","scopeWatchlistId","chatCustomerIo","inputPromptSubmit","promptTopics","relatedTopics","promptTask","icon","label","watchlistPrompt","clickedSuggestedPromptText","suggestedPromptClassification","promptContextLevel","promptCategory","promptCompanyType","dataViewAtClick","addResponse","auditTraces","inputMessage","interactionTimestamp","responseBlock","response","responseBlocks","block","scopeDocuments","fileId","fileName","uploadTs","rawSize","dateCreated","lastUpdated","originSources","originSourcesMetadata","metadata","auditBlocks","timings","profiling","followUpQuestions","regenerateLastResponse","isCurrentInteraction","regenerateLastQuestionClick","regeneratedInteraction","editLastQuestion","editLastQuestionClick","useEffect","lastInteraction","isUserInteraction","shouldIgnoreScope","isPromptLibraryContext","isHomeChatContext","fileIds","generatePromptFromWorkflow","Provider","savedChat","watchlist","setFileIds","ui","hasFilesContext","hasWatchlistsContext","isComingFromPromptLibrary","isEditable","userId","mutations","helpers","useContext","Error"],"rangeMappingsmappings":"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"}