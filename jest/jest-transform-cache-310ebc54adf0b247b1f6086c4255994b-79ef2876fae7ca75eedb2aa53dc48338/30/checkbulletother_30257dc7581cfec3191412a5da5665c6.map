{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/node_modules/mdast-util-to-markdown/lib/util/check-bullet-other.js"],"sourcesContent":["/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkBullet} from './check-bullet.js'\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBulletOther(state) {\n  const bullet = checkBullet(state)\n  const bulletOther = state.options.bulletOther\n\n  if (!bulletOther) {\n    return bullet === '*' ? '-' : '*'\n  }\n\n  if (bulletOther !== '*' && bulletOther !== '+' && bulletOther !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        bulletOther +\n        '` for `options.bulletOther`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  if (bulletOther === bullet) {\n    throw new Error(\n      'Expected `bullet` (`' +\n        bullet +\n        '`) and `bulletOther` (`' +\n        bulletOther +\n        '`) to be different'\n    )\n  }\n\n  return bulletOther\n}\n"],"names":["checkBulletOther","state","bullet","checkBullet","bulletOther","options","Error"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA;;;CAGC;;;;+BAQeA;;;eAAAA;;;6BANU;AAMnB,SAASA,iBAAiBC,KAAK;IACpC,MAAMC,SAASC,IAAAA,wBAAW,EAACF;IAC3B,MAAMG,cAAcH,MAAMI,OAAO,CAACD,WAAW;IAE7C,IAAI,CAACA,aAAa;QAChB,OAAOF,WAAW,MAAM,MAAM;IAChC;IAEA,IAAIE,gBAAgB,OAAOA,gBAAgB,OAAOA,gBAAgB,KAAK;QACrE,MAAM,IAAIE,MACR,kCACEF,cACA;IAEN;IAEA,IAAIA,gBAAgBF,QAAQ;QAC1B,MAAM,IAAII,MACR,yBACEJ,SACA,4BACAE,cACA;IAEN;IAEA,OAAOA;AACT"}