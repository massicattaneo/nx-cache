d0e7f8fc73a0124f24dec7bf1ef13521
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "EngineChartSources", {
    enumerable: true,
    get: function() {
        return EngineChartSources;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _hooks = require("@rp/react/web/common/hooks");
const _core = require("@rp/react/web/mui/core");
const _icons = require("@rp/react/web/mui/icons");
const InfoIcon = ({ onClick, expanded })=>{
    const [iconHovered, setIconHovered] = (0, _react.useState)(false);
    return expanded || iconHovered ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.Info, {
        onMouseLeave: ()=>setIconHovered(false),
        onClick: onClick,
        sx: {
            color: "text.primary"
        }
    }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.InfoOutlined, {
        onMouseEnter: ()=>setIconHovered(true),
        onClick: onClick,
        sx: {
            color: "grey.300"
        }
    });
};
const EngineChartSources = ({ explainer, sources })=>{
    const [expanded, setExpanded] = (0, _react.useState)(false);
    const { isMobile } = (0, _hooks.useDeviceInfo)();
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
                sx: {
                    width: "auto",
                    display: "flex"
                },
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                    onClick: isMobile ? ()=>setExpanded((prev)=>!prev) : undefined,
                    sx: {
                        borderRadius: "2px",
                        border: isMobile ? `1px solid ${(0, _core.alpha)("#ffffff", 0.12)}` : undefined,
                        width: "auto",
                        display: "flex",
                        p: "6px",
                        gap: 1,
                        alignItems: "center",
                        backgroundColor: expanded && isMobile ? `${(0, _core.alpha)("#ffffff", 0.08)}` : undefined,
                        "& svg": {
                            cursor: "pointer",
                            height: 20,
                            width: 20
                        }
                    },
                    children: [
                        sources.map((source, index, array)=>{
                            return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_react.Fragment, {
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("img", {
                                                src: source.faviconUrl,
                                                alt: source.name,
                                                width: 16,
                                                height: 16
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                                                sx: {
                                                    fontSize: 12,
                                                    color: `${(0, _core.alpha)("#ffffff", 0.87)}`,
                                                    lineHeight: "16px"
                                                },
                                                children: source.name
                                            })
                                        ]
                                    }),
                                    index !== array.length - 1 && /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Divider, {
                                        flexItem: true,
                                        orientation: "vertical",
                                        sx: {
                                            borderColor: `${(0, _core.alpha)("#ffffff", 0.32)}`
                                        }
                                    })
                                ]
                            }, source.name);
                        }),
                        isMobile ? null : /*#__PURE__*/ (0, _jsxruntime.jsx)(InfoIcon, {
                            expanded: expanded,
                            onClick: ()=>setExpanded((prev)=>!prev)
                        })
                    ]
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Collapse, {
                in: expanded,
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                    sx: {
                        mt: 1,
                        fontSize: 18,
                        lineHeight: "24px"
                    },
                    children: explainer
                })
            })
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NoYXQvc3JjL2xpYi9DaGF0L0NoYXQvQ2hhdFJlc3BvbnNlL0VuZ2luZUNoYXJ0L0VuZ2luZUNoYXJ0U291cmNlcy50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRnJhZ21lbnQsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCJcbmltcG9ydCB7IExsbUVuZ2luZVNvdXJjZSB9IGZyb20gXCJAcnAvcmVhY3QvdGFuc3RhY2stYXBpL2xsbS1zdW1tYXJ5XCJcbmltcG9ydCB7IHVzZURldmljZUluZm8gfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9jb21tb24vaG9va3NcIlxuaW1wb3J0IHsgQm94LCBDb2xsYXBzZSwgRGl2aWRlciwgVHlwb2dyYXBoeSwgYWxwaGEgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9tdWkvY29yZVwiXG5pbXBvcnQgeyBJbmZvLCBJbmZvT3V0bGluZWQgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9tdWkvaWNvbnNcIlxuXG5jb25zdCBJbmZvSWNvbiA9ICh7IG9uQ2xpY2ssIGV4cGFuZGVkIH06IHsgb25DbGljazogKCkgPT4gdm9pZDsgZXhwYW5kZWQ6IGJvb2xlYW4gfSkgPT4ge1xuICBjb25zdCBbaWNvbkhvdmVyZWQsIHNldEljb25Ib3ZlcmVkXSA9IHVzZVN0YXRlKGZhbHNlKVxuXG4gIHJldHVybiBleHBhbmRlZCB8fCBpY29uSG92ZXJlZCA/IChcbiAgICA8SW5mb1xuICAgICAgb25Nb3VzZUxlYXZlPXsoKSA9PiBzZXRJY29uSG92ZXJlZChmYWxzZSl9XG4gICAgICBvbkNsaWNrPXtvbkNsaWNrfVxuICAgICAgc3g9e3sgY29sb3I6IFwidGV4dC5wcmltYXJ5XCIgfX1cbiAgICAvPlxuICApIDogKFxuICAgIDxJbmZvT3V0bGluZWRcbiAgICAgIG9uTW91c2VFbnRlcj17KCkgPT4gc2V0SWNvbkhvdmVyZWQodHJ1ZSl9XG4gICAgICBvbkNsaWNrPXtvbkNsaWNrfVxuICAgICAgc3g9e3sgY29sb3I6IFwiZ3JleS4zMDBcIiB9fVxuICAgIC8+XG4gIClcbn1cblxudHlwZSBQcm9wcyA9IHtcbiAgZXhwbGFpbmVyOiBzdHJpbmdcbiAgc291cmNlczogQXJyYXk8TGxtRW5naW5lU291cmNlPlxufVxuXG5leHBvcnQgY29uc3QgRW5naW5lQ2hhcnRTb3VyY2VzID0gKHsgZXhwbGFpbmVyLCBzb3VyY2VzIH06IFByb3BzKSA9PiB7XG4gIGNvbnN0IFtleHBhbmRlZCwgc2V0RXhwYW5kZWRdID0gdXNlU3RhdGUoZmFsc2UpXG4gIGNvbnN0IHsgaXNNb2JpbGUgfSA9IHVzZURldmljZUluZm8oKVxuXG4gIHJldHVybiAoXG4gICAgPEJveD5cbiAgICAgIDxCb3ggc3g9e3sgd2lkdGg6IFwiYXV0b1wiLCBkaXNwbGF5OiBcImZsZXhcIiB9fT5cbiAgICAgICAgPEJveFxuICAgICAgICAgIG9uQ2xpY2s9e2lzTW9iaWxlID8gKCkgPT4gc2V0RXhwYW5kZWQocHJldiA9PiAhcHJldikgOiB1bmRlZmluZWR9XG4gICAgICAgICAgc3g9e3tcbiAgICAgICAgICAgIGJvcmRlclJhZGl1czogXCIycHhcIixcbiAgICAgICAgICAgIGJvcmRlcjogaXNNb2JpbGUgPyBgMXB4IHNvbGlkICR7YWxwaGEoXCIjZmZmZmZmXCIsIDAuMTIpfWAgOiB1bmRlZmluZWQsXG4gICAgICAgICAgICB3aWR0aDogXCJhdXRvXCIsXG4gICAgICAgICAgICBkaXNwbGF5OiBcImZsZXhcIixcbiAgICAgICAgICAgIHA6IFwiNnB4XCIsXG4gICAgICAgICAgICBnYXA6IDEsXG4gICAgICAgICAgICBhbGlnbkl0ZW1zOiBcImNlbnRlclwiLFxuICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBleHBhbmRlZCAmJiBpc01vYmlsZSA/IGAke2FscGhhKFwiI2ZmZmZmZlwiLCAwLjA4KX1gIDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgXCImIHN2Z1wiOiB7IGN1cnNvcjogXCJwb2ludGVyXCIsIGhlaWdodDogMjAsIHdpZHRoOiAyMCB9LFxuICAgICAgICAgIH19XG4gICAgICAgID5cbiAgICAgICAgICB7c291cmNlcy5tYXAoKHNvdXJjZSwgaW5kZXgsIGFycmF5KSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICA8RnJhZ21lbnQga2V5PXtzb3VyY2UubmFtZX0+XG4gICAgICAgICAgICAgICAgPD5cbiAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPXtzb3VyY2UuZmF2aWNvblVybH0gYWx0PXtzb3VyY2UubmFtZX0gd2lkdGg9ezE2fSBoZWlnaHQ9ezE2fSAvPlxuICAgICAgICAgICAgICAgICAgPFR5cG9ncmFwaHlcbiAgICAgICAgICAgICAgICAgICAgc3g9e3sgZm9udFNpemU6IDEyLCBjb2xvcjogYCR7YWxwaGEoXCIjZmZmZmZmXCIsIDAuODcpfWAsIGxpbmVIZWlnaHQ6IFwiMTZweFwiIH19XG4gICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgIHtzb3VyY2UubmFtZX1cbiAgICAgICAgICAgICAgICAgIDwvVHlwb2dyYXBoeT5cbiAgICAgICAgICAgICAgICA8Lz5cblxuICAgICAgICAgICAgICAgIHtpbmRleCAhPT0gYXJyYXkubGVuZ3RoIC0gMSAmJiAoXG4gICAgICAgICAgICAgICAgICA8RGl2aWRlclxuICAgICAgICAgICAgICAgICAgICBmbGV4SXRlbVxuICAgICAgICAgICAgICAgICAgICBvcmllbnRhdGlvbj1cInZlcnRpY2FsXCJcbiAgICAgICAgICAgICAgICAgICAgc3g9e3sgYm9yZGVyQ29sb3I6IGAke2FscGhhKFwiI2ZmZmZmZlwiLCAwLjMyKX1gIH19XG4gICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgIDwvRnJhZ21lbnQ+XG4gICAgICAgICAgICApXG4gICAgICAgICAgfSl9XG4gICAgICAgICAge2lzTW9iaWxlID8gbnVsbCA6IChcbiAgICAgICAgICAgIDxJbmZvSWNvbiBleHBhbmRlZD17ZXhwYW5kZWR9IG9uQ2xpY2s9eygpID0+IHNldEV4cGFuZGVkKHByZXYgPT4gIXByZXYpfSAvPlxuICAgICAgICAgICl9XG4gICAgICAgIDwvQm94PlxuICAgICAgPC9Cb3g+XG4gICAgICA8Q29sbGFwc2UgaW49e2V4cGFuZGVkfT5cbiAgICAgICAgPFR5cG9ncmFwaHkgc3g9e3sgbXQ6IDEsIGZvbnRTaXplOiAxOCwgbGluZUhlaWdodDogXCIyNHB4XCIgfX0+e2V4cGxhaW5lcn08L1R5cG9ncmFwaHk+XG4gICAgICA8L0NvbGxhcHNlPlxuICAgIDwvQm94PlxuICApXG59XG4iXSwibmFtZXMiOlsiRW5naW5lQ2hhcnRTb3VyY2VzIiwiSW5mb0ljb24iLCJvbkNsaWNrIiwiZXhwYW5kZWQiLCJpY29uSG92ZXJlZCIsInNldEljb25Ib3ZlcmVkIiwidXNlU3RhdGUiLCJJbmZvIiwib25Nb3VzZUxlYXZlIiwic3giLCJjb2xvciIsIkluZm9PdXRsaW5lZCIsIm9uTW91c2VFbnRlciIsImV4cGxhaW5lciIsInNvdXJjZXMiLCJzZXRFeHBhbmRlZCIsImlzTW9iaWxlIiwidXNlRGV2aWNlSW5mbyIsIkJveCIsIndpZHRoIiwiZGlzcGxheSIsInByZXYiLCJ1bmRlZmluZWQiLCJib3JkZXJSYWRpdXMiLCJib3JkZXIiLCJhbHBoYSIsInAiLCJnYXAiLCJhbGlnbkl0ZW1zIiwiYmFja2dyb3VuZENvbG9yIiwiY3Vyc29yIiwiaGVpZ2h0IiwibWFwIiwic291cmNlIiwiaW5kZXgiLCJhcnJheSIsIkZyYWdtZW50IiwiaW1nIiwic3JjIiwiZmF2aWNvblVybCIsImFsdCIsIm5hbWUiLCJUeXBvZ3JhcGh5IiwiZm9udFNpemUiLCJsaW5lSGVpZ2h0IiwibGVuZ3RoIiwiRGl2aWRlciIsImZsZXhJdGVtIiwib3JpZW50YXRpb24iLCJib3JkZXJDb2xvciIsIkNvbGxhcHNlIiwiaW4iLCJtdCJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7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