{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/node_modules/micromark/lib/preprocess.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {boolean | null | undefined} [end=false]\n * @returns {Array<Chunk>}\n */\n\nconst search = /[\\0\\t\\n\\r]/g\n\n/**\n * @returns {Preprocessor}\n */\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean | undefined} */\n  let start = true\n  /** @type {boolean | undefined} */\n  let atCarriageReturn\n  return preprocessor\n\n  /** @type {Preprocessor} */\n  // eslint-disable-next-line complexity\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray | null} */\n    let match\n    /** @type {number} */\n    let next\n    /** @type {number} */\n    let startPosition\n    /** @type {number} */\n    let endPosition\n    /** @type {Code} */\n    let code\n    value =\n      buffer +\n      (typeof value === 'string'\n        ? value.toString()\n        : new TextDecoder(encoding || undefined).decode(value))\n    startPosition = 0\n    buffer = ''\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n      start = undefined\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n            while (column++ < next) chunks.push(-1)\n            break\n          }\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n      startPosition = endPosition + 1\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n    return chunks\n  }\n}\n"],"names":["preprocess","search","column","buffer","start","atCarriageReturn","preprocessor","value","encoding","end","chunks","match","next","startPosition","endPosition","code","toString","TextDecoder","undefined","decode","charCodeAt","length","lastIndex","exec","index","slice","push","Math","ceil"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA;;;;;CAKC,GAED;;;;;;CAMC;;;;+BAOeA;;;eAAAA;;;AALhB,MAAMC,SAAS;AAKR,SAASD;IACd,IAAIE,SAAS;IACb,IAAIC,SAAS;IACb,gCAAgC,GAChC,IAAIC,QAAQ;IACZ,gCAAgC,GAChC,IAAIC;IACJ,OAAOC;IAEP,yBAAyB,GACzB,sCAAsC;IACtC,SAASA,aAAaC,KAAK,EAAEC,QAAQ,EAAEC,GAAG;QACxC,yBAAyB,GACzB,MAAMC,SAAS,EAAE;QACjB,oCAAoC,GACpC,IAAIC;QACJ,mBAAmB,GACnB,IAAIC;QACJ,mBAAmB,GACnB,IAAIC;QACJ,mBAAmB,GACnB,IAAIC;QACJ,iBAAiB,GACjB,IAAIC;QACJR,QACEJ,SACC,CAAA,OAAOI,UAAU,WACdA,MAAMS,QAAQ,KACd,IAAIC,YAAYT,YAAYU,WAAWC,MAAM,CAACZ,MAAK;QACzDM,gBAAgB;QAChBV,SAAS;QACT,IAAIC,OAAO;YACT,+DAA+D;YAC/D,IAAIG,MAAMa,UAAU,CAAC,OAAO,OAAO;gBACjCP;YACF;YACAT,QAAQc;QACV;QACA,MAAOL,gBAAgBN,MAAMc,MAAM,CAAE;YACnCpB,OAAOqB,SAAS,GAAGT;YACnBF,QAAQV,OAAOsB,IAAI,CAAChB;YACpBO,cACEH,SAASA,MAAMa,KAAK,KAAKN,YAAYP,MAAMa,KAAK,GAAGjB,MAAMc,MAAM;YACjEN,OAAOR,MAAMa,UAAU,CAACN;YACxB,IAAI,CAACH,OAAO;gBACVR,SAASI,MAAMkB,KAAK,CAACZ;gBACrB;YACF;YACA,IAAIE,SAAS,MAAMF,kBAAkBC,eAAeT,kBAAkB;gBACpEK,OAAOgB,IAAI,CAAC,CAAC;gBACbrB,mBAAmBa;YACrB,OAAO;gBACL,IAAIb,kBAAkB;oBACpBK,OAAOgB,IAAI,CAAC,CAAC;oBACbrB,mBAAmBa;gBACrB;gBACA,IAAIL,gBAAgBC,aAAa;oBAC/BJ,OAAOgB,IAAI,CAACnB,MAAMkB,KAAK,CAACZ,eAAeC;oBACvCZ,UAAUY,cAAcD;gBAC1B;gBACA,OAAQE;oBACN,KAAK;wBAAG;4BACNL,OAAOgB,IAAI,CAAC;4BACZxB;4BACA;wBACF;oBACA,KAAK;wBAAG;4BACNU,OAAOe,KAAKC,IAAI,CAAC1B,SAAS,KAAK;4BAC/BQ,OAAOgB,IAAI,CAAC,CAAC;4BACb,MAAOxB,WAAWU,KAAMF,OAAOgB,IAAI,CAAC,CAAC;4BACrC;wBACF;oBACA,KAAK;wBAAI;4BACPhB,OAAOgB,IAAI,CAAC,CAAC;4BACbxB,SAAS;4BACT;wBACF;oBACA;wBAAS;4BACPG,mBAAmB;4BACnBH,SAAS;wBACX;gBACF;YACF;YACAW,gBAAgBC,cAAc;QAChC;QACA,IAAIL,KAAK;YACP,IAAIJ,kBAAkBK,OAAOgB,IAAI,CAAC,CAAC;YACnC,IAAIvB,QAAQO,OAAOgB,IAAI,CAACvB;YACxBO,OAAOgB,IAAI,CAAC;QACd;QACA,OAAOhB;IACT;AACF"}