{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/discovery-sidebar/src/Mentions/MentionsPanel.tsx"],"sourcesContent":["import { useCallback, useState } from \"react\"\nimport { CqsChunkStory, CqsItem, CqsStory, isChunkStory } from \"@rp/common/api-types\"\nimport { Watchlist } from \"@rp/common/api-types\"\nimport { ShowMoreList } from \"@rp/react/web/common/composite-components\"\nimport { useEntitiesStyles } from \"@rp/react/web/common/document-viewer\"\nimport { useQueryContext } from \"@rp/react/web/common/providers\"\nimport { capitalize } from \"@rp/react/web/mui/core\"\nimport { RpJsonAnnotationStyles } from \"@rp/react/web/rpjson\"\nimport { useMentionPreview } from \"../hooks/useMentionPreview\"\nimport { LoadingMentions } from \"./LoadingMentions\"\nimport { MentionHeader } from \"./MentionHeader\"\nimport { MentionsList } from \"./Mentions.styles\"\nimport { MentionsCard } from \"./MentionsCard\"\nimport { MentionsClusterView } from \"./MentionsClusterView\"\n\ntype Props = {\n  rowData: CqsItem\n  handleClose: () => void\n  onChange: (item: CqsItem) => void\n  title: string\n  onAddToWatchlist?: (watchlist: Watchlist) => void\n  onExclude: (item: CqsItem) => void\n  isFeedbackMode: boolean\n}\n\nconst MentionsPanel = ({\n  rowData,\n  handleClose,\n  onChange,\n  title,\n  onAddToWatchlist,\n  onExclude,\n  isFeedbackMode,\n}: Props) => {\n  const [cluster, setCluster] = useState<Array<CqsStory> | null>(null)\n\n  const closeClusterView = useCallback(() => {\n    setCluster(null)\n  }, [])\n\n  const { searchQuery, queryId } = useQueryContext()\n\n  const {\n    stories,\n    fetchNextPage,\n    isFetchingNextPage,\n    hasNextPage,\n    isLoading: isLoadingMentions,\n  } = useMentionPreview(rowData, true)\n\n  const highlights = [\n    ...useEntitiesStyles([rowData.key], [\"entity\", \"rp_topic\"].includes(rowData.queryType)),\n  ]\n\n  if (cluster) {\n    return (\n      <MentionsClusterView\n        isFeedbackMode={isFeedbackMode}\n        rowData={rowData}\n        cluster={cluster}\n        onExclude={onExclude}\n        onChange={onChange}\n        onAddToWatchlist={onAddToWatchlist}\n        onClose={closeClusterView}\n        queryId={queryId}\n        query={searchQuery}\n        highlights={highlights}\n      />\n    )\n  }\n\n  return (\n    <div>\n      <MentionHeader\n        onClose={handleClose}\n        item={rowData}\n        backButtonTitle={`Back to ${capitalize(title)}`}\n        onChange={onChange}\n        onExclude={onExclude}\n        onAddToWatchlist={onAddToWatchlist}\n      />\n      {isLoadingMentions ? (\n        <LoadingMentions />\n      ) : (\n        <RpJsonAnnotationStyles highlights={highlights}>\n          <MentionsList>\n            <ShowMoreList<CqsStory | CqsChunkStory>\n              renderItem={(item, index) => {\n                if (isChunkStory(item)) {\n                  return <div key={item.id}>Chunks on mentions not implemented yet.</div>\n                }\n\n                return (\n                  <MentionsCard\n                    isFeedbackMode={isFeedbackMode}\n                    key={item.id}\n                    story={item}\n                    query={searchQuery}\n                    index={index}\n                    queryId={queryId}\n                    onClusterClick={cluster => setCluster(cluster)}\n                  />\n                )\n              }}\n              items={stories}\n              loading={isFetchingNextPage}\n              fetchNextPage={fetchNextPage}\n              hasNextPage={hasNextPage}\n            />\n          </MentionsList>\n        </RpJsonAnnotationStyles>\n      )}\n    </div>\n  )\n}\n\nexport { MentionsPanel }\n"],"names":["MentionsPanel","rowData","handleClose","onChange","title","onAddToWatchlist","onExclude","isFeedbackMode","cluster","setCluster","useState","closeClusterView","useCallback","searchQuery","queryId","useQueryContext","stories","fetchNextPage","isFetchingNextPage","hasNextPage","isLoading","isLoadingMentions","useMentionPreview","highlights","useEntitiesStyles","key","includes","queryType","MentionsClusterView","onClose","query","div","MentionHeader","item","backButtonTitle","capitalize","LoadingMentions","RpJsonAnnotationStyles","MentionsList","ShowMoreList","renderItem","index","isChunkStory","id","MentionsCard","story","onClusterClick","items","loading"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAoHSA;;;eAAAA;;;;uBApH6B;0BACyB;qCAElC;gCACK;2BACF;sBACL;wBACY;mCACL;iCACF;+BACF;gCACD;8BACA;qCACO;AAYpC,MAAMA,gBAAgB,CAAC,EACrBC,OAAO,EACPC,WAAW,EACXC,QAAQ,EACRC,KAAK,EACLC,gBAAgB,EAChBC,SAAS,EACTC,cAAc,EACR;IACN,MAAM,CAACC,SAASC,WAAW,GAAGC,IAAAA,eAAQ,EAAyB;IAE/D,MAAMC,mBAAmBC,IAAAA,kBAAW,EAAC;QACnCH,WAAW;IACb,GAAG,EAAE;IAEL,MAAM,EAAEI,WAAW,EAAEC,OAAO,EAAE,GAAGC,IAAAA,0BAAe;IAEhD,MAAM,EACJC,OAAO,EACPC,aAAa,EACbC,kBAAkB,EAClBC,WAAW,EACXC,WAAWC,iBAAiB,EAC7B,GAAGC,IAAAA,oCAAiB,EAACrB,SAAS;IAE/B,MAAMsB,aAAa;WACdC,IAAAA,iCAAiB,EAAC;YAACvB,QAAQwB,GAAG;SAAC,EAAE;YAAC;YAAU;SAAW,CAACC,QAAQ,CAACzB,QAAQ0B,SAAS;KACtF;IAED,IAAInB,SAAS;QACX,qBACE,qBAACoB,wCAAmB;YAClBrB,gBAAgBA;YAChBN,SAASA;YACTO,SAASA;YACTF,WAAWA;YACXH,UAAUA;YACVE,kBAAkBA;YAClBwB,SAASlB;YACTG,SAASA;YACTgB,OAAOjB;YACPU,YAAYA;;IAGlB;IAEA,qBACE,sBAACQ;;0BACC,qBAACC,4BAAa;gBACZH,SAAS3B;gBACT+B,MAAMhC;gBACNiC,iBAAiB,CAAC,QAAQ,EAAEC,IAAAA,gBAAU,EAAC/B,OAAO,CAAC;gBAC/CD,UAAUA;gBACVG,WAAWA;gBACXD,kBAAkBA;;YAEnBgB,kCACC,qBAACe,gCAAe,sBAEhB,qBAACC,8BAAsB;gBAACd,YAAYA;0BAClC,cAAA,qBAACe,4BAAY;8BACX,cAAA,qBAACC,iCAAY;wBACXC,YAAY,CAACP,MAAMQ;4BACjB,IAAIC,IAAAA,sBAAY,EAACT,OAAO;gCACtB,qBAAO,qBAACF;8CAAkB;mCAATE,KAAKU,EAAE;4BAC1B;4BAEA,qBACE,qBAACC,0BAAY;gCACXrC,gBAAgBA;gCAEhBsC,OAAOZ;gCACPH,OAAOjB;gCACP4B,OAAOA;gCACP3B,SAASA;gCACTgC,gBAAgBtC,CAAAA,UAAWC,WAAWD;+BALjCyB,KAAKU,EAAE;wBAQlB;wBACAI,OAAO/B;wBACPgC,SAAS9B;wBACTD,eAAeA;wBACfE,aAAaA;;;;;;AAO3B"}