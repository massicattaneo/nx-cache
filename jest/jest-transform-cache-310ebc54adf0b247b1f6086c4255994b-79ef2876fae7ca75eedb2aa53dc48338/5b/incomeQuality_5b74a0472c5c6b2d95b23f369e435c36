692aefcfc74fe01847255107be9334ce
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "incomeQuality", {
    enumerable: true,
    get: function() {
        return incomeQuality;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _icons = require("@rp/react/web/mui/icons");
require("@tanstack/react-table");
const _companyKeyMetrics = require("../endpoints/companyKeyMetrics");
const _companyRatios = require("../endpoints/companyRatios");
const _genericTable = require("../genericTable");
const _cacheTimeHelper = require("../utils/cacheTimeHelper");
const incomeQuality = (0, _genericTable.genericTable)({
    tableName: "incomeQuality",
    tableLabel: "Income Quality",
    tableIcon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.GppGoodOutlined, {}),
    defaultVisible: [
        {
            endpoint: "companyKeyMetrics",
            columnKey: "incomeQualityTtm"
        },
        {
            endpoint: "companyKeyMetrics",
            columnKey: "taxBurdenTtm"
        },
        {
            endpoint: "companyKeyMetrics",
            columnKey: "interestBurdenTtm"
        },
        {
            endpoint: "companyRatios",
            columnKey: "effectiveTaxRateTtm"
        }
    ],
    headerInfo: (0, _cacheTimeHelper.createCacheHeaderInfo)("Income Quality"),
    columns: [
        _companyKeyMetrics.companyKeyMetrics.incomeQualityTtm("incomeQuality"),
        _companyKeyMetrics.companyKeyMetrics.taxBurdenTtm("incomeQuality"),
        _companyKeyMetrics.companyKeyMetrics.interestBurdenTtm("incomeQuality"),
        _companyRatios.companyRatios.effectiveTaxRateTtm("incomeQuality"),
        _companyRatios.companyRatios.netIncomePerEbtTtm("incomeQuality"),
        _companyRatios.companyRatios.ebtPerEbitTtm("incomeQuality")
    ]
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL3dhdGNobGlzdHMvc3JjL2xpYi9XYXRjaGxpc3REYXRhVGFicy90YWJsZXMvaW5jb21lUXVhbGl0eS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR3BwR29vZE91dGxpbmVkIH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvbXVpL2ljb25zXCJcbmltcG9ydCBcIkB0YW5zdGFjay9yZWFjdC10YWJsZVwiXG5pbXBvcnQgeyBjb21wYW55S2V5TWV0cmljcyB9IGZyb20gXCIuLi9lbmRwb2ludHMvY29tcGFueUtleU1ldHJpY3NcIlxuaW1wb3J0IHsgY29tcGFueVJhdGlvcyB9IGZyb20gXCIuLi9lbmRwb2ludHMvY29tcGFueVJhdGlvc1wiXG5pbXBvcnQgeyBnZW5lcmljVGFibGUgfSBmcm9tIFwiLi4vZ2VuZXJpY1RhYmxlXCJcbmltcG9ydCB7IGNyZWF0ZUNhY2hlSGVhZGVySW5mbyB9IGZyb20gXCIuLi91dGlscy9jYWNoZVRpbWVIZWxwZXJcIlxuXG5jb25zdCBpbmNvbWVRdWFsaXR5ID0gZ2VuZXJpY1RhYmxlKHtcbiAgdGFibGVOYW1lOiBcImluY29tZVF1YWxpdHlcIixcbiAgdGFibGVMYWJlbDogXCJJbmNvbWUgUXVhbGl0eVwiLFxuICB0YWJsZUljb246IDxHcHBHb29kT3V0bGluZWQgLz4sXG4gIGRlZmF1bHRWaXNpYmxlOiBbXG4gICAgeyBlbmRwb2ludDogXCJjb21wYW55S2V5TWV0cmljc1wiLCBjb2x1bW5LZXk6IFwiaW5jb21lUXVhbGl0eVR0bVwiIH0sXG4gICAgeyBlbmRwb2ludDogXCJjb21wYW55S2V5TWV0cmljc1wiLCBjb2x1bW5LZXk6IFwidGF4QnVyZGVuVHRtXCIgfSxcbiAgICB7IGVuZHBvaW50OiBcImNvbXBhbnlLZXlNZXRyaWNzXCIsIGNvbHVtbktleTogXCJpbnRlcmVzdEJ1cmRlblR0bVwiIH0sXG4gICAgeyBlbmRwb2ludDogXCJjb21wYW55UmF0aW9zXCIsIGNvbHVtbktleTogXCJlZmZlY3RpdmVUYXhSYXRlVHRtXCIgfSxcbiAgXSxcbiAgaGVhZGVySW5mbzogY3JlYXRlQ2FjaGVIZWFkZXJJbmZvKFwiSW5jb21lIFF1YWxpdHlcIiksXG4gIGNvbHVtbnM6IFtcbiAgICBjb21wYW55S2V5TWV0cmljcy5pbmNvbWVRdWFsaXR5VHRtKFwiaW5jb21lUXVhbGl0eVwiKSxcbiAgICBjb21wYW55S2V5TWV0cmljcy50YXhCdXJkZW5UdG0oXCJpbmNvbWVRdWFsaXR5XCIpLFxuICAgIGNvbXBhbnlLZXlNZXRyaWNzLmludGVyZXN0QnVyZGVuVHRtKFwiaW5jb21lUXVhbGl0eVwiKSxcbiAgICBjb21wYW55UmF0aW9zLmVmZmVjdGl2ZVRheFJhdGVUdG0oXCJpbmNvbWVRdWFsaXR5XCIpLFxuICAgIGNvbXBhbnlSYXRpb3MubmV0SW5jb21lUGVyRWJ0VHRtKFwiaW5jb21lUXVhbGl0eVwiKSxcbiAgICBjb21wYW55UmF0aW9zLmVidFBlckViaXRUdG0oXCJpbmNvbWVRdWFsaXR5XCIpLFxuICBdLFxufSlcblxuZXhwb3J0IHsgaW5jb21lUXVhbGl0eSB9XG4iXSwibmFtZXMiOlsiaW5jb21lUXVhbGl0eSIsImdlbmVyaWNUYWJsZSIsInRhYmxlTmFtZSIsInRhYmxlTGFiZWwiLCJ0YWJsZUljb24iLCJHcHBHb29kT3V0bGluZWQiLCJkZWZhdWx0VmlzaWJsZSIsImVuZHBvaW50IiwiY29sdW1uS2V5IiwiaGVhZGVySW5mbyIsImNyZWF0ZUNhY2hlSGVhZGVySW5mbyIsImNvbHVtbnMiLCJjb21wYW55S2V5TWV0cmljcyIsImluY29tZVF1YWxpdHlUdG0iLCJ0YXhCdXJkZW5UdG0iLCJpbnRlcmVzdEJ1cmRlblR0bSIsImNvbXBhbnlSYXRpb3MiLCJlZmZlY3RpdmVUYXhSYXRlVHRtIiwibmV0SW5jb21lUGVyRWJ0VHRtIiwiZWJ0UGVyRWJpdFR0bSJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBNEJTQTs7O2VBQUFBOzs7O3VCQTVCdUI7UUFDekI7bUNBQzJCOytCQUNKOzhCQUNEO2lDQUNTO0FBRXRDLE1BQU1BLGdCQUFnQkMsSUFBQUEsMEJBQVksRUFBQztJQUNqQ0MsV0FBVztJQUNYQyxZQUFZO0lBQ1pDLHlCQUFXLHFCQUFDQyxzQkFBZTtJQUMzQkMsZ0JBQWdCO1FBQ2Q7WUFBRUMsVUFBVTtZQUFxQkMsV0FBVztRQUFtQjtRQUMvRDtZQUFFRCxVQUFVO1lBQXFCQyxXQUFXO1FBQWU7UUFDM0Q7WUFBRUQsVUFBVTtZQUFxQkMsV0FBVztRQUFvQjtRQUNoRTtZQUFFRCxVQUFVO1lBQWlCQyxXQUFXO1FBQXNCO0tBQy9EO0lBQ0RDLFlBQVlDLElBQUFBLHNDQUFxQixFQUFDO0lBQ2xDQyxTQUFTO1FBQ1BDLG9DQUFpQixDQUFDQyxnQkFBZ0IsQ0FBQztRQUNuQ0Qsb0NBQWlCLENBQUNFLFlBQVksQ0FBQztRQUMvQkYsb0NBQWlCLENBQUNHLGlCQUFpQixDQUFDO1FBQ3BDQyw0QkFBYSxDQUFDQyxtQkFBbUIsQ0FBQztRQUNsQ0QsNEJBQWEsQ0FBQ0Usa0JBQWtCLENBQUM7UUFDakNGLDRCQUFhLENBQUNHLGFBQWEsQ0FBQztLQUM3QjtBQUNIIn0=