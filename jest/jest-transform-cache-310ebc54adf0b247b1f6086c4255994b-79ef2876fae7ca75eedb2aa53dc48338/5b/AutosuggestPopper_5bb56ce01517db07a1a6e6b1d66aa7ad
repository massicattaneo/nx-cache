9f62929a5b804ce3807ac3070be8cc81
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "AutosuggestPopper", {
    enumerable: true,
    get: function() {
        return AutosuggestPopper;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _compositecomponents = require("@rp/react/web/common/composite-components");
const _hooks = require("@rp/react/web/common/hooks");
const _AutoCompleteCustoms = require("./AutoCompleteCustoms");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
const MARGIN_BOTTOM = 24;
const calculateMaxHeight = (input)=>{
    const { bottom } = input.getBoundingClientRect();
    return window.innerHeight - bottom - MARGIN_BOTTOM;
};
const AutosuggestPopper = ({ open, options, dropdownTitle, inputRef, searchValue, toggleSubsidiaries, handleChange, selectedOption, backgroundColor, hideKeywordsHint = false })=>{
    const { height } = (0, _hooks.useDeviceSize)();
    const { isMobile } = (0, _hooks.useDeviceInfo)();
    const maxHeight = isMobile ? Math.min(400, height * 0.6) : inputRef === null ? undefined : calculateMaxHeight(inputRef);
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_AutoCompleteCustoms.StyledPopper, {
        open: open && options.length > 0,
        deviceHeight: height,
        anchorEl: inputRef,
        style: _object_spread({
            width: inputRef === null || inputRef === void 0 ? void 0 : inputRef.clientWidth
        }, isMobile && {
            position: "fixed",
            left: 0,
            right: 0,
            bottom: 0
        }),
        modifiers: [
            {
                name: "computeStyles",
                options: {
                    roundOffsets: false
                }
            }
        ],
        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_AutoCompleteCustoms.DropdownPaper, {
            role: "dropdown-suggestions",
            sx: {
                backgroundColor,
                maxHeight,
                height: "auto",
                overflowY: "auto"
            },
            children: [
                dropdownTitle ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_AutoCompleteCustoms.RecentSearchTitle, {
                    children: dropdownTitle
                }) : null,
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.AutoAnimateHeight, {
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)("ul", {
                        className: "MuiAutocomplete-listbox",
                        style: {
                            maxHeight: isMobile ? "100%" : undefined,
                            overflowY: "auto"
                        },
                        children: options.map((option)=>(0, _AutoCompleteCustoms.customOption)({
                                searchValue,
                                toggleSubsidiaries,
                                hideKeywordsHint
                            })({
                                "aria-selected": option.id === selectedOption,
                                role: "option",
                                onClick: ()=>handleChange(option),
                                onMouseDown: (e)=>e.preventDefault(),
                                id: option.id
                            }, option))
                    })
                })
            ]
        })
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9zZWFyY2gtYXV0b3N1Z2dlc3QtaW5wdXQvc3JjL2xpYi9VbmlmaWVkU2VhcmNoL0F1dG9zdWdnZXN0UG9wcGVyLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbmhhbmNlZFN1Z2dlc3Rpb24gfSBmcm9tIFwiQHJwL3JlYWN0L3RhbnN0YWNrLWFwaS9zdWdnZXN0aW9uXCJcbmltcG9ydCB7IEF1dG9BbmltYXRlSGVpZ2h0IH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvY29tbW9uL2NvbXBvc2l0ZS1jb21wb25lbnRzXCJcbmltcG9ydCB7IHVzZURldmljZUluZm8sIHVzZURldmljZVNpemUgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9jb21tb24vaG9va3NcIlxuaW1wb3J0IHsgRHJvcGRvd25QYXBlciwgUmVjZW50U2VhcmNoVGl0bGUsIFN0eWxlZFBvcHBlciwgY3VzdG9tT3B0aW9uIH0gZnJvbSBcIi4vQXV0b0NvbXBsZXRlQ3VzdG9tc1wiXG5cbnR5cGUgUHJvcHMgPSB7XG4gIG9wZW46IGJvb2xlYW5cbiAgdG9nZ2xlU3Vic2lkaWFyaWVzOiAocGFyZW50SWQ6IHN0cmluZykgPT4gdm9pZFxuICBzZWFyY2hWYWx1ZTogc3RyaW5nXG4gIG9wdGlvbnM6IEFycmF5PEVuaGFuY2VkU3VnZ2VzdGlvbj5cbiAgaW5wdXRSZWY6IEhUTUxFbGVtZW50IHwgbnVsbFxuICBzZWxlY3RlZE9wdGlvbjogc3RyaW5nIHwgbnVsbFxuICBoYW5kbGVDaGFuZ2U6IChvcHRpb246IEVuaGFuY2VkU3VnZ2VzdGlvbikgPT4gdm9pZFxuICBkcm9wZG93blRpdGxlPzogc3RyaW5nXG4gIGJhY2tncm91bmRDb2xvcj86IHN0cmluZ1xuICBoaWRlS2V5d29yZHNIaW50PzogYm9vbGVhblxufVxuY29uc3QgTUFSR0lOX0JPVFRPTSA9IDI0XG5cbmNvbnN0IGNhbGN1bGF0ZU1heEhlaWdodCA9IChpbnB1dDogSFRNTEVsZW1lbnQpID0+IHtcbiAgY29uc3QgeyBib3R0b20gfSA9IGlucHV0LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpXG5cbiAgcmV0dXJuIHdpbmRvdy5pbm5lckhlaWdodCAtIGJvdHRvbSAtIE1BUkdJTl9CT1RUT01cbn1cblxuY29uc3QgQXV0b3N1Z2dlc3RQb3BwZXIgPSAoe1xuICBvcGVuLFxuICBvcHRpb25zLFxuICBkcm9wZG93blRpdGxlLFxuICBpbnB1dFJlZixcbiAgc2VhcmNoVmFsdWUsXG4gIHRvZ2dsZVN1YnNpZGlhcmllcyxcbiAgaGFuZGxlQ2hhbmdlLFxuICBzZWxlY3RlZE9wdGlvbixcbiAgYmFja2dyb3VuZENvbG9yLFxuICBoaWRlS2V5d29yZHNIaW50ID0gZmFsc2UsXG59OiBQcm9wcykgPT4ge1xuICBjb25zdCB7IGhlaWdodCB9ID0gdXNlRGV2aWNlU2l6ZSgpXG4gIGNvbnN0IHsgaXNNb2JpbGUgfSA9IHVzZURldmljZUluZm8oKVxuXG4gIGNvbnN0IG1heEhlaWdodCA9IGlzTW9iaWxlXG4gICAgPyBNYXRoLm1pbig0MDAsIGhlaWdodCAqIDAuNilcbiAgICA6IGlucHV0UmVmID09PSBudWxsXG4gICAgPyB1bmRlZmluZWRcbiAgICA6IGNhbGN1bGF0ZU1heEhlaWdodChpbnB1dFJlZilcblxuICByZXR1cm4gKFxuICAgIDxTdHlsZWRQb3BwZXJcbiAgICAgIG9wZW49e29wZW4gJiYgb3B0aW9ucy5sZW5ndGggPiAwfVxuICAgICAgZGV2aWNlSGVpZ2h0PXtoZWlnaHR9XG4gICAgICBhbmNob3JFbD17aW5wdXRSZWZ9XG4gICAgICBzdHlsZT17e1xuICAgICAgICB3aWR0aDogaW5wdXRSZWY/LmNsaWVudFdpZHRoLFxuICAgICAgICAuLi4oaXNNb2JpbGUgJiYge1xuICAgICAgICAgIHBvc2l0aW9uOiBcImZpeGVkXCIsXG4gICAgICAgICAgbGVmdDogMCxcbiAgICAgICAgICByaWdodDogMCxcbiAgICAgICAgICBib3R0b206IDAsXG4gICAgICAgIH0pLFxuICAgICAgfX1cbiAgICAgIG1vZGlmaWVycz17W1xuICAgICAgICB7XG4gICAgICAgICAgbmFtZTogXCJjb21wdXRlU3R5bGVzXCIsXG4gICAgICAgICAgb3B0aW9uczoge1xuICAgICAgICAgICAgcm91bmRPZmZzZXRzOiBmYWxzZSxcbiAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgXX1cbiAgICA+XG4gICAgICA8RHJvcGRvd25QYXBlclxuICAgICAgICByb2xlPXtcImRyb3Bkb3duLXN1Z2dlc3Rpb25zXCJ9XG4gICAgICAgIHN4PXt7XG4gICAgICAgICAgYmFja2dyb3VuZENvbG9yLFxuICAgICAgICAgIG1heEhlaWdodCxcbiAgICAgICAgICBoZWlnaHQ6IFwiYXV0b1wiLFxuICAgICAgICAgIG92ZXJmbG93WTogXCJhdXRvXCIsXG4gICAgICAgIH19XG4gICAgICA+XG4gICAgICAgIHtkcm9wZG93blRpdGxlID8gPFJlY2VudFNlYXJjaFRpdGxlPntkcm9wZG93blRpdGxlfTwvUmVjZW50U2VhcmNoVGl0bGU+IDogbnVsbH1cbiAgICAgICAgPEF1dG9BbmltYXRlSGVpZ2h0PlxuICAgICAgICAgIDx1bFxuICAgICAgICAgICAgY2xhc3NOYW1lPVwiTXVpQXV0b2NvbXBsZXRlLWxpc3Rib3hcIlxuICAgICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgICAgbWF4SGVpZ2h0OiBpc01vYmlsZSA/IFwiMTAwJVwiIDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgICBvdmVyZmxvd1k6IFwiYXV0b1wiLFxuICAgICAgICAgICAgfX1cbiAgICAgICAgICA+XG4gICAgICAgICAgICB7b3B0aW9ucy5tYXAob3B0aW9uID0+XG4gICAgICAgICAgICAgIGN1c3RvbU9wdGlvbih7IHNlYXJjaFZhbHVlLCB0b2dnbGVTdWJzaWRpYXJpZXMsIGhpZGVLZXl3b3Jkc0hpbnQgfSkoXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgXCJhcmlhLXNlbGVjdGVkXCI6IG9wdGlvbi5pZCA9PT0gc2VsZWN0ZWRPcHRpb24sXG4gICAgICAgICAgICAgICAgICByb2xlOiBcIm9wdGlvblwiLFxuICAgICAgICAgICAgICAgICAgb25DbGljazogKCkgPT4gaGFuZGxlQ2hhbmdlKG9wdGlvbiksXG4gICAgICAgICAgICAgICAgICBvbk1vdXNlRG93bjogZSA9PiBlLnByZXZlbnREZWZhdWx0KCksXG4gICAgICAgICAgICAgICAgICBpZDogb3B0aW9uLmlkLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgb3B0aW9uLFxuICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgKX1cbiAgICAgICAgICA8L3VsPlxuICAgICAgICA8L0F1dG9BbmltYXRlSGVpZ2h0PlxuICAgICAgPC9Ecm9wZG93blBhcGVyPlxuICAgIDwvU3R5bGVkUG9wcGVyPlxuICApXG59XG5cbmV4cG9ydCB7IEF1dG9zdWdnZXN0UG9wcGVyIH1cbiJdLCJuYW1lcyI6WyJBdXRvc3VnZ2VzdFBvcHBlciIsIk1BUkdJTl9CT1RUT00iLCJjYWxjdWxhdGVNYXhIZWlnaHQiLCJpbnB1dCIsImJvdHRvbSIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsIndpbmRvdyIsImlubmVySGVpZ2h0Iiwib3BlbiIsIm9wdGlvbnMiLCJkcm9wZG93blRpdGxlIiwiaW5wdXRSZWYiLCJzZWFyY2hWYWx1ZSIsInRvZ2dsZVN1YnNpZGlhcmllcyIsImhhbmRsZUNoYW5nZSIsInNlbGVjdGVkT3B0aW9uIiwiYmFja2dyb3VuZENvbG9yIiwiaGlkZUtleXdvcmRzSGludCIsImhlaWdodCIsInVzZURldmljZVNpemUiLCJpc01vYmlsZSIsInVzZURldmljZUluZm8iLCJtYXhIZWlnaHQiLCJNYXRoIiwibWluIiwidW5kZWZpbmVkIiwiU3R5bGVkUG9wcGVyIiwibGVuZ3RoIiwiZGV2aWNlSGVpZ2h0IiwiYW5jaG9yRWwiLCJzdHlsZSIsIndpZHRoIiwiY2xpZW50V2lkdGgiLCJwb3NpdGlvbiIsImxlZnQiLCJyaWdodCIsIm1vZGlmaWVycyIsIm5hbWUiLCJyb3VuZE9mZnNldHMiLCJEcm9wZG93blBhcGVyIiwicm9sZSIsInN4Iiwib3ZlcmZsb3dZIiwiUmVjZW50U2VhcmNoVGl0bGUiLCJBdXRvQW5pbWF0ZUhlaWdodCIsInVsIiwiY2xhc3NOYW1lIiwibWFwIiwib3B0aW9uIiwiY3VzdG9tT3B0aW9uIiwiaWQiLCJvbkNsaWNrIiwib25Nb3VzZURvd24iLCJlIiwicHJldmVudERlZmF1bHQiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkEwR1NBOzs7ZUFBQUE7Ozs7cUNBekd5Qjt1QkFDVztxQ0FDZ0M7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBYzdFLE1BQU1DLGdCQUFnQjtBQUV0QixNQUFNQyxxQkFBcUIsQ0FBQ0M7SUFDMUIsTUFBTSxFQUFFQyxNQUFNLEVBQUUsR0FBR0QsTUFBTUUscUJBQXFCO0lBRTlDLE9BQU9DLE9BQU9DLFdBQVcsR0FBR0gsU0FBU0g7QUFDdkM7QUFFQSxNQUFNRCxvQkFBb0IsQ0FBQyxFQUN6QlEsSUFBSSxFQUNKQyxPQUFPLEVBQ1BDLGFBQWEsRUFDYkMsUUFBUSxFQUNSQyxXQUFXLEVBQ1hDLGtCQUFrQixFQUNsQkMsWUFBWSxFQUNaQyxjQUFjLEVBQ2RDLGVBQWUsRUFDZkMsbUJBQW1CLEtBQUssRUFDbEI7SUFDTixNQUFNLEVBQUVDLE1BQU0sRUFBRSxHQUFHQyxJQUFBQSxvQkFBYTtJQUNoQyxNQUFNLEVBQUVDLFFBQVEsRUFBRSxHQUFHQyxJQUFBQSxvQkFBYTtJQUVsQyxNQUFNQyxZQUFZRixXQUNkRyxLQUFLQyxHQUFHLENBQUMsS0FBS04sU0FBUyxPQUN2QlAsYUFBYSxPQUNiYyxZQUNBdkIsbUJBQW1CUztJQUV2QixxQkFDRSxxQkFBQ2UsaUNBQVk7UUFDWGxCLE1BQU1BLFFBQVFDLFFBQVFrQixNQUFNLEdBQUc7UUFDL0JDLGNBQWNWO1FBQ2RXLFVBQVVsQjtRQUNWbUIsT0FBTztZQUNMQyxLQUFLLEVBQUVwQixxQkFBQUEsK0JBQUFBLFNBQVVxQixXQUFXO1dBQ3hCWixZQUFZO1lBQ2RhLFVBQVU7WUFDVkMsTUFBTTtZQUNOQyxPQUFPO1lBQ1AvQixRQUFRO1FBQ1Y7UUFFRmdDLFdBQVc7WUFDVDtnQkFDRUMsTUFBTTtnQkFDTjVCLFNBQVM7b0JBQ1A2QixjQUFjO2dCQUNoQjtZQUNGO1NBQ0Q7a0JBRUQsY0FBQSxzQkFBQ0Msa0NBQWE7WUFDWkMsTUFBTTtZQUNOQyxJQUFJO2dCQUNGekI7Z0JBQ0FNO2dCQUNBSixRQUFRO2dCQUNSd0IsV0FBVztZQUNiOztnQkFFQ2hDLDhCQUFnQixxQkFBQ2lDLHNDQUFpQjs4QkFBRWpDO3FCQUFxQzs4QkFDMUUscUJBQUNrQyxzQ0FBaUI7OEJBQ2hCLGNBQUEscUJBQUNDO3dCQUNDQyxXQUFVO3dCQUNWaEIsT0FBTzs0QkFDTFIsV0FBV0YsV0FBVyxTQUFTSzs0QkFDL0JpQixXQUFXO3dCQUNiO2tDQUVDakMsUUFBUXNDLEdBQUcsQ0FBQ0MsQ0FBQUEsU0FDWEMsSUFBQUEsaUNBQVksRUFBQztnQ0FBRXJDO2dDQUFhQztnQ0FBb0JJOzRCQUFpQixHQUMvRDtnQ0FDRSxpQkFBaUIrQixPQUFPRSxFQUFFLEtBQUtuQztnQ0FDL0J5QixNQUFNO2dDQUNOVyxTQUFTLElBQU1yQyxhQUFha0M7Z0NBQzVCSSxhQUFhQyxDQUFBQSxJQUFLQSxFQUFFQyxjQUFjO2dDQUNsQ0osSUFBSUYsT0FBT0UsRUFBRTs0QkFDZixHQUNBRjs7Ozs7O0FBUWhCIn0=