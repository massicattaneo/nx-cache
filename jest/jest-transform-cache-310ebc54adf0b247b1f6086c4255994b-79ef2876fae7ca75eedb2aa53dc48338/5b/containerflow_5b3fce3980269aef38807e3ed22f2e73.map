{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/node_modules/mdast-util-to-markdown/lib/util/container-flow.js"],"sourcesContent":["/**\n * @typedef {import('../types.js').FlowParents} FlowParents\n * @typedef {import('../types.js').FlowChildren} FlowChildren\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\n/**\n * @param {FlowParents} parent\n *   Parent of flow nodes.\n * @param {State} state\n *   Info passed around about the current state.\n * @param {TrackFields} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined by (blank) lines.\n */\nexport function containerFlow(parent, state, info) {\n  const indexStack = state.indexStack\n  const children = parent.children || []\n  const tracker = state.createTracker(info)\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n\n  indexStack.push(-1)\n\n  while (++index < children.length) {\n    const child = children[index]\n\n    indexStack[indexStack.length - 1] = index\n\n    results.push(\n      tracker.move(\n        state.handle(child, parent, state, {\n          before: '\\n',\n          after: '\\n',\n          ...tracker.current()\n        })\n      )\n    )\n\n    if (child.type !== 'list') {\n      state.bulletLastUsed = undefined\n    }\n\n    if (index < children.length - 1) {\n      results.push(\n        tracker.move(between(child, children[index + 1], parent, state))\n      )\n    }\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n\n/**\n * @param {FlowChildren} left\n * @param {FlowChildren} right\n * @param {FlowParents} parent\n * @param {State} state\n * @returns {string}\n */\nfunction between(left, right, parent, state) {\n  let index = state.join.length\n\n  while (index--) {\n    const result = state.join[index](left, right, parent, state)\n\n    if (result === true || result === 1) {\n      break\n    }\n\n    if (typeof result === 'number') {\n      return '\\n'.repeat(1 + result)\n    }\n\n    if (result === false) {\n      return '\\n\\n<!---->\\n\\n'\n    }\n  }\n\n  return '\\n\\n'\n}\n"],"names":["containerFlow","parent","state","info","indexStack","children","tracker","createTracker","results","index","push","length","child","move","handle","before","after","current","type","bulletLastUsed","undefined","between","pop","join","left","right","result","repeat"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA;;;;;CAKC,GAED;;;;;;;;;CASC;;;;+BACeA;;;eAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAT,SAASA,cAAcC,MAAM,EAAEC,KAAK,EAAEC,IAAI;IAC/C,MAAMC,aAAaF,MAAME,UAAU;IACnC,MAAMC,WAAWJ,OAAOI,QAAQ,IAAI,EAAE;IACtC,MAAMC,UAAUJ,MAAMK,aAAa,CAACJ;IACpC,0BAA0B,GAC1B,MAAMK,UAAU,EAAE;IAClB,IAAIC,QAAQ,CAAC;IAEbL,WAAWM,IAAI,CAAC,CAAC;IAEjB,MAAO,EAAED,QAAQJ,SAASM,MAAM,CAAE;QAChC,MAAMC,QAAQP,QAAQ,CAACI,MAAM;QAE7BL,UAAU,CAACA,WAAWO,MAAM,GAAG,EAAE,GAAGF;QAEpCD,QAAQE,IAAI,CACVJ,QAAQO,IAAI,CACVX,MAAMY,MAAM,CAACF,OAAOX,QAAQC,OAAO;YACjCa,QAAQ;YACRC,OAAO;WACJV,QAAQW,OAAO;QAKxB,IAAIL,MAAMM,IAAI,KAAK,QAAQ;YACzBhB,MAAMiB,cAAc,GAAGC;QACzB;QAEA,IAAIX,QAAQJ,SAASM,MAAM,GAAG,GAAG;YAC/BH,QAAQE,IAAI,CACVJ,QAAQO,IAAI,CAACQ,QAAQT,OAAOP,QAAQ,CAACI,QAAQ,EAAE,EAAER,QAAQC;QAE7D;IACF;IAEAE,WAAWkB,GAAG;IAEd,OAAOd,QAAQe,IAAI,CAAC;AACtB;AAEA;;;;;;CAMC,GACD,SAASF,QAAQG,IAAI,EAAEC,KAAK,EAAExB,MAAM,EAAEC,KAAK;IACzC,IAAIO,QAAQP,MAAMqB,IAAI,CAACZ,MAAM;IAE7B,MAAOF,QAAS;QACd,MAAMiB,SAASxB,MAAMqB,IAAI,CAACd,MAAM,CAACe,MAAMC,OAAOxB,QAAQC;QAEtD,IAAIwB,WAAW,QAAQA,WAAW,GAAG;YACnC;QACF;QAEA,IAAI,OAAOA,WAAW,UAAU;YAC9B,OAAO,KAAKC,MAAM,CAAC,IAAID;QACzB;QAEA,IAAIA,WAAW,OAAO;YACpB,OAAO;QACT;IACF;IAEA,OAAO;AACT"}