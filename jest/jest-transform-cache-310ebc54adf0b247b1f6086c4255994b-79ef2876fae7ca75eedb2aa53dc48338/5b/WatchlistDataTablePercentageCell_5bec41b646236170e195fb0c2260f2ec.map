{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/watchlists/src/lib/WatchlistDataTabs/WatchlistDataTableCells/WatchlistDataTablePercentageCell.tsx"],"sourcesContent":["import { UseQueryResult } from \"@tanstack/react-query\"\nimport { WatchlistDataTableColoredCell } from \"./WatchlistDataTableColoredCell\"\n\ntype Props = {\n  value?: number | null\n  tooltip?: string\n  onClick?: () => void\n  queryResult?: UseQueryResult<unknown, Error>\n}\n\nfunction WatchlistDataTablePercentageCell({ value, tooltip, queryResult, onClick }: Props) {\n  const rawPrice = value ?? 0\n  const price = Intl.NumberFormat(\"en-US\", {\n    minimumFractionDigits: rawPrice >= 1000 ? 0 : 2,\n    maximumFractionDigits: 2,\n  }).format(rawPrice)\n  return (\n    <WatchlistDataTableColoredCell\n      tooltip={tooltip}\n      onClick={onClick}\n      queryResult={queryResult}\n      value={value}\n    >\n      {rawPrice > 0 ? \"+\" : \"\"}\n      {price}%\n    </WatchlistDataTableColoredCell>\n  )\n}\n\nexport { WatchlistDataTablePercentageCell }\n"],"names":["WatchlistDataTablePercentageCell","value","tooltip","queryResult","onClick","rawPrice","price","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","format","WatchlistDataTableColoredCell"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BA6BSA;;;eAAAA;;;;+CA5BqC;AAS9C,SAASA,iCAAiC,EAAEC,KAAK,EAAEC,OAAO,EAAEC,WAAW,EAAEC,OAAO,EAAS;IACvF,MAAMC,WAAWJ,kBAAAA,mBAAAA,QAAS;IAC1B,MAAMK,QAAQC,KAAKC,YAAY,CAAC,SAAS;QACvCC,uBAAuBJ,YAAY,OAAO,IAAI;QAC9CK,uBAAuB;IACzB,GAAGC,MAAM,CAACN;IACV,qBACE,sBAACO,4DAA6B;QAC5BV,SAASA;QACTE,SAASA;QACTD,aAAaA;QACbF,OAAOA;;YAENI,WAAW,IAAI,MAAM;YACrBC;YAAM;;;AAGb"}