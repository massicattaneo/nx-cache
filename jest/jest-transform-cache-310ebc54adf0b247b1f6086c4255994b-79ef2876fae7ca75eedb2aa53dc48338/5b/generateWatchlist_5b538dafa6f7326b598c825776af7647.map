{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/development/src/lib/database/generators/generateWatchlist.ts"],"sourcesContent":["import { z } from \"zod\"\nimport { bigdataSchemas } from \"@rp/common/contracts\"\nimport { DbWatchlist } from \"../db.types\"\nimport { generateDate } from \"./generateDate\"\nimport { generateId } from \"./generateId\"\nimport { adminUser, externalUser, userCollaborator, userOwner } from \"./users\"\n\ntype Props = z.infer<typeof bigdataSchemas.st_user_watchlists_CreateWatchlistParams>\ntype Input = { name: string; id?: string } & Partial<Props>\ntype WatchlistType = \"personal\" | \"community\" | \"thematic\" | \"company\" | \"public\"\ntype Opt = { type?: WatchlistType }\n\nconst users: Record<WatchlistType, typeof userOwner> = {\n  personal: userOwner,\n  public: externalUser,\n  company: userCollaborator,\n  thematic: adminUser,\n  community: adminUser,\n}\n\nexport const generateWatchlist = (def: Input, options: Opt = {}): DbWatchlist => {\n  const { type = \"personal\" } = options\n  const user = users[type]\n  const permission = type === \"company\" ? \"read\" : \"undefined\"\n  const motivation = type === \"thematic\" ? \"Why is {{company}} in this {{watchlist}}?\" : undefined\n  return {\n    id: def.id ?? generateId(),\n    owner: user.ownerUserId,\n    ownerName: user.ownerName,\n    user_id: user.ownerUserId,\n    ownerUserId: user.ownerUserId, // Seems that this is not stored in the dynamo database\n    dateCreated: generateDate(),\n    lastUpdated: generateDate(),\n    lastInteracted: generateDate(),\n    name: def.name,\n    items: def.items ?? [],\n    permissions: { editable: user.ownerUserId === userOwner.ownerUserId },\n    description: def.description ?? \"\",\n    global:\n      type === \"community\" || type === \"thematic\"\n        ? { status: \"published\", type, motivation }\n        : { status: \"private\" },\n    shared: {\n      company: { organizationId: user.organization.id, permission },\n      users: [],\n      isPublic: type === \"public\",\n    },\n    isFavorite: false,\n    favoritesCount: 0,\n  }\n}\n"],"names":["generateWatchlist","users","personal","userOwner","public","externalUser","company","userCollaborator","thematic","adminUser","community","def","options","type","user","permission","motivation","undefined","id","generateId","owner","ownerUserId","ownerName","user_id","dateCreated","generateDate","lastUpdated","lastInteracted","name","items","permissions","editable","description","global","status","shared","organizationId","organization","isPublic","isFavorite","favoritesCount"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAoBaA;;;eAAAA;;;8BAjBgB;4BACF;uBAC0C;AAOrE,MAAMC,QAAiD;IACrDC,UAAUC,gBAAS;IACnBC,QAAQC,mBAAY;IACpBC,SAASC,uBAAgB;IACzBC,UAAUC,gBAAS;IACnBC,WAAWD,gBAAS;AACtB;AAEO,MAAMT,oBAAoB,CAACW,KAAYC,UAAe,CAAC,CAAC;IAC7D,MAAM,EAAEC,OAAO,UAAU,EAAE,GAAGD;IAC9B,MAAME,OAAOb,KAAK,CAACY,KAAK;IACxB,MAAME,aAAaF,SAAS,YAAY,SAAS;IACjD,MAAMG,aAAaH,SAAS,aAAa,8CAA8CI;QAEjFN,SASGA,YAEMA;IAZf,OAAO;QACLO,IAAIP,CAAAA,UAAAA,IAAIO,EAAE,cAANP,qBAAAA,UAAUQ,IAAAA,sBAAU;QACxBC,OAAON,KAAKO,WAAW;QACvBC,WAAWR,KAAKQ,SAAS;QACzBC,SAAST,KAAKO,WAAW;QACzBA,aAAaP,KAAKO,WAAW;QAC7BG,aAAaC,IAAAA,0BAAY;QACzBC,aAAaD,IAAAA,0BAAY;QACzBE,gBAAgBF,IAAAA,0BAAY;QAC5BG,MAAMjB,IAAIiB,IAAI;QACdC,OAAOlB,CAAAA,aAAAA,IAAIkB,KAAK,cAATlB,wBAAAA,aAAa,EAAE;QACtBmB,aAAa;YAAEC,UAAUjB,KAAKO,WAAW,KAAKlB,gBAAS,CAACkB,WAAW;QAAC;QACpEW,aAAarB,CAAAA,mBAAAA,IAAIqB,WAAW,cAAfrB,8BAAAA,mBAAmB;QAChCsB,QACEpB,SAAS,eAAeA,SAAS,aAC7B;YAAEqB,QAAQ;YAAarB;YAAMG;QAAW,IACxC;YAAEkB,QAAQ;QAAU;QAC1BC,QAAQ;YACN7B,SAAS;gBAAE8B,gBAAgBtB,KAAKuB,YAAY,CAACnB,EAAE;gBAAEH;YAAW;YAC5Dd,OAAO,EAAE;YACTqC,UAAUzB,SAAS;QACrB;QACA0B,YAAY;QACZC,gBAAgB;IAClB;AACF"}