c1f83403b0a9286a00eed10016fb1673
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "generateWatchlist", {
    enumerable: true,
    get: function() {
        return generateWatchlist;
    }
});
const _generateDate = require("./generateDate");
const _generateId = require("./generateId");
const _users = require("./users");
const users = {
    personal: _users.userOwner,
    public: _users.externalUser,
    company: _users.userCollaborator,
    thematic: _users.adminUser,
    community: _users.adminUser
};
const generateWatchlist = (def, options = {})=>{
    const { type = "personal" } = options;
    const user = users[type];
    const permission = type === "company" ? "read" : "undefined";
    const motivation = type === "thematic" ? "Why is {{company}} in this {{watchlist}}?" : undefined;
    var _def_id, _def_items, _def_description;
    return {
        id: (_def_id = def.id) !== null && _def_id !== void 0 ? _def_id : (0, _generateId.generateId)(),
        owner: user.ownerUserId,
        ownerName: user.ownerName,
        user_id: user.ownerUserId,
        ownerUserId: user.ownerUserId,
        dateCreated: (0, _generateDate.generateDate)(),
        lastUpdated: (0, _generateDate.generateDate)(),
        lastInteracted: (0, _generateDate.generateDate)(),
        name: def.name,
        items: (_def_items = def.items) !== null && _def_items !== void 0 ? _def_items : [],
        permissions: {
            editable: user.ownerUserId === _users.userOwner.ownerUserId
        },
        description: (_def_description = def.description) !== null && _def_description !== void 0 ? _def_description : "",
        global: type === "community" || type === "thematic" ? {
            status: "published",
            type,
            motivation
        } : {
            status: "private"
        },
        shared: {
            company: {
                organizationId: user.organization.id,
                permission
            },
            users: [],
            isPublic: type === "public"
        },
        isFavorite: false,
        favoritesCount: 0
    };
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvZGV2ZWxvcG1lbnQvc3JjL2xpYi9kYXRhYmFzZS9nZW5lcmF0b3JzL2dlbmVyYXRlV2F0Y2hsaXN0LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHogfSBmcm9tIFwiem9kXCJcbmltcG9ydCB7IGJpZ2RhdGFTY2hlbWFzIH0gZnJvbSBcIkBycC9jb21tb24vY29udHJhY3RzXCJcbmltcG9ydCB7IERiV2F0Y2hsaXN0IH0gZnJvbSBcIi4uL2RiLnR5cGVzXCJcbmltcG9ydCB7IGdlbmVyYXRlRGF0ZSB9IGZyb20gXCIuL2dlbmVyYXRlRGF0ZVwiXG5pbXBvcnQgeyBnZW5lcmF0ZUlkIH0gZnJvbSBcIi4vZ2VuZXJhdGVJZFwiXG5pbXBvcnQgeyBhZG1pblVzZXIsIGV4dGVybmFsVXNlciwgdXNlckNvbGxhYm9yYXRvciwgdXNlck93bmVyIH0gZnJvbSBcIi4vdXNlcnNcIlxuXG50eXBlIFByb3BzID0gei5pbmZlcjx0eXBlb2YgYmlnZGF0YVNjaGVtYXMuc3RfdXNlcl93YXRjaGxpc3RzX0NyZWF0ZVdhdGNobGlzdFBhcmFtcz5cbnR5cGUgSW5wdXQgPSB7IG5hbWU6IHN0cmluZzsgaWQ/OiBzdHJpbmcgfSAmIFBhcnRpYWw8UHJvcHM+XG50eXBlIFdhdGNobGlzdFR5cGUgPSBcInBlcnNvbmFsXCIgfCBcImNvbW11bml0eVwiIHwgXCJ0aGVtYXRpY1wiIHwgXCJjb21wYW55XCIgfCBcInB1YmxpY1wiXG50eXBlIE9wdCA9IHsgdHlwZT86IFdhdGNobGlzdFR5cGUgfVxuXG5jb25zdCB1c2VyczogUmVjb3JkPFdhdGNobGlzdFR5cGUsIHR5cGVvZiB1c2VyT3duZXI+ID0ge1xuICBwZXJzb25hbDogdXNlck93bmVyLFxuICBwdWJsaWM6IGV4dGVybmFsVXNlcixcbiAgY29tcGFueTogdXNlckNvbGxhYm9yYXRvcixcbiAgdGhlbWF0aWM6IGFkbWluVXNlcixcbiAgY29tbXVuaXR5OiBhZG1pblVzZXIsXG59XG5cbmV4cG9ydCBjb25zdCBnZW5lcmF0ZVdhdGNobGlzdCA9IChkZWY6IElucHV0LCBvcHRpb25zOiBPcHQgPSB7fSk6IERiV2F0Y2hsaXN0ID0+IHtcbiAgY29uc3QgeyB0eXBlID0gXCJwZXJzb25hbFwiIH0gPSBvcHRpb25zXG4gIGNvbnN0IHVzZXIgPSB1c2Vyc1t0eXBlXVxuICBjb25zdCBwZXJtaXNzaW9uID0gdHlwZSA9PT0gXCJjb21wYW55XCIgPyBcInJlYWRcIiA6IFwidW5kZWZpbmVkXCJcbiAgY29uc3QgbW90aXZhdGlvbiA9IHR5cGUgPT09IFwidGhlbWF0aWNcIiA/IFwiV2h5IGlzIHt7Y29tcGFueX19IGluIHRoaXMge3t3YXRjaGxpc3R9fT9cIiA6IHVuZGVmaW5lZFxuICByZXR1cm4ge1xuICAgIGlkOiBkZWYuaWQgPz8gZ2VuZXJhdGVJZCgpLFxuICAgIG93bmVyOiB1c2VyLm93bmVyVXNlcklkLFxuICAgIG93bmVyTmFtZTogdXNlci5vd25lck5hbWUsXG4gICAgdXNlcl9pZDogdXNlci5vd25lclVzZXJJZCxcbiAgICBvd25lclVzZXJJZDogdXNlci5vd25lclVzZXJJZCwgLy8gU2VlbXMgdGhhdCB0aGlzIGlzIG5vdCBzdG9yZWQgaW4gdGhlIGR5bmFtbyBkYXRhYmFzZVxuICAgIGRhdGVDcmVhdGVkOiBnZW5lcmF0ZURhdGUoKSxcbiAgICBsYXN0VXBkYXRlZDogZ2VuZXJhdGVEYXRlKCksXG4gICAgbGFzdEludGVyYWN0ZWQ6IGdlbmVyYXRlRGF0ZSgpLFxuICAgIG5hbWU6IGRlZi5uYW1lLFxuICAgIGl0ZW1zOiBkZWYuaXRlbXMgPz8gW10sXG4gICAgcGVybWlzc2lvbnM6IHsgZWRpdGFibGU6IHVzZXIub3duZXJVc2VySWQgPT09IHVzZXJPd25lci5vd25lclVzZXJJZCB9LFxuICAgIGRlc2NyaXB0aW9uOiBkZWYuZGVzY3JpcHRpb24gPz8gXCJcIixcbiAgICBnbG9iYWw6XG4gICAgICB0eXBlID09PSBcImNvbW11bml0eVwiIHx8IHR5cGUgPT09IFwidGhlbWF0aWNcIlxuICAgICAgICA/IHsgc3RhdHVzOiBcInB1Ymxpc2hlZFwiLCB0eXBlLCBtb3RpdmF0aW9uIH1cbiAgICAgICAgOiB7IHN0YXR1czogXCJwcml2YXRlXCIgfSxcbiAgICBzaGFyZWQ6IHtcbiAgICAgIGNvbXBhbnk6IHsgb3JnYW5pemF0aW9uSWQ6IHVzZXIub3JnYW5pemF0aW9uLmlkLCBwZXJtaXNzaW9uIH0sXG4gICAgICB1c2VyczogW10sXG4gICAgICBpc1B1YmxpYzogdHlwZSA9PT0gXCJwdWJsaWNcIixcbiAgICB9LFxuICAgIGlzRmF2b3JpdGU6IGZhbHNlLFxuICAgIGZhdm9yaXRlc0NvdW50OiAwLFxuICB9XG59XG4iXSwibmFtZXMiOlsiZ2VuZXJhdGVXYXRjaGxpc3QiLCJ1c2VycyIsInBlcnNvbmFsIiwidXNlck93bmVyIiwicHVibGljIiwiZXh0ZXJuYWxVc2VyIiwiY29tcGFueSIsInVzZXJDb2xsYWJvcmF0b3IiLCJ0aGVtYXRpYyIsImFkbWluVXNlciIsImNvbW11bml0eSIsImRlZiIsIm9wdGlvbnMiLCJ0eXBlIiwidXNlciIsInBlcm1pc3Npb24iLCJtb3RpdmF0aW9uIiwidW5kZWZpbmVkIiwiaWQiLCJnZW5lcmF0ZUlkIiwib3duZXIiLCJvd25lclVzZXJJZCIsIm93bmVyTmFtZSIsInVzZXJfaWQiLCJkYXRlQ3JlYXRlZCIsImdlbmVyYXRlRGF0ZSIsImxhc3RVcGRhdGVkIiwibGFzdEludGVyYWN0ZWQiLCJuYW1lIiwiaXRlbXMiLCJwZXJtaXNzaW9ucyIsImVkaXRhYmxlIiwiZGVzY3JpcHRpb24iLCJnbG9iYWwiLCJzdGF0dXMiLCJzaGFyZWQiLCJvcmdhbml6YXRpb25JZCIsIm9yZ2FuaXphdGlvbiIsImlzUHVibGljIiwiaXNGYXZvcml0ZSIsImZhdm9yaXRlc0NvdW50Il0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQW9CYUE7OztlQUFBQTs7OzhCQWpCZ0I7NEJBQ0Y7dUJBQzBDO0FBT3JFLE1BQU1DLFFBQWlEO0lBQ3JEQyxVQUFVQyxnQkFBUztJQUNuQkMsUUFBUUMsbUJBQVk7SUFDcEJDLFNBQVNDLHVCQUFnQjtJQUN6QkMsVUFBVUMsZ0JBQVM7SUFDbkJDLFdBQVdELGdCQUFTO0FBQ3RCO0FBRU8sTUFBTVQsb0JBQW9CLENBQUNXLEtBQVlDLFVBQWUsQ0FBQyxDQUFDO0lBQzdELE1BQU0sRUFBRUMsT0FBTyxVQUFVLEVBQUUsR0FBR0Q7SUFDOUIsTUFBTUUsT0FBT2IsS0FBSyxDQUFDWSxLQUFLO0lBQ3hCLE1BQU1FLGFBQWFGLFNBQVMsWUFBWSxTQUFTO0lBQ2pELE1BQU1HLGFBQWFILFNBQVMsYUFBYSw4Q0FBOENJO1FBRWpGTixTQVNHQSxZQUVNQTtJQVpmLE9BQU87UUFDTE8sSUFBSVAsQ0FBQUEsVUFBQUEsSUFBSU8sRUFBRSxjQUFOUCxxQkFBQUEsVUFBVVEsSUFBQUEsc0JBQVU7UUFDeEJDLE9BQU9OLEtBQUtPLFdBQVc7UUFDdkJDLFdBQVdSLEtBQUtRLFNBQVM7UUFDekJDLFNBQVNULEtBQUtPLFdBQVc7UUFDekJBLGFBQWFQLEtBQUtPLFdBQVc7UUFDN0JHLGFBQWFDLElBQUFBLDBCQUFZO1FBQ3pCQyxhQUFhRCxJQUFBQSwwQkFBWTtRQUN6QkUsZ0JBQWdCRixJQUFBQSwwQkFBWTtRQUM1QkcsTUFBTWpCLElBQUlpQixJQUFJO1FBQ2RDLE9BQU9sQixDQUFBQSxhQUFBQSxJQUFJa0IsS0FBSyxjQUFUbEIsd0JBQUFBLGFBQWEsRUFBRTtRQUN0Qm1CLGFBQWE7WUFBRUMsVUFBVWpCLEtBQUtPLFdBQVcsS0FBS2xCLGdCQUFTLENBQUNrQixXQUFXO1FBQUM7UUFDcEVXLGFBQWFyQixDQUFBQSxtQkFBQUEsSUFBSXFCLFdBQVcsY0FBZnJCLDhCQUFBQSxtQkFBbUI7UUFDaENzQixRQUNFcEIsU0FBUyxlQUFlQSxTQUFTLGFBQzdCO1lBQUVxQixRQUFRO1lBQWFyQjtZQUFNRztRQUFXLElBQ3hDO1lBQUVrQixRQUFRO1FBQVU7UUFDMUJDLFFBQVE7WUFDTjdCLFNBQVM7Z0JBQUU4QixnQkFBZ0J0QixLQUFLdUIsWUFBWSxDQUFDbkIsRUFBRTtnQkFBRUg7WUFBVztZQUM1RGQsT0FBTyxFQUFFO1lBQ1RxQyxVQUFVekIsU0FBUztRQUNyQjtRQUNBMEIsWUFBWTtRQUNaQyxnQkFBZ0I7SUFDbEI7QUFDRiJ9