{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/chat/src/lib/Chat/ChatInput/DatasetPopper.tsx"],"sourcesContent":["import { useEffect } from \"react\"\nimport { ApplicationEntitlement, Dataset, DatasetScope } from \"@rp/common/api-types\"\nimport { chatDatasets } from \"@rp/react/common/chat\"\nimport { useAccount } from \"@rp/react/common/providers\"\nimport { useDeviceInfo } from \"@rp/react/web/common/hooks\"\nimport { Box, Paper, Popper, useTheme } from \"@rp/react/web/mui/core\"\nimport { DatasetOption } from \"./DatasetOption\"\nimport { NoDatasetsPlaceholder } from \"./NoDatasetsPlaceholder\"\n\ntype OnOptionClickParam = {\n  scope: DatasetScope\n  blocked: boolean\n  entitlements?: Array<ApplicationEntitlement>\n}\n\nfunction filterDatasets(\n  filterValue: string,\n  filterFn: (entitlements: Dataset<DatasetScope>) => boolean,\n  blockFn: (dataset: Dataset<DatasetScope>) => Dataset<DatasetScope> & { blocked: boolean },\n) {\n  if (filterValue === \"\" || filterValue === \"@\") {\n    return {\n      type: \"default\",\n      value: Object.values(chatDatasets).filter(filterFn).map(blockFn),\n    } as const\n  }\n\n  const isDirectQuery = filterValue?.startsWith(\"@\") ?? false\n  const cleanFilterValue = isDirectQuery ? filterValue.slice(1) : filterValue\n  const filterFields = isDirectQuery ? ([\"handle\"] as const) : ([\"label\", \"description\"] as const)\n\n  return {\n    type: \"searchResults\",\n    value: Object.values(chatDatasets)\n      .filter(dataset => {\n        if (!filterFn(dataset)) {\n          return false\n        }\n\n        return filterFields.some(field =>\n          isDirectQuery\n            ? dataset[field].toLowerCase().startsWith(cleanFilterValue.toLowerCase())\n            : dataset[field].toLowerCase().includes(cleanFilterValue.toLowerCase()),\n        )\n      })\n      .map(blockFn),\n  } as const\n}\n\nfunction useDatasets(\n  filterValue: string,\n  enableFreeTier = false,\n  sourceFilter: Partial<Record<string, boolean>> = {},\n) {\n  const { hasSomeEntitlement } = useAccount()\n\n  function entitlementFilter(dataset: Dataset<DatasetScope>) {\n    const isEnabled = sourceFilter?.[dataset.id] ?? true\n    if (enableFreeTier) {\n      return isEnabled\n    }\n\n    if (!dataset.entitlements) {\n      return true\n    }\n\n    if (!isEnabled) {\n      return false\n    }\n\n    return hasSomeEntitlement(dataset.entitlements)\n  }\n\n  function appendBlock(dataset: Dataset<DatasetScope>) {\n    if (!enableFreeTier) {\n      return { ...dataset, blocked: false }\n    }\n\n    return {\n      ...dataset,\n      blocked: dataset.entitlements ? !hasSomeEntitlement(dataset.entitlements) : true,\n    }\n  }\n\n  return filterDatasets(filterValue, entitlementFilter, appendBlock)\n}\n\ntype DatasetListProps = ReturnType<typeof filterDatasets> & {\n  onOptionClick: (scope: OnOptionClickParam) => void\n}\n\nconst DatasetList = ({ type, value, onOptionClick }: DatasetListProps) => {\n  return type === \"default\" ? (\n    <Box\n      sx={{\n        \"& > p\": {\n          fontSize: 12,\n          pt: 1,\n          px: 2,\n          mt: 1.5,\n          letterSpacing: 1,\n          color: \"grey.300\",\n        },\n      }}\n    >\n      {value.map(dataset => (\n        <DatasetOption\n          key={dataset.handle}\n          icon={dataset.icon}\n          description={dataset.description}\n          label={dataset.label}\n          handle={dataset.handle}\n          onClick={() =>\n            onOptionClick({\n              scope: dataset.id,\n              blocked: dataset.blocked,\n              entitlements: dataset.entitlements,\n            })\n          }\n          blocked={dataset.blocked}\n        />\n      ))}\n    </Box>\n  ) : (\n    <>\n      {value.map(dataset => (\n        <DatasetOption\n          key={dataset.handle}\n          icon={dataset.icon}\n          description={dataset.description}\n          label={dataset.label}\n          handle={dataset.handle}\n          onClick={() =>\n            onOptionClick({\n              scope: dataset.id,\n              blocked: dataset.blocked,\n              entitlements: dataset.entitlements,\n            })\n          }\n          blocked={dataset.blocked}\n        />\n      ))}\n    </>\n  )\n}\n\ntype Props = {\n  filter: string\n  inputRef: HTMLTextAreaElement | HTMLDivElement | null\n  open: boolean\n  onOptionClick: (scope: OnOptionClickParam) => void\n  setSelectedDataset?: (dataset: DatasetScope | undefined) => void\n  onClose?: () => void\n  enableFreeTier: boolean\n  sourceFilter: Partial<Record<string, boolean>>\n  isHomePageChat: boolean\n}\n\nconst DatasetPopper = ({\n  inputRef,\n  open,\n  filter,\n  onOptionClick,\n  setSelectedDataset,\n  onClose,\n  // enableFreeTier,\n  sourceFilter,\n  isHomePageChat = false,\n}: Props) => {\n  const { isMobile } = useDeviceInfo()\n  const theme = useTheme()\n\n  const filteredDatasets = useDatasets(filter, true, sourceFilter)\n\n  useEffect(() => {\n    if (!setSelectedDataset) return\n\n    if (!open || filteredDatasets.value.length === 0) {\n      setSelectedDataset(undefined)\n      return\n    }\n    if (filteredDatasets.type === \"default\") {\n      setSelectedDataset(\"news\")\n      return\n    }\n\n    setSelectedDataset(filteredDatasets.value[0].blocked ? undefined : filteredDatasets.value[0].id)\n  }, [filteredDatasets, open, setSelectedDataset])\n\n  useEffect(() => {\n    const closeDatasetOnEsc = (e: KeyboardEvent) => {\n      if (e.key === \"Escape\") {\n        onClose?.()\n      }\n    }\n\n    window.addEventListener(\"keydown\", closeDatasetOnEsc)\n\n    return () => window.removeEventListener(\"keydown\", closeDatasetOnEsc)\n  }, [onClose])\n\n  return (\n    <Popper\n      open={open}\n      anchorEl={inputRef}\n      placement={isMobile || isHomePageChat ? \"bottom\" : \"top\"}\n      modifiers={[\n        { name: \"preventOverflow\", enabled: false },\n        { name: \"flip\", enabled: false },\n      ]}\n      sx={{\n        borderTop: \"6px\",\n        width: inputRef?.clientWidth,\n        zIndex: 10000,\n      }}\n    >\n      <Paper\n        elevation={0}\n        sx={\n          isHomePageChat\n            ? {\n                backgroundColor: isMobile ? \"transparent\" : \"elevation.dp01\",\n                borderRadius: 2,\n                borderTopLeftRadius: 0,\n                borderTopRightRadius: 0,\n                border: isMobile ? undefined : \"2px solid\",\n                borderTop: 0,\n                borderColor: \"rgba(255,255,255,0.3)\",\n                mt: isMobile ? undefined : \"-1px\",\n                ml: isMobile ? undefined : \"-2px\",\n                mr: isMobile ? undefined : \"-2px\",\n                maxHeight: 340,\n                overflow: \"auto\",\n\n                ...theme.scrollbarStyles,\n              }\n            : {\n                backgroundColor: isMobile ? \"transparent\" : \"elevation.dp01\",\n                borderRadius: 2,\n                borderBottomLeftRadius: 0,\n                borderBottomRightRadius: 0,\n                border: isMobile ? undefined : \"2px solid\",\n                borderColor: \"rgba(255,255,255,0.3)\",\n                mb: isMobile ? undefined : \"-1px\",\n                ml: isMobile ? undefined : \"-2px\",\n                mr: isMobile ? undefined : \"-2px\",\n                maxHeight: 340,\n                overflow: \"auto\",\n\n                ...theme.scrollbarStyles,\n              }\n        }\n      >\n        {filteredDatasets.value.length === 0 ? (\n          <NoDatasetsPlaceholder />\n        ) : (\n          <DatasetList {...filteredDatasets} onOptionClick={onOptionClick} />\n        )}\n      </Paper>\n    </Popper>\n  )\n}\nexport { DatasetPopper, filterDatasets, useDatasets }\n"],"names":["DatasetPopper","filterDatasets","useDatasets","filterValue","filterFn","blockFn","type","value","Object","values","chatDatasets","filter","map","isDirectQuery","startsWith","cleanFilterValue","slice","filterFields","dataset","some","field","toLowerCase","includes","enableFreeTier","sourceFilter","hasSomeEntitlement","useAccount","entitlementFilter","isEnabled","id","entitlements","appendBlock","blocked","DatasetList","onOptionClick","Box","sx","fontSize","pt","px","mt","letterSpacing","color","DatasetOption","icon","description","label","handle","onClick","scope","inputRef","open","setSelectedDataset","onClose","isHomePageChat","isMobile","useDeviceInfo","theme","useTheme","filteredDatasets","useEffect","length","undefined","closeDatasetOnEsc","e","key","window","addEventListener","removeEventListener","Popper","anchorEl","placement","modifiers","name","enabled","borderTop","width","clientWidth","zIndex","Paper","elevation","backgroundColor","borderRadius","borderTopLeftRadius","borderTopRightRadius","border","borderColor","ml","mr","maxHeight","overflow","scrollbarStyles","borderBottomLeftRadius","borderBottomRightRadius","mb","NoDatasetsPlaceholder"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}