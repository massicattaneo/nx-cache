4ff06fdc725225fcd6b92cd68e8dee68
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "FindWatchlists", {
    enumerable: true,
    get: function() {
        return FindWatchlists;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _settings = require("@rp/common/settings");
const _assets = require("@rp/react/common/assets");
const _watchlists = require("@rp/react/web/common/watchlists");
const _core = require("@rp/react/web/mui/core");
const _WatchlistsListView = require("../../WatchlistsListView");
const FindWatchlists = ({ filterTerm, containerEl, onCardClick, data, isLoading, initialLines = 3, modeView })=>{
    const parts = filterTerm.toLowerCase().split(" ");
    const filtered = data === null || data === void 0 ? void 0 : data.filter((watchlist)=>{
        return parts.every((part)=>{
            var _watchlist_owner_publicUserData_firstName, _watchlist_owner, _watchlist_owner_publicUserData_lastName, _watchlist_owner1, _watchlist_global_author_name, _watchlist_global_author, _watchlist_global;
            return watchlist.name.toLowerCase().includes(part) || ((_watchlist_owner = watchlist.owner) === null || _watchlist_owner === void 0 ? void 0 : (_watchlist_owner_publicUserData_firstName = _watchlist_owner.publicUserData.firstName) === null || _watchlist_owner_publicUserData_firstName === void 0 ? void 0 : _watchlist_owner_publicUserData_firstName.toLowerCase().includes(part)) || ((_watchlist_owner1 = watchlist.owner) === null || _watchlist_owner1 === void 0 ? void 0 : (_watchlist_owner_publicUserData_lastName = _watchlist_owner1.publicUserData.lastName) === null || _watchlist_owner_publicUserData_lastName === void 0 ? void 0 : _watchlist_owner_publicUserData_lastName.toLowerCase().includes(part)) || ((_watchlist_global = watchlist.global) === null || _watchlist_global === void 0 ? void 0 : (_watchlist_global_author = _watchlist_global.author) === null || _watchlist_global_author === void 0 ? void 0 : (_watchlist_global_author_name = _watchlist_global_author.name) === null || _watchlist_global_author_name === void 0 ? void 0 : _watchlist_global_author_name.toLowerCase().includes(part));
        });
    });
    if (!isLoading && !(filtered === null || filtered === void 0 ? void 0 : filtered.length)) {
        return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
            sx: {
                height: `calc(100dvh - ${_settings.HEADER_HEIGHT + 2}px)`,
                display: "flex",
                alignItems: "center",
                justifyContent: "center",
                flexDirection: "column"
            },
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_assets.NoResultsIcon, {
                    width: 200,
                    height: 200
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                    sx: {
                        fontSize: 20,
                        fontWeight: 700,
                        mt: 3
                    },
                    children: "No watchlists found for your search"
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                    sx: {
                        color: "text.secondary",
                        fontSize: 16
                    },
                    children: "We couldn't find any watchlist for your search. Try something different."
                })
            ]
        });
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
        sx: {
            my: "50px",
            display: "flex",
            flexDirection: "column",
            alignItems: "center",
            width: "100%"
        },
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                sx: {
                    fontSize: 32,
                    fontWeight: 700
                },
                children: isLoading ? "Searching ..." : `${filtered === null || filtered === void 0 ? void 0 : filtered.length} watchlist${(filtered === null || filtered === void 0 ? void 0 : filtered.length) === 1 ? "" : "s"} found`
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                sx: {
                    color: "text.secondary",
                    fontSize: 16,
                    my: 2
                },
                children: isLoading ? "Loading watchlists..." : "Showing watchlists that match your search term"
            }),
            modeView === "card" && /*#__PURE__*/ (0, _jsxruntime.jsx)(_watchlists.WatchlistCardViewShowMoreList, {
                onCardClick: onCardClick,
                containerEl: containerEl,
                data: filtered,
                initialLines: initialLines
            }),
            modeView === "list" && /*#__PURE__*/ (0, _jsxruntime.jsx)(_WatchlistsListView.PublicWatchlists, {
                data: filtered,
                isLoading: !data
            })
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL3dhdGNobGlzdHMvc3JjL2xpYi9XYXRjaGxpc3RzQ2FyZFZpZXcvRmluZFdhdGNobGlzdHMvRmluZFdhdGNobGlzdHMudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9yZ2FuaXphdGlvbk1lbWJlcnNoaXBSZXNvdXJjZSB9IGZyb20gXCJAY2xlcmsvdHlwZXNcIlxuaW1wb3J0IHsgV2F0Y2hsaXN0IH0gZnJvbSBcIkBycC9jb21tb24vYXBpLXR5cGVzXCJcbmltcG9ydCB7IEhFQURFUl9IRUlHSFQgfSBmcm9tIFwiQHJwL2NvbW1vbi9zZXR0aW5nc1wiXG5pbXBvcnQgeyBOb1Jlc3VsdHNJY29uIH0gZnJvbSBcIkBycC9yZWFjdC9jb21tb24vYXNzZXRzXCJcbmltcG9ydCB7IFdhdGNobGlzdENhcmRWaWV3U2hvd01vcmVMaXN0IH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvY29tbW9uL3dhdGNobGlzdHNcIlxuaW1wb3J0IHsgQm94LCBUeXBvZ3JhcGh5IH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvbXVpL2NvcmVcIlxuaW1wb3J0IHsgUHVibGljV2F0Y2hsaXN0cyB9IGZyb20gXCIuLi8uLi9XYXRjaGxpc3RzTGlzdFZpZXdcIlxuaW1wb3J0IHsgV2F0Y2hsaXN0c01vZGVWaWV3IH0gZnJvbSBcIi4uL1dhdGNobGlzdHNDYXJkVmlld1RvZ2dsZXNcIlxuXG50eXBlIFByb3BzID0ge1xuICBmaWx0ZXJUZXJtOiBzdHJpbmdcbiAgY29udGFpbmVyRWw6IEhUTUxEaXZFbGVtZW50IHwgbnVsbFxuICBvbkNhcmRDbGljazogKHdhdGNobGlzdDogV2F0Y2hsaXN0KSA9PiB2b2lkXG4gIGRhdGE6IEFycmF5PFdhdGNobGlzdCAmIHsgb3duZXI6IE9yZ2FuaXphdGlvbk1lbWJlcnNoaXBSZXNvdXJjZSB8IHVuZGVmaW5lZCB9PiB8IHVuZGVmaW5lZFxuICBpc0xvYWRpbmc6IGJvb2xlYW5cbiAgaW5pdGlhbExpbmVzPzogbnVtYmVyXG4gIG1vZGVWaWV3OiBXYXRjaGxpc3RzTW9kZVZpZXdcbn1cblxuZXhwb3J0IGNvbnN0IEZpbmRXYXRjaGxpc3RzID0gKHtcbiAgZmlsdGVyVGVybSxcbiAgY29udGFpbmVyRWwsXG4gIG9uQ2FyZENsaWNrLFxuICBkYXRhLFxuICBpc0xvYWRpbmcsXG4gIGluaXRpYWxMaW5lcyA9IDMsXG4gIG1vZGVWaWV3LFxufTogUHJvcHMpID0+IHtcbiAgY29uc3QgcGFydHMgPSBmaWx0ZXJUZXJtLnRvTG93ZXJDYXNlKCkuc3BsaXQoXCIgXCIpXG4gIGNvbnN0IGZpbHRlcmVkID0gZGF0YT8uZmlsdGVyKHdhdGNobGlzdCA9PiB7XG4gICAgcmV0dXJuIHBhcnRzLmV2ZXJ5KFxuICAgICAgcGFydCA9PlxuICAgICAgICB3YXRjaGxpc3QubmFtZS50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKHBhcnQpIHx8XG4gICAgICAgIHdhdGNobGlzdC5vd25lcj8ucHVibGljVXNlckRhdGEuZmlyc3ROYW1lPy50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKHBhcnQpIHx8XG4gICAgICAgIHdhdGNobGlzdC5vd25lcj8ucHVibGljVXNlckRhdGEubGFzdE5hbWU/LnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMocGFydCkgfHxcbiAgICAgICAgd2F0Y2hsaXN0Lmdsb2JhbD8uYXV0aG9yPy5uYW1lPy50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKHBhcnQpLFxuICAgIClcbiAgfSlcblxuICBpZiAoIWlzTG9hZGluZyAmJiAhZmlsdGVyZWQ/Lmxlbmd0aCkge1xuICAgIHJldHVybiAoXG4gICAgICA8Qm94XG4gICAgICAgIHN4PXt7XG4gICAgICAgICAgaGVpZ2h0OiBgY2FsYygxMDBkdmggLSAke0hFQURFUl9IRUlHSFQgKyAyfXB4KWAsXG4gICAgICAgICAgZGlzcGxheTogXCJmbGV4XCIsXG4gICAgICAgICAgYWxpZ25JdGVtczogXCJjZW50ZXJcIixcbiAgICAgICAgICBqdXN0aWZ5Q29udGVudDogXCJjZW50ZXJcIixcbiAgICAgICAgICBmbGV4RGlyZWN0aW9uOiBcImNvbHVtblwiLFxuICAgICAgICB9fVxuICAgICAgPlxuICAgICAgICA8Tm9SZXN1bHRzSWNvbiB3aWR0aD17MjAwfSBoZWlnaHQ9ezIwMH0gLz5cbiAgICAgICAgPFR5cG9ncmFwaHkgc3g9e3sgZm9udFNpemU6IDIwLCBmb250V2VpZ2h0OiA3MDAsIG10OiAzIH19PlxuICAgICAgICAgIE5vIHdhdGNobGlzdHMgZm91bmQgZm9yIHlvdXIgc2VhcmNoXG4gICAgICAgIDwvVHlwb2dyYXBoeT5cbiAgICAgICAgPFR5cG9ncmFwaHkgc3g9e3sgY29sb3I6IFwidGV4dC5zZWNvbmRhcnlcIiwgZm9udFNpemU6IDE2IH19PlxuICAgICAgICAgIFdlIGNvdWxkbid0IGZpbmQgYW55IHdhdGNobGlzdCBmb3IgeW91ciBzZWFyY2guIFRyeSBzb21ldGhpbmcgZGlmZmVyZW50LlxuICAgICAgICA8L1R5cG9ncmFwaHk+XG4gICAgICA8L0JveD5cbiAgICApXG4gIH1cblxuICByZXR1cm4gKFxuICAgIDxCb3hcbiAgICAgIHN4PXt7XG4gICAgICAgIG15OiBcIjUwcHhcIixcbiAgICAgICAgZGlzcGxheTogXCJmbGV4XCIsXG4gICAgICAgIGZsZXhEaXJlY3Rpb246IFwiY29sdW1uXCIsXG4gICAgICAgIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gICAgICAgIHdpZHRoOiBcIjEwMCVcIixcbiAgICAgIH19XG4gICAgPlxuICAgICAgPFR5cG9ncmFwaHkgc3g9e3sgZm9udFNpemU6IDMyLCBmb250V2VpZ2h0OiA3MDAgfX0+XG4gICAgICAgIHtpc0xvYWRpbmdcbiAgICAgICAgICA/IFwiU2VhcmNoaW5nIC4uLlwiXG4gICAgICAgICAgOiBgJHtmaWx0ZXJlZD8ubGVuZ3RofSB3YXRjaGxpc3Qke2ZpbHRlcmVkPy5sZW5ndGggPT09IDEgPyBcIlwiIDogXCJzXCJ9IGZvdW5kYH1cbiAgICAgIDwvVHlwb2dyYXBoeT5cbiAgICAgIDxUeXBvZ3JhcGh5IHN4PXt7IGNvbG9yOiBcInRleHQuc2Vjb25kYXJ5XCIsIGZvbnRTaXplOiAxNiwgbXk6IDIgfX0+XG4gICAgICAgIHtpc0xvYWRpbmcgPyBcIkxvYWRpbmcgd2F0Y2hsaXN0cy4uLlwiIDogXCJTaG93aW5nIHdhdGNobGlzdHMgdGhhdCBtYXRjaCB5b3VyIHNlYXJjaCB0ZXJtXCJ9XG4gICAgICA8L1R5cG9ncmFwaHk+XG4gICAgICB7bW9kZVZpZXcgPT09IFwiY2FyZFwiICYmIChcbiAgICAgICAgPFdhdGNobGlzdENhcmRWaWV3U2hvd01vcmVMaXN0XG4gICAgICAgICAgb25DYXJkQ2xpY2s9e29uQ2FyZENsaWNrfVxuICAgICAgICAgIGNvbnRhaW5lckVsPXtjb250YWluZXJFbH1cbiAgICAgICAgICBkYXRhPXtmaWx0ZXJlZH1cbiAgICAgICAgICBpbml0aWFsTGluZXM9e2luaXRpYWxMaW5lc31cbiAgICAgICAgLz5cbiAgICAgICl9XG4gICAgICB7bW9kZVZpZXcgPT09IFwibGlzdFwiICYmIDxQdWJsaWNXYXRjaGxpc3RzIGRhdGE9e2ZpbHRlcmVkfSBpc0xvYWRpbmc9eyFkYXRhfSAvPn1cbiAgICA8L0JveD5cbiAgKVxufVxuIl0sIm5hbWVzIjpbIkZpbmRXYXRjaGxpc3RzIiwiZmlsdGVyVGVybSIsImNvbnRhaW5lckVsIiwib25DYXJkQ2xpY2siLCJkYXRhIiwiaXNMb2FkaW5nIiwiaW5pdGlhbExpbmVzIiwibW9kZVZpZXciLCJwYXJ0cyIsInRvTG93ZXJDYXNlIiwic3BsaXQiLCJmaWx0ZXJlZCIsImZpbHRlciIsIndhdGNobGlzdCIsImV2ZXJ5IiwicGFydCIsIm5hbWUiLCJpbmNsdWRlcyIsIm93bmVyIiwicHVibGljVXNlckRhdGEiLCJmaXJzdE5hbWUiLCJsYXN0TmFtZSIsImdsb2JhbCIsImF1dGhvciIsImxlbmd0aCIsIkJveCIsInN4IiwiaGVpZ2h0IiwiSEVBREVSX0hFSUdIVCIsImRpc3BsYXkiLCJhbGlnbkl0ZW1zIiwianVzdGlmeUNvbnRlbnQiLCJmbGV4RGlyZWN0aW9uIiwiTm9SZXN1bHRzSWNvbiIsIndpZHRoIiwiVHlwb2dyYXBoeSIsImZvbnRTaXplIiwiZm9udFdlaWdodCIsIm10IiwiY29sb3IiLCJteSIsIldhdGNobGlzdENhcmRWaWV3U2hvd01vcmVMaXN0IiwiUHVibGljV2F0Y2hsaXN0cyJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkFtQmFBOzs7ZUFBQUE7Ozs7MEJBakJpQjt3QkFDQTs0QkFDZ0I7c0JBQ2Q7b0NBQ0M7QUFhMUIsTUFBTUEsaUJBQWlCLENBQUMsRUFDN0JDLFVBQVUsRUFDVkMsV0FBVyxFQUNYQyxXQUFXLEVBQ1hDLElBQUksRUFDSkMsU0FBUyxFQUNUQyxlQUFlLENBQUMsRUFDaEJDLFFBQVEsRUFDRjtJQUNOLE1BQU1DLFFBQVFQLFdBQVdRLFdBQVcsR0FBR0MsS0FBSyxDQUFDO0lBQzdDLE1BQU1DLFdBQVdQLGlCQUFBQSwyQkFBQUEsS0FBTVEsTUFBTSxDQUFDQyxDQUFBQTtRQUM1QixPQUFPTCxNQUFNTSxLQUFLLENBQ2hCQyxDQUFBQTtnQkFFRUYsMkNBQUFBLGtCQUNBQSwwQ0FBQUEsbUJBQ0FBLCtCQUFBQSwwQkFBQUE7bUJBSEFBLFVBQVVHLElBQUksQ0FBQ1AsV0FBVyxHQUFHUSxRQUFRLENBQUNGLFdBQ3RDRixtQkFBQUEsVUFBVUssS0FBSyxjQUFmTCx3Q0FBQUEsNENBQUFBLGlCQUFpQk0sY0FBYyxDQUFDQyxTQUFTLGNBQXpDUCxnRUFBQUEsMENBQTJDSixXQUFXLEdBQUdRLFFBQVEsQ0FBQ0YsWUFDbEVGLG9CQUFBQSxVQUFVSyxLQUFLLGNBQWZMLHlDQUFBQSwyQ0FBQUEsa0JBQWlCTSxjQUFjLENBQUNFLFFBQVEsY0FBeENSLCtEQUFBQSx5Q0FBMENKLFdBQVcsR0FBR1EsUUFBUSxDQUFDRixZQUNqRUYsb0JBQUFBLFVBQVVTLE1BQU0sY0FBaEJULHlDQUFBQSwyQkFBQUEsa0JBQWtCVSxNQUFNLGNBQXhCVixnREFBQUEsZ0NBQUFBLHlCQUEwQkcsSUFBSSxjQUE5Qkgsb0RBQUFBLDhCQUFnQ0osV0FBVyxHQUFHUSxRQUFRLENBQUNGOztJQUU3RDtJQUVBLElBQUksQ0FBQ1YsYUFBYSxFQUFDTSxxQkFBQUEsK0JBQUFBLFNBQVVhLE1BQU0sR0FBRTtRQUNuQyxxQkFDRSxzQkFBQ0MsU0FBRztZQUNGQyxJQUFJO2dCQUNGQyxRQUFRLENBQUMsY0FBYyxFQUFFQyx1QkFBYSxHQUFHLEVBQUUsR0FBRyxDQUFDO2dCQUMvQ0MsU0FBUztnQkFDVEMsWUFBWTtnQkFDWkMsZ0JBQWdCO2dCQUNoQkMsZUFBZTtZQUNqQjs7OEJBRUEscUJBQUNDLHFCQUFhO29CQUFDQyxPQUFPO29CQUFLUCxRQUFROzs4QkFDbkMscUJBQUNRLGdCQUFVO29CQUFDVCxJQUFJO3dCQUFFVSxVQUFVO3dCQUFJQyxZQUFZO3dCQUFLQyxJQUFJO29CQUFFOzhCQUFHOzs4QkFHMUQscUJBQUNILGdCQUFVO29CQUFDVCxJQUFJO3dCQUFFYSxPQUFPO3dCQUFrQkgsVUFBVTtvQkFBRzs4QkFBRzs7OztJQUtqRTtJQUVBLHFCQUNFLHNCQUFDWCxTQUFHO1FBQ0ZDLElBQUk7WUFDRmMsSUFBSTtZQUNKWCxTQUFTO1lBQ1RHLGVBQWU7WUFDZkYsWUFBWTtZQUNaSSxPQUFPO1FBQ1Q7OzBCQUVBLHFCQUFDQyxnQkFBVTtnQkFBQ1QsSUFBSTtvQkFBRVUsVUFBVTtvQkFBSUMsWUFBWTtnQkFBSTswQkFDN0NoQyxZQUNHLGtCQUNBLENBQUMsRUFBRU0scUJBQUFBLCtCQUFBQSxTQUFVYSxNQUFNLENBQUMsVUFBVSxFQUFFYixDQUFBQSxxQkFBQUEsK0JBQUFBLFNBQVVhLE1BQU0sTUFBSyxJQUFJLEtBQUssSUFBSSxNQUFNLENBQUM7OzBCQUUvRSxxQkFBQ1csZ0JBQVU7Z0JBQUNULElBQUk7b0JBQUVhLE9BQU87b0JBQWtCSCxVQUFVO29CQUFJSSxJQUFJO2dCQUFFOzBCQUM1RG5DLFlBQVksMEJBQTBCOztZQUV4Q0UsYUFBYSx3QkFDWixxQkFBQ2tDLHlDQUE2QjtnQkFDNUJ0QyxhQUFhQTtnQkFDYkQsYUFBYUE7Z0JBQ2JFLE1BQU1PO2dCQUNOTCxjQUFjQTs7WUFHakJDLGFBQWEsd0JBQVUscUJBQUNtQyxvQ0FBZ0I7Z0JBQUN0QyxNQUFNTztnQkFBVU4sV0FBVyxDQUFDRDs7OztBQUc1RSJ9