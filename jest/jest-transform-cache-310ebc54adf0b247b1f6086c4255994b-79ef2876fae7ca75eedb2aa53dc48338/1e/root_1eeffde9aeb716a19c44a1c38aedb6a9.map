{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/node_modules/mdast-util-to-hast/lib/handlers/root.js"],"sourcesContent":["/**\n * @typedef {import('hast').Parents} HastParents\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastParents}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n"],"names":["root","state","node","result","type","children","wrap","all","patch","applyData"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA;;;;;CAKC,GAED,mDAAmD;AACnD;;;;;+BAYgBA;;;eAAAA;;;AAAT,SAASA,KAAKC,KAAK,EAAEC,IAAI;IAC9B,qBAAqB,GACrB,MAAMC,SAAS;QAACC,MAAM;QAAQC,UAAUJ,MAAMK,IAAI,CAACL,MAAMM,GAAG,CAACL;IAAM;IACnED,MAAMO,KAAK,CAACN,MAAMC;IAClB,OAAOF,MAAMQ,SAAS,CAACP,MAAMC;AAC/B"}