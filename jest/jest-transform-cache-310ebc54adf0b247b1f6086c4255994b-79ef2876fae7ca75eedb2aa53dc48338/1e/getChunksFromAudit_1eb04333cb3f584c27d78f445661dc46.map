{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/chat/src/lib/Chat/Chat/ChatResponse/getChunksFromAudit.ts"],"sourcesContent":["import { CqsChunkStory } from \"@rp/common/api-types\"\nimport { StoredAuditTrace } from \"@rp/react/tanstack-api/chat\"\nimport { LlmCqsTrace } from \"@rp/react/tanstack-api/llm-summary\"\n\ntype Chunk = CqsChunkStory[\"chunks\"][number]\n\nconst getChunksFromAudit = (documentId: string, audit: Array<StoredAuditTrace>) => {\n  const relatedChunks = audit\n    .flatMap(question => question.results)\n    .filter((result): result is LlmCqsTrace => result.type === \"CQS\")\n    .flatMap(result => result.values)\n    .filter(story => story.id === documentId)\n    .flatMap(story => story.chunks)\n\n  const chunkMap = new Map<number, Chunk>()\n  for (const chunk of relatedChunks) {\n    chunkMap.set(chunk.cnum, chunk)\n  }\n\n  return [...chunkMap.values()]\n}\n\nexport { getChunksFromAudit }\n"],"names":["getChunksFromAudit","documentId","audit","relatedChunks","flatMap","question","results","filter","result","type","values","story","id","chunks","chunkMap","Map","chunk","set","cnum"],"rangeMappings":";;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAsBSA;;;eAAAA;;;AAhBT,MAAMA,qBAAqB,CAACC,YAAoBC;IAC9C,MAAMC,gBAAgBD,MACnBE,OAAO,CAACC,CAAAA,WAAYA,SAASC,OAAO,EACpCC,MAAM,CAAC,CAACC,SAAkCA,OAAOC,IAAI,KAAK,OAC1DL,OAAO,CAACI,CAAAA,SAAUA,OAAOE,MAAM,EAC/BH,MAAM,CAACI,CAAAA,QAASA,MAAMC,EAAE,KAAKX,YAC7BG,OAAO,CAACO,CAAAA,QAASA,MAAME,MAAM;IAEhC,MAAMC,WAAW,IAAIC;IACrB,KAAK,MAAMC,SAASb,cAAe;QACjCW,SAASG,GAAG,CAACD,MAAME,IAAI,EAAEF;IAC3B;IAEA,OAAO;WAAIF,SAASJ,MAAM;KAAG;AAC/B"}