00f986e2f4b277b9950e77d174558693
"use strict";
jest.mock("react-router-dom", ()=>_object_spread_props(_object_spread({}, jest.requireActual("react-router-dom")), {
        useLocation: ()=>({
                pathname: "/",
                hash: ""
            }),
        useNavigate: ()=>jest.fn()
    }));
jest.mock("@rp/react/web/common/providers", ()=>_object_spread_props(_object_spread({}, jest.requireActual("@rp/react/web/common/providers")), {
        useSnackbar: jest.fn()
    }));
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _jsxruntime = require("react/jsx-runtime");
const _reacthelmetasync = require("react-helmet-async");
const _reactrouterdom = require("react-router-dom");
const _clerkreact = require("@clerk/clerk-react");
const _axiosapi = require("@rp/react/axios-api");
const _cqsbyids = require("@rp/react/tanstack-api/cqs-by-ids");
const _theme = require("@rp/react/theme");
const _providers = require("@rp/react/web/common/providers");
const _theme1 = require("@rp/react/web/theme");
const _reactquery = require("@tanstack/react-query");
const _react = require("@testing-library/react");
const _PasswordRecoveryPage = require("./PasswordRecoveryPage");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
class FormDataOverride {
    append() {}
    delete() {}
    get(name) {
        return name;
    }
    getAll() {
        return [];
    }
    has() {
        return true;
    }
    set() {}
    forEach() {}
    entries() {
        return new FormData().entries();
    }
    keys() {
        return new FormData().keys();
    }
    values() {
        return new FormData().values();
    }
    [Symbol.iterator]() {
        throw new Error("Method not implemented.");
    }
}
const mockUseSnackbar = _providers.useSnackbar;
const mockEnqueueError = jest.fn();
const mockUseSignIn = _clerkreact.useSignIn;
const mockUseAuth = _clerkreact.useAuth;
describe("PasswordRecoveryPage", ()=>{
    it("Should render email form and have correct placeholder text in email input field", async ()=>{
        const setActive = jest.fn();
        const create = jest.fn();
        const signIn = {
            create
        };
        mockUseSignIn.mockReturnValue({
            isLoaded: true,
            signIn,
            setActive
        });
        mockUseAuth.mockReturnValue(()=>{
            return {
                isSignedIn: true
            };
        });
        mockUseSnackbar.mockReturnValue({
            enqueueError: mockEnqueueError
        });
        const { getByPlaceholderText } = (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_reacthelmetasync.HelmetProvider, {
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactquery.QueryClientProvider, {
                client: new _reactquery.QueryClient(),
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_cqsbyids.CqsByIdsProvider, {
                    client: (0, _axiosapi.getClient)("bigdata.com"),
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactrouterdom.MemoryRouter, {
                        initialEntries: [
                            "?pid=123"
                        ],
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_PasswordRecoveryPage.PasswordRecoveryPage, {})
                    })
                })
            })
        }));
        expect(getByPlaceholderText("Enter your email for a password reset code")).toBeInTheDocument();
    });
    it("Should call signIn function after click", async ()=>{
        const old = global.FormData;
        global.FormData = FormDataOverride;
        const setActive = jest.fn();
        const create = jest.fn().mockImplementation(()=>Promise.resolve());
        const signIn = {
            create
        };
        mockUseSignIn.mockReturnValue({
            isLoaded: true,
            signIn,
            setActive
        });
        mockUseAuth.mockReturnValue(()=>{
            return {
                isSignedIn: true
            };
        });
        mockUseSnackbar.mockReturnValue({
            enqueueError: mockEnqueueError
        });
        const { getByText } = (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_reacthelmetasync.HelmetProvider, {
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactquery.QueryClientProvider, {
                client: new _reactquery.QueryClient(),
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_theme1.ThemeProvider, {
                    theme: _theme.theme,
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_cqsbyids.CqsByIdsProvider, {
                        client: (0, _axiosapi.getClient)("bigdata.com"),
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactrouterdom.MemoryRouter, {
                            initialEntries: [
                                "?email=abc@ravenpack.com"
                            ],
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_PasswordRecoveryPage.PasswordRecoveryPage, {})
                        })
                    })
                })
            })
        }));
        const button = getByText(/send code/i);
        _react.fireEvent.click(button);
        await (0, _react.waitFor)(()=>{
            expect(create).toHaveBeenCalledTimes(1);
        });
        global.FormData = old;
    });
});

//# sourceMappingURL=data:application/json;base64,