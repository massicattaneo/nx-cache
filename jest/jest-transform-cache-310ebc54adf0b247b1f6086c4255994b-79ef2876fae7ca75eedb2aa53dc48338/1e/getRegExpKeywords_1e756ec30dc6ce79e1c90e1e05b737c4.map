{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/common/utils/src/lib/getRegExpKeywords.ts"],"sourcesContent":["import { splitKeywords } from \"./splitKeywords\"\n\nconst escapeStringForRegExp = (string: string) =>\n  string.replace(/[|\\\\{}()[\\]^$+*?.]/g, \"\\\\$&\").replace(/-/g, \"\\\\x2d\")\n\nconst getRegExpKeywords = (keywords: Array<string>): Array<RegExp> => {\n  return splitKeywords(keywords)\n    .filter(keyword => keyword.length) // On this app, we won't use \"\"\n    .map(keyword => {\n      // Create a word regex, \"\\b\" is a word separator\n      return new RegExp(`\\\\b${escapeStringForRegExp(keyword)}\\\\b`, \"gi\")\n    })\n}\n\nexport { getRegExpKeywords }\n"],"names":["getRegExpKeywords","escapeStringForRegExp","string","replace","keywords","splitKeywords","filter","keyword","length","map","RegExp"],"rangeMappings":";;;;;;;;;;;;;;;;;;","mappings":";;;;+BAcSA;;;eAAAA;;;+BAdqB;AAE9B,MAAMC,wBAAwB,CAACC,SAC7BA,OAAOC,OAAO,CAAC,uBAAuB,QAAQA,OAAO,CAAC,MAAM;AAE9D,MAAMH,oBAAoB,CAACI;IACzB,OAAOC,IAAAA,4BAAa,EAACD,UAClBE,MAAM,CAACC,CAAAA,UAAWA,QAAQC,MAAM,EAAE,+BAA+B;KACjEC,GAAG,CAACF,CAAAA;QACH,gDAAgD;QAChD,OAAO,IAAIG,OAAO,CAAC,GAAG,EAAET,sBAAsBM,SAAS,GAAG,CAAC,EAAE;IAC/D;AACJ"}