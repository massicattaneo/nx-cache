fa975854cbe8473f5df99835c5713bb7
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "UploadFileButton", {
    enumerable: true,
    get: function() {
        return UploadFileButton;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _material = require("@mui/material");
const _settings = require("@rp/common/settings");
const _files = require("@rp/react/web/common/files");
const _layout = require("@rp/react/web/common/layout");
const _providers = require("@rp/react/web/common/providers");
const _icons = require("@rp/react/web/mui/icons");
function UploadFileButton({ onSuccess, disableUpload }) {
    const ref = (0, _react.useRef)(null);
    const { planComparisonModal: { handleOpen: planComparisonHandleOpen } } = (0, _providers.useModal)();
    const handleClick = ()=>{
        var _ref_current;
        disableUpload ? planComparisonHandleOpen(_settings.FILES_FEATURE_NAME) : (_ref_current = ref.current) === null || _ref_current === void 0 ? void 0 : _ref_current.open();
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Box, {
        sx: {
            ml: 2
        },
        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_layout.HeaderButton, {
            onClick: handleClick,
            startIcon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.FileUploadOutlined, {}),
            variant: "contained-light",
            children: [
                "Upload File",
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_files.UploadFiles, {
                    location: "filesPage",
                    multiple: true,
                    ref: ref,
                    onSubmit: ()=>{
                        onSuccess();
                    }
                })
            ]
        }, "header-button")
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2FwcHMvY2xpZW50LXdlYi9zcmMvYXBwL3BhZ2VzL0ZpbGVzL0ZpbGVzVjIvY29tcG9uZW50cy9VcGxvYWRGaWxlc0J1dHRvbi9VcGxvYWRGaWxlQnV0dG9uLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VSZWYgfSBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IHsgQm94IH0gZnJvbSBcIkBtdWkvbWF0ZXJpYWxcIlxuaW1wb3J0IHsgRklMRVNfRkVBVFVSRV9OQU1FIH0gZnJvbSBcIkBycC9jb21tb24vc2V0dGluZ3NcIlxuaW1wb3J0IHsgVXBsb2FkSW5wdXRSZWYgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9jb21tb24vYmFzZS1jb21wb25lbnRzXCJcbmltcG9ydCB7IFVwbG9hZEZpbGVzIH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvY29tbW9uL2ZpbGVzXCJcbmltcG9ydCB7IEhlYWRlckJ1dHRvbiB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL2NvbW1vbi9sYXlvdXRcIlxuaW1wb3J0IHsgdXNlTW9kYWwgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9jb21tb24vcHJvdmlkZXJzXCJcbmltcG9ydCB7IEZpbGVVcGxvYWRPdXRsaW5lZCB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL211aS9pY29uc1wiXG5cbnR5cGUgVXBsb2FkRmlsZUJ1dHRvblByb3BzID0ge1xuICBvblN1Y2Nlc3M6ICgpID0+IHZvaWRcbiAgZGlzYWJsZVVwbG9hZDogYm9vbGVhblxufVxuXG5mdW5jdGlvbiBVcGxvYWRGaWxlQnV0dG9uKHsgb25TdWNjZXNzLCBkaXNhYmxlVXBsb2FkIH06IFVwbG9hZEZpbGVCdXR0b25Qcm9wcykge1xuICBjb25zdCByZWYgPSB1c2VSZWY8VXBsb2FkSW5wdXRSZWY+KG51bGwpXG4gIGNvbnN0IHtcbiAgICBwbGFuQ29tcGFyaXNvbk1vZGFsOiB7IGhhbmRsZU9wZW46IHBsYW5Db21wYXJpc29uSGFuZGxlT3BlbiB9LFxuICB9ID0gdXNlTW9kYWwoKVxuXG4gIGNvbnN0IGhhbmRsZUNsaWNrID0gKCkgPT4ge1xuICAgIGRpc2FibGVVcGxvYWQgPyBwbGFuQ29tcGFyaXNvbkhhbmRsZU9wZW4oRklMRVNfRkVBVFVSRV9OQU1FKSA6IHJlZi5jdXJyZW50Py5vcGVuKClcbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPEJveCBzeD17eyBtbDogMiB9fT5cbiAgICAgIDxIZWFkZXJCdXR0b25cbiAgICAgICAga2V5PVwiaGVhZGVyLWJ1dHRvblwiXG4gICAgICAgIG9uQ2xpY2s9e2hhbmRsZUNsaWNrfVxuICAgICAgICBzdGFydEljb249ezxGaWxlVXBsb2FkT3V0bGluZWQgLz59XG4gICAgICAgIHZhcmlhbnQ9XCJjb250YWluZWQtbGlnaHRcIlxuICAgICAgPlxuICAgICAgICBVcGxvYWQgRmlsZVxuICAgICAgICA8VXBsb2FkRmlsZXNcbiAgICAgICAgICBsb2NhdGlvbj1cImZpbGVzUGFnZVwiXG4gICAgICAgICAgbXVsdGlwbGVcbiAgICAgICAgICByZWY9e3JlZn1cbiAgICAgICAgICBvblN1Ym1pdD17KCkgPT4ge1xuICAgICAgICAgICAgb25TdWNjZXNzKClcbiAgICAgICAgICB9fVxuICAgICAgICAvPlxuICAgICAgPC9IZWFkZXJCdXR0b24+XG4gICAgPC9Cb3g+XG4gIClcbn1cblxuZXhwb3J0IHsgVXBsb2FkRmlsZUJ1dHRvbiB9XG4iXSwibmFtZXMiOlsiVXBsb2FkRmlsZUJ1dHRvbiIsIm9uU3VjY2VzcyIsImRpc2FibGVVcGxvYWQiLCJyZWYiLCJ1c2VSZWYiLCJwbGFuQ29tcGFyaXNvbk1vZGFsIiwiaGFuZGxlT3BlbiIsInBsYW5Db21wYXJpc29uSGFuZGxlT3BlbiIsInVzZU1vZGFsIiwiaGFuZGxlQ2xpY2siLCJGSUxFU19GRUFUVVJFX05BTUUiLCJjdXJyZW50Iiwib3BlbiIsIkJveCIsInN4IiwibWwiLCJIZWFkZXJCdXR0b24iLCJvbkNsaWNrIiwic3RhcnRJY29uIiwiRmlsZVVwbG9hZE91dGxpbmVkIiwidmFyaWFudCIsIlVwbG9hZEZpbGVzIiwibG9jYXRpb24iLCJtdWx0aXBsZSIsIm9uU3VibWl0Il0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBOENTQTs7O2VBQUFBOzs7O3VCQTlDYzswQkFDSDswQkFDZTt1QkFFUDt3QkFDQzsyQkFDSjt1QkFDVTtBQU9uQyxTQUFTQSxpQkFBaUIsRUFBRUMsU0FBUyxFQUFFQyxhQUFhLEVBQXlCO0lBQzNFLE1BQU1DLE1BQU1DLElBQUFBLGFBQU0sRUFBaUI7SUFDbkMsTUFBTSxFQUNKQyxxQkFBcUIsRUFBRUMsWUFBWUMsd0JBQXdCLEVBQUUsRUFDOUQsR0FBR0MsSUFBQUEsbUJBQVE7SUFFWixNQUFNQyxjQUFjO1lBQzZDTjtRQUEvREQsZ0JBQWdCSyx5QkFBeUJHLDRCQUFrQixLQUFJUCxlQUFBQSxJQUFJUSxPQUFPLGNBQVhSLG1DQUFBQSxhQUFhUyxJQUFJO0lBQ2xGO0lBRUEscUJBQ0UscUJBQUNDLGFBQUc7UUFBQ0MsSUFBSTtZQUFFQyxJQUFJO1FBQUU7a0JBQ2YsY0FBQSxzQkFBQ0Msb0JBQVk7WUFFWEMsU0FBU1I7WUFDVFMseUJBQVcscUJBQUNDLHlCQUFrQjtZQUM5QkMsU0FBUTs7Z0JBQ1Q7OEJBRUMscUJBQUNDLGtCQUFXO29CQUNWQyxVQUFTO29CQUNUQyxRQUFRO29CQUNScEIsS0FBS0E7b0JBQ0xxQixVQUFVO3dCQUNSdkI7b0JBQ0Y7OztXQVpFOztBQWlCWiJ9