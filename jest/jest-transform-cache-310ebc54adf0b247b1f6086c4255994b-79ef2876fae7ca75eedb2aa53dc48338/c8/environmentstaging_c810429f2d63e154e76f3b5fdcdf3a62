fa7a5b6ec571e384f63cf38d6b5ea37a
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "environment", {
    enumerable: true,
    get: function() {
        return environment;
    }
});
const _environmentstaging = require("./common/environment.staging");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const environment = _object_spread_props(_object_spread({}, _environmentstaging.environment), {
    flags: {
        enableDevTools: false,
        enableFeedbackMode: false,
        enablePortfolioUpload: false,
        enableMSW: false,
        enableQaaTools: false,
        enableChatMetrics: false,
        enableUseMasterRouter: true,
        enableReduceTimeToShowNativeRateModal: false,
        enableCommunityLink: false,
        enableAgentMode: true,
        enableLegalConsentModal: true,
        search: false,
        file: true,
        watchlist: true,
        chat: true,
        brief: true,
        enableFreemium: true,
        enableSourceFiles: true,
        enableSourceEarningsCalls: true,
        enableSourceRegulatoryFilings: true,
        enableSourceEstimates: true,
        enableSourceJobAnalytics: true,
        enableSourcePricingData: true,
        enableSourceSentiment: true,
        enableSourceCrunchbase: true,
        enableSourceKnowledgeGraph: true,
        enableSourceEtfHoldings: true,
        enableSourceMarketIntelligence: true,
        enableSourceFactsetTranscripts: true,
        enableSourcePricingCulture: true,
        enableSourceQuartrPro: true,
        enableSourceCryptoMarkets: true,
        enableSourceMiddleEastMarkets: true,
        enableSourceFinancialTimes: false,
        enableSourceExpertNetworks: true,
        enablePDFHighlight: false,
        enableFilePageV2: false,
        enableCustomInstructions: false
    },
    app: {
        title: "Bigdata",
        url: "https://app.stg.bigdata.com",
        apiUrl: "https://api.stg.bigdata.com",
        proxyUrl: "https://app.stg.bigdata.com/api",
        taUrl: "https://stg.text-analytics.bigdata.com/1.0",
        wsUrl: "wss://ws.stg.bigdata.com",
        marketingUrl: "https://stg.bigdata.com",
        salesPortalUrl: "https://sites.google.com/ravenpack.com/ravenpacksalesportal/home",
        docsUrl: "https://docs.bigdata.com",
        agentsUrl: "https://agents.stg.internal.bigdata.com"
    },
    nativeApp: {
        iosId: "com.ravenpack.bigdata",
        androidId: "com.bigdata.ravenpack",
        nativeChartUrl: `${_environmentstaging.environment.webAppUrl}/native-chart/index.html`
    },
    tagManager: {
        id: "GTM-PFT937B"
    },
    googleAnalytics: {
        id: "G-30P2HX0YPZ"
    },
    sentry: {
        enabled: true,
        dsn: "https://a22cdeea23844503a05f91d7b6a9147c@sentry.ravenpack.com/15"
    },
    sentryNative: {
        enabled: true,
        dsn: "https://5cbf1c15a56443919b1190b35f0f712d@sentry.ravenpack.com/22"
    },
    hotjar: {
        id: null
    },
    slack: {
        clientId: "11775596802.5712189877185",
        botName: "Bigdata APP-STG"
    },
    clerk: {
        clerkPubKey: "pk_test_Y29vbC1tb2NjYXNpbi05MC5jbGVyay5hY2NvdW50cy5kZXYk",
        adminWatchlistUserId: "user_2uB2fGV27oomMwcBwrk1pY2iZSj",
        origin: "https://touched-haddock-13.clerk.accounts.stg"
    },
    customerIo: {
        writeKey: "f6df7f51ec7082d00d01",
        hostName: "analytics.stg.bigdata.com"
    },
    customerIoNative: {
        siteId: "9b2ecc06a4d7389260d6",
        apiKey: "3b3373d686496ffee9d5"
    },
    chargebee: {
        site: "bigdata-test",
        publishableKey: "test_C66cQ1vKb5N4KpqOPbxE6WOoM5SVF09f"
    },
    launchDarkly: {
        mobileKey: "mob-93e99d17-2e9d-4c25-8732-4ea0558de150",
        webKey: "6863e806023795092421377a"
    }
});

//# sourceMappingURL=data:application/json;base64,