{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/common/json-db/src/lib/jsonDbTable.ts"],"sourcesContent":["type StandardData = Array<Record<string, unknown>>\ntype FindFields<Data> = Partial<Data> | ((item: Data) => boolean)\n\nexport class JsonDbTable<Data extends StandardData> {\n  private data: Data\n  private initialData: Data\n  constructor(table: Data) {\n    this.initialData = JSON.parse(JSON.stringify(table)) as Data\n    this.data = table\n  }\n  private getIndex(fields: FindFields<Data[0]>) {\n    if (fields instanceof Function) return this.data.findIndex(fields)\n    return this.data.findIndex(item => {\n      return Object.entries(fields).every(([key, value]) => {\n        return item[key] === value\n      })\n    })\n  }\n  public async findOne(fields: FindFields<Data[0]> = {}): Promise<Data[0] | undefined> {\n    const index = this.getIndex(fields)\n    return index > -1 ? this.data[index] : undefined\n  }\n  public async find(fields: FindFields<Data[0]> = {}, { exact } = { exact: false }): Promise<Data> {\n    if (fields instanceof Function) return this.data.filter(fields) as Data\n    if (!Object.entries(fields).length) return this.data\n    const ret: Data = this.data.filter(item => {\n      return Object.entries(fields).some(([key, value]) => {\n        if (exact) return item[key] === value\n        return item[key]?.toString().includes(value.toString())\n      })\n    }) as Data\n    return ret\n  }\n  public async insertOne(set: Data[0]): Promise<Data[0]> {\n    this.data.push(set)\n    return set\n  }\n  public async insertMany(sets: Data): Promise<Data> {\n    this.data.push(...sets)\n    return sets\n  }\n  public async deleteOne(fields: FindFields<Data[0]>): Promise<Data[0] | undefined> {\n    const index = this.getIndex(fields)\n    const [item] = this.data.splice(index, 1)\n    return item\n  }\n  public async clear(): Promise<undefined> {\n    this.data.splice(0, this.data.length)\n    return\n  }\n  public async updateOne(\n    fields: FindFields<Data[0]>,\n    set: Partial<Data[0]> | ((prev: Data[0]) => Partial<Data[0]>),\n  ): Promise<Data[0] | undefined> {\n    const index = this.getIndex(fields)\n    if (index > -1) {\n      const prev = this.data[index]\n      const updates = typeof set === \"function\" ? set(prev) : set\n      const clean = Object.entries(updates).reduce((acc, [key, value]) => {\n        if (value === undefined) return acc\n        return { ...acc, [key]: value }\n      }, {} as Partial<Data[0]>)\n      const item = { ...prev, ...clean }\n      this.data.splice(index, 1, item)\n      return item\n    }\n\n    return\n  }\n  public async restoreInitialData(): Promise<void> {\n    this.data = JSON.parse(JSON.stringify(this.initialData)) as Data\n  }\n}\n"],"names":["JsonDbTable","getIndex","fields","Function","data","findIndex","item","Object","entries","every","key","value","findOne","index","undefined","find","exact","filter","length","ret","some","toString","includes","insertOne","set","push","insertMany","sets","deleteOne","splice","clear","updateOne","prev","updates","clean","reduce","acc","restoreInitialData","JSON","parse","stringify","initialData","constructor","table"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}