{"version":3,"sources":["../../src/utils/dirtiness.ts"],"sourcesContent":["import { intersection } from './js_utils.js'\n\nexport const NONE: string[] = []\nexport const ALL: string[] = []\n// Add these flags for debug\n;(NONE as any).__IS_NONE__ = true\n;(ALL as any).__IS_ALL__ = true\n\n/**\n * Determines if the given handler IDs are dirty or not.\n *\n * @param dirtyIds The set of dirty handler ids\n * @param handlerIds The set of handler ids to check\n */\nexport function areDirty(\n\tdirtyIds: string[],\n\thandlerIds: string[] | undefined,\n): boolean {\n\tif (dirtyIds === NONE) {\n\t\treturn false\n\t}\n\n\tif (dirtyIds === ALL || typeof handlerIds === 'undefined') {\n\t\treturn true\n\t}\n\n\tconst commonIds = intersection(handlerIds, dirtyIds)\n\treturn commonIds.length > 0\n}\n"],"names":["ALL","NONE","areDirty","__IS_NONE__","__IS_ALL__","dirtyIds","handlerIds","commonIds","intersection","length"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;;;;;;;;IAGaA,GAAG;eAAHA;;IADAC,IAAI;eAAJA;;IAYGC,QAAQ;eAARA;;;0BAda;AAEtB,MAAMD,OAAiB,EAAE;AACzB,MAAMD,MAAgB,EAAE;AAE9BC,KAAcE,WAAW,GAAG;AAC5BH,IAAaI,UAAU,GAAG;AAQpB,SAASF,SACfG,QAAkB,EAClBC,UAAgC;IAEhC,IAAID,aAAaJ,MAAM;QACtB,OAAO;;IAGR,IAAII,aAAaL,OAAO,OAAOM,eAAe,aAAa;QAC1D,OAAO;;IAGR,MAAMC,YAAYC,IAAAA,sBAAY,EAACF,YAAYD;IAC3C,OAAOE,UAAUE,MAAM,GAAG"}