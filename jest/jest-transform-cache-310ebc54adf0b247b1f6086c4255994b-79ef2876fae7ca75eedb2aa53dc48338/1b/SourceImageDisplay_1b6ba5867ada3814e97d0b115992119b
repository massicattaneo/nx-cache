234499ec2c163b2c1554d039d56d41b2
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "SourceImageDisplay", {
    enumerable: true,
    get: function() {
        return SourceImageDisplay;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _hooks = require("@rp/react/web/common/hooks");
const _providers = require("@rp/react/web/common/providers");
const _core = require("@rp/react/web/mui/core");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
const SourceImageDisplay = ({ sources, isSummaryCompleted, height, sx, isLoading })=>{
    const { isLoaded, hasError, src, hd } = (0, _providers.useSourceImage)(sources.map((source)=>{
        var _source_imageUrls;
        return {
            hd: source.hd,
            id: source.id,
            name: source.name,
            imageUrls: (_source_imageUrls = source.imageUrls) !== null && _source_imageUrls !== void 0 ? _source_imageUrls : []
        };
    }));
    const { isMobile } = (0, _hooks.useDeviceInfo)();
    const imgHeight = height !== null && height !== void 0 ? height : isMobile ? 170 : 300;
    const loading = !isSummaryCompleted || !isLoaded || isLoading || !sources.length;
    if (hasError || isSummaryCompleted && !src) return null;
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Box, {
        sx: _object_spread({
            px: isMobile ? 2 : 0,
            "& img": {
                width: "100%",
                height: imgHeight,
                objectFit: "cover",
                borderRadius: "4px"
            }
        }, sx),
        children: loading ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Skeleton, {
            width: "100%",
            height: imgHeight,
            sx: {
                transform: "none",
                mb: 2.8
            }
        }) : /*#__PURE__*/ (0, _jsxruntime.jsx)("img", {
            src: src,
            alt: hd
        })
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9jb21wb3NpdGUtY29tcG9uZW50cy9zcmMvU291cmNlRGlzcGxheS9Tb3VyY2VJbWFnZURpc3BsYXkudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IExsbURvY3VtZW50U291cmNlIH0gZnJvbSBcIkBycC9yZWFjdC90YW5zdGFjay1hcGkvbGxtLXN1bW1hcnlcIlxuaW1wb3J0IHsgdXNlRGV2aWNlSW5mbyB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL2NvbW1vbi9ob29rc1wiXG5pbXBvcnQgeyB1c2VTb3VyY2VJbWFnZSB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL2NvbW1vbi9wcm92aWRlcnNcIlxuaW1wb3J0IHsgQm94LCBTa2VsZXRvbiB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL211aS9jb3JlXCJcbmltcG9ydCB7IFN4UHJvcHMgfSBmcm9tIFwiQHJwL3JlYWN0L3dlYi9tdWkvY29yZVwiXG5cbnR5cGUgTGxtRG9jdW1lbnRTb3VyY2VXaXRoTGlua3MgPSBMbG1Eb2N1bWVudFNvdXJjZSAmIHtcbiAgdXJsPzogc3RyaW5nIHwgbnVsbFxuICBpbWFnZVVybHM/OiBBcnJheTxzdHJpbmc+IHwgbnVsbFxufVxuXG50eXBlIFByb3BzID0ge1xuICBzb3VyY2VzOiBBcnJheTxMbG1Eb2N1bWVudFNvdXJjZVdpdGhMaW5rcz5cbiAgaXNTdW1tYXJ5Q29tcGxldGVkOiBib29sZWFuXG4gIGhlaWdodD86IHN0cmluZyB8IG51bWJlclxuICBzeD86IFN4UHJvcHNcbiAgaXNMb2FkaW5nPzogYm9vbGVhblxufVxuXG5jb25zdCBTb3VyY2VJbWFnZURpc3BsYXkgPSAoeyBzb3VyY2VzLCBpc1N1bW1hcnlDb21wbGV0ZWQsIGhlaWdodCwgc3gsIGlzTG9hZGluZyB9OiBQcm9wcykgPT4ge1xuICBjb25zdCB7IGlzTG9hZGVkLCBoYXNFcnJvciwgc3JjLCBoZCB9ID0gdXNlU291cmNlSW1hZ2UoXG4gICAgc291cmNlcy5tYXAoc291cmNlID0+ICh7XG4gICAgICBoZDogc291cmNlLmhkLFxuICAgICAgaWQ6IHNvdXJjZS5pZCxcbiAgICAgIG5hbWU6IHNvdXJjZS5uYW1lLFxuICAgICAgaW1hZ2VVcmxzOiBzb3VyY2UuaW1hZ2VVcmxzID8/IFtdLFxuICAgIH0pKSxcbiAgKVxuICBjb25zdCB7IGlzTW9iaWxlIH0gPSB1c2VEZXZpY2VJbmZvKClcbiAgY29uc3QgaW1nSGVpZ2h0ID0gaGVpZ2h0ID8/IChpc01vYmlsZSA/IDE3MCA6IDMwMClcbiAgY29uc3QgbG9hZGluZyA9ICFpc1N1bW1hcnlDb21wbGV0ZWQgfHwgIWlzTG9hZGVkIHx8IGlzTG9hZGluZyB8fCAhc291cmNlcy5sZW5ndGhcblxuICBpZiAoaGFzRXJyb3IgfHwgKGlzU3VtbWFyeUNvbXBsZXRlZCAmJiAhc3JjKSkgcmV0dXJuIG51bGxcbiAgcmV0dXJuIChcbiAgICA8Qm94XG4gICAgICBzeD17e1xuICAgICAgICBweDogaXNNb2JpbGUgPyAyIDogMCxcbiAgICAgICAgXCImIGltZ1wiOiB7XG4gICAgICAgICAgd2lkdGg6IFwiMTAwJVwiLFxuICAgICAgICAgIGhlaWdodDogaW1nSGVpZ2h0LFxuICAgICAgICAgIG9iamVjdEZpdDogXCJjb3ZlclwiLFxuICAgICAgICAgIGJvcmRlclJhZGl1czogXCI0cHhcIixcbiAgICAgICAgfSxcbiAgICAgICAgLi4uc3gsXG4gICAgICB9fVxuICAgID5cbiAgICAgIHtsb2FkaW5nID8gKFxuICAgICAgICA8U2tlbGV0b24gd2lkdGg9XCIxMDAlXCIgaGVpZ2h0PXtpbWdIZWlnaHR9IHN4PXt7IHRyYW5zZm9ybTogXCJub25lXCIsIG1iOiAyLjggfX0gLz5cbiAgICAgICkgOiAoXG4gICAgICAgIDxpbWcgc3JjPXtzcmN9IGFsdD17aGR9IC8+XG4gICAgICApfVxuICAgIDwvQm94PlxuICApXG59XG5cbmV4cG9ydCB7IFNvdXJjZUltYWdlRGlzcGxheSB9XG4iXSwibmFtZXMiOlsiU291cmNlSW1hZ2VEaXNwbGF5Iiwic291cmNlcyIsImlzU3VtbWFyeUNvbXBsZXRlZCIsImhlaWdodCIsInN4IiwiaXNMb2FkaW5nIiwiaXNMb2FkZWQiLCJoYXNFcnJvciIsInNyYyIsImhkIiwidXNlU291cmNlSW1hZ2UiLCJtYXAiLCJzb3VyY2UiLCJpZCIsIm5hbWUiLCJpbWFnZVVybHMiLCJpc01vYmlsZSIsInVzZURldmljZUluZm8iLCJpbWdIZWlnaHQiLCJsb2FkaW5nIiwibGVuZ3RoIiwiQm94IiwicHgiLCJ3aWR0aCIsIm9iamVjdEZpdCIsImJvcmRlclJhZGl1cyIsIlNrZWxldG9uIiwidHJhbnNmb3JtIiwibWIiLCJpbWciLCJhbHQiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQXVEU0E7OztlQUFBQTs7Ozt1QkF0RHFCOzJCQUNDO3NCQUNEOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWdCOUIsTUFBTUEscUJBQXFCLENBQUMsRUFBRUMsT0FBTyxFQUFFQyxrQkFBa0IsRUFBRUMsTUFBTSxFQUFFQyxFQUFFLEVBQUVDLFNBQVMsRUFBUztJQUN2RixNQUFNLEVBQUVDLFFBQVEsRUFBRUMsUUFBUSxFQUFFQyxHQUFHLEVBQUVDLEVBQUUsRUFBRSxHQUFHQyxJQUFBQSx5QkFBYyxFQUNwRFQsUUFBUVUsR0FBRyxDQUFDQyxDQUFBQTtZQUlDQTtlQUpVO1lBQ3JCSCxJQUFJRyxPQUFPSCxFQUFFO1lBQ2JJLElBQUlELE9BQU9DLEVBQUU7WUFDYkMsTUFBTUYsT0FBT0UsSUFBSTtZQUNqQkMsV0FBV0gsQ0FBQUEsb0JBQUFBLE9BQU9HLFNBQVMsY0FBaEJILCtCQUFBQSxvQkFBb0IsRUFBRTtRQUNuQztJQUFBO0lBRUYsTUFBTSxFQUFFSSxRQUFRLEVBQUUsR0FBR0MsSUFBQUEsb0JBQWE7SUFDbEMsTUFBTUMsWUFBWWYsbUJBQUFBLG9CQUFBQSxTQUFXYSxXQUFXLE1BQU07SUFDOUMsTUFBTUcsVUFBVSxDQUFDakIsc0JBQXNCLENBQUNJLFlBQVlELGFBQWEsQ0FBQ0osUUFBUW1CLE1BQU07SUFFaEYsSUFBSWIsWUFBYUwsc0JBQXNCLENBQUNNLEtBQU0sT0FBTztJQUNyRCxxQkFDRSxxQkFBQ2EsU0FBRztRQUNGakIsSUFBSTtZQUNGa0IsSUFBSU4sV0FBVyxJQUFJO1lBQ25CLFNBQVM7Z0JBQ1BPLE9BQU87Z0JBQ1BwQixRQUFRZTtnQkFDUk0sV0FBVztnQkFDWEMsY0FBYztZQUNoQjtXQUNHckI7a0JBR0plLHdCQUNDLHFCQUFDTyxjQUFRO1lBQUNILE9BQU07WUFBT3BCLFFBQVFlO1lBQVdkLElBQUk7Z0JBQUV1QixXQUFXO2dCQUFRQyxJQUFJO1lBQUk7MkJBRTNFLHFCQUFDQztZQUFJckIsS0FBS0E7WUFBS3NCLEtBQUtyQjs7O0FBSTVCIn0=