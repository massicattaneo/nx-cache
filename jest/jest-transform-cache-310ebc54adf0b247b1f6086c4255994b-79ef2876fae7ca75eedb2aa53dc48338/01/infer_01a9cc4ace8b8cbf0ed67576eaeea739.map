{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/node_modules/micromark-extension-gfm-table/lib/infer.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n/**\n * @typedef {'center' | 'left' | 'none' | 'right'} Align\n */\n\n/**\n * Figure out the alignment of a GFM table.\n *\n * @param {Readonly<Array<Event>>} events\n *   List of events.\n * @param {number} index\n *   Table enter event.\n * @returns {Array<Align>}\n *   List of aligns.\n */\nexport function gfmTableAlign(events, index) {\n  let inDelimiterRow = false\n  /** @type {Array<Align>} */\n  const align = []\n  while (index < events.length) {\n    const event = events[index]\n    if (inDelimiterRow) {\n      if (event[0] === 'enter') {\n        // Start of alignment value: set a new column.\n        // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n        if (event[1].type === 'tableContent') {\n          align.push(\n            events[index + 1][1].type === 'tableDelimiterMarker'\n              ? 'left'\n              : 'none'\n          )\n        }\n      }\n      // Exits:\n      // End of alignment value: change the column.\n      // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n      else if (event[1].type === 'tableContent') {\n        if (events[index - 1][1].type === 'tableDelimiterMarker') {\n          const alignIndex = align.length - 1\n          align[alignIndex] = align[alignIndex] === 'left' ? 'center' : 'right'\n        }\n      }\n      // Done!\n      else if (event[1].type === 'tableDelimiterRow') {\n        break\n      }\n    } else if (event[0] === 'enter' && event[1].type === 'tableDelimiterRow') {\n      inDelimiterRow = true\n    }\n    index += 1\n  }\n  return align\n}\n"],"names":["gfmTableAlign","events","index","inDelimiterRow","align","length","event","type","push","alignIndex"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA;;CAEC,GAED;;CAEC,GAED;;;;;;;;;CASC;;;;+BACeA;;;eAAAA;;;AAAT,SAASA,cAAcC,MAAM,EAAEC,KAAK;IACzC,IAAIC,iBAAiB;IACrB,yBAAyB,GACzB,MAAMC,QAAQ,EAAE;IAChB,MAAOF,QAAQD,OAAOI,MAAM,CAAE;QAC5B,MAAMC,QAAQL,MAAM,CAACC,MAAM;QAC3B,IAAIC,gBAAgB;YAClB,IAAIG,KAAK,CAAC,EAAE,KAAK,SAAS;gBACxB,8CAA8C;gBAC9C,uDAAuD;gBACvD,IAAIA,KAAK,CAAC,EAAE,CAACC,IAAI,KAAK,gBAAgB;oBACpCH,MAAMI,IAAI,CACRP,MAAM,CAACC,QAAQ,EAAE,CAAC,EAAE,CAACK,IAAI,KAAK,yBAC1B,SACA;gBAER;YACF,OAIK,IAAID,KAAK,CAAC,EAAE,CAACC,IAAI,KAAK,gBAAgB;gBACzC,IAAIN,MAAM,CAACC,QAAQ,EAAE,CAAC,EAAE,CAACK,IAAI,KAAK,wBAAwB;oBACxD,MAAME,aAAaL,MAAMC,MAAM,GAAG;oBAClCD,KAAK,CAACK,WAAW,GAAGL,KAAK,CAACK,WAAW,KAAK,SAAS,WAAW;gBAChE;YACF,OAEK,IAAIH,KAAK,CAAC,EAAE,CAACC,IAAI,KAAK,qBAAqB;gBAC9C;YACF;QACF,OAAO,IAAID,KAAK,CAAC,EAAE,KAAK,WAAWA,KAAK,CAAC,EAAE,CAACC,IAAI,KAAK,qBAAqB;YACxEJ,iBAAiB;QACnB;QACAD,SAAS;IACX;IACA,OAAOE;AACT"}