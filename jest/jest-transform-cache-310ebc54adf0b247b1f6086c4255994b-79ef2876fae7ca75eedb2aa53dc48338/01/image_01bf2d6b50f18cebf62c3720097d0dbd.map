{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/node_modules/mdast-util-to-hast/lib/handlers/image.js"],"sourcesContent":["/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n"],"names":["image","state","node","properties","src","normalizeUri","url","alt","undefined","title","result","type","tagName","children","patch","applyData"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA;;;;;CAKC;;;;+BAceA;;;eAAAA;;;0CAZW;AAYpB,SAASA,MAAMC,KAAK,EAAEC,IAAI;IAC/B,uBAAuB,GACvB,MAAMC,aAAa;QAACC,KAAKC,IAAAA,sCAAY,EAACH,KAAKI,GAAG;IAAC;IAE/C,IAAIJ,KAAKK,GAAG,KAAK,QAAQL,KAAKK,GAAG,KAAKC,WAAW;QAC/CL,WAAWI,GAAG,GAAGL,KAAKK,GAAG;IAC3B;IAEA,IAAIL,KAAKO,KAAK,KAAK,QAAQP,KAAKO,KAAK,KAAKD,WAAW;QACnDL,WAAWM,KAAK,GAAGP,KAAKO,KAAK;IAC/B;IAEA,oBAAoB,GACpB,MAAMC,SAAS;QAACC,MAAM;QAAWC,SAAS;QAAOT;QAAYU,UAAU,EAAE;IAAA;IACzEZ,MAAMa,KAAK,CAACZ,MAAMQ;IAClB,OAAOT,MAAMc,SAAS,CAACb,MAAMQ;AAC/B"}