{"version":3,"sources":["../src/OffsetUtils.ts"],"sourcesContent":["import type { XYCoord } from 'dnd-core'\n\nimport { isFirefox, isSafari } from './BrowserDetector.js'\nimport { MonotonicInterpolant } from './MonotonicInterpolant.js'\n\nconst ELEMENT_NODE = 1\n\nexport function getNodeClientOffset(node: Node): XYCoord | null {\n\tconst el = node.nodeType === ELEMENT_NODE ? node : node.parentElement\n\n\tif (!el) {\n\t\treturn null\n\t}\n\n\tconst { top, left } = (el as HTMLElement).getBoundingClientRect()\n\treturn { x: left, y: top }\n}\n\nexport function getEventClientOffset(e: MouseEvent): XYCoord {\n\treturn {\n\t\tx: e.clientX,\n\t\ty: e.clientY,\n\t}\n}\n\nfunction isImageNode(node: any) {\n\treturn (\n\t\tnode.nodeName === 'IMG' &&\n\t\t(isFirefox() || !document.documentElement?.contains(node))\n\t)\n}\n\nfunction getDragPreviewSize(\n\tisImage: boolean,\n\tdragPreview: any,\n\tsourceWidth: number,\n\tsourceHeight: number,\n) {\n\tlet dragPreviewWidth = isImage ? dragPreview.width : sourceWidth\n\tlet dragPreviewHeight = isImage ? dragPreview.height : sourceHeight\n\n\t// Work around @2x coordinate discrepancies in browsers\n\tif (isSafari() && isImage) {\n\t\tdragPreviewHeight /= window.devicePixelRatio\n\t\tdragPreviewWidth /= window.devicePixelRatio\n\t}\n\treturn { dragPreviewWidth, dragPreviewHeight }\n}\n\nexport function getDragPreviewOffset(\n\tsourceNode: HTMLElement,\n\tdragPreview: HTMLElement,\n\tclientOffset: XYCoord,\n\tanchorPoint: { anchorX: number; anchorY: number },\n\toffsetPoint: { offsetX: number; offsetY: number },\n): XYCoord {\n\t// The browsers will use the image intrinsic size under different conditions.\n\t// Firefox only cares if it's an image, but WebKit also wants it to be detached.\n\tconst isImage = isImageNode(dragPreview)\n\tconst dragPreviewNode = isImage ? sourceNode : dragPreview\n\tconst dragPreviewNodeOffsetFromClient = getNodeClientOffset(\n\t\tdragPreviewNode,\n\t) as XYCoord\n\tconst offsetFromDragPreview = {\n\t\tx: clientOffset.x - dragPreviewNodeOffsetFromClient.x,\n\t\ty: clientOffset.y - dragPreviewNodeOffsetFromClient.y,\n\t}\n\tconst { offsetWidth: sourceWidth, offsetHeight: sourceHeight } = sourceNode\n\tconst { anchorX, anchorY } = anchorPoint\n\tconst { dragPreviewWidth, dragPreviewHeight } = getDragPreviewSize(\n\t\tisImage,\n\t\tdragPreview,\n\t\tsourceWidth,\n\t\tsourceHeight,\n\t)\n\n\tconst calculateYOffset = () => {\n\t\tconst interpolantY = new MonotonicInterpolant(\n\t\t\t[0, 0.5, 1],\n\t\t\t[\n\t\t\t\t// Dock to the top\n\t\t\t\toffsetFromDragPreview.y,\n\t\t\t\t// Align at the center\n\t\t\t\t(offsetFromDragPreview.y / sourceHeight) * dragPreviewHeight,\n\t\t\t\t// Dock to the bottom\n\t\t\t\toffsetFromDragPreview.y + dragPreviewHeight - sourceHeight,\n\t\t\t],\n\t\t)\n\t\tlet y = interpolantY.interpolate(anchorY)\n\t\t// Work around Safari 8 positioning bug\n\t\tif (isSafari() && isImage) {\n\t\t\t// We'll have to wait for @3x to see if this is entirely correct\n\t\t\ty += (window.devicePixelRatio - 1) * dragPreviewHeight\n\t\t}\n\t\treturn y\n\t}\n\n\tconst calculateXOffset = () => {\n\t\t// Interpolate coordinates depending on anchor point\n\t\t// If you know a simpler way to do this, let me know\n\t\tconst interpolantX = new MonotonicInterpolant(\n\t\t\t[0, 0.5, 1],\n\t\t\t[\n\t\t\t\t// Dock to the left\n\t\t\t\toffsetFromDragPreview.x,\n\t\t\t\t// Align at the center\n\t\t\t\t(offsetFromDragPreview.x / sourceWidth) * dragPreviewWidth,\n\t\t\t\t// Dock to the right\n\t\t\t\toffsetFromDragPreview.x + dragPreviewWidth - sourceWidth,\n\t\t\t],\n\t\t)\n\t\treturn interpolantX.interpolate(anchorX)\n\t}\n\n\t// Force offsets if specified in the options.\n\tconst { offsetX, offsetY } = offsetPoint\n\tconst isManualOffsetX = offsetX === 0 || offsetX\n\tconst isManualOffsetY = offsetY === 0 || offsetY\n\treturn {\n\t\tx: isManualOffsetX ? offsetX : calculateXOffset(),\n\t\ty: isManualOffsetY ? offsetY : calculateYOffset(),\n\t}\n}\n"],"names":["getDragPreviewOffset","getEventClientOffset","getNodeClientOffset","ELEMENT_NODE","node","el","nodeType","parentElement","top","left","getBoundingClientRect","x","y","e","clientX","clientY","isImageNode","document","nodeName","isFirefox","documentElement","contains","getDragPreviewSize","isImage","dragPreview","sourceWidth","sourceHeight","dragPreviewWidth","width","dragPreviewHeight","height","isSafari","window","devicePixelRatio","sourceNode","clientOffset","anchorPoint","offsetPoint","dragPreviewNode","dragPreviewNodeOffsetFromClient","offsetFromDragPreview","offsetWidth","offsetHeight","anchorX","anchorY","calculateYOffset","interpolantY","MonotonicInterpolant","interpolate","calculateXOffset","interpolantX","offsetX","offsetY","isManualOffsetX","isManualOffsetY"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}