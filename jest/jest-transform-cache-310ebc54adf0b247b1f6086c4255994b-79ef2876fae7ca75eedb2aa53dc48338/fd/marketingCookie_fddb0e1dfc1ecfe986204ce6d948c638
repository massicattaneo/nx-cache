275dfbaec8fd0fa49ab8d3d3852f0768
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    MARKETING_COOKIE_NAME: function() {
        return MARKETING_COOKIE_NAME;
    },
    getMarketingCookie: function() {
        return getMarketingCookie;
    },
    setMarketingCookie: function() {
        return setMarketingCookie;
    }
});
const _typescriptcookie = require("typescript-cookie");
const _environment = require("@rp/common/environment");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const MARKETING_COOKIE_NAME = "__bigdata_lks";
const cookieProperties = {
    path: "/",
    domain: ".bigdata.com",
    secure: true
};
const encodeCookieValue = (value)=>window.btoa(JSON.stringify(value));
const decodeCookieValue = (value)=>JSON.parse(window.atob(value));
const getMarketingCookie = ()=>{
    const cookie = (0, _typescriptcookie.getCookie)(MARKETING_COOKIE_NAME);
    return cookie ? decodeCookieValue(cookie) : {};
};
const setMarketingCookie = (isLogged, userId)=>{
    const decodedCookie = getMarketingCookie();
    const newCookieValue = encodeCookieValue(_object_spread_props(_object_spread({}, decodedCookie), {
        [_environment.environment.name]: isLogged,
        user: userId ? `${_environment.environment.name}|${userId}` : decodedCookie.user
    }));
    (0, _typescriptcookie.setCookie)(MARKETING_COOKIE_NAME, newCookieValue, cookieProperties);
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2FwcHMvY2xpZW50LXdlYi9zcmMvYXBwL3V0aWxzL21hcmtldGluZ0Nvb2tpZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRDb29raWUsIHNldENvb2tpZSB9IGZyb20gXCJ0eXBlc2NyaXB0LWNvb2tpZVwiXG5pbXBvcnQgeyBlbnZpcm9ubWVudCB9IGZyb20gXCJAcnAvY29tbW9uL2Vudmlyb25tZW50XCJcblxuY29uc3QgTUFSS0VUSU5HX0NPT0tJRV9OQU1FID0gXCJfX2JpZ2RhdGFfbGtzXCJcbmNvbnN0IGNvb2tpZVByb3BlcnRpZXMgPSB7XG4gIHBhdGg6IFwiL1wiLFxuICBkb21haW46IFwiLmJpZ2RhdGEuY29tXCIsXG4gIHNlY3VyZTogdHJ1ZSxcbn1cblxudHlwZSBDb29raWVWYWx1ZSA9IHtcbiAgW2tleTogc3RyaW5nXTogYm9vbGVhblxufVxuXG5jb25zdCBlbmNvZGVDb29raWVWYWx1ZSA9ICh2YWx1ZTogQ29va2llVmFsdWUpID0+IHdpbmRvdy5idG9hKEpTT04uc3RyaW5naWZ5KHZhbHVlKSlcbmNvbnN0IGRlY29kZUNvb2tpZVZhbHVlID0gKHZhbHVlOiBzdHJpbmcpID0+IEpTT04ucGFyc2Uod2luZG93LmF0b2IodmFsdWUpKVxuXG5jb25zdCBnZXRNYXJrZXRpbmdDb29raWUgPSAoKSA9PiB7XG4gIGNvbnN0IGNvb2tpZSA9IGdldENvb2tpZShNQVJLRVRJTkdfQ09PS0lFX05BTUUpXG4gIHJldHVybiBjb29raWUgPyBkZWNvZGVDb29raWVWYWx1ZShjb29raWUpIDoge31cbn1cblxuY29uc3Qgc2V0TWFya2V0aW5nQ29va2llID0gKGlzTG9nZ2VkOiBib29sZWFuIHwgdW5kZWZpbmVkLCB1c2VySWQ6IHN0cmluZyB8IHVuZGVmaW5lZCkgPT4ge1xuICBjb25zdCBkZWNvZGVkQ29va2llID0gZ2V0TWFya2V0aW5nQ29va2llKClcbiAgY29uc3QgbmV3Q29va2llVmFsdWUgPSBlbmNvZGVDb29raWVWYWx1ZSh7XG4gICAgLi4uZGVjb2RlZENvb2tpZSxcbiAgICBbZW52aXJvbm1lbnQubmFtZV06IGlzTG9nZ2VkLFxuICAgIHVzZXI6IHVzZXJJZCA/IGAke2Vudmlyb25tZW50Lm5hbWV9fCR7dXNlcklkfWAgOiBkZWNvZGVkQ29va2llLnVzZXIsXG4gIH0pXG4gIHNldENvb2tpZShNQVJLRVRJTkdfQ09PS0lFX05BTUUsIG5ld0Nvb2tpZVZhbHVlLCBjb29raWVQcm9wZXJ0aWVzKVxufVxuXG5leHBvcnQgeyBnZXRNYXJrZXRpbmdDb29raWUsIHNldE1hcmtldGluZ0Nvb2tpZSwgTUFSS0VUSU5HX0NPT0tJRV9OQU1FIH1cbiJdLCJuYW1lcyI6WyJNQVJLRVRJTkdfQ09PS0lFX05BTUUiLCJnZXRNYXJrZXRpbmdDb29raWUiLCJzZXRNYXJrZXRpbmdDb29raWUiLCJjb29raWVQcm9wZXJ0aWVzIiwicGF0aCIsImRvbWFpbiIsInNlY3VyZSIsImVuY29kZUNvb2tpZVZhbHVlIiwidmFsdWUiLCJ3aW5kb3ciLCJidG9hIiwiSlNPTiIsInN0cmluZ2lmeSIsImRlY29kZUNvb2tpZVZhbHVlIiwicGFyc2UiLCJhdG9iIiwiY29va2llIiwiZ2V0Q29va2llIiwiaXNMb2dnZWQiLCJ1c2VySWQiLCJkZWNvZGVkQ29va2llIiwibmV3Q29va2llVmFsdWUiLCJlbnZpcm9ubWVudCIsIm5hbWUiLCJ1c2VyIiwic2V0Q29va2llIl0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0lBZ0NpREEscUJBQXFCO2VBQXJCQTs7SUFBeENDLGtCQUFrQjtlQUFsQkE7O0lBQW9CQyxrQkFBa0I7ZUFBbEJBOzs7a0NBaENROzZCQUNUOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUU1QixNQUFNRix3QkFBd0I7QUFDOUIsTUFBTUcsbUJBQW1CO0lBQ3ZCQyxNQUFNO0lBQ05DLFFBQVE7SUFDUkMsUUFBUTtBQUNWO0FBTUEsTUFBTUMsb0JBQW9CLENBQUNDLFFBQXVCQyxPQUFPQyxJQUFJLENBQUNDLEtBQUtDLFNBQVMsQ0FBQ0o7QUFDN0UsTUFBTUssb0JBQW9CLENBQUNMLFFBQWtCRyxLQUFLRyxLQUFLLENBQUNMLE9BQU9NLElBQUksQ0FBQ1A7QUFFcEUsTUFBTVAscUJBQXFCO0lBQ3pCLE1BQU1lLFNBQVNDLElBQUFBLDJCQUFTLEVBQUNqQjtJQUN6QixPQUFPZ0IsU0FBU0gsa0JBQWtCRyxVQUFVLENBQUM7QUFDL0M7QUFFQSxNQUFNZCxxQkFBcUIsQ0FBQ2dCLFVBQStCQztJQUN6RCxNQUFNQyxnQkFBZ0JuQjtJQUN0QixNQUFNb0IsaUJBQWlCZCxrQkFBa0Isd0NBQ3BDYTtRQUNILENBQUNFLHdCQUFXLENBQUNDLElBQUksQ0FBQyxFQUFFTDtRQUNwQk0sTUFBTUwsU0FBUyxDQUFDLEVBQUVHLHdCQUFXLENBQUNDLElBQUksQ0FBQyxDQUFDLEVBQUVKLE9BQU8sQ0FBQyxHQUFHQyxjQUFjSSxJQUFJOztJQUVyRUMsSUFBQUEsMkJBQVMsRUFBQ3pCLHVCQUF1QnFCLGdCQUFnQmxCO0FBQ25EIn0=