{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/apps/client-web/src/app/components/Hub/Files/FilesList/utils/handleFileRowClickRowFunc.test.ts"],"sourcesContent":["import { FileRowType } from \"@rp/common/utils\"\nimport { useFileActions } from \"@rp/react/web/common/files\"\nimport { SelectedFile } from \"../../Files\"\nimport { handleFileRowClickRowFunc } from \"./handleFileRowClickRowFunc\"\n\nconst mockSelectedFiles = [\n  { id: \"file-id-1\", shared: true },\n  { id: \"file-id-2\", shared: false },\n  { id: \"file-id-3\", shared: true },\n]\n\nconst mockActions = {\n  open: { onClick: jest.fn() },\n  close: { onClick: jest.fn() },\n  view: { onClick: jest.fn() },\n} as unknown as ReturnType<typeof useFileActions>[\"actions\"]\n\nconst mockOpenChatPane = jest.fn()\n\nlet selectedFilesSetterResponse: Array<SelectedFile>\nconst mockSetSelectedFiles = jest.fn().mockImplementation(cb => {\n  selectedFilesSetterResponse = cb(mockSelectedFiles)\n})\n\nconst mockItem = {\n  id: \"123\",\n  name: \"test\",\n  status: \"completed\",\n  shared: true,\n  size: 321,\n  date: \"2025-01-01\",\n  type: \"pdf\",\n  sharedWith: [\"Alice\"],\n  owner: \"Bob\",\n} as FileRowType\n\nbeforeEach(jest.clearAllMocks)\n\ndescribe(\"handleFileRowCheckboxChangeFunc\", () => {\n  describe(\"!isSelected \", () => {\n    const isSelected = false\n    beforeEach(() => {\n      handleFileRowClickRowFunc({\n        actions: mockActions,\n        isSelected,\n        isThisFileOpen: true,\n        item: mockItem,\n        openChatPane: mockOpenChatPane,\n        setSelectedFiles: mockSetSelectedFiles,\n        shared: true,\n      })\n    })\n\n    it(\"should call setSelected and setState properly\", () => {\n      expect(mockSetSelectedFiles).toHaveBeenCalled()\n      expect(selectedFilesSetterResponse).toStrictEqual([\n        { id: \"123\", shared: true },\n        ...mockSelectedFiles,\n      ])\n    })\n\n    it(\"should call actions.open.onClick\", () => {\n      expect(mockActions.open.onClick).toHaveBeenCalledTimes(1)\n      expect(mockActions.open.onClick).toHaveBeenCalledWith(mockItem)\n    })\n\n    it(\"should not call actions.close.onClick\", () => {\n      expect(mockActions.close.onClick).not.toHaveBeenCalled()\n    })\n\n    it(\"should not call openChatPane\", () => {\n      expect(mockOpenChatPane).not.toHaveBeenCalled()\n    })\n  })\n\n  describe(\"isSelected && isFileOpen\", () => {\n    const isSelected = true\n    const isThisFileOpen = true\n    beforeEach(() => {\n      handleFileRowClickRowFunc({\n        actions: mockActions,\n        isSelected,\n        isThisFileOpen,\n        item: mockItem,\n        openChatPane: mockOpenChatPane,\n        setSelectedFiles: mockSetSelectedFiles,\n        shared: true,\n      })\n    })\n\n    it(\"should not call setSelected\", () => {\n      expect(mockSetSelectedFiles).not.toHaveBeenCalled()\n    })\n\n    it(\"should call actions.close.onClick\", () => {\n      expect(mockActions.close.onClick).toHaveBeenCalledTimes(1)\n    })\n\n    it(\"should not call actions.open.onClick\", () => {\n      expect(mockActions.open.onClick).not.toHaveBeenCalled()\n    })\n\n    it(\"should not call openChatPane\", () => {\n      expect(mockOpenChatPane).not.toHaveBeenCalled()\n    })\n  })\n\n  describe(\"isSelected && !isFileOpen\", () => {\n    const isSelected = true\n    const isThisFileOpen = false\n    beforeEach(() => {\n      handleFileRowClickRowFunc({\n        actions: mockActions,\n        isSelected,\n        isThisFileOpen,\n        item: mockItem,\n        openChatPane: mockOpenChatPane,\n        setSelectedFiles: mockSetSelectedFiles,\n        shared: true,\n      })\n    })\n\n    it(\"should not call setSelected\", () => {\n      expect(mockSetSelectedFiles).not.toHaveBeenCalled()\n    })\n\n    it(\"should not call actions.close.onClick\", () => {\n      expect(mockActions.close.onClick).not.toHaveBeenCalled()\n    })\n\n    it(\"should call actions.open.onClick with the correct arguments\", () => {\n      expect(mockActions.open.onClick).toHaveBeenCalledTimes(1)\n      expect(mockActions.open.onClick).toHaveBeenCalledWith(mockItem)\n    })\n\n    it(\"should call openChatPane\", () => {\n      expect(mockOpenChatPane).toHaveBeenCalledTimes(1)\n    })\n  })\n})\n"],"names":["mockSelectedFiles","id","shared","mockActions","open","onClick","jest","fn","close","view","mockOpenChatPane","selectedFilesSetterResponse","mockSetSelectedFiles","mockImplementation","cb","mockItem","name","status","size","date","type","sharedWith","owner","beforeEach","clearAllMocks","describe","isSelected","handleFileRowClickRowFunc","actions","isThisFileOpen","item","openChatPane","setSelectedFiles","it","expect","toHaveBeenCalled","toStrictEqual","toHaveBeenCalledTimes","toHaveBeenCalledWith","not"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}