a584c071613c4d9d6891148cdf8b7a3c
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "totalAnalysts", {
    enumerable: true,
    get: function() {
        return totalAnalysts;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _WatchlistDataTableTextCell = require("../../WatchlistDataTableCells/WatchlistDataTableTextCell");
const _genericColumn = require("../../genericColumn");
function totalAnalysts(_tableName) {
    const title = "Total Analysts";
    return (0, _genericColumn.genericColumn)({
        endpoint: "companyAnalystRatings",
        columnKeys: [
            "totalAnalysts"
        ],
        size: 100,
        title,
        enableSorting: true,
        enableHiding: true,
        tooltip: "Total number of analysts providing ratings for this company",
        cell: (info)=>{
            var _info_row_original_financialData_companyAnalystRatings;
            const data = (_info_row_original_financialData_companyAnalystRatings = info.row.original.financialData.companyAnalystRatings) === null || _info_row_original_financialData_companyAnalystRatings === void 0 ? void 0 : _info_row_original_financialData_companyAnalystRatings.data;
            const total = ((data === null || data === void 0 ? void 0 : data.strongBuy) || 0) + ((data === null || data === void 0 ? void 0 : data.buy) || 0) + ((data === null || data === void 0 ? void 0 : data.hold) || 0) + ((data === null || data === void 0 ? void 0 : data.sell) || 0) + ((data === null || data === void 0 ? void 0 : data.strongSell) || 0);
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_WatchlistDataTableTextCell.WatchlistDataTableTextCell, {
                queryResult: info.row.original.financialData.companyAnalystRatings,
                value: total > 0 ? total : undefined,
                children: total > 0 ? total : "-"
            });
        }
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL3dhdGNobGlzdHMvc3JjL2xpYi9XYXRjaGxpc3REYXRhVGFicy9lbmRwb2ludHMvY29tcGFueUFuYWx5c3RSYXRpbmdzL3RvdGFsQW5hbHlzdHMudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFdhdGNobGlzdERhdGFUYWJsZVRleHRDZWxsIH0gZnJvbSBcIi4uLy4uL1dhdGNobGlzdERhdGFUYWJsZUNlbGxzL1dhdGNobGlzdERhdGFUYWJsZVRleHRDZWxsXCJcbmltcG9ydCB7IGdlbmVyaWNDb2x1bW4gfSBmcm9tIFwiLi4vLi4vZ2VuZXJpY0NvbHVtblwiXG5cbmZ1bmN0aW9uIHRvdGFsQW5hbHlzdHMoX3RhYmxlTmFtZTogc3RyaW5nKSB7XG4gIGNvbnN0IHRpdGxlID0gXCJUb3RhbCBBbmFseXN0c1wiXG4gIHJldHVybiBnZW5lcmljQ29sdW1uKHtcbiAgICBlbmRwb2ludDogXCJjb21wYW55QW5hbHlzdFJhdGluZ3NcIixcbiAgICBjb2x1bW5LZXlzOiBbXCJ0b3RhbEFuYWx5c3RzXCJdLFxuICAgIHNpemU6IDEwMCxcbiAgICB0aXRsZSxcbiAgICBlbmFibGVTb3J0aW5nOiB0cnVlLFxuICAgIGVuYWJsZUhpZGluZzogdHJ1ZSxcbiAgICB0b29sdGlwOiBcIlRvdGFsIG51bWJlciBvZiBhbmFseXN0cyBwcm92aWRpbmcgcmF0aW5ncyBmb3IgdGhpcyBjb21wYW55XCIsXG4gICAgY2VsbDogaW5mbyA9PiB7XG4gICAgICBjb25zdCBkYXRhID0gaW5mby5yb3cub3JpZ2luYWwuZmluYW5jaWFsRGF0YS5jb21wYW55QW5hbHlzdFJhdGluZ3M/LmRhdGFcbiAgICAgIGNvbnN0IHRvdGFsID1cbiAgICAgICAgKGRhdGE/LnN0cm9uZ0J1eSB8fCAwKSArXG4gICAgICAgIChkYXRhPy5idXkgfHwgMCkgK1xuICAgICAgICAoZGF0YT8uaG9sZCB8fCAwKSArXG4gICAgICAgIChkYXRhPy5zZWxsIHx8IDApICtcbiAgICAgICAgKGRhdGE/LnN0cm9uZ1NlbGwgfHwgMClcblxuICAgICAgcmV0dXJuIChcbiAgICAgICAgPFdhdGNobGlzdERhdGFUYWJsZVRleHRDZWxsXG4gICAgICAgICAgcXVlcnlSZXN1bHQ9e2luZm8ucm93Lm9yaWdpbmFsLmZpbmFuY2lhbERhdGEuY29tcGFueUFuYWx5c3RSYXRpbmdzfVxuICAgICAgICAgIHZhbHVlPXt0b3RhbCA+IDAgPyB0b3RhbCA6IHVuZGVmaW5lZH1cbiAgICAgICAgPlxuICAgICAgICAgIHt0b3RhbCA+IDAgPyB0b3RhbCA6IFwiLVwifVxuICAgICAgICA8L1dhdGNobGlzdERhdGFUYWJsZVRleHRDZWxsPlxuICAgICAgKVxuICAgIH0sXG4gIH0pXG59XG5cbmV4cG9ydCB7IHRvdGFsQW5hbHlzdHMgfVxuIl0sIm5hbWVzIjpbInRvdGFsQW5hbHlzdHMiLCJfdGFibGVOYW1lIiwidGl0bGUiLCJnZW5lcmljQ29sdW1uIiwiZW5kcG9pbnQiLCJjb2x1bW5LZXlzIiwic2l6ZSIsImVuYWJsZVNvcnRpbmciLCJlbmFibGVIaWRpbmciLCJ0b29sdGlwIiwiY2VsbCIsImluZm8iLCJkYXRhIiwicm93Iiwib3JpZ2luYWwiLCJmaW5hbmNpYWxEYXRhIiwiY29tcGFueUFuYWx5c3RSYXRpbmdzIiwidG90YWwiLCJzdHJvbmdCdXkiLCJidXkiLCJob2xkIiwic2VsbCIsInN0cm9uZ1NlbGwiLCJXYXRjaGxpc3REYXRhVGFibGVUZXh0Q2VsbCIsInF1ZXJ5UmVzdWx0IiwidmFsdWUiLCJ1bmRlZmluZWQiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQWtDU0E7OztlQUFBQTs7Ozs0Q0FsQ2tDOytCQUNiO0FBRTlCLFNBQVNBLGNBQWNDLFVBQWtCO0lBQ3ZDLE1BQU1DLFFBQVE7SUFDZCxPQUFPQyxJQUFBQSw0QkFBYSxFQUFDO1FBQ25CQyxVQUFVO1FBQ1ZDLFlBQVk7WUFBQztTQUFnQjtRQUM3QkMsTUFBTTtRQUNOSjtRQUNBSyxlQUFlO1FBQ2ZDLGNBQWM7UUFDZEMsU0FBUztRQUNUQyxNQUFNQyxDQUFBQTtnQkFDU0E7WUFBYixNQUFNQyxRQUFPRCx5REFBQUEsS0FBS0UsR0FBRyxDQUFDQyxRQUFRLENBQUNDLGFBQWEsQ0FBQ0MscUJBQXFCLGNBQXJETCw2RUFBQUEsdURBQXVEQyxJQUFJO1lBQ3hFLE1BQU1LLFFBQ0osQUFBQ0wsQ0FBQUEsQ0FBQUEsaUJBQUFBLDJCQUFBQSxLQUFNTSxTQUFTLEtBQUksQ0FBQSxJQUNuQk4sQ0FBQUEsQ0FBQUEsaUJBQUFBLDJCQUFBQSxLQUFNTyxHQUFHLEtBQUksQ0FBQSxJQUNiUCxDQUFBQSxDQUFBQSxpQkFBQUEsMkJBQUFBLEtBQU1RLElBQUksS0FBSSxDQUFBLElBQ2RSLENBQUFBLENBQUFBLGlCQUFBQSwyQkFBQUEsS0FBTVMsSUFBSSxLQUFJLENBQUEsSUFDZFQsQ0FBQUEsQ0FBQUEsaUJBQUFBLDJCQUFBQSxLQUFNVSxVQUFVLEtBQUksQ0FBQTtZQUV2QixxQkFDRSxxQkFBQ0Msc0RBQTBCO2dCQUN6QkMsYUFBYWIsS0FBS0UsR0FBRyxDQUFDQyxRQUFRLENBQUNDLGFBQWEsQ0FBQ0MscUJBQXFCO2dCQUNsRVMsT0FBT1IsUUFBUSxJQUFJQSxRQUFRUzswQkFFMUJULFFBQVEsSUFBSUEsUUFBUTs7UUFHM0I7SUFDRjtBQUNGIn0=