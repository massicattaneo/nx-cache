{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/common/providers/src/FeedbackContext/FeedbackContext.tsx"],"sourcesContent":["import React, {\n  Dispatch,\n  PropsWithChildren,\n  createContext,\n  useContext,\n  useEffect,\n  useState,\n} from \"react\"\nimport { SetStateAction } from \"jotai\"\nimport qs from \"qs\"\nimport { useNavigate, useSearchParams } from \"react-router-dom\"\nimport { CqsSavedQuery, CqsUserDataQueriesPostRequest } from \"@rp/common/api-types\"\nimport { CqsSavedQueryContext } from \"@rp/common/api-types\"\nimport { useQueryParams } from \"@rp/react/web/common/hooks\"\nimport { UseMutateAsyncFunction } from \"@tanstack/react-query\"\nimport {\n  SearchIntent,\n  SubTypes,\n  UserTypes,\n  searchIntentOptions,\n  subTypeOptions,\n  userTypeOptions,\n} from \"./feedback.types\"\nimport { useRankingTypes } from \"./useRankingTypes\"\n\ntype FeedbackTypes = {\n  isFeedbackMode: boolean\n  rankingMode: string\n  setRankingMode: (value: string) => void\n  updateQueryRanking: (value: string) => void\n  searchIntent: SearchIntent\n  setSearchIntent: (value: SearchIntent) => void\n  userType: UserTypes\n  setUserType: (value: UserTypes) => void\n  subType: SubTypes\n  setSubType: (value: SubTypes) => void\n  description: string\n  setDescription: (value: string) => void\n  rankingProfiles: Array<string>\n  clear: () => void\n  open: boolean\n  setOpen: (value: boolean) => void\n  savedQuery: CqsSavedQueryContext\n}\n\ntype QueryUpdate = {\n  id: string\n  fields: CqsUserDataQueriesPostRequest\n}\n\nconst getSearchIntent = (value: string): SearchIntent => {\n  const isSearchIntent = searchIntentOptions.find(option => option.value === value)\n  if (isSearchIntent) return value as SearchIntent\n  return searchIntentOptions[0].value\n}\nconst getPersonaType = (value: string): UserTypes => {\n  const isPersonaType = userTypeOptions.find(option => option.value === value)\n  if (isPersonaType) return value as UserTypes\n  return userTypeOptions[0].value\n}\nconst getPersonaSubType = (value: string): SubTypes => {\n  const isPersonaSubType = subTypeOptions.find(option => option.value === value)\n  if (isPersonaSubType) return value as SubTypes\n  return subTypeOptions[0].value\n}\nconst SEARCH_INTENT = \"fsi\"\nconst PERSONA_TYPE = \"ft\"\nconst PERSONA_SUBTYPE = \"fst\"\nconst DESCRIPTION = \"fd\"\n\nconst FeedbackContext = createContext<FeedbackTypes | undefined>(undefined)\n\ntype Props = PropsWithChildren & {\n  isFeedbackMode?: boolean\n  queryRanking?: string\n  savedQuery: CqsSavedQueryContext\n  setIsFeedbackMode?: Dispatch<SetStateAction<boolean>>\n  onUpdate?: UseMutateAsyncFunction<CqsSavedQuery, Error, QueryUpdate>\n}\n\nconst FeedbackProvider = ({\n  children,\n  queryRanking,\n  isFeedbackMode = false,\n  setIsFeedbackMode,\n  savedQuery,\n  onUpdate,\n}: Props) => {\n  const query = useQueryParams()\n  const [searchParams] = useSearchParams()\n  const navigate = useNavigate()\n  const [open, setOpen] = useState(false)\n  const querySearchIntent = query.get(SEARCH_INTENT) ?? \"\"\n  const queryPersonaType = query.get(PERSONA_TYPE) ?? \"\"\n  const queryPersonaSubType = query.get(PERSONA_SUBTYPE) ?? \"\"\n  const queryDescription = query.get(DESCRIPTION) ?? \"\"\n  const { data } = useRankingTypes(isFeedbackMode)\n\n  // Feedback parameters\n  const [rankingProfiles, setRankingProfiles] = useState<Array<string>>([])\n  const [rankingMode, setRankingMode] = useState(\"\")\n  const [searchIntent, setSearchIntent] = useState<SearchIntent>(getSearchIntent(querySearchIntent))\n  const [userType, setUserType] = useState<UserTypes>(getPersonaType(queryPersonaType))\n  const [subType, setSubType] = useState<SubTypes>(getPersonaSubType(queryPersonaSubType))\n  const [description, setDescription] = useState(queryDescription)\n\n  const updateQueryRanking = (ranking: string) => {\n    if (!savedQuery) return\n    onUpdate?.({ id: savedQuery.id, fields: { query: { ...savedQuery.query, ranking } } })\n  }\n\n  useEffect(() => {\n    if (queryRanking) {\n      setRankingMode(queryRanking)\n    }\n  }, [queryRanking])\n\n  useEffect(() => {\n    if (\n      isFeedbackMode &&\n      searchParams.get(SEARCH_INTENT) === searchIntent &&\n      searchParams.get(PERSONA_TYPE) === userType &&\n      searchParams.get(PERSONA_SUBTYPE) === subType &&\n      searchParams.get(DESCRIPTION) === description\n    )\n      return\n    if (isFeedbackMode) {\n      const search = qs.stringify(\n        {\n          [SEARCH_INTENT]: searchIntent,\n          [PERSONA_TYPE]: userType,\n          [PERSONA_SUBTYPE]: subType,\n          [DESCRIPTION]: description,\n        },\n        { encodeValuesOnly: true },\n      )\n      navigate(\n        {\n          search,\n        },\n        { replace: true },\n      )\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchIntent, userType, subType, description, isFeedbackMode, navigate])\n\n  useEffect(() => {\n    if (data?.results) {\n      setRankingProfiles(data.results)\n    }\n  }, [data])\n  // Remove the query params \"feedback\" and clear all\n  const clear = () => {\n    query.delete(\"feedback\")\n    navigate(\n      {\n        search: query.toString(),\n      },\n      { replace: true },\n    )\n    setIsFeedbackMode?.(false)\n    setOpen(false)\n  }\n\n  const feedbackMode = {\n    // Parameters (to send along useUpdateStoryCardFeedback)\n    rankingMode,\n    setRankingMode,\n    updateQueryRanking,\n    searchIntent,\n    setSearchIntent,\n    userType,\n    setUserType,\n    subType,\n    setSubType,\n    description,\n    setDescription,\n    rankingProfiles,\n    // Status\n    isFeedbackMode,\n    clear,\n    // Drawer\n    open,\n    setOpen,\n    savedQuery,\n  }\n  return <FeedbackContext.Provider value={feedbackMode}>{children}</FeedbackContext.Provider>\n}\n\nconst useFeedbackContext = () => {\n  const context = useContext(FeedbackContext)\n  if (!context) {\n    throw new Error(\"useFeedbackContext must be used within a FeedbackProvider\")\n  }\n  return context\n}\n\nexport { useFeedbackContext, FeedbackProvider }\n"],"names":["FeedbackProvider","useFeedbackContext","getSearchIntent","value","isSearchIntent","searchIntentOptions","find","option","getPersonaType","isPersonaType","userTypeOptions","getPersonaSubType","isPersonaSubType","subTypeOptions","SEARCH_INTENT","PERSONA_TYPE","PERSONA_SUBTYPE","DESCRIPTION","FeedbackContext","createContext","undefined","children","queryRanking","isFeedbackMode","setIsFeedbackMode","savedQuery","onUpdate","query","useQueryParams","searchParams","useSearchParams","navigate","useNavigate","open","setOpen","useState","querySearchIntent","get","queryPersonaType","queryPersonaSubType","queryDescription","data","useRankingTypes","rankingProfiles","setRankingProfiles","rankingMode","setRankingMode","searchIntent","setSearchIntent","userType","setUserType","subType","setSubType","description","setDescription","updateQueryRanking","ranking","id","fields","useEffect","search","qs","stringify","encodeValuesOnly","replace","results","clear","delete","toString","feedbackMode","Provider","context","useContext","Error"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}