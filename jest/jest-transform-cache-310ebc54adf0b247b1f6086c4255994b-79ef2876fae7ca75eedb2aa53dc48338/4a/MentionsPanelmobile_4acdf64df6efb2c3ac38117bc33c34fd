8acccabb623861635f2191e2d61d2dff
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "MentionsPanelMobile", {
    enumerable: true,
    get: function() {
        return MentionsPanelMobile;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _apitypes = require("@rp/common/api-types");
const _compositecomponents = require("@rp/react/web/common/composite-components");
const _documentviewer = require("@rp/react/web/common/document-viewer");
const _providers = require("@rp/react/web/common/providers");
const _core = require("@rp/react/web/mui/core");
const _rpjson = require("@rp/react/web/rpjson");
const _useMentionPreview = require("../hooks/useMentionPreview");
const _LoadingMentions = require("./LoadingMentions");
const _MentionHeader = require("./MentionHeader");
const _Mentionsstyles = require("./Mentions.styles");
const _MentionsCard = require("./MentionsCard");
const MentionsPanelMobile = ({ rowData, handleClose, onChange, title, isFeedbackMode })=>{
    const { stories, fetchNextPage, isFetchingNextPage, hasNextPage, isLoading: isLoadingMentions } = (0, _useMentionPreview.useMentionPreview)(rowData);
    const { searchQuery, queryId } = (0, _providers.useQueryContext)();
    const highlights = [
        ...(0, _documentviewer.useEntitiesStyles)([
            rowData.key
        ], [
            "entity",
            "rp_topic"
        ].includes(rowData.queryType))
    ];
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_MentionHeader.MentionHeader, {
                onClose: handleClose,
                item: rowData,
                backButtonTitle: `Back to ${(0, _core.capitalize)(title)}`,
                onChange: onChange
            }),
            isLoadingMentions ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_LoadingMentions.LoadingMentions, {}) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_rpjson.RpJsonAnnotationStyles, {
                highlights: highlights,
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_Mentionsstyles.MentionsList, {
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_compositecomponents.ShowMoreList, {
                        renderItem: (item, index)=>{
                            if ((0, _apitypes.isChunkStory)(item)) {
                                return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                    children: "Chunks on mentions not implemented yet."
                                }, item.id);
                            }
                            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_MentionsCard.MentionsCard, {
                                isFeedbackMode: isFeedbackMode,
                                story: item,
                                query: searchQuery,
                                index: index,
                                queryId: queryId
                            }, item.id);
                        },
                        items: stories,
                        loading: isFetchingNextPage,
                        fetchNextPage: fetchNextPage,
                        hasNextPage: hasNextPage
                    })
                })
            })
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9kaXNjb3Zlcnktc2lkZWJhci9zcmMvTWVudGlvbnMvTWVudGlvbnNQYW5lbC5tb2JpbGUudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENxc0NodW5rU3RvcnksIENxc0l0ZW0sIENxc1N0b3J5LCBpc0NodW5rU3RvcnkgfSBmcm9tIFwiQHJwL2NvbW1vbi9hcGktdHlwZXNcIlxuaW1wb3J0IHsgV2F0Y2hsaXN0IH0gZnJvbSBcIkBycC9jb21tb24vYXBpLXR5cGVzXCJcbmltcG9ydCB7IFNob3dNb3JlTGlzdCB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL2NvbW1vbi9jb21wb3NpdGUtY29tcG9uZW50c1wiXG5pbXBvcnQgeyB1c2VFbnRpdGllc1N0eWxlcyB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL2NvbW1vbi9kb2N1bWVudC12aWV3ZXJcIlxuaW1wb3J0IHsgdXNlUXVlcnlDb250ZXh0IH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvY29tbW9uL3Byb3ZpZGVyc1wiXG5pbXBvcnQgeyBjYXBpdGFsaXplIH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvbXVpL2NvcmVcIlxuaW1wb3J0IHsgUnBKc29uQW5ub3RhdGlvblN0eWxlcyB9IGZyb20gXCJAcnAvcmVhY3Qvd2ViL3JwanNvblwiXG5pbXBvcnQgeyB1c2VNZW50aW9uUHJldmlldyB9IGZyb20gXCIuLi9ob29rcy91c2VNZW50aW9uUHJldmlld1wiXG5pbXBvcnQgeyBMb2FkaW5nTWVudGlvbnMgfSBmcm9tIFwiLi9Mb2FkaW5nTWVudGlvbnNcIlxuaW1wb3J0IHsgTWVudGlvbkhlYWRlciB9IGZyb20gXCIuL01lbnRpb25IZWFkZXJcIlxuaW1wb3J0IHsgTWVudGlvbnNMaXN0IH0gZnJvbSBcIi4vTWVudGlvbnMuc3R5bGVzXCJcbmltcG9ydCB7IE1lbnRpb25zQ2FyZCB9IGZyb20gXCIuL01lbnRpb25zQ2FyZFwiXG5cbnR5cGUgUHJvcHMgPSB7XG4gIHJvd0RhdGE6IENxc0l0ZW1cbiAgaGFuZGxlQ2xvc2U6ICgpID0+IHZvaWRcbiAgb25DaGFuZ2U6IChpdGVtOiBDcXNJdGVtKSA9PiB2b2lkXG4gIHRpdGxlOiBzdHJpbmdcbiAgb25BZGRUb1dhdGNobGlzdD86ICh3YXRjaGxpc3Q6IFdhdGNobGlzdCkgPT4gdm9pZFxuICBpc0ZlZWRiYWNrTW9kZTogYm9vbGVhblxufVxuXG5jb25zdCBNZW50aW9uc1BhbmVsTW9iaWxlID0gKHsgcm93RGF0YSwgaGFuZGxlQ2xvc2UsIG9uQ2hhbmdlLCB0aXRsZSwgaXNGZWVkYmFja01vZGUgfTogUHJvcHMpID0+IHtcbiAgY29uc3Qge1xuICAgIHN0b3JpZXMsXG4gICAgZmV0Y2hOZXh0UGFnZSxcbiAgICBpc0ZldGNoaW5nTmV4dFBhZ2UsXG4gICAgaGFzTmV4dFBhZ2UsXG4gICAgaXNMb2FkaW5nOiBpc0xvYWRpbmdNZW50aW9ucyxcbiAgfSA9IHVzZU1lbnRpb25QcmV2aWV3KHJvd0RhdGEpXG4gIGNvbnN0IHsgc2VhcmNoUXVlcnksIHF1ZXJ5SWQgfSA9IHVzZVF1ZXJ5Q29udGV4dCgpXG5cbiAgY29uc3QgaGlnaGxpZ2h0cyA9IFtcbiAgICAuLi51c2VFbnRpdGllc1N0eWxlcyhbcm93RGF0YS5rZXldLCBbXCJlbnRpdHlcIiwgXCJycF90b3BpY1wiXS5pbmNsdWRlcyhyb3dEYXRhLnF1ZXJ5VHlwZSkpLFxuICBdXG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPE1lbnRpb25IZWFkZXJcbiAgICAgICAgb25DbG9zZT17aGFuZGxlQ2xvc2V9XG4gICAgICAgIGl0ZW09e3Jvd0RhdGF9XG4gICAgICAgIGJhY2tCdXR0b25UaXRsZT17YEJhY2sgdG8gJHtjYXBpdGFsaXplKHRpdGxlKX1gfVxuICAgICAgICBvbkNoYW5nZT17b25DaGFuZ2V9XG4gICAgICAvPlxuICAgICAge2lzTG9hZGluZ01lbnRpb25zID8gKFxuICAgICAgICA8TG9hZGluZ01lbnRpb25zIC8+XG4gICAgICApIDogKFxuICAgICAgICA8UnBKc29uQW5ub3RhdGlvblN0eWxlcyBoaWdobGlnaHRzPXtoaWdobGlnaHRzfT5cbiAgICAgICAgICA8TWVudGlvbnNMaXN0PlxuICAgICAgICAgICAgPFNob3dNb3JlTGlzdDxDcXNTdG9yeSB8IENxc0NodW5rU3Rvcnk+XG4gICAgICAgICAgICAgIHJlbmRlckl0ZW09eyhpdGVtLCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChpc0NodW5rU3RvcnkoaXRlbSkpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiA8ZGl2IGtleT17aXRlbS5pZH0+Q2h1bmtzIG9uIG1lbnRpb25zIG5vdCBpbXBsZW1lbnRlZCB5ZXQuPC9kaXY+XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgIDxNZW50aW9uc0NhcmRcbiAgICAgICAgICAgICAgICAgICAgaXNGZWVkYmFja01vZGU9e2lzRmVlZGJhY2tNb2RlfVxuICAgICAgICAgICAgICAgICAgICBrZXk9e2l0ZW0uaWR9XG4gICAgICAgICAgICAgICAgICAgIHN0b3J5PXtpdGVtfVxuICAgICAgICAgICAgICAgICAgICBxdWVyeT17c2VhcmNoUXVlcnl9XG4gICAgICAgICAgICAgICAgICAgIGluZGV4PXtpbmRleH1cbiAgICAgICAgICAgICAgICAgICAgcXVlcnlJZD17cXVlcnlJZH1cbiAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICBpdGVtcz17c3Rvcmllc31cbiAgICAgICAgICAgICAgbG9hZGluZz17aXNGZXRjaGluZ05leHRQYWdlfVxuICAgICAgICAgICAgICBmZXRjaE5leHRQYWdlPXtmZXRjaE5leHRQYWdlfVxuICAgICAgICAgICAgICBoYXNOZXh0UGFnZT17aGFzTmV4dFBhZ2V9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgIDwvTWVudGlvbnNMaXN0PlxuICAgICAgICA8L1JwSnNvbkFubm90YXRpb25TdHlsZXM+XG4gICAgICApfVxuICAgIDwvPlxuICApXG59XG5cbmV4cG9ydCB7IE1lbnRpb25zUGFuZWxNb2JpbGUgfVxuIl0sIm5hbWVzIjpbIk1lbnRpb25zUGFuZWxNb2JpbGUiLCJyb3dEYXRhIiwiaGFuZGxlQ2xvc2UiLCJvbkNoYW5nZSIsInRpdGxlIiwiaXNGZWVkYmFja01vZGUiLCJzdG9yaWVzIiwiZmV0Y2hOZXh0UGFnZSIsImlzRmV0Y2hpbmdOZXh0UGFnZSIsImhhc05leHRQYWdlIiwiaXNMb2FkaW5nIiwiaXNMb2FkaW5nTWVudGlvbnMiLCJ1c2VNZW50aW9uUHJldmlldyIsInNlYXJjaFF1ZXJ5IiwicXVlcnlJZCIsInVzZVF1ZXJ5Q29udGV4dCIsImhpZ2hsaWdodHMiLCJ1c2VFbnRpdGllc1N0eWxlcyIsImtleSIsImluY2x1ZGVzIiwicXVlcnlUeXBlIiwiTWVudGlvbkhlYWRlciIsIm9uQ2xvc2UiLCJpdGVtIiwiYmFja0J1dHRvblRpdGxlIiwiY2FwaXRhbGl6ZSIsIkxvYWRpbmdNZW50aW9ucyIsIlJwSnNvbkFubm90YXRpb25TdHlsZXMiLCJNZW50aW9uc0xpc3QiLCJTaG93TW9yZUxpc3QiLCJyZW5kZXJJdGVtIiwiaW5kZXgiLCJpc0NodW5rU3RvcnkiLCJkaXYiLCJpZCIsIk1lbnRpb25zQ2FyZCIsInN0b3J5IiwicXVlcnkiLCJpdGVtcyIsImxvYWRpbmciXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7K0JBOEVTQTs7O2VBQUFBOzs7OzBCQTlFc0Q7cUNBRWxDO2dDQUNLOzJCQUNGO3NCQUNMO3dCQUNZO21DQUNMO2lDQUNGOytCQUNGO2dDQUNEOzhCQUNBO0FBVzdCLE1BQU1BLHNCQUFzQixDQUFDLEVBQUVDLE9BQU8sRUFBRUMsV0FBVyxFQUFFQyxRQUFRLEVBQUVDLEtBQUssRUFBRUMsY0FBYyxFQUFTO0lBQzNGLE1BQU0sRUFDSkMsT0FBTyxFQUNQQyxhQUFhLEVBQ2JDLGtCQUFrQixFQUNsQkMsV0FBVyxFQUNYQyxXQUFXQyxpQkFBaUIsRUFDN0IsR0FBR0MsSUFBQUEsb0NBQWlCLEVBQUNYO0lBQ3RCLE1BQU0sRUFBRVksV0FBVyxFQUFFQyxPQUFPLEVBQUUsR0FBR0MsSUFBQUEsMEJBQWU7SUFFaEQsTUFBTUMsYUFBYTtXQUNkQyxJQUFBQSxpQ0FBaUIsRUFBQztZQUFDaEIsUUFBUWlCLEdBQUc7U0FBQyxFQUFFO1lBQUM7WUFBVTtTQUFXLENBQUNDLFFBQVEsQ0FBQ2xCLFFBQVFtQixTQUFTO0tBQ3RGO0lBRUQscUJBQ0U7OzBCQUNFLHFCQUFDQyw0QkFBYTtnQkFDWkMsU0FBU3BCO2dCQUNUcUIsTUFBTXRCO2dCQUNOdUIsaUJBQWlCLENBQUMsUUFBUSxFQUFFQyxJQUFBQSxnQkFBVSxFQUFDckIsT0FBTyxDQUFDO2dCQUMvQ0QsVUFBVUE7O1lBRVhRLGtDQUNDLHFCQUFDZSxnQ0FBZSxzQkFFaEIscUJBQUNDLDhCQUFzQjtnQkFBQ1gsWUFBWUE7MEJBQ2xDLGNBQUEscUJBQUNZLDRCQUFZOzhCQUNYLGNBQUEscUJBQUNDLGlDQUFZO3dCQUNYQyxZQUFZLENBQUNQLE1BQU1ROzRCQUNqQixJQUFJQyxJQUFBQSxzQkFBWSxFQUFDVCxPQUFPO2dDQUN0QixxQkFBTyxxQkFBQ1U7OENBQWtCO21DQUFUVixLQUFLVyxFQUFFOzRCQUMxQjs0QkFFQSxxQkFDRSxxQkFBQ0MsMEJBQVk7Z0NBQ1g5QixnQkFBZ0JBO2dDQUVoQitCLE9BQU9iO2dDQUNQYyxPQUFPeEI7Z0NBQ1BrQixPQUFPQTtnQ0FDUGpCLFNBQVNBOytCQUpKUyxLQUFLVyxFQUFFO3dCQU9sQjt3QkFDQUksT0FBT2hDO3dCQUNQaUMsU0FBUy9CO3dCQUNURCxlQUFlQTt3QkFDZkUsYUFBYUE7Ozs7OztBQU8zQiJ9