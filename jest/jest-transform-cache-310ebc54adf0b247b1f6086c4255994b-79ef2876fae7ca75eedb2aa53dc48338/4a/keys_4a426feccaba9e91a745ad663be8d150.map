{"version":3,"sources":["../src/keys.ts","../src/constants.ts","../src/isomorphicAtob.ts","../src/isomorphicBtoa.ts"],"sourcesContent":["import type { PublishableKey } from '@clerk/types';\n\nimport { DEV_OR_STAGING_SUFFIXES, LEGACY_DEV_INSTANCE_SUFFIXES } from './constants';\nimport { isomorphicAtob } from './isomorphicAtob';\nimport { isomorphicBtoa } from './isomorphicBtoa';\n\ntype ParsePublishableKeyOptions = {\n  fatal?: boolean;\n  domain?: string;\n  proxyUrl?: string;\n};\n\nconst PUBLISHABLE_KEY_LIVE_PREFIX = 'pk_live_';\nconst PUBLISHABLE_KEY_TEST_PREFIX = 'pk_test_';\n\n// This regex matches the publishable like frontend API keys (e.g. foo-bar-13.clerk.accounts.dev)\nconst PUBLISHABLE_FRONTEND_API_DEV_REGEX = /^(([a-z]+)-){2}([0-9]{1,2})\\.clerk\\.accounts([a-z.]*)(dev|com)$/i;\n\nexport function buildPublishableKey(frontendApi: string): string {\n  const isDevKey =\n    PUBLISHABLE_FRONTEND_API_DEV_REGEX.test(frontendApi) ||\n    (frontendApi.startsWith('clerk.') && LEGACY_DEV_INSTANCE_SUFFIXES.some(s => frontendApi.endsWith(s)));\n  const keyPrefix = isDevKey ? PUBLISHABLE_KEY_TEST_PREFIX : PUBLISHABLE_KEY_LIVE_PREFIX;\n  return `${keyPrefix}${isomorphicBtoa(`${frontendApi}$`)}`;\n}\n\nexport function parsePublishableKey(\n  key: string | undefined,\n  options: ParsePublishableKeyOptions & { fatal: true },\n): PublishableKey;\nexport function parsePublishableKey(\n  key: string | undefined,\n  options?: ParsePublishableKeyOptions,\n): PublishableKey | null;\nexport function parsePublishableKey(\n  key: string | undefined,\n  options: { fatal?: boolean; domain?: string; proxyUrl?: string } = {},\n): PublishableKey | null {\n  key = key || '';\n\n  if (!key || !isPublishableKey(key)) {\n    if (options.fatal && !key) {\n      throw new Error(\n        'Publishable key is missing. Ensure that your publishable key is correctly configured. Double-check your environment configuration for your keys, or access them here: https://dashboard.clerk.com/last-active?path=api-keys',\n      );\n    }\n    if (options.fatal && !isPublishableKey(key)) {\n      throw new Error('Publishable key not valid.');\n    }\n    return null;\n  }\n\n  const instanceType = key.startsWith(PUBLISHABLE_KEY_LIVE_PREFIX) ? 'production' : 'development';\n\n  let frontendApi = isomorphicAtob(key.split('_')[2]);\n\n  // TODO(@dimkl): validate packages/clerk-js/src/utils/instance.ts\n  frontendApi = frontendApi.slice(0, -1);\n\n  if (options.proxyUrl) {\n    frontendApi = options.proxyUrl;\n  } else if (instanceType !== 'development' && options.domain) {\n    frontendApi = `clerk.${options.domain}`;\n  }\n\n  return {\n    instanceType,\n    frontendApi,\n  };\n}\n\n/**\n * Checks if the provided key is a valid publishable key.\n *\n * @param key - The key to be checked. Defaults to an empty string if not provided.\n * @returns `true` if 'key' is a valid publishable key, `false` otherwise.\n */\nexport function isPublishableKey(key: string = '') {\n  try {\n    const hasValidPrefix = key.startsWith(PUBLISHABLE_KEY_LIVE_PREFIX) || key.startsWith(PUBLISHABLE_KEY_TEST_PREFIX);\n\n    const hasValidFrontendApiPostfix = isomorphicAtob(key.split('_')[2] || '').endsWith('$');\n\n    return hasValidPrefix && hasValidFrontendApiPostfix;\n  } catch {\n    return false;\n  }\n}\n\nexport function createDevOrStagingUrlCache() {\n  const devOrStagingUrlCache = new Map<string, boolean>();\n\n  return {\n    isDevOrStagingUrl: (url: string | URL): boolean => {\n      if (!url) {\n        return false;\n      }\n\n      const hostname = typeof url === 'string' ? url : url.hostname;\n      let res = devOrStagingUrlCache.get(hostname);\n      if (res === undefined) {\n        res = DEV_OR_STAGING_SUFFIXES.some(s => hostname.endsWith(s));\n        devOrStagingUrlCache.set(hostname, res);\n      }\n      return res;\n    },\n  };\n}\n\nexport function isDevelopmentFromPublishableKey(apiKey: string): boolean {\n  return apiKey.startsWith('test_') || apiKey.startsWith('pk_test_');\n}\n\nexport function isProductionFromPublishableKey(apiKey: string): boolean {\n  return apiKey.startsWith('live_') || apiKey.startsWith('pk_live_');\n}\n\nexport function isDevelopmentFromSecretKey(apiKey: string): boolean {\n  return apiKey.startsWith('test_') || apiKey.startsWith('sk_test_');\n}\n\nexport function isProductionFromSecretKey(apiKey: string): boolean {\n  return apiKey.startsWith('live_') || apiKey.startsWith('sk_live_');\n}\n\nexport async function getCookieSuffix(\n  publishableKey: string,\n  subtle: SubtleCrypto = globalThis.crypto.subtle,\n): Promise<string> {\n  const data = new TextEncoder().encode(publishableKey);\n  const digest = await subtle.digest('sha-1', data);\n  const stringDigest = String.fromCharCode(...new Uint8Array(digest));\n  // Base 64 Encoding with URL and Filename Safe Alphabet: https://datatracker.ietf.org/doc/html/rfc4648#section-5\n  return isomorphicBtoa(stringDigest).replace(/\\+/gi, '-').replace(/\\//gi, '_').substring(0, 8);\n}\n\nexport const getSuffixedCookieName = (cookieName: string, cookieSuffix: string): string => {\n  return `${cookieName}_${cookieSuffix}`;\n};\n","export const LEGACY_DEV_INSTANCE_SUFFIXES = ['.lcl.dev', '.lclstage.dev', '.lclclerk.com'];\nexport const CURRENT_DEV_INSTANCE_SUFFIXES = ['.accounts.dev', '.accountsstage.dev', '.accounts.lclclerk.com'];\nexport const DEV_OR_STAGING_SUFFIXES = [\n  '.lcl.dev',\n  '.stg.dev',\n  '.lclstage.dev',\n  '.stgstage.dev',\n  '.dev.lclclerk.com',\n  '.stg.lclclerk.com',\n  '.accounts.lclclerk.com',\n  'accountsstage.dev',\n  'accounts.dev',\n];\nexport const LOCAL_ENV_SUFFIXES = ['.lcl.dev', 'lclstage.dev', '.lclclerk.com', '.accounts.lclclerk.com'];\nexport const STAGING_ENV_SUFFIXES = ['.accountsstage.dev'];\nexport const LOCAL_API_URL = 'https://api.lclclerk.com';\nexport const STAGING_API_URL = 'https://api.clerkstage.dev';\nexport const PROD_API_URL = 'https://api.clerk.com';\n\n/**\n * Returns the URL for a static image\n * using the new img.clerk.com service\n */\nexport function iconImageUrl(id: string, format: 'svg' | 'jpeg' = 'svg'): string {\n  return `https://img.clerk.com/static/${id}.${format}`;\n}\n","/**\n * A function that decodes a string of data which has been encoded using base-64 encoding.\n * Uses `atob` if available, otherwise uses `Buffer` from `global`. If neither are available, returns the data as-is.\n */\nexport const isomorphicAtob = (data: string) => {\n  if (typeof atob !== 'undefined' && typeof atob === 'function') {\n    return atob(data);\n  } else if (typeof global !== 'undefined' && global.Buffer) {\n    return new global.Buffer(data, 'base64').toString();\n  }\n  return data;\n};\n","export const isomorphicBtoa = (data: string) => {\n  if (typeof btoa !== 'undefined' && typeof btoa === 'function') {\n    return btoa(data);\n  } else if (typeof global !== 'undefined' && global.Buffer) {\n    return new global.Buffer(data).toString('base64');\n  }\n  return data;\n};\n"],"names":["keys_exports","__export","buildPublishableKey","createDevOrStagingUrlCache","getCookieSuffix","getSuffixedCookieName","isDevelopmentFromPublishableKey","isDevelopmentFromSecretKey","isProductionFromPublishableKey","isProductionFromSecretKey","isPublishableKey","parsePublishableKey","module","exports","__toCommonJS","LEGACY_DEV_INSTANCE_SUFFIXES","DEV_OR_STAGING_SUFFIXES","isomorphicAtob","data","atob","global","Buffer","toString","isomorphicBtoa","btoa","PUBLISHABLE_KEY_LIVE_PREFIX","PUBLISHABLE_KEY_TEST_PREFIX","PUBLISHABLE_FRONTEND_API_DEV_REGEX","frontendApi","isDevKey","test","startsWith","some","s","endsWith","keyPrefix","key","options","fatal","Error","instanceType","split","slice","proxyUrl","domain","hasValidPrefix","hasValidFrontendApiPostfix","devOrStagingUrlCache","Map","isDevOrStagingUrl","url","hostname","res","get","set","apiKey","publishableKey","subtle","globalThis","crypto","TextEncoder","encode","digest","stringDigest","String","fromCharCode","Uint8Array","replace","substring","cookieName","cookieSuffix"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}