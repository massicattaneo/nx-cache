0ea059203bdab4ece7beacd8305be2b6
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return PersonaTypeForm;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _core = require("@rp/react/web/mui/core");
const _FeedbackContext = require("./FeedbackContext");
const _FeedbackModestyles = require("./FeedbackMode.styles");
const _feedbacktypes = require("./feedback.types");
function PersonaTypeForm() {
    const { userType, setUserType } = (0, _FeedbackContext.useFeedbackContext)();
    const handleChange = (event)=>{
        setUserType(event.target.value);
    };
    const options = _feedbacktypes.userTypeOptions.map((option)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_core.MenuItem, {
            value: option.value,
            children: option.label
        }, option.value));
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_FeedbackModestyles.FeedbackForm, {
        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_FeedbackModestyles.FormControlStyled, {
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.InputLabel, {
                    id: "persona-type-label",
                    children: "Persona type"
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Select, {
                    disabled: true,
                    value: userType,
                    label: "persona-type",
                    onChange: handleChange,
                    inputProps: {
                        "data-testid": "user-type-options-id"
                    },
                    children: options
                })
            ]
        })
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL2NvbW1vbi9wcm92aWRlcnMvc3JjL0ZlZWRiYWNrQ29udGV4dC9QZXJzb25hVHlwZUZvcm0udHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElucHV0TGFiZWwsIE1lbnVJdGVtLCBTZWxlY3QsIFNlbGVjdENoYW5nZUV2ZW50IH0gZnJvbSBcIkBycC9yZWFjdC93ZWIvbXVpL2NvcmVcIlxuaW1wb3J0IHsgdXNlRmVlZGJhY2tDb250ZXh0IH0gZnJvbSBcIi4vRmVlZGJhY2tDb250ZXh0XCJcbmltcG9ydCB7IEZlZWRiYWNrRm9ybSwgRm9ybUNvbnRyb2xTdHlsZWQgfSBmcm9tIFwiLi9GZWVkYmFja01vZGUuc3R5bGVzXCJcbmltcG9ydCB7IFVzZXJUeXBlcywgdXNlclR5cGVPcHRpb25zIH0gZnJvbSBcIi4vZmVlZGJhY2sudHlwZXNcIlxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBQZXJzb25hVHlwZUZvcm0oKSB7XG4gIGNvbnN0IHsgdXNlclR5cGUsIHNldFVzZXJUeXBlIH0gPSB1c2VGZWVkYmFja0NvbnRleHQoKVxuXG4gIGNvbnN0IGhhbmRsZUNoYW5nZSA9IChldmVudDogU2VsZWN0Q2hhbmdlRXZlbnQpID0+IHtcbiAgICBzZXRVc2VyVHlwZShldmVudC50YXJnZXQudmFsdWUgYXMgVXNlclR5cGVzKVxuICB9XG5cbiAgY29uc3Qgb3B0aW9ucyA9IHVzZXJUeXBlT3B0aW9ucy5tYXAob3B0aW9uID0+IChcbiAgICA8TWVudUl0ZW0ga2V5PXtvcHRpb24udmFsdWV9IHZhbHVlPXtvcHRpb24udmFsdWV9PlxuICAgICAge29wdGlvbi5sYWJlbH1cbiAgICA8L01lbnVJdGVtPlxuICApKVxuXG4gIHJldHVybiAoXG4gICAgPEZlZWRiYWNrRm9ybT5cbiAgICAgIDxGb3JtQ29udHJvbFN0eWxlZD5cbiAgICAgICAgPElucHV0TGFiZWwgaWQ9XCJwZXJzb25hLXR5cGUtbGFiZWxcIj5QZXJzb25hIHR5cGU8L0lucHV0TGFiZWw+XG4gICAgICAgIDxTZWxlY3RcbiAgICAgICAgICBkaXNhYmxlZFxuICAgICAgICAgIHZhbHVlPXt1c2VyVHlwZX1cbiAgICAgICAgICBsYWJlbD1cInBlcnNvbmEtdHlwZVwiXG4gICAgICAgICAgb25DaGFuZ2U9e2hhbmRsZUNoYW5nZX1cbiAgICAgICAgICBpbnB1dFByb3BzPXt7XG4gICAgICAgICAgICBcImRhdGEtdGVzdGlkXCI6IFwidXNlci10eXBlLW9wdGlvbnMtaWRcIixcbiAgICAgICAgICB9fVxuICAgICAgICA+XG4gICAgICAgICAge29wdGlvbnN9XG4gICAgICAgIDwvU2VsZWN0PlxuICAgICAgPC9Gb3JtQ29udHJvbFN0eWxlZD5cbiAgICA8L0ZlZWRiYWNrRm9ybT5cbiAgKVxufVxuIl0sIm5hbWVzIjpbIlBlcnNvbmFUeXBlRm9ybSIsInVzZXJUeXBlIiwic2V0VXNlclR5cGUiLCJ1c2VGZWVkYmFja0NvbnRleHQiLCJoYW5kbGVDaGFuZ2UiLCJldmVudCIsInRhcmdldCIsInZhbHVlIiwib3B0aW9ucyIsInVzZXJUeXBlT3B0aW9ucyIsIm1hcCIsIm9wdGlvbiIsIk1lbnVJdGVtIiwibGFiZWwiLCJGZWVkYmFja0Zvcm0iLCJGb3JtQ29udHJvbFN0eWxlZCIsIklucHV0TGFiZWwiLCJpZCIsIlNlbGVjdCIsImRpc2FibGVkIiwib25DaGFuZ2UiLCJpbnB1dFByb3BzIl0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQUtBOzs7ZUFBd0JBOzs7O3NCQUx3QztpQ0FDN0I7b0NBQ2E7K0JBQ0w7QUFFNUIsU0FBU0E7SUFDdEIsTUFBTSxFQUFFQyxRQUFRLEVBQUVDLFdBQVcsRUFBRSxHQUFHQyxJQUFBQSxtQ0FBa0I7SUFFcEQsTUFBTUMsZUFBZSxDQUFDQztRQUNwQkgsWUFBWUcsTUFBTUMsTUFBTSxDQUFDQyxLQUFLO0lBQ2hDO0lBRUEsTUFBTUMsVUFBVUMsOEJBQWUsQ0FBQ0MsR0FBRyxDQUFDQyxDQUFBQSx1QkFDbEMscUJBQUNDLGNBQVE7WUFBb0JMLE9BQU9JLE9BQU9KLEtBQUs7c0JBQzdDSSxPQUFPRSxLQUFLO1dBREFGLE9BQU9KLEtBQUs7SUFLN0IscUJBQ0UscUJBQUNPLGdDQUFZO2tCQUNYLGNBQUEsc0JBQUNDLHFDQUFpQjs7OEJBQ2hCLHFCQUFDQyxnQkFBVTtvQkFBQ0MsSUFBRzs4QkFBcUI7OzhCQUNwQyxxQkFBQ0MsWUFBTTtvQkFDTEMsUUFBUTtvQkFDUlosT0FBT047b0JBQ1BZLE9BQU07b0JBQ05PLFVBQVVoQjtvQkFDVmlCLFlBQVk7d0JBQ1YsZUFBZTtvQkFDakI7OEJBRUNiOzs7OztBQUtYIn0=