52adabbc77161290a0a408517994311a
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _clerkOverrides = require("../clerkOverrides");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const location = window.location;
describe("clerkOverrides", ()=>{
    beforeEach(()=>{
        // @ts-expect-error - Delete the location property to mock it
        delete window.location;
        window.location = _object_spread_props(_object_spread({}, location), {
            reload: jest.fn()
        });
        window.Clerk = {};
        window.Clerk.openSignUp = jest.fn();
        window.Clerk.openSignIn = jest.fn();
    });
    afterEach(()=>{
        // Clear the mock implementations
        jest.clearAllMocks();
        window.location = location;
    });
    it("should call window.location.reload when openSignUp is called", ()=>{
        var _window_Clerk, _window;
        (0, _clerkOverrides.clerkOverrides)();
        (_window = window) === null || _window === void 0 ? void 0 : (_window_Clerk = _window.Clerk) === null || _window_Clerk === void 0 ? void 0 : _window_Clerk.openSignUp();
        expect(window.location.reload).toHaveBeenCalled();
    });
    it("should call window.location.reload when openSignIn is called", ()=>{
        var _window_Clerk, _window;
        (0, _clerkOverrides.clerkOverrides)();
        (_window = window) === null || _window === void 0 ? void 0 : (_window_Clerk = _window.Clerk) === null || _window_Clerk === void 0 ? void 0 : _window_Clerk.openSignIn();
        expect(window.location.reload).toHaveBeenCalled();
    });
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2FwcHMvY2xpZW50LXdlYi9zcmMvYXBwL3V0aWxzL19fdGVzdHNfXy9jbGVya092ZXJyaWRlcy50ZXN0LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENsZXJrIH0gZnJvbSBcIkBjbGVyay90eXBlc1wiXG5pbXBvcnQgeyBjbGVya092ZXJyaWRlcyB9IGZyb20gXCIuLi9jbGVya092ZXJyaWRlc1wiXG5cbmNvbnN0IGxvY2F0aW9uOiBMb2NhdGlvbiA9IHdpbmRvdy5sb2NhdGlvblxuXG5kZXNjcmliZShcImNsZXJrT3ZlcnJpZGVzXCIsICgpID0+IHtcbiAgYmVmb3JlRWFjaCgoKSA9PiB7XG4gICAgLy8gQHRzLWV4cGVjdC1lcnJvciAtIERlbGV0ZSB0aGUgbG9jYXRpb24gcHJvcGVydHkgdG8gbW9jayBpdFxuICAgIGRlbGV0ZSB3aW5kb3cubG9jYXRpb25cbiAgICB3aW5kb3cubG9jYXRpb24gPSB7XG4gICAgICAuLi5sb2NhdGlvbixcbiAgICAgIHJlbG9hZDogamVzdC5mbigpLFxuICAgIH1cblxuICAgIHdpbmRvdy5DbGVyayA9IHt9IGFzIENsZXJrXG4gICAgd2luZG93LkNsZXJrLm9wZW5TaWduVXAgPSBqZXN0LmZuKClcbiAgICB3aW5kb3cuQ2xlcmsub3BlblNpZ25JbiA9IGplc3QuZm4oKVxuICB9KVxuXG4gIGFmdGVyRWFjaCgoKSA9PiB7XG4gICAgLy8gQ2xlYXIgdGhlIG1vY2sgaW1wbGVtZW50YXRpb25zXG4gICAgamVzdC5jbGVhckFsbE1vY2tzKClcbiAgICB3aW5kb3cubG9jYXRpb24gPSBsb2NhdGlvblxuICB9KVxuXG4gIGl0KFwic2hvdWxkIGNhbGwgd2luZG93LmxvY2F0aW9uLnJlbG9hZCB3aGVuIG9wZW5TaWduVXAgaXMgY2FsbGVkXCIsICgpID0+IHtcbiAgICBjbGVya092ZXJyaWRlcygpXG4gICAgd2luZG93Py5DbGVyaz8ub3BlblNpZ25VcCgpXG4gICAgZXhwZWN0KHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQpLnRvSGF2ZUJlZW5DYWxsZWQoKVxuICB9KVxuXG4gIGl0KFwic2hvdWxkIGNhbGwgd2luZG93LmxvY2F0aW9uLnJlbG9hZCB3aGVuIG9wZW5TaWduSW4gaXMgY2FsbGVkXCIsICgpID0+IHtcbiAgICBjbGVya092ZXJyaWRlcygpXG4gICAgd2luZG93Py5DbGVyaz8ub3BlblNpZ25JbigpXG4gICAgZXhwZWN0KHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQpLnRvSGF2ZUJlZW5DYWxsZWQoKVxuICB9KVxufSlcbiJdLCJuYW1lcyI6WyJsb2NhdGlvbiIsIndpbmRvdyIsImRlc2NyaWJlIiwiYmVmb3JlRWFjaCIsInJlbG9hZCIsImplc3QiLCJmbiIsIkNsZXJrIiwib3BlblNpZ25VcCIsIm9wZW5TaWduSW4iLCJhZnRlckVhY2giLCJjbGVhckFsbE1vY2tzIiwiaXQiLCJjbGVya092ZXJyaWRlcyIsImV4cGVjdCIsInRvSGF2ZUJlZW5DYWxsZWQiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7Z0NBQytCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUUvQixNQUFNQSxXQUFxQkMsT0FBT0QsUUFBUTtBQUUxQ0UsU0FBUyxrQkFBa0I7SUFDekJDLFdBQVc7UUFDVCw2REFBNkQ7UUFDN0QsT0FBT0YsT0FBT0QsUUFBUTtRQUN0QkMsT0FBT0QsUUFBUSxHQUFHLHdDQUNiQTtZQUNISSxRQUFRQyxLQUFLQyxFQUFFOztRQUdqQkwsT0FBT00sS0FBSyxHQUFHLENBQUM7UUFDaEJOLE9BQU9NLEtBQUssQ0FBQ0MsVUFBVSxHQUFHSCxLQUFLQyxFQUFFO1FBQ2pDTCxPQUFPTSxLQUFLLENBQUNFLFVBQVUsR0FBR0osS0FBS0MsRUFBRTtJQUNuQztJQUVBSSxVQUFVO1FBQ1IsaUNBQWlDO1FBQ2pDTCxLQUFLTSxhQUFhO1FBQ2xCVixPQUFPRCxRQUFRLEdBQUdBO0lBQ3BCO0lBRUFZLEdBQUcsZ0VBQWdFO1lBRWpFWCxlQUFBQTtRQURBWSxJQUFBQSw4QkFBYztTQUNkWixVQUFBQSxvQkFBQUEsK0JBQUFBLGdCQUFBQSxRQUFRTSxLQUFLLGNBQWJOLG9DQUFBQSxjQUFlTyxVQUFVO1FBQ3pCTSxPQUFPYixPQUFPRCxRQUFRLENBQUNJLE1BQU0sRUFBRVcsZ0JBQWdCO0lBQ2pEO0lBRUFILEdBQUcsZ0VBQWdFO1lBRWpFWCxlQUFBQTtRQURBWSxJQUFBQSw4QkFBYztTQUNkWixVQUFBQSxvQkFBQUEsK0JBQUFBLGdCQUFBQSxRQUFRTSxLQUFLLGNBQWJOLG9DQUFBQSxjQUFlUSxVQUFVO1FBQ3pCSyxPQUFPYixPQUFPRCxRQUFRLENBQUNJLE1BQU0sRUFBRVcsZ0JBQWdCO0lBQ2pEO0FBQ0YifQ==