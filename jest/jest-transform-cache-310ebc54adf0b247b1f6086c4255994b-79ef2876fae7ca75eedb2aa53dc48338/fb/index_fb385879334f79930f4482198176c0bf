2d551797f5c3dd36f6a4c9f0038aac45
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
const _ssrwindow = require("ssr-window");
const _onTouchStart = /*#__PURE__*/ _interop_require_default(require("./onTouchStart.js"));
const _onTouchMove = /*#__PURE__*/ _interop_require_default(require("./onTouchMove.js"));
const _onTouchEnd = /*#__PURE__*/ _interop_require_default(require("./onTouchEnd.js"));
const _onResize = /*#__PURE__*/ _interop_require_default(require("./onResize.js"));
const _onClick = /*#__PURE__*/ _interop_require_default(require("./onClick.js"));
const _onScroll = /*#__PURE__*/ _interop_require_default(require("./onScroll.js"));
const _onLoad = /*#__PURE__*/ _interop_require_default(require("./onLoad.js"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
let dummyEventAttached = false;
function dummyEventListener() {}
const events = (swiper, method)=>{
    const document = (0, _ssrwindow.getDocument)();
    const { params, el, wrapperEl, device } = swiper;
    const capture = !!params.nested;
    const domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';
    const swiperMethod = method;
    // Touch Events
    el[domMethod]('pointerdown', swiper.onTouchStart, {
        passive: false
    });
    document[domMethod]('pointermove', swiper.onTouchMove, {
        passive: false,
        capture
    });
    document[domMethod]('pointerup', swiper.onTouchEnd, {
        passive: true
    });
    document[domMethod]('pointercancel', swiper.onTouchEnd, {
        passive: true
    });
    document[domMethod]('pointerout', swiper.onTouchEnd, {
        passive: true
    });
    document[domMethod]('pointerleave', swiper.onTouchEnd, {
        passive: true
    });
    // Prevent Links Clicks
    if (params.preventClicks || params.preventClicksPropagation) {
        el[domMethod]('click', swiper.onClick, true);
    }
    if (params.cssMode) {
        wrapperEl[domMethod]('scroll', swiper.onScroll);
    }
    // Resize handler
    if (params.updateOnWindowResize) {
        swiper[swiperMethod](device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', _onResize.default, true);
    } else {
        swiper[swiperMethod]('observerUpdate', _onResize.default, true);
    }
    // Images loader
    el[domMethod]('load', swiper.onLoad, {
        capture: true
    });
};
function attachEvents() {
    const swiper = this;
    const document = (0, _ssrwindow.getDocument)();
    const { params } = swiper;
    swiper.onTouchStart = _onTouchStart.default.bind(swiper);
    swiper.onTouchMove = _onTouchMove.default.bind(swiper);
    swiper.onTouchEnd = _onTouchEnd.default.bind(swiper);
    if (params.cssMode) {
        swiper.onScroll = _onScroll.default.bind(swiper);
    }
    swiper.onClick = _onClick.default.bind(swiper);
    swiper.onLoad = _onLoad.default.bind(swiper);
    if (!dummyEventAttached) {
        document.addEventListener('touchstart', dummyEventListener);
        dummyEventAttached = true;
    }
    events(swiper, 'on');
}
function detachEvents() {
    const swiper = this;
    events(swiper, 'off');
}
const _default = {
    attachEvents,
    detachEvents
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9zd2lwZXIvY29yZS9ldmVudHMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0RG9jdW1lbnQgfSBmcm9tICdzc3Itd2luZG93JztcbmltcG9ydCBvblRvdWNoU3RhcnQgZnJvbSAnLi9vblRvdWNoU3RhcnQuanMnO1xuaW1wb3J0IG9uVG91Y2hNb3ZlIGZyb20gJy4vb25Ub3VjaE1vdmUuanMnO1xuaW1wb3J0IG9uVG91Y2hFbmQgZnJvbSAnLi9vblRvdWNoRW5kLmpzJztcbmltcG9ydCBvblJlc2l6ZSBmcm9tICcuL29uUmVzaXplLmpzJztcbmltcG9ydCBvbkNsaWNrIGZyb20gJy4vb25DbGljay5qcyc7XG5pbXBvcnQgb25TY3JvbGwgZnJvbSAnLi9vblNjcm9sbC5qcyc7XG5pbXBvcnQgb25Mb2FkIGZyb20gJy4vb25Mb2FkLmpzJztcbmxldCBkdW1teUV2ZW50QXR0YWNoZWQgPSBmYWxzZTtcbmZ1bmN0aW9uIGR1bW15RXZlbnRMaXN0ZW5lcigpIHt9XG5jb25zdCBldmVudHMgPSAoc3dpcGVyLCBtZXRob2QpID0+IHtcbiAgY29uc3QgZG9jdW1lbnQgPSBnZXREb2N1bWVudCgpO1xuICBjb25zdCB7XG4gICAgcGFyYW1zLFxuICAgIGVsLFxuICAgIHdyYXBwZXJFbCxcbiAgICBkZXZpY2VcbiAgfSA9IHN3aXBlcjtcbiAgY29uc3QgY2FwdHVyZSA9ICEhcGFyYW1zLm5lc3RlZDtcbiAgY29uc3QgZG9tTWV0aG9kID0gbWV0aG9kID09PSAnb24nID8gJ2FkZEV2ZW50TGlzdGVuZXInIDogJ3JlbW92ZUV2ZW50TGlzdGVuZXInO1xuICBjb25zdCBzd2lwZXJNZXRob2QgPSBtZXRob2Q7XG5cbiAgLy8gVG91Y2ggRXZlbnRzXG4gIGVsW2RvbU1ldGhvZF0oJ3BvaW50ZXJkb3duJywgc3dpcGVyLm9uVG91Y2hTdGFydCwge1xuICAgIHBhc3NpdmU6IGZhbHNlXG4gIH0pO1xuICBkb2N1bWVudFtkb21NZXRob2RdKCdwb2ludGVybW92ZScsIHN3aXBlci5vblRvdWNoTW92ZSwge1xuICAgIHBhc3NpdmU6IGZhbHNlLFxuICAgIGNhcHR1cmVcbiAgfSk7XG4gIGRvY3VtZW50W2RvbU1ldGhvZF0oJ3BvaW50ZXJ1cCcsIHN3aXBlci5vblRvdWNoRW5kLCB7XG4gICAgcGFzc2l2ZTogdHJ1ZVxuICB9KTtcbiAgZG9jdW1lbnRbZG9tTWV0aG9kXSgncG9pbnRlcmNhbmNlbCcsIHN3aXBlci5vblRvdWNoRW5kLCB7XG4gICAgcGFzc2l2ZTogdHJ1ZVxuICB9KTtcbiAgZG9jdW1lbnRbZG9tTWV0aG9kXSgncG9pbnRlcm91dCcsIHN3aXBlci5vblRvdWNoRW5kLCB7XG4gICAgcGFzc2l2ZTogdHJ1ZVxuICB9KTtcbiAgZG9jdW1lbnRbZG9tTWV0aG9kXSgncG9pbnRlcmxlYXZlJywgc3dpcGVyLm9uVG91Y2hFbmQsIHtcbiAgICBwYXNzaXZlOiB0cnVlXG4gIH0pO1xuXG4gIC8vIFByZXZlbnQgTGlua3MgQ2xpY2tzXG4gIGlmIChwYXJhbXMucHJldmVudENsaWNrcyB8fCBwYXJhbXMucHJldmVudENsaWNrc1Byb3BhZ2F0aW9uKSB7XG4gICAgZWxbZG9tTWV0aG9kXSgnY2xpY2snLCBzd2lwZXIub25DbGljaywgdHJ1ZSk7XG4gIH1cbiAgaWYgKHBhcmFtcy5jc3NNb2RlKSB7XG4gICAgd3JhcHBlckVsW2RvbU1ldGhvZF0oJ3Njcm9sbCcsIHN3aXBlci5vblNjcm9sbCk7XG4gIH1cblxuICAvLyBSZXNpemUgaGFuZGxlclxuICBpZiAocGFyYW1zLnVwZGF0ZU9uV2luZG93UmVzaXplKSB7XG4gICAgc3dpcGVyW3N3aXBlck1ldGhvZF0oZGV2aWNlLmlvcyB8fCBkZXZpY2UuYW5kcm9pZCA/ICdyZXNpemUgb3JpZW50YXRpb25jaGFuZ2Ugb2JzZXJ2ZXJVcGRhdGUnIDogJ3Jlc2l6ZSBvYnNlcnZlclVwZGF0ZScsIG9uUmVzaXplLCB0cnVlKTtcbiAgfSBlbHNlIHtcbiAgICBzd2lwZXJbc3dpcGVyTWV0aG9kXSgnb2JzZXJ2ZXJVcGRhdGUnLCBvblJlc2l6ZSwgdHJ1ZSk7XG4gIH1cblxuICAvLyBJbWFnZXMgbG9hZGVyXG4gIGVsW2RvbU1ldGhvZF0oJ2xvYWQnLCBzd2lwZXIub25Mb2FkLCB7XG4gICAgY2FwdHVyZTogdHJ1ZVxuICB9KTtcbn07XG5mdW5jdGlvbiBhdHRhY2hFdmVudHMoKSB7XG4gIGNvbnN0IHN3aXBlciA9IHRoaXM7XG4gIGNvbnN0IGRvY3VtZW50ID0gZ2V0RG9jdW1lbnQoKTtcbiAgY29uc3Qge1xuICAgIHBhcmFtc1xuICB9ID0gc3dpcGVyO1xuICBzd2lwZXIub25Ub3VjaFN0YXJ0ID0gb25Ub3VjaFN0YXJ0LmJpbmQoc3dpcGVyKTtcbiAgc3dpcGVyLm9uVG91Y2hNb3ZlID0gb25Ub3VjaE1vdmUuYmluZChzd2lwZXIpO1xuICBzd2lwZXIub25Ub3VjaEVuZCA9IG9uVG91Y2hFbmQuYmluZChzd2lwZXIpO1xuICBpZiAocGFyYW1zLmNzc01vZGUpIHtcbiAgICBzd2lwZXIub25TY3JvbGwgPSBvblNjcm9sbC5iaW5kKHN3aXBlcik7XG4gIH1cbiAgc3dpcGVyLm9uQ2xpY2sgPSBvbkNsaWNrLmJpbmQoc3dpcGVyKTtcbiAgc3dpcGVyLm9uTG9hZCA9IG9uTG9hZC5iaW5kKHN3aXBlcik7XG4gIGlmICghZHVtbXlFdmVudEF0dGFjaGVkKSB7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hzdGFydCcsIGR1bW15RXZlbnRMaXN0ZW5lcik7XG4gICAgZHVtbXlFdmVudEF0dGFjaGVkID0gdHJ1ZTtcbiAgfVxuICBldmVudHMoc3dpcGVyLCAnb24nKTtcbn1cbmZ1bmN0aW9uIGRldGFjaEV2ZW50cygpIHtcbiAgY29uc3Qgc3dpcGVyID0gdGhpcztcbiAgZXZlbnRzKHN3aXBlciwgJ29mZicpO1xufVxuZXhwb3J0IGRlZmF1bHQge1xuICBhdHRhY2hFdmVudHMsXG4gIGRldGFjaEV2ZW50c1xufTsiXSwibmFtZXMiOlsiZHVtbXlFdmVudEF0dGFjaGVkIiwiZHVtbXlFdmVudExpc3RlbmVyIiwiZXZlbnRzIiwic3dpcGVyIiwibWV0aG9kIiwiZG9jdW1lbnQiLCJnZXREb2N1bWVudCIsInBhcmFtcyIsImVsIiwid3JhcHBlckVsIiwiZGV2aWNlIiwiY2FwdHVyZSIsIm5lc3RlZCIsImRvbU1ldGhvZCIsInN3aXBlck1ldGhvZCIsIm9uVG91Y2hTdGFydCIsInBhc3NpdmUiLCJvblRvdWNoTW92ZSIsIm9uVG91Y2hFbmQiLCJwcmV2ZW50Q2xpY2tzIiwicHJldmVudENsaWNrc1Byb3BhZ2F0aW9uIiwib25DbGljayIsImNzc01vZGUiLCJvblNjcm9sbCIsInVwZGF0ZU9uV2luZG93UmVzaXplIiwiaW9zIiwiYW5kcm9pZCIsIm9uUmVzaXplIiwib25Mb2FkIiwiYXR0YWNoRXZlbnRzIiwiYmluZCIsImFkZEV2ZW50TGlzdGVuZXIiLCJkZXRhY2hFdmVudHMiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkF1RkE7OztlQUFBOzs7MkJBdkY0QjtxRUFDSDtvRUFDRDttRUFDRDtpRUFDRjtnRUFDRDtpRUFDQzsrREFDRjs7Ozs7O0FBQ25CLElBQUlBLHFCQUFxQjtBQUN6QixTQUFTQyxzQkFBc0I7QUFDL0IsTUFBTUMsU0FBUyxDQUFDQyxRQUFRQztJQUN0QixNQUFNQyxXQUFXQyxJQUFBQSxzQkFBVztJQUM1QixNQUFNLEVBQ0pDLE1BQU0sRUFDTkMsRUFBRSxFQUNGQyxTQUFTLEVBQ1RDLE1BQU0sRUFDUCxHQUFHUDtJQUNKLE1BQU1RLFVBQVUsQ0FBQyxDQUFDSixPQUFPSyxNQUFNO0lBQy9CLE1BQU1DLFlBQVlULFdBQVcsT0FBTyxxQkFBcUI7SUFDekQsTUFBTVUsZUFBZVY7SUFFckIsZUFBZTtJQUNmSSxFQUFFLENBQUNLLFVBQVUsQ0FBQyxlQUFlVixPQUFPWSxZQUFZLEVBQUU7UUFDaERDLFNBQVM7SUFDWDtJQUNBWCxRQUFRLENBQUNRLFVBQVUsQ0FBQyxlQUFlVixPQUFPYyxXQUFXLEVBQUU7UUFDckRELFNBQVM7UUFDVEw7SUFDRjtJQUNBTixRQUFRLENBQUNRLFVBQVUsQ0FBQyxhQUFhVixPQUFPZSxVQUFVLEVBQUU7UUFDbERGLFNBQVM7SUFDWDtJQUNBWCxRQUFRLENBQUNRLFVBQVUsQ0FBQyxpQkFBaUJWLE9BQU9lLFVBQVUsRUFBRTtRQUN0REYsU0FBUztJQUNYO0lBQ0FYLFFBQVEsQ0FBQ1EsVUFBVSxDQUFDLGNBQWNWLE9BQU9lLFVBQVUsRUFBRTtRQUNuREYsU0FBUztJQUNYO0lBQ0FYLFFBQVEsQ0FBQ1EsVUFBVSxDQUFDLGdCQUFnQlYsT0FBT2UsVUFBVSxFQUFFO1FBQ3JERixTQUFTO0lBQ1g7SUFFQSx1QkFBdUI7SUFDdkIsSUFBSVQsT0FBT1ksYUFBYSxJQUFJWixPQUFPYSx3QkFBd0IsRUFBRTtRQUMzRFosRUFBRSxDQUFDSyxVQUFVLENBQUMsU0FBU1YsT0FBT2tCLE9BQU8sRUFBRTtJQUN6QztJQUNBLElBQUlkLE9BQU9lLE9BQU8sRUFBRTtRQUNsQmIsU0FBUyxDQUFDSSxVQUFVLENBQUMsVUFBVVYsT0FBT29CLFFBQVE7SUFDaEQ7SUFFQSxpQkFBaUI7SUFDakIsSUFBSWhCLE9BQU9pQixvQkFBb0IsRUFBRTtRQUMvQnJCLE1BQU0sQ0FBQ1csYUFBYSxDQUFDSixPQUFPZSxHQUFHLElBQUlmLE9BQU9nQixPQUFPLEdBQUcsNENBQTRDLHlCQUF5QkMsaUJBQVEsRUFBRTtJQUNySSxPQUFPO1FBQ0x4QixNQUFNLENBQUNXLGFBQWEsQ0FBQyxrQkFBa0JhLGlCQUFRLEVBQUU7SUFDbkQ7SUFFQSxnQkFBZ0I7SUFDaEJuQixFQUFFLENBQUNLLFVBQVUsQ0FBQyxRQUFRVixPQUFPeUIsTUFBTSxFQUFFO1FBQ25DakIsU0FBUztJQUNYO0FBQ0Y7QUFDQSxTQUFTa0I7SUFDUCxNQUFNMUIsU0FBUyxJQUFJO0lBQ25CLE1BQU1FLFdBQVdDLElBQUFBLHNCQUFXO0lBQzVCLE1BQU0sRUFDSkMsTUFBTSxFQUNQLEdBQUdKO0lBQ0pBLE9BQU9ZLFlBQVksR0FBR0EscUJBQVksQ0FBQ2UsSUFBSSxDQUFDM0I7SUFDeENBLE9BQU9jLFdBQVcsR0FBR0Esb0JBQVcsQ0FBQ2EsSUFBSSxDQUFDM0I7SUFDdENBLE9BQU9lLFVBQVUsR0FBR0EsbUJBQVUsQ0FBQ1ksSUFBSSxDQUFDM0I7SUFDcEMsSUFBSUksT0FBT2UsT0FBTyxFQUFFO1FBQ2xCbkIsT0FBT29CLFFBQVEsR0FBR0EsaUJBQVEsQ0FBQ08sSUFBSSxDQUFDM0I7SUFDbEM7SUFDQUEsT0FBT2tCLE9BQU8sR0FBR0EsZ0JBQU8sQ0FBQ1MsSUFBSSxDQUFDM0I7SUFDOUJBLE9BQU95QixNQUFNLEdBQUdBLGVBQU0sQ0FBQ0UsSUFBSSxDQUFDM0I7SUFDNUIsSUFBSSxDQUFDSCxvQkFBb0I7UUFDdkJLLFNBQVMwQixnQkFBZ0IsQ0FBQyxjQUFjOUI7UUFDeENELHFCQUFxQjtJQUN2QjtJQUNBRSxPQUFPQyxRQUFRO0FBQ2pCO0FBQ0EsU0FBUzZCO0lBQ1AsTUFBTTdCLFNBQVMsSUFBSTtJQUNuQkQsT0FBT0MsUUFBUTtBQUNqQjtNQUNBLFdBQWU7SUFDYjBCO0lBQ0FHO0FBQ0YifQ==