{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/node_modules/mdast-util-to-markdown/lib/unsafe.js"],"sourcesContent":["/**\n * @typedef {import('./types.js').ConstructName} ConstructName\n * @typedef {import('./types.js').Unsafe} Unsafe\n */\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain things like attention (emphasis, strong), images, or links.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * @type {Array<ConstructName>}\n */\nconst fullPhrasingSpans = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\n/** @type {Array<Unsafe>} */\nexport const unsafe = [\n  {character: '\\t', after: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  {character: '\\t', before: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  {\n    character: '\\t',\n    inConstruct: ['codeFencedLangGraveAccent', 'codeFencedLangTilde']\n  },\n  {\n    character: '\\r',\n    inConstruct: [\n      'codeFencedLangGraveAccent',\n      'codeFencedLangTilde',\n      'codeFencedMetaGraveAccent',\n      'codeFencedMetaTilde',\n      'destinationLiteral',\n      'headingAtx'\n    ]\n  },\n  {\n    character: '\\n',\n    inConstruct: [\n      'codeFencedLangGraveAccent',\n      'codeFencedLangTilde',\n      'codeFencedMetaGraveAccent',\n      'codeFencedMetaTilde',\n      'destinationLiteral',\n      'headingAtx'\n    ]\n  },\n  {character: ' ', after: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  {character: ' ', before: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  {\n    character: ' ',\n    inConstruct: ['codeFencedLangGraveAccent', 'codeFencedLangTilde']\n  },\n  // An exclamation mark can start an image, if it is followed by a link or\n  // a link reference.\n  {\n    character: '!',\n    after: '\\\\[',\n    inConstruct: 'phrasing',\n    notInConstruct: fullPhrasingSpans\n  },\n  // A quote can break out of a title.\n  {character: '\"', inConstruct: 'titleQuote'},\n  // A number sign could start an ATX heading if it starts a line.\n  {atBreak: true, character: '#'},\n  {character: '#', inConstruct: 'headingAtx', after: '(?:[\\r\\n]|$)'},\n  // Dollar sign and percentage are not used in markdown.\n  // An ampersand could start a character reference.\n  {character: '&', after: '[#A-Za-z]', inConstruct: 'phrasing'},\n  // An apostrophe can break out of a title.\n  {character: \"'\", inConstruct: 'titleApostrophe'},\n  // A left paren could break out of a destination raw.\n  {character: '(', inConstruct: 'destinationRaw'},\n  // A left paren followed by `]` could make something into a link or image.\n  {\n    before: '\\\\]',\n    character: '(',\n    inConstruct: 'phrasing',\n    notInConstruct: fullPhrasingSpans\n  },\n  // A right paren could start a list item or break out of a destination\n  // raw.\n  {atBreak: true, before: '\\\\d+', character: ')'},\n  {character: ')', inConstruct: 'destinationRaw'},\n  // An asterisk can start thematic breaks, list items, emphasis, strong.\n  {atBreak: true, character: '*', after: '(?:[ \\t\\r\\n*])'},\n  {character: '*', inConstruct: 'phrasing', notInConstruct: fullPhrasingSpans},\n  // A plus sign could start a list item.\n  {atBreak: true, character: '+', after: '(?:[ \\t\\r\\n])'},\n  // A dash can start thematic breaks, list items, and setext heading\n  // underlines.\n  {atBreak: true, character: '-', after: '(?:[ \\t\\r\\n-])'},\n  // A dot could start a list item.\n  {atBreak: true, before: '\\\\d+', character: '.', after: '(?:[ \\t\\r\\n]|$)'},\n  // Slash, colon, and semicolon are not used in markdown for constructs.\n  // A less than can start html (flow or text) or an autolink.\n  // HTML could start with an exclamation mark (declaration, cdata, comment),\n  // slash (closing tag), question mark (instruction), or a letter (tag).\n  // An autolink also starts with a letter.\n  // Finally, it could break out of a destination literal.\n  {atBreak: true, character: '<', after: '[!/?A-Za-z]'},\n  {\n    character: '<',\n    after: '[!/?A-Za-z]',\n    inConstruct: 'phrasing',\n    notInConstruct: fullPhrasingSpans\n  },\n  {character: '<', inConstruct: 'destinationLiteral'},\n  // An equals to can start setext heading underlines.\n  {atBreak: true, character: '='},\n  // A greater than can start block quotes and it can break out of a\n  // destination literal.\n  {atBreak: true, character: '>'},\n  {character: '>', inConstruct: 'destinationLiteral'},\n  // Question mark and at sign are not used in markdown for constructs.\n  // A left bracket can start definitions, references, labels,\n  {atBreak: true, character: '['},\n  {character: '[', inConstruct: 'phrasing', notInConstruct: fullPhrasingSpans},\n  {character: '[', inConstruct: ['label', 'reference']},\n  // A backslash can start an escape (when followed by punctuation) or a\n  // hard break (when followed by an eol).\n  // Note: typical escapes are handled in `safe`!\n  {character: '\\\\', after: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  // A right bracket can exit labels.\n  {character: ']', inConstruct: ['label', 'reference']},\n  // Caret is not used in markdown for constructs.\n  // An underscore can start emphasis, strong, or a thematic break.\n  {atBreak: true, character: '_'},\n  {character: '_', inConstruct: 'phrasing', notInConstruct: fullPhrasingSpans},\n  // A grave accent can start code (fenced or text), or it can break out of\n  // a grave accent code fence.\n  {atBreak: true, character: '`'},\n  {\n    character: '`',\n    inConstruct: ['codeFencedLangGraveAccent', 'codeFencedMetaGraveAccent']\n  },\n  {character: '`', inConstruct: 'phrasing', notInConstruct: fullPhrasingSpans},\n  // Left brace, vertical bar, right brace are not used in markdown for\n  // constructs.\n  // A tilde can start code (fenced).\n  {atBreak: true, character: '~'}\n]\n"],"names":["unsafe","fullPhrasingSpans","character","after","inConstruct","before","notInConstruct","atBreak"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA;;;CAGC,GAED;;;;;;;CAOC;;;;+BAWYA;;;eAAAA;;;AAVb,MAAMC,oBAAoB;IACxB;IACA;IACA;IACA;IACA;IACA;CACD;AAGM,MAAMD,SAAS;IACpB;QAACE,WAAW;QAAMC,OAAO;QAAYC,aAAa;IAAU;IAC5D;QAACF,WAAW;QAAMG,QAAQ;QAAYD,aAAa;IAAU;IAC7D;QACEF,WAAW;QACXE,aAAa;YAAC;YAA6B;SAAsB;IACnE;IACA;QACEF,WAAW;QACXE,aAAa;YACX;YACA;YACA;YACA;YACA;YACA;SACD;IACH;IACA;QACEF,WAAW;QACXE,aAAa;YACX;YACA;YACA;YACA;YACA;YACA;SACD;IACH;IACA;QAACF,WAAW;QAAKC,OAAO;QAAYC,aAAa;IAAU;IAC3D;QAACF,WAAW;QAAKG,QAAQ;QAAYD,aAAa;IAAU;IAC5D;QACEF,WAAW;QACXE,aAAa;YAAC;YAA6B;SAAsB;IACnE;IACA,yEAAyE;IACzE,oBAAoB;IACpB;QACEF,WAAW;QACXC,OAAO;QACPC,aAAa;QACbE,gBAAgBL;IAClB;IACA,oCAAoC;IACpC;QAACC,WAAW;QAAKE,aAAa;IAAY;IAC1C,gEAAgE;IAChE;QAACG,SAAS;QAAML,WAAW;IAAG;IAC9B;QAACA,WAAW;QAAKE,aAAa;QAAcD,OAAO;IAAc;IACjE,uDAAuD;IACvD,kDAAkD;IAClD;QAACD,WAAW;QAAKC,OAAO;QAAaC,aAAa;IAAU;IAC5D,0CAA0C;IAC1C;QAACF,WAAW;QAAKE,aAAa;IAAiB;IAC/C,qDAAqD;IACrD;QAACF,WAAW;QAAKE,aAAa;IAAgB;IAC9C,0EAA0E;IAC1E;QACEC,QAAQ;QACRH,WAAW;QACXE,aAAa;QACbE,gBAAgBL;IAClB;IACA,sEAAsE;IACtE,OAAO;IACP;QAACM,SAAS;QAAMF,QAAQ;QAAQH,WAAW;IAAG;IAC9C;QAACA,WAAW;QAAKE,aAAa;IAAgB;IAC9C,uEAAuE;IACvE;QAACG,SAAS;QAAML,WAAW;QAAKC,OAAO;IAAgB;IACvD;QAACD,WAAW;QAAKE,aAAa;QAAYE,gBAAgBL;IAAiB;IAC3E,uCAAuC;IACvC;QAACM,SAAS;QAAML,WAAW;QAAKC,OAAO;IAAe;IACtD,mEAAmE;IACnE,cAAc;IACd;QAACI,SAAS;QAAML,WAAW;QAAKC,OAAO;IAAgB;IACvD,iCAAiC;IACjC;QAACI,SAAS;QAAMF,QAAQ;QAAQH,WAAW;QAAKC,OAAO;IAAiB;IACxE,uEAAuE;IACvE,4DAA4D;IAC5D,2EAA2E;IAC3E,uEAAuE;IACvE,yCAAyC;IACzC,wDAAwD;IACxD;QAACI,SAAS;QAAML,WAAW;QAAKC,OAAO;IAAa;IACpD;QACED,WAAW;QACXC,OAAO;QACPC,aAAa;QACbE,gBAAgBL;IAClB;IACA;QAACC,WAAW;QAAKE,aAAa;IAAoB;IAClD,oDAAoD;IACpD;QAACG,SAAS;QAAML,WAAW;IAAG;IAC9B,kEAAkE;IAClE,uBAAuB;IACvB;QAACK,SAAS;QAAML,WAAW;IAAG;IAC9B;QAACA,WAAW;QAAKE,aAAa;IAAoB;IAClD,qEAAqE;IACrE,4DAA4D;IAC5D;QAACG,SAAS;QAAML,WAAW;IAAG;IAC9B;QAACA,WAAW;QAAKE,aAAa;QAAYE,gBAAgBL;IAAiB;IAC3E;QAACC,WAAW;QAAKE,aAAa;YAAC;YAAS;SAAY;IAAA;IACpD,sEAAsE;IACtE,wCAAwC;IACxC,+CAA+C;IAC/C;QAACF,WAAW;QAAMC,OAAO;QAAYC,aAAa;IAAU;IAC5D,mCAAmC;IACnC;QAACF,WAAW;QAAKE,aAAa;YAAC;YAAS;SAAY;IAAA;IACpD,gDAAgD;IAChD,iEAAiE;IACjE;QAACG,SAAS;QAAML,WAAW;IAAG;IAC9B;QAACA,WAAW;QAAKE,aAAa;QAAYE,gBAAgBL;IAAiB;IAC3E,yEAAyE;IACzE,6BAA6B;IAC7B;QAACM,SAAS;QAAML,WAAW;IAAG;IAC9B;QACEA,WAAW;QACXE,aAAa;YAAC;YAA6B;SAA4B;IACzE;IACA;QAACF,WAAW;QAAKE,aAAa;QAAYE,gBAAgBL;IAAiB;IAC3E,qEAAqE;IACrE,cAAc;IACd,mCAAmC;IACnC;QAACM,SAAS;QAAML,WAAW;IAAG;CAC/B"}