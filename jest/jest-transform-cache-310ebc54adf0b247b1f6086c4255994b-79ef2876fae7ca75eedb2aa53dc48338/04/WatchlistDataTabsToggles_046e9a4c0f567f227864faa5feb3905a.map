{"version":3,"sources":["/Users/mcattaneo/workspace/frontend/libs/react/web/watchlists/src/lib/WatchlistDataTabs/WatchlistDataTabsToggles.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useMemo, useRef, useState } from \"react\"\nimport { useFlags } from \"launchdarkly-react-client-sdk\"\nimport { getlocalOverrideFlags, useDeviceInfo } from \"@rp/react/web/common/hooks\"\nimport { MenuItem, Tab } from \"@rp/react/web/mui/core\"\nimport { ArrowDropDown, ArrowDropUp } from \"@rp/react/web/mui/icons\"\nimport { financeDataTabTablesSchema } from \"../financeDataTabTablesSchema\"\nimport { useWatchlistsDataTabsFeatureFlag } from \"../hooks/useWatchlistsDataTabsFeatureFlag\"\nimport { FinanceDataTabs } from \"../hooks/useWatchlistsFinanceDataTabNavigation\"\nimport { WatchlistFeatureFlags } from \"../types/featureFlags\"\nimport { CustomColumnSelectorModal } from \"./CustomDataView\"\nimport { useCustomColumns } from \"./CustomDataView/hooks/useCustomColumns\"\nimport { UICustomColumn } from \"./CustomDataView/types\"\nimport {\n  STYLED_LAYOUT_CONSTANTS,\n  WatchlistDataTabsMoreButton,\n  WatchlistDataTabsMoreMenu,\n  WatchlistDataTabsTogglesContainer,\n  WatchlistDataTabsTogglesStyled,\n} from \"./WatchlistDataTabsTogglesStyled\"\nimport { watchlistDataTables } from \"./tables\"\n\ntype Props = {\n  dataTab: FinanceDataTabs\n  setDataTab: (tab: FinanceDataTabs) => void\n}\n\ntype TableItem = typeof watchlistDataTables[keyof typeof watchlistDataTables]\n\n// Constants moved to top for better maintainability\nconst LAYOUT_CONSTANTS = {\n  MIN_TAB_WIDTH: STYLED_LAYOUT_CONSTANTS.MIN_TAB_WIDTH,\n  MORE_BUTTON_WIDTH: STYLED_LAYOUT_CONSTANTS.MORE_BUTTON_WIDTH,\n  CONTAINER_PADDING: 16,\n  MOBILE_MAX_TABS: 2,\n  MOBILE_MAX_TAB_WIDTH: STYLED_LAYOUT_CONSTANTS.MOBILE_MAX_TAB_WIDTH,\n  DESKTOP_MAX_TAB_WIDTH: STYLED_LAYOUT_CONSTANTS.DESKTOP_MAX_TAB_WIDTH,\n  RESIZE_DEBOUNCE_MS: 150,\n  // Optimized spacing constants for better space utilization\n  TAB_MARGIN: 8, // theme.spacing(0.5) * 2 (left + right margin)\n  TAB_GAP: 4, // gap between tabs in flex container\n  MORE_BUTTON_MARGIN: 4, // Reduced More button margin for better space usage\n  SAFETY_BUFFER: 8, // Reduced buffer - just enough to prevent squashing\n} as const\n\nfunction WatchlistDataTabsToggles({ dataTab, setDataTab }: Props) {\n  const { isMobile } = useDeviceInfo()\n  const [active] = useWatchlistsDataTabsFeatureFlag()\n  const containerRef = useRef<HTMLDivElement>(null)\n  const resizeTimeoutRef = useRef<ReturnType<typeof setTimeout> | undefined>(undefined)\n  const [visibleTabsCount, setVisibleTabsCount] = useState(active.length)\n  const [moreMenuAnchor, setMoreMenuAnchor] = useState<HTMLElement | null>(null)\n\n  // Feature flag for custom data views\n  const { webBeEnableCustomDataViewsWe } = useFlags<WatchlistFeatureFlags>()\n  const enableCustomDataViews = getlocalOverrideFlags(\n    \"webBeEnableCustomDataViewsWe\",\n    webBeEnableCustomDataViewsWe,\n  )\n\n  // Custom columns functionality\n  const { customColumns, saveColumns } = useCustomColumns()\n  const [isCustomModalOpen, setIsCustomModalOpen] = useState(false)\n\n  // State for custom tab ordering (TradingView-like behavior)\n  const [customTabOrder, setCustomTabOrder] = useState<Array<FinanceDataTabs> | null>(null)\n\n  // Memoize active tables computation to prevent unnecessary re-renders\n  const activeTables = useMemo(() => {\n    // Get the correct order from the schema, then filter by active tabs\n    const schemaOrder = financeDataTabTablesSchema.options\n\n    // Use custom order if available, otherwise use schema order\n    const orderToUse = customTabOrder || schemaOrder\n\n    return orderToUse\n      .filter((tableName: FinanceDataTabs) => {\n        // Check if tab is in active list\n        if (!active.includes(tableName)) return false\n\n        // Filter out custom tab if feature flag is disabled\n        if (tableName === \"custom\" && !enableCustomDataViews) return false\n\n        return true\n      })\n      .map((tableName: FinanceDataTabs) => watchlistDataTables[tableName])\n  }, [active, customTabOrder, enableCustomDataViews])\n\n  // Memoize tab split to prevent unnecessary array operations\n  const { visibleTables, overflowTables, hasOverflow } = useMemo(() => {\n    const visible = activeTables.slice(0, visibleTabsCount)\n    const overflow = activeTables.slice(visibleTabsCount)\n    return {\n      visibleTables: visible,\n      overflowTables: overflow,\n      hasOverflow: overflow.length > 0,\n    }\n  }, [activeTables, visibleTabsCount])\n\n  // Memoize whether current tab is in overflow for More button styling\n  const isCurrentTabInOverflow = useMemo(() => {\n    return overflowTables.some((t: TableItem) => t.tableName === dataTab)\n  }, [overflowTables, dataTab])\n\n  // Calculate how many tabs can fit in the available space\n  const calculateVisibleTabs = useCallback(() => {\n    // Always show at least 1 tab if we have any active tabs\n    if (active.length === 0) {\n      setVisibleTabsCount(0)\n      return\n    }\n\n    if (!containerRef.current || active.length < 2) {\n      setVisibleTabsCount(active.length)\n      return\n    }\n\n    const containerWidth = containerRef.current.offsetWidth - LAYOUT_CONSTANTS.CONTAINER_PADDING\n\n    // Guard against invalid container widths - always show at least 1 tab\n    if (containerWidth <= 0) {\n      setVisibleTabsCount(Math.min(1, active.length))\n      return\n    }\n\n    // On mobile, show fewer tabs by default to prevent squashing\n    if (isMobile) {\n      const mobileMaxTabs = Math.min(LAYOUT_CONSTANTS.MOBILE_MAX_TABS, active.length)\n      setVisibleTabsCount(Math.max(1, mobileMaxTabs))\n      return\n    }\n\n    // Calculate the actual space needed per tab including margins and gaps\n    const spacePerTab = LAYOUT_CONSTANTS.MIN_TAB_WIDTH + LAYOUT_CONSTANTS.TAB_MARGIN\n\n    // Optimized check: Can all tabs fit without overflow?\n    const totalSpaceNeededForAllTabs =\n      active.length * spacePerTab +\n      (active.length - 1) * LAYOUT_CONSTANTS.TAB_GAP +\n      LAYOUT_CONSTANTS.SAFETY_BUFFER\n\n    if (totalSpaceNeededForAllTabs <= containerWidth) {\n      // All tabs fit comfortably\n      setVisibleTabsCount(active.length)\n    } else {\n      // Need More button - calculate space more efficiently\n      const moreButtonTotalWidth =\n        LAYOUT_CONSTANTS.MORE_BUTTON_WIDTH + LAYOUT_CONSTANTS.MORE_BUTTON_MARGIN\n\n      const availableWidthForTabs =\n        containerWidth - moreButtonTotalWidth - LAYOUT_CONSTANTS.SAFETY_BUFFER\n\n      // Calculate maximum tabs that can fit, accounting for gaps between them\n      let maxVisibleTabs = 1 // Start with at least 1 tab\n      let spaceUsed = LAYOUT_CONSTANTS.MIN_TAB_WIDTH + LAYOUT_CONSTANTS.TAB_MARGIN\n\n      // Add tabs one by one until we run out of space\n      for (let i = 2; i <= active.length; i++) {\n        const additionalSpaceNeeded =\n          LAYOUT_CONSTANTS.MIN_TAB_WIDTH + LAYOUT_CONSTANTS.TAB_MARGIN + LAYOUT_CONSTANTS.TAB_GAP\n\n        if (spaceUsed + additionalSpaceNeeded <= availableWidthForTabs) {\n          spaceUsed += additionalSpaceNeeded\n          maxVisibleTabs = i\n        } else {\n          break\n        }\n      }\n\n      // Ensure we always leave at least one tab for overflow (unless we only have 2 total)\n      const visibleCount = active.length <= 2 ? 1 : Math.min(maxVisibleTabs, active.length - 1)\n      setVisibleTabsCount(Math.max(1, visibleCount))\n    }\n  }, [active.length, isMobile])\n\n  // Debounced resize handler to improve performance\n  const handleResize = useCallback(() => {\n    if (resizeTimeoutRef.current) {\n      clearTimeout(resizeTimeoutRef.current)\n    }\n    resizeTimeoutRef.current = setTimeout(() => {\n      calculateVisibleTabs()\n    }, LAYOUT_CONSTANTS.RESIZE_DEBOUNCE_MS)\n  }, [calculateVisibleTabs])\n\n  // Setup ResizeObserver to monitor container size changes\n  // This handles dynamic layout changes beyond just window resizing, such as:\n  // - Sidebars opening/closing\n  // - Other UI elements expanding/collapsing\n  // - CSS changes affecting container width\n  // - Dynamic content loading that affects layout\n  useEffect(() => {\n    calculateVisibleTabs()\n\n    if (!containerRef.current) return\n\n    // ResizeObserver to watch for container dimension changes\n    let resizeObserver: ResizeObserver | null = null\n\n    if (typeof ResizeObserver !== \"undefined\") {\n      resizeObserver = new ResizeObserver(entries => {\n        for (const entry of entries) {\n          // Only trigger if the container width actually changed and is valid\n          const newWidth = entry.contentRect.width\n          if (newWidth > 0) {\n            handleResize()\n          }\n        }\n      })\n\n      resizeObserver.observe(containerRef.current)\n    }\n\n    // Fallback window resize listener for browsers without ResizeObserver support\n    // or edge cases where ResizeObserver might not catch everything\n    window.addEventListener(\"resize\", handleResize)\n\n    return () => {\n      if (resizeObserver) {\n        resizeObserver.disconnect()\n      }\n      window.removeEventListener(\"resize\", handleResize)\n      if (resizeTimeoutRef.current) {\n        clearTimeout(resizeTimeoutRef.current)\n      }\n    }\n  }, [calculateVisibleTabs, handleResize])\n\n  const handleTabChange = useCallback(\n    (newTab: FinanceDataTabs) => {\n      setDataTab(newTab)\n      setMoreMenuAnchor(null) // Close more menu if open\n\n      // TradingView-like behavior: If selecting from overflow menu, reorder tabs\n      const isSelectingFromOverflow = overflowTables.some(t => t.tableName === newTab)\n\n      if (isSelectingFromOverflow && visibleTabsCount > 0) {\n        // Get current order from activeTables\n        const currentOrder = activeTables.map(t => t.tableName)\n\n        // Find the selected tab and remove it from current position\n        const selectedTabIndex = currentOrder.indexOf(newTab)\n        const newOrder = [...currentOrder]\n        newOrder.splice(selectedTabIndex, 1)\n\n        // Insert the selected tab at the last visible position\n        const insertPosition = Math.min(visibleTabsCount - 1, newOrder.length)\n        newOrder.splice(insertPosition, 0, newTab)\n\n        // Update custom tab order\n        setCustomTabOrder(newOrder)\n      }\n    },\n    [setDataTab, overflowTables, visibleTabsCount, activeTables],\n  )\n\n  const handleCustomColumnsSave = useCallback(\n    async (columns: Array<UICustomColumn>) => {\n      try {\n        // Save selected columns\n        await saveColumns(columns)\n\n        // Switch to custom tab after adding columns\n        setDataTab(\"custom\")\n        setIsCustomModalOpen(false)\n      } catch (error) {\n        // Handle error silently or show user-friendly message\n      }\n    },\n    [saveColumns, setDataTab],\n  )\n\n  const handleCustomModalClose = useCallback(() => {\n    setIsCustomModalOpen(false)\n  }, [])\n\n  const handleMoreClick = useCallback((event: React.MouseEvent<HTMLElement>) => {\n    setMoreMenuAnchor(event.currentTarget)\n  }, [])\n\n  const handleMoreClose = useCallback(() => {\n    setMoreMenuAnchor(null)\n  }, [])\n\n  // Handle keyboard navigation for accessibility\n  const handleMenuKeyDown = useCallback((event: React.KeyboardEvent) => {\n    if (event.key === \"Escape\") {\n      setMoreMenuAnchor(null)\n      // Return focus to More button\n      if (containerRef.current) {\n        const moreButton = containerRef.current.querySelector(\n          '[aria-label=\"More data views\"]',\n        ) as HTMLElement\n        moreButton?.focus()\n      }\n    }\n  }, [])\n\n  if (active.length < 2) return null\n\n  const isMenuOpen = Boolean(moreMenuAnchor)\n\n  return (\n    <>\n      <WatchlistDataTabsTogglesContainer\n        ref={containerRef}\n        sx={{\n          \"& .MuiTab-root\": {\n            maxWidth: isMobile\n              ? LAYOUT_CONSTANTS.MOBILE_MAX_TAB_WIDTH\n              : LAYOUT_CONSTANTS.DESKTOP_MAX_TAB_WIDTH,\n          },\n        }}\n      >\n        <WatchlistDataTabsTogglesStyled\n          role=\"tablist\"\n          aria-label=\"Watchlist Data Tabs\"\n          variant=\"standard\"\n          value={isCurrentTabInOverflow ? false : dataTab}\n          onChange={(ev, newValue) => handleTabChange(newValue as FinanceDataTabs)}\n        >\n          {visibleTables.map((table: TableItem) => (\n            <Tab\n              key={table.tableName}\n              iconPosition=\"start\"\n              icon={table.tableIcon}\n              label={table.tableLabel}\n              value={table.tableName}\n            />\n          ))}\n        </WatchlistDataTabsTogglesStyled>\n\n        {hasOverflow && (\n          <>\n            <WatchlistDataTabsMoreButton\n              onClick={handleMoreClick}\n              variant=\"text\"\n              aria-label=\"More data views\"\n              aria-expanded={isMenuOpen}\n              aria-haspopup=\"menu\"\n              isCurrentTabInOverflow={isCurrentTabInOverflow}\n            >\n              More\n              {isMenuOpen ? <ArrowDropUp fontSize=\"small\" /> : <ArrowDropDown fontSize=\"small\" />}\n            </WatchlistDataTabsMoreButton>\n\n            <WatchlistDataTabsMoreMenu\n              anchorEl={moreMenuAnchor}\n              open={isMenuOpen}\n              onClose={handleMoreClose}\n              onKeyDown={handleMenuKeyDown}\n              anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n              transformOrigin={{ vertical: \"top\", horizontal: \"left\" }}\n              MenuListProps={{\n                \"aria-label\": \"Additional data views\",\n              }}\n            >\n              {overflowTables.map((table: TableItem) => (\n                <MenuItem\n                  key={table.tableName}\n                  selected={table.tableName === dataTab}\n                  onClick={() => handleTabChange(table.tableName)}\n                >\n                  {table.tableIcon}\n                  {table.tableLabel}\n                </MenuItem>\n              ))}\n            </WatchlistDataTabsMoreMenu>\n          </>\n        )}\n      </WatchlistDataTabsTogglesContainer>\n\n      {/* Custom Column Selector Modal */}\n      <CustomColumnSelectorModal\n        open={isCustomModalOpen}\n        onClose={handleCustomModalClose}\n        onSave={handleCustomColumnsSave}\n        initialColumns={customColumns}\n      />\n    </>\n  )\n}\n\nexport { WatchlistDataTabsToggles }\n"],"names":["WatchlistDataTabsToggles","LAYOUT_CONSTANTS","MIN_TAB_WIDTH","STYLED_LAYOUT_CONSTANTS","MORE_BUTTON_WIDTH","CONTAINER_PADDING","MOBILE_MAX_TABS","MOBILE_MAX_TAB_WIDTH","DESKTOP_MAX_TAB_WIDTH","RESIZE_DEBOUNCE_MS","TAB_MARGIN","TAB_GAP","MORE_BUTTON_MARGIN","SAFETY_BUFFER","dataTab","setDataTab","isMobile","useDeviceInfo","active","useWatchlistsDataTabsFeatureFlag","containerRef","useRef","resizeTimeoutRef","undefined","visibleTabsCount","setVisibleTabsCount","useState","length","moreMenuAnchor","setMoreMenuAnchor","webBeEnableCustomDataViewsWe","useFlags","enableCustomDataViews","getlocalOverrideFlags","customColumns","saveColumns","useCustomColumns","isCustomModalOpen","setIsCustomModalOpen","customTabOrder","setCustomTabOrder","activeTables","useMemo","schemaOrder","financeDataTabTablesSchema","options","orderToUse","filter","tableName","includes","map","watchlistDataTables","visibleTables","overflowTables","hasOverflow","visible","slice","overflow","isCurrentTabInOverflow","some","t","calculateVisibleTabs","useCallback","current","containerWidth","offsetWidth","Math","min","mobileMaxTabs","max","spacePerTab","totalSpaceNeededForAllTabs","moreButtonTotalWidth","availableWidthForTabs","maxVisibleTabs","spaceUsed","i","additionalSpaceNeeded","visibleCount","handleResize","clearTimeout","setTimeout","useEffect","resizeObserver","ResizeObserver","entries","entry","newWidth","contentRect","width","observe","window","addEventListener","disconnect","removeEventListener","handleTabChange","newTab","isSelectingFromOverflow","currentOrder","selectedTabIndex","indexOf","newOrder","splice","insertPosition","handleCustomColumnsSave","columns","error","handleCustomModalClose","handleMoreClick","event","currentTarget","handleMoreClose","handleMenuKeyDown","key","moreButton","querySelector","focus","isMenuOpen","Boolean","WatchlistDataTabsTogglesContainer","ref","sx","maxWidth","WatchlistDataTabsTogglesStyled","role","aria-label","variant","value","onChange","ev","newValue","table","Tab","iconPosition","icon","tableIcon","label","tableLabel","WatchlistDataTabsMoreButton","onClick","aria-expanded","aria-haspopup","ArrowDropUp","fontSize","ArrowDropDown","WatchlistDataTabsMoreMenu","anchorEl","open","onClose","onKeyDown","anchorOrigin","vertical","horizontal","transformOrigin","MenuListProps","MenuItem","selected","CustomColumnSelectorModal","onSave","initialColumns"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}