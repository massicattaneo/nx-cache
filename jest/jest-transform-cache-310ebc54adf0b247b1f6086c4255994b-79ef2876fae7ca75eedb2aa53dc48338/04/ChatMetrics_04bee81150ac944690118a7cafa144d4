af3db86f07b729ab26f8952cab0e6dde
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "ChatMetrics", {
    enumerable: true,
    get: function() {
        return ChatMetrics;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _core = require("@rp/react/web/mui/core");
const _icons = require("@rp/react/web/mui/icons");
const LABELS = [
    "First Audit",
    "First Token",
    "Sources",
    "Completed"
];
const timeFormat = new Intl.DateTimeFormat("en", {
    hour: "numeric",
    minute: "numeric",
    second: "numeric",
    hour12: false
});
const ChatMetrics = ({ timings, interactionId })=>{
    if (!timings || timings.start === undefined) {
        return null;
    }
    const timestamps = [
        timings.audit,
        timings.firstToken,
        timings.sources,
        timings.completed
    ];
    const durations = [
        timings.audit !== undefined ? (timings.audit - timings.start) / 1000 : undefined,
        timings.firstToken !== undefined ? (timings.firstToken - timings.start) / 1000 : undefined,
        timings.sources !== undefined ? (timings.sources - timings.start) / 1000 : undefined,
        timings.completed !== undefined ? (timings.completed - timings.start) / 1000 : undefined
    ];
    const validDurations = durations.filter((duration)=>duration !== undefined);
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
        sx: {
            backgroundColor: "elevation.dp02",
            borderRadius: 1,
            p: 2,
            mb: 3
        },
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Box, {
                sx: {
                    width: 1,
                    display: "flex",
                    justifyContent: "space-between",
                    gap: 2,
                    alignItems: "center"
                },
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Typography, {
                        sx: {
                            flexShrink: 0
                        },
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                                component: "span",
                                sx: {
                                    mr: 0.5,
                                    color: "text.secondary",
                                    fontSize: 14
                                },
                                children: timeFormat.format(timings.start)
                            }),
                            "Start"
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                        sx: {
                            fontSize: 12,
                            color: "text.secondary"
                        },
                        children: interactionId
                    })
                ]
            }),
            validDurations.map((duration, index)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Typography, {
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                            component: "span",
                            sx: {
                                mr: 0.5,
                                color: "text.secondary",
                                fontSize: 14
                            },
                            children: timeFormat.format(timestamps[index])
                        }),
                        LABELS[index],
                        ": ",
                        duration,
                        "s"
                    ]
                }, index)),
            timings.profiling && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.Accordion, {
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.AccordionSummary, {
                        expandIcon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.ExpandMore, {}),
                        sx: {
                            backgroundColor: "elevation.dp08",
                            mt: 2
                        },
                        children: "API Profiling"
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.AccordionDetails, {
                        sx: {
                            backgroundColor: "elevation.dp08"
                        },
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Table, {
                            size: "small",
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.TableBody, {
                                children: timings.profiling && Object.entries(timings.profiling).map(([key, value])=>/*#__PURE__*/ (0, _jsxruntime.jsxs)(_core.TableRow, {
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.TableCell, {
                                                children: key
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.TableCell, {
                                                sx: {
                                                    display: "flex",
                                                    wordBreak: "break-all"
                                                },
                                                children: Array.isArray(value) ? value.map((v, i)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_core.Typography, {
                                                        mr: 1,
                                                        children: v !== null && v !== void 0 ? v : "null"
                                                    }, i)) : value !== null && value !== void 0 ? value : "null"
                                            })
                                        ]
                                    }, key))
                            })
                        })
                    })
                ]
            })
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,