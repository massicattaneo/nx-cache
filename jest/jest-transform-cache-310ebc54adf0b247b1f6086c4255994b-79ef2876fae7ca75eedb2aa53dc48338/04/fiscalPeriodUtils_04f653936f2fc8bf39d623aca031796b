4bb65afcefdb6dc9c86edbe333028aca
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    getBalanceSheetFiscalPeriod: function() {
        return getBalanceSheetFiscalPeriod;
    },
    getCashFlowFiscalPeriod: function() {
        return getCashFlowFiscalPeriod;
    },
    getFiscalPeriod: function() {
        return getFiscalPeriod;
    },
    getIncomeStatementFiscalPeriod: function() {
        return getIncomeStatementFiscalPeriod;
    }
});
function getFiscalPeriod(rowData, endpoint) {
    var _rowData_financialData_endpoint;
    const data = (_rowData_financialData_endpoint = rowData.financialData[endpoint]) === null || _rowData_financialData_endpoint === void 0 ? void 0 : _rowData_financialData_endpoint.data;
    const fiscalYear = data === null || data === void 0 ? void 0 : data.fiscalYear;
    const period = data === null || data === void 0 ? void 0 : data.period;
    return [
        period,
        fiscalYear
    ].filter(Boolean).join(" ");
}
const getIncomeStatementFiscalPeriod = (rowData)=>getFiscalPeriod(rowData, "companyIncomeStatement");
const getCashFlowFiscalPeriod = (rowData)=>getFiscalPeriod(rowData, "companyCashFlowStatement");
const getBalanceSheetFiscalPeriod = (rowData)=>getFiscalPeriod(rowData, "companyBalanceStatement");

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tY2F0dGFuZW8vd29ya3NwYWNlL2Zyb250ZW5kL2xpYnMvcmVhY3Qvd2ViL3dhdGNobGlzdHMvc3JjL2xpYi9XYXRjaGxpc3REYXRhVGFicy91dGlscy9maXNjYWxQZXJpb2RVdGlscy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IFdhdGNobGlzdERhdGFUYWJzVGFibGVFbnRpdHkgfSBmcm9tIFwiLi4vV2F0Y2hsaXN0RGF0YVRhYnNUYWJsZS50eXBlc1wiXG5cbnR5cGUgRmluYW5jaWFsRW5kcG9pbnQgPVxuICB8IFwiY29tcGFueUluY29tZVN0YXRlbWVudFwiXG4gIHwgXCJjb21wYW55Q2FzaEZsb3dTdGF0ZW1lbnRcIlxuICB8IFwiY29tcGFueUJhbGFuY2VTdGF0ZW1lbnRcIlxuXG4vKipcbiAqIEV4dHJhY3RzIGFuZCBjb25zdHJ1Y3RzIHRoZSBmaXNjYWwgcGVyaW9kIHN0cmluZyBmcm9tIGZpbmFuY2lhbCBkYXRhXG4gKiBAcGFyYW0gcm93RGF0YSAtIFRoZSB0YWJsZSByb3cgZGF0YSBjb250YWluaW5nIGZpbmFuY2lhbCBpbmZvcm1hdGlvblxuICogQHBhcmFtIGVuZHBvaW50IC0gVGhlIHNwZWNpZmljIGZpbmFuY2lhbCBlbmRwb2ludCB0byBleHRyYWN0IGRhdGEgZnJvbVxuICogQHJldHVybnMgRm9ybWF0dGVkIGZpc2NhbCBwZXJpb2Qgc3RyaW5nIChlLmcuLCBcIlExIDIwMjRcIiwgXCIyMDI0XCIpXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRGaXNjYWxQZXJpb2QoXG4gIHJvd0RhdGE6IFdhdGNobGlzdERhdGFUYWJzVGFibGVFbnRpdHksXG4gIGVuZHBvaW50OiBGaW5hbmNpYWxFbmRwb2ludCxcbik6IHN0cmluZyB7XG4gIGNvbnN0IGRhdGEgPSByb3dEYXRhLmZpbmFuY2lhbERhdGFbZW5kcG9pbnRdPy5kYXRhXG4gIGNvbnN0IGZpc2NhbFllYXIgPSBkYXRhPy5maXNjYWxZZWFyXG4gIGNvbnN0IHBlcmlvZCA9IGRhdGE/LnBlcmlvZFxuXG4gIHJldHVybiBbcGVyaW9kLCBmaXNjYWxZZWFyXS5maWx0ZXIoQm9vbGVhbikuam9pbihcIiBcIilcbn1cblxuLyoqXG4gKiBDb252ZW5pZW5jZSBmdW5jdGlvbnMgZm9yIHNwZWNpZmljIGVuZHBvaW50c1xuICovXG5leHBvcnQgY29uc3QgZ2V0SW5jb21lU3RhdGVtZW50RmlzY2FsUGVyaW9kID0gKHJvd0RhdGE6IFdhdGNobGlzdERhdGFUYWJzVGFibGVFbnRpdHkpID0+XG4gIGdldEZpc2NhbFBlcmlvZChyb3dEYXRhLCBcImNvbXBhbnlJbmNvbWVTdGF0ZW1lbnRcIilcblxuZXhwb3J0IGNvbnN0IGdldENhc2hGbG93RmlzY2FsUGVyaW9kID0gKHJvd0RhdGE6IFdhdGNobGlzdERhdGFUYWJzVGFibGVFbnRpdHkpID0+XG4gIGdldEZpc2NhbFBlcmlvZChyb3dEYXRhLCBcImNvbXBhbnlDYXNoRmxvd1N0YXRlbWVudFwiKVxuXG5leHBvcnQgY29uc3QgZ2V0QmFsYW5jZVNoZWV0RmlzY2FsUGVyaW9kID0gKHJvd0RhdGE6IFdhdGNobGlzdERhdGFUYWJzVGFibGVFbnRpdHkpID0+XG4gIGdldEZpc2NhbFBlcmlvZChyb3dEYXRhLCBcImNvbXBhbnlCYWxhbmNlU3RhdGVtZW50XCIpXG4iXSwibmFtZXMiOlsiZ2V0QmFsYW5jZVNoZWV0RmlzY2FsUGVyaW9kIiwiZ2V0Q2FzaEZsb3dGaXNjYWxQZXJpb2QiLCJnZXRGaXNjYWxQZXJpb2QiLCJnZXRJbmNvbWVTdGF0ZW1lbnRGaXNjYWxQZXJpb2QiLCJyb3dEYXRhIiwiZW5kcG9pbnQiLCJkYXRhIiwiZmluYW5jaWFsRGF0YSIsImZpc2NhbFllYXIiLCJwZXJpb2QiLCJmaWx0ZXIiLCJCb29sZWFuIiwiam9pbiJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0lBaUNhQSwyQkFBMkI7ZUFBM0JBOztJQUhBQyx1QkFBdUI7ZUFBdkJBOztJQWpCR0MsZUFBZTtlQUFmQTs7SUFjSEMsOEJBQThCO2VBQTlCQTs7O0FBZE4sU0FBU0QsZ0JBQ2RFLE9BQXFDLEVBQ3JDQyxRQUEyQjtRQUVkRDtJQUFiLE1BQU1FLFFBQU9GLGtDQUFBQSxRQUFRRyxhQUFhLENBQUNGLFNBQVMsY0FBL0JELHNEQUFBQSxnQ0FBaUNFLElBQUk7SUFDbEQsTUFBTUUsYUFBYUYsaUJBQUFBLDJCQUFBQSxLQUFNRSxVQUFVO0lBQ25DLE1BQU1DLFNBQVNILGlCQUFBQSwyQkFBQUEsS0FBTUcsTUFBTTtJQUUzQixPQUFPO1FBQUNBO1FBQVFEO0tBQVcsQ0FBQ0UsTUFBTSxDQUFDQyxTQUFTQyxJQUFJLENBQUM7QUFDbkQ7QUFLTyxNQUFNVCxpQ0FBaUMsQ0FBQ0MsVUFDN0NGLGdCQUFnQkUsU0FBUztBQUVwQixNQUFNSCwwQkFBMEIsQ0FBQ0csVUFDdENGLGdCQUFnQkUsU0FBUztBQUVwQixNQUFNSiw4QkFBOEIsQ0FBQ0ksVUFDMUNGLGdCQUFnQkUsU0FBUyJ9